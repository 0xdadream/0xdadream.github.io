<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Fri, 02 May 2025 12:25:00 +0800</pubDate>
        <lastBuildDate>Fri, 02 May 2025 12:25:00 +0800</lastBuildDate>
        <category>intel</category>
        <category>tip</category>
        <category>tips</category>
        <category>re</category>
        <category>工具</category>
        <category>安装</category>
        <category>Java</category>
        <category>linux</category>
        <category>教程</category>
        <category>环境</category>
        <category>bug</category>
        <category>web</category>
        <category>wp</category>
        <category>攻防世界</category>
        <category>windows</category>
        <category>BUUCTF</category>
        <category>server</category>
        <category>wall</category>
        <category>comfyui</category>
        <category>conda</category>
        <category>powershell</category>
        <category>tools</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>emby</category>
        <category>python</category>
        <category>git</category>
        <category>google</category>
        <category>java</category>
        <category>命令</category>
        <category>学习</category>
        <category>文件上传</category>
        <category>php</category>
        <category>命令行</category>
        <category>区块链</category>
        <category>汇编</category>
        <category>密码学</category>
        <category>i春秋</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/05/02/whl-wen-jian-ming-hou-zhui/</guid>
            <title>whl文件名后缀</title>
            <link>https://0xdadream.github.io/2025/05/02/whl-wen-jian-ming-hou-zhui/</link>
            <category>python</category>
            <pubDate>Fri, 02 May 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;whl文件名后缀&#34;&gt;&lt;a href=&#34;#whl文件名后缀&#34; class=&#34;headerlink&#34; title=&#34;whl文件名后缀&#34;&gt;&lt;/a&gt;whl文件名后缀&lt;/h1&gt;&lt;h2 id=&#34;1-Wheel-文件名的基本格式&#34;&gt;&lt;a href=&#34;#1-Wheel-文件名的基本格式&#34; class=&#34;headerlink&#34; title=&#34;1. Wheel 文件名的基本格式&#34;&gt;&lt;/a&gt;1. Wheel 文件名的基本格式&lt;/h2&gt;&lt;p&gt;Wheel 名称遵循 PEP 427 规范，通用格式为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-ruby&#34; data-language=&#34;ruby&#34;&gt;&lt;code class=&#34;language-ruby&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;distribution&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;build tag&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;python tag&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;abi tag&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;platform tag&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;whl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;distribution&lt;/strong&gt;：包名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;version&lt;/strong&gt;：包版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;build tag&lt;/strong&gt;（可选）：构建号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;python tag&lt;/strong&gt;：支持的 Python 解释器及版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;abi tag&lt;/strong&gt;：二进制兼容的 ABI（应用二进制接口）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;platform tag&lt;/strong&gt;：目标操作系统和硬件平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;mypkg-1.2.3-1-cp39-cp39-manylinux2014_x86_64.whl
       │    │   │    │            └──── platform tag
       │    │   │    └──────────────── abi tag
       │    │   └─────────────────────── python tag
       │    └─────────────────────────── build tag
       └─────────────────────────────── distribution-version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;2-build-tag&#34;&gt;&lt;a href=&#34;#2-build-tag&#34; class=&#34;headerlink&#34; title=&#34;2. build tag&#34;&gt;&lt;/a&gt;2. build tag&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;格式：一个整数，有时候也会带字母或其他标识&lt;/li&gt;
&lt;li&gt;用途：同一版本的多次编译时区分，比如针对不同源或依赖变动的二进制重构&lt;/li&gt;
&lt;li&gt;示例：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mypkg-1.0-1-...&lt;/code&gt; 与 &lt;code&gt;mypkg-1.0-2-...&lt;/code&gt; 表示同一版本的第 1 次和第 2 次构建&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-python-tag&#34;&gt;&lt;a href=&#34;#3-python-tag&#34; class=&#34;headerlink&#34; title=&#34;3. python tag&#34;&gt;&lt;/a&gt;3. python tag&lt;/h2&gt;&lt;p&gt;指明哪些 Python 解释器及版本可以安装该 Wheel。常见格式及含义：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag 示例&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;py3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;支持所有 Python 3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;py36&lt;/code&gt; 、&lt;code&gt;py37&lt;/code&gt;…&lt;/td&gt;
&lt;td&gt;专用于 Python 3.6、3.7 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;py2.py3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;同时支持 Python 2.x 和 3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cp39&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPython 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cp310&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPython 3.10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pp37&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PyPy 3.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;jy37&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Jython 2.7（标识为 &lt;code&gt;jy27&lt;/code&gt;）等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;前缀&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;py&lt;/code&gt;：纯 Python 实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp&lt;/code&gt;：CPython（二进制扩展）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pp&lt;/code&gt;：PyPy&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jy&lt;/code&gt;：Jython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-abi-tag&#34;&gt;&lt;a href=&#34;#4-abi-tag&#34; class=&#34;headerlink&#34; title=&#34;4. abi tag&#34;&gt;&lt;/a&gt;4. abi tag&lt;/h2&gt;&lt;p&gt;ABI（Application Binary Interface）决定了编译的 C 扩展与解释器的二进制兼容性。常见 ABI tag：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag 示例&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;纯 Python 包，不含 C 扩展&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;abi3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用了稳定的“limited API”（PEP 384），跨多个 CPython 版本兼容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cp39&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;针对 CPython 3.9 标准 ABI 编译&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cp39m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPython 3.9 + pymalloc enabled（&lt;code&gt;m&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cp310d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPython 3.10 Debug build（&lt;code&gt;d&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;python tag&lt;/code&gt; 与 &lt;code&gt;abi tag&lt;/code&gt; 一致（如 &lt;code&gt;cp39-cp39&lt;/code&gt;），表示该包针对该版本的标准 ABI 编译&lt;/li&gt;
&lt;li&gt;带后缀的如 &lt;code&gt;m&lt;/code&gt;、&lt;code&gt;d&lt;/code&gt;、&lt;code&gt;u&lt;/code&gt; 等表示特定的编译选项&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-platform-tag&#34;&gt;&lt;a href=&#34;#5-platform-tag&#34; class=&#34;headerlink&#34; title=&#34;5. platform tag&#34;&gt;&lt;/a&gt;5. platform tag&lt;/h2&gt;&lt;p&gt;描述该 Wheel 的目标操作系统、系统版本和 CPU 架构。常见平台 tag 及示例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;platform tag 示例&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;manylinux1_x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Linux x86_64，符合 Manylinux1 标准&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;manylinux2014_aarch64&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Linux ARM64，符合 Manylinux2014 标准&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;win_amd64&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Windows 64 位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;win32&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Windows 32 位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;macosx_10_9_x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;macOS 10.9+ on x86_64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;macosx_11_0_arm64&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;macOS 11+ on Apple Silicon (ARM64)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;any&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;平台无关（纯 Python 包）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;manylinux&lt;/strong&gt; 系列：用于在大多数 Linux 发行版上安装二进制扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;macosx&lt;/strong&gt;：通常还会带上最低支持的 macOS 版本号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;any&lt;/strong&gt;：完全纯 Python，无平台限制&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-综合示例解析&#34;&gt;&lt;a href=&#34;#6-综合示例解析&#34; class=&#34;headerlink&#34; title=&#34;6. 综合示例解析&#34;&gt;&lt;/a&gt;6. 综合示例解析&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Wheel 名称&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;requests-2.28.1-py3-none-any.whl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;纯 Python 包 &lt;code&gt;requests&lt;/code&gt; v2.28.1，支持所有 Python 3，平台无关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;numpy-1.24.0-cp39-cp39-manylinux2014_x86_64.whl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;numpy&lt;/code&gt; v1.24.0，CPython 3.9 标准 ABI，Linux x86_64 二进制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Pillow-9.3.0-cp310-cp310-win_amd64.whl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Pillow&lt;/code&gt; v9.3.0，CPython 3.10，Windows 64 位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;somepkg-0.1.0-2-cp38-abi3-manylinux1_x86_64.whl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;somepkg&lt;/code&gt; v0.1.0，第 2 次构建，CPython 3.8 编译但使用 abi3，Linux x86_64&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-为什么要了解这些后缀&#34;&gt;&lt;a href=&#34;#7-为什么要了解这些后缀&#34; class=&#34;headerlink&#34; title=&#34;7. 为什么要了解这些后缀&#34;&gt;&lt;/a&gt;7. 为什么要了解这些后缀&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;避免安装失败&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install package.whl&lt;/code&gt; 时，若当前环境的 Python 版本、ABI 或平台与 Wheel 不匹配，安装会被跳过或报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高下载速度&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;选择预编译好的 &lt;code&gt;.whl&lt;/code&gt;，可免去源码编译时间，尤其是大型 C 扩展库（如 NumPy、SciPy）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台兼容&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;理解 &lt;code&gt;manylinux&lt;/code&gt;、&lt;code&gt;macosx&lt;/code&gt;、&lt;code&gt;win&lt;/code&gt; 等标签，有助于在不同系统间无痛部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-查找可用的-Wheel&#34;&gt;&lt;a href=&#34;#8-查找可用的-Wheel&#34; class=&#34;headerlink&#34; title=&#34;8. 查找可用的 Wheel&#34;&gt;&lt;/a&gt;8. 查找可用的 Wheel&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip index versions PACKAGE_NAME&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; PACKAGE_NAME --only-binary&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;:all:&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;第一个命令列出所有可用版本及对应的 Wheel&lt;/li&gt;
&lt;li&gt;第二个命令强制只使用二进制 Wheel 安装&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/04/10/linux-an-zhuang-conda-jiao-cheng/</guid>
            <title>Linux安装Conda教程</title>
            <link>https://0xdadream.github.io/2025/04/10/linux-an-zhuang-conda-jiao-cheng/</link>
            <category>conda</category>
            <pubDate>Thu, 10 Apr 2025 13:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Linux安装Conda教程&#34;&gt;&lt;a href=&#34;#Linux安装Conda教程&#34; class=&#34;headerlink&#34; title=&#34;Linux安装Conda教程&#34;&gt;&lt;/a&gt;Linux安装Conda教程&lt;/h1&gt;&lt;h2 id=&#34;1-准备工作&#34;&gt;&lt;a href=&#34;#1-准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 准备工作&#34;&gt;&lt;/a&gt;1. 准备工作&lt;/h2&gt;&lt;h3 id=&#34;1-1-系统要求&#34;&gt;&lt;a href=&#34;#1-1-系统要求&#34; class=&#34;headerlink&#34; title=&#34;1.1 系统要求&#34;&gt;&lt;/a&gt;1.1 系统要求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;操作系统：大多数 Linux 发行版（如 Ubuntu、Debian、CentOS、Fedora 等）都可使用。&lt;/li&gt;
&lt;li&gt;权限：建议使用普通用户（避免使用 root 权限直接安装）来安装并管理 conda 环境。&lt;/li&gt;
&lt;li&gt;网络连接：需要下载安装脚本，可以使用 &lt;code&gt;wget&lt;/code&gt; 或 &lt;code&gt;curl&lt;/code&gt; 工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-安装前依赖（可选）&#34;&gt;&lt;a href=&#34;#1-2-安装前依赖（可选）&#34; class=&#34;headerlink&#34; title=&#34;1.2 安装前依赖（可选）&#34;&gt;&lt;/a&gt;1.2 安装前依赖（可选）&lt;/h3&gt;&lt;p&gt;大多数 Linux 系统都自带 &lt;code&gt;bash&lt;/code&gt; 和基本工具。如果你的系统缺少 wget 或 curl，可以使用包管理器安装，例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# Ubuntu / Debian 系统&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# CentOS / Fedora 系统&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;2-下载-Miniconda-安装脚本&#34;&gt;&lt;a href=&#34;#2-下载-Miniconda-安装脚本&#34; class=&#34;headerlink&#34; title=&#34;2. 下载 Miniconda 安装脚本&#34;&gt;&lt;/a&gt;2. 下载 Miniconda 安装脚本&lt;/h2&gt;&lt;p&gt;Miniconda 提供了适用于 Linux 的安装脚本。可以按以下步骤操作：&lt;/p&gt;
&lt;h3 id=&#34;2-1-选择合适的安装程序&#34;&gt;&lt;a href=&#34;#2-1-选择合适的安装程序&#34; class=&#34;headerlink&#34; title=&#34;2.1 选择合适的安装程序&#34;&gt;&lt;/a&gt;2.1 选择合适的安装程序&lt;/h3&gt;&lt;p&gt;对于大多数 64 位系统，下载最新的 Miniconda3 版本。安装脚本文件名为 &lt;code&gt;Miniconda3-latest-Linux-x86_64.sh&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;2-2-使用-wget-或-curl-下载&#34;&gt;&lt;a href=&#34;#2-2-使用-wget-或-curl-下载&#34; class=&#34;headerlink&#34; title=&#34;2.2 使用 wget 或 curl 下载&#34;&gt;&lt;/a&gt;2.2 使用 wget 或 curl 下载&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;wget&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或使用 &lt;code&gt;curl&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-O&lt;/span&gt; https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;3-验证安装包完整性（可选）&#34;&gt;&lt;a href=&#34;#3-验证安装包完整性（可选）&#34; class=&#34;headerlink&#34; title=&#34;3. 验证安装包完整性（可选）&#34;&gt;&lt;/a&gt;3. 验证安装包完整性（可选）&lt;/h2&gt;&lt;p&gt;为确保下载的文件未被破坏或篡改，可以检查 SHA256 校验和。你需要从 Miniconda 官方页面 查看对应版本的正确 SHA256 值，然后执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sha256sum Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;比较输出结果和官方提供的校验和。如果一致，则可以继续安装。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-安装-Miniconda&#34;&gt;&lt;a href=&#34;#4-安装-Miniconda&#34; class=&#34;headerlink&#34; title=&#34;4. 安装 Miniconda&#34;&gt;&lt;/a&gt;4. 安装 Miniconda&lt;/h2&gt;&lt;h3 id=&#34;4-1-赋予执行权限&#34;&gt;&lt;a href=&#34;#4-1-赋予执行权限&#34; class=&#34;headerlink&#34; title=&#34;4.1 赋予执行权限&#34;&gt;&lt;/a&gt;4.1 赋予执行权限&lt;/h3&gt;&lt;p&gt;首先为下载的脚本添加执行权限：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-2-运行安装脚本&#34;&gt;&lt;a href=&#34;#4-2-运行安装脚本&#34; class=&#34;headerlink&#34; title=&#34;4.2 运行安装脚本&#34;&gt;&lt;/a&gt;4.2 运行安装脚本&lt;/h3&gt;&lt;p&gt;使用 bash 执行安装脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-3-安装过程中注意事项&#34;&gt;&lt;a href=&#34;#4-3-安装过程中注意事项&#34; class=&#34;headerlink&#34; title=&#34;4.3 安装过程中注意事项&#34;&gt;&lt;/a&gt;4.3 安装过程中注意事项&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;阅读许可协议&lt;/strong&gt;：安装脚本开始时会显示许可协议，需要按下 &lt;code&gt;Enter&lt;/code&gt; 浏览内容，然后输入 &lt;code&gt;yes&lt;/code&gt; 接受许可协议。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择安装路径&lt;/strong&gt;：脚本默认建议安装到用户主目录下的 &lt;code&gt;miniconda3&lt;/code&gt; 目录。你可以按回车键接受默认设置，也可以输入自定义路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;初始化 conda&lt;/strong&gt;：安装过程中会询问是否初始化 conda（即修改 shell 启动文件，如 &lt;code&gt;~/.bashrc&lt;/code&gt;）。推荐选择 “yes”，这样每次登录时都会自动加载 conda 环境配置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装完成后，安装脚本会显示 “installation finished.” 的提示。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-激活-conda-环境&#34;&gt;&lt;a href=&#34;#5-激活-conda-环境&#34; class=&#34;headerlink&#34; title=&#34;5. 激活 conda 环境&#34;&gt;&lt;/a&gt;5. 激活 conda 环境&lt;/h2&gt;&lt;p&gt;如果安装时选择了初始化，则会自动在 &lt;code&gt;~/.bashrc&lt;/code&gt; 中添加必要的配置，通常类似如下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# &amp;gt;&amp;gt;&amp;gt; conda initialize &amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# !! Contents within this block are managed by &#39;conda init&#39; !!&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;__conda_setup&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&#39;/home/your_username/miniconda3/bin/conda&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;shell.bash&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;hook&#39; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; /dev/null&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$?&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-eq&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$__conda_setup&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/home/your_username/miniconda3/etc/profile.d/conda.sh&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/home/your_username/miniconda3/etc/profile.d/conda.sh&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/home/your_username/miniconda3/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;unset&lt;/span&gt; __conda_setup
&lt;span class=&#34;token comment&#34;&gt;# &amp;lt;&amp;lt;&amp;lt; conda initialize &amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你没有选择自动初始化，可以手动执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/miniconda3/etc/profile.d/conda.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者直接将 conda 的路径添加到你的 PATH 环境变量中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;/miniconda3/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建议将上述命令添加到 &lt;code&gt;~/.bashrc&lt;/code&gt; 或其他相应的 shell 配置文件中。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-验证安装&#34;&gt;&lt;a href=&#34;#6-验证安装&#34; class=&#34;headerlink&#34; title=&#34;6. 验证安装&#34;&gt;&lt;/a&gt;6. 验证安装&lt;/h2&gt;&lt;p&gt;打开一个新的终端或在当前终端执行激活命令后，运行以下命令检查 conda 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正常情况下，会输出类似 &lt;code&gt;conda 4.x.x&lt;/code&gt; 版本信息。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-基本使用&#34;&gt;&lt;a href=&#34;#7-基本使用&#34; class=&#34;headerlink&#34; title=&#34;7. 基本使用&#34;&gt;&lt;/a&gt;7. 基本使用&lt;/h2&gt;&lt;h3 id=&#34;7-1-创建虚拟环境&#34;&gt;&lt;a href=&#34;#7-1-创建虚拟环境&#34; class=&#34;headerlink&#34; title=&#34;7.1 创建虚拟环境&#34;&gt;&lt;/a&gt;7.1 创建虚拟环境&lt;/h3&gt;&lt;p&gt;例如，创建一个名为 &lt;code&gt;myenv&lt;/code&gt; 的环境，并安装 Python 3.9：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; myenv &lt;span class=&#34;token assign-left variable&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.9&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-2-激活虚拟环境&#34;&gt;&lt;a href=&#34;#7-2-激活虚拟环境&#34; class=&#34;headerlink&#34; title=&#34;7.2 激活虚拟环境&#34;&gt;&lt;/a&gt;7.2 激活虚拟环境&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate myenv&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;激活后，命令提示符中会显示环境名称。&lt;/p&gt;
&lt;h3 id=&#34;7-3-安装其他包&#34;&gt;&lt;a href=&#34;#7-3-安装其他包&#34; class=&#34;headerlink&#34; title=&#34;7.3 安装其他包&#34;&gt;&lt;/a&gt;7.3 安装其他包&lt;/h3&gt;&lt;p&gt;可以直接使用 conda 安装需要的包，例如安装 numpy：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此外，也可以使用 pip 安装不在 conda 仓库里的包，但推荐先查找 conda 仓库，因为 conda 可能已经进行了优化和依赖管理。&lt;/p&gt;
&lt;h3 id=&#34;7-4-更新-conda&#34;&gt;&lt;a href=&#34;#7-4-更新-conda&#34; class=&#34;headerlink&#34; title=&#34;7.4 更新 conda&#34;&gt;&lt;/a&gt;7.4 更新 conda&lt;/h3&gt;&lt;p&gt;建议定期更新 conda 以确保使用最新的功能和安全补丁：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda update conda&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;8-常见问题排查&#34;&gt;&lt;a href=&#34;#8-常见问题排查&#34; class=&#34;headerlink&#34; title=&#34;8. 常见问题排查&#34;&gt;&lt;/a&gt;8. 常见问题排查&lt;/h2&gt;&lt;h3 id=&#34;8-1-conda-命令未找到&#34;&gt;&lt;a href=&#34;#8-1-conda-命令未找到&#34; class=&#34;headerlink&#34; title=&#34;8.1 conda 命令未找到&#34;&gt;&lt;/a&gt;8.1 conda 命令未找到&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;请确保你的 &lt;code&gt;~/.bashrc&lt;/code&gt; 文件已正确载入，可以执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.bashrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检查是否正确添加了 conda 的安装路径至 PATH 环境变量中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-2-安装或更新失败&#34;&gt;&lt;a href=&#34;#8-2-安装或更新失败&#34; class=&#34;headerlink&#34; title=&#34;8.2 安装或更新失败&#34;&gt;&lt;/a&gt;8.2 安装或更新失败&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;检查网络连接或国内用户是否需要配置代理或使用镜像源（例如清华、阿里等提供的 conda 镜像）。&lt;/li&gt;
&lt;li&gt;参考官方文档（conda 官方文档）获取更多帮助和说明。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;9-参考资料&#34;&gt;&lt;a href=&#34;#9-参考资料&#34; class=&#34;headerlink&#34; title=&#34;9. 参考资料&#34;&gt;&lt;/a&gt;9. 参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/04/10/an-zhuang-wsl-zi-xi-tong-jiao-cheng/</guid>
            <title>安装WSL子系统教程</title>
            <link>https://0xdadream.github.io/2025/04/10/an-zhuang-wsl-zi-xi-tong-jiao-cheng/</link>
            <category>linux</category>
            <pubDate>Thu, 10 Apr 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;安装WSL子系统教程&#34;&gt;&lt;a href=&#34;#安装WSL子系统教程&#34; class=&#34;headerlink&#34; title=&#34;安装WSL子系统教程&#34;&gt;&lt;/a&gt;安装WSL子系统教程&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&#34;1-前提条件与准备工作&#34;&gt;&lt;a href=&#34;#1-前提条件与准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 前提条件与准备工作&#34;&gt;&lt;/a&gt;1. 前提条件与准备工作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作系统要求&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;Windows 10：要求版本 2004 及 Build 19041 以上，或&lt;/li&gt;
&lt;li&gt;Windows 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络环境&lt;/strong&gt;：部分地区需要设置代理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;管理员权限&lt;/strong&gt;：安装及部分配置需要以管理员身份运行 PowerShell 或 CMD。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存储空间及磁盘规划&lt;/strong&gt;：WSL 会在系统盘或你指定的目录中保存 Linux 文件系统，提前规划好存储位置与空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-WSL-安装方法&#34;&gt;&lt;a href=&#34;#2-WSL-安装方法&#34; class=&#34;headerlink&#34; title=&#34;2. WSL 安装方法&#34;&gt;&lt;/a&gt;2. WSL 安装方法&lt;/h2&gt;&lt;h3 id=&#34;2-1-一键安装（推荐）&#34;&gt;&lt;a href=&#34;#2-1-一键安装（推荐）&#34; class=&#34;headerlink&#34; title=&#34;2.1 一键安装（推荐）&#34;&gt;&lt;/a&gt;2.1 一键安装（推荐）&lt;/h3&gt;&lt;p&gt;适用于 Windows 10 21H2 及之后版本以及 Windows 11。步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;打开 PowerShell（管理员模式）&lt;/strong&gt;：&lt;br&gt; 在开始菜单搜索 “PowerShell”，右键选择“以管理员身份运行”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;执行安装命令&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;install&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令会自动启用 WSL 相关组件、虚拟机平台，并默认安装最新的 WSL 版本（通常为 WSL2）和默认 Linux 发行版（一般为 Ubuntu）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;重启电脑&lt;/strong&gt;：安装完成后系统会提示重启以完成配置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-2-手动安装&#34;&gt;&lt;a href=&#34;#2-2-手动安装&#34; class=&#34;headerlink&#34; title=&#34;2.2 手动安装&#34;&gt;&lt;/a&gt;2.2 手动安装&lt;/h3&gt;&lt;p&gt;对于需要更多自定义选项的用户，手动安装步骤如下：&lt;/p&gt;
&lt;h4 id=&#34;（1）启用-WSL-和虚拟机平台功能&#34;&gt;&lt;a href=&#34;#（1）启用-WSL-和虚拟机平台功能&#34; class=&#34;headerlink&#34; title=&#34;（1）启用 WSL 和虚拟机平台功能&#34;&gt;&lt;/a&gt;（1）启用 WSL 和虚拟机平台功能&lt;/h4&gt;&lt;p&gt;在管理员模式下打开 PowerShell，依次执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;dism&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;online &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;enable-feature&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;featurename:Microsoft-Windows-Subsystem-Linux &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;all &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;norestart
dism&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;online &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;enable-feature&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;featurename:VirtualMachinePlatform &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;all &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;norestart&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行后重启计算机。&lt;/p&gt;
&lt;h4 id=&#34;（2）安装-WSL2-内核更新包&#34;&gt;&lt;a href=&#34;#（2）安装-WSL2-内核更新包&#34; class=&#34;headerlink&#34; title=&#34;（2）安装 WSL2 内核更新包&#34;&gt;&lt;/a&gt;（2）安装 WSL2 内核更新包&lt;/h4&gt;&lt;p&gt;前往 WSL2 内核更新包下载链接 ，下载并运行安装包，更新 Linux 内核。&lt;/p&gt;
&lt;h4 id=&#34;（3）设置默认-WSL-版本为-WSL2&#34;&gt;&lt;a href=&#34;#（3）设置默认-WSL-版本为-WSL2&#34; class=&#34;headerlink&#34; title=&#34;（3）设置默认 WSL 版本为 WSL2&#34;&gt;&lt;/a&gt;（3）设置默认 WSL 版本为 WSL2&lt;/h4&gt;&lt;p&gt;再次打开 PowerShell（无需管理员模式也可），执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set-default&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;version 2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;（4）安装-Linux-发行版&#34;&gt;&lt;a href=&#34;#（4）安装-Linux-发行版&#34; class=&#34;headerlink&#34; title=&#34;（4）安装 Linux 发行版&#34;&gt;&lt;/a&gt;（4）安装 Linux 发行版&lt;/h4&gt;&lt;p&gt;有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通过 Microsoft Store&lt;/strong&gt;：搜索 &lt;code&gt;Ubuntu&lt;/code&gt;、&lt;code&gt;Debian&lt;/code&gt; 等，选择版本（如 Ubuntu 22.04 LTS），点击“获取”安装，推荐这个，然后再执行命令行安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;命令行安装&lt;/strong&gt;：查看支持的在线发行版列表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;list &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;online&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定版本（例如 Ubuntu 20.04）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;install &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;d Ubuntu-20&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;04&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-Linux-发行版安装及首次使用&#34;&gt;&lt;a href=&#34;#3-Linux-发行版安装及首次使用&#34; class=&#34;headerlink&#34; title=&#34;3. Linux 发行版安装及首次使用&#34;&gt;&lt;/a&gt;3. Linux 发行版安装及首次使用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;首次启动&lt;/strong&gt;：安装完成后，从“开始菜单”启动对应 Linux 发行版。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建用户&lt;/strong&gt;：系统会提示你为 Linux 系统创建用户名（须为小写）和密码，这样你就可以使用 &lt;code&gt;sudo&lt;/code&gt; 提权操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;更新系统&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; upgrade&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装常用软件&lt;/strong&gt;：根据需要安装 &lt;code&gt;git&lt;/code&gt;、&lt;code&gt;vim&lt;/code&gt;、&lt;code&gt;python3&lt;/code&gt; 等：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; python3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-WSL-版本切换：WSL1-与-WSL2&#34;&gt;&lt;a href=&#34;#4-WSL-版本切换：WSL1-与-WSL2&#34; class=&#34;headerlink&#34; title=&#34;4. WSL 版本切换：WSL1 与 WSL2&#34;&gt;&lt;/a&gt;4. WSL 版本切换：WSL1 与 WSL2&lt;/h2&gt;&lt;p&gt;WSL 中各发行版可以独立设置为 WSL1 或 WSL2。查看所有已安装发行版及其版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;v&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-pgsql&#34; data-language=&#34;pgsql&#34;&gt;&lt;code class=&#34;language-pgsql&#34;&gt; NAME            STATE           VERSION
* Ubuntu-22.04    Running         2
  Ubuntu-20.04    Stopped         2
  Debian          Stopped         1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;切换版本&#34;&gt;&lt;a href=&#34;#切换版本&#34; class=&#34;headerlink&#34; title=&#34;切换版本&#34;&gt;&lt;/a&gt;切换版本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;将发行版切换为 WSL2&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set-version&lt;/span&gt; &amp;lt;发行版名称&amp;gt; 2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set-version&lt;/span&gt; Debian 2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;将发行版切换为 WSL1&lt;/strong&gt;（如有需求）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set-version&lt;/span&gt; &amp;lt;发行版名称&amp;gt; 1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;设置默认安装版本&lt;/strong&gt;：在安装新发行版时，可以用下面命令设置默认版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set-default&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;version 2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;切换版本过程中，转换时间与系统数据量有关，部分较大发行版可能需要几分钟。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-附加功能与进阶用法&#34;&gt;&lt;a href=&#34;#5-附加功能与进阶用法&#34; class=&#34;headerlink&#34; title=&#34;5. 附加功能与进阶用法&#34;&gt;&lt;/a&gt;5. 附加功能与进阶用法&lt;/h2&gt;&lt;h3 id=&#34;5-1-Windows-与-WSL-文件共享&#34;&gt;&lt;a href=&#34;#5-1-Windows-与-WSL-文件共享&#34; class=&#34;headerlink&#34; title=&#34;5.1 Windows 与 WSL 文件共享&#34;&gt;&lt;/a&gt;5.1 Windows 与 WSL 文件共享&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WSL 文件系统访问&lt;/strong&gt;：&lt;br&gt; 在 WSL 中可通过 &lt;code&gt;/mnt/c/&lt;/code&gt; 等路径访问 Windows 磁盘。例如访问 &lt;code&gt;C:\Users\YourName&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;cd &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;mnt/c/Users/YourName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在 Windows 中访问 WSL 文件&lt;/strong&gt;：&lt;br&gt; 可使用 File Explorer 直接访问：在地址栏输入 &lt;code&gt;\\wsl$&lt;/code&gt;，会显示所有已安装的 WSL 发行版及其文件系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;同步代码与项目文件&lt;/strong&gt;：&lt;br&gt; 可以将项目文件放在 Windows 共享目录中，再在 WSL 中编辑、执行，这样两个系统间文件同步简单且快速。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-2-WSL-GUI-应用（WSLg）&#34;&gt;&lt;a href=&#34;#5-2-WSL-GUI-应用（WSLg）&#34; class=&#34;headerlink&#34; title=&#34;5.2 WSL GUI 应用（WSLg）&#34;&gt;&lt;/a&gt;5.2 WSL GUI 应用（WSLg）&lt;/h3&gt;&lt;p&gt;在最新版本的 Windows 10 和 Windows 11 上，WSL 支持 Linux 图形界面应用（WSLg）。配置方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;确保 WSL 更新至最新版本&lt;/strong&gt;：执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;update&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;启动 GUI 应用&lt;/strong&gt;（如 Firefox）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; firefox
firefox &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;WSLg 会自动启动并显示 Linux GUI 应用，无需额外配置 X 服务器。&lt;/p&gt;
&lt;h3 id=&#34;5-3-代理设置&#34;&gt;&lt;a href=&#34;#5-3-代理设置&#34; class=&#34;headerlink&#34; title=&#34;5.3 代理设置&#34;&gt;&lt;/a&gt;5.3 代理设置&lt;/h3&gt;&lt;p&gt;如果你处于网络环境受限或想加快下载速度，可以设置代理。&lt;/p&gt;
&lt;h4 id=&#34;（1）设置-Windows-系统代理&#34;&gt;&lt;a href=&#34;#（1）设置-Windows-系统代理&#34; class=&#34;headerlink&#34; title=&#34;（1）设置 Windows 系统代理&#34;&gt;&lt;/a&gt;（1）设置 Windows 系统代理&lt;/h4&gt;&lt;p&gt;如果使用科学上网工具（如 Clash、V2Ray、VPN），确保系统代理已启用。可在 Windows 设置 → 网络和 Internet → 代理中配置，也可以通过命令设置环境变量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;setx http_proxy http://127.0.0.1:7890 /m
setx https_proxy http://127.0.0.1:7890 /m&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;（2）在-WSL-中设置代理&#34;&gt;&lt;a href=&#34;#（2）在-WSL-中设置代理&#34; class=&#34;headerlink&#34; title=&#34;（2）在 WSL 中设置代理&#34;&gt;&lt;/a&gt;（2）在 WSL 中设置代理&lt;/h4&gt;&lt;p&gt;在 WSL 中使用环境变量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;http_proxy&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://127.0.0.1:7890&#34;&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;https_proxy&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://127.0.0.1:7890&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若需要全局生效，在 &lt;code&gt;~/.bashrc&lt;/code&gt; 或 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件末尾加入以上配置，并执行 &lt;code&gt;source ~/.bashrc&lt;/code&gt; 使其生效。&lt;/p&gt;
&lt;h4 id=&#34;（3）apt-专用代理配置&#34;&gt;&lt;a href=&#34;#（3）apt-专用代理配置&#34; class=&#34;headerlink&#34; title=&#34;（3）apt 专用代理配置&#34;&gt;&lt;/a&gt;（3）apt 专用代理配置&lt;/h4&gt;&lt;p&gt;创建或编辑 apt 配置文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; /etc/apt/apt.conf.d/proxy.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cpp&#34; data-language=&#34;cpp&#34;&gt;&lt;code class=&#34;language-cpp&#34;&gt;Acquire&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;http&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;Proxy &lt;span class=&#34;token string&#34;&gt;&#34;http://127.0.0.1:7890&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
Acquire&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;https&lt;span class=&#34;token double-colon punctuation&#34;&gt;::&lt;/span&gt;Proxy &lt;span class=&#34;token string&#34;&gt;&#34;http://127.0.0.1:7890&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存后，&lt;code&gt;sudo apt update&lt;/code&gt; 将走代理。&lt;/p&gt;
&lt;h3 id=&#34;5-4-多实例安装（同一版本多个副本）&#34;&gt;&lt;a href=&#34;#5-4-多实例安装（同一版本多个副本）&#34; class=&#34;headerlink&#34; title=&#34;5.4 多实例安装（同一版本多个副本）&#34;&gt;&lt;/a&gt;5.4 多实例安装（同一版本多个副本）&lt;/h3&gt;&lt;p&gt;WSL 允许你导入同一 Linux 发行版的多个副本，便于隔离不同任务。操作步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;导出已有实例&lt;/strong&gt;&lt;br&gt; 假设已安装 &lt;code&gt;Ubuntu-20.04&lt;/code&gt;，用以下命令导出为 &lt;code&gt;.tar&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;export Ubuntu-20&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;04 D:\wsl-backups\ubuntu-20&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;04&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tar&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;导入为新实例&lt;/strong&gt;&lt;br&gt; 用新名称（例如 &lt;code&gt;Ubuntu-Dev&lt;/code&gt;）创建副本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;import Ubuntu-Dev D:\WSL\Ubuntu-Dev D:\wsl-backups\ubuntu-20&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;04&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tar &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;version 2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;启动新实例&lt;/strong&gt;&lt;br&gt; 使用下面命令启动新导入的实例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;d Ubuntu-Dev&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样你就可以在同一台机器上同时运行多个独立的 Linux 环境。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-常用命令与管理技巧&#34;&gt;&lt;a href=&#34;#6-常用命令与管理技巧&#34; class=&#34;headerlink&#34; title=&#34;6. 常用命令与管理技巧&#34;&gt;&lt;/a&gt;6. 常用命令与管理技巧&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看已安装发行版及版本&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;v&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;启动指定发行版&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;d &amp;lt;发行版名称&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;设置默认发行版（直接运行 wsl 时启动的系统）&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;setdefault &amp;lt;发行版名称&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;切换 WSL 版本&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set-version&lt;/span&gt; &amp;lt;发行版名称&amp;gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;更新 WSL 内核&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;update&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;关闭所有运行中的 WSL 实例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;shutdown&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;卸载某个发行版&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;wsl &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;unregister &amp;lt;发行版名称&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/04/08/pycharm-bao-cun-xu-ke-zheng-shu-ju-shi-chu-cuo/</guid>
            <title>pycharm保存许可证数据时出错</title>
            <link>https://0xdadream.github.io/2025/04/08/pycharm-bao-cun-xu-ke-zheng-shu-ju-shi-chu-cuo/</link>
            <category>tools</category>
            <pubDate>Tue, 08 Apr 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pycharm保存许可证数据时出错&#34;&gt;&lt;a href=&#34;#pycharm保存许可证数据时出错&#34; class=&#34;headerlink&#34; title=&#34;pycharm保存许可证数据时出错&#34;&gt;&lt;/a&gt;pycharm保存许可证数据时出错&lt;/h1&gt;&lt;p&gt;报错&lt;/p&gt;
&lt;p&gt; C:\Users\xxx\AppData\Roaming\JetBrains\PyCharm2024.2\pycharm.key (拒绝访问)&lt;/p&gt;
&lt;p&gt;去这个目录下把这个文件改成&lt;code&gt;pycharm.key.bak&lt;/code&gt;做一个备份，然后新建一个文件空&lt;code&gt;pycharm.key&lt;/code&gt;，不创建好像也能自己创建，我没试过&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/04/07/google-nei-rong-zai-xin-biao-qian-ye-da-kai/</guid>
            <title>Google内容在新标签页打开</title>
            <link>https://0xdadream.github.io/2025/04/07/google-nei-rong-zai-xin-biao-qian-ye-da-kai/</link>
            <category>tips</category>
            <pubDate>Mon, 07 Apr 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Google内容在新标签页打开&#34;&gt;&lt;a href=&#34;#Google内容在新标签页打开&#34; class=&#34;headerlink&#34; title=&#34;Google内容在新标签页打开&#34;&gt;&lt;/a&gt;Google内容在新标签页打开&lt;/h1&gt;&lt;p&gt;进入&lt;code&gt;google.com&lt;/code&gt;，右下角找到设置，搜索设置，找到在新的浏览器窗口中打开所选的每条搜索结果勾选&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/04/05/clash-verge-jie-dian-quan-bu-chao-shi/</guid>
            <title>clash_verge节点全部超时</title>
            <link>https://0xdadream.github.io/2025/04/05/clash-verge-jie-dian-quan-bu-chao-shi/</link>
            <category>wall</category>
            <pubDate>Sat, 05 Apr 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;clash-verge节点全部超时&#34;&gt;&lt;a href=&#34;#clash-verge节点全部超时&#34; class=&#34;headerlink&#34; title=&#34;clash_verge节点全部超时&#34;&gt;&lt;/a&gt;clash_verge节点全部超时&lt;/h1&gt;&lt;p&gt;clash_verge正常使用需要确保本地计算机系统时间与服务器上是一致，如果存在一定时差会导致全部服务器连接超时，一般都是标准北京时间可以到系统的 “日期和时间” 设置中同步一下标准时间。&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;关闭DNS，到设置-&amp;gt;DNS覆写-&amp;gt;关闭DNS&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/04/03/jie-jue-bao-cuo-jinja2.exceptions.templatenotfound-index.html/</guid>
            <title>解决报错jinja2.exceptions.TemplateNotFound_index.html</title>
            <link>https://0xdadream.github.io/2025/04/03/jie-jue-bao-cuo-jinja2.exceptions.templatenotfound-index.html/</link>
            <category>python</category>
            <pubDate>Thu, 03 Apr 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;解决报错jinja2-exceptions-TemplateNotFound-index-html&#34;&gt;&lt;a href=&#34;#解决报错jinja2-exceptions-TemplateNotFound-index-html&#34; class=&#34;headerlink&#34; title=&#34;解决报错jinja2.exceptions.TemplateNotFound_index.html&#34;&gt;&lt;/a&gt;解决报错jinja2.exceptions.TemplateNotFound_index.html&lt;/h1&gt;&lt;p&gt;templates文件夹需要和xxx.py需要再一级文件夹&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/03/24/bian-yi-shi-bao-cuo-rootminiconda3compiler-compatld/</guid>
            <title>编译时报错rootminiconda3compiler_compatld</title>
            <link>https://0xdadream.github.io/2025/03/24/bian-yi-shi-bao-cuo-rootminiconda3compiler-compatld/</link>
            <category>linux</category>
            <pubDate>Mon, 24 Mar 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;编译时报错rootminiconda3compiler-compatld&#34;&gt;&lt;a href=&#34;#编译时报错rootminiconda3compiler-compatld&#34; class=&#34;headerlink&#34; title=&#34;编译时报错rootminiconda3compiler_compatld&#34;&gt;&lt;/a&gt;编译时报错rootminiconda3compiler_compatld&lt;/h1&gt;&lt;h2 id=&#34;报错描述&#34;&gt;&lt;a href=&#34;#报错描述&#34; class=&#34;headerlink&#34; title=&#34;报错描述&#34;&gt;&lt;/a&gt;报错描述&lt;/h2&gt;&lt;p&gt;在执行make安装编译时报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/root/miniconda3/compiler_compat/ld: cannot &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; -lpbc: No such &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; or directory&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;解决方法&#34;&gt;&lt;a href=&#34;#解决方法&#34; class=&#34;headerlink&#34; title=&#34;解决方法&#34;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;p&gt;这个是由于conda环境自带有编译库，你安装的库可能没有&lt;/p&gt;
&lt;h4 id=&#34;方法-1：退出-Conda-环境&#34;&gt;&lt;a href=&#34;#方法-1：退出-Conda-环境&#34; class=&#34;headerlink&#34; title=&#34;方法 1：退出 Conda 环境&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 1：退出 Conda 环境&lt;/strong&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda deactivate  &lt;span class=&#34;token comment&#34;&gt;# 确保编译时不在 Conda 环境中&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;退出 Conda 环境后，编译工具链会直接使用系统的 &lt;code&gt;ld&lt;/code&gt; 和库路径。&lt;/p&gt;
&lt;h4 id=&#34;方法-2：手动指定链接器路径&#34;&gt;&lt;a href=&#34;#方法-2：手动指定链接器路径&#34; class=&#34;headerlink&#34; title=&#34;方法 2：手动指定链接器路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 2：手动指定链接器路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在编译命令中强制使用系统链接器（覆盖 Conda 的默认设置）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 示例：在编译时指定系统 ld&lt;/span&gt;
gcc &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;. -B/usr/bin &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或直接调用系统链接器：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ld &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法-3：临时移除-Conda-的干扰&#34;&gt;&lt;a href=&#34;#方法-3：临时移除-Conda-的干扰&#34; class=&#34;headerlink&#34; title=&#34;方法 3：临时移除 Conda 的干扰&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 3：临时移除 Conda 的干扰&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;重命名或删除 &lt;code&gt;compiler_compat&lt;/code&gt; 目录（需谨慎操作）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; /root/miniconda3/compiler_compat /root/miniconda3/compiler_compat.bak&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;操作后重新编译，但可能影响 Conda 环境内其他包的编译行为。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;验证当前使用的-ld&#34;&gt;&lt;a href=&#34;#验证当前使用的-ld&#34; class=&#34;headerlink&#34; title=&#34;验证当前使用的 ld&#34;&gt;&lt;/a&gt;&lt;strong&gt;验证当前使用的 &lt;code&gt;ld&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;检查编译时实际调用的 &lt;code&gt;ld&lt;/code&gt; 路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看编译过程中使用的 ld 路径&lt;/span&gt;
gcc &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;. &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;&amp;amp;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; COLLECT_LTO_WRAPPER&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/03/12/wen-jian-lian-jie-quan-jiao-cheng/</guid>
            <title>文件链接全教程</title>
            <link>https://0xdadream.github.io/2025/03/12/wen-jian-lian-jie-quan-jiao-cheng/</link>
            <category>命令</category>
            <pubDate>Wed, 12 Mar 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;文件链接全教程&#34;&gt;&lt;a href=&#34;#文件链接全教程&#34; class=&#34;headerlink&#34; title=&#34;文件链接全教程&#34;&gt;&lt;/a&gt;文件链接全教程&lt;/h1&gt;&lt;h2 id=&#34;Windows&#34;&gt;&lt;a href=&#34;#Windows&#34; class=&#34;headerlink&#34; title=&#34;Windows&#34;&gt;&lt;/a&gt;Windows&lt;/h2&gt;&lt;h3 id=&#34;1-链接基础概念&#34;&gt;&lt;a href=&#34;#1-链接基础概念&#34; class=&#34;headerlink&#34; title=&#34;1. 链接基础概念&#34;&gt;&lt;/a&gt;1. 链接基础概念&lt;/h3&gt;&lt;p&gt;在 Windows 中，“链接”实际上有几种形式，主要包括以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符号链接（Symbolic Link，软链接）&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;概念：&lt;/strong&gt; 符号链接是一个特殊文件，其中保存了目标文件或目录的路径。它类似于 Linux 中的软链接，并且看起来和普通文件或文件夹没有区别。&lt;/li&gt;
&lt;li&gt;特点：&lt;ul&gt;
&lt;li&gt;可用于文件和目录&lt;/li&gt;
&lt;li&gt;可以跨分区甚至跨网络路径（UNC）&lt;/li&gt;
&lt;li&gt;如果目标被删除或移动，符号链接会失效&lt;/li&gt;
&lt;li&gt;从 Windows Vista 开始支持，最新 Windows（如 Windows 10/11）中在开发人员模式下可不需要管理员权限创建&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;硬链接（Hard Link）&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;概念：&lt;/strong&gt; 硬链接是指向同一数据实体（数据块或 NTFS 中的文件记录）的另一个目录项。每个硬链接都与目标文件共享同一份数据。&lt;/li&gt;
&lt;li&gt;特点：&lt;ul&gt;
&lt;li&gt;仅适用于文件，不能用于目录&lt;/li&gt;
&lt;li&gt;必须在同一 NTFS 卷内（不能跨分区）&lt;/li&gt;
&lt;li&gt;删除其中一个链接不会影响其它链接或数据本身，只有当所有硬链接都删除后数据才会释放&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;目录联接（Junction Point）&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;概念：&lt;/strong&gt; 目录联接也称为“联接”，用于将一个目录指向另一个目录。在早期版本中常用来兼容旧版 Windows。&lt;/li&gt;
&lt;li&gt;特点：&lt;ul&gt;
&lt;li&gt;只适用于目录&lt;/li&gt;
&lt;li&gt;创建时会自动转换为绝对路径&lt;/li&gt;
&lt;li&gt;适用于同一台计算机，支持跨盘符（但不支持网络路径）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-创建链接的方法&#34;&gt;&lt;a href=&#34;#2-创建链接的方法&#34; class=&#34;headerlink&#34; title=&#34;2. 创建链接的方法&#34;&gt;&lt;/a&gt;2. 创建链接的方法&lt;/h3&gt;&lt;p&gt;在 Windows 中创建链接主要有两种方式：通过 CMD 命令行（使用 &lt;code&gt;mklink&lt;/code&gt; 命令）和通过 PowerShell（使用 &lt;code&gt;New-Item&lt;/code&gt; 命令）。&lt;/p&gt;
&lt;h4 id=&#34;2-1-使用-CMD-命令创建链接&#34;&gt;&lt;a href=&#34;#2-1-使用-CMD-命令创建链接&#34; class=&#34;headerlink&#34; title=&#34;2.1 使用 CMD 命令创建链接&#34;&gt;&lt;/a&gt;2.1 使用 CMD 命令创建链接&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;命令语法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;mklink [[/D] | [/H] | [/J]] Link Target&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;默认（无参数）&lt;/strong&gt;：创建文件的符号链接&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/D&lt;/strong&gt;：创建目录的符号链接&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/H&lt;/strong&gt;：创建硬链接（仅用于文件）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/J&lt;/strong&gt;：创建目录联接（Junction，适用于目录）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建文件的符号链接&lt;/strong&gt;&lt;br&gt; 假设有一个文件 &lt;code&gt;C:\Data\original.txt&lt;/code&gt;，我们在同目录下创建一个名为 &lt;code&gt;link.txt&lt;/code&gt; 的符号链接：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;mklink C:\Data\link.txt C:\Data\original.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时，&lt;code&gt;link.txt&lt;/code&gt; 实际上保存了 &lt;code&gt;original.txt&lt;/code&gt; 的路径，当你打开 &lt;code&gt;link.txt&lt;/code&gt; 时，系统会自动访问 &lt;code&gt;original.txt&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建目录的符号链接&lt;/strong&gt;&lt;br&gt; 假设有一个目录 &lt;code&gt;C:\Data\SourceFolder&lt;/code&gt;，希望在 &lt;code&gt;C:\Data&lt;/code&gt; 下创建一个符号链接目录 &lt;code&gt;LinkFolder&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;mklink /D C:\Data\LinkFolder C:\Data\SourceFolder&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，在资源管理器中打开 &lt;code&gt;LinkFolder&lt;/code&gt; 就等同于打开 &lt;code&gt;SourceFolder&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建文件的硬链接&lt;/strong&gt;&lt;br&gt; 依然以文件 &lt;code&gt;C:\Data\original.txt&lt;/code&gt; 为例，创建一个硬链接 &lt;code&gt;hardlink.txt&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;mklink /H C:\Data\hardlink.txt C:\Data\original.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;硬链接与原文件共享同一数据块，因此修改任一文件都会同步改变内容，但请注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬链接只能用于文件&lt;/li&gt;
&lt;li&gt;必须在同一卷内&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建目录联接（Junction）&lt;/strong&gt;&lt;br&gt; 使用 /J 参数来创建目录联接，适用于目录，但和符号链接不同的是，Junction 通常保存绝对路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;mklink /J C:\Data\JunctionFolder C:\Data\SourceFolder&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用 Junction 时，删除链接不会删除目标目录中的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;注意：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建符号链接和某些操作可能需要以&lt;strong&gt;管理员身份&lt;/strong&gt;运行 CMD。&lt;/li&gt;
&lt;li&gt;Windows 10 及以后版本如果开启“开发人员模式”，可以允许普通用户创建符号链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-2-使用-PowerShell-创建链接&#34;&gt;&lt;a href=&#34;#2-2-使用-PowerShell-创建链接&#34; class=&#34;headerlink&#34; title=&#34;2.2 使用 PowerShell 创建链接&#34;&gt;&lt;/a&gt;2.2 使用 PowerShell 创建链接&lt;/h4&gt;&lt;p&gt;PowerShell 提供了更现代的 &lt;code&gt;New-Item&lt;/code&gt; 命令来创建不同类型的链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法及示例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建文件或目录的符号链接：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;New-Item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ItemType SymbolicLink &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Path &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\Link.txt&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Target &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\original.txt&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者创建目录符号链接：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;New-Item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ItemType SymbolicLink &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Path &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\LinkFolder&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Target &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\SourceFolder&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PowerShell 中的 &lt;code&gt;SymbolicLink&lt;/code&gt; 同样创建的是软链接，和 CMD 中 &lt;code&gt;mklink&lt;/code&gt; 默认行为一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建文件的硬链接：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;New-Item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ItemType HardLink &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Path &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\hardlink.txt&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Target &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\original.txt&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会为 &lt;code&gt;original.txt&lt;/code&gt; 创建一个硬链接，注意硬链接只能用于文件，且必须在同一卷内。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建目录联接（Junction）：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;New-Item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ItemType Junction &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Path &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\JunctionFolder&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Target &lt;span class=&#34;token string&#34;&gt;&#34;C:\Data\SourceFolder&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令会创建一个指向目录的联接，与符号链接在某些场景下效果类似，但内部处理略有差异。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;提示：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PowerShell 命令执行时也可能需要管理员权限，具体取决于目标路径所在的位置（例如系统文件夹或 Program Files）。&lt;/li&gt;
&lt;li&gt;在使用相对路径创建符号链接时，系统会将其转换为绝对路径存储在 NTFS 中。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-使用场景与注意事项&#34;&gt;&lt;a href=&#34;#3-使用场景与注意事项&#34; class=&#34;headerlink&#34; title=&#34;3. 使用场景与注意事项&#34;&gt;&lt;/a&gt;3. 使用场景与注意事项&lt;/h3&gt;&lt;h4 id=&#34;3-1-常见使用场景&#34;&gt;&lt;a href=&#34;#3-1-常见使用场景&#34; class=&#34;headerlink&#34; title=&#34;3.1 常见使用场景&#34;&gt;&lt;/a&gt;3.1 常见使用场景&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据备份和增量备份&lt;/strong&gt;&lt;br&gt; 利用硬链接可以在不占用额外磁盘空间的情况下创建多个访问入口。例如，备份软件（如 Windows 版的“时间机器”）就会使用硬链接来实现增量备份。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;移动或重定向系统目录&lt;/strong&gt;&lt;br&gt; 为了节省系统盘空间或实现重装系统不丢失用户数据，可以将如 &lt;code&gt;C:\Users&lt;/code&gt; 目录复制到其他分区，然后使用 Junction 将原位置重定向到新位置：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;robocopy &#34;C:\Users&#34; &#34;D:\Users&#34; /E /COPYALL /XJ
rmdir &#34;C:\Users&#34; /S /Q
mklink /J &#34;C:\Users&#34; &#34;D:\Users&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;开发环境下共享资源&lt;/strong&gt;&lt;br&gt; 当多个项目需要使用同一份库或模型文件时，可以通过符号链接或硬链接共享文件，避免重复存储。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-2-注意事项&#34;&gt;&lt;a href=&#34;#3-2-注意事项&#34; class=&#34;headerlink&#34; title=&#34;3.2 注意事项&#34;&gt;&lt;/a&gt;3.2 注意事项&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;权限问题&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Windows 中，创建符号链接通常需要管理员权限；不过在 Windows 10 开发人员模式下可允许普通用户创建符号链接。&lt;/li&gt;
&lt;li&gt;硬链接不需要额外的权限，但目标文件必须在同一 NTFS 卷内。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;目标失效风险&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符号链接依赖于目标路径。如果目标移动或删除，符号链接会成为“悬挂链接”（无效链接）。&lt;/li&gt;
&lt;li&gt;硬链接与目标数据直接关联，即使原始文件名被删除，只要至少还有一个硬链接存在，数据依然可用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;跨分区限制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬链接只能在同一卷内使用，而符号链接和 Junction 则可以跨卷（但符号链接可以支持网络路径，而 Junction 则不行）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;命令使用环境&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;mklink&lt;/code&gt; 命令时建议打开&lt;strong&gt;管理员命令提示符&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;使用 PowerShell 时，若涉及系统目录或受保护区域，建议以管理员身份运行 PowerShell。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看链接和删除&lt;/p&gt;
&lt;p&gt;直接在资源管理器操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux&#34;&gt;&lt;a href=&#34;#linux&#34; class=&#34;headerlink&#34; title=&#34;linux&#34;&gt;&lt;/a&gt;linux&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://0xdadream.github.io/2025/02/20/arc-zai-comfyui-bao-cuo/&#34;&gt;Arc在comfyui报错 | 逐梦&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/03/09/comfyui-bao-cuo-huggingface/</guid>
            <title>comfyui报错huggingface</title>
            <link>https://0xdadream.github.io/2025/03/09/comfyui-bao-cuo-huggingface/</link>
            <category>comfyui</category>
            <pubDate>Sun, 09 Mar 2025 21:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;comfyui报错huggingface&#34;&gt;&lt;a href=&#34;#comfyui报错huggingface&#34; class=&#34;headerlink&#34; title=&#34;comfyui报错huggingface&#34;&gt;&lt;/a&gt;comfyui报错huggingface&lt;/h1&gt;&lt;p&gt;报错信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;huggingface_hub.errors.LocalEntryNotFoundError: An error happened &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; trying to &lt;span class=&#34;token function&#34;&gt;locate&lt;/span&gt; the &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; on the Hub and we cannot &lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; the requested files &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; the &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; cache. Please check your connection and try again or &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; sure your Internet connection is on.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法&lt;/p&gt;
&lt;p&gt;到&lt;code&gt;main.py&lt;/code&gt;代码前面添加&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;environ&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;HF_ENDPOINT&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https://hf-mirror.com&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;换镜像&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/21/pycharm-xian-shi-xian-shi-biao-ge/</guid>
            <title>pycharm显示显示表格</title>
            <link>https://0xdadream.github.io/2025/02/21/pycharm-xian-shi-xian-shi-biao-ge/</link>
            <category>python</category>
            <pubDate>Fri, 21 Feb 2025 15:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pycharm显示显示表格&#34;&gt;&lt;a href=&#34;#pycharm显示显示表格&#34; class=&#34;headerlink&#34; title=&#34;pycharm显示显示表格&#34;&gt;&lt;/a&gt;pycharm显示显示表格&lt;/h1&gt;&lt;p&gt;当以pycharm打开&lt;code&gt;.csv&lt;/code&gt;文件时，可能不能显示表格，在文件中右键，选择关联文件，找到csv关联即可&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/20/arc-zai-comfyui-bao-cuo/</guid>
            <title>Arc在comfyui报错</title>
            <link>https://0xdadream.github.io/2025/02/20/arc-zai-comfyui-bao-cuo/</link>
            <category>intel</category>
            <pubDate>Thu, 20 Feb 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Arc在comfyui报错&#34;&gt;&lt;a href=&#34;#Arc在comfyui报错&#34; class=&#34;headerlink&#34; title=&#34;Arc在comfyui报错&#34;&gt;&lt;/a&gt;Arc在comfyui报错&lt;/h1&gt;&lt;h2 id=&#34;报错&#34;&gt;&lt;a href=&#34;#报错&#34; class=&#34;headerlink&#34; title=&#34;报错&#34;&gt;&lt;/a&gt;报错&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Current platform can NOT allocate memory block with size larger than 4GB&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt; Tried to allocate &lt;span class=&#34;token number&#34;&gt;8.00&lt;/span&gt; GiB &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GPU &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15.56&lt;/span&gt; GiB total capacity&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.08&lt;/span&gt; GiB already allocated&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.12&lt;/span&gt; GiB reserved &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; total by PyTorch&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;目前的解决办法都不太行，我的做法是回到&lt;code&gt;IPEX-2.1&lt;/code&gt;版本&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/intel/intel-extension-for-pytorch/issues/325#issuecomment-2604803076&#34;&gt;Arrays larger than 4 GB crashes · Issue #325 · intel/intel-extension-for-pytorch&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/19/conda-huan-yuan/</guid>
            <title>conda换源</title>
            <link>https://0xdadream.github.io/2025/02/19/conda-huan-yuan/</link>
            <category>conda</category>
            <category>tools</category>
            <pubDate>Wed, 19 Feb 2025 16:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;conda换源&#34;&gt;&lt;a href=&#34;#conda换源&#34; class=&#34;headerlink&#34; title=&#34;conda换源&#34;&gt;&lt;/a&gt;conda换源&lt;/h1&gt;&lt;p&gt;由于网络连接原因，使用 Anaconda 或 Miniconda 时，默认的官方源速度较慢。为提高下载速度，您可以将 Conda 的源更换为国内的镜像源。以下是详细的操作步骤：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 生成 &lt;code&gt;.condarc&lt;/code&gt; 配置文件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Windows 系统中，用户目录下可能没有 &lt;code&gt;.condarc&lt;/code&gt; 文件。您可以通过以下命令生成该文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda config &lt;span class=&#34;token parameter variable&#34;&gt;--set&lt;/span&gt; show_channel_urls &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行后，&lt;code&gt;.condarc&lt;/code&gt; 文件将被创建在用户主目录下。在 Windows 上，用户主目录通常位于 &lt;code&gt;C:\Users\用户名\&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 编辑 &lt;code&gt;.condarc&lt;/code&gt; 文件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用文本编辑器打开 &lt;code&gt;.condarc&lt;/code&gt; 文件，将其内容替换为以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-yaml&#34; data-language=&#34;yaml&#34;&gt;&lt;code class=&#34;language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;channels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; defaults
&lt;span class=&#34;token key atrule&#34;&gt;show_channel_urls&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;token key atrule&#34;&gt;default_channels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/pkgs/main
  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/pkgs/r
  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/pkgs/msys2
&lt;span class=&#34;token key atrule&#34;&gt;custom_channels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token key atrule&#34;&gt;conda-forge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud
  &lt;span class=&#34;token key atrule&#34;&gt;msys2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud
  &lt;span class=&#34;token key atrule&#34;&gt;bioconda&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud
  &lt;span class=&#34;token key atrule&#34;&gt;menpo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud
  &lt;span class=&#34;token key atrule&#34;&gt;pytorch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud
  &lt;span class=&#34;token key atrule&#34;&gt;pytorch-lts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud
  &lt;span class=&#34;token key atrule&#34;&gt;simpleitk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//mirrors.bfsu.edu.cn/anaconda/cloud&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述配置将 Conda 的源更换为北京外国语大学的镜像站。您也可以选择其他国内镜像源，如清华大学、上海交通大学等。具体的镜像源配置可以参考清华大学开源软件镜像站的官方文档。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/?utm_source=chatgpt.com&#34;&gt;mirrors.tuna.tsinghua.edu.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 清理索引缓存：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;更换源后，建议清理 Conda 的索引缓存，以确保使用新的镜像源：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda clean &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. 测试新的源：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建一个新的 Conda 环境，并安装一个包，以验证新的源是否生效：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; test_env numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果安装过程顺利且速度较快，则说明源更换成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;备份原始配置：&lt;/strong&gt; 在更改 &lt;code&gt;.condarc&lt;/code&gt; 文件之前，建议备份原始配置，以防需要恢复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恢复默认源：&lt;/strong&gt; 如果需要恢复默认源，可以删除 &lt;code&gt;.condarc&lt;/code&gt; 文件，或者执行以下命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda config --remove-key channels&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过以上步骤，您可以成功将 Conda 的源更换为国内镜像源，从而提高包的下载速度和稳定性。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/18/arca770-shi-yong-comfyui-jiao-cheng/</guid>
            <title>ArcA770使用comfyui教程</title>
            <link>https://0xdadream.github.io/2025/02/18/arca770-shi-yong-comfyui-jiao-cheng/</link>
            <category>intel</category>
            <pubDate>Tue, 18 Feb 2025 18:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ArcA770使用comfyui教程&#34;&gt;&lt;a href=&#34;#ArcA770使用comfyui教程&#34; class=&#34;headerlink&#34; title=&#34;ArcA770使用comfyui教程&#34;&gt;&lt;/a&gt;ArcA770使用comfyui教程&lt;/h1&gt;&lt;h3 id=&#34;1-前置配置&#34;&gt;&lt;a href=&#34;#1-前置配置&#34; class=&#34;headerlink&#34; title=&#34;1. 前置配置&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 前置配置&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;conda&lt;/li&gt;
&lt;li&gt;更新驱动&lt;/li&gt;
&lt;li&gt;安装&lt;strong&gt;Visual Studio Build Tools&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;安装oneAPI&lt;/li&gt;
&lt;li&gt;安装IPEX&lt;/li&gt;
&lt;li&gt;具体看链接&lt;a href=&#34;https://0xdadream.github.io/2025/02/18/intel-xian-qia-pao-ai-pei-zhi-jiao-cheng/&#34;&gt;Intel显卡运行AI配置教程 | 逐梦&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-配置Python&#34;&gt;&lt;a href=&#34;#2-配置Python&#34; class=&#34;headerlink&#34; title=&#34;2. 配置Python&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 配置Python&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Python环境&lt;/strong&gt;：&lt;br&gt;建议使用&lt;strong&gt;Python 3.10或更高版本&lt;/strong&gt;，并通过虚拟环境（如&lt;code&gt;venv&lt;/code&gt;或&lt;code&gt;conda&lt;/code&gt;）隔离依赖。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; comfyui &lt;span class=&#34;token assign-left variable&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.11&lt;/span&gt;  这里comfyui就是安装IPEX的环境
conda activate comfyui&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-安装ComfyUI及依赖库&#34;&gt;&lt;a href=&#34;#3-安装ComfyUI及依赖库&#34; class=&#34;headerlink&#34; title=&#34;3. 安装ComfyUI及依赖库&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 安装ComfyUI及依赖库&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;克隆ComfyUI仓库&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; xxxx &lt;span class=&#34;token comment&#34;&gt;#工作目录&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/comfyanonymous/ComfyUI.git
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; ComfyUI
pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; requirements.txt &lt;span class=&#34;token comment&#34;&gt;# 安装依赖&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-验证显卡识别与性能调优&#34;&gt;&lt;a href=&#34;#4-验证显卡识别与性能调优&#34; class=&#34;headerlink&#34; title=&#34;4. 验证显卡识别与性能调优&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 验证显卡识别与性能调优&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;显存与算力优化&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;启用Intel的&lt;strong&gt;XMX引擎&lt;/strong&gt;（AI加速单元）和&lt;strong&gt;XeSS技术&lt;/strong&gt;（超分辨率），可通过设置环境变量优化显存分配410。&lt;/li&gt;
&lt;li&gt;调整ComfyUI配置文件，指定使用&lt;code&gt;XPU&lt;/code&gt;（Intel GPU）而非默认的CUDA。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5-启动comfyui&#34;&gt;&lt;a href=&#34;#5-启动comfyui&#34; class=&#34;headerlink&#34; title=&#34;5.启动comfyui&#34;&gt;&lt;/a&gt;&lt;strong&gt;5.启动comfyui&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;接着上面的目录执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py --use-pytorch-cross-attention &lt;span class=&#34;token parameter variable&#34;&gt;--highvram&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;快捷脚本&#34;&gt;&lt;a href=&#34;#快捷脚本&#34; class=&#34;headerlink&#34; title=&#34;快捷脚本&#34;&gt;&lt;/a&gt;快捷脚本&lt;/h4&gt;&lt;h5 id=&#34;cmd&#34;&gt;&lt;a href=&#34;#cmd&#34; class=&#34;headerlink&#34; title=&#34;cmd&#34;&gt;&lt;/a&gt;cmd&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bat&#34; data-language=&#34;bat&#34;&gt;&lt;code class=&#34;language-bat&#34;&gt;call &#34;E:\conda\Scripts\activate.bat&#34; deepl  
call &#34;C:\Program Files (x86)\Intel\oneAPI\setvars.bat&#34;
python main.py --use-pytorch-cross-attention --highvram&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存为&lt;code&gt;.bat&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;powershell&lt;/p&gt;
&lt;p&gt;没搞出来&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/18/intel-xian-qia-pao-ai-pei-zhi-jiao-cheng/</guid>
            <title>Intel显卡运行AI配置教程</title>
            <link>https://0xdadream.github.io/2025/02/18/intel-xian-qia-pao-ai-pei-zhi-jiao-cheng/</link>
            <category>intel</category>
            <pubDate>Tue, 18 Feb 2025 16:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Intel显卡运行AI配置教程&#34;&gt;&lt;a href=&#34;#Intel显卡运行AI配置教程&#34; class=&#34;headerlink&#34; title=&#34;Intel显卡运行AI配置教程&#34;&gt;&lt;/a&gt;&lt;strong&gt;Intel显卡运行AI配置教程&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&#34;最新&#34;&gt;&lt;a href=&#34;#最新&#34; class=&#34;headerlink&#34; title=&#34;最新&#34;&gt;&lt;/a&gt;最新&lt;/h2&gt;&lt;p&gt;最近pytorch已经支持Arc显卡了，不需要再安装oneAPI和IPEX，当然以前的版本仍需要（2.5及以前），但是我本地本来是安装过这些组件的，我也不知道不安装会不会报错，可以参考官方文档&lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/articles/tool/pytorch-prerequisites-for-intel-gpu/2-6.html&#34;&gt;PyTorch Prerequisites for Intel® GPUs&lt;/a&gt;，pytorch开发者确实说过免去了那些复杂的操作，可以开箱即用&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;直接在conda环境中执行即可&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate deepl
pip3 &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--pre&lt;/span&gt; torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/xpu&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出true就是成功了&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; torch
torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xpu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;is_available&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# torch.xpu is the API for Intel GPU support&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;训练测试代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; torch
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; torchvision

LR &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.001&lt;/span&gt;
DOWNLOAD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;
DATA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;datasets/cifar10/&#34;&lt;/span&gt;

transform &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; torchvision&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Compose&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
        torchvision&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Resize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        torchvision&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ToTensor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        torchvision&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;transforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Normalize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
train_dataset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; torchvision&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;datasets&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CIFAR10&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
    root&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;DATA&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    train&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    transform&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    download&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;DOWNLOAD&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
train_loader &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;utils&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DataLoader&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dataset&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;train_dataset&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; batch_size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
train_len &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;train_loader&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

model &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; torchvision&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;models&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resnet50&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
criterion &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CrossEntropyLoss&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
optimizer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;optim&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SGD&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;parameters&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; lr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;LR&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; momentum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;train&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
model &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xpu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
criterion &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; criterion&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xpu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Initiating training&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; batch_idx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; target&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;train_loader&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xpu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; target&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xpu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    optimizer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;zero_grad&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    output &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; model&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    loss &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; criterion&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;output&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; target&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    loss&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;backward&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    optimizer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;step&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;batch_idx &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
         iteration_loss &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; loss&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
         &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Iteration [&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;batch_idx&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;train_len&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;], Loss: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;iteration_loss&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token format-spec&#34;&gt;.4f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;save&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token string&#34;&gt;&#34;model_state_dict&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;state_dict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token string&#34;&gt;&#34;optimizer_state_dict&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; optimizer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;state_dict&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token string&#34;&gt;&#34;checkpoint.pth&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Execution finished&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;适用硬件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intel Arc系列显卡（如A770 16G）驱动为6559&lt;/li&gt;
&lt;li&gt;win11&lt;/li&gt;
&lt;li&gt;oneAPI==2025.0.1&lt;/li&gt;
&lt;li&gt;torch==2.3.110&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-安装Miniconda并配置Python虚拟环境&#34;&gt;&lt;a href=&#34;#1-安装Miniconda并配置Python虚拟环境&#34; class=&#34;headerlink&#34; title=&#34;1. 安装Miniconda并配置Python虚拟环境&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 安装Miniconda并配置Python虚拟环境&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;可以参考这个&lt;a href=&#34;https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/&#34;&gt;conda安装及使用 | 逐梦&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;步骤说明&#34;&gt;&lt;a href=&#34;#步骤说明&#34; class=&#34;headerlink&#34; title=&#34;步骤说明&#34;&gt;&lt;/a&gt;&lt;strong&gt;步骤说明&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载Miniconda&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 &lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;Miniconda官网&lt;/a&gt;，选择对应操作系统的安装包（建议Python 3.11版本）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装Miniconda&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows：双击安装包，按提示操作，勾选“Add to PATH”选项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux/macOS：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt; Miniconda3-latest-Linux-x86_64.sh  &lt;span class=&#34;token comment&#34;&gt;# 根据文件名调整  &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建Python 3.11虚拟环境&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; intel-ai &lt;span class=&#34;token assign-left variable&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.11&lt;/span&gt;  
conda activate intel-ai  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-更新Intel显卡驱动&#34;&gt;&lt;a href=&#34;#2-更新Intel显卡驱动&#34; class=&#34;headerlink&#34; title=&#34;2. 更新Intel显卡驱动&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 更新Intel显卡驱动&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;关键操作&#34;&gt;&lt;a href=&#34;#关键操作&#34; class=&#34;headerlink&#34; title=&#34;关键操作&#34;&gt;&lt;/a&gt;&lt;strong&gt;关键操作&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载最新驱动&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 &lt;a href=&#34;https://www.intel.cn/content/www/cn/zh/download-center/home.html&#34;&gt;Intel驱动下载页&lt;/a&gt;，选择Arc系列显卡的最新驱动（如&lt;strong&gt;32.0.101.6559&lt;/strong&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装驱动&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows：运行安装程序，按提示完成安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux：使用包管理器（如Ubuntu/Debian）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; intel-opencl-icd intel-level-zero-gpu level-zero  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证驱动状态&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows：按 &lt;code&gt;Win + X&lt;/code&gt; &amp;gt; 设备管理器 &amp;gt; 显示适配器，确认显卡型号正确。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;lspci &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; intel  &lt;span class=&#34;token comment&#34;&gt;# 确认显卡识别  &lt;/span&gt;
clinfo  &lt;span class=&#34;token comment&#34;&gt;# 检查OpenCL支持  &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-安装Visual-Studio-Build-Tools（仅Windows）&#34;&gt;&lt;a href=&#34;#3-安装Visual-Studio-Build-Tools（仅Windows）&#34; class=&#34;headerlink&#34; title=&#34;3. 安装Visual Studio Build Tools（仅Windows）&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 安装Visual Studio Build Tools（仅Windows）&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;操作步骤&#34;&gt;&lt;a href=&#34;#操作步骤&#34; class=&#34;headerlink&#34; title=&#34;操作步骤&#34;&gt;&lt;/a&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;下载Visual Studio 2022&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;访问 &lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio官网&lt;/a&gt;，下载社区版。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装C++桌面开发组件&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;在安装界面勾选：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用C++的桌面开发&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows 10/11 SDK&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C++ CMake工具&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;默认也行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证安装&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;打开命令提示符，运行 &lt;code&gt;cl&lt;/code&gt; 命令，确认返回编译器版本信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-安装Intel-oneAPI工具包&#34;&gt;&lt;a href=&#34;#4-安装Intel-oneAPI工具包&#34; class=&#34;headerlink&#34; title=&#34;4. 安装Intel oneAPI工具包&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 安装Intel oneAPI工具包&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;步骤说明-1&#34;&gt;&lt;a href=&#34;#步骤说明-1&#34; class=&#34;headerlink&#34; title=&#34;步骤说明&#34;&gt;&lt;/a&gt;&lt;strong&gt;步骤说明&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载oneAPI Base Toolkit&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 &lt;a href=&#34;https://www.intel.cn/content/www/cn/zh/developer/tools/oneapi/toolkits.html&#34;&gt;oneAPI官网&lt;/a&gt;，选择Base Toolkit-&amp;gt;windows-&amp;gt;offline installer，然后点击右边往下一点Continue as a Guest (download starts immediately) →下载&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装oneAPI&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows：运行安装程序，默认勾选所有组件，一直点就行了。&lt;/li&gt;
&lt;li&gt;Linux：使用包管理器或脚本安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;激活oneAPI环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;call &lt;span class=&#34;token string&#34;&gt;&#34;C:\Program Files (x86)\Intel\oneAPI\setvars.bat&#34;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# cmd使用&lt;/span&gt;
cmd.exe &lt;span class=&#34;token string&#34;&gt;&#34;/K&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#34;C:\Program Files (x86)\Intel\oneAPI\setvars.bat&#34; &amp;amp;&amp;amp; powershell&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# powershell使用&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /opt/intel/oneapi/setvars.sh  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-安装Intel-Extension-for-PyTorch-IPEX&#34;&gt;&lt;a href=&#34;#5-安装Intel-Extension-for-PyTorch-IPEX&#34; class=&#34;headerlink&#34; title=&#34;5. 安装Intel Extension for PyTorch (IPEX)&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 安装Intel Extension for PyTorch (IPEX)&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;操作命令&#34;&gt;&lt;a href=&#34;#操作命令&#34; class=&#34;headerlink&#34; title=&#34;操作命令&#34;&gt;&lt;/a&gt;&lt;strong&gt;操作命令&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;激活虚拟环境与oneAPI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;powershell中执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; xxx &lt;span class=&#34;token comment&#34;&gt;#最好切换到工作目录&lt;/span&gt;
conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; intel-ai &lt;span class=&#34;token assign-left variable&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.11&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 前面创建过环境没有再次创建&lt;/span&gt;
conda activate intel-ai &lt;span class=&#34;token comment&#34;&gt;# 激活环境 &lt;/span&gt;
conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libjepg-turbo &lt;span class=&#34;token comment&#34;&gt;#提前安装这两个库以免报错&lt;/span&gt;
conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libpng 
cmd.exe &lt;span class=&#34;token string&#34;&gt;&#34;/K&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#34;C:\Program Files (x86)\Intel\oneAPI\setvars.bat&#34; &amp;amp;&amp;amp; powershell&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 根据操作系统执行上述对应的oneAPI激活命令&lt;/span&gt;
conda activate intel-ai &lt;span class=&#34;token comment&#34;&gt;# 再次激活环境&lt;/span&gt;
conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; pkg-config libuv &lt;span class=&#34;token comment&#34;&gt;# 安装一些依赖&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装PyTorch与IPEX&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 安装PyTorch CPU版本（IPEX会自动启用GPU支持）  &lt;/span&gt;
pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.3&lt;/span&gt;.1.post0+cxx11.abi &lt;span class=&#34;token assign-left variable&#34;&gt;torchvision&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.18&lt;/span&gt;.1.post0+cxx11.abi &lt;span class=&#34;token assign-left variable&#34;&gt;torchaudio&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.3&lt;/span&gt;.1.post0+cxx11.abi intel-extension-for-pytorch&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.3&lt;/span&gt;.110.post0+xpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/ &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.5&lt;/span&gt;.1+cxx11.abi &lt;span class=&#34;token assign-left variable&#34;&gt;torchvision&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.20&lt;/span&gt;.1+cxx11.abi &lt;span class=&#34;token assign-left variable&#34;&gt;torchaudio&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.5&lt;/span&gt;.1+cxx11.abi intel-extension-for-pytorch&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.5&lt;/span&gt;.10+xpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/
&lt;span class=&#34;token comment&#34;&gt;# 最新版实测也能用&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-验证IPEX安装与显卡识别&#34;&gt;&lt;a href=&#34;#6-验证IPEX安装与显卡识别&#34; class=&#34;headerlink&#34; title=&#34;6. 验证IPEX安装与显卡识别&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 验证IPEX安装与显卡识别&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;验证步骤&#34;&gt;&lt;a href=&#34;#验证步骤&#34; class=&#34;headerlink&#34; title=&#34;验证步骤&#34;&gt;&lt;/a&gt;&lt;strong&gt;验证步骤&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行Python脚本检查GPU支持&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; torch  
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; intel_extension_for_pytorch &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; ipex  

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;PyTorch版本: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__version__&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;IPEX版本: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;ipex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__version__&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Intel GPU是否可用: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xpu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;is_available&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;检测到的Intel GPU设备: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;torch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xpu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_device_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;python &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;import torch; import intel_extension_for_pytorch as ipex; print(&#39;PyTorch版本:&#39;, torch.__version__); print(&#39;IPEX版本:&#39;, ipex.__version__); print(&#39;Intel GPU是否可用:&#39;, torch.xpu.is_available()); print(&#39;检测到的Intel GPU设备:&#39;, torch.xpu.get_device_name(0))&#34;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 一键脚本&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;预期输出&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;PyTorch版本: &lt;span class=&#34;token number&#34;&gt;2.1&lt;/span&gt;.0  
IPEX版本: &lt;span class=&#34;token number&#34;&gt;2.1&lt;/span&gt;.0  
Intel GPU是否可用: True  
检测到的Intel GPU设备: Intel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;R&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Arc&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;TM&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; A770 Graphics  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;官方脚本&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;python &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;import torch; import intel_extension_for_pytorch as ipex; print(torch.__version__); print(ipex.__version__); [print(f&#39;[{i}]: {torch.xpu.get_device_properties(i)}&#39;) for i in range(torch.xpu.device_count())];&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此已经安装成功了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-常见问题解决&#34;&gt;&lt;a href=&#34;#7-常见问题解决&#34; class=&#34;headerlink&#34; title=&#34;7. 常见问题解决&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 常见问题解决&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;遇到问题大多数时候都是各种版本不匹配，例如&lt;code&gt;raise err OSError: [WinError 126] 找不到指定的模块。&lt;/code&gt;，尽量使用教程相同版本。&lt;/p&gt;
&lt;p&gt;报错信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;E:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;conda&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;envs&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;deepll&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Lib&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;site-packages&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;torchvision&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;image.py:14: UserWarning: Failed to load image Python extension: &lt;span class=&#34;token string&#34;&gt;&#39;Could not find module &#39;&lt;/span&gt;E:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;conda&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;envs&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;deepll&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Lib&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;site-packages&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;torchvision&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;image.pyd&lt;span class=&#34;token string&#34;&gt;&#39; (or one of its dependencies). Try using the full path with constructor syntax.&#39;&lt;/span&gt;If you don&#39;t plan on using image functionality from &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;torchvision.io&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;, you can ignore this warning. Otherwise, there might be something wrong with your environment. Did you have &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;libjpeg&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; or &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;libpng&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; installed before building &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;torchvision&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; from source?
  warn&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方案&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate deepl &lt;span class=&#34;token comment&#34;&gt;# 激活对应环境&lt;/span&gt;
conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libjepg-turbo
conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libpng&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若有其他缺少库报错，安装对应库即可，可以参考文章&lt;a href=&#34;https://0xdadream.github.io/2025/02/18/python-ku-bao-cuo-hui-zong/&#34;&gt;python库报错汇总 | 逐梦&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;通过本教程，你已成功配置Intel显卡的AI开发环境，并验证了IPEX的GPU加速支持。接下来可尝试运行AI模型（如Stable Diffusion、LLM推理），并通过环境变量 &lt;code&gt;LIBOMPTARGET_PLUGIN=LEVEL0&lt;/code&gt; 或 &lt;code&gt;SYCL_CACHE_PERSISTENT=1&lt;/code&gt; 进一步优化性能。&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.intel.com/content/www/us/en/developer/tools/oneapi/base-toolkit-download.html&#34;&gt;获取英特尔® oneAPI Base Toolkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://intel.github.io/intel-extension-for-pytorch/&#34;&gt;Welcome to Intel® Extension for PyTorch* Documentation!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1dKaMeXE3B/?vd_source=b809bacd004cf290c08f612fa076f2eb&#34;&gt;intel arc 显卡 ComfyUI 安装教程_哔哩哔哩_bilibili&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/yunying985/article/details/140589680&#34;&gt;AI绘画 | 只要10步让你在英特尔A770显卡下安装ComfyUI运行StableDiffusion3最新开源模型_arc a750 安装comfyui-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pytorch.org/docs/main/notes/get_start_xpu.html&#34;&gt;Getting Started on Intel GPU — PyTorch main documentation&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/18/python-ku-bao-cuo-hui-zong/</guid>
            <title>python库报错汇总</title>
            <link>https://0xdadream.github.io/2025/02/18/python-ku-bao-cuo-hui-zong/</link>
            <category>python</category>
            <pubDate>Tue, 18 Feb 2025 14:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;python库报错汇总&#34;&gt;&lt;a href=&#34;#python库报错汇总&#34; class=&#34;headerlink&#34; title=&#34;python库报错汇总&#34;&gt;&lt;/a&gt;python库报错汇总&lt;/h1&gt;&lt;p&gt;形如&lt;code&gt;ModuleNotFoundError: No module named &#39;xxx&#39;&lt;/code&gt;的报错&lt;/p&gt;
&lt;p&gt;首先先试一试&lt;code&gt;pip install xxx&lt;/code&gt;能安装就能解决，没有就看下面，只是我遇到的&lt;/p&gt;
&lt;h2 id=&#34;ModuleNotFoundError-No-module-named-‘cv2’&#34;&gt;&lt;a href=&#34;#ModuleNotFoundError-No-module-named-‘cv2’&#34; class=&#34;headerlink&#34; title=&#34;ModuleNotFoundError: No module named ‘cv2’&#34;&gt;&lt;/a&gt;ModuleNotFoundError: No module named ‘cv2’&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; opencv-contrib-python &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ModuleNotFoundError-No-module-named-‘colour-io’-‘colour’-is-not-a-package&#34;&gt;&lt;a href=&#34;#ModuleNotFoundError-No-module-named-‘colour-io’-‘colour’-is-not-a-package&#34; class=&#34;headerlink&#34; title=&#34;ModuleNotFoundError: No module named ‘colour.io’; ‘colour’ is not a package&#34;&gt;&lt;/a&gt;ModuleNotFoundError: No module named ‘colour.io’; ‘colour’ is not a package&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; colour-science&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;No-module-named-‘cpuinfo’&#34;&gt;&lt;a href=&#34;#No-module-named-‘cpuinfo’&#34; class=&#34;headerlink&#34; title=&#34;No module named ‘cpuinfo’&#34;&gt;&lt;/a&gt;No module named ‘cpuinfo’&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; py-cpuinfo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ModuleNotFoundError-No-module-named-‘imageio‘&#34;&gt;&lt;a href=&#34;#ModuleNotFoundError-No-module-named-‘imageio‘&#34; class=&#34;headerlink&#34; title=&#34;ModuleNotFoundError: No module named ‘imageio‘&#34;&gt;&lt;/a&gt;ModuleNotFoundError: No module named ‘imageio‘&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; imgaug&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;解决ModuleNotFoundError-No-module-named-‘skimage‘&#34;&gt;&lt;a href=&#34;#解决ModuleNotFoundError-No-module-named-‘skimage‘&#34; class=&#34;headerlink&#34; title=&#34;解决ModuleNotFoundError: No module named ‘skimage‘&#34;&gt;&lt;/a&gt;解决ModuleNotFoundError: No module named ‘skimage‘&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; scikit-image&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;No-module-named-‘open-clip‘&#34;&gt;&lt;a href=&#34;#No-module-named-‘open-clip‘&#34; class=&#34;headerlink&#34; title=&#34;No module named ‘open_clip‘&#34;&gt;&lt;/a&gt;No module named ‘open_clip‘&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; open_clip_torch&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ERROR-No-matching-distribution-found-for-triton&#34;&gt;&lt;a href=&#34;#ERROR-No-matching-distribution-found-for-triton&#34; class=&#34;headerlink&#34; title=&#34;ERROR: No matching distribution found for triton&#34;&gt;&lt;/a&gt;ERROR: No matching distribution found for triton&lt;/h2&gt;&lt;p&gt;到&lt;a href=&#34;https://hf-mirror.com/madbuda/triton-windows-builds&#34;&gt;madbuda/triton-windows-builds · HF Mirror&lt;/a&gt;下载对应windows构建包&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; 下载目录
pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; triton-3.0.0-cp311-cp311-win_amd64.whl  &lt;span class=&#34;token comment&#34;&gt;# 文件名&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ImportError-cannot-import-name-‘soft-unicode‘-from-‘markupsafe‘&#34;&gt;&lt;a href=&#34;#ImportError-cannot-import-name-‘soft-unicode‘-from-‘markupsafe‘&#34; class=&#34;headerlink&#34; title=&#34;ImportError: cannot import name ‘soft_unicode‘ from ‘markupsafe‘&#34;&gt;&lt;/a&gt;ImportError: cannot import name ‘soft_unicode‘ from ‘markupsafe‘&lt;/h2&gt;&lt;p&gt;执行命令重新安装&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;markupsafe&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.0&lt;/span&gt;.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;ERROR: Could not install packages due to an OSError: [WinError 5] 拒绝访问。： ‘E:\conda\envs\deepl\Lib\site-packages\cv2\cv2.pyd’ Consider using the &lt;code&gt;--user&lt;/code&gt; option or check the permissions.&lt;/p&gt;
&lt;p&gt;如他说添加&lt;code&gt;--user&lt;/code&gt;参数&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/15/powershell-pei-zhi-mu-lu/</guid>
            <title>powershell配置目录</title>
            <link>https://0xdadream.github.io/2025/02/15/powershell-pei-zhi-mu-lu/</link>
            <category>命令行</category>
            <pubDate>Sat, 15 Feb 2025 21:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;powershell配置目录&#34;&gt;&lt;a href=&#34;#powershell配置目录&#34; class=&#34;headerlink&#34; title=&#34;powershell配置目录&#34;&gt;&lt;/a&gt;powershell配置目录&lt;/h1&gt;&lt;p&gt;执行命令&lt;code&gt;$PROFILE&lt;/code&gt;会得到类似于&lt;code&gt;C:\Users\xxx\Documents\PowerShell\Microsoft.PowerShell_profile.ps1&lt;/code&gt;的目录&lt;/p&gt;
&lt;p&gt;这个目录的文件就是你的powershell预执行的命令，相当于每次启动powershell都行执行一遍&lt;/p&gt;
&lt;p&gt;然后这个目录还会存powershell的安装的插件文件，备份这个文件，即使卸载重装配置也不会变，但是要注意不同版本命令可能不一样。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/15/conda-zai-powershell7.5-zhi-xing-chu-xian-wen-ti/</guid>
            <title>conda在powershell7.5执行出现问题</title>
            <link>https://0xdadream.github.io/2025/02/15/conda-zai-powershell7.5-zhi-xing-chu-xian-wen-ti/</link>
            <category>conda</category>
            <category>powershell</category>
            <pubDate>Sat, 15 Feb 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;conda在powershell7-5执行出现问题&#34;&gt;&lt;a href=&#34;#conda在powershell7-5执行出现问题&#34; class=&#34;headerlink&#34; title=&#34;conda在powershell7.5执行出现问题&#34;&gt;&lt;/a&gt;conda在powershell7.5执行出现问题&lt;/h1&gt;&lt;h2 id=&#34;问题描述&#34;&gt;&lt;a href=&#34;#问题描述&#34; class=&#34;headerlink&#34; title=&#34;问题描述&#34;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;执行命令结果如下，不能达到预期&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda
usage: conda-script.py &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;-h&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;-v&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;--no-plugins&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;-V&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; COMMAND &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.
conda-script.py: error: argument COMMAND: invalid choice: &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;choose from &lt;span class=&#34;token string&#34;&gt;&#39;activate&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;clean&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;commands&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;compare&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;config&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;create&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;deactivate&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;env&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;export&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;info&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;init&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;install&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;list&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;notices&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;package&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;build&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;content-trust&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;convert&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;debug&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;develop&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;doctor&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;index&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;inspect&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;metapackage&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;render&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;repoquery&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;skeleton&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;pack&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;repo&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;token&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;server&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;remove&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;uninstall&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;rename&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;run&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;search&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;update&#39;&lt;/span&gt;, &lt;span class=&#34;token string&#34;&gt;&#39;upgrade&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;原因&#34;&gt;&lt;a href=&#34;#原因&#34; class=&#34;headerlink&#34; title=&#34;原因&#34;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;升级版本后引起的问题，具体等修复&lt;/p&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;&lt;a href=&#34;#解决方法&#34; class=&#34;headerlink&#34; title=&#34;解决方法&#34;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;p&gt;powershell版本降级，到&lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/tag/v7.4.7&#34;&gt;Release v7.4.7 Release of PowerShell · PowerShell/PowerShell&lt;/a&gt;下载msi文件，安装老版本，7.5无所谓删不删，若要删除建议先备份”C:\Users\xxx\Documents\PowerShell”目录下的文件，这是所有配置文件，微软商店下载的powershell和github安装的powershell共用这个配置文件&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/issues/24942&#34;&gt;标题： PowerShell 7.5.0 中的 Conda 环境激活问题 ·问题 #24942 ·PowerShell/PowerShell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/PowerShell/PowerShell/issues/24869&#34;&gt;Conda does not run as expected on PowerShell 7.5.0 · Issue #24869 · PowerShell/PowerShell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/conda/conda/issues/14292&#34;&gt;在 Powershell 7.5 预览版 4 上，在“conda activate base”之后，“Env：_CE_CONDA”和“Env：_CE_M”再次出现。·问题 #14292 ·conda/康达&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/12/emby-shi-yong/</guid>
            <title>emby使用</title>
            <link>https://0xdadream.github.io/2025/02/12/emby-shi-yong/</link>
            <category>emby</category>
            <pubDate>Wed, 12 Feb 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;emby使用&#34;&gt;&lt;a href=&#34;#emby使用&#34; class=&#34;headerlink&#34; title=&#34;emby使用&#34;&gt;&lt;/a&gt;emby使用&lt;/h1&gt;&lt;h2 id=&#34;1-准备工作&#34;&gt;&lt;a href=&#34;#1-准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 准备工作&#34;&gt;&lt;/a&gt;1. 准备工作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;核对信息&lt;/p&gt;
&lt;p&gt;确认你已获得完整的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器地址（通常为一个 URL 或 IP 地址）&lt;/li&gt;
&lt;li&gt;端口号（如果提供了非默认端口，需要特别注意）&lt;/li&gt;
&lt;li&gt;连接协议（通常为 http 或 https）&lt;/li&gt;
&lt;li&gt;如有账号和密码或令牌信息，也要一并准备好&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;网络要求&lt;/strong&gt;&lt;br&gt;由于“机场节点”往往用于突破网络限制，确保你的设备已根据要求连接 VPN 或配置代理（如果提供方有说明需要）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-在-Emby-客户端中添加服务器&#34;&gt;&lt;a href=&#34;#2-在-Emby-客户端中添加服务器&#34; class=&#34;headerlink&#34; title=&#34;2. 在 Emby 客户端中添加服务器&#34;&gt;&lt;/a&gt;2. 在 Emby 客户端中添加服务器&lt;/h2&gt;&lt;h3 id=&#34;（1）安装-Emby-客户端&#34;&gt;&lt;a href=&#34;#（1）安装-Emby-客户端&#34; class=&#34;headerlink&#34; title=&#34;（1）安装 Emby 客户端&#34;&gt;&lt;/a&gt;（1）安装 Emby 客户端&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;到&lt;a href=&#34;https://t.me/GentleSecretary&#34;&gt;Telegram: Contact @GentleSecretary&lt;/a&gt;搜索emby下载对应版本（首选）&lt;/li&gt;
&lt;li&gt;在安卓手机上，可从 Google Play 商店或其他应用市场下载安装官方 Emby 客户端（这个需要开会员）&lt;/li&gt;
&lt;li&gt;也可以使用第三方支持 Emby 协议的播放器（如 Infuse、Fileball 等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;（2）进入服务器设置&#34;&gt;&lt;a href=&#34;#（2）进入服务器设置&#34; class=&#34;headerlink&#34; title=&#34;（2）进入服务器设置&#34;&gt;&lt;/a&gt;（2）进入服务器设置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打开 Emby 客户端后，进入【设置】或【服务器设置】页面，或者直接弹出填写页面。&lt;/li&gt;
&lt;li&gt;选择“添加服务器”或“连接到服务器”的选项。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;（3）填写服务器地址&#34;&gt;&lt;a href=&#34;#（3）填写服务器地址&#34; class=&#34;headerlink&#34; title=&#34;（3）填写服务器地址&#34;&gt;&lt;/a&gt;（3）填写服务器地址&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在“服务器地址”栏中输入你获得的地址，格式一般为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://服务器地址:端口&lt;/code&gt; 或者 &lt;code&gt;https://服务器地址:端口&lt;/code&gt;&lt;br&gt;例如，如果你的地址为 &lt;code&gt;http://123.45.67.89&lt;/code&gt;，而端口为 8096，则填写：&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://123.45.67.89:8096&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注意：建议去除地址末尾多余的斜杠“/”，以免影响连接。（参考“线路说明”中对地址格式的建议 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.freeembyguide.eu.org/docs/guide/server&#34;&gt;wiki.freeembyguide.eu.org&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;（4）连接测试&#34;&gt;&lt;a href=&#34;#（4）连接测试&#34; class=&#34;headerlink&#34; title=&#34;（4）连接测试&#34;&gt;&lt;/a&gt;（4）连接测试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;填写后，点击“连接”或“测试连接”。&lt;/li&gt;
&lt;li&gt;如果服务器运行正常且网络环境（或 VPN/代理）配置正确，客户端会自动加载媒体库。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-登录与账号验证&#34;&gt;&lt;a href=&#34;#3-登录与账号验证&#34; class=&#34;headerlink&#34; title=&#34;3. 登录与账号验证&#34;&gt;&lt;/a&gt;3. 登录与账号验证&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;如果该 Emby 机场服务要求身份验证，系统会提示你输入账号和密码。&lt;/li&gt;
&lt;li&gt;输入正确的账号信息后，继续操作即可访问媒体资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-高级设置（仅适用于管理人员或自建服务器）&#34;&gt;&lt;a href=&#34;#4-高级设置（仅适用于管理人员或自建服务器）&#34; class=&#34;headerlink&#34; title=&#34;4. 高级设置（仅适用于管理人员或自建服务器）&#34;&gt;&lt;/a&gt;4. 高级设置（仅适用于管理人员或自建服务器）&lt;/h2&gt;&lt;p&gt;如果你自己搭建 Emby 服务器并挂接了硬盘存储，可能还需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置媒体库&lt;/p&gt;
&lt;p&gt;在 Emby 服务器管理后台，设置媒体库的路径为硬盘挂载目录。这样服务器才能正确扫描并整理硬盘中的影音文件。（更多细节可参考 CSDN 上关于挂接硬盘的说明 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wenku.csdn.net/answer/7f9bf651623542dea45bafc64aed261c&#34;&gt;wenku.csdn.net&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;网络加速和直连设置&lt;/strong&gt;&lt;br&gt;有些机场节点提供多条优化线路（直连或代理），如果遇到播放卡顿或加载慢的情况，可尝试切换线路或调整客户端的播放质量设置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-常见问题及排查&#34;&gt;&lt;a href=&#34;#5-常见问题及排查&#34; class=&#34;headerlink&#34; title=&#34;5. 常见问题及排查&#34;&gt;&lt;/a&gt;5. 常见问题及排查&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;无法连接服务器&lt;ul&gt;
&lt;li&gt;检查网络环境，确保已开启必要的 VPN/代理。&lt;/li&gt;
&lt;li&gt;再次核对地址和端口是否输入正确。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;播放卡顿或加载缓慢&lt;ul&gt;
&lt;li&gt;可能与服务器负载或网络带宽有关，尝试使用代理访问。&lt;/li&gt;
&lt;li&gt;查看是否有备用线路，或者联系服务提供方反馈问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSL 证书错误&lt;ul&gt;
&lt;li&gt;如果使用 https 出现证书问题，确认是否需要手动安装信任证书，或联系服务提供方了解详细要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/02/11/google-hacking-shi-yong-gai-jin-ban/</guid>
            <title>google hacking使用-改进版</title>
            <link>https://0xdadream.github.io/2025/02/11/google-hacking-shi-yong-gai-jin-ban/</link>
            <category>google</category>
            <pubDate>Tue, 11 Feb 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;google-hacking使用-改进版&#34;&gt;&lt;a href=&#34;#google-hacking使用-改进版&#34; class=&#34;headerlink&#34; title=&#34;google hacking使用-改进版&#34;&gt;&lt;/a&gt;google hacking使用-改进版&lt;/h1&gt;&lt;p&gt;以下是 &lt;strong&gt;Google Hacking 的完整语法列表&lt;/strong&gt;和&lt;strong&gt;高级组合示例&lt;/strong&gt;，涵盖渗透测试、信息收集、漏洞挖掘等场景的实用技巧。所有语法均基于 Google 搜索引擎的合法功能，但请严格遵守法律和道德规范。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;一、完整-Google-Hacking-语法列表&#34;&gt;&lt;a href=&#34;#一、完整-Google-Hacking-语法列表&#34; class=&#34;headerlink&#34; title=&#34;一、完整 Google Hacking 语法列表&#34;&gt;&lt;/a&gt;&lt;strong&gt;一、完整 Google Hacking 语法列表&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-基础操作符&#34;&gt;&lt;a href=&#34;#1-基础操作符&#34; class=&#34;headerlink&#34; title=&#34;1. 基础操作符&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 基础操作符&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;操作符&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;site:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;限定搜索特定域名或子域名&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;site:example.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;标题包含关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&#34;login&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;allintitle:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;标题包含所有指定关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;allintitle:&#34;admin&#34; &#34;dashboard&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;inurl:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;URL 路径包含关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;inurl:/admin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;allinurl:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;URL 路径包含所有指定关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;allinurl:login.php?user=&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;filetype:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;搜索特定文件类型&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;filetype:pdf &#34;confidential&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ext:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;按文件扩展名搜索（同 &lt;code&gt;filetype:&lt;/code&gt;）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ext:sql &#34;password&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intext:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;正文内容包含关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intext:&#34;数据库密码&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;allintext:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;正文包含所有指定关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;allintext:&#34;username&#34; &#34;password&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;cache:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;查看 Google 缓存的页面&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;cache:example.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;related:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;查找类似网站&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;related:github.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;info:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;获取网站的 Google 摘要信息&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;info:example.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;define:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;搜索词语定义&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;define:SQL注入&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;2-逻辑操作符&#34;&gt;&lt;a href=&#34;#2-逻辑操作符&#34; class=&#34;headerlink&#34; title=&#34;2. 逻辑操作符&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 逻辑操作符&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;操作符&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;AND&lt;/code&gt; 或空格&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;同时满足多个条件&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;site:example.com 密码&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;OR&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;满足任意一个条件&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;漏洞 OR 后门&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;排除关键词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;登录 -site:example.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;组合复杂逻辑&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;(inurl:admin OR intitle:admin) -论坛&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;3-高级操作符&#34;&gt;&lt;a href=&#34;#3-高级操作符&#34; class=&#34;headerlink&#34; title=&#34;3. 高级操作符&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 高级操作符&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;操作符&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;通配符（匹配任意字符）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;username:* password:*&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;...&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;精确匹配短语&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;您的密码错误&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;..&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;数值范围搜索&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;价格 $100..$500&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;AROUND(N)&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;关键词间距不超过 N 个词&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;密码&#34; AROUND(5) &#34;泄露&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;weather:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;搜索某地天气&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;weather:北京&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stocks:&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;搜索股票代码&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stocks:GOOG&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;4-隐藏功能&#34;&gt;&lt;a href=&#34;#4-隐藏功能&#34; class=&#34;headerlink&#34; title=&#34;4. 隐藏功能&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 隐藏功能&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;时间筛选&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;限定时间范围（通过搜索工具栏）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;最近一年、自定义日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;图片搜索&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;通过图片反向搜索敏感信息&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;上传图片查找来源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;地图数据&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;搜索暴露的地理标记信息&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&#34;security camera&#34; site:google.com/maps&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;二、组合示例大全（按场景分类）&#34;&gt;&lt;a href=&#34;#二、组合示例大全（按场景分类）&#34; class=&#34;headerlink&#34; title=&#34;二、组合示例大全（按场景分类）&#34;&gt;&lt;/a&gt;&lt;strong&gt;二、组合示例大全&lt;/strong&gt;（按场景分类）&lt;/h3&gt;&lt;h4 id=&#34;1-敏感文件泄露&#34;&gt;&lt;a href=&#34;#1-敏感文件泄露&#34; class=&#34;headerlink&#34; title=&#34;1. 敏感文件泄露&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 敏感文件泄露&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;场景&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;数据库备份&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;filetype:sql &#34;DROP TABLE&#34; site:example.com&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;搜索 SQL 备份文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;配置文件&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&#34;index of&#34; &#34;config.php&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;查找 PHP 配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;日志文件&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ext:log &#34;error&#34; &#34;password&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;包含密码的日志文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;密钥文件&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;filetype:key private&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;私钥文件泄露&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;2-后台与登录页面&#34;&gt;&lt;a href=&#34;#2-后台与登录页面&#34; class=&#34;headerlink&#34; title=&#34;2. 后台与登录页面&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 后台与登录页面&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;场景&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;管理员后台&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&#34;admin login&#34; inurl:/admin&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;未授权访问的管理页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;默认密码&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;默认密码&#34; site:routerlogin.net&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;设备默认凭据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;弱口令提示&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intext:&#34;用户名或密码错误&#34; inurl:login&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;登录页面错误信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;3-漏洞利用&#34;&gt;&lt;a href=&#34;#3-漏洞利用&#34; class=&#34;headerlink&#34; title=&#34;3. 漏洞利用&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 漏洞利用&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;场景&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SQL 注入点&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;inurl:&#34;id=&#34; &amp;amp; intext:&#34;Warning: mysql&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;存在报错信息的注入点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;目录遍历&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&#34;index of /&#34; &#34;parent directory&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;开放目录列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;API 接口暴露&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;inurl:/api/v1 intext:&#34;apikey&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;泄露的 API 密钥&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;4-设备与系统&#34;&gt;&lt;a href=&#34;#4-设备与系统&#34; class=&#34;headerlink&#34; title=&#34;4. 设备与系统&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 设备与系统&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;场景&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;网络摄像头&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;inurl:/view.shtml intitle:&#34;Live View&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;公开的摄像头流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;路由器管理&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intitle:&#34;RouterOS&#34; &#34;admin&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;未授权的路由器配置页面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;打印机控制台&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;inurl:&#34;/hp/device/this.LCDispatcher&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;惠普打印机管理界面&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;5-开源情报（OSINT）&#34;&gt;&lt;a href=&#34;#5-开源情报（OSINT）&#34; class=&#34;headerlink&#34; title=&#34;5. 开源情报（OSINT）&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 开源情报（OSINT）&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;场景&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;员工信息&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;site:linkedin.com &#34;CTO&#34; &#34;example.com&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;通过 LinkedIn 收集员工职位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;文档元数据&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;filetype:docx &#34;作者：张三&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;从 Office 文档提取创建者信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;GitHub 泄露&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;github.com&#34; &#34;password&#34; extension:env&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GitHub 中的敏感环境变量文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;6-错误信息泄露&#34;&gt;&lt;a href=&#34;#6-错误信息泄露&#34; class=&#34;headerlink&#34; title=&#34;6. 错误信息泄露&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 错误信息泄露&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;场景&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;示例&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;调试模式&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intext:&#34;DEBUG MODE&#34; &#34;PHP&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;开启调试模式的网站&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;数据库报错&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&#34;ORA-12541: TNS 无监听程序&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Oracle 数据库错误信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;堆栈跟踪&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;intext:&#34;at java.lang.Thread&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Java 应用崩溃日志&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;三、高阶组合技巧&#34;&gt;&lt;a href=&#34;#三、高阶组合技巧&#34; class=&#34;headerlink&#34; title=&#34;三、高阶组合技巧&#34;&gt;&lt;/a&gt;&lt;strong&gt;三、高阶组合技巧&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-通配符与模糊搜索&#34;&gt;&lt;a href=&#34;#1-通配符与模糊搜索&#34; class=&#34;headerlink&#34; title=&#34;1. 通配符与模糊搜索&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 通配符与模糊搜索&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;搜索带参数的 URL：&lt;br&gt;&lt;code&gt;inurl:*.php?id= *&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找密码重置链接：&lt;br&gt;&lt;code&gt;&#34;password reset&#34; site:example.com inurl:token=*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-时间范围限定&#34;&gt;&lt;a href=&#34;#2-时间范围限定&#34; class=&#34;headerlink&#34; title=&#34;2. 时间范围限定&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 时间范围限定&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;查找近期泄露的数据库：&lt;br&gt;&lt;code&gt;filetype:sql &#34;INSERT INTO users&#34; after:2023-01-01&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-混合逻辑精准定位&#34;&gt;&lt;a href=&#34;#3-混合逻辑精准定位&#34; class=&#34;headerlink&#34; title=&#34;3. 混合逻辑精准定位&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 混合逻辑精准定位&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;排除干扰结果：&lt;br&gt;&lt;code&gt;(intitle:&#34;管理后台&#34; OR inurl:/admin) -site:gov.cn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;组合文件类型与关键词：&lt;br&gt;&lt;code&gt;filetype:xls &#34;员工工资&#34; site:example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-利用错误消息&#34;&gt;&lt;a href=&#34;#4-利用错误消息&#34; class=&#34;headerlink&#34; title=&#34;4. 利用错误消息&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 利用错误消息&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;发现 SQL 注入漏洞：&lt;br&gt;&lt;code&gt;&#34;You have an error in your SQL syntax&#34;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;识别配置错误：&lt;br&gt;&lt;code&gt;&#34;Access denied for user &#39;root&#39;@&#39;localhost&#39;&#34;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;四、防御建议（补充）&#34;&gt;&lt;a href=&#34;#四、防御建议（补充）&#34; class=&#34;headerlink&#34; title=&#34;四、防御建议（补充）&#34;&gt;&lt;/a&gt;&lt;strong&gt;四、防御建议（补充）&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;robots.txt 配置&lt;/strong&gt;：禁止爬虫访问敏感路径（如 &lt;code&gt;/admin&lt;/code&gt;、&lt;code&gt;/config&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件权限控制&lt;/strong&gt;：避免将备份文件（&lt;code&gt;.bak&lt;/code&gt;、&lt;code&gt;.sql&lt;/code&gt;）存放在 Web 目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;错误信息隐藏&lt;/strong&gt;：自定义错误页面，避免暴露堆栈跟踪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定期搜索自身&lt;/strong&gt;：用 &lt;code&gt;site:yourdomain.com&lt;/code&gt; 检查公开信息泄露。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;五、工具增强&#34;&gt;&lt;a href=&#34;#五、工具增强&#34; class=&#34;headerlink&#34; title=&#34;五、工具增强&#34;&gt;&lt;/a&gt;&lt;strong&gt;五、工具增强&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Google Dork 自动化&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.exploit-db.com/google-hacking-database&#34;&gt;GHDB&lt;/a&gt;：直接搜索预定义的漏洞语法。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/...&#34;&gt;DorkGenius&lt;/a&gt;：自动生成高级 Dork 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控与告警&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;Google Alerts&lt;/code&gt; 监控公司关键词（如 &lt;code&gt;site:example.com password&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;六、合法与道德提醒&#34;&gt;&lt;a href=&#34;#六、合法与道德提醒&#34; class=&#34;headerlink&#34; title=&#34;六、合法与道德提醒&#34;&gt;&lt;/a&gt;&lt;strong&gt;六、合法与道德提醒&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;仅用于授权测试&lt;/strong&gt;：渗透前需获得书面许可。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;漏洞报告&lt;/strong&gt;：发现漏洞后联系管理员，参考《&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc9116&#34;&gt;漏洞披露规范&lt;/a&gt;》。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免敏感数据&lt;/strong&gt;：示例中的关键词均为演示用途，请勿针对真实系统测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;七、语法解析与示例&#34;&gt;&lt;a href=&#34;#七、语法解析与示例&#34; class=&#34;headerlink&#34; title=&#34;七、语法解析与示例&#34;&gt;&lt;/a&gt;七、&lt;strong&gt;语法解析与示例&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-index-of-admin&#34;&gt;&lt;a href=&#34;#1-index-of-admin&#34; class=&#34;headerlink&#34; title=&#34;1. index of /admin&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. &lt;code&gt;index of /admin&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：搜索开放目录列表中的 &lt;code&gt;/admin&lt;/code&gt; 目录（常见管理后台路径）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：暴露后台登录页面、未授权访问管理界面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：禁用目录列表（Apache: &lt;code&gt;Options -Indexes&lt;/code&gt;），设置访问权限（如 IP 白名单）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-index-of-passwd&#34;&gt;&lt;a href=&#34;#2-index-of-passwd&#34; class=&#34;headerlink&#34; title=&#34;2. index of /passwd&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. &lt;code&gt;index of /passwd&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：查找 Unix/Linux 系统中的 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件（用户账户信息）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：泄露用户名、UID/GID 等敏感信息（现代系统密码存储在 &lt;code&gt;/etc/shadow&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：确保 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件权限为 &lt;code&gt;644&lt;/code&gt;，禁止 Web 访问系统文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-index-of-password&#34;&gt;&lt;a href=&#34;#3-index-of-password&#34; class=&#34;headerlink&#34; title=&#34;3. index of /password&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. &lt;code&gt;index of /password&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：搜索包含 “password” 关键词的目录或文件（如明文密码文件）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：直接获取明文密码或哈希值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：避免在代码或文件中明文存储密码，使用环境变量或密钥管理服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-index-of-mail&#34;&gt;&lt;a href=&#34;#4-index-of-mail&#34; class=&#34;headerlink&#34; title=&#34;4. index of /mail&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. &lt;code&gt;index of /mail&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：查找邮件服务器或邮件存储目录（如 &lt;code&gt;/var/mail&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：泄露用户邮件内容、账户信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：限制邮件目录的 Web 访问权限，加密存储敏感数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-“index-of-“-passwd&#34;&gt;&lt;a href=&#34;#5-“index-of-“-passwd&#34; class=&#34;headerlink&#34; title=&#34;5. “index of /“ +passwd&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. &lt;code&gt;“index of /“ +passwd&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：在根目录下搜索 &lt;code&gt;passwd&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例结果&lt;/strong&gt;：可能发现 &lt;code&gt;/etc/passwd&lt;/code&gt; 被错误链接到 Web 根目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：检查 Web 目录中是否存在符号链接到系统文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-“index-of-“-password-txt&#34;&gt;&lt;a href=&#34;#6-“index-of-“-password-txt&#34; class=&#34;headerlink&#34; title=&#34;6. “index of /“ +password.txt&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. &lt;code&gt;“index of /“ +password.txt&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：查找 Web 根目录下的 &lt;code&gt;password.txt&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：明文密码文件可直接下载。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：删除测试或临时文件，禁用目录列表。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-“index-of-“-htaccess&#34;&gt;&lt;a href=&#34;#7-“index-of-“-htaccess&#34; class=&#34;headerlink&#34; title=&#34;7. “index of /“ +.htaccess&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. &lt;code&gt;“index of /“ +.htaccess&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：暴露 Apache 服务器的 &lt;code&gt;.htaccess&lt;/code&gt; 配置文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：泄露重定向规则、认证凭据（如 &lt;code&gt;AuthUserFile&lt;/code&gt; 路径）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：限制 &lt;code&gt;.htaccess&lt;/code&gt; 文件权限（如 &lt;code&gt;600&lt;/code&gt;），避免存储敏感信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;8-“index-of-root”&#34;&gt;&lt;a href=&#34;#8-“index-of-root”&#34; class=&#34;headerlink&#34; title=&#34;8. “index of /root”&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. &lt;code&gt;“index of /root”&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：搜索 Unix 系统超级用户（root）的主目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：泄露 root 用户的 SSH 密钥、脚本或日志。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：确保 &lt;code&gt;/root&lt;/code&gt; 目录权限为 &lt;code&gt;700&lt;/code&gt;，禁止 Web 服务器访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9-“index-of-cgi-bin”&#34;&gt;&lt;a href=&#34;#9-“index-of-cgi-bin”&#34; class=&#34;headerlink&#34; title=&#34;9. “index of /cgi-bin”&#34;&gt;&lt;/a&gt;&lt;strong&gt;9. &lt;code&gt;“index of /cgi-bin”&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：查找 CGI 脚本目录（常见于老旧系统）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：利用 CGI 漏洞（如 Shellshock）执行远程代码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：升级或禁用 CGI 模块，设置严格的脚本权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;10-“index-of-logs”&#34;&gt;&lt;a href=&#34;#10-“index-of-logs”&#34; class=&#34;headerlink&#34; title=&#34;10. “index of /logs”&#34;&gt;&lt;/a&gt;&lt;strong&gt;10. &lt;code&gt;“index of /logs”&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：暴露日志文件目录（如访问日志、错误日志）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：日志中可能包含敏感信息（如 SQL 错误中的数据库密码）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：将日志存储在非 Web 目录，定期清理并加密存档。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;11-“index-of-config”&#34;&gt;&lt;a href=&#34;#11-“index-of-config”&#34; class=&#34;headerlink&#34; title=&#34;11. “index of /config”&#34;&gt;&lt;/a&gt;&lt;strong&gt;11. &lt;code&gt;“index of /config”&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：查找配置文件目录（如数据库连接信息）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险&lt;/strong&gt;：泄露 &lt;code&gt;config.php&lt;/code&gt;、&lt;code&gt;settings.ini&lt;/code&gt; 等文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;防御&lt;/strong&gt;：将配置文件移出 Web 目录，使用环境变量注入配置。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
