<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Sat, 21 Dec 2024 12:25:00 +0800</pubDate>
        <lastBuildDate>Sat, 21 Dec 2024 12:25:00 +0800</lastBuildDate>
        <category>tip</category>
        <category>安装</category>
        <category>re</category>
        <category>工具</category>
        <category>Java</category>
        <category>linux</category>
        <category>教程</category>
        <category>环境</category>
        <category>bug</category>
        <category>web</category>
        <category>wp</category>
        <category>攻防世界</category>
        <category>windows</category>
        <category>BUUCTF</category>
        <category>server</category>
        <category>tips</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>python</category>
        <category>git</category>
        <category>java</category>
        <category>tools</category>
        <category>命令</category>
        <category>学习</category>
        <category>php</category>
        <category>文件上传</category>
        <category>区块链</category>
        <category>汇编</category>
        <category>密码学</category>
        <category>i春秋</category>
        <category>powershell</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/12/21/geng-gai-windows-powershell-de-zhi-xing-ce-lue/</guid>
            <title>更改 Windows PowerShell 的执行策略</title>
            <link>https://0xdadream.github.io/2024/12/21/geng-gai-windows-powershell-de-zhi-xing-ce-lue/</link>
            <category>windows</category>
            <category>powershell</category>
            <pubDate>Sat, 21 Dec 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;更改-Windows-PowerShell-的执行策略&#34;&gt;&lt;a href=&#34;#更改-Windows-PowerShell-的执行策略&#34; class=&#34;headerlink&#34; title=&#34;更改 Windows PowerShell 的执行策略&#34;&gt;&lt;/a&gt;更改 Windows PowerShell 的执行策略&lt;/h1&gt;&lt;h3 id=&#34;1-打开-PowerShell-以管理员身份运行&#34;&gt;&lt;a href=&#34;#1-打开-PowerShell-以管理员身份运行&#34; class=&#34;headerlink&#34; title=&#34;1. 打开 PowerShell 以管理员身份运行&#34;&gt;&lt;/a&gt;1. 打开 PowerShell 以管理员身份运行&lt;/h3&gt;&lt;p&gt;首先，您需要以管理员身份运行 PowerShell：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按 &lt;code&gt;Win + X&lt;/code&gt; 并选择“Windows PowerShell (管理员)”。&lt;/li&gt;
&lt;li&gt;如果您使用的是较新的 Windows 版本，也可以搜索“PowerShell”，右键点击并选择“以管理员身份运行”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-检查当前执行策略&#34;&gt;&lt;a href=&#34;#2-检查当前执行策略&#34; class=&#34;headerlink&#34; title=&#34;2. 检查当前执行策略&#34;&gt;&lt;/a&gt;2. 检查当前执行策略&lt;/h3&gt;&lt;p&gt;在更改执行策略之前，您可以查看当前的执行策略设置，执行以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Get-ExecutionPolicy&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该命令将返回当前的执行策略，可能的输出包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Restricted&lt;/code&gt;（默认策略，不允许执行任何脚本）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RemoteSigned&lt;/code&gt;（本地脚本可以运行，下载的脚本需要签名）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unrestricted&lt;/code&gt;（允许所有脚本运行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ByPass&lt;/code&gt;（完全忽略执行策略）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-修改执行策略&#34;&gt;&lt;a href=&#34;#3-修改执行策略&#34; class=&#34;headerlink&#34; title=&#34;3. 修改执行策略&#34;&gt;&lt;/a&gt;3. 修改执行策略&lt;/h3&gt;&lt;p&gt;要更改执行策略，可以使用 &lt;code&gt;Set-ExecutionPolicy&lt;/code&gt; 命令。例如，您可以将执行策略更改为 &lt;code&gt;RemoteSigned&lt;/code&gt;，这样可以运行本地脚本并允许下载的签名脚本运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; RemoteSigned&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果您希望设置为不限制脚本执行，可以使用 &lt;code&gt;Unrestricted&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; Unrestricted&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者，如果您希望脚本完全不受限制（但存在安全风险），可以使用 &lt;code&gt;Bypass&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; Bypass&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-确认更改&#34;&gt;&lt;a href=&#34;#4-确认更改&#34; class=&#34;headerlink&#34; title=&#34;4. 确认更改&#34;&gt;&lt;/a&gt;4. 确认更改&lt;/h3&gt;&lt;p&gt;更改执行策略后，系统会要求您确认。输入 &lt;code&gt;Y&lt;/code&gt; 进行确认并按回车。&lt;/p&gt;
&lt;h3 id=&#34;5-检查执行策略更改是否生效&#34;&gt;&lt;a href=&#34;#5-检查执行策略更改是否生效&#34; class=&#34;headerlink&#34; title=&#34;5. 检查执行策略更改是否生效&#34;&gt;&lt;/a&gt;5. 检查执行策略更改是否生效&lt;/h3&gt;&lt;p&gt;再次执行以下命令来确保策略已更新：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Get-ExecutionPolicy&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-了解不同的执行策略&#34;&gt;&lt;a href=&#34;#6-了解不同的执行策略&#34; class=&#34;headerlink&#34; title=&#34;6. 了解不同的执行策略&#34;&gt;&lt;/a&gt;6. 了解不同的执行策略&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Restricted&lt;/code&gt;：不允许运行任何脚本（这是默认设置）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RemoteSigned&lt;/code&gt;：允许本地脚本运行，但从互联网下载的脚本需要有效的签名才能运行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unrestricted&lt;/code&gt;：允许所有脚本运行，但会在运行下载的脚本时给出警告。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bypass&lt;/code&gt;：完全忽略执行策略（适用于临时需求，但有安全隐患）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AllSigned&lt;/code&gt;：要求所有脚本必须由可信的发布者签名，适用于更严格的安全要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-恢复默认执行策略&#34;&gt;&lt;a href=&#34;#7-恢复默认执行策略&#34; class=&#34;headerlink&#34; title=&#34;7. 恢复默认执行策略&#34;&gt;&lt;/a&gt;7. 恢复默认执行策略&lt;/h3&gt;&lt;p&gt;如果您希望恢复默认的执行策略，只需执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; Restricted&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/12/13/parsec-jiao-cheng/</guid>
            <title>parsec教程</title>
            <link>https://0xdadream.github.io/2024/12/13/parsec-jiao-cheng/</link>
            <category>tools</category>
            <pubDate>Fri, 13 Dec 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;parsec教程&#34;&gt;&lt;a href=&#34;#parsec教程&#34; class=&#34;headerlink&#34; title=&#34;parsec教程&#34;&gt;&lt;/a&gt;parsec教程&lt;/h1&gt;&lt;h2 id=&#34;修改代理&#34;&gt;&lt;a href=&#34;#修改代理&#34; class=&#34;headerlink&#34; title=&#34;修改代理&#34;&gt;&lt;/a&gt;修改代理&lt;/h2&gt;&lt;p&gt;找到文件&lt;code&gt;C:\Users\用户名\AppData\Roaming\Parsec\config.josn&lt;/code&gt;，修改&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#34;app_proxy&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;token string&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;,
&lt;span class=&#34;token string&#34;&gt;&#34;app_proxy_address&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;token string&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;,
&lt;span class=&#34;token string&#34;&gt;&#34;app_proxy_port&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;token string&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10808&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;,&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参照你的代理端口修改&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/12/11/pycharm-kuai-jie-jian/</guid>
            <title>pycharm快捷键</title>
            <link>https://0xdadream.github.io/2024/12/11/pycharm-kuai-jie-jian/</link>
            <category>tools</category>
            <pubDate>Wed, 11 Dec 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pycharm快捷键&#34;&gt;&lt;a href=&#34;#pycharm快捷键&#34; class=&#34;headerlink&#34; title=&#34;pycharm快捷键&#34;&gt;&lt;/a&gt;pycharm快捷键&lt;/h1&gt;&lt;p&gt;pycharm快捷键&lt;/p&gt;
&lt;p&gt;以下是 PyCharm 在 Windows 上高效开发常用的快捷键列表，按照功能分类：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;文件与项目管理&#34;&gt;&lt;a href=&#34;#文件与项目管理&#34; class=&#34;headerlink&#34; title=&#34;文件与项目管理&#34;&gt;&lt;/a&gt;&lt;strong&gt;文件与项目管理&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;打开文件/最近文件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + E&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查找文件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + N&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;切换到项目视图&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Alt + 1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显示/隐藏工具窗口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Alt + #[1-9]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;代码导航&#34;&gt;&lt;a href=&#34;#代码导航&#34; class=&#34;headerlink&#34; title=&#34;代码导航&#34;&gt;&lt;/a&gt;&lt;strong&gt;代码导航&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;跳转到声明/定义&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + B&lt;/code&gt; 或 &lt;code&gt;Ctrl + 鼠标左键&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;返回到上一个位置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Alt + 左箭头&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;前进到下一个位置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Alt + 右箭头&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;快速导航到符号（类、方法等）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + Alt + N&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显示方法列表&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + F12&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;代码编辑&#34;&gt;&lt;a href=&#34;#代码编辑&#34; class=&#34;headerlink&#34; title=&#34;代码编辑&#34;&gt;&lt;/a&gt;&lt;strong&gt;代码编辑&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;格式化代码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Alt + L&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;智能补全（代码补全）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + 空格&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自动导入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Alt + Enter&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多光标选择&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Alt + 鼠标左键&lt;/code&gt; 或 &lt;code&gt;Ctrl + Alt + Shift + J&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;快速重构（重命名、提取变量等）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Shift + F6&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;注释/取消注释行代码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;注释/取消注释块代码&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + /&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;运行与调试&#34;&gt;&lt;a href=&#34;#运行与调试&#34; class=&#34;headerlink&#34; title=&#34;运行与调试&#34;&gt;&lt;/a&gt;&lt;strong&gt;运行与调试&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;运行当前文件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Shift + F10&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;调试当前文件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Shift + F9&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;添加断点&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + F8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;步入（Step Into）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;F7&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;步过（Step Over）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;F8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;跳出（Step Out）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Shift + F8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;搜索与替换&#34;&gt;&lt;a href=&#34;#搜索与替换&#34; class=&#34;headerlink&#34; title=&#34;搜索与替换&#34;&gt;&lt;/a&gt;&lt;strong&gt;搜索与替换&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;全局搜索&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + F&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;替换&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + R&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;在文件中搜索&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + F&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查找下一个&lt;/td&gt;
&lt;td&gt;&lt;code&gt;F3&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查找上一个&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Shift + F3&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;版本控制&#34;&gt;&lt;a href=&#34;#版本控制&#34; class=&#34;headerlink&#34; title=&#34;版本控制&#34;&gt;&lt;/a&gt;&lt;strong&gt;版本控制&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;查看版本历史（当前文件）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + A&lt;/code&gt; 然后输入 &lt;code&gt;File History&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;提交变更&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + K&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;更新项目&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + T&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显示版本控制窗口&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Alt + 9&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;通用快捷键&#34;&gt;&lt;a href=&#34;#通用快捷键&#34; class=&#34;headerlink&#34; title=&#34;通用快捷键&#34;&gt;&lt;/a&gt;&lt;strong&gt;通用快捷键&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;搜索动作（如功能、设置等）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + A&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;打开设置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Alt + S&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;切换全屏模式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Shift + F11&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;显示代码提示信息&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl + Q&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/12/06/python-ku-merklelib/</guid>
            <title>python库merklelib</title>
            <link>https://0xdadream.github.io/2024/12/06/python-ku-merklelib/</link>
            <category>bug</category>
            <category>python</category>
            <pubDate>Fri, 06 Dec 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;python库merklelib&#34;&gt;&lt;a href=&#34;#python库merklelib&#34; class=&#34;headerlink&#34; title=&#34;python库merklelib&#34;&gt;&lt;/a&gt;python库merklelib&lt;/h1&gt;&lt;h2 id=&#34;报错AttributeError-module-‘collections’-has-no-attribute-‘Iterable’&#34;&gt;&lt;a href=&#34;#报错AttributeError-module-‘collections’-has-no-attribute-‘Iterable’&#34; class=&#34;headerlink&#34; title=&#34;报错AttributeError: module ‘collections’ has no attribute ‘Iterable’&#34;&gt;&lt;/a&gt;报错AttributeError: module ‘collections’ has no attribute ‘Iterable’&lt;/h2&gt;&lt;p&gt;该错误发生在 Python 3.10 或更高版本中，因为 &lt;code&gt;collections.Iterable&lt;/code&gt; 在 Python 3.10 中已被移至 &lt;code&gt;collections.abc.Iterable&lt;/code&gt;。这是 Python 的一个兼容性问题。&lt;/p&gt;
&lt;p&gt;要解决此问题，请将代码中的 &lt;code&gt;collections.Iterable&lt;/code&gt; 替换为 &lt;code&gt;collections.abc.Iterable&lt;/code&gt;：&lt;/p&gt;
&lt;h3 id=&#34;修改代码&#34;&gt;&lt;a href=&#34;#修改代码&#34; class=&#34;headerlink&#34; title=&#34;修改代码&#34;&gt;&lt;/a&gt;修改代码&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; collections&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abc

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; collections&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Iterable&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# Your logic here&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你正在使用一个依赖于旧版 &lt;code&gt;collections.Iterable&lt;/code&gt; 的库（如 &lt;code&gt;merklelib&lt;/code&gt;），可以通过以下方式解决：&lt;/p&gt;
&lt;h3 id=&#34;解决方法-1：升级相关库&#34;&gt;&lt;a href=&#34;#解决方法-1：升级相关库&#34; class=&#34;headerlink&#34; title=&#34;解决方法 1：升级相关库&#34;&gt;&lt;/a&gt;解决方法 1：升级相关库&lt;/h3&gt;&lt;p&gt;检查是否有更新的版本来支持 Python 3.10+。你可以尝试更新库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--upgrade&lt;/span&gt; merklelib&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;解决方法-2：兼容性修复&#34;&gt;&lt;a href=&#34;#解决方法-2：兼容性修复&#34; class=&#34;headerlink&#34; title=&#34;解决方法 2：兼容性修复&#34;&gt;&lt;/a&gt;解决方法 2：兼容性修复&lt;/h3&gt;&lt;p&gt;如果库尚未更新，你可以手动修复代码：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开出错的代码文件（通常在库的安装目录中）。&lt;/li&gt;
&lt;li&gt;找到 &lt;code&gt;collections.Iterable&lt;/code&gt; 并替换为 &lt;code&gt;collections.abc.Iterable&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者，临时修复可以通过 Monkey Patch：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; collections&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abc
collections&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Iterable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; collections&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;abc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Iterable&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;解决方法-3：降级-Python-版本&#34;&gt;&lt;a href=&#34;#解决方法-3：降级-Python-版本&#34; class=&#34;headerlink&#34; title=&#34;解决方法 3：降级 Python 版本&#34;&gt;&lt;/a&gt;解决方法 3：降级 Python 版本&lt;/h3&gt;&lt;p&gt;如果无法更新库或代码，可以暂时降级到 Python 3.9：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pyenv &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3.9&lt;/span&gt;.12
pyenv global &lt;span class=&#34;token number&#34;&gt;3.9&lt;/span&gt;.12&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;推荐优先升级库或修复代码以适应 Python 的新版本&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/12/01/wsl-he-windows-hu-xiang-fang-wen/</guid>
            <title>WSL 与 Windows 互相访问教程</title>
            <link>https://0xdadream.github.io/2024/12/01/wsl-he-windows-hu-xiang-fang-wen/</link>
            <category>tools</category>
            <pubDate>Sun, 01 Dec 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;WSL-与-Windows-互相访问教程&#34;&gt;&lt;a href=&#34;#WSL-与-Windows-互相访问教程&#34; class=&#34;headerlink&#34; title=&#34;WSL 与 Windows 互相访问教程&#34;&gt;&lt;/a&gt;&lt;strong&gt;WSL 与 Windows 互相访问教程&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;以下教程将介绍如何在 WSL 和 Windows 系统之间互相访问文件并实现无缝交互。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、Windows-访问-WSL-文件&#34;&gt;&lt;a href=&#34;#一、Windows-访问-WSL-文件&#34; class=&#34;headerlink&#34; title=&#34;一、Windows 访问 WSL 文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;一、Windows 访问 WSL 文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;方法-1：通过网络路径访问&#34;&gt;&lt;a href=&#34;#方法-1：通过网络路径访问&#34; class=&#34;headerlink&#34; title=&#34;方法 1：通过网络路径访问&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 1：通过网络路径访问&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;WSL 文件系统挂载在 Windows 网络路径 &lt;code&gt;\\wsl$&lt;/code&gt; 下，可以直接访问。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;打开文件资源管理器或命令行：&lt;/strong&gt; 在地址栏或命令行输入以下路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;wsl$&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;发行版名称&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;wsl$&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Ubuntu&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;home&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;直接访问 WSL 文件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文件资源管理器中可以像操作普通文件夹一样管理文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在命令行中可以使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;wsl$&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Ubuntu&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;home&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;dir&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接访问，无需额外配置。&lt;/li&gt;
&lt;li&gt;文件路径自动挂载，无权限问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;方法-2：通过挂载路径访问&#34;&gt;&lt;a href=&#34;#方法-2：通过挂载路径访问&#34; class=&#34;headerlink&#34; title=&#34;方法 2：通过挂载路径访问&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 2：通过挂载路径访问&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;WSL 的文件系统实际上存储在 Windows 用户目录下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Users&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;AppData&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Local&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Packages&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;WSL发行版ID&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;LocalState&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;rootfs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;操作步骤：&#34;&gt;&lt;a href=&#34;#操作步骤：&#34; class=&#34;headerlink&#34; title=&#34;操作步骤：&#34;&gt;&lt;/a&gt;&lt;strong&gt;操作步骤：&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;定位路径：&lt;/strong&gt; 打开资源管理器，导航到上述路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通过命令行访问：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;C:\Users\&amp;lt;用户名&amp;gt;\AppData\Local\Packages\&amp;lt;发行版ID&amp;gt;\LocalState&lt;span class=&#34;token entity&#34; title=&#34;\r&#34;&gt;\r&lt;/span&gt;ootfs&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不要直接修改&lt;/strong&gt; &lt;code&gt;LocalState&lt;/code&gt; 下的文件，可能导致 WSL 文件系统损坏。&lt;/li&gt;
&lt;li&gt;尽量使用 &lt;code&gt;\\wsl$&lt;/code&gt; 路径，安全可靠。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;方法-3：通过-WSL-挂载目录&#34;&gt;&lt;a href=&#34;#方法-3：通过-WSL-挂载目录&#34; class=&#34;headerlink&#34; title=&#34;方法 3：通过 WSL 挂载目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 3：通过 WSL 挂载目录&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;WSL 可以直接挂载 Windows 文件系统，访问路径为 &lt;code&gt;/mnt/&amp;lt;盘符&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 WSL 中访问：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Documents&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常见操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;列出文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Documents&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复制文件到 WSL：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Documents/文件.txt ~/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、WSL-访问-Windows-文件&#34;&gt;&lt;a href=&#34;#二、WSL-访问-Windows-文件&#34; class=&#34;headerlink&#34; title=&#34;二、WSL 访问 Windows 文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;二、WSL 访问 Windows 文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;默认挂载的文件路径&#34;&gt;&lt;a href=&#34;#默认挂载的文件路径&#34; class=&#34;headerlink&#34; title=&#34;默认挂载的文件路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;默认挂载的文件路径&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;WSL 会自动挂载 Windows 的文件系统，所有分区挂载在 &lt;code&gt;/mnt/&amp;lt;盘符&amp;gt;&lt;/code&gt; 下。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\&lt;/code&gt; 对应 &lt;code&gt;/mnt/c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D:\&lt;/code&gt; 对应 &lt;code&gt;/mnt/d&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;列出 Windows 文件：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Documents&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;复制文件到 WSL：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Documents/文件.txt ~/wsl目录/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;移动文件到 Windows：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; ~/wsl目录/文件.txt /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Desktop/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、实现-WSL-和-Windows-共享目录&#34;&gt;&lt;a href=&#34;#三、实现-WSL-和-Windows-共享目录&#34; class=&#34;headerlink&#34; title=&#34;三、实现 WSL 和 Windows 共享目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;三、实现 WSL 和 Windows 共享目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;方法-1：在-WSL-中创建软链接&#34;&gt;&lt;a href=&#34;#方法-1：在-WSL-中创建软链接&#34; class=&#34;headerlink&#34; title=&#34;方法 1：在 WSL 中创建软链接&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 1：在 WSL 中创建软链接&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;如果频繁需要访问某些 Windows 目录，可以通过软链接简化路径。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建链接：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Documents ~/windows-documents&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;访问链接：&lt;/strong&gt; 直接进入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; ~/windows-documents&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法-2：共享-WSL-的目录给-Windows&#34;&gt;&lt;a href=&#34;#方法-2：共享-WSL-的目录给-Windows&#34; class=&#34;headerlink&#34; title=&#34;方法 2：共享 WSL 的目录给 Windows&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 2：共享 WSL 的目录给 Windows&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;可以通过设置 WSL 中的目录，让 Windows 使用 &lt;code&gt;\\wsl$&lt;/code&gt; 访问。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在 WSL 中创建目录：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; ~/shared-folder&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在 Windows 中访问：&lt;/strong&gt; 打开资源管理器，导航到：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;wsl$&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Ubuntu&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;home&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;shared-folder&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、在-WSL-和-Windows-间传输文件&#34;&gt;&lt;a href=&#34;#四、在-WSL-和-Windows-间传输文件&#34; class=&#34;headerlink&#34; title=&#34;四、在 WSL 和 Windows 间传输文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;四、在 WSL 和 Windows 间传输文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;方法-1：直接复制文件&#34;&gt;&lt;a href=&#34;#方法-1：直接复制文件&#34; class=&#34;headerlink&#34; title=&#34;方法 1：直接复制文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 1：直接复制文件&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;cp&lt;/code&gt; 或 &lt;code&gt;mv&lt;/code&gt; 命令实现文件复制或移动。&lt;/p&gt;
&lt;h4 id=&#34;从-WSL-复制文件到-Windows：&#34;&gt;&lt;a href=&#34;#从-WSL-复制文件到-Windows：&#34; class=&#34;headerlink&#34; title=&#34;从 WSL 复制文件到 Windows：&#34;&gt;&lt;/a&gt;&lt;strong&gt;从 WSL 复制文件到 Windows：&lt;/strong&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; ~/文件.txt /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Desktop/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;从-Windows-复制文件到-WSL：&#34;&gt;&lt;a href=&#34;#从-Windows-复制文件到-WSL：&#34; class=&#34;headerlink&#34; title=&#34;从 Windows 复制文件到 WSL：&#34;&gt;&lt;/a&gt;&lt;strong&gt;从 Windows 复制文件到 WSL：&lt;/strong&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; /mnt/c/Users/&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;用户名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;/Desktop/文件.txt ~/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;方法-2：使用-explorer-exe-打开-WSL-文件夹&#34;&gt;&lt;a href=&#34;#方法-2：使用-explorer-exe-打开-WSL-文件夹&#34; class=&#34;headerlink&#34; title=&#34;方法 2：使用 explorer.exe 打开 WSL 文件夹&#34;&gt;&lt;/a&gt;&lt;strong&gt;方法 2：使用 &lt;code&gt;explorer.exe&lt;/code&gt; 打开 WSL 文件夹&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 WSL 中可以直接使用 Windows 的资源管理器访问当前目录：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 WSL 终端中输入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;explorer.exe &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windows 文件资源管理器会打开 WSL 当前路径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a href=&#34;#&#34; class=&#34;headerlink&#34; title=&#34;&#34;&gt;&lt;/a&gt;&lt;/h2&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/28/latex-jiao-cheng/</guid>
            <title>latex教程</title>
            <link>https://0xdadream.github.io/2024/11/28/latex-jiao-cheng/</link>
            <category>tools</category>
            <pubDate>Thu, 28 Nov 2024 21:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;latex教程&#34;&gt;&lt;a href=&#34;#latex教程&#34; class=&#34;headerlink&#34; title=&#34;latex教程&#34;&gt;&lt;/a&gt;latex教程&lt;/h1&gt;&lt;p&gt;latex教程&lt;/p&gt;
&lt;p&gt;参考网站：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zilutian.github.io/latex-tutorial-chinese/&#34;&gt;LaTeX 教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.latexstudio.net/LearnLaTeX/basic/01.html&#34;&gt;LaTeX 基础 | LaTeX 知识库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.latexlive.com/&#34;&gt;在线LaTeX公式编辑器-编辑器&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/28/mi-ma-xue-kun-nan-wen-ti/</guid>
            <title>密码学中的困难问题详解</title>
            <link>https://0xdadream.github.io/2024/11/28/mi-ma-xue-kun-nan-wen-ti/</link>
            <category>密码学</category>
            <pubDate>Thu, 28 Nov 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;密码学中的困难问题详解&#34;&gt;&lt;a href=&#34;#密码学中的困难问题详解&#34; class=&#34;headerlink&#34; title=&#34;密码学中的困难问题详解&#34;&gt;&lt;/a&gt;密码学中的困难问题详解&lt;/h1&gt;&lt;p&gt;密码学中的困难问题详解，密码学的安全性依赖于一些数学上已知的困难问题。这些问题被认为在经典计算机或量子计算机上都难以高效解决。以下是密码学中重要的困难问题分类及详解。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、离散对数类问题&#34;&gt;&lt;a href=&#34;#一、离散对数类问题&#34; class=&#34;headerlink&#34; title=&#34;一、离散对数类问题&#34;&gt;&lt;/a&gt;一、离散对数类问题&lt;/h2&gt;&lt;h3 id=&#34;1-离散对数问题-Discrete-Logarithm-Problem-DLP&#34;&gt;&lt;a href=&#34;#1-离散对数问题-Discrete-Logarithm-Problem-DLP&#34; class=&#34;headerlink&#34; title=&#34;1. 离散对数问题 (Discrete Logarithm Problem, DLP)&#34;&gt;&lt;/a&gt;1. 离散对数问题 (Discrete Logarithm Problem, DLP)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;给定素数 $p$、生成元 $g$ 和 $h$，求 $x$，使得  $h = g^x \ (\text{mod } p)$&lt;/p&gt;
&lt;p&gt;该问题是 Diffie-Hellman 密钥交换和 ElGamal 加密算法的基础。&lt;/p&gt;
&lt;h3 id=&#34;2-椭圆曲线离散对数问题-Elliptic-Curve-Discrete-Logarithm-Problem-ECDLP&#34;&gt;&lt;a href=&#34;#2-椭圆曲线离散对数问题-Elliptic-Curve-Discrete-Logarithm-Problem-ECDLP&#34; class=&#34;headerlink&#34; title=&#34;2. 椭圆曲线离散对数问题 (Elliptic Curve Discrete Logarithm Problem, ECDLP)&#34;&gt;&lt;/a&gt;2. 椭圆曲线离散对数问题 (Elliptic Curve Discrete Logarithm Problem, ECDLP)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在椭圆曲线群 $E(F_p)$ 上，给定点 $P$ 和 $Q$，求标量 $k$，使得  $Q = kP$&lt;/p&gt;
&lt;p&gt;ECDLP 是椭圆曲线密码（如 ECDH 和 ECDSA）的核心难题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、Diffie-Hellman-类问题&#34;&gt;&lt;a href=&#34;#二、Diffie-Hellman-类问题&#34; class=&#34;headerlink&#34; title=&#34;二、Diffie-Hellman 类问题&#34;&gt;&lt;/a&gt;二、Diffie-Hellman 类问题&lt;/h2&gt;&lt;h3 id=&#34;1-计算性-Diffie-Hellman-问题-Computational-Diffie-Hellman-Problem-CDH&#34;&gt;&lt;a href=&#34;#1-计算性-Diffie-Hellman-问题-Computational-Diffie-Hellman-Problem-CDH&#34; class=&#34;headerlink&#34; title=&#34;1. 计算性 Diffie-Hellman 问题 (Computational Diffie-Hellman Problem, CDH)&#34;&gt;&lt;/a&gt;1. 计算性 Diffie-Hellman 问题 (Computational Diffie-Hellman Problem, CDH)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;给定 $g^a$ 和 $g^b$ （模 $p$），计算 $g^{ab}$。&lt;br&gt;CDH 是构造许多密码协议的基础。&lt;/p&gt;
&lt;h3 id=&#34;2-决定性-Diffie-Hellman-问题-Decisional-Diffie-Hellman-Problem-DDH&#34;&gt;&lt;a href=&#34;#2-决定性-Diffie-Hellman-问题-Decisional-Diffie-Hellman-Problem-DDH&#34; class=&#34;headerlink&#34; title=&#34;2. 决定性 Diffie-Hellman 问题 (Decisional Diffie-Hellman Problem, DDH)&#34;&gt;&lt;/a&gt;2. 决定性 Diffie-Hellman 问题 (Decisional Diffie-Hellman Problem, DDH)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;给定 $g^a$、$g^b$ 和 $g^c$ （模 $p$），判断 $g^c$ 是否等于 $g^{ab}$。&lt;br&gt;DDH 通常用于构造安全多方计算和伪随机数生成器。&lt;/p&gt;
&lt;h3 id=&#34;3-广义-Diffie-Hellman-问题-Generalized-Diffie-Hellman-Problem-GDH&#34;&gt;&lt;a href=&#34;#3-广义-Diffie-Hellman-问题-Generalized-Diffie-Hellman-Problem-GDH&#34; class=&#34;headerlink&#34; title=&#34;3. 广义 Diffie-Hellman 问题 (Generalized Diffie-Hellman Problem, GDH)&#34;&gt;&lt;/a&gt;3. 广义 Diffie-Hellman 问题 (Generalized Diffie-Hellman Problem, GDH)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在群 $G$ 中，给定 $g, g^{x_1}, g^{x_2}, \dots, g^{x_k}$，计算 $g^{x_1x_2\dots x_k}$。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、双线性映射相关问题&#34;&gt;&lt;a href=&#34;#三、双线性映射相关问题&#34; class=&#34;headerlink&#34; title=&#34;三、双线性映射相关问题&#34;&gt;&lt;/a&gt;三、双线性映射相关问题&lt;/h2&gt;&lt;h3 id=&#34;1-双线性-Diffie-Hellman-问题-Bilinear-Diffie-Hellman-Problem-BDH&#34;&gt;&lt;a href=&#34;#1-双线性-Diffie-Hellman-问题-Bilinear-Diffie-Hellman-Problem-BDH&#34; class=&#34;headerlink&#34; title=&#34;1. 双线性 Diffie-Hellman 问题 (Bilinear Diffie-Hellman Problem, BDH)&#34;&gt;&lt;/a&gt;1. 双线性 Diffie-Hellman 问题 (Bilinear Diffie-Hellman Problem, BDH)&lt;/h3&gt;&lt;p&gt;在双线性映射 $e: G_1 \times G_1 \to G_2$ 中，给定 $g, g^a, g^b, g^c \in G_1$，计算  $e(g, g)^{abc}$&lt;/p&gt;
&lt;p&gt;这是基于双线性对的密码算法（如配对加密）的基础。&lt;/p&gt;
&lt;h3 id=&#34;2-决定性双线性-Diffie-Hellman-问题-Decisional-Bilinear-Diffie-Hellman-Problem-DBDH&#34;&gt;&lt;a href=&#34;#2-决定性双线性-Diffie-Hellman-问题-Decisional-Bilinear-Diffie-Hellman-Problem-DBDH&#34; class=&#34;headerlink&#34; title=&#34;2. 决定性双线性 Diffie-Hellman 问题 (Decisional Bilinear Diffie-Hellman Problem, DBDH)&#34;&gt;&lt;/a&gt;2. 决定性双线性 Diffie-Hellman 问题 (Decisional Bilinear Diffie-Hellman Problem, DBDH)&lt;/h3&gt;&lt;p&gt;在双线性映射 $e: G_1 \times G_1 \to G_2$ 中，给定 $g, g^a, g^b, g^c \in G_1$ 和 $T \in G_2$，判断 $T = e(g, g)^{abc}$ 是否成立。&lt;/p&gt;
&lt;h3 id=&#34;3-广义双线性-Diffie-Hellman-问题-Generalized-Bilinear-Diffie-Hellman-Problem-GBDH&#34;&gt;&lt;a href=&#34;#3-广义双线性-Diffie-Hellman-问题-Generalized-Bilinear-Diffie-Hellman-Problem-GBDH&#34; class=&#34;headerlink&#34; title=&#34;3. 广义双线性 Diffie-Hellman 问题 (Generalized Bilinear Diffie-Hellman Problem, GBDH)&#34;&gt;&lt;/a&gt;3. 广义双线性 Diffie-Hellman 问题 (Generalized Bilinear Diffie-Hellman Problem, GBDH)&lt;/h3&gt;&lt;p&gt;GBDH 是 BDH 的推广，允许更多参与者和复杂场景。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、因子分解类问题&#34;&gt;&lt;a href=&#34;#四、因子分解类问题&#34; class=&#34;headerlink&#34; title=&#34;四、因子分解类问题&#34;&gt;&lt;/a&gt;四、因子分解类问题&lt;/h2&gt;&lt;h3 id=&#34;1-整数分解问题-Integer-Factorization-Problem-IFP&#34;&gt;&lt;a href=&#34;#1-整数分解问题-Integer-Factorization-Problem-IFP&#34; class=&#34;headerlink&#34; title=&#34;1. 整数分解问题 (Integer Factorization Problem, IFP)&#34;&gt;&lt;/a&gt;1. 整数分解问题 (Integer Factorization Problem, IFP)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;给定一个整数 $n = p \cdot q$，其中 $p$ 和 $q$ 是大素数，求出 $p$ 和 $q$。&lt;br&gt;IFP 是 RSA 和许多公钥密码系统的核心难题。&lt;/p&gt;
&lt;h3 id=&#34;2-积性同余子群问题&#34;&gt;&lt;a href=&#34;#2-积性同余子群问题&#34; class=&#34;headerlink&#34; title=&#34;2. 积性同余子群问题&#34;&gt;&lt;/a&gt;2. 积性同余子群问题&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在模 $n$ 的群中，给定生成元 $g$ 和目标值 $h$，计算 $x$，使得  $h = g^x \ (\text{mod } n)$&lt;/p&gt;
&lt;p&gt;这也是基于整数因子分解的密码系统的难题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五、格密码相关问题&#34;&gt;&lt;a href=&#34;#五、格密码相关问题&#34; class=&#34;headerlink&#34; title=&#34;五、格密码相关问题&#34;&gt;&lt;/a&gt;五、格密码相关问题&lt;/h2&gt;&lt;h3 id=&#34;1-最短向量问题-Shortest-Vector-Problem-SVP&#34;&gt;&lt;a href=&#34;#1-最短向量问题-Shortest-Vector-Problem-SVP&#34; class=&#34;headerlink&#34; title=&#34;1. 最短向量问题 (Shortest Vector Problem, SVP)&#34;&gt;&lt;/a&gt;1. 最短向量问题 (Shortest Vector Problem, SVP)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在格 $L$ 中，找到长度最短的非零向量 $\mathbf{v}$，使得 $\mathbf{v} \in L$。&lt;br&gt;SVP 是基于格密码（如 NTRU 和 LWE）的核心难题。&lt;/p&gt;
&lt;h3 id=&#34;2-最近向量问题-Closest-Vector-Problem-CVP&#34;&gt;&lt;a href=&#34;#2-最近向量问题-Closest-Vector-Problem-CVP&#34; class=&#34;headerlink&#34; title=&#34;2. 最近向量问题 (Closest Vector Problem, CVP)&#34;&gt;&lt;/a&gt;2. 最近向量问题 (Closest Vector Problem, CVP)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在格 $L$ 中，给定任意点 $\mathbf{t}$，找到格中距离 $\mathbf{t}$ 最近的点。&lt;/p&gt;
&lt;h3 id=&#34;3-学习带误差问题-Learning-with-Errors-LWE&#34;&gt;&lt;a href=&#34;#3-学习带误差问题-Learning-with-Errors-LWE&#34; class=&#34;headerlink&#34; title=&#34;3. 学习带误差问题 (Learning with Errors, LWE)&#34;&gt;&lt;/a&gt;3. 学习带误差问题 (Learning with Errors, LWE)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;给定一组方程 $Ax + e = b$，其中 $A$ 是已知矩阵，$e$ 是小噪声，求未知的 $x$。&lt;br&gt;LWE 是后量子密码学的重要基础。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;六、后量子密码相关问题&#34;&gt;&lt;a href=&#34;#六、后量子密码相关问题&#34; class=&#34;headerlink&#34; title=&#34;六、后量子密码相关问题&#34;&gt;&lt;/a&gt;六、后量子密码相关问题&lt;/h2&gt;&lt;h3 id=&#34;1-代码破解问题-Code-based-Problem&#34;&gt;&lt;a href=&#34;#1-代码破解问题-Code-based-Problem&#34; class=&#34;headerlink&#34; title=&#34;1. 代码破解问题 (Code-based Problem)&#34;&gt;&lt;/a&gt;1. 代码破解问题 (Code-based Problem)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在随机线性码中，给定生成矩阵 $G$ 和加密后的数据，恢复原始消息。&lt;br&gt;这是基于纠错码密码系统（如 McEliece 和 Niederreiter）的核心难题。&lt;/p&gt;
&lt;h3 id=&#34;2-同源性问题-Isogeny-Problem&#34;&gt;&lt;a href=&#34;#2-同源性问题-Isogeny-Problem&#34; class=&#34;headerlink&#34; title=&#34;2. 同源性问题 (Isogeny Problem)&#34;&gt;&lt;/a&gt;2. 同源性问题 (Isogeny Problem)&lt;/h3&gt;&lt;p&gt;描述为：&lt;br&gt;在椭圆曲线同源图中，找到从曲线 $E_1$ 到 $E_2$ 的同源映射。&lt;br&gt;这是基于同源密码的核心问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、困难问题间的关系&#34;&gt;&lt;a href=&#34;#七、困难问题间的关系&#34; class=&#34;headerlink&#34; title=&#34;七、困难问题间的关系&#34;&gt;&lt;/a&gt;七、困难问题间的关系&lt;/h2&gt;&lt;p&gt;许多困难问题之间具有复杂的数学关系：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;DLP&lt;/strong&gt; 是 &lt;strong&gt;CDH&lt;/strong&gt; 的基础，&lt;strong&gt;CDH&lt;/strong&gt; 是 &lt;strong&gt;DDH&lt;/strong&gt; 的前提条件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ECDLP&lt;/strong&gt; 是 DLP 的椭圆曲线版本，但安全性更高。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LWE&lt;/strong&gt; 和 &lt;strong&gt;SVP&lt;/strong&gt; 是格密码中相互关联的问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IFP&lt;/strong&gt; 和 &lt;strong&gt;DLP&lt;/strong&gt; 是经典密码的两个主要难题。&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/27/an-zhuang-pypbc/</guid>
            <title>python安装pypbc</title>
            <link>https://0xdadream.github.io/2024/11/27/an-zhuang-pypbc/</link>
            <category>linux</category>
            <pubDate>Wed, 27 Nov 2024 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;python安装pypbc&#34;&gt;&lt;a href=&#34;#python安装pypbc&#34; class=&#34;headerlink&#34; title=&#34;python安装pypbc&#34;&gt;&lt;/a&gt;python安装pypbc&lt;/h1&gt;&lt;p&gt;python安装pypbc&lt;/p&gt;
&lt;p&gt;首先我是ubuntu22环境，python版本为3.10&lt;/p&gt;
&lt;p&gt;去&lt;a href=&#34;https://github.com/debatem1/pypbc&#34;&gt;pypbc&lt;/a&gt;把代码全部下载，进去目录&lt;code&gt;pypbc&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; pypbc
pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;多版本使用对应的pip安装即可，执行完就晚装完成了&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip list &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; pypbc  &lt;span class=&#34;token comment&#34;&gt;# 验证安装&lt;/span&gt;
pypbc               &lt;span class=&#34;token number&#34;&gt;0.2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/27/typora-shu-xue-fu-hao/</guid>
            <title>typora数学符号</title>
            <link>https://0xdadream.github.io/2024/11/27/typora-shu-xue-fu-hao/</link>
            <category>tools</category>
            <pubDate>Wed, 27 Nov 2024 00:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;typora数学符号&#34;&gt;&lt;a href=&#34;#typora数学符号&#34; class=&#34;headerlink&#34; title=&#34;typora数学符号&#34;&gt;&lt;/a&gt;typora数学符号&lt;/h1&gt;&lt;p&gt;Typora 是一个支持 LaTeX 数学公式的优秀 Markdown 编辑器，可以直接编写数学公式并实时渲染。以下是如何在 Typora 中使用数学公式的详细指南：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-启用数学公式支持&#34;&gt;&lt;a href=&#34;#1-启用数学公式支持&#34; class=&#34;headerlink&#34; title=&#34;1. 启用数学公式支持&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;启用数学公式支持&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;默认情况下，Typora 支持 LaTeX 格式的数学公式，无需额外设置。如果未生效，请确保已启用数学渲染：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 Typora。&lt;/li&gt;
&lt;li&gt;点击顶部菜单栏的 &lt;strong&gt;File &amp;gt; Preferences（设置）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在设置中，选择 &lt;strong&gt;Markdown&lt;/strong&gt; 选项卡。&lt;/li&gt;
&lt;li&gt;确保勾选了 &lt;strong&gt;Enable MathJax&lt;/strong&gt; 或 &lt;strong&gt;Enable Katex&lt;/strong&gt;，以支持数学公式渲染。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-数学公式语法&#34;&gt;&lt;a href=&#34;#2-数学公式语法&#34; class=&#34;headerlink&#34; title=&#34;2. 数学公式语法&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;数学公式语法&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;2-1-行内公式&#34;&gt;&lt;a href=&#34;#2-1-行内公式&#34; class=&#34;headerlink&#34; title=&#34;2.1 行内公式&#34;&gt;&lt;/a&gt;2.1 行内公式&lt;/h3&gt;&lt;p&gt;在段落中插入公式，使用单个 &lt;code&gt;$&lt;/code&gt; 包裹公式内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;行内公式示例：$E = mc^2$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;渲染效果： 行内公式示例：$E = mc^2$&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-2-独立公式&#34;&gt;&lt;a href=&#34;#2-2-独立公式&#34; class=&#34;headerlink&#34; title=&#34;2.2 独立公式&#34;&gt;&lt;/a&gt;2.2 独立公式&lt;/h3&gt;&lt;p&gt;单独显示的数学公式，使用双 &lt;code&gt;$&lt;/code&gt; 或 &lt;code&gt;$$&lt;/code&gt; 包裹公式内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;独立公式示例：
$$
\int_a^b f(x)dx = F(b) - F(a)
$$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;渲染效果：&lt;br&gt;$$&lt;br&gt;\int_a^b f(x)dx = F(b) - F(a)&lt;br&gt;$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-复杂数学公式&#34;&gt;&lt;a href=&#34;#3-复杂数学公式&#34; class=&#34;headerlink&#34; title=&#34;3. 复杂数学公式&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;复杂数学公式&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;示例-1：矩阵&#34;&gt;&lt;a href=&#34;#示例-1：矩阵&#34; class=&#34;headerlink&#34; title=&#34;示例 1：矩阵&#34;&gt;&lt;/a&gt;示例 1：矩阵&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;矩阵：
$$
\mathbf{A} = \begin{bmatrix}
1 &amp;amp; 2 &amp;amp; 3 \\
4 &amp;amp; 5 &amp;amp; 6 \\
7 &amp;amp; 8 &amp;amp; 9
\end{bmatrix}
$$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;渲染效果：&lt;br&gt;$$&lt;br&gt;\mathbf{A} = \begin{bmatrix}&lt;br&gt;1 &amp;amp; 2 &amp;amp; 3 \&lt;br&gt;4 &amp;amp; 5 &amp;amp; 6 \&lt;br&gt;7 &amp;amp; 8 &amp;amp; 9&lt;br&gt;\end{bmatrix}&lt;br&gt;$$&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例-2：分数和开方&#34;&gt;&lt;a href=&#34;#示例-2：分数和开方&#34; class=&#34;headerlink&#34; title=&#34;示例 2：分数和开方&#34;&gt;&lt;/a&gt;示例 2：分数和开方&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;分数与开方：
$$
x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
$$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;渲染效果：&lt;br&gt;$$&lt;br&gt;x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}&lt;br&gt;$$&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例-3：求和与极限&#34;&gt;&lt;a href=&#34;#示例-3：求和与极限&#34; class=&#34;headerlink&#34; title=&#34;示例 3：求和与极限&#34;&gt;&lt;/a&gt;示例 3：求和与极限&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;求和与极限：
$$
\sum_{i=1}^n i = \frac{n(n+1)}{2}, \quad \lim_{x \to \infty} \frac{1}{x} = 0
$$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;渲染效果：&lt;br&gt;$$&lt;br&gt;\sum_{i=1}^n i = \frac{n(n+1)}{2}, \quad \lim_{x \to \infty} \frac{1}{x} = 0&lt;br&gt;$$&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例-4：多行公式对齐&#34;&gt;&lt;a href=&#34;#示例-4：多行公式对齐&#34; class=&#34;headerlink&#34; title=&#34;示例 4：多行公式对齐&#34;&gt;&lt;/a&gt;示例 4：多行公式对齐&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;多行公式对齐：
$$
\begin{aligned}
y &amp;amp;= mx + b \\
f(x) &amp;amp;= x^2 + 2x + 1
\end{aligned}
$$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;渲染效果：&lt;br&gt;$$&lt;br&gt;\begin{aligned}&lt;br&gt;y &amp;amp;= mx + b \&lt;br&gt;f(x) &amp;amp;= x^2 + 2x + 1&lt;br&gt;\end{aligned}&lt;br&gt;$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-快捷键&#34;&gt;&lt;a href=&#34;#4-快捷键&#34; class=&#34;headerlink&#34; title=&#34;4. 快捷键&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;快捷键&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;strong&gt;&lt;code&gt;Ctrl + T&lt;/code&gt;&lt;/strong&gt; 或 &lt;strong&gt;&lt;code&gt;Command + T&lt;/code&gt;&lt;/strong&gt; 可以快速切换公式预览。&lt;/li&gt;
&lt;li&gt;如果希望查看公式源代码，按下 &lt;strong&gt;&lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/strong&gt; 或 **&lt;code&gt;Command + /&lt;/code&gt;**。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;在 Typora 中，如果需要数学公式与文字紧密排列在一起，可以使用 &lt;strong&gt;行内公式&lt;/strong&gt; 格式。具体方法如下：&lt;/p&gt;
&lt;p&gt;偏好设置-&amp;gt;markdown-&amp;gt;勾选内联公式&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-使用-实现行内公式&#34;&gt;&lt;a href=&#34;#1-使用-实现行内公式&#34; class=&#34;headerlink&#34; title=&#34;1. 使用 $...$ 实现行内公式&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 使用 &lt;code&gt;$...$&lt;/code&gt; 实现行内公式&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;行内公式会随着文字的排版而排列，可以直接插入到文字之间。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;爱因斯坦的质能方程为 $E=mc^2$，这是能量和质量关系的基础公式。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;渲染效果：&#34;&gt;&lt;a href=&#34;#渲染效果：&#34; class=&#34;headerlink&#34; title=&#34;渲染效果：&#34;&gt;&lt;/a&gt;渲染效果：&lt;/h3&gt;&lt;p&gt;爱因斯坦的质能方程为 $E=mc^2$，这是能量和质量关系的基础公式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-注意空格与对齐问题&#34;&gt;&lt;a href=&#34;#2-注意空格与对齐问题&#34; class=&#34;headerlink&#34; title=&#34;2. 注意空格与对齐问题&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 注意空格与对齐问题&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;示例-1：在公式与文字之间增加适当的空格&#34;&gt;&lt;a href=&#34;#示例-1：在公式与文字之间增加适当的空格&#34; class=&#34;headerlink&#34; title=&#34;示例 1：在公式与文字之间增加适当的空格&#34;&gt;&lt;/a&gt;示例 1：在公式与文字之间增加适当的空格&lt;/h3&gt;&lt;p&gt;当公式两侧紧挨中文字符时，可能需要手动添加空格，以确保渲染结果美观：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;质量 $m$ 和能量 $E$ 之间的关系为 $E = mc^2$。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;渲染效果：-1&#34;&gt;&lt;a href=&#34;#渲染效果：-1&#34; class=&#34;headerlink&#34; title=&#34;渲染效果：&#34;&gt;&lt;/a&gt;渲染效果：&lt;/h3&gt;&lt;p&gt;质量 $m$ 和能量 $E$ 之间的关系为 $E = mc^2$。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例-2：纯英文情况下，公式无需额外空格&#34;&gt;&lt;a href=&#34;#示例-2：纯英文情况下，公式无需额外空格&#34; class=&#34;headerlink&#34; title=&#34;示例 2：纯英文情况下，公式无需额外空格&#34;&gt;&lt;/a&gt;示例 2：纯英文情况下，公式无需额外空格&lt;/h3&gt;&lt;p&gt;在纯英文环境中，公式通常与文字自然对齐，无需调整：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;The equation $E=mc^2$ explains the relationship between energy and mass.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;渲染效果：-2&#34;&gt;&lt;a href=&#34;#渲染效果：-2&#34; class=&#34;headerlink&#34; title=&#34;渲染效果：&#34;&gt;&lt;/a&gt;渲染效果：&lt;/h3&gt;&lt;p&gt;The equation $E=mc^2$ explains the relationship between energy and mass.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-混合行内和块级公式&#34;&gt;&lt;a href=&#34;#3-混合行内和块级公式&#34; class=&#34;headerlink&#34; title=&#34;3. 混合行内和块级公式&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 混合行内和块级公式&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;如果需要同时包含行内和块级公式，可以灵活使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;爱因斯坦提出了著名的公式 $E = mc^2$，用于描述能量和质量的关系。

更详细的表达形式为：
$$
E = \int_a^b f(x) dx
$$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;渲染效果：-3&#34;&gt;&lt;a href=&#34;#渲染效果：-3&#34; class=&#34;headerlink&#34; title=&#34;渲染效果：&#34;&gt;&lt;/a&gt;渲染效果：&lt;/h3&gt;&lt;p&gt;爱因斯坦提出了著名的公式 $E = mc^2$，用于描述能量和质量的关系。&lt;/p&gt;
&lt;p&gt;更详细的表达形式为：&lt;br&gt;$$&lt;br&gt;E = \int_a^b f(x) dx&lt;br&gt;$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-Typora-自动调整换行&#34;&gt;&lt;a href=&#34;#4-Typora-自动调整换行&#34; class=&#34;headerlink&#34; title=&#34;4. Typora 自动调整换行&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. Typora 自动调整换行&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;如果文字较多且公式插入后自动换行，可以通过调整文字排版来控制公式位置。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markdown&#34; data-language=&#34;markdown&#34;&gt;&lt;code class=&#34;language-markdown&#34;&gt;为了进一步验证公式 $E=mc^2$ 的正确性，我们需要对其进行理论推导，涉及到积分与导数等高等数学内容。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;渲染效果：-4&#34;&gt;&lt;a href=&#34;#渲染效果：-4&#34; class=&#34;headerlink&#34; title=&#34;渲染效果：&#34;&gt;&lt;/a&gt;渲染效果：&lt;/h3&gt;&lt;p&gt;为了进一步验证公式 $E=mc^2$ 的正确性，我们需要对其进行理论推导，涉及到积分与导数等高等数学内容。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/25/xi-la-zi-mu/</guid>
            <title>希腊字母</title>
            <link>https://0xdadream.github.io/2024/11/25/xi-la-zi-mu/</link>
            <category>tools</category>
            <pubDate>Mon, 25 Nov 2024 19:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;希腊字母&#34;&gt;&lt;a href=&#34;#希腊字母&#34; class=&#34;headerlink&#34; title=&#34;希腊字母&#34;&gt;&lt;/a&gt;希腊字母&lt;/h1&gt;&lt;p&gt;以下是数学和科学中常用的 &lt;strong&gt;希腊字母&lt;/strong&gt; 及其用途的对照表，包括大写和小写形式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;字母&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;发音（英文）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;数学与科学用途&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Αα&lt;/td&gt;
&lt;td&gt;Alpha&lt;/td&gt;
&lt;td&gt;ˈælfə&lt;/td&gt;
&lt;td&gt;表示角度、系数、角速度等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Ββ&lt;/td&gt;
&lt;td&gt;Beta&lt;/td&gt;
&lt;td&gt;ˈbeɪtə 或 ˈbiːtə&lt;/td&gt;
&lt;td&gt;表示系数、β辐射、概率密度函数中的参数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Γγ&lt;/td&gt;
&lt;td&gt;Gamma&lt;/td&gt;
&lt;td&gt;ˈɡæmə&lt;/td&gt;
&lt;td&gt;表示伽马函数、光谱系数、第三角速度等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Δδ&lt;/td&gt;
&lt;td&gt;Delta&lt;/td&gt;
&lt;td&gt;ˈdɛltə&lt;/td&gt;
&lt;td&gt;表示变化量、偏导数（小写 δ）、有限差分等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Εε&lt;/td&gt;
&lt;td&gt;Epsilon&lt;/td&gt;
&lt;td&gt;ˈɛpsɪlɒn&lt;/td&gt;
&lt;td&gt;表示小量、误差、介电常数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Ζζ&lt;/td&gt;
&lt;td&gt;Zeta&lt;/td&gt;
&lt;td&gt;ˈzeɪtə&lt;/td&gt;
&lt;td&gt;表示黎曼ζ函数、阻尼系数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Ηη&lt;/td&gt;
&lt;td&gt;Eta&lt;/td&gt;
&lt;td&gt;ˈiːtə 或 ˈeɪtə&lt;/td&gt;
&lt;td&gt;表示效率、黏滞系数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Θθ&lt;/td&gt;
&lt;td&gt;Theta&lt;/td&gt;
&lt;td&gt;ˈθeɪtə&lt;/td&gt;
&lt;td&gt;表示角度、温度、周期等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Ιι&lt;/td&gt;
&lt;td&gt;Iota&lt;/td&gt;
&lt;td&gt;aɪˈoʊtə&lt;/td&gt;
&lt;td&gt;很少用于数学，通常表示极小值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Κκ&lt;/td&gt;
&lt;td&gt;Kappa&lt;/td&gt;
&lt;td&gt;ˈkæpə&lt;/td&gt;
&lt;td&gt;表示曲率、波数、热导率等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;Λλ&lt;/td&gt;
&lt;td&gt;Lambda&lt;/td&gt;
&lt;td&gt;ˈlæmdə&lt;/td&gt;
&lt;td&gt;表示波长、特征值、线性密度等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;Μμ&lt;/td&gt;
&lt;td&gt;Mu&lt;/td&gt;
&lt;td&gt;mjuː&lt;/td&gt;
&lt;td&gt;表示摩擦系数、磁导率、平均值等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;Νν&lt;/td&gt;
&lt;td&gt;Nu&lt;/td&gt;
&lt;td&gt;njuː&lt;/td&gt;
&lt;td&gt;表示频率、泊松比等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;Ξξ&lt;/td&gt;
&lt;td&gt;Xi&lt;/td&gt;
&lt;td&gt;zaɪ 或 ksiː&lt;/td&gt;
&lt;td&gt;表示随机变量、配分函数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;Οο&lt;/td&gt;
&lt;td&gt;Omicron&lt;/td&gt;
&lt;td&gt;ˈɒmɪkrɒn&lt;/td&gt;
&lt;td&gt;很少用于数学与科学&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;Ππ&lt;/td&gt;
&lt;td&gt;Pi&lt;/td&gt;
&lt;td&gt;paɪ&lt;/td&gt;
&lt;td&gt;表示圆周率（π\piπ）、乘积符号（∏\prod∏）等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;Ρρ&lt;/td&gt;
&lt;td&gt;Rho&lt;/td&gt;
&lt;td&gt;roʊ&lt;/td&gt;
&lt;td&gt;表示密度、电阻率等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;Σσ/ς&lt;/td&gt;
&lt;td&gt;Sigma&lt;/td&gt;
&lt;td&gt;ˈsɪɡmə&lt;/td&gt;
&lt;td&gt;表示求和符号（∑\sum∑）、标准差等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;Ττ&lt;/td&gt;
&lt;td&gt;Tau&lt;/td&gt;
&lt;td&gt;taʊ&lt;/td&gt;
&lt;td&gt;表示时间常数、剪切应力等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;Υυ&lt;/td&gt;
&lt;td&gt;Upsilon&lt;/td&gt;
&lt;td&gt;ˈʌpsɪlɒn 或 ˈjuːpsɪlɒn&lt;/td&gt;
&lt;td&gt;很少用于数学，偶用于表示介质传播系数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;Φφ&lt;/td&gt;
&lt;td&gt;Phi&lt;/td&gt;
&lt;td&gt;faɪ 或 fiː&lt;/td&gt;
&lt;td&gt;表示黄金比例、角度、磁通量等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;Χχ&lt;/td&gt;
&lt;td&gt;Chi&lt;/td&gt;
&lt;td&gt;kaɪ&lt;/td&gt;
&lt;td&gt;表示卡方分布、特征函数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;Ψψ&lt;/td&gt;
&lt;td&gt;Psi&lt;/td&gt;
&lt;td&gt;saɪ&lt;/td&gt;
&lt;td&gt;表示波函数、状态函数等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;Ωω&lt;/td&gt;
&lt;td&gt;Omega&lt;/td&gt;
&lt;td&gt;ˈoʊmɪɡə 或 oʊˈmeɪɡə&lt;/td&gt;
&lt;td&gt;表示欧姆（电阻单位）、角速度、复数平面中的极限等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/25/modulenotfounderror-no-module-named-crypto.cipher/</guid>
            <title>Python报错ModuleNotFoundError:No-module-named-Crypto.Cipher</title>
            <link>https://0xdadream.github.io/2024/11/25/modulenotfounderror-no-module-named-crypto.cipher/</link>
            <category>bug</category>
            <pubDate>Mon, 25 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Python报错ModuleNotFoundError-No-module-named-‘Crypto-Cipher’&#34;&gt;&lt;a href=&#34;#Python报错ModuleNotFoundError-No-module-named-‘Crypto-Cipher’&#34; class=&#34;headerlink&#34; title=&#34;Python报错ModuleNotFoundError: No module named ‘Crypto.Cipher’&#34;&gt;&lt;/a&gt;Python报错ModuleNotFoundError: No module named ‘Crypto.Cipher’&lt;/h1&gt;&lt;p&gt;这个报错通常是因为 Python 中的 &lt;code&gt;Crypto.Cipher&lt;/code&gt; 模块不可用，可能是没有正确安装相关库或者使用了错误的模块路径。&lt;/p&gt;
&lt;p&gt;在 Python 中，如果要使用加密相关功能，可以安装并使用 &lt;strong&gt;PyCryptodome&lt;/strong&gt;，这是一个常用的加密库。&lt;/p&gt;
&lt;h3 id=&#34;解决方法&#34;&gt;&lt;a href=&#34;#解决方法&#34; class=&#34;headerlink&#34; title=&#34;解决方法&#34;&gt;&lt;/a&gt;解决方法&lt;/h3&gt;&lt;h4 id=&#34;1-安装-pycryptodome&#34;&gt;&lt;a href=&#34;#1-安装-pycryptodome&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 pycryptodome&#34;&gt;&lt;/a&gt;1. 安装 &lt;code&gt;pycryptodome&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;运行以下命令来安装正确的库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; pycryptodome&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-检查安装版本是否正确&#34;&gt;&lt;a href=&#34;#2-检查安装版本是否正确&#34; class=&#34;headerlink&#34; title=&#34;2. 检查安装版本是否正确&#34;&gt;&lt;/a&gt;2. 检查安装版本是否正确&lt;/h4&gt;&lt;p&gt;确保安装成功，并查看库版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip show pycryptodome&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出应类似于：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Name: pycryptodome
Version: &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;.x.x
Location: /path/to/python/site-packages&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-如果问题仍存在&#34;&gt;&lt;a href=&#34;#3-如果问题仍存在&#34; class=&#34;headerlink&#34; title=&#34;3. 如果问题仍存在&#34;&gt;&lt;/a&gt;3. 如果问题仍存在&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;环境问题：确认是否安装在正确的 Python 环境中。你可以通过以下命令检查：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; python
&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; pip&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块冲突：如果已经安装了一个名为 crypto的库（旧版本或其他库），可能会导致冲突。尝试卸载：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip uninstall crypto&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例代码&#34;&gt;&lt;a href=&#34;#示例代码&#34; class=&#34;headerlink&#34; title=&#34;示例代码&#34;&gt;&lt;/a&gt;示例代码&lt;/h4&gt;&lt;p&gt;以下是一个使用 &lt;code&gt;PyCryptodome&lt;/code&gt; 的简单示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; Crypto&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Cipher &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; AES
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; Crypto&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Random &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; get_random_bytes

&lt;span class=&#34;token comment&#34;&gt;# 生成随机密钥&lt;/span&gt;
key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; get_random_bytes&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
cipher &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; AES&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;new&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; AES&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;MODE_EAX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 加密数据&lt;/span&gt;
plaintext &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;b&#39;This is a secret message.&#39;&lt;/span&gt;
nonce &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cipher&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nonce
ciphertext&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; tag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cipher&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encrypt_and_digest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;plaintext&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Ciphertext:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ciphertext&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/24/dong-tai-lian-jie-ku/</guid>
            <title>动态链接库</title>
            <link>https://0xdadream.github.io/2024/11/24/dong-tai-lian-jie-ku/</link>
            <category>命令</category>
            <pubDate>Sun, 24 Nov 2024 23:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;动态链接库&#34;&gt;&lt;a href=&#34;#动态链接库&#34; class=&#34;headerlink&#34; title=&#34;动态链接库&#34;&gt;&lt;/a&gt;动态链接库&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&#34;一、-etc-ld-so-conf-d-的作用&#34;&gt;&lt;a href=&#34;#一、-etc-ld-so-conf-d-的作用&#34; class=&#34;headerlink&#34; title=&#34;一、/etc/ld.so.conf.d 的作用&#34;&gt;&lt;/a&gt;&lt;strong&gt;一、&lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt; 的作用&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;动态库路径管理&lt;/strong&gt;：系统会读取该目录下的 &lt;code&gt;.conf&lt;/code&gt; 文件，这些文件指定了动态链接库的额外搜索路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置动态库缓存&lt;/strong&gt;：在运行程序时，动态链接器会从这些路径中查找所需的库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;默认加载的路径&lt;/strong&gt;（视系统配置而定）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;/lib&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/lib&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/lib&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过 &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;，可以扩展默认路径。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;二、动态库的加载顺序&#34;&gt;&lt;a href=&#34;#二、动态库的加载顺序&#34; class=&#34;headerlink&#34; title=&#34;二、动态库的加载顺序&#34;&gt;&lt;/a&gt;&lt;strong&gt;二、动态库的加载顺序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;动态链接器按照以下顺序查找动态库：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;环境变量&lt;/strong&gt;：&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缓存文件&lt;/strong&gt;：&lt;code&gt;/etc/ld.so.cache&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;默认路径&lt;/strong&gt;：如 &lt;code&gt;/lib&lt;/code&gt; 和 &lt;code&gt;/usr/lib&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：为了提高效率，系统不会直接读取所有路径，而是从 &lt;code&gt;/etc/ld.so.cache&lt;/code&gt; 中加载已经缓存的路径信息。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;三、-etc-ld-so-conf-d-的文件结构&#34;&gt;&lt;a href=&#34;#三、-etc-ld-so-conf-d-的文件结构&#34; class=&#34;headerlink&#34; title=&#34;三、/etc/ld.so.conf.d 的文件结构&#34;&gt;&lt;/a&gt;&lt;strong&gt;三、&lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt; 的文件结构&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;该目录包含多个 &lt;code&gt;.conf&lt;/code&gt; 文件，每个文件可以指定一组路径。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看 /etc/ld.so.conf.d 内容&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /etc/ld.so.conf.d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-lua&#34; data-language=&#34;lua&#34;&gt;&lt;code class=&#34;language-lua&#34;&gt;glibc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf
x86_64&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;gnu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf
&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;文件示例&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/etc/ld.so.conf.d/local.conf：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-vbnet&#34; data-language=&#34;vbnet&#34;&gt;&lt;code class=&#34;language-vbnet&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;lib&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;opt&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;lib&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些路径会被动态链接器添加到库搜索路径中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;四、如何配置动态库路径&#34;&gt;&lt;a href=&#34;#四、如何配置动态库路径&#34; class=&#34;headerlink&#34; title=&#34;四、如何配置动态库路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;四、如何配置动态库路径&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-添加自定义路径&#34;&gt;&lt;a href=&#34;#1-添加自定义路径&#34; class=&#34;headerlink&#34; title=&#34;1. 添加自定义路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 添加自定义路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;假设有一个自定义动态库路径 &lt;code&gt;/home/user/mylibs&lt;/code&gt;，以下是配置步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建配置文件&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; /etc/ld.so.conf.d/mylibs.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加如下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/home/user/mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;更新动态库缓存&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证是否生效&lt;/strong&gt;： 查看是否包含新路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldconfig &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-临时配置路径&#34;&gt;&lt;a href=&#34;#2-临时配置路径&#34; class=&#34;headerlink&#34; title=&#34;2. 临时配置路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 临时配置路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果只是临时测试动态库路径，可以使用 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 环境变量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/home/user/mylibs:&lt;span class=&#34;token variable&#34;&gt;$LD_LIBRARY_PATH&lt;/span&gt;
./myprogram&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这种方法仅对当前终端会话有效。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;五、ldconfig-的作用&#34;&gt;&lt;a href=&#34;#五、ldconfig-的作用&#34; class=&#34;headerlink&#34; title=&#34;五、ldconfig 的作用&#34;&gt;&lt;/a&gt;&lt;strong&gt;五、&lt;code&gt;ldconfig&lt;/code&gt; 的作用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ldconfig&lt;/code&gt; 是管理动态库缓存的工具，其作用包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;扫描路径&lt;/strong&gt;：根据 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; 和 &lt;code&gt;/etc/ld.so.conf.d/&lt;/code&gt; 下的配置文件，扫描动态库路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新缓存&lt;/strong&gt;：生成 &lt;code&gt;/etc/ld.so.cache&lt;/code&gt; 文件，加速库的加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;常用命令&#34;&gt;&lt;a href=&#34;#常用命令&#34; class=&#34;headerlink&#34; title=&#34;常用命令&#34;&gt;&lt;/a&gt;&lt;strong&gt;常用命令&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;更新缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指定路径更新缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig /home/user/mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看当前缓存的库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldconfig &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;六、动态库配置实例&#34;&gt;&lt;a href=&#34;#六、动态库配置实例&#34; class=&#34;headerlink&#34; title=&#34;六、动态库配置实例&#34;&gt;&lt;/a&gt;&lt;strong&gt;六、动态库配置实例&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-动态库开发&#34;&gt;&lt;a href=&#34;#1-动态库开发&#34; class=&#34;headerlink&#34; title=&#34;1. 动态库开发&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 动态库开发&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;创建一个简单动态库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// hello.c&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Hello, from dynamic library!\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译成动态库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;gcc -fPIC -shared -o libhello.so hello.c&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将动态库移动到 &lt;code&gt;/opt/mylibs&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; /opt/mylibs
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; libhello.so /opt/mylibs/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-配置加载路径&#34;&gt;&lt;a href=&#34;#2-配置加载路径&#34; class=&#34;headerlink&#34; title=&#34;2. 配置加载路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 配置加载路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;创建 &lt;code&gt;/etc/ld.so.conf.d/mylibs.conf&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; /etc/ld.so.conf.d/mylibs.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/opt/mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-使用动态库&#34;&gt;&lt;a href=&#34;#3-使用动态库&#34; class=&#34;headerlink&#34; title=&#34;3. 使用动态库&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 使用动态库&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;编写一个测试程序：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// main.c&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译并运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; main main.c &lt;span class=&#34;token parameter variable&#34;&gt;-lhello&lt;/span&gt;
./main&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Hello, from dynamic library&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;七、排错方法&#34;&gt;&lt;a href=&#34;#七、排错方法&#34; class=&#34;headerlink&#34; title=&#34;七、排错方法&#34;&gt;&lt;/a&gt;&lt;strong&gt;七、排错方法&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;检查动态库是否存在&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldconfig &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; libhello&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证动态库路径是否正确&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldd ./main&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;动态库无法加载时&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查是否添加了正确的路径到 &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;检查是否运行了 &lt;code&gt;ldconfig&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/24/linux-wen-jian-cao-zuo-ming-ling/</guid>
            <title>linux文件操作命令</title>
            <link>https://0xdadream.github.io/2024/11/24/linux-wen-jian-cao-zuo-ming-ling/</link>
            <category>命令</category>
            <pubDate>Sun, 24 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux文件操作命令&#34;&gt;&lt;a href=&#34;#linux文件操作命令&#34; class=&#34;headerlink&#34; title=&#34;linux文件操作命令&#34;&gt;&lt;/a&gt;linux文件操作命令&lt;/h1&gt;&lt;p&gt;以下是 Linux 系统中与文件操作相关的命令，附带常用参数的详细解释。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-查看文件和目录&#34;&gt;&lt;a href=&#34;#1-查看文件和目录&#34; class=&#34;headerlink&#34; title=&#34;1. 查看文件和目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 查看文件和目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;列出目录内容-ls&#34;&gt;&lt;a href=&#34;#列出目录内容-ls&#34; class=&#34;headerlink&#34; title=&#34;列出目录内容 (ls)&#34;&gt;&lt;/a&gt;&lt;strong&gt;列出目录内容 (&lt;code&gt;ls&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;路径&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：以详细列表形式显示，包括权限、所有者、文件大小、修改时间等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;：显示所有文件，包括以 &lt;code&gt;.&lt;/code&gt; 开头的隐藏文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;：配合 &lt;code&gt;-l&lt;/code&gt;，以人类可读的文件大小显示（如 &lt;code&gt;1K&lt;/code&gt;, &lt;code&gt;1M&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：逆序排列。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;：按时间排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-lah&lt;/span&gt; /home/user&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看当前路径-pwd&#34;&gt;&lt;a href=&#34;#查看当前路径-pwd&#34; class=&#34;headerlink&#34; title=&#34;查看当前路径 (pwd)&#34;&gt;&lt;/a&gt;&lt;strong&gt;查看当前路径 (&lt;code&gt;pwd&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;pwd&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;输出当前工作目录的完整路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-创建文件和目录&#34;&gt;&lt;a href=&#34;#2-创建文件和目录&#34; class=&#34;headerlink&#34; title=&#34;2. 创建文件和目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 创建文件和目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;创建文件-touch&#34;&gt;&lt;a href=&#34;#创建文件-touch&#34; class=&#34;headerlink&#34; title=&#34;创建文件 (touch)&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建文件 (&lt;code&gt;touch&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;功能：创建一个空文件或更新已有文件的时间戳。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建目录-mkdir&#34;&gt;&lt;a href=&#34;#创建目录-mkdir&#34; class=&#34;headerlink&#34; title=&#34;创建目录 (mkdir)&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建目录 (&lt;code&gt;mkdir&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 目录名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：递归创建目录。如果父目录不存在，会自动创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; /home/user/project/logs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-查看文件内容&#34;&gt;&lt;a href=&#34;#3-查看文件内容&#34; class=&#34;headerlink&#34; title=&#34;3. 查看文件内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 查看文件内容&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;显示文件内容-cat&#34;&gt;&lt;a href=&#34;#显示文件内容-cat&#34; class=&#34;headerlink&#34; title=&#34;显示文件内容 (cat)&#34;&gt;&lt;/a&gt;&lt;strong&gt;显示文件内容 (&lt;code&gt;cat&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：显示行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;：显示所有字符，包括不可见字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分页查看-less-和-more&#34;&gt;&lt;a href=&#34;#分页查看-less-和-more&#34; class=&#34;headerlink&#34; title=&#34;分页查看 (less 和 more)&#34;&gt;&lt;/a&gt;&lt;strong&gt;分页查看 (&lt;code&gt;less&lt;/code&gt; 和 &lt;code&gt;more&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;less：分页查看，支持向前滚动。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;less&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;more：逐页查看，按空格翻页。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-编辑文件&#34;&gt;&lt;a href=&#34;#4-编辑文件&#34; class=&#34;headerlink&#34; title=&#34;4. 编辑文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 编辑文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;简单编辑器-nano&#34;&gt;&lt;a href=&#34;#简单编辑器-nano&#34; class=&#34;headerlink&#34; title=&#34;简单编辑器 (nano)&#34;&gt;&lt;/a&gt;&lt;strong&gt;简单编辑器 (&lt;code&gt;nano&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;使用快捷键（如 &lt;code&gt;Ctrl+O&lt;/code&gt; 保存，&lt;code&gt;Ctrl+X&lt;/code&gt; 退出）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;高级编辑器-vim&#34;&gt;&lt;a href=&#34;#高级编辑器-vim&#34; class=&#34;headerlink&#34; title=&#34;高级编辑器 (vim)&#34;&gt;&lt;/a&gt;&lt;strong&gt;高级编辑器 (&lt;code&gt;vim&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;基本模式：&lt;ul&gt;
&lt;li&gt;按 &lt;code&gt;i&lt;/code&gt; 进入插入模式。&lt;/li&gt;
&lt;li&gt;编辑完成后按 &lt;code&gt;Esc&lt;/code&gt;，输入 &lt;code&gt;:wq&lt;/code&gt; 保存并退出。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-复制、移动和重命名文件&#34;&gt;&lt;a href=&#34;#5-复制、移动和重命名文件&#34; class=&#34;headerlink&#34; title=&#34;5. 复制、移动和重命名文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 复制、移动和重命名文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;复制文件和目录-cp&#34;&gt;&lt;a href=&#34;#复制文件和目录-cp&#34; class=&#34;headerlink&#34; title=&#34;复制文件和目录 (cp)&#34;&gt;&lt;/a&gt;&lt;strong&gt;复制文件和目录 (&lt;code&gt;cp&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 源文件 目标文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：递归复制目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：保留文件属性（权限、时间戳等）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：覆盖前提示确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：显示详细过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rp&lt;/span&gt; source_dir/ target_dir/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;移动和重命名-mv&#34;&gt;&lt;a href=&#34;#移动和重命名-mv&#34; class=&#34;headerlink&#34; title=&#34;移动和重命名 (mv)&#34;&gt;&lt;/a&gt;&lt;strong&gt;移动和重命名 (&lt;code&gt;mv&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 源文件 目标文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：覆盖前提示确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：显示详细过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; file1.txt file2.txt  &lt;span class=&#34;token comment&#34;&gt;# 重命名&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; file.txt /path/to/dir/  &lt;span class=&#34;token comment&#34;&gt;# 移动文件&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-删除文件和目录&#34;&gt;&lt;a href=&#34;#6-删除文件和目录&#34; class=&#34;headerlink&#34; title=&#34;6. 删除文件和目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 删除文件和目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;删除文件和目录-rm&#34;&gt;&lt;a href=&#34;#删除文件和目录-rm&#34; class=&#34;headerlink&#34; title=&#34;删除文件和目录 (rm)&#34;&gt;&lt;/a&gt;&lt;strong&gt;删除文件和目录 (&lt;code&gt;rm&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件/目录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：递归删除目录及其内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：强制删除，无需确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：删除前提示确认。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /tmp/test&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-搜索文件和内容&#34;&gt;&lt;a href=&#34;#7-搜索文件和内容&#34; class=&#34;headerlink&#34; title=&#34;7. 搜索文件和内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 搜索文件和内容&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;查找文件-find&#34;&gt;&lt;a href=&#34;#查找文件-find&#34; class=&#34;headerlink&#34; title=&#34;查找文件 (find)&#34;&gt;&lt;/a&gt;&lt;strong&gt;查找文件 (&lt;code&gt;find&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;路径&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;条件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;操作&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-name&lt;/code&gt;：按文件名查找（支持通配符）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type&lt;/code&gt;：按类型查找，如 &lt;code&gt;f&lt;/code&gt;（文件），&lt;code&gt;d&lt;/code&gt;（目录）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-size&lt;/code&gt;：按文件大小查找，如 &lt;code&gt;+1M&lt;/code&gt;（大于1MB）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime&lt;/code&gt;：按修改时间查找，如 &lt;code&gt;-7&lt;/code&gt;（7天内修改的文件）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /home &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*.txt&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;搜索文件内容-grep&#34;&gt;&lt;a href=&#34;#搜索文件内容-grep&#34; class=&#34;headerlink&#34; title=&#34;搜索文件内容 (grep)&#34;&gt;&lt;/a&gt;&lt;strong&gt;搜索文件内容 (&lt;code&gt;grep&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;关键字&#34;&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：忽略大小写。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：递归搜索目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：显示行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rn&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;error&#34;&lt;/span&gt; /var/log/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-修改文件权限&#34;&gt;&lt;a href=&#34;#8-修改文件权限&#34; class=&#34;headerlink&#34; title=&#34;8. 修改文件权限&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. 修改文件权限&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;修改权限-chmod&#34;&gt;&lt;a href=&#34;#修改权限-chmod&#34; class=&#34;headerlink&#34; title=&#34;修改权限 (chmod)&#34;&gt;&lt;/a&gt;&lt;strong&gt;修改权限 (&lt;code&gt;chmod&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;模式&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;权限格式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;：用户，&lt;code&gt;g&lt;/code&gt;：组，&lt;code&gt;o&lt;/code&gt;：其他，&lt;code&gt;a&lt;/code&gt;：全部。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;：添加权限，&lt;code&gt;-&lt;/code&gt;：删除权限，&lt;code&gt;=&lt;/code&gt;：设置权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+x script.sh    &lt;span class=&#34;token comment&#34;&gt;# 给用户添加执行权限&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; file.txt     &lt;span class=&#34;token comment&#34;&gt;# 设置读写执行权限&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修改所有者-chown&#34;&gt;&lt;a href=&#34;#修改所有者-chown&#34; class=&#34;headerlink&#34; title=&#34;修改所有者 (chown)&#34;&gt;&lt;/a&gt;&lt;strong&gt;修改所有者 (&lt;code&gt;chown&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 用户:组 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; user:group file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;9-压缩和解压文件&#34;&gt;&lt;a href=&#34;#9-压缩和解压文件&#34; class=&#34;headerlink&#34; title=&#34;9. 压缩和解压文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;9. 压缩和解压文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;压缩文件&#34;&gt;&lt;a href=&#34;#压缩文件&#34; class=&#34;headerlink&#34; title=&#34;压缩文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;压缩文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tar：创建归档文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-czvf&lt;/span&gt; archive.tar.gz 文件/目录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;zip：压缩为 ZIP 格式。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;zip&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; archive.zip 文件/目录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解压文件&#34;&gt;&lt;a href=&#34;#解压文件&#34; class=&#34;headerlink&#34; title=&#34;解压文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;解压文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tar：解压 .tar.gz文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xzvf&lt;/span&gt; archive.tar.gz&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unzip：解压 ZIP 文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;unzip&lt;/span&gt; archive.zip&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;10-其他常用操作&#34;&gt;&lt;a href=&#34;#10-其他常用操作&#34; class=&#34;headerlink&#34; title=&#34;10. 其他常用操作&#34;&gt;&lt;/a&gt;&lt;strong&gt;10. 其他常用操作&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;统计文件行、词、字符数-wc&#34;&gt;&lt;a href=&#34;#统计文件行、词、字符数-wc&#34; class=&#34;headerlink&#34; title=&#34;统计文件行、词、字符数 (wc)&#34;&gt;&lt;/a&gt;&lt;strong&gt;统计文件行、词、字符数 (&lt;code&gt;wc&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：统计行数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;：统计单词数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;：统计字节数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;监视文件内容-tail-和-head&#34;&gt;&lt;a href=&#34;#监视文件内容-tail-和-head&#34; class=&#34;headerlink&#34; title=&#34;监视文件内容 (tail 和 head)&#34;&gt;&lt;/a&gt;&lt;strong&gt;监视文件内容 (&lt;code&gt;tail&lt;/code&gt; 和 &lt;code&gt;head&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;显示文件头部：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;动态监视文件末尾：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;在 Linux 中，&lt;strong&gt;管道符 (&lt;code&gt;|&lt;/code&gt;)&lt;/strong&gt; 是一种强大的工具，用于将一个命令的输出传递给另一个命令作为输入。以下是管道符的详细介绍和常见使用场景。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;管道符语法&#34;&gt;&lt;a href=&#34;#管道符语法&#34; class=&#34;headerlink&#34; title=&#34;管道符语法&#34;&gt;&lt;/a&gt;&lt;strong&gt;管道符语法&lt;/strong&gt;&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;command1 &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; command2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;command1&lt;/code&gt;：第一个命令，生成输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt;：管道符，将第一个命令的输出传递给第二个命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;command2&lt;/code&gt;：第二个命令，将接收的输入进行处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;常见场景和示例&#34;&gt;&lt;a href=&#34;#常见场景和示例&#34; class=&#34;headerlink&#34; title=&#34;常见场景和示例&#34;&gt;&lt;/a&gt;&lt;strong&gt;常见场景和示例&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-结合-grep-搜索内容&#34;&gt;&lt;a href=&#34;#1-结合-grep-搜索内容&#34; class=&#34;headerlink&#34; title=&#34;1. 结合 grep 搜索内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 结合 &lt;code&gt;grep&lt;/code&gt; 搜索内容&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查找某目录中包含特定关键词的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;filename&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：列出当前目录下包含 “log” 的文件名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;log&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-结合-sort-排序&#34;&gt;&lt;a href=&#34;#2-结合-sort-排序&#34; class=&#34;headerlink&#34; title=&#34;2. 结合 sort 排序&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 结合 &lt;code&gt;sort&lt;/code&gt; 排序&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;按文件大小排序（结合 ls -l）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-k&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-k 5&lt;/code&gt;：按第 5 列（文件大小）排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：按数值排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-结合-wc-统计&#34;&gt;&lt;a href=&#34;#3-结合-wc-统计&#34; class=&#34;headerlink&#34; title=&#34;3. 结合 wc 统计&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 结合 &lt;code&gt;wc&lt;/code&gt; 统计&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;统计当前目录下的文件数量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;统计文件中的行数、单词数和字符数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-结合-head-和-tail-查看内容&#34;&gt;&lt;a href=&#34;#4-结合-head-和-tail-查看内容&#34; class=&#34;headerlink&#34; title=&#34;4. 结合 head 和 tail 查看内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 结合 &lt;code&gt;head&lt;/code&gt; 和 &lt;code&gt;tail&lt;/code&gt; 查看内容&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看文件的前 10 行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看文件的最后 10 行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-结合-cut-提取字段&#34;&gt;&lt;a href=&#34;#5-结合-cut-提取字段&#34; class=&#34;headerlink&#34; title=&#34;5. 结合 cut 提取字段&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 结合 &lt;code&gt;cut&lt;/code&gt; 提取字段&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从 ls -l中提取文件权限：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cut&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d &#39; &#39;&lt;/code&gt;：以空格为分隔符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 1&lt;/code&gt;：提取第 1 列。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-结合-awk-进行格式化&#34;&gt;&lt;a href=&#34;#6-结合-awk-进行格式化&#34; class=&#34;headerlink&#34; title=&#34;6. 结合 awk 进行格式化&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 结合 &lt;code&gt;awk&lt;/code&gt; 进行格式化&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;提取文件名和大小：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;{print $5, $9}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$5&lt;/code&gt;：表示文件大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$9&lt;/code&gt;：表示文件名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-结合-uniq-去重&#34;&gt;&lt;a href=&#34;#7-结合-uniq-去重&#34; class=&#34;headerlink&#34; title=&#34;7. 结合 uniq 去重&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 结合 &lt;code&gt;uniq&lt;/code&gt; 去重&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;统计文件中的唯一单词（结合 sort 和 uniq）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uniq&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-结合-tee-保存和显示&#34;&gt;&lt;a href=&#34;#8-结合-tee-保存和显示&#34; class=&#34;headerlink&#34; title=&#34;8. 结合 tee 保存和显示&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. 结合 &lt;code&gt;tee&lt;/code&gt; 保存和显示&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将命令输出保存到文件，同时在终端显示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-结合-xargs-执行批量命令&#34;&gt;&lt;a href=&#34;#9-结合-xargs-执行批量命令&#34; class=&#34;headerlink&#34; title=&#34;9. 结合 xargs 执行批量命令&#34;&gt;&lt;/a&gt;&lt;strong&gt;9. 结合 &lt;code&gt;xargs&lt;/code&gt; 执行批量命令&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除包含特定关键词的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;temp&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xargs&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将文本文件中的内容逐行作为命令行参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; files.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xargs&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-I&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; /backup/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-动态监控日志文件&#34;&gt;&lt;a href=&#34;#10-动态监控日志文件&#34; class=&#34;headerlink&#34; title=&#34;10. 动态监控日志文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;10. 动态监控日志文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;监控日志文件中包含错误的行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; /var/log/syslog &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;管道符结合其他符号&#34;&gt;&lt;a href=&#34;#管道符结合其他符号&#34; class=&#34;headerlink&#34; title=&#34;管道符结合其他符号&#34;&gt;&lt;/a&gt;&lt;strong&gt;管道符结合其他符号&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;与重定向符号一起使用&#34;&gt;&lt;a href=&#34;#与重定向符号一起使用&#34; class=&#34;headerlink&#34; title=&#34;与重定向符号一起使用&#34;&gt;&lt;/a&gt;&lt;strong&gt;与重定向符号一起使用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;将管道符的输出保存到文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;txt&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; result.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;多重管道&#34;&gt;&lt;a href=&#34;#多重管道&#34; class=&#34;headerlink&#34; title=&#34;多重管道&#34;&gt;&lt;/a&gt;&lt;strong&gt;多重管道&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;将多个命令串联：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;keyword&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uniq&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-nr&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;功能：&lt;ol&gt;
&lt;li&gt;搜索文件中的 &lt;code&gt;keyword&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;排序结果。&lt;/li&gt;
&lt;li&gt;去重并统计出现次数。&lt;/li&gt;
&lt;li&gt;按出现次数逆序排序。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;在 Linux 中，&lt;strong&gt;重定向&lt;/strong&gt; 是将命令的输出或输入重定向到文件或其他设备的操作。它通常用于保存输出、将错误输出单独处理或读取文件作为输入。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-输出重定向&#34;&gt;&lt;a href=&#34;#1-输出重定向&#34; class=&#34;headerlink&#34; title=&#34;1. 输出重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 输出重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;标准输出&#34;&gt;&lt;a href=&#34;#标准输出&#34; class=&#34;headerlink&#34; title=&#34;标准输出 (&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;标准输出 (&lt;code&gt;&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将命令的标准输出（正常输出）重定向到文件。&lt;/li&gt;
&lt;li&gt;如果文件已存在，会&lt;strong&gt;覆盖&lt;/strong&gt;原文件内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 ls 命令的输出保存到 output.txt文件中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;追加输出&#34;&gt;&lt;a href=&#34;#追加输出&#34; class=&#34;headerlink&#34; title=&#34;追加输出 (&gt;&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;追加输出 (&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将命令的标准输出&lt;strong&gt;追加&lt;/strong&gt;到文件末尾，而不是覆盖。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;New line&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将字符串 “New line” 添加到 output.txt 的末尾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-错误重定向&#34;&gt;&lt;a href=&#34;#2-错误重定向&#34; class=&#34;headerlink&#34; title=&#34;2. 错误重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 错误重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;标准错误输出-2&#34;&gt;&lt;a href=&#34;#标准错误输出-2&#34; class=&#34;headerlink&#34; title=&#34;标准错误输出 (2&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;标准错误输出 (&lt;code&gt;2&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将命令的错误输出（标准错误）重定向到文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将错误消息保存到 error.txt。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;追加错误输出-2&#34;&gt;&lt;a href=&#34;#追加错误输出-2&#34; class=&#34;headerlink&#34; title=&#34;追加错误输出 (2&gt;&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;追加错误输出 (&lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将错误输出&lt;strong&gt;追加&lt;/strong&gt;到文件末尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;3-合并标准输出和错误输出&#34;&gt;&lt;a href=&#34;#3-合并标准输出和错误输出&#34; class=&#34;headerlink&#34; title=&#34;3. 合并标准输出和错误输出&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 合并标准输出和错误输出&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;将标准输出和标准错误合并到同一文件&#34;&gt;&lt;a href=&#34;#将标准输出和标准错误合并到同一文件&#34; class=&#34;headerlink&#34; title=&#34;将标准输出和标准错误合并到同一文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;将标准输出和标准错误合并到同一文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; 将正常输出和错误输出都保存到一个文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; existing_file nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&lt;/span&gt; all_output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;追加合并输出&#34;&gt;&lt;a href=&#34;#追加合并输出&#34; class=&#34;headerlink&#34; title=&#34;追加合并输出&#34;&gt;&lt;/a&gt;&lt;strong&gt;追加合并输出&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/code&gt; 将正常输出和错误输出都追加到一个文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;4-输入重定向&#34;&gt;&lt;a href=&#34;#4-输入重定向&#34; class=&#34;headerlink&#34; title=&#34;4. 输入重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 输入重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;将文件作为命令的输入&#34;&gt;&lt;a href=&#34;#将文件作为命令的输入&#34; class=&#34;headerlink&#34; title=&#34;将文件作为命令的输入 (&lt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;将文件作为命令的输入 (&lt;code&gt;&amp;lt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 将文件内容作为命令的输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; input.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;统计 input.txt 的行数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-同时处理输出和错误&#34;&gt;&lt;a href=&#34;#5-同时处理输出和错误&#34; class=&#34;headerlink&#34; title=&#34;5. 同时处理输出和错误&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 同时处理输出和错误&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;将标准输出和错误分别保存到不同文件&#34;&gt;&lt;a href=&#34;#将标准输出和错误分别保存到不同文件&#34; class=&#34;headerlink&#34; title=&#34;将标准输出和错误分别保存到不同文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;将标准输出和错误分别保存到不同文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;gt; file&lt;/code&gt; 和 &lt;code&gt;2&amp;gt; error_file&lt;/code&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; output.txt &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; existing_file nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; stdout.txt &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; stderr.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-特殊重定向&#34;&gt;&lt;a href=&#34;#6-特殊重定向&#34; class=&#34;headerlink&#34; title=&#34;6. 特殊重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 特殊重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;丢弃输出到-dev-null&#34;&gt;&lt;a href=&#34;#丢弃输出到-dev-null&#34; class=&#34;headerlink&#34; title=&#34;丢弃输出到 /dev/null&#34;&gt;&lt;/a&gt;&lt;strong&gt;丢弃输出到 &lt;code&gt;/dev/null&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/dev/null&lt;/code&gt; 是一个特殊设备文件，重定向到它的内容会被丢弃。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;丢弃标准输出：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; /dev/null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;丢弃标准错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; /dev/null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时丢弃标准输出和错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&lt;/span&gt; /dev/null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-使用-tee-同时输出到文件和终端&#34;&gt;&lt;a href=&#34;#7-使用-tee-同时输出到文件和终端&#34; class=&#34;headerlink&#34; title=&#34;7. 使用 tee 同时输出到文件和终端&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 使用 &lt;code&gt;tee&lt;/code&gt; 同时输出到文件和终端&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tee&lt;/code&gt; 命令可以将输入同时保存到文件和终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;ls&lt;/code&gt; 的输出显示在终端的同时保存到 &lt;code&gt;output.txt&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;追加模式：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-重定向符号总结&#34;&gt;&lt;a href=&#34;#8-重定向符号总结&#34; class=&#34;headerlink&#34; title=&#34;8. 重定向符号总结&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. 重定向符号总结&lt;/strong&gt;&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出重定向到文件，覆盖文件内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出追加到文件末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将错误输出重定向到文件，覆盖文件内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将错误输出追加到文件末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出和错误输出重定向到同一文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出和错误输出追加到同一文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将文件内容作为命令的标准输入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/dev/null&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丢弃所有输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;td&gt;tee`&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例：组合重定向&#34;&gt;&lt;a href=&#34;#示例：组合重定向&#34; class=&#34;headerlink&#34; title=&#34;示例：组合重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;示例：组合重定向&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;同时保存输出和错误到不同文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; existing_file nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; stdout.txt &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; stderr.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时显示输出在终端，并保存到文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;统计某文件夹的文件数量，但丢弃错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /path/to/dir &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; /dev/null &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/23/vim-bian-ji-qi/</guid>
            <title>Vim 编辑器详细教程</title>
            <link>https://0xdadream.github.io/2024/11/23/vim-bian-ji-qi/</link>
            <category>tools</category>
            <pubDate>Sat, 23 Nov 2024 23:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Vim-编辑器详细教程&#34;&gt;&lt;a href=&#34;#Vim-编辑器详细教程&#34; class=&#34;headerlink&#34; title=&#34;Vim 编辑器详细教程&#34;&gt;&lt;/a&gt;Vim 编辑器详细教程&lt;/h1&gt;&lt;p&gt;Vim 是一个强大的文本编辑器，以其高效的编辑能力和强大的功能著称，特别适合程序员和文字处理工作者。以下是一个详细的 Vim 教程，从基础操作到高级用法。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-Vim-基础操作&#34;&gt;&lt;a href=&#34;#1-Vim-基础操作&#34; class=&#34;headerlink&#34; title=&#34;1. Vim 基础操作&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Vim 基础操作&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-1-Vim-的三种模式&#34;&gt;&lt;a href=&#34;#1-1-Vim-的三种模式&#34; class=&#34;headerlink&#34; title=&#34;1.1 Vim 的三种模式&#34;&gt;&lt;/a&gt;1.1 Vim 的三种模式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正常模式&lt;/strong&gt;（Normal Mode）：默认进入的模式，用于浏览、操作和执行命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入模式&lt;/strong&gt;（Insert Mode）：用于编辑文本，按 &lt;code&gt;i&lt;/code&gt; 进入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命令模式&lt;/strong&gt;（Command Mode）：执行文件操作或配置命令，按 &lt;code&gt;:&lt;/code&gt; 进入。&lt;/li&gt;
&lt;li&gt;ESC：三种模式切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-启动和退出-Vim&#34;&gt;&lt;a href=&#34;#1-2-启动和退出-Vim&#34; class=&#34;headerlink&#34; title=&#34;1.2 启动和退出 Vim&#34;&gt;&lt;/a&gt;1.2 启动和退出 Vim&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动 Vim：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;退出 Vim：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保存并退出：&lt;code&gt;:&lt;/code&gt; → 输入 &lt;code&gt;wq&lt;/code&gt; → 按 &lt;code&gt;Enter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;强制退出（不保存）：&lt;code&gt;:&lt;/code&gt; → 输入 &lt;code&gt;q!&lt;/code&gt; → 按 &lt;code&gt;Enter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-Vim-基本移动命令&#34;&gt;&lt;a href=&#34;#2-Vim-基本移动命令&#34; class=&#34;headerlink&#34; title=&#34;2. Vim 基本移动命令&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;Vim 基本移动命令&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;按键快速移动：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;：向左移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;：向右移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;：向下移动一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;：向上移动一行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按单词移动：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;：跳到下一个单词开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt;：跳到当前或下一个单词末尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;：跳到当前或前一个单词开头&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按行快速移动：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;：跳到行首&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;：跳到行首的第一个非空字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;：跳到行尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按页移动：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl-d&lt;/code&gt;：向下滚动半屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-u&lt;/code&gt;：向上滚动半屏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-文本编辑操作&#34;&gt;&lt;a href=&#34;#3-文本编辑操作&#34; class=&#34;headerlink&#34; title=&#34;3. 文本编辑操作&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;文本编辑操作&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;3-1-插入文本&#34;&gt;&lt;a href=&#34;#3-1-插入文本&#34; class=&#34;headerlink&#34; title=&#34;3.1 插入文本&#34;&gt;&lt;/a&gt;3.1 插入文本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;：在光标前插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;：在行首插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt;：在光标后插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt;：在行尾插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o&lt;/code&gt;：在当前行下插入新行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;O&lt;/code&gt;：在当前行上插入新行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-2-删除文本&#34;&gt;&lt;a href=&#34;#3-2-删除文本&#34; class=&#34;headerlink&#34; title=&#34;3.2 删除文本&#34;&gt;&lt;/a&gt;3.2 删除文本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;：删除光标处字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw&lt;/code&gt;：删除当前单词&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dd&lt;/code&gt;：删除当前行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d$&lt;/code&gt;：删除光标到行尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d0&lt;/code&gt;：删除光标到行首&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-3-复制与粘贴&#34;&gt;&lt;a href=&#34;#3-3-复制与粘贴&#34; class=&#34;headerlink&#34; title=&#34;3.3 复制与粘贴&#34;&gt;&lt;/a&gt;3.3 复制与粘贴&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yy&lt;/code&gt;：复制当前行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y$&lt;/code&gt;：复制光标到行尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;：粘贴到光标后&lt;/li&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt;：粘贴到光标前&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-4-替换文本&#34;&gt;&lt;a href=&#34;#3-4-替换文本&#34; class=&#34;headerlink&#34; title=&#34;3.4 替换文本&#34;&gt;&lt;/a&gt;3.4 替换文本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;：替换当前字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt;：进入替换模式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cw&lt;/code&gt;：替换当前单词&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt;：替换光标到行尾内容&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-搜索与替换&#34;&gt;&lt;a href=&#34;#4-搜索与替换&#34; class=&#34;headerlink&#34; title=&#34;4. 搜索与替换&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;搜索与替换&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;4-1-搜索&#34;&gt;&lt;a href=&#34;#4-1-搜索&#34; class=&#34;headerlink&#34; title=&#34;4.1 搜索&#34;&gt;&lt;/a&gt;4.1 搜索&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/关键词&lt;/code&gt;：向下搜索&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?关键词&lt;/code&gt;：向上搜索&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;：跳到下一个匹配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;：跳到上一个匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-2-替换&#34;&gt;&lt;a href=&#34;#4-2-替换&#34; class=&#34;headerlink&#34; title=&#34;4.2 替换&#34;&gt;&lt;/a&gt;4.2 替换&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单次替换：&lt;code&gt;:%s/旧文本/新文本/g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确认替换：&lt;code&gt;:%s/旧文本/新文本/gc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-多文件与多窗口&#34;&gt;&lt;a href=&#34;#5-多文件与多窗口&#34; class=&#34;headerlink&#34; title=&#34;5. 多文件与多窗口&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;多文件与多窗口&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;5-1-分屏操作&#34;&gt;&lt;a href=&#34;#5-1-分屏操作&#34; class=&#34;headerlink&#34; title=&#34;5.1 分屏操作&#34;&gt;&lt;/a&gt;5.1 分屏操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:sp 文件名&lt;/code&gt;：水平分屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:vsp 文件名&lt;/code&gt;：垂直分屏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-w&lt;/code&gt; + &lt;code&gt;方向键&lt;/code&gt;：切换窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-2-标签页&#34;&gt;&lt;a href=&#34;#5-2-标签页&#34; class=&#34;headerlink&#34; title=&#34;5.2 标签页&#34;&gt;&lt;/a&gt;5.2 标签页&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:tabnew 文件名&lt;/code&gt;：打开新标签页&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:tabn&lt;/code&gt;：切换到下一个标签页&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:tabp&lt;/code&gt;：切换到上一个标签页&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-Vim-配置&#34;&gt;&lt;a href=&#34;#6-Vim-配置&#34; class=&#34;headerlink&#34; title=&#34;6. Vim 配置&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;Vim 配置&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;6-1-创建配置文件&#34;&gt;&lt;a href=&#34;#6-1-创建配置文件&#34; class=&#34;headerlink&#34; title=&#34;6.1 创建配置文件&#34;&gt;&lt;/a&gt;6.1 创建配置文件&lt;/h3&gt;&lt;p&gt;Vim 配置文件路径：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux: &lt;code&gt;~/.vimrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows: &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\_vimrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-2-常用配置&#34;&gt;&lt;a href=&#34;#6-2-常用配置&#34; class=&#34;headerlink&#34; title=&#34;6.2 常用配置&#34;&gt;&lt;/a&gt;6.2 常用配置&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-vim&#34; data-language=&#34;vim&#34;&gt;&lt;code class=&#34;language-vim&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;number&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;&#34; 显示行号&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;tabstop&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;&#34; 设置 Tab 宽度为 4&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;shiftwidth&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;&#34; 自动缩进宽度为 4&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;expandtab&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;&#34; 将 Tab 转为空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;autoindent&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;&#34; 自动缩进&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;hlsearch&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;&#34; 高亮搜索结果&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;incsearch&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;&#34; 实时搜索&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;syntax&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;&#34; 开启语法高亮&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;7-高级功能&#34;&gt;&lt;a href=&#34;#7-高级功能&#34; class=&#34;headerlink&#34; title=&#34;7. 高级功能&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;高级功能&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;7-1-宏录制&#34;&gt;&lt;a href=&#34;#7-1-宏录制&#34; class=&#34;headerlink&#34; title=&#34;7.1 宏录制&#34;&gt;&lt;/a&gt;7.1 宏录制&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;开始录制：按 &lt;code&gt;q&lt;/code&gt; → 输入一个字母（如 &lt;code&gt;a&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;执行操作（如插入文本或删除行）&lt;/li&gt;
&lt;li&gt;结束录制：再次按 &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;播放宏：&lt;code&gt;@a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-2-快速跳转&#34;&gt;&lt;a href=&#34;#7-2-快速跳转&#34; class=&#34;headerlink&#34; title=&#34;7.2 快速跳转&#34;&gt;&lt;/a&gt;7.2 快速跳转&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl-o&lt;/code&gt;：返回上一个光标位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-i&lt;/code&gt;：前进到下一个光标位置&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-学习资源&#34;&gt;&lt;a href=&#34;#8-学习资源&#34; class=&#34;headerlink&#34; title=&#34;8. 学习资源&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;学习资源&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;官方文档：&lt;code&gt;:help&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在线教程：&lt;a href=&#34;https://vim-adventures.com/&#34;&gt;Vim Adventures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/23/bian-yi-shi-yong/</guid>
            <title>编译教程</title>
            <link>https://0xdadream.github.io/2024/11/23/bian-yi-shi-yong/</link>
            <category>命令</category>
            <pubDate>Sat, 23 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;编译教程&#34;&gt;&lt;a href=&#34;#编译教程&#34; class=&#34;headerlink&#34; title=&#34;编译教程&#34;&gt;&lt;/a&gt;编译教程&lt;/h1&gt;&lt;p&gt;下面是一个&lt;strong&gt;完整的从源码编译安装软件的教程&lt;/strong&gt;，涵盖了从环境准备到配置、编译、安装的所有可能会用到的步骤和细节，适用于各种类型的软件包。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、环境准备&#34;&gt;&lt;a href=&#34;#一、环境准备&#34; class=&#34;headerlink&#34; title=&#34;一、环境准备&#34;&gt;&lt;/a&gt;一、环境准备&lt;/h2&gt;&lt;p&gt;在开始编译源码之前，确保系统满足以下条件：&lt;/p&gt;
&lt;h3 id=&#34;1-安装必要工具&#34;&gt;&lt;a href=&#34;#1-安装必要工具&#34; class=&#34;headerlink&#34; title=&#34;1. 安装必要工具&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;安装必要工具&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 Linux 环境下，通常需要以下工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编译器&lt;/strong&gt;: &lt;code&gt;gcc&lt;/code&gt; 或 &lt;code&gt;clang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建工具&lt;/strong&gt;: &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他依赖&lt;/strong&gt;: &lt;code&gt;autoconf&lt;/code&gt;, &lt;code&gt;automake&lt;/code&gt;, &lt;code&gt;libtool&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于基于 Debian 的系统（如 Ubuntu）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; build-essential autoconf automake libtool pkg-config&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对于基于 RHEL 的系统（如 CentOS）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum groupinstall &lt;span class=&#34;token string&#34;&gt;&#34;Development Tools&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; autoconf automake libtool pkgconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-下载源码&#34;&gt;&lt;a href=&#34;#2-下载源码&#34; class=&#34;headerlink&#34; title=&#34;2. 下载源码&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;下载源码&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;源码通常以 &lt;code&gt;.tar.gz&lt;/code&gt; 或 &lt;code&gt;.tar.bz2&lt;/code&gt; 的形式提供：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://example.com/software-1.0.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xzvf&lt;/span&gt; software-1.0.tar.gz
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; software-1.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;二、运行-configure&#34;&gt;&lt;a href=&#34;#二、运行-configure&#34; class=&#34;headerlink&#34; title=&#34;二、运行 ./configure&#34;&gt;&lt;/a&gt;二、运行 &lt;code&gt;./configure&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;./configure&lt;/code&gt; 是自动生成的配置脚本，用于检查系统环境，生成适合当前系统的编译配置。以下是配置过程的所有选项说明。&lt;/p&gt;
&lt;h3 id=&#34;1-路径相关选项&#34;&gt;&lt;a href=&#34;#1-路径相关选项&#34; class=&#34;headerlink&#34; title=&#34;1. 路径相关选项&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;路径相关选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--prefix=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;软件安装的根目录&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/usr/local&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--prefix=/opt/myapp&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--exec-prefix=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;架构相关文件的安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$prefix&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--exec-prefix=/usr&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--bindir=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可执行文件安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$exec_prefix/bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--bindir=/usr/bin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--libdir=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;库文件安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$exec_prefix/lib&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--libdir=/opt/myapp/lib&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--includedir=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;头文件安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$prefix/include&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--includedir=/opt/include&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp &lt;span class=&#34;token parameter variable&#34;&gt;--bindir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp/bin &lt;span class=&#34;token parameter variable&#34;&gt;--libdir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp/lib&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;prefix-的用途&#34;&gt;&lt;a href=&#34;#prefix-的用途&#34; class=&#34;headerlink&#34; title=&#34;prefix 的用途&#34;&gt;&lt;/a&gt;&lt;code&gt;prefix&lt;/code&gt; 的用途&lt;/h4&gt;&lt;p&gt;&lt;code&gt;prefix&lt;/code&gt; 是通过 &lt;code&gt;./configure --prefix=DIR&lt;/code&gt; 选项指定的路径。其主要作用是告诉构建系统，安装的文件应该放在哪个目录下。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$prefix&lt;/code&gt; 的默认值通常是：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/usr/local&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你运行以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那么，安装路径会变成以下结构：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/opt/myapp/bin       # 可执行文件
/opt/myapp/lib       # 库文件
/opt/myapp/include   # 头文件
/opt/myapp/share     # 共享资源（如文档、手册）&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;如何修改-prefix&#34;&gt;&lt;a href=&#34;#如何修改-prefix&#34; class=&#34;headerlink&#34; title=&#34;如何修改 $prefix&#34;&gt;&lt;/a&gt;如何修改 &lt;code&gt;$prefix&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在配置阶段指定通过 &lt;code&gt;./configure&lt;/code&gt; 的 &lt;code&gt;--prefix&lt;/code&gt; 参数直接指定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/custom/path&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果不指定，系统会默认安装到 &lt;code&gt;/usr/local&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 文件安装到 /usr/local/...&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;prefix-的实际应用&#34;&gt;&lt;a href=&#34;#prefix-的实际应用&#34; class=&#34;headerlink&#34; title=&#34;$prefix 的实际应用&#34;&gt;&lt;/a&gt;&lt;code&gt;$prefix&lt;/code&gt; 的实际应用&lt;/h4&gt;&lt;p&gt;假设我们正在安装一个名为 &lt;code&gt;myapp&lt;/code&gt; 的软件：&lt;/p&gt;
&lt;p&gt;示例 1: 默认安装到 &lt;code&gt;/usr/local&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，文件路径如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/usr/local/bin/myapp        # 可执行文件
/usr/local/lib/libmyapp.so  # 动态库
/usr/local/include/myapp.h  # 头文件
/usr/local/share/myapp      # 共享数据&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例 2: 自定义安装路径&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，文件路径如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/opt/myapp/bin/myapp        # 可执行文件
/opt/myapp/lib/libmyapp.so  # 动态库
/opt/myapp/include/myapp.h  # 头文件
/opt/myapp/share/myapp      # 共享数据&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;为什么-prefix-很重要&#34;&gt;&lt;a href=&#34;#为什么-prefix-很重要&#34; class=&#34;headerlink&#34; title=&#34;为什么 $prefix 很重要&#34;&gt;&lt;/a&gt;为什么 &lt;code&gt;$prefix&lt;/code&gt; 很重要&lt;/h4&gt;&lt;h5 id=&#34;1-避免覆盖系统文件&#34;&gt;&lt;a href=&#34;#1-避免覆盖系统文件&#34; class=&#34;headerlink&#34; title=&#34;1. 避免覆盖系统文件&#34;&gt;&lt;/a&gt;1. 避免覆盖系统文件&lt;/h5&gt;&lt;p&gt;默认路径 &lt;code&gt;/usr/local&lt;/code&gt; 不会影响系统自带的软件，安全且独立。&lt;/p&gt;
&lt;h5 id=&#34;2-方便不同版本共存&#34;&gt;&lt;a href=&#34;#2-方便不同版本共存&#34; class=&#34;headerlink&#34; title=&#34;2. 方便不同版本共存&#34;&gt;&lt;/a&gt;2. 方便不同版本共存&lt;/h5&gt;&lt;p&gt;通过为不同版本指定不同的 &lt;code&gt;--prefix&lt;/code&gt;，可以在同一台机器上运行多版本的软件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp-1.0
./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp-2.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-灵活管理软件&#34;&gt;&lt;a href=&#34;#3-灵活管理软件&#34; class=&#34;headerlink&#34; title=&#34;3. 灵活管理软件&#34;&gt;&lt;/a&gt;3. 灵活管理软件&lt;/h5&gt;&lt;p&gt;如果安装路径是自定义的，例如 &lt;code&gt;/opt/myapp&lt;/code&gt;，删除整个软件只需移除该目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /opt/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;如何查看-prefix-的值&#34;&gt;&lt;a href=&#34;#如何查看-prefix-的值&#34; class=&#34;headerlink&#34; title=&#34;如何查看 $prefix 的值&#34;&gt;&lt;/a&gt;如何查看 &lt;code&gt;$prefix&lt;/code&gt; 的值&lt;/h4&gt;&lt;p&gt;配置完成后，&lt;code&gt;$prefix&lt;/code&gt; 的值通常会被记录在 &lt;code&gt;Makefile&lt;/code&gt; 中，你可以通过以下方法查看：&lt;/p&gt;
&lt;h5 id=&#34;1-直接查看-Makefile&#34;&gt;&lt;a href=&#34;#1-直接查看-Makefile&#34; class=&#34;headerlink&#34; title=&#34;1. 直接查看 Makefile&#34;&gt;&lt;/a&gt;1. 直接查看 &lt;code&gt;Makefile&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;打开 &lt;code&gt;Makefile&lt;/code&gt;，找到 &lt;code&gt;prefix&lt;/code&gt; 的定义：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;^prefix&#34;&lt;/span&gt; Makefile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-使用-config-log&#34;&gt;&lt;a href=&#34;#2-使用-config-log&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 config.log&#34;&gt;&lt;/a&gt;2. 使用 &lt;code&gt;config.log&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;查看配置过程生成的日志文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;prefix&#34;&lt;/span&gt; config.log&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-功能启用-禁用选项&#34;&gt;&lt;a href=&#34;#2-功能启用-禁用选项&#34; class=&#34;headerlink&#34; title=&#34;2. 功能启用/禁用选项&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;功能启用/禁用选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--enable-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启用某个功能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--enable-ssl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--disable-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;禁用某个功能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--disable-debug&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--with-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启用功能，并指定路径或配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--with-ssl=/opt/openssl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--without-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;禁用功能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--without-zlib&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure --enable-optimizations --disable-debug --with-ssl&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/openssl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-编译器相关选项&#34;&gt;&lt;a href=&#34;#3-编译器相关选项&#34; class=&#34;headerlink&#34; title=&#34;3. 编译器相关选项&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;编译器相关选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CC=COMPILER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定 C 编译器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CC=gcc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CXX=COMPILER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定 C++ 编译器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CXX=g++&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 C 编译器设置标志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CFLAGS=&#34;-O2 -Wall&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CXXFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 C++ 编译器设置标志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CXXFLAGS=&#34;-O2 -Wall&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LDFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置链接器标志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LDFLAGS=&#34;-L/usr/lib&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CPPFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置预处理器标志（头文件路径等）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CPPFLAGS=&#34;-I/usr/include&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token assign-left variable&#34;&gt;CC&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;gcc &lt;span class=&#34;token assign-left variable&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-O2 -Wall&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-L/usr/local/lib&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;CPPFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-I/usr/local/include&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-调试与日志选项&#34;&gt;&lt;a href=&#34;#4-调试与日志选项&#34; class=&#34;headerlink&#34; title=&#34;4. 调试与日志选项&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;调试与日志选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--enable-debug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启用调试模式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--enable-debug&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--disable-debug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;禁用调试模式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--disable-debug&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--quiet&lt;/code&gt; 或 &lt;code&gt;--silent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;减少输出&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--quiet&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示详细输出&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;5-查看所有参数&#34;&gt;&lt;a href=&#34;#5-查看所有参数&#34; class=&#34;headerlink&#34; title=&#34;5.查看所有参数&#34;&gt;&lt;/a&gt;5.查看所有参数&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如得到&lt;code&gt;./configure --python=路径&lt;/code&gt;，可以指定安装到指定python版本库中&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、编译源码&#34;&gt;&lt;a href=&#34;#三、编译源码&#34; class=&#34;headerlink&#34; title=&#34;三、编译源码&#34;&gt;&lt;/a&gt;三、编译源码&lt;/h2&gt;&lt;p&gt;运行 &lt;code&gt;make&lt;/code&gt; 命令开始编译：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;加速编译&lt;/strong&gt;&lt;br&gt;利用多核 CPU：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; -j&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;nproc&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;常见问题&lt;/strong&gt;&lt;br&gt;如果出现依赖问题，请根据报错信息安装缺失的库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、测试编译结果&#34;&gt;&lt;a href=&#34;#四、测试编译结果&#34; class=&#34;headerlink&#34; title=&#34;四、测试编译结果&#34;&gt;&lt;/a&gt;四、测试编译结果&lt;/h2&gt;&lt;p&gt;在安装前，可以运行测试（如果源码支持）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; check&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;五、安装编译结果&#34;&gt;&lt;a href=&#34;#五、安装编译结果&#34; class=&#34;headerlink&#34; title=&#34;五、安装编译结果&#34;&gt;&lt;/a&gt;五、安装编译结果&lt;/h2&gt;&lt;p&gt;运行 &lt;code&gt;make install&lt;/code&gt; 安装编译完成的文件到目标路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，检查安装路径下是否有生成的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /opt/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;六、卸载（可选）&#34;&gt;&lt;a href=&#34;#六、卸载（可选）&#34; class=&#34;headerlink&#34; title=&#34;六、卸载（可选）&#34;&gt;&lt;/a&gt;六、卸载（可选）&lt;/h2&gt;&lt;p&gt;如果需要卸载，使用 &lt;code&gt;make uninstall&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; uninstall&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;七、完整操作示例&#34;&gt;&lt;a href=&#34;#七、完整操作示例&#34; class=&#34;headerlink&#34; title=&#34;七、完整操作示例&#34;&gt;&lt;/a&gt;七、完整操作示例&lt;/h2&gt;&lt;p&gt;以下是完整的从下载到安装的操作流程示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载源码&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://example.com/software-1.0.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xzvf&lt;/span&gt; software-1.0.tar.gz
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; software-1.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行配置脚本&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp --enable-optimizations --with-ssl&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/openssl &lt;span class=&#34;token assign-left variable&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-O2 -Wall&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译源码&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; -j&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;nproc&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行测试&lt;/strong&gt;（可选）:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装程序&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证安装&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/opt/myapp/bin/software &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、常见问题及解决方案&#34;&gt;&lt;a href=&#34;#八、常见问题及解决方案&#34; class=&#34;headerlink&#34; title=&#34;八、常见问题及解决方案&#34;&gt;&lt;/a&gt;八、常见问题及解决方案&lt;/h2&gt;&lt;h3 id=&#34;1-缺少依赖库&#34;&gt;&lt;a href=&#34;#1-缺少依赖库&#34; class=&#34;headerlink&#34; title=&#34;1. 缺少依赖库&#34;&gt;&lt;/a&gt;1. 缺少依赖库&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;错误信息&lt;/strong&gt;: &lt;code&gt;configure: error: Missing library xyz&lt;/code&gt;&lt;br&gt;&lt;strong&gt;解决方法&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libxyz-dev  &lt;span class=&#34;token comment&#34;&gt;# Debian/Ubuntu&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; xyz-devel   &lt;span class=&#34;token comment&#34;&gt;# CentOS/RHEL&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-权限不足&#34;&gt;&lt;a href=&#34;#2-权限不足&#34; class=&#34;headerlink&#34; title=&#34;2. 权限不足&#34;&gt;&lt;/a&gt;2. 权限不足&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;错误信息&lt;/strong&gt;: &lt;code&gt;Permission denied&lt;/code&gt;&lt;br&gt;&lt;strong&gt;解决方法&lt;/strong&gt;:&lt;br&gt;在需要权限的命令前加 &lt;code&gt;sudo&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-环境变量问题&#34;&gt;&lt;a href=&#34;#3-环境变量问题&#34; class=&#34;headerlink&#34; title=&#34;3. 环境变量问题&#34;&gt;&lt;/a&gt;3. 环境变量问题&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题描述&lt;/strong&gt;: 安装后无法找到可执行文件。&lt;br&gt;&lt;strong&gt;解决方法&lt;/strong&gt;: 将安装路径添加到 &lt;code&gt;PATH&lt;/code&gt; 中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;p&gt;以下是 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 的完整使用教程，包括它们的基本概念、工作原理和实际使用步骤。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、autoconf-和-automake-的简介&#34;&gt;&lt;a href=&#34;#一、autoconf-和-automake-的简介&#34; class=&#34;headerlink&#34; title=&#34;一、autoconf 和 automake 的简介&#34;&gt;&lt;/a&gt;一、&lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 的简介&lt;/h2&gt;&lt;h3 id=&#34;1-什么是-autoconf&#34;&gt;&lt;a href=&#34;#1-什么是-autoconf&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是 autoconf&#34;&gt;&lt;/a&gt;1. 什么是 &lt;code&gt;autoconf&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;autoconf&lt;/code&gt; 是一种自动生成 &lt;code&gt;configure&lt;/code&gt; 脚本的工具，主要用来检测构建系统的环境是否满足软件的依赖需求，并生成相应的配置文件（如 &lt;code&gt;Makefile&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供跨平台兼容性。&lt;/li&gt;
&lt;li&gt;检查依赖工具和库的存在。&lt;/li&gt;
&lt;li&gt;自动生成编译脚本。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-什么是-automake&#34;&gt;&lt;a href=&#34;#2-什么是-automake&#34; class=&#34;headerlink&#34; title=&#34;2. 什么是 automake&#34;&gt;&lt;/a&gt;2. 什么是 &lt;code&gt;automake&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;automake&lt;/code&gt; 是一种自动生成 &lt;code&gt;Makefile.in&lt;/code&gt; 文件的工具，它依赖于更高层次的构建规则定义文件 &lt;code&gt;Makefile.am&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简化 &lt;code&gt;Makefile&lt;/code&gt; 编写。&lt;/li&gt;
&lt;li&gt;与 &lt;code&gt;autoconf&lt;/code&gt; 配合，生成完整的构建系统。&lt;/li&gt;
&lt;li&gt;提供模块化和扩展支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、工作原理&#34;&gt;&lt;a href=&#34;#二、工作原理&#34; class=&#34;headerlink&#34; title=&#34;二、工作原理&#34;&gt;&lt;/a&gt;二、工作原理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autoconf&lt;/code&gt; 从 &lt;code&gt;configure.ac&lt;/code&gt; 或 &lt;code&gt;configure.in&lt;/code&gt; 文件生成 &lt;code&gt;configure&lt;/code&gt; 脚本。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;automake&lt;/code&gt; 从 &lt;code&gt;Makefile.am&lt;/code&gt; 文件生成 &lt;code&gt;Makefile.in&lt;/code&gt; 文件，最终结合 &lt;code&gt;autoconf&lt;/code&gt; 的输出生成 &lt;code&gt;Makefile&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;工具链流程&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;configure.ac --&amp;gt; autoconf --&amp;gt; configure
Makefile.am  --&amp;gt; automake --&amp;gt; Makefile.in
configure + Makefile.in --&amp;gt; ./configure --&amp;gt; Makefile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;三、安装和准备环境&#34;&gt;&lt;a href=&#34;#三、安装和准备环境&#34; class=&#34;headerlink&#34; title=&#34;三、安装和准备环境&#34;&gt;&lt;/a&gt;三、安装和准备环境&lt;/h2&gt;&lt;h3 id=&#34;1-安装工具&#34;&gt;&lt;a href=&#34;#1-安装工具&#34; class=&#34;headerlink&#34; title=&#34;1. 安装工具&#34;&gt;&lt;/a&gt;1. 安装工具&lt;/h3&gt;&lt;p&gt;在 Linux 环境中安装 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; autoconf automake  &lt;span class=&#34;token comment&#34;&gt;# Debian/Ubuntu&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; autoconf automake     &lt;span class=&#34;token comment&#34;&gt;# CentOS&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;2-项目准备&#34;&gt;&lt;a href=&#34;#2-项目准备&#34; class=&#34;headerlink&#34; title=&#34;2. 项目准备&#34;&gt;&lt;/a&gt;2. 项目准备&lt;/h3&gt;&lt;p&gt;创建一个简单的 C 项目目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; myproject
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; myproject
&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; src
&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; configure.ac Makefile.am src/Makefile.am&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;四、autoconf-和-automake-使用流程&#34;&gt;&lt;a href=&#34;#四、autoconf-和-automake-使用流程&#34; class=&#34;headerlink&#34; title=&#34;四、autoconf 和 automake 使用流程&#34;&gt;&lt;/a&gt;四、&lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 使用流程&lt;/h2&gt;&lt;h3 id=&#34;1-创建-configure-ac-文件&#34;&gt;&lt;a href=&#34;#1-创建-configure-ac-文件&#34; class=&#34;headerlink&#34; title=&#34;1. 创建 configure.ac 文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 创建 &lt;code&gt;configure.ac&lt;/code&gt; 文件&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;configure.ac&lt;/code&gt; 是 &lt;code&gt;autoconf&lt;/code&gt; 的核心文件，定义了项目名称、版本、依赖工具等。&lt;/p&gt;
&lt;p&gt;以下是一个简单示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [user@example.com])  # 项目名称、版本和维护者
AM_INIT_AUTOMAKE                                  # 初始化 automake
AC_PROG_CC                                       # 检测 C 编译器
AC_CONFIG_FILES([Makefile src/Makefile])         # 配置 Makefile 文件
AC_OUTPUT                                        # 输出配置文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;2-创建-Makefile-am-文件&#34;&gt;&lt;a href=&#34;#2-创建-Makefile-am-文件&#34; class=&#34;headerlink&#34; title=&#34;2. 创建 Makefile.am 文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 创建 &lt;code&gt;Makefile.am&lt;/code&gt; 文件&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;顶层目录的-Makefile-am&#34;&gt;&lt;a href=&#34;#顶层目录的-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;顶层目录的 Makefile.am&#34;&gt;&lt;/a&gt;顶层目录的 &lt;code&gt;Makefile.am&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;SUBDIRS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; src&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;src-Makefile-am&#34;&gt;&lt;a href=&#34;#src-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;src/Makefile.am&#34;&gt;&lt;/a&gt;&lt;code&gt;src/Makefile.am&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;bin_PROGRAMS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; myapp
myapp_SOURCES &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; main.c utils.c utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;3-生成构建脚本和文件&#34;&gt;&lt;a href=&#34;#3-生成构建脚本和文件&#34; class=&#34;headerlink&#34; title=&#34;3. 生成构建脚本和文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 生成构建脚本和文件&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;aclocal.m4&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;configure&lt;/code&gt; 脚本&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;Makefile.in&lt;/code&gt; 文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;automake --add-missing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;Makefile&lt;/code&gt; 文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-编译和安装&#34;&gt;&lt;a href=&#34;#4-编译和安装&#34; class=&#34;headerlink&#34; title=&#34;4. 编译和安装&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 编译和安装&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行程序&lt;/strong&gt;&lt;br&gt;如果你的程序是一个可执行文件，例如 &lt;code&gt;myapp&lt;/code&gt;，可以直接运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./src/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五、完整示例&#34;&gt;&lt;a href=&#34;#五、完整示例&#34; class=&#34;headerlink&#34; title=&#34;五、完整示例&#34;&gt;&lt;/a&gt;五、完整示例&lt;/h2&gt;&lt;p&gt;假设你有以下项目结构：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;myproject/
├── configure.ac
├── Makefile.am
├── src/
│   ├── Makefile.am
│   ├── main.c
│   ├── utils.c
│   └── utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下是各个文件的内容：&lt;/p&gt;
&lt;h3 id=&#34;1-configure-ac&#34;&gt;&lt;a href=&#34;#1-configure-ac&#34; class=&#34;headerlink&#34; title=&#34;1. configure.ac&#34;&gt;&lt;/a&gt;1. &lt;code&gt;configure.ac&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [user@example.com])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-顶层-Makefile-am&#34;&gt;&lt;a href=&#34;#2-顶层-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;2. 顶层 Makefile.am&#34;&gt;&lt;/a&gt;2. 顶层 &lt;code&gt;Makefile.am&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;SUBDIRS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; src&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-src-Makefile-am&#34;&gt;&lt;a href=&#34;#3-src-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;3. src/Makefile.am&#34;&gt;&lt;/a&gt;3. &lt;code&gt;src/Makefile.am&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;bin_PROGRAMS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; myapp
myapp_SOURCES &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; main.c utils.c utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-src-main-c&#34;&gt;&lt;a href=&#34;#4-src-main-c&#34; class=&#34;headerlink&#34; title=&#34;4. src/main.c&#34;&gt;&lt;/a&gt;4. &lt;code&gt;src/main.c&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;utils.h&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sum: %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-src-utils-c&#34;&gt;&lt;a href=&#34;#5-src-utils-c&#34; class=&#34;headerlink&#34; title=&#34;5. src/utils.c&#34;&gt;&lt;/a&gt;5. &lt;code&gt;src/utils.c&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;utils.h&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-src-utils-h&#34;&gt;&lt;a href=&#34;#6-src-utils-h&#34; class=&#34;headerlink&#34; title=&#34;6. src/utils.h&#34;&gt;&lt;/a&gt;6. &lt;code&gt;src/utils.h&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;ifndef&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;UTILS_H&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;UTILS_H&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;构建和运行&#34;&gt;&lt;a href=&#34;#构建和运行&#34; class=&#34;headerlink&#34; title=&#34;构建和运行&#34;&gt;&lt;/a&gt;构建和运行&lt;/h3&gt;&lt;h4 id=&#34;1-生成文件&#34;&gt;&lt;a href=&#34;#1-生成文件&#34; class=&#34;headerlink&#34; title=&#34;1. 生成文件&#34;&gt;&lt;/a&gt;1. 生成文件&lt;/h4&gt;&lt;p&gt;运行以下命令生成必要的构建文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal
autoconf
automake --add-missing
./configure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-编译&#34;&gt;&lt;a href=&#34;#2-编译&#34; class=&#34;headerlink&#34; title=&#34;2. 编译&#34;&gt;&lt;/a&gt;2. 编译&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-安装&#34;&gt;&lt;a href=&#34;#3-安装&#34; class=&#34;headerlink&#34; title=&#34;3. 安装&#34;&gt;&lt;/a&gt;3. 安装&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-运行程序&#34;&gt;&lt;a href=&#34;#4-运行程序&#34; class=&#34;headerlink&#34; title=&#34;4. 运行程序&#34;&gt;&lt;/a&gt;4. 运行程序&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./src/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;六、常见问题及解决方法&#34;&gt;&lt;a href=&#34;#六、常见问题及解决方法&#34; class=&#34;headerlink&#34; title=&#34;六、常见问题及解决方法&#34;&gt;&lt;/a&gt;六、常见问题及解决方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;aclocal: command not found&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;: 未安装 &lt;code&gt;automake&lt;/code&gt;。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;: 安装 &lt;code&gt;automake&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;configure.ac: no proper invocation of AM_INIT_AUTOMAKE&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;: &lt;code&gt;configure.ac&lt;/code&gt; 中缺少 &lt;code&gt;AM_INIT_AUTOMAKE&lt;/code&gt;。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;: 添加 &lt;code&gt;AM_INIT_AUTOMAKE&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Makefile.am: required file &#39;INSTALL&#39; not found&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;: 缺少默认的 &lt;code&gt;INSTALL&lt;/code&gt; 文件。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;: 使用 &lt;code&gt;automake --add-missing&lt;/code&gt; 自动生成。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、autoscan&#34;&gt;&lt;a href=&#34;#一、autoscan&#34; class=&#34;headerlink&#34; title=&#34;一、autoscan&#34;&gt;&lt;/a&gt;一、&lt;code&gt;autoscan&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-什么是-autoscan&#34;&gt;&lt;a href=&#34;#1-什么是-autoscan&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是 autoscan&#34;&gt;&lt;/a&gt;1. 什么是 &lt;code&gt;autoscan&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;autoscan&lt;/code&gt; 是 &lt;code&gt;autoconf&lt;/code&gt; 的一个辅助工具，用于自动生成初始的 &lt;code&gt;configure.ac&lt;/code&gt; 文件（或者早期的 &lt;code&gt;configure.in&lt;/code&gt; 文件）。它会扫描项目目录中的文件，推测需要哪些检查，并生成一个名为 &lt;code&gt;configure.scan&lt;/code&gt; 的模板文件供开发者参考。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-autoscan-的功能&#34;&gt;&lt;a href=&#34;#2-autoscan-的功能&#34; class=&#34;headerlink&#34; title=&#34;2. autoscan 的功能&#34;&gt;&lt;/a&gt;2. &lt;code&gt;autoscan&lt;/code&gt; 的功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;自动检测源码中的依赖，例如头文件、库文件。&lt;/li&gt;
&lt;li&gt;提供一个初步的 &lt;code&gt;configure.ac&lt;/code&gt; 文件模板。&lt;/li&gt;
&lt;li&gt;简化了手动编写配置文件的过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-使用方法&#34;&gt;&lt;a href=&#34;#3-使用方法&#34; class=&#34;headerlink&#34; title=&#34;3. 使用方法&#34;&gt;&lt;/a&gt;3. 使用方法&lt;/h3&gt;&lt;h4 id=&#34;1-初始化项目&#34;&gt;&lt;a href=&#34;#1-初始化项目&#34; class=&#34;headerlink&#34; title=&#34;(1) 初始化项目&#34;&gt;&lt;/a&gt;(1) 初始化项目&lt;/h4&gt;&lt;p&gt;确保项目目录结构已经创建，并包含至少一个源文件（如 &lt;code&gt;main.c&lt;/code&gt;）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; myproject
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; myproject
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#include &amp;lt;stdio.h&amp;gt;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; main.c
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;int main() { return 0; }&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; main.c&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-运行-autoscan&#34;&gt;&lt;a href=&#34;#2-运行-autoscan&#34; class=&#34;headerlink&#34; title=&#34;(2) 运行 autoscan&#34;&gt;&lt;/a&gt;(2) 运行 &lt;code&gt;autoscan&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在项目目录中运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoscan&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行完成后，生成一个 &lt;code&gt;configure.scan&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h4 id=&#34;3-修改-configure-scan&#34;&gt;&lt;a href=&#34;#3-修改-configure-scan&#34; class=&#34;headerlink&#34; title=&#34;(3) 修改 configure.scan&#34;&gt;&lt;/a&gt;(3) 修改 &lt;code&gt;configure.scan&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;将 &lt;code&gt;configure.scan&lt;/code&gt; 重命名为 &lt;code&gt;configure.ac&lt;/code&gt;，并根据实际需求修改内容。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; configure.scan configure.ac&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例生成的 &lt;code&gt;configure.scan&lt;/code&gt; 文件可能包含以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([UNKNOWN], [1.0], [bug-report@example.com])
AC_CONFIG_SRCDIR([main.c])
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改后，可添加更多具体的检查内容，例如库依赖、路径配置等。&lt;/p&gt;
&lt;h4 id=&#34;4-继续构建&#34;&gt;&lt;a href=&#34;#4-继续构建&#34; class=&#34;headerlink&#34; title=&#34;(4) 继续构建&#34;&gt;&lt;/a&gt;(4) 继续构建&lt;/h4&gt;&lt;p&gt;生成 &lt;code&gt;configure&lt;/code&gt; 脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;4-autoscan-的注意事项&#34;&gt;&lt;a href=&#34;#4-autoscan-的注意事项&#34; class=&#34;headerlink&#34; title=&#34;4. autoscan 的注意事项&#34;&gt;&lt;/a&gt;4. &lt;code&gt;autoscan&lt;/code&gt; 的注意事项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;它只能作为生成初始配置的工具，输出的 &lt;code&gt;configure.scan&lt;/code&gt; 文件需要手动完善。&lt;/li&gt;
&lt;li&gt;如果项目目录中没有 &lt;code&gt;.c&lt;/code&gt; 文件或标准构建文件，&lt;code&gt;autoscan&lt;/code&gt; 可能无法推断正确的配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、aclocal&#34;&gt;&lt;a href=&#34;#二、aclocal&#34; class=&#34;headerlink&#34; title=&#34;二、aclocal&#34;&gt;&lt;/a&gt;二、&lt;code&gt;aclocal&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-什么是-aclocal&#34;&gt;&lt;a href=&#34;#1-什么是-aclocal&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是 aclocal&#34;&gt;&lt;/a&gt;1. 什么是 &lt;code&gt;aclocal&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;aclocal&lt;/code&gt; 是 &lt;code&gt;automake&lt;/code&gt; 的辅助工具，专门用于生成 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件。&lt;code&gt;aclocal.m4&lt;/code&gt; 是一个包含各种宏定义的文件，用于支持 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 的功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aclocal&lt;/code&gt; 会扫描项目目录中的 &lt;code&gt;configure.ac&lt;/code&gt; 文件，以及系统中可用的宏定义，生成一个与项目兼容的宏文件。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-aclocal-的功能&#34;&gt;&lt;a href=&#34;#2-aclocal-的功能&#34; class=&#34;headerlink&#34; title=&#34;2. aclocal 的功能&#34;&gt;&lt;/a&gt;2. &lt;code&gt;aclocal&lt;/code&gt; 的功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;根据 &lt;code&gt;configure.ac&lt;/code&gt; 的内容，生成或更新 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;提供对额外宏库的支持，例如 GNU 库的宏。&lt;/li&gt;
&lt;li&gt;管理自定义宏，以便 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 可以正确工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-使用方法-1&#34;&gt;&lt;a href=&#34;#3-使用方法-1&#34; class=&#34;headerlink&#34; title=&#34;3. 使用方法&#34;&gt;&lt;/a&gt;3. 使用方法&lt;/h3&gt;&lt;h4 id=&#34;1-编写-configure-ac&#34;&gt;&lt;a href=&#34;#1-编写-configure-ac&#34; class=&#34;headerlink&#34; title=&#34;(1) 编写 configure.ac&#34;&gt;&lt;/a&gt;(1) 编写 &lt;code&gt;configure.ac&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;假设我们有以下简单的 &lt;code&gt;configure.ac&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [bug-report@example.com])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-运行-aclocal&#34;&gt;&lt;a href=&#34;#2-运行-aclocal&#34; class=&#34;headerlink&#34; title=&#34;(2) 运行 aclocal&#34;&gt;&lt;/a&gt;(2) 运行 &lt;code&gt;aclocal&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;运行以下命令生成或更新 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成的 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件可能包含标准宏，例如对编译器检查、头文件检查等的支持。&lt;/p&gt;
&lt;h4 id=&#34;3-后续步骤&#34;&gt;&lt;a href=&#34;#3-后续步骤&#34; class=&#34;headerlink&#34; title=&#34;(3) 后续步骤&#34;&gt;&lt;/a&gt;(3) 后续步骤&lt;/h4&gt;&lt;p&gt;生成 &lt;code&gt;configure&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;4-自定义宏支持&#34;&gt;&lt;a href=&#34;#4-自定义宏支持&#34; class=&#34;headerlink&#34; title=&#34;4. 自定义宏支持&#34;&gt;&lt;/a&gt;4. 自定义宏支持&lt;/h3&gt;&lt;p&gt;如果你需要自定义宏，可以创建一个名为 &lt;code&gt;m4/&lt;/code&gt; 的目录，并将宏文件放入其中。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; m4
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;AC_DEFUN([MY_MACRO], [echo &#34;This is my custom macro&#34;])&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; m4/my_macro.m4&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在 &lt;code&gt;configure.ac&lt;/code&gt; 中引用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [bug-report@example.com])
AC_CONFIG_MACRO_DIR([m4])  # 指定宏目录
AM_INIT_AUTOMAKE
MY_MACRO
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行以下命令，&lt;code&gt;aclocal&lt;/code&gt; 会自动包含自定义宏：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;三、完整实践示例&#34;&gt;&lt;a href=&#34;#三、完整实践示例&#34; class=&#34;headerlink&#34; title=&#34;三、完整实践示例&#34;&gt;&lt;/a&gt;三、完整实践示例&lt;/h2&gt;&lt;p&gt;假设我们有一个简单的项目：&lt;br&gt;目录结构如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;myproject/
├── configure.ac
├── Makefile.am
├── src/
│   ├── main.c
│   ├── utils.c
│   └── utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下是构建流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成初始文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoscan
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; configure.scan configure.ac&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;完善 &lt;code&gt;configure.ac&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [bug-report@example.com])
AC_CONFIG_SRCDIR([src/main.c])
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成宏文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成 &lt;code&gt;configure&lt;/code&gt; 脚本&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf
automake --add-missing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;运行 &lt;code&gt;configure&lt;/code&gt; 和编译&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/20/linux-bian-yi-charm-ku/</guid>
            <title>linux编译charm库</title>
            <link>https://0xdadream.github.io/2024/11/20/linux-bian-yi-charm-ku/</link>
            <category>linux</category>
            <category>bug</category>
            <pubDate>Wed, 20 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux编译charm库&#34;&gt;&lt;a href=&#34;#linux编译charm库&#34; class=&#34;headerlink&#34; title=&#34;linux编译charm库&#34;&gt;&lt;/a&gt;linux编译charm库&lt;/h1&gt;&lt;p&gt;在 Windows 的 Linux 子系统 (WSL) 中使用 Ubuntu 编译安装 Charm 库的步骤如下：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;基于-WSL-的-Charm-库安装教程&#34;&gt;&lt;a href=&#34;#基于-WSL-的-Charm-库安装教程&#34; class=&#34;headerlink&#34; title=&#34;基于 WSL 的 Charm 库安装教程&#34;&gt;&lt;/a&gt;&lt;strong&gt;基于 WSL 的 Charm 库安装教程&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-更新系统并安装依赖&#34;&gt;&lt;a href=&#34;#1-更新系统并安装依赖&#34; class=&#34;headerlink&#34; title=&#34;1. 更新系统并安装依赖&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 更新系统并安装依赖&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;应用商店下载linux后执行&lt;code&gt;wsl --update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 WSL Ubuntu 中，运行以下命令安装必要的编译工具和库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; upgrade &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; build-essential python3 python3-dev python3-pip python3-setuptools &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
                     libgmp-dev libssl-dev swig libpbc-dev &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; gcc &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; m4 flex bison&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里的库可以一个一个单独安装，没有就去找源码安装，下面报安装错也能再安装，这里ubuntu版本最好不要太高，openssl我的是3.0.2没问题，gmp最高，openssl，python一般会自带，python我的是python3.10&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-安装-PBC-库&#34;&gt;&lt;a href=&#34;#2-安装-PBC-库&#34; class=&#34;headerlink&#34; title=&#34;2. 安装 PBC 库&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 安装 PBC 库&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;PBC 是 Charm 的核心依赖之一，需要手动编译安装。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载源码：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://crypto.stanford.edu/pbc/download.html&#34;&gt;PBC Library - Pairing-Based Cryptography - Downloads&lt;/a&gt;下载第一个&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-zxvf&lt;/span&gt; pbc-0.5.14.tar.gz&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译和安装：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入解压的目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/usr/local/lib&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; /etc/ld.so.conf.d/libpbc.conf
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;3-下载并安装-Charm-库&#34;&gt;&lt;a href=&#34;#3-下载并安装-Charm-库&#34; class=&#34;headerlink&#34; title=&#34;3. 下载并安装 Charm 库&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 下载并安装 Charm 库&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载源码：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/JHUISI/charm.git
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; charm&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;配置安装路径：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;configure.sh&lt;/code&gt; 脚本，指定 GMP 和 PBC 的安装路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译和安装：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;import charm&lt;/code&gt;判断安装是否成功&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;报错就看报错信息，可以参考官方&lt;a href=&#34;https://jhuisi.github.io/charm/install_source.html&#34;&gt;Platform Install Manual — Charm-Crypto 0.50 documentation&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/10/linux-fang-huo-qiang-gui-ze/</guid>
            <title>linux防火墙规则</title>
            <link>https://0xdadream.github.io/2024/11/10/linux-fang-huo-qiang-gui-ze/</link>
            <category>linux</category>
            <pubDate>Sun, 10 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux防火墙规则&#34;&gt;&lt;a href=&#34;#linux防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;linux防火墙规则&#34;&gt;&lt;/a&gt;linux防火墙规则&lt;/h1&gt;&lt;h2 id=&#34;iptables&#34;&gt;&lt;a href=&#34;#iptables&#34; class=&#34;headerlink&#34; title=&#34;iptables&#34;&gt;&lt;/a&gt;iptables&lt;/h2&gt;&lt;h4 id=&#34;1-查看当前防火墙规则&#34;&gt;&lt;a href=&#34;#1-查看当前防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;1. 查看当前防火墙规则&#34;&gt;&lt;/a&gt;1. 查看当前防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用 iptables 查看规则：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将列出所有的链和规则。&lt;code&gt;-L&lt;/code&gt; 参数代表列出（List）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看详细信息：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-v&lt;/code&gt; 参数代表详细（Verbose），&lt;code&gt;-n&lt;/code&gt; 参数代表不解析服务名称（Numeric）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看特定链的规则：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-配置防火墙规则&#34;&gt;&lt;a href=&#34;#2-配置防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;2. 配置防火墙规则&#34;&gt;&lt;/a&gt;2. 配置防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;添加规则允许 SSH：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; tcp &lt;span class=&#34;token parameter variable&#34;&gt;--dport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令将添加一条规则到 &lt;code&gt;INPUT&lt;/code&gt; 链，允许所有进入的 TCP 流量到达端口 22（SSH）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加规则拒绝特定 IP：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.100 &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; DROP&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令将拒绝来自 IP 地址 &lt;code&gt;192.168.1.100&lt;/code&gt; 的所有流量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加规则允许来自特定 IP 的 HTTP 访问：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; tcp &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.101 &lt;span class=&#34;token parameter variable&#34;&gt;--dport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;添加规则允许已建立的连接：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; state &lt;span class=&#34;token parameter variable&#34;&gt;--state&lt;/span&gt; ESTABLISHED,RELATED &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;添加规则允许出站流量：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; OUTPUT &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-删除防火墙规则&#34;&gt;&lt;a href=&#34;#3-删除防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;3. 删除防火墙规则&#34;&gt;&lt;/a&gt;3. 删除防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;删除特定规则：&lt;/strong&gt; 要删除规则，你需要知道规则的编号。使用 &lt;code&gt;-L --line-numbers&lt;/code&gt; 查看规则编号：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; --line-numbers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后删除规则，例如删除编号为 3 的规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-D&lt;/span&gt; INPUT &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-保存防火墙规则&#34;&gt;&lt;a href=&#34;#4-保存防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;4. 保存防火墙规则&#34;&gt;&lt;/a&gt;4. 保存防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;保存 iptables 规则：&lt;/strong&gt; 在 Debian/Ubuntu 上，你可以使用 &lt;code&gt;iptables-persistent&lt;/code&gt; 包来保存规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; iptables-persistent&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 CentOS/RHEL 上，你可以使用 &lt;code&gt;service&lt;/code&gt; 或 &lt;code&gt;systemctl&lt;/code&gt; 命令来保存规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt; iptables save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl save iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-恢复防火墙规则&#34;&gt;&lt;a href=&#34;#5-恢复防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;5. 恢复防火墙规则&#34;&gt;&lt;/a&gt;5. 恢复防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;在系统启动时恢复 iptables 规则：&lt;/strong&gt; 在 Debian/Ubuntu 上，安装 &lt;code&gt;iptables-persistent&lt;/code&gt; 后，规则会自动在启动时恢复。在 CentOS/RHEL 上，你需要手动保存规则，并在 &lt;code&gt;/etc/rc.d/rc.local&lt;/code&gt; 或使用 &lt;code&gt;systemctl&lt;/code&gt; 配置启动脚本中添加恢复规则的命令。&lt;/p&gt;
&lt;h4 id=&#34;6-重置防火墙规则&#34;&gt;&lt;a href=&#34;#6-重置防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;6. 重置防火墙规则&#34;&gt;&lt;/a&gt;6. 重置防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;重置 iptables 到默认设置：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-F&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; nat &lt;span class=&#34;token parameter variable&#34;&gt;-F&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; nat &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-F&lt;/code&gt; 代表清空规则，&lt;code&gt;-X&lt;/code&gt; 代表清空用户自定义链。&lt;/p&gt;
&lt;h4 id=&#34;7-防火墙规则的持久化&#34;&gt;&lt;a href=&#34;#7-防火墙规则的持久化&#34; class=&#34;headerlink&#34; title=&#34;7. 防火墙规则的持久化&#34;&gt;&lt;/a&gt;7. 防火墙规则的持久化&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Ubuntu/Debian：&lt;/strong&gt; 安装 &lt;code&gt;iptables-persistent&lt;/code&gt; 包后，它会在 &lt;code&gt;/etc/iptables/rules.v4&lt;/code&gt; 文件中保存规则。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CentOS/RHEL：&lt;/strong&gt; 你可以使用 &lt;code&gt;iptables-services&lt;/code&gt; 包来管理 iptables 的持久化：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; iptables-services
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; iptables
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt; iptables save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-查看和管理系统服务&#34;&gt;&lt;a href=&#34;#8-查看和管理系统服务&#34; class=&#34;headerlink&#34; title=&#34;8. 查看和管理系统服务&#34;&gt;&lt;/a&gt;8. 查看和管理系统服务&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;查看所有服务：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl list-units &lt;span class=&#34;token parameter variable&#34;&gt;--type&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;service&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;启动/停止服务：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl start iptables
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl stop iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;设置服务开机启动：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;禁用服务开机启动：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl disable iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上是 Linux 防火墙规则的完整指南，包括查看、配置、删除、保存、恢复和重置防火墙规则等操作。请根据你的具体需求和 Linux 发行版进行相应的操作。&lt;/p&gt;
&lt;h4 id=&#34;9-关闭或强制删除防火墙&#34;&gt;&lt;a href=&#34;#9-关闭或强制删除防火墙&#34; class=&#34;headerlink&#34; title=&#34;9. 关闭或强制删除防火墙&#34;&gt;&lt;/a&gt;9. 关闭或强制删除防火墙&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; purge netfilter-persistent &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reboot&lt;/span&gt;
或 &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /etc/iptables &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reboot&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;firewalld&#34;&gt;&lt;a href=&#34;#firewalld&#34; class=&#34;headerlink&#34; title=&#34;firewalld&#34;&gt;&lt;/a&gt;firewalld&lt;/h2&gt;&lt;h4 id=&#34;1-Firewalld-简介&#34;&gt;&lt;a href=&#34;#1-Firewalld-简介&#34; class=&#34;headerlink&#34; title=&#34;1. Firewalld 简介&#34;&gt;&lt;/a&gt;1. Firewalld 简介&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Firewalld&lt;/code&gt; 是一个动态防火墙管理工具，它提供了基于区域（zone）和服务（service）的简化配置界面，使得管理防火墙规则更加容易。它支持动态更新防火墙规则，可以在运行时添加、删除、修改规则，而不需要重新加载整个防火墙配置。&lt;/p&gt;
&lt;h4 id=&#34;2-服务的启动、停止和状态查看&#34;&gt;&lt;a href=&#34;#2-服务的启动、停止和状态查看&#34; class=&#34;headerlink&#34; title=&#34;2. 服务的启动、停止和状态查看&#34;&gt;&lt;/a&gt;2. 服务的启动、停止和状态查看&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动防火墙：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl start firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;停止防火墙：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl stop firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置防火墙开机启动：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用防火墙开机启动：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl disable firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看防火墙状态：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl status firewalld
&lt;span class=&#34;token comment&#34;&gt;# 或者&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--state&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-查看和设置默认区域&#34;&gt;&lt;a href=&#34;#3-查看和设置默认区域&#34; class=&#34;headerlink&#34; title=&#34;3. 查看和设置默认区域&#34;&gt;&lt;/a&gt;3. 查看和设置默认区域&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看默认区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-default-zone&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看所有可用的区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-zones&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看当前活动区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-active-zones&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置默认区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --set-default-zone&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;your_zone&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中your_zone是你想要设置的默认区域的名称，比如public、internal、dmz等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-使用-firewall-cmd-命令行工具进行规则配置&#34;&gt;&lt;a href=&#34;#4-使用-firewall-cmd-命令行工具进行规则配置&#34; class=&#34;headerlink&#34; title=&#34;4. 使用 firewall-cmd 命令行工具进行规则配置&#34;&gt;&lt;/a&gt;4. 使用 firewall-cmd 命令行工具进行规则配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加规则开放端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;public --add-port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;/tcp &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加规则允许服务：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;public --add-service&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;http &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;public --remove-service&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;http &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-重新加载防火墙配置&#34;&gt;&lt;a href=&#34;#5-重新加载防火墙配置&#34; class=&#34;headerlink&#34; title=&#34;5. 重新加载防火墙配置&#34;&gt;&lt;/a&gt;5. 重新加载防火墙配置&lt;/h4&gt;&lt;p&gt;为了使永久配置生效，需要重新加载 &lt;code&gt;firewalld&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--reload&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-查询已开放的端口、已允许的服务&#34;&gt;&lt;a href=&#34;#6-查询已开放的端口、已允许的服务&#34; class=&#34;headerlink&#34; title=&#34;6. 查询已开放的端口、已允许的服务&#34;&gt;&lt;/a&gt;6. 查询已开放的端口、已允许的服务&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查询特定区域支持的所有特性：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zone_name --list-all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中，zone_name是你要查询的区域的名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询特定区域支持的所有服务：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zone_name --list-services&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询特定区域开放的端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zone_name --list-ports&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-绑定接口到特定区域&#34;&gt;&lt;a href=&#34;#7-绑定接口到特定区域&#34; class=&#34;headerlink&#34; title=&#34;7. 绑定接口到特定区域&#34;&gt;&lt;/a&gt;7. 绑定接口到特定区域&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;永久更改接口的区域绑定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;home --add-interface&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;eth0 &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了使永久更改生效，需要重新加载firewalld&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--reload&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次验证更改：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-active-zones&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/</guid>
            <title>flask教程</title>
            <link>https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/</link>
            <category>教程</category>
            <category>python</category>
            <pubDate>Wed, 06 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;flask教程&#34;&gt;&lt;a href=&#34;#flask教程&#34; class=&#34;headerlink&#34; title=&#34;flask教程&#34;&gt;&lt;/a&gt;flask教程&lt;/h1&gt;&lt;h2 id=&#34;项目结构&#34;&gt;&lt;a href=&#34;#项目结构&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h2&gt;&lt;h3 id=&#34;中型&#34;&gt;&lt;a href=&#34;#中型&#34; class=&#34;headerlink&#34; title=&#34;中型&#34;&gt;&lt;/a&gt;中型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-dtd&#34; data-language=&#34;dtd&#34;&gt;&lt;code class=&#34;language-dtd&#34;&gt;my_flask_project/
├── app/                     # 核心应用文件夹
│   ├── __init__.py          # 应用初始化
│   ├── routes.py            # 路由定义
│   ├── models.py            # 数据模型（如需要）
│   ├── templates/           # HTML 模板
│   │   └── index.html
│   └── static/              # 静态文件
│       ├── css/
│       │   └── style.css
│       └── js/
│           └── script.js
├── config.py                # 配置文件
├── run.py                   # 启动文件
└── requirements.txt         # 依赖文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-init-py&#34;&gt;&lt;a href=&#34;#app-init-py&#34; class=&#34;headerlink&#34; title=&#34;app/__init__.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app/__init__.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在 &lt;code&gt;__init__.py&lt;/code&gt; 中创建并初始化 Flask 应用，加载配置，并从 &lt;code&gt;routes.py&lt;/code&gt; 注册路由。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_app&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;from_object&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;config.Config&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 加载配置&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;app_context&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# 导入并注册路由&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; routes
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; app&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;create_app&lt;/code&gt; 函数用于创建和配置应用实例。&lt;code&gt;app.app_context()&lt;/code&gt; 确保在应用上下文中导入路由。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;app-routes-py&#34;&gt;&lt;a href=&#34;#app-routes-py&#34; class=&#34;headerlink&#34; title=&#34;app/routes.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app/routes.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;定义项目的路由，所有路由相关的逻辑放在这个文件中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; current_app &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; app

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;app.route(&#39;/&#39;)&lt;/code&gt; 是根路径的路由，返回 &lt;code&gt;index.html&lt;/code&gt; 模板页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;app-models-py-（可选）&#34;&gt;&lt;a href=&#34;#app-models-py-（可选）&#34; class=&#34;headerlink&#34; title=&#34;app/models.py （可选）&#34;&gt;&lt;/a&gt;&lt;code&gt;app/models.py&lt;/code&gt; （可选）&lt;/h4&gt;&lt;p&gt;如果项目需要数据库模型，可以在此文件中定义。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_sqlalchemy &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; SQLAlchemy

db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SQLAlchemy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Model&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Column&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Integer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; primary_key&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Column&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nullable&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; unique&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;config-py&#34;&gt;&lt;a href=&#34;#config-py&#34; class=&#34;headerlink&#34; title=&#34;config.py&#34;&gt;&lt;/a&gt;&lt;code&gt;config.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;配置文件，用于管理全局配置（例如密钥、数据库 URI 等）。将敏感信息存储在环境变量中更安全。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    SECRET_KEY &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;environ&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;
    SQLALCHEMY_DATABASE_URI &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sqlite:///site.db&#39;&lt;/span&gt;
    SQLALCHEMY_TRACK_MODIFICATIONS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-templates-index-html&#34;&gt;&lt;a href=&#34;#app-templates-index-html&#34; class=&#34;headerlink&#34; title=&#34;app/templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;app/templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;HTML 模板文件示例。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Flask App&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;css/style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to My Flask App&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Hello, Flask with modular structure!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;js/script.js&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-static-css-style-css&#34;&gt;&lt;a href=&#34;#app-static-css-style-css&#34; class=&#34;headerlink&#34; title=&#34;app/static/css/style.css&#34;&gt;&lt;/a&gt;&lt;code&gt;app/static/css/style.css&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;简单的 CSS 文件，用于为页面增加样式。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* static/css/style.css */&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Arial&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sans-serif&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #f0f0f0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-static-js-script-js&#34;&gt;&lt;a href=&#34;#app-static-js-script-js&#34; class=&#34;headerlink&#34; title=&#34;app/static/js/script.js&#34;&gt;&lt;/a&gt;&lt;code&gt;app/static/js/script.js&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;简单的 JavaScript 文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// static/js/script.js&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome to My Flask App with modular structure!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-py&#34;&gt;&lt;a href=&#34;#run-py&#34; class=&#34;headerlink&#34; title=&#34;run.py&#34;&gt;&lt;/a&gt;&lt;code&gt;run.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;项目的启动文件，通过调用 &lt;code&gt;create_app&lt;/code&gt; 函数启动应用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; app &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; create_app

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; create_app&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;run.py&lt;/code&gt; 是整个项目的入口文件，使用 &lt;code&gt;app.run(debug=True)&lt;/code&gt; 启动应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;requirements-txt&#34;&gt;&lt;a href=&#34;#requirements-txt&#34; class=&#34;headerlink&#34; title=&#34;requirements.txt&#34;&gt;&lt;/a&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;包含项目依赖。&lt;/p&gt;
&lt;h3 id=&#34;大型&#34;&gt;&lt;a href=&#34;#大型&#34; class=&#34;headerlink&#34; title=&#34;大型&#34;&gt;&lt;/a&gt;大型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-dtd&#34; data-language=&#34;dtd&#34;&gt;&lt;code class=&#34;language-dtd&#34;&gt;my_flask_project/
├── app/
│   ├── __init__.py           # 初始化应用程序和配置
│   ├── routes.py             # 路由定义
│   ├── models.py             # 数据库模型定义
│   ├── templates/            # HTML 模板文件
│   │   └── base.html
│   ├── static/               # 静态文件（CSS、JS、图片等）
│   │   ├── css/
│   │   │   └── style.css
│   │   ├── js/
│   │   └── images/
│   └── blueprints/           # 各个功能模块的蓝图
│       ├── __init__.py
│       ├── user/             # 用户模块
│       │   ├── __init__.py
│       │   ├── routes.py
│       │   └── templates/
│       └── admin/            # 管理员模块
│           ├── __init__.py
│           ├── routes.py
│           └── templates/
├── migrations/               # 数据库迁移文件（使用 Flask-Migrate）
├── tests/                    # 测试代码
│   ├── __init__.py
│   └── test_app.py
├── config.py                 # 配置文件
├── manage.py                 # 启动、管理和迁移命令
└── requirements.txt          # 依赖包&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;**&lt;code&gt;app/&lt;/code&gt;**：主要应用程序文件夹，包含所有核心代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**&lt;code&gt;__init__.py&lt;/code&gt;**：初始化 Flask 应用、加载配置和注册蓝图。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;routes.py&lt;/code&gt;**：定义全局路由。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;models.py&lt;/code&gt;**：定义数据库模型。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;templates/&lt;/code&gt;**：存储 HTML 模板。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;static/&lt;/code&gt;**：存储静态文件，如 CSS、JavaScript 和图片。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;blueprints/&lt;/code&gt;**：存储不同功能模块的蓝图，每个模块可以有自己的 &lt;code&gt;routes.py&lt;/code&gt; 和 &lt;code&gt;templates/&lt;/code&gt; 文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&lt;code&gt;migrations/&lt;/code&gt;**：数据库迁移文件（如使用 Flask-Migrate 时生成）。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;tests/&lt;/code&gt;**：测试文件夹，用于单元测试或集成测试。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;config.py&lt;/code&gt;**：存储配置文件，如数据库连接和应用的全局设置。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;manage.py&lt;/code&gt;**：用于管理项目的文件，可添加自定义命令，如启动服务器、初始化数据库等。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;requirements.txt&lt;/code&gt;**：记录项目的所有依赖包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;路由&#34;&gt;&lt;a href=&#34;#路由&#34; class=&#34;headerlink&#34; title=&#34;路由&#34;&gt;&lt;/a&gt;路由&lt;/h2&gt;&lt;h3 id=&#34;1-基本路由&#34;&gt;&lt;a href=&#34;#1-基本路由&#34; class=&#34;headerlink&#34; title=&#34;1. 基本路由&#34;&gt;&lt;/a&gt;1. 基本路由&lt;/h3&gt;&lt;p&gt;最简单的路由是将一个 URL 映射到一个视图函数。可以使用 &lt;code&gt;@app.route()&lt;/code&gt; 装饰器来定义路由。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome to the homepage!&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/about&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;about&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is the about page.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@app.route(&#39;/&#39;)&lt;/code&gt;：当用户访问根路径（如 &lt;code&gt;http://localhost:5000/&lt;/code&gt;）时，执行 &lt;code&gt;home&lt;/code&gt; 函数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@app.route(&#39;/about&#39;)&lt;/code&gt;：访问 &lt;code&gt;/about&lt;/code&gt; 时，执行 &lt;code&gt;about&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-动态路由&#34;&gt;&lt;a href=&#34;#2-动态路由&#34; class=&#34;headerlink&#34; title=&#34;2. 动态路由&#34;&gt;&lt;/a&gt;2. 动态路由&lt;/h3&gt;&lt;p&gt;可以在路由中添加动态部分，用来接收 URL 中的参数。动态部分用尖括号 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 表示，Flask 会自动将 URL 中的值传递给视图函数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;/user/john&lt;/code&gt; 时，会输出 &lt;code&gt;Hello, john!&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; 是一个动态参数，视图函数 &lt;code&gt;show_user&lt;/code&gt; 将接收 &lt;code&gt;username&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;指定数据类型&#34;&gt;&lt;a href=&#34;#指定数据类型&#34; class=&#34;headerlink&#34; title=&#34;指定数据类型&#34;&gt;&lt;/a&gt;指定数据类型&lt;/h4&gt;&lt;p&gt;默认情况下，Flask 会将 URL 参数作为字符串处理。如果需要其他类型的数据，可以在尖括号内指定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/post/&amp;lt;int:post_id&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Post ID is &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;int:post_id&amp;gt;&lt;/code&gt; 指定了 &lt;code&gt;post_id&lt;/code&gt; 必须是整数，访问 &lt;code&gt;/post/5&lt;/code&gt; 会返回 &lt;code&gt;Post ID is 5&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;常用的数据类型有：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;int:variable&amp;gt;&lt;/code&gt;：整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;float:variable&amp;gt;&lt;/code&gt;：浮点数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;path:variable&amp;gt;&lt;/code&gt;：字符串（允许包含 &lt;code&gt;/&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-多种请求方法&#34;&gt;&lt;a href=&#34;#3-多种请求方法&#34; class=&#34;headerlink&#34; title=&#34;3. 多种请求方法&#34;&gt;&lt;/a&gt;3. 多种请求方法&lt;/h3&gt;&lt;p&gt;默认情况下，Flask 路由只响应 &lt;code&gt;GET&lt;/code&gt; 请求。如果需要处理其他 HTTP 方法（如 &lt;code&gt;POST&lt;/code&gt;、&lt;code&gt;PUT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt; 等），可以通过 &lt;code&gt;methods&lt;/code&gt; 参数指定。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Form submitted!&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please submit the form.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;methods=[&#39;GET&#39;, &#39;POST&#39;]&lt;/code&gt;：允许 &lt;code&gt;submit&lt;/code&gt; 路由响应 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;POST&lt;/code&gt; 请求。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;request.method&lt;/code&gt; 判断请求类型并做不同的处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-路由别名（URL-别名）&#34;&gt;&lt;a href=&#34;#4-路由别名（URL-别名）&#34; class=&#34;headerlink&#34; title=&#34;4. 路由别名（URL 别名）&#34;&gt;&lt;/a&gt;4. 路由别名（URL 别名）&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;url_for&lt;/code&gt; 函数生成路由的 URL，避免硬编码 URL。在视图函数上使用 &lt;code&gt;endpoint&lt;/code&gt; 参数，可以给路由一个别名，用于简化 &lt;code&gt;url_for&lt;/code&gt; 函数调用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; url_for

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/profile/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; endpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;User: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用 url_for 动态生成 URL&lt;/span&gt;
&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/redirect_to_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;redirect_to_profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;/redirect_to_profile&lt;/code&gt; 会重定向到 &lt;code&gt;/profile/john&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-重定向与错误处理&#34;&gt;&lt;a href=&#34;#5-重定向与错误处理&#34; class=&#34;headerlink&#34; title=&#34;5. 重定向与错误处理&#34;&gt;&lt;/a&gt;5. 重定向与错误处理&lt;/h3&gt;&lt;p&gt;可以通过 &lt;code&gt;redirect&lt;/code&gt; 实现重定向，或用 &lt;code&gt;abort&lt;/code&gt; 函数处理错误。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; abort

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/old-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;old_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 重定向到新的 URL&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;new_url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/new-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;new_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is the new URL.&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/secret&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    abort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;403&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回 403 错误&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;redirect(url_for(&#39;new_url&#39;))&lt;/code&gt;：将用户重定向到 &lt;code&gt;new_url&lt;/code&gt; 视图。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abort(403)&lt;/code&gt;：返回 403 错误页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-带查询参数的路由&#34;&gt;&lt;a href=&#34;#6-带查询参数的路由&#34; class=&#34;headerlink&#34; title=&#34;6. 带查询参数的路由&#34;&gt;&lt;/a&gt;6. 带查询参数的路由&lt;/h3&gt;&lt;p&gt;查询参数一般附加在 URL 的末尾，例如 &lt;code&gt;http://localhost:5000/search?query=flask&lt;/code&gt;。可以通过 &lt;code&gt;request.args&lt;/code&gt; 获取这些参数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; request

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/search&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;query&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Search results for: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;request.args.get(&#39;query&#39;)&lt;/code&gt;：获取查询参数 &lt;code&gt;query&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-路由分组（蓝图）&#34;&gt;&lt;a href=&#34;#7-路由分组（蓝图）&#34; class=&#34;headerlink&#34; title=&#34;7. 路由分组（蓝图）&#34;&gt;&lt;/a&gt;7. 路由分组（蓝图）&lt;/h3&gt;&lt;p&gt;如果应用较大，可以将路由划分为不同的模块（称为“蓝图”），以提高代码组织性。以下是一个简单的蓝图示例。&lt;/p&gt;
&lt;h4 id=&#34;创建蓝图文件-app-user-py：&#34;&gt;&lt;a href=&#34;#创建蓝图文件-app-user-py：&#34; class=&#34;headerlink&#34; title=&#34;创建蓝图文件 app/user.py：&#34;&gt;&lt;/a&gt;创建蓝图文件 &lt;code&gt;app/user.py&lt;/code&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Blueprint

user_bp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Blueprint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; __name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@user_bp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;User Profile for &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注册蓝图到应用中-app-init-py：&#34;&gt;&lt;a href=&#34;#注册蓝图到应用中-app-init-py：&#34; class=&#34;headerlink&#34; title=&#34;注册蓝图到应用中 app/__init__.py：&#34;&gt;&lt;/a&gt;注册蓝图到应用中 &lt;code&gt;app/__init__.py&lt;/code&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; user_bp

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_app&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;register_blueprint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user_bp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url_prefix&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 注册蓝图&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; app&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;url_prefix=&#39;/user&#39;&lt;/code&gt;：访问 &lt;code&gt;/user/&amp;lt;username&amp;gt;&lt;/code&gt; 时，会调用 &lt;code&gt;user_bp&lt;/code&gt; 蓝图中的 &lt;code&gt;profile&lt;/code&gt; 路由。&lt;/li&gt;
&lt;li&gt;蓝图让大型应用代码更清晰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-格式化&#34;&gt;&lt;a href=&#34;#8-格式化&#34; class=&#34;headerlink&#34; title=&#34;8. 格式化&#34;&gt;&lt;/a&gt;8. 格式化&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; jsonify

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Flask&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jsonify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-视图函数的装饰器&#34;&gt;&lt;a href=&#34;#9-视图函数的装饰器&#34; class=&#34;headerlink&#34; title=&#34;9.视图函数的装饰器&#34;&gt;&lt;/a&gt;9.视图函数的装饰器&lt;/h3&gt;&lt;p&gt;除了 @app.route，Flask 还支持其他装饰器，用于实现更复杂的功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**&lt;code&gt;@app.before_request&lt;/code&gt;**：在每个请求处理之前运行的函数。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;@app.after_request&lt;/code&gt;**：在每个请求处理之后运行的函数。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;@app.teardown_request&lt;/code&gt;**：在请求结束后运行的函数，用于清理工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例装饰器使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;before_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;before_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Before request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;after_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;after_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;After request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; response

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;teardown_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;teardown_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Teardown request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;完整示例&#34;&gt;&lt;a href=&#34;#完整示例&#34; class=&#34;headerlink&#34; title=&#34;完整示例&#34;&gt;&lt;/a&gt;完整示例&lt;/h3&gt;&lt;p&gt;以下是一个包含多种路由定义方式的完整示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url_for&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; abort&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; jsonify

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome to the homepage!&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/post/&amp;lt;int:post_id&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Post ID is &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Form submitted!&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please submit the form.&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/search&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;query&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Search results for: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Flask&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jsonify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/old-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;old_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;home&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/secret&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    abort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;403&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;Flask-模板渲染&#34;&gt;&lt;a href=&#34;#Flask-模板渲染&#34; class=&#34;headerlink&#34; title=&#34;Flask 模板渲染&#34;&gt;&lt;/a&gt;Flask 模板渲染&lt;/h2&gt;&lt;p&gt;在 Flask 中，模板渲染是生成动态 HTML 页面的一种方法。Flask 使用 Jinja2 模板引擎来帮助你在 HTML 中插入变量、控制结构（如条件判断、循环）等内容，以便动态生成页面。&lt;/p&gt;
&lt;h3 id=&#34;1-设置模板文件夹&#34;&gt;&lt;a href=&#34;#1-设置模板文件夹&#34; class=&#34;headerlink&#34; title=&#34;1. 设置模板文件夹&#34;&gt;&lt;/a&gt;1. 设置模板文件夹&lt;/h3&gt;&lt;p&gt;在 Flask 项目中，默认的模板文件夹是 &lt;code&gt;templates&lt;/code&gt;，建议将所有 HTML 模板文件放在这个文件夹中。Flask 会自动寻找并渲染该目录中的模板文件。&lt;/p&gt;
&lt;h3 id=&#34;2-创建基本-HTML-模板&#34;&gt;&lt;a href=&#34;#2-创建基本-HTML-模板&#34; class=&#34;headerlink&#34; title=&#34;2. 创建基本 HTML 模板&#34;&gt;&lt;/a&gt;2. 创建基本 HTML 模板&lt;/h3&gt;&lt;p&gt;假设我们在 &lt;code&gt;templates/index.html&lt;/code&gt; 中创建了一个基本的 HTML 模板文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- templates/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ title }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ heading }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ content }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在这个模板中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ title }}&lt;/code&gt;、&lt;code&gt;{{ heading }}&lt;/code&gt; 和 &lt;code&gt;{{ content }}&lt;/code&gt; 是变量占位符，在渲染模板时会被 Flask 替换成实际的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-渲染模板&#34;&gt;&lt;a href=&#34;#3-渲染模板&#34; class=&#34;headerlink&#34; title=&#34;3. 渲染模板&#34;&gt;&lt;/a&gt;3. 渲染模板&lt;/h3&gt;&lt;p&gt;在 Flask 中，可以使用 &lt;code&gt;render_template&lt;/code&gt; 函数来渲染 HTML 模板，并将变量传递给模板。下面是一个简单的视图函数，渲染上面的 &lt;code&gt;index.html&lt;/code&gt; 模板。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Home Page&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; heading&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome to My Website&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;This is the home page content.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;render_template(&#39;index.html&#39;, ...)&lt;/code&gt;：&lt;code&gt;render_template&lt;/code&gt; 函数会在 &lt;code&gt;templates&lt;/code&gt; 文件夹中找到 &lt;code&gt;index.html&lt;/code&gt; 文件，并将指定变量传入模板。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title=&#34;Home Page&#34;&lt;/code&gt;：将 &lt;code&gt;title&lt;/code&gt; 变量的值传入模板，模板中的 &lt;code&gt;{{ title }}&lt;/code&gt; 将被替换为 &lt;code&gt;Home Page&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-模板变量和控制结构&#34;&gt;&lt;a href=&#34;#4-模板变量和控制结构&#34; class=&#34;headerlink&#34; title=&#34;4. 模板变量和控制结构&#34;&gt;&lt;/a&gt;4. 模板变量和控制结构&lt;/h3&gt;&lt;p&gt;Jinja2 模板支持在 HTML 中使用变量、控制结构（条件、循环）等操作。&lt;/p&gt;
&lt;h4 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h4&gt;&lt;p&gt;使用双大括号 &lt;code&gt;{{ ... }}&lt;/code&gt; 在模板中插入变量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Hello, {{ name }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;条件语句&#34;&gt;&lt;a href=&#34;#条件语句&#34; class=&#34;headerlink&#34; title=&#34;条件语句&#34;&gt;&lt;/a&gt;条件语句&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;{% if ... %}` 和 `{% endif %}&lt;/code&gt; 添加条件逻辑：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% if user_is_logged_in %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome back, {{ username }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% else %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Please log in to access your account.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endif %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;循环&#34;&gt;&lt;a href=&#34;#循环&#34; class=&#34;headerlink&#34; title=&#34;循环&#34;&gt;&lt;/a&gt;循环&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;{% for ... in ... %}` 和 `{% endfor %}&lt;/code&gt; 添加循环：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% for item in items %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ item }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% endfor %}
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-继承与块&#34;&gt;&lt;a href=&#34;#5-继承与块&#34; class=&#34;headerlink&#34; title=&#34;5. 继承与块&#34;&gt;&lt;/a&gt;5. 继承与块&lt;/h3&gt;&lt;p&gt;Jinja2 支持模板继承，可以创建一个基础模板供其他模板继承。可以将公共结构（如导航栏、页脚等）放在基础模板中，然后在子模板中覆盖特定部分。&lt;/p&gt;
&lt;h4 id=&#34;基础模板-templates-base-html&#34;&gt;&lt;a href=&#34;#基础模板-templates-base-html&#34; class=&#34;headerlink&#34; title=&#34;基础模板 templates/base.html&#34;&gt;&lt;/a&gt;基础模板 &lt;code&gt;templates/base.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{% block title %}My Website{% endblock %}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;© 2024 My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{% block title %}` 和 `{% block content %}` 是块占位符，子模板可以覆盖这些内容。

#### 子模板 `templates/index.html`

&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% extends &#34;base.html&#34; %}

{% block title %}Home Page{% endblock %}

{% block content %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to the Home Page&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;This is some content specific to the home page.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endblock %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

- `{% extends &#34;base.html&#34; %}` 表示继承 `base.html` 模板。
- `{% block title %}Home Page{% endblock %}&lt;/code&gt;：覆盖了基础模板中的 &lt;code&gt;title&lt;/code&gt; 块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{% block content %}...{% endblock %}&lt;/code&gt;：覆盖了基础模板中的 &lt;code&gt;content&lt;/code&gt; 块。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-使用静态文件&#34;&gt;&lt;a href=&#34;#6-使用静态文件&#34; class=&#34;headerlink&#34; title=&#34;6. 使用静态文件&#34;&gt;&lt;/a&gt;6. 使用静态文件&lt;/h3&gt;&lt;p&gt;Flask 默认将静态文件放在 &lt;code&gt;static&lt;/code&gt; 文件夹中，例如 CSS、JavaScript 文件等。在模板中，可以通过 &lt;code&gt;url_for(&#39;static&#39;, filename=&#39;...&#39;)&lt;/code&gt; 生成静态文件的 URL。&lt;/p&gt;
&lt;p&gt;假设有一个 CSS 文件 &lt;code&gt;static/style.css&lt;/code&gt;，可以在模板中引入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 在 base.html 中引入 CSS 文件 --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-完整示例&#34;&gt;&lt;a href=&#34;#7-完整示例&#34; class=&#34;headerlink&#34; title=&#34;7. 完整示例&#34;&gt;&lt;/a&gt;7. 完整示例&lt;/h3&gt;&lt;p&gt;以下是包含基础模板、变量、循环、条件的完整 Flask 应用示例。&lt;/p&gt;
&lt;h4 id=&#34;项目结构-1&#34;&gt;&lt;a href=&#34;#项目结构-1&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-csharp&#34; data-language=&#34;csharp&#34;&gt;&lt;code class=&#34;language-csharp&#34;&gt;my_flask_app&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
├── app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py
├── templates&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
│   ├── &lt;span class=&#34;token keyword&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;html
│   ├── index&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;html
└── &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
    └── style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;css&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-py&#34;&gt;&lt;a href=&#34;#app-py&#34; class=&#34;headerlink&#34; title=&#34;app.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    items &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Item 1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Item 2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Item 3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    user_is_logged_in &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Home Page&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; items&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; user_is_logged_in&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_is_logged_in&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;John Doe&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-base-html&#34;&gt;&lt;a href=&#34;#templates-base-html&#34; class=&#34;headerlink&#34; title=&#34;templates/base.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/base.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{% block title %}My Website{% endblock %}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;© 2024 My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-index-html&#34;&gt;&lt;a href=&#34;#templates-index-html&#34; class=&#34;headerlink&#34; title=&#34;templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% extends &#34;base.html&#34; %}

{% block title %}Home Page{% endblock %}

{% block content %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to the Home Page&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% if user_is_logged_in %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome back, {{ username }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% else %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Please log in to access your account.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% endif %}

    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for item in items %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ item }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endblock %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;static-style-css&#34;&gt;&lt;a href=&#34;#static-style-css&#34; class=&#34;headerlink&#34; title=&#34;static/style.css&#34;&gt;&lt;/a&gt;&lt;code&gt;static/style.css&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* 示例样式 */&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Arial&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sans-serif&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #333&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #fff&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;footer&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #333&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #fff&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0.5em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;Flask-表单处理&#34;&gt;&lt;a href=&#34;#Flask-表单处理&#34; class=&#34;headerlink&#34; title=&#34;Flask 表单处理&#34;&gt;&lt;/a&gt;Flask 表单处理&lt;/h2&gt;&lt;p&gt;在 Flask 中，表单处理是一个常见的功能，它涉及接收用户输入、验证数据以及相应地进行处理。Flask 提供了 &lt;code&gt;Flask-WTF&lt;/code&gt; 扩展，使得表单的创建、验证和处理变得更加简单和强大。下面将详细介绍如何在 Flask 中处理表单，包括安装 Flask-WTF、创建表单、验证表单、显示表单错误和处理表单数据。&lt;/p&gt;
&lt;h3 id=&#34;1-安装-Flask-WTF&#34;&gt;&lt;a href=&#34;#1-安装-Flask-WTF&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Flask-WTF&#34;&gt;&lt;/a&gt;1. 安装 Flask-WTF&lt;/h3&gt;&lt;p&gt;在开始之前，你需要确保安装了 &lt;code&gt;Flask-WTF&lt;/code&gt;。可以通过 &lt;code&gt;pip&lt;/code&gt; 进行安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; Flask-WTF&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-创建-Flask-应用&#34;&gt;&lt;a href=&#34;#2-创建-Flask-应用&#34; class=&#34;headerlink&#34; title=&#34;2. 创建 Flask 应用&#34;&gt;&lt;/a&gt;2. 创建 Flask 应用&lt;/h3&gt;&lt;p&gt;创建一个简单的 Flask 应用并设置基本配置。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FlaskForm
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SubmitField
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validators &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DataRequired

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置安全密钥&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-创建表单类&#34;&gt;&lt;a href=&#34;#3-创建表单类&#34; class=&#34;headerlink&#34; title=&#34;3. 创建表单类&#34;&gt;&lt;/a&gt;3. 创建表单类&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Flask-WTF&lt;/code&gt; 创建表单类，定义所需的字段和验证规则。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StringField&lt;/code&gt;：表示一个文本输入字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DataRequired()&lt;/code&gt;：确保字段不为空。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-渲染表单&#34;&gt;&lt;a href=&#34;#4-渲染表单&#34; class=&#34;headerlink&#34; title=&#34;4. 渲染表单&#34;&gt;&lt;/a&gt;4. 渲染表单&lt;/h3&gt;&lt;p&gt;在视图函数中实例化表单并传递给模板。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 验证表单数据&lt;/span&gt;
        username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data  &lt;span class=&#34;token comment&#34;&gt;# 获取输入的用户名&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;validate_on_submit()&lt;/code&gt;：检查请求方法是否为 POST 并验证表单数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;form.username.data&lt;/code&gt;：访问用户输入的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-创建模板&#34;&gt;&lt;a href=&#34;#5-创建模板&#34; class=&#34;headerlink&#34; title=&#34;5. 创建模板&#34;&gt;&lt;/a&gt;5. 创建模板&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;templates&lt;/code&gt; 文件夹中创建一个模板 &lt;code&gt;index.html&lt;/code&gt;，用于显示表单。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- templates/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Flask Form Example&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Enter your username&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;POST&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {{ form.hidden_tag() }}  &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 防止 CSRF 攻击 --&amp;gt;&lt;/span&gt;
        {{ form.username.label }} {{ form.username(size=20) }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for error in form.username.errors %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[{{ error }}]&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
        {{ form.submit() }}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ form.hidden_tag() }}&lt;/code&gt;：生成隐藏的 CSRF 令牌，增强安全性。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;{% for error in form.username.errors %}&lt;/code&gt; 循环显示字段的验证错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-处理表单错误&#34;&gt;&lt;a href=&#34;#6-处理表单错误&#34; class=&#34;headerlink&#34; title=&#34;6. 处理表单错误&#34;&gt;&lt;/a&gt;6. 处理表单错误&lt;/h3&gt;&lt;p&gt;如果表单验证失败，Flask-WTF 会自动将错误信息存储在字段的 &lt;code&gt;errors&lt;/code&gt; 属性中。在模板中，可以通过条件判断显示相应的错误消息。&lt;/p&gt;
&lt;h3 id=&#34;7-完整示例-1&#34;&gt;&lt;a href=&#34;#7-完整示例-1&#34; class=&#34;headerlink&#34; title=&#34;7. 完整示例&#34;&gt;&lt;/a&gt;7. 完整示例&lt;/h3&gt;&lt;p&gt;以下是一个完整的 Flask 应用示例，展示了如何使用 Flask-WTF 处理表单。&lt;/p&gt;
&lt;h4 id=&#34;项目结构-2&#34;&gt;&lt;a href=&#34;#项目结构-2&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;my_flask_app/
├── app.py                   &lt;span class=&#34;token comment&#34;&gt;# Flask 应用主文件&lt;/span&gt;
└── templates/
    └── index.html          &lt;span class=&#34;token comment&#34;&gt;# 表单模板&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-py-1&#34;&gt;&lt;a href=&#34;#app-py-1&#34; class=&#34;headerlink&#34; title=&#34;app.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;码&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FlaskForm
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SubmitField
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validators &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DataRequired

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置安全密钥&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 验证表单数据&lt;/span&gt;
        username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data  &lt;span class=&#34;token comment&#34;&gt;# 获取输入的用户名&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-index-html-1&#34;&gt;&lt;a href=&#34;#templates-index-html-1&#34; class=&#34;headerlink&#34; title=&#34;templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Flask Form Example&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Enter your username&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;POST&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {{ form.hidden_tag() }}  &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 防止 CSRF 攻击 --&amp;gt;&lt;/span&gt;
        {{ form.username.label }} {{ form.username(size=20) }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for error in form.username.errors %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[{{ error }}]&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
        {{ form.submit() }}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-添加更多字段和验证器&#34;&gt;&lt;a href=&#34;#8-添加更多字段和验证器&#34; class=&#34;headerlink&#34; title=&#34;8. 添加更多字段和验证器&#34;&gt;&lt;/a&gt;8. 添加更多字段和验证器&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;WTForms&lt;/code&gt; 提供的多种字段类型和验证器来扩展表单功能。例如，可以添加 &lt;code&gt;EmailField&lt;/code&gt;、&lt;code&gt;PasswordField&lt;/code&gt;、&lt;code&gt;SelectField&lt;/code&gt; 等。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; EmailField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; PasswordField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SelectField

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ExtendedForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    email &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; EmailField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Email&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; PasswordField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SelectField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; choices&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;opt1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Option 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;opt2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Option 2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-处理文件上传&#34;&gt;&lt;a href=&#34;#9-处理文件上传&#34; class=&#34;headerlink&#34; title=&#34;9. 处理文件上传&#34;&gt;&lt;/a&gt;9. 处理文件上传&lt;/h3&gt;&lt;p&gt;Flask-WTF 也支持文件上传，可以使用 &lt;code&gt;FileField&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FileField

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;UploadForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; FileField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;File&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Upload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/upload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;upload_file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UploadForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data
        &lt;span class=&#34;token comment&#34;&gt;# 处理文件上传&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;File &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; uploaded successfully!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;upload.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-保护表单安全&#34;&gt;&lt;a href=&#34;#10-保护表单安全&#34; class=&#34;headerlink&#34; title=&#34;10. 保护表单安全&#34;&gt;&lt;/a&gt;10. 保护表单安全&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;SECRET_KEY&lt;/code&gt; 保护表单，防止 CSRF 攻击，确保所有表单都使用 &lt;code&gt;form.hidden_tag()&lt;/code&gt; 生成 CSRF 令牌。&lt;/p&gt;
&lt;h2 id=&#34;出现找不到渲染文件index-html&#34;&gt;&lt;a href=&#34;#出现找不到渲染文件index-html&#34; class=&#34;headerlink&#34; title=&#34;出现找不到渲染文件index.html&#34;&gt;&lt;/a&gt;出现找不到渲染文件index.html&lt;/h2&gt;&lt;p&gt;检查目录结构，添加这个template_folder=’app/templates’创建框架&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; template_folder&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;app/templates&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接点说python需要从你的路由所在路径找起， template_folder就是指定路径，加入你的路由在app文件夹下，不用指定路径就能直接找到，在外面，例如和app同级，就可以写路径为&lt;code&gt;.app/templates&lt;/code&gt;，记住最重要的是你的路由所在位置算起。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/03/pip-huan-yuan/</guid>
            <title>pip换源</title>
            <link>https://0xdadream.github.io/2024/11/03/pip-huan-yuan/</link>
            <category>tips</category>
            <pubDate>Sun, 03 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;pip换源&#34;&gt;&lt;a href=&#34;#pip换源&#34; class=&#34;headerlink&#34; title=&#34;pip换源&#34;&gt;&lt;/a&gt;pip换源&lt;/h1&gt;&lt;h3 id=&#34;1-临时换源&#34;&gt;&lt;a href=&#34;#1-临时换源&#34; class=&#34;headerlink&#34; title=&#34;1. 临时换源&#34;&gt;&lt;/a&gt;1. 临时换源&lt;/h3&gt;&lt;p&gt;临时换源是在安装某个包时指定使用特定的源，而不改变全局配置。例如，使用清华大学源安装一个包的命令如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; package_name &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中&lt;code&gt;package_name&lt;/code&gt;是您要安装的包的名称。&lt;/p&gt;
&lt;h3 id=&#34;2-永久换源&#34;&gt;&lt;a href=&#34;#2-永久换源&#34; class=&#34;headerlink&#34; title=&#34;2. 永久换源&#34;&gt;&lt;/a&gt;2. 永久换源&lt;/h3&gt;&lt;p&gt;永久换源是通过修改pip的配置文件来实现的，这样每次使用pip时都会默认使用指定的源。&lt;/p&gt;
&lt;h4 id=&#34;2-1-找到pip配置文件的位置&#34;&gt;&lt;a href=&#34;#2-1-找到pip配置文件的位置&#34; class=&#34;headerlink&#34; title=&#34;2.1 找到pip配置文件的位置&#34;&gt;&lt;/a&gt;2.1 找到pip配置文件的位置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unix/Linux/MacOS&lt;/strong&gt;: &lt;code&gt;~/.pip/pip.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\pip\pip.ini&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果配置文件不存在，可以手动创建。&lt;/p&gt;
&lt;h4 id=&#34;2-2-编辑pip配置文件&#34;&gt;&lt;a href=&#34;#2-2-编辑pip配置文件&#34; class=&#34;headerlink&#34; title=&#34;2.2 编辑pip配置文件&#34;&gt;&lt;/a&gt;2.2 编辑pip配置文件&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Unix/Linux/MacOS: 打开或创建&lt;code&gt;~/.pip/pip.conf&lt;/code&gt;文件，并添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-text&#34; data-language=&#34;text&#34;&gt;&lt;code class=&#34;language-text&#34;&gt;[global]
index-url = https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windows: 打开或创建&lt;code&gt;%APPDATA%\pip\pip.ini&lt;/code&gt;文件，并添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-text&#34; data-language=&#34;text&#34;&gt;&lt;code class=&#34;language-text&#34;&gt;[global]
index-url = https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中&lt;code&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code&gt;可以替换为您选择的其他源的URL。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-3-命令&#34;&gt;&lt;a href=&#34;#2-3-命令&#34; class=&#34;headerlink&#34; title=&#34;2.3 命令&#34;&gt;&lt;/a&gt;2.3 命令&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 清华源&lt;/span&gt;
pip config &lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; global.index-url https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-重置镜像源&#34;&gt;&lt;a href=&#34;#3-重置镜像源&#34; class=&#34;headerlink&#34; title=&#34;3. 重置镜像源&#34;&gt;&lt;/a&gt;3. 重置镜像源&lt;/h3&gt;&lt;p&gt;如果您需要重置镜像源到默认的PyPI官方源，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip config &lt;span class=&#34;token builtin class-name&#34;&gt;unset&lt;/span&gt; global.index-url&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将全局设置的镜像源删除，恢复到默认设置。&lt;/p&gt;
&lt;h3 id=&#34;4-验证和测试&#34;&gt;&lt;a href=&#34;#4-验证和测试&#34; class=&#34;headerlink&#34; title=&#34;4. 验证和测试&#34;&gt;&lt;/a&gt;4. 验证和测试&lt;/h3&gt;&lt;p&gt;您可以通过以下命令检查当前pip配置的源：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip config list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后尝试安装一个包来测试配置是否生效。&lt;/p&gt;
&lt;h3 id=&#34;5-国内常用源地址&#34;&gt;&lt;a href=&#34;#5-国内常用源地址&#34; class=&#34;headerlink&#34; title=&#34;5. 国内常用源地址&#34;&gt;&lt;/a&gt;5. 国内常用源地址&lt;/h3&gt;&lt;p&gt;以下是一些国内常用的pip源地址，供您选择使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清华大学源：&lt;code&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;阿里云源：&lt;code&gt;https://mirrors.aliyun.com/pypi/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;豆瓣源：&lt;code&gt;https://pypi.douban.com/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;中国科学技术大学源：&lt;code&gt;https://pypi.mirrors.ustc.edu.cn/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;腾讯云源：&lt;code&gt;https://mirrors.cloud.tencent.com/pypi/simple&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在pip镜像升级报警，只需要添加信任源即可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;临时换源处理&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; beautifulsoup4 --trusted-host mirrors.aliyun.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更换默认源配置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;install&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
trusted-host&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;pypi.douban.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</guid>
            <title>以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台</title>
            <link>https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</link>
            <category>教程</category>
            <category>区块链</category>
            <pubDate>Wed, 16 Oct 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34;&gt;&lt;a href=&#34;#以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34; class=&#34;headerlink&#34; title=&#34;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&#34;&gt;&lt;/a&gt;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&lt;/h1&gt;&lt;h2 id=&#34;一、安装-DApp-开发环境&#34;&gt;&lt;a href=&#34;#一、安装-DApp-开发环境&#34; class=&#34;headerlink&#34; title=&#34;一、安装 DApp 开发环境&#34;&gt;&lt;/a&gt;一、安装 DApp 开发环境&lt;/h2&gt;&lt;h3 id=&#34;1-1-安装-Node-js&#34;&gt;&lt;a href=&#34;#1-1-安装-Node-js&#34; class=&#34;headerlink&#34; title=&#34;1.1 安装 Node.js&#34;&gt;&lt;/a&gt;1.1 安装 Node.js&lt;/h3&gt;&lt;p&gt;看我这篇&lt;a href=&#34;https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/&#34;&gt;node.js版本问题 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;
v22.0.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-2-安装-Geth&#34;&gt;&lt;a href=&#34;#1-2-安装-Geth&#34; class=&#34;headerlink&#34; title=&#34;1.2 安装 Geth&#34;&gt;&lt;/a&gt;1.2 安装 Geth&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://geth.ethereum.org/downloads&#34;&gt;Downloads | go-ethereum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载 64 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者 32 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Geth 安装程序,然后进行安装。 安装完毕后打开一个控制台,执行命令验证安装成功:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth version
Geth
Version: &lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;.3-stable &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-3-安装-solidity-编译器&#34;&gt;&lt;a href=&#34;#1-3-安装-solidity-编译器&#34; class=&#34;headerlink&#34; title=&#34;1.3 安装 solidity 编译器&#34;&gt;&lt;/a&gt;1.3 安装 solidity 编译器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; solc &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  安装完毕后,执行命令验证安装成功 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;solcjs &lt;span class=&#34;token parameter variable&#34;&gt;-V&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0.8&lt;/span&gt;.28+commit.7893614a.Emscripten.clang&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-4-安装-web3&#34;&gt;&lt;a href=&#34;#1-4-安装-web3&#34; class=&#34;headerlink&#34; title=&#34;1.4 安装 web3&#34;&gt;&lt;/a&gt;1.4 安装 web3&lt;/h3&gt;&lt;p&gt;Web3 的安装过程使用了 git,因此需要先安装 windows 版的 git 命令行&lt;a href=&#34;https://0xdadream.github.io/2024/08/09/git-shi-yong/&#34;&gt;git使用 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3 &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证，创建一个文件&lt;code&gt;index.js&lt;/code&gt;,写入以下内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;const &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; Web3 &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;web3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

console.log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Version:&#34;&lt;/span&gt;,Web3.version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; index.js
Version: &lt;span class=&#34;token number&#34;&gt;4.13&lt;/span&gt;.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-5-安装-truffle-框架&#34;&gt;&lt;a href=&#34;#1-5-安装-truffle-框架&#34; class=&#34;headerlink&#34; title=&#34;1.5 安装 truffle 框架&#34;&gt;&lt;/a&gt;1.5 安装 truffle 框架&lt;/h3&gt;&lt;p&gt; 执行以下命令安装 truffle 开发框架: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; truffle&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle.cmd version
Truffle v5.11.5 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core: &lt;span class=&#34;token number&#34;&gt;5.11&lt;/span&gt;.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-6-安装-webpack&#34;&gt;&lt;a href=&#34;#1-6-安装-webpack&#34; class=&#34;headerlink&#34; title=&#34;1.6 安装 webpack&#34;&gt;&lt;/a&gt;1.6 安装 webpack&lt;/h3&gt;&lt;p&gt;执行以下命令安装 webpack:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; webpack –g &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;webpack &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;
Usage: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;entries&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
Alternative usage to run commands: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;二、运行私链节点&#34;&gt;&lt;a href=&#34;#二、运行私链节点&#34; class=&#34;headerlink&#34; title=&#34;二、运行私链节点&#34;&gt;&lt;/a&gt;二、运行私链节点&lt;/h2&gt;&lt;h3 id=&#34;2-1-创世块配置&#34;&gt;&lt;a href=&#34;#2-1-创世块配置&#34; class=&#34;headerlink&#34; title=&#34;2.1 创世块配置&#34;&gt;&lt;/a&gt;2.1 创世块配置&lt;/h3&gt;&lt;p&gt;创建一个节点目录 node1,并在其中创建私链的创世块配置文件:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; node1
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; node1
notepad gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后编辑内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2100000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;300000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;f41c74c9ae680c1aa78f42e5647a62f353b7bdde&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;400000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config.chainId&lt;/code&gt;用来声明以太坊网络编号,选择一个大于 10 的数字即可。  &lt;code&gt;difficulty&lt;/code&gt; 用来声明挖矿难度,越小的值难度越低,也就能更快速地出块。&lt;/p&gt;
&lt;p&gt;完整版的 &lt;code&gt;gensis.json&lt;/code&gt; 如下所示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x400&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xffffffff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;// 可选填的参数&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;coinbase&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;extraData&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;nonce&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;mixhash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;parentHash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;430e986e0cca10a174baad96871ec9cb308c6d05&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;111111&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各个字段解释如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;必填&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;chainId&lt;/td&gt;
&lt;td&gt;自定义私链的网络ID，不同的网络ID无法互联通讯，以太坊公链ID 为1，我们设置为987以防止与网络中其他私链冲突。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;homesteadBlock&lt;/td&gt;
&lt;td&gt;是否为HomeStead版本的区块，设置为0表明是。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip155Block&lt;/td&gt;
&lt;td&gt;EIP155 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id5&#34;&gt;1]&lt;/a&gt; 是一个以太坊分叉提议，为了和以前的以太坊经典ETC 链条分叉而存在，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip158Block&lt;/td&gt;
&lt;td&gt;EIP158 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id6&#34;&gt;2]&lt;/a&gt; 是一个以太坊分叉提议，为了解决之前以太坊空账户造成效率低下的协议漏洞而分叉，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;difficulty&lt;/td&gt;
&lt;td&gt;设置当前区块难度，若难度过大挖矿就很慢，我们设置较小值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gasLimit&lt;/td&gt;
&lt;td&gt;单一区块最大 gas 消耗上限，用来限制能够打包进入块的交易数量与信息总和，我们在学习中可以设置为最大。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;选填&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coinbase&lt;/td&gt;
&lt;td&gt;打包该块的矿工的奖励地址，因为是创世块，可设为0地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extraData&lt;/td&gt;
&lt;td&gt;打包该块时矿工记录的笔记。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nonce&lt;/td&gt;
&lt;td&gt;打包该块时矿工挖矿所用到的Ethash输入参数nonce。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mixHash&lt;/td&gt;
&lt;td&gt;与nonce配合用于挖矿，创世区无前一个区块，可不填。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parentHash&lt;/td&gt;
&lt;td&gt;前一个区块头的哈希值，创世区块无前一个区块，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;打包该块的时间戳，符合Unix Timestamp标准，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alloc&lt;/td&gt;
&lt;td&gt;创世时各账户分配以太币的数量，不想分配则忽略。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-2-初始化私链节点&#34;&gt;&lt;a href=&#34;#2-2-初始化私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.2 初始化私链节点&#34;&gt;&lt;/a&gt;2.2 初始化私链节点&lt;/h3&gt;&lt;p&gt;执行 geth 的 init 命令初始化私链节点:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json

&lt;span class=&#34;token comment&#34;&gt;# Successfully wrote genesis state&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会在当前目录下创建 data 目录,用来保存区块数据及账户信息&lt;/p&gt;
&lt;p&gt;可以上述命令写到一个脚本 &lt;code&gt;init.cmd&lt;/code&gt; 里，文件内容如下:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在部署下一个节点时,就可以直接执行这个脚本进行初始化了。例如,在另一台机器上:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;init.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-启动私链节点&#34;&gt;&lt;a href=&#34;#2-3-启动私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.3 启动私链节点&#34;&gt;&lt;/a&gt;2.3 启动私链节点&lt;/h3&gt;&lt;p&gt;在我们现在的环境下，需要启动一个 Geth 节点来接入私链网络（实际上也是这个私链网络的唯一一个节点），负责在创世块后挖出第一个块。该节点也是我们与以太坊私链通信的节点服务器。下面我们来启动这样一个节点。同样,你可以用一个脚本 &lt;code&gt;console.cmd&lt;/code&gt; 来简化启动节点时的输入,文件内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geth启动时命令行参数解释如下表:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;–rpc&lt;/td&gt;
&lt;td&gt;开启JSON-RPC 服务，可供调用/调试访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcaddr&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcport&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–prccorsdomain&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC允许的域名访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcapi&lt;/td&gt;
&lt;td&gt;允许提供的RPC服务模块，在示例中选择了数个模块加载。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–nodiscover&lt;/td&gt;
&lt;td&gt;关闭自动发现节点，私有链开发时防止他人意外接入，可选择关闭该选项避免他人加入网络。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–maxpeers&lt;/td&gt;
&lt;td&gt;允许最大节点链接数目。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–networkid&lt;/td&gt;
&lt;td&gt;指定以太坊网络ID。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–port&lt;/td&gt;
&lt;td&gt;监听以太坊节点之间P2P消息的TCP/UDP端口，默认30303。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–mine&lt;/td&gt;
&lt;td&gt;节点启动挖矿功能，参与挖矿。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–minerthreads&lt;/td&gt;
&lt;td&gt;挖矿的多线程配置，例子中配置为1个线程。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–etherbase&lt;/td&gt;
&lt;td&gt;若启动挖矿功能，挖矿奖励的接受地址，例子中我们随便填了一个。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;console&lt;/td&gt;
&lt;td&gt;(可选) 启动后进入命令行模式，直接输入命令互动操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;输入回车，启动成功！此时控制台会输出一组日志信息并有欢迎信息&lt;/p&gt;
&lt;p&gt;以后启动节点,只要直接执行这个脚本即可:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;console.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入控制台&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth attach http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Geth-启动结果解释&#34;&gt;&lt;a href=&#34;#Geth-启动结果解释&#34; class=&#34;headerlink&#34; title=&#34;Geth 启动结果解释&#34;&gt;&lt;/a&gt;Geth 启动结果解释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据目录&lt;/strong&gt;：你指定了 &lt;code&gt;--datadir ./data&lt;/code&gt;，Geth 会将所有区块链数据和配置文件存储在该目录中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RPC 服务&lt;/strong&gt;：你启动了 HTTP-RPC 接口，监听地址为 &lt;code&gt;127.0.0.1&lt;/code&gt;，端口为 &lt;code&gt;8545&lt;/code&gt;。这意味着你可以通过 HTTP 方式与节点交互。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挖矿&lt;/strong&gt;：你启用了 &lt;code&gt;--mine&lt;/code&gt; 参数，使用一个线程（&lt;code&gt;--minerthreads 1&lt;/code&gt;）进行挖矿，挖矿奖励会发送到地址 &lt;code&gt;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止节点发现&lt;/strong&gt;：你启用了 &lt;code&gt;--nodiscover&lt;/code&gt; 参数，这意味着节点不会自动发现和连接其他节点（适用于私有链）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;后续如何使用这些配置&#34;&gt;&lt;a href=&#34;#后续如何使用这些配置&#34; class=&#34;headerlink&#34; title=&#34;后续如何使用这些配置&#34;&gt;&lt;/a&gt;后续如何使用这些配置&lt;/h4&gt;&lt;h5 id=&#34;进入控制台后：&#34;&gt;&lt;a href=&#34;#进入控制台后：&#34; class=&#34;headerlink&#34; title=&#34;进入控制台后：&#34;&gt;&lt;/a&gt;进入控制台后：&lt;/h5&gt;&lt;p&gt;你可以直接在 Geth 控制台中输入命令与节点交互。以下是一些常见的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看挖矿状态&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的挖矿算力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看当前区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示当前节点已同步的最新区块号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看账户余额&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示指定账户的余额。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;停止挖矿&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会停止挖矿进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;发送交易&lt;/strong&gt;： 你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;解锁账户&lt;/strong&gt;： 如果要发送交易，首先需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用-RPC-接口：&#34;&gt;&lt;a href=&#34;#使用-RPC-接口：&#34; class=&#34;headerlink&#34; title=&#34;使用 RPC 接口：&#34;&gt;&lt;/a&gt;使用 RPC 接口：&lt;/h5&gt;&lt;p&gt;你启动了 RPC 服务，这意味着你可以通过 HTTP 与节点交互，而不必进入控制台。可以使用 &lt;code&gt;curl&lt;/code&gt;、Web3.js、Python 等工具来与节点通信。下面是几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;curl&lt;/code&gt; 查看区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; POST &lt;span class=&#34;token parameter variable&#34;&gt;--data&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;{&#34;jsonrpc&#34;:&#34;2.0&#34;,&#34;method&#34;:&#34;eth_blockNumber&#34;,&#34;params&#34;:[],&#34;id&#34;:1}&#39;&lt;/span&gt; http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的区块高度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 Web3.js 与节点交互&lt;/strong&gt;： 你可以使用 Web3.js 编写一个简单的脚本来获取节点信息。例如，安装 Web3.js：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后使用以下 JavaScript 代码获取节点的区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-web-idl&#34; data-language=&#34;web-idl&#34;&gt;&lt;code class=&#34;language-web-idl&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;web3&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;new&lt;/span&gt; Web3&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:8545&#39;);&lt;/span&gt;

web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getBlockNumber&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;then&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;手动添加其他节点：&#34;&gt;&lt;a href=&#34;#手动添加其他节点：&#34; class=&#34;headerlink&#34; title=&#34;手动添加其他节点：&#34;&gt;&lt;/a&gt;手动添加其他节点：&lt;/h5&gt;&lt;p&gt;如果你想手动连接其他节点，可以使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://publickey@ip:port&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将允许你将其他节点加入到网络中。&lt;/p&gt;
&lt;h3 id=&#34;2-4-账户管理&#34;&gt;&lt;a href=&#34;#2-4-账户管理&#34; class=&#34;headerlink&#34; title=&#34;2.4 账户管理&#34;&gt;&lt;/a&gt;2.4 账户管理&lt;/h3&gt;&lt;h4 id=&#34;2-4-1-查看账户列表&#34;&gt;&lt;a href=&#34;#2-4-1-查看账户列表&#34; class=&#34;headerlink&#34; title=&#34;2.4.1 查看账户列表&#34;&gt;&lt;/a&gt;2.4.1 查看账户列表&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 eth 对象的 accounts 属性查看目前的账户列表:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.accounts  or personal.listAccounts
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-2-创建新账户&#34;&gt;&lt;a href=&#34;#2-4-2-创建新账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.2 创建新账户&#34;&gt;&lt;/a&gt;2.4.2 创建新账户&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 newAccount()方法创建一个新账户,参数为你自己选择的密码:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; personal.newAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;123456&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token string&#34;&gt;&#34;0x6e1d438b00d5bb865c4d842e9c02549709130147&#34;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出就是新创建的账户地址(公钥),你的输出不会和上面的示例相同。geth 会保存到数据目录下的 keystore 文件中。&lt;/p&gt;
&lt;h4 id=&#34;2-4-3-查询账户余额&#34;&gt;&lt;a href=&#34;#2-4-3-查询账户余额&#34; class=&#34;headerlink&#34; title=&#34;2.4.3 查询账户余额&#34;&gt;&lt;/a&gt;2.4.3 查询账户余额&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 getBalance()方法获取挃定账户的余额,参数为账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  或者直接输入账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0xd8bcf1324d566cbec5d3b67e6e14485b06a41d49&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;web3.fromWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 将wei换算成eth&lt;/span&gt;
web3.toWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-4-挖矿&#34;&gt;&lt;a href=&#34;#2-4-4-挖矿&#34; class=&#34;headerlink&#34; title=&#34;2.4.4 挖矿&#34;&gt;&lt;/a&gt;2.4.4 挖矿&lt;/h4&gt;&lt;p&gt;私有链不用其他节点也能挖矿&lt;/p&gt;
&lt;h5 id=&#34;1-启动和停止挖矿&#34;&gt;&lt;a href=&#34;#1-启动和停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;1. 启动和停止挖矿&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;启动和停止挖矿&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;启动挖矿&#34;&gt;&lt;a href=&#34;#启动挖矿&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h6&gt;&lt;p&gt;要开始挖矿，你可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;miner.start(threads)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;threads参数表示使用多少个线程进行挖矿。比如要用 1 个线程：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;停止挖矿&#34;&gt;&lt;a href=&#34;#停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;停止挖矿&#34;&gt;&lt;/a&gt;停止挖矿&lt;/h6&gt;&lt;p&gt;要停止挖矿，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-查看挖矿状态&#34;&gt;&lt;a href=&#34;#2-查看挖矿状态&#34; class=&#34;headerlink&#34; title=&#34;2. 查看挖矿状态&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查看挖矿状态&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看挖矿是否正在进行&#34;&gt;&lt;a href=&#34;#查看挖矿是否正在进行&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿是否正在进行&#34;&gt;&lt;/a&gt;查看挖矿是否正在进行&lt;/h6&gt;&lt;p&gt;你可以通过以下命令检查节点当前是否正在挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mining&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令返回 &lt;code&gt;true&lt;/code&gt; 表示节点正在挖矿，返回 &lt;code&gt;false&lt;/code&gt; 表示节点没有在挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看当前的哈希算力&#34;&gt;&lt;a href=&#34;#查看当前的哈希算力&#34; class=&#34;headerlink&#34; title=&#34;查看当前的哈希算力&#34;&gt;&lt;/a&gt;查看当前的哈希算力&lt;/h6&gt;&lt;p&gt;使用以下命令查看节点的哈希算力：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的数值表示每秒计算的哈希数，以 H/s（哈希每秒）为单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看矿工账户&#34;&gt;&lt;a href=&#34;#查看矿工账户&#34; class=&#34;headerlink&#34; title=&#34;查看矿工账户&#34;&gt;&lt;/a&gt;查看矿工账户&lt;/h6&gt;&lt;p&gt;使用以下命令查看当前挖矿收益的账户（即矿工地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;查看当前区块高度&#34;&gt;&lt;a href=&#34;#查看当前区块高度&#34; class=&#34;headerlink&#34; title=&#34;查看当前区块高度&#34;&gt;&lt;/a&gt;查看当前区块高度&lt;/h6&gt;&lt;p&gt;你可以通过以下命令查看节点同步到的最新区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-设置矿工账户&#34;&gt;&lt;a href=&#34;#3-设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;3. 设置矿工账户&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;设置矿工账户&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;在挖矿前，通常需要设置 &lt;code&gt;coinbase&lt;/code&gt;（即矿工账户地址），挖矿的奖励会发送到这个地址。你可以使用以下命令设置 &lt;code&gt;coinbase&lt;/code&gt;：&lt;/p&gt;
&lt;h6 id=&#34;设置矿工账户&#34;&gt;&lt;a href=&#34;#设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;设置矿工账户&#34;&gt;&lt;/a&gt;设置矿工账户&lt;/h6&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setEtherbase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令将指定的账户设置为矿工账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;4-挖矿奖励和账户&#34;&gt;&lt;a href=&#34;#4-挖矿奖励和账户&#34; class=&#34;headerlink&#34; title=&#34;4. 挖矿奖励和账户&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;挖矿奖励和账户&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看当前账户的余额&#34;&gt;&lt;a href=&#34;#查看当前账户的余额&#34; class=&#34;headerlink&#34; title=&#34;查看当前账户的余额&#34;&gt;&lt;/a&gt;查看当前账户的余额&lt;/h6&gt;&lt;p&gt;要查看矿工账户的余额，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;解锁矿工账户&#34;&gt;&lt;a href=&#34;#解锁矿工账户&#34; class=&#34;headerlink&#34; title=&#34;解锁矿工账户&#34;&gt;&lt;/a&gt;解锁矿工账户&lt;/h6&gt;&lt;p&gt;如果你希望自动将矿工奖励发送到某个账户，你可能需要解锁该账户，尤其是在你打算用这个账户发送交易时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; duration&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;duration&lt;/code&gt; 是账户解锁的时间，单位是秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;5-与挖矿相关的高级操作&#34;&gt;&lt;a href=&#34;#5-与挖矿相关的高级操作&#34; class=&#34;headerlink&#34; title=&#34;5. 与挖矿相关的高级操作&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;与挖矿相关的高级操作&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;设置挖矿目标难度&#34;&gt;&lt;a href=&#34;#设置挖矿目标难度&#34; class=&#34;headerlink&#34; title=&#34;设置挖矿目标难度&#34;&gt;&lt;/a&gt;设置挖矿目标难度&lt;/h6&gt;&lt;p&gt;在私有链上，你可以通过修改 &lt;code&gt;genesis.json&lt;/code&gt; 文件中的 &lt;code&gt;difficulty&lt;/code&gt; 值来控制挖矿难度。在 Geth 运行期间，无法直接修改目标难度。&lt;/p&gt;
&lt;h6 id=&#34;查看挖到的区块&#34;&gt;&lt;a href=&#34;#查看挖到的区块&#34; class=&#34;headerlink&#34; title=&#34;查看挖到的区块&#34;&gt;&lt;/a&gt;查看挖到的区块&lt;/h6&gt;&lt;p&gt;使用以下命令可以查看最新的区块信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;latest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;eth.getBlock()&lt;/code&gt; 返回的区块信息包含以下常见字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt;: 区块号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 区块的哈希值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parentHash&lt;/code&gt;: 父区块的哈希&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 区块中工作量证明的 nonce 值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miner&lt;/code&gt;: 挖出该区块的矿工地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 区块的挖矿难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;totalDifficulty&lt;/code&gt;: 该区块链上到当前区块为止的总难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: 区块大小（以字节为单位）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 该区块的 gas 上限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 该区块使用的 gas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt;: 区块的时间戳&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactions&lt;/code&gt;: 包含在该区块中的交易数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uncles&lt;/code&gt;: 包含该区块的叔块数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;自动挖矿新交易&#34;&gt;&lt;a href=&#34;#自动挖矿新交易&#34; class=&#34;headerlink&#34; title=&#34;自动挖矿新交易&#34;&gt;&lt;/a&gt;自动挖矿新交易&lt;/h6&gt;&lt;p&gt;Geth 提供一个选项可以在有新交易进入交易池时自动开始挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setAuto&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置为 &lt;code&gt;1&lt;/code&gt; 后，每当交易池中有新交易时，节点将自动开始挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;6-挖矿的调试工具&#34;&gt;&lt;a href=&#34;#6-挖矿的调试工具&#34; class=&#34;headerlink&#34; title=&#34;6. 挖矿的调试工具&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;挖矿的调试工具&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看交易池中的交易&#34;&gt;&lt;a href=&#34;#查看交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;查看交易池中的交易&#34;&gt;&lt;/a&gt;查看交易池中的交易&lt;/h6&gt;&lt;p&gt;如果你想查看待处理的交易，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的信息会告诉你有多少笔交易在交易池中等待执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看挖矿日志&#34;&gt;&lt;a href=&#34;#查看挖矿日志&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿日志&#34;&gt;&lt;/a&gt;查看挖矿日志&lt;/h6&gt;&lt;p&gt;挖矿日志可以帮助你跟踪挖矿状态和进度。在 Geth 启动时，你可以通过设置日志等级来查看挖矿详细信息。例如，使用 &lt;code&gt;--verbosity&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;geth &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;verbosity &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，挖矿时的日志会显示更多详细的挖矿信息。&lt;/p&gt;
&lt;h5 id=&#34;7-挖矿常见问题&#34;&gt;&lt;a href=&#34;#7-挖矿常见问题&#34; class=&#34;headerlink&#34; title=&#34;7. 挖矿常见问题&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;挖矿常见问题&lt;/strong&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;无法开始挖矿？&lt;/strong&gt; 如果你无法开始挖矿，可能是由于账户未解锁。确保你已解锁矿工账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;矿工奖励没有到账？&lt;/strong&gt; 矿工奖励发放需要时间，尤其是在主网上挖矿时，奖励只有在挖到的区块被确认后才能到账。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;8-挖矿命令汇总&#34;&gt;&lt;a href=&#34;#8-挖矿命令汇总&#34; class=&#34;headerlink&#34; title=&#34;8. 挖矿命令汇总&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;挖矿命令汇总&lt;/strong&gt;&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.start(threads)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启动挖矿，&lt;code&gt;threads&lt;/code&gt; 为使用的线程数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.stop()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;停止挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.hashrate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前的挖矿算力&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.mining&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看是否正在挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.setEtherbase(&#34;address&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(eth.coinbase)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看矿工账户的余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.blockNumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前区块高度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBlock(&#39;latest&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看最新的区块信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池中的待处理交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(eth.coinbase, &#34;password&#34;, 600)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;2-4-5-解锁账户&#34;&gt;&lt;a href=&#34;#2-4-5-解锁账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.5 解锁账户&#34;&gt;&lt;/a&gt;2.4.5 解锁账户&lt;/h4&gt;&lt;p&gt;在部署合约时需要一个解锁的账户。&lt;/p&gt;
&lt;p&gt;在 geth 控制台使用 &lt;code&gt;personal&lt;/code&gt; 对象的 &lt;code&gt;unlockAccount()&lt;/code&gt;  方法来解锁挃定的账户,参数为账户地址和账户密码(在创建账户时挃定的那个密码):  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.unlockAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;123456&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-5-交易&#34;&gt;&lt;a href=&#34;#2-5-交易&#34; class=&#34;headerlink&#34; title=&#34;2.5 交易&#34;&gt;&lt;/a&gt;2.5 交易&lt;/h3&gt;&lt;h4 id=&#34;1-发送交易&#34;&gt;&lt;a href=&#34;#1-发送交易&#34; class=&#34;headerlink&#34; title=&#34;1. 发送交易&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;使用-eth-sendTransaction-发送交易&#34;&gt;&lt;a href=&#34;#使用-eth-sendTransaction-发送交易&#34; class=&#34;headerlink&#34; title=&#34;使用 eth.sendTransaction 发送交易&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易&lt;/h5&gt;&lt;p&gt;发送交易时，你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 命令。示例如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户的地址，必须先解锁账户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的金额，单位是 wei（可以使用 &lt;code&gt;web3.toWei&lt;/code&gt; 转换成 ether）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: （可选）指定交易的 gas 上限，默认为 &lt;code&gt;21000&lt;/code&gt;，适用于普通转账。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: （可选）指定每单位 gas 的价格，默认为当前网络的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: （可选）包含用于合约调用的数据（智能合约交易时用到）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;解锁账户&#34;&gt;&lt;a href=&#34;#解锁账户&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;在发送交易前，如果账户被锁定，你需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;600&lt;/code&gt; 表示账户将保持解锁 600 秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-查询交易&#34;&gt;&lt;a href=&#34;#2-查询交易&#34; class=&#34;headerlink&#34; title=&#34;2. 查询交易&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查询交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易信息&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;/a&gt;根据交易哈希查询交易信息&lt;/h5&gt;&lt;p&gt;发送交易后，你可以使用交易哈希查询交易的详细信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将返回交易的详细信息，包括发送者、接收者、金额、gas 费用等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eth.getTransaction()&lt;/code&gt; 会返回一个包含该交易详细信息的对象，常见的字段包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 该交易所属区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 该交易所属区块的区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发起该交易的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易消耗的 gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 该交易的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 该交易的哈希值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易的数据字段，通常是合约调用时传递的数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送方账户的 nonce 值，表示该账户发起的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 交易接收者的地址，如果是合约创建交易则为 &lt;code&gt;null&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: 该交易在区块中的索引。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 该交易中发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;交易未打包&#34;&gt;&lt;a href=&#34;#交易未打包&#34; class=&#34;headerlink&#34; title=&#34;交易未打包&#34;&gt;&lt;/a&gt;交易未打包&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockHash&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 当交易尚未被打包时，&lt;code&gt;blockHash&lt;/code&gt; 的值为 &lt;code&gt;null&lt;/code&gt;，因为该交易还没有被包含在任何区块中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockNumber&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 同样，由于交易未被打包，&lt;code&gt;blockNumber&lt;/code&gt; 也会是 &lt;code&gt;null&lt;/code&gt;，表示该交易还未属于任何区块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 因为交易还没有被打包到区块，因此也没有在区块中的位置，&lt;code&gt;transactionIndex&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他字段&lt;/strong&gt; 其他交易的基本信息仍然可以被查询到，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者的地址（或者 &lt;code&gt;null&lt;/code&gt; 如果是合约创建交易）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易所消耗的 Gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: Gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送者账户的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易中包含的数据（如合约调用时的参数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易收据&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;/a&gt;根据交易哈希查询交易收据&lt;/h5&gt;&lt;p&gt;要查看交易是否成功被打包到区块中，可以使用以下命令查询交易收据：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionReceipt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回的交易收据包含以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 交易的执行状态，&lt;code&gt;1&lt;/code&gt; 表示成功，&lt;code&gt;0&lt;/code&gt; 表示失败。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 包含该交易的区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionHash&lt;/code&gt;: 交易哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 此交易消耗的 gas 量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;logs&lt;/code&gt;: 该交易的事件日志列表&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-创建自定义交易&#34;&gt;&lt;a href=&#34;#3-创建自定义交易&#34; class=&#34;headerlink&#34; title=&#34;3. 创建自定义交易&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;创建自定义交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 创建自定义交易，除了 &lt;code&gt;from&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 之外，还可以指定 &lt;code&gt;gas&lt;/code&gt;、&lt;code&gt;gasPrice&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 等字段：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSomeData&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 设置交易的 gas 限制，确保足够高。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 设置每单位 gas 的价格，单位是 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;自定义-gas-价格&#34;&gt;&lt;a href=&#34;#自定义-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;自定义 gas 价格&#34;&gt;&lt;/a&gt;自定义 gas 价格&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将设置一个较高的 gas 价格，以加快交易打包。&lt;/p&gt;
&lt;h4 id=&#34;4-离线签名交易&#34;&gt;&lt;a href=&#34;#4-离线签名交易&#34; class=&#34;headerlink&#34; title=&#34;4. 离线签名交易&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;离线签名交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在某些场景下，你可能希望在离线状态下生成交易并签名，然后再发送。以下是离线签名交易的步骤：&lt;/p&gt;
&lt;h5 id=&#34;构建未签名交易&#34;&gt;&lt;a href=&#34;#构建未签名交易&#34; class=&#34;headerlink&#34; title=&#34;构建未签名交易&#34;&gt;&lt;/a&gt;构建未签名交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; rawTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;nonce&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;gwei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ether&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;签名交易&#34;&gt;&lt;a href=&#34;#签名交易&#34; class=&#34;headerlink&#34; title=&#34;签名交易&#34;&gt;&lt;/a&gt;签名交易&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;eth.accounts.signTransaction&lt;/code&gt; 函数来签名交易：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; signedTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;accounts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;signTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rawTx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xPrivateKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送已签名交易&#34;&gt;&lt;a href=&#34;#发送已签名交易&#34; class=&#34;headerlink&#34; title=&#34;发送已签名交易&#34;&gt;&lt;/a&gt;发送已签名交易&lt;/h5&gt;&lt;p&gt;发送已签名的交易，可以使用 &lt;code&gt;eth.sendSignedTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendSignedTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;signedTx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rawTransaction&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;receipt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-批量发送交易&#34;&gt;&lt;a href=&#34;#5-批量发送交易&#34; class=&#34;headerlink&#34; title=&#34;5. 批量发送交易&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;批量发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果你需要一次发送多笔交易，你可以在脚本中批量调用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-检查账户余额&#34;&gt;&lt;a href=&#34;#6-检查账户余额&#34; class=&#34;headerlink&#34; title=&#34;6. 检查账户余额&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;检查账户余额&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以随时使用以下命令检查账户的余额：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回值为账户的余额，单位是 wei。如果你想以以太币（ether）显示，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-检查交易池中的交易&#34;&gt;&lt;a href=&#34;#7-检查交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;7. 检查交易池中的交易&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;检查交易池中的交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;交易被发送后，可能会在交易池中等待确认。你可以使用以下命令查看交易池中的状态：&lt;/p&gt;
&lt;h5 id=&#34;检查挂起的交易&#34;&gt;&lt;a href=&#34;#检查挂起的交易&#34; class=&#34;headerlink&#34; title=&#34;检查挂起的交易&#34;&gt;&lt;/a&gt;检查挂起的交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回交易池中的待处理和挂起的交易数量。&lt;/p&gt;
&lt;h5 id=&#34;查看具体的挂起交易&#34;&gt;&lt;a href=&#34;#查看具体的挂起交易&#34; class=&#34;headerlink&#34; title=&#34;查看具体的挂起交易&#34;&gt;&lt;/a&gt;查看具体的挂起交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inspect&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示详细的待处理和挂起交易的信息。&lt;/p&gt;
&lt;h4 id=&#34;8-检查当前的-gas-价格&#34;&gt;&lt;a href=&#34;#8-检查当前的-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;8. 检查当前的 gas 价格&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;检查当前的 gas 价格&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用以下命令来获取当前网络建议的 gas 价格：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gasPrice&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的值是以 wei 为单位的当前 gas 价格。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9-监听区块和交易事件&#34;&gt;&lt;a href=&#34;#9-监听区块和交易事件&#34; class=&#34;headerlink&#34; title=&#34;9. 监听区块和交易事件&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;监听区块和交易事件&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以通过监听事件来实时监控交易状态。例如，当新区块生成时，可以收到通知：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;newBlockHeaders&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;error&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;connected&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;subscriptionId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;subscriptionId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;blockHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blockHeader&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-交易命令汇总&#34;&gt;&lt;a href=&#34;#10-交易命令汇总&#34; class=&#34;headerlink&#34; title=&#34;10. 交易命令汇总&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;交易命令汇总&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendTransaction({...})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送普通或自定义交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁账户以便发送交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransaction(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易详情&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransactionReceipt(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易收据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(&#34;0xAddress&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查询账户余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.gasPrice&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取当前的 gas 价格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.accounts.signTransaction({...}, &#34;privateKey&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;离线签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendSignedTransaction(&#34;signedTx&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送已签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-6-私链多个节点连接的详细命令&#34;&gt;&lt;a href=&#34;#2-6-私链多个节点连接的详细命令&#34; class=&#34;headerlink&#34; title=&#34;2.6 私链多个节点连接的详细命令&#34;&gt;&lt;/a&gt;2.6 私链多个节点连接的详细命令&lt;/h3&gt;&lt;p&gt;在以太坊私链中，多个节点可以通过网络连接形成一个共识网络。在这种情况下，节点之间需要能够发现彼此，并保持同步。以下是详细的步骤和命令，用于设置并连接多个 Geth 节点到同一个私链网络。&lt;/p&gt;
&lt;h4 id=&#34;1-准备工作&#34;&gt;&lt;a href=&#34;#1-准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 准备工作&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;准备工作&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建-genesis-json-文件&#34;&gt;&lt;a href=&#34;#创建-genesis-json-文件&#34; class=&#34;headerlink&#34; title=&#34;创建 genesis.json 文件&#34;&gt;&lt;/a&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件&lt;/h5&gt;&lt;p&gt;在私链中，所有节点需要共享同一个创世区块 (&lt;code&gt;genesis block&lt;/code&gt;)。首先，创建一个 &lt;code&gt;genesis.json&lt;/code&gt; 文件，它定义了私链的创世区块和区块链的初始配置。&lt;/p&gt;
&lt;p&gt;以下是一个示例 &lt;code&gt;genesis.json&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;eip150Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;byzantiumBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;constantinopleBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;petersburgBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1000000000000000000000&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chainId&lt;/code&gt;: 为私链设置一个独特的网络 ID（不同于主网和测试网）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 设置初始挖矿难度，数值越低，挖矿越容易。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 设置每个区块的 gas 上限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alloc&lt;/code&gt;: 为指定账户分配初始余额。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-初始化-Geth-节点&#34;&gt;&lt;a href=&#34;#2-初始化-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;2. 初始化 Geth 节点&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;初始化 Geth 节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;每个节点在第一次启动时都需要初始化私链。假设你已经有了 Geth，并将数据目录设置为 &lt;code&gt;./data&lt;/code&gt;，可以使用以下命令初始化节点：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data init genesis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init genesis.json&lt;/code&gt;: 使用 &lt;code&gt;genesis.json&lt;/code&gt; 文件初始化链。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个私链节点都需要运行此命令。&lt;/p&gt;
&lt;h4 id=&#34;3-启动节点&#34;&gt;&lt;a href=&#34;#3-启动节点&#34; class=&#34;headerlink&#34; title=&#34;3. 启动节点&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;启动节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;使用以下命令启动每个节点，并确保每个节点都指定相同的 &lt;code&gt;--networkid&lt;/code&gt; 和使用 &lt;code&gt;--port&lt;/code&gt; 参数设置不同的端口。&lt;/p&gt;
&lt;h5 id=&#34;启动第一个节点（节点A）&#34;&gt;&lt;a href=&#34;#启动第一个节点（节点A）&#34; class=&#34;headerlink&#34; title=&#34;启动第一个节点（节点A）&#34;&gt;&lt;/a&gt;启动第一个节点（节点A）&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--networkid 987&lt;/code&gt;: 设置网络 ID，与 &lt;code&gt;genesis.json&lt;/code&gt; 中的 &lt;code&gt;chainId&lt;/code&gt; 保持一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30303&lt;/code&gt;: 设置 P2P 连接的监听端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--nodiscover&lt;/code&gt;: 禁用节点发现功能（如果你想手动连接节点）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http&lt;/code&gt;: 启用 HTTP-RPC 服务，便于远程访问节点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console&lt;/code&gt;: 启动 Geth 控制台以便执行命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;启动第二个节点（节点B）&#34;&gt;&lt;a href=&#34;#启动第二个节点（节点B）&#34; class=&#34;headerlink&#34; title=&#34;启动第二个节点（节点B）&#34;&gt;&lt;/a&gt;启动第二个节点（节点B）&lt;/h5&gt;&lt;p&gt;节点B可以在另一台机器上，也可以是本机上的另一个实例，只需要不同的数据目录和端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./node2data&lt;/code&gt;: 为节点B设置不同的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30304&lt;/code&gt;: 节点B的 P2P 端口必须与节点A不同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http.port 8546&lt;/code&gt;: HTTP-RPC 服务端口与节点A不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-手动连接节点&#34;&gt;&lt;a href=&#34;#4-手动连接节点&#34; class=&#34;headerlink&#34; title=&#34;4. 手动连接节点&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;手动连接节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;因为 &lt;code&gt;--nodiscover&lt;/code&gt; 禁用了自动发现，必须手动连接节点。&lt;/p&gt;
&lt;h5 id=&#34;获取节点的-enode-信息&#34;&gt;&lt;a href=&#34;#获取节点的-enode-信息&#34; class=&#34;headerlink&#34; title=&#34;获取节点的 enode 信息&#34;&gt;&lt;/a&gt;获取节点的 &lt;code&gt;enode&lt;/code&gt; 信息&lt;/h5&gt;&lt;p&gt;在节点A的控制台中，输入以下命令获取节点A的 &lt;code&gt;enode&lt;/code&gt; 地址：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nodeInfo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;enode&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出类似于：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-perl&#34; data-language=&#34;perl&#34;&gt;&lt;code class=&#34;language-perl&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303?discport=0&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个地址是节点A的唯一标识，后面的 &lt;code&gt;@127.0.0.1:30303&lt;/code&gt; 表示节点A运行的 IP 和端口。&lt;/p&gt;
&lt;h5 id=&#34;连接节点B到节点A&#34;&gt;&lt;a href=&#34;#连接节点B到节点A&#34; class=&#34;headerlink&#34; title=&#34;连接节点B到节点A&#34;&gt;&lt;/a&gt;连接节点B到节点A&lt;/h5&gt;&lt;p&gt;在节点B的控制台中，使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令连接到节点A：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/code&gt; 替换为节点A的 &lt;code&gt;enode&lt;/code&gt; 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;验证节点是否连接&#34;&gt;&lt;a href=&#34;#验证节点是否连接&#34; class=&#34;headerlink&#34; title=&#34;验证节点是否连接&#34;&gt;&lt;/a&gt;验证节点是否连接&lt;/h5&gt;&lt;p&gt;在任何一个节点的控制台中，使用以下命令检查当前连接的对等节点数量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果节点成功连接，该命令将返回大于 &lt;code&gt;0&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你还可以使用以下命令查看当前的连接节点列表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-同步和挖矿&#34;&gt;&lt;a href=&#34;#5-同步和挖矿&#34; class=&#34;headerlink&#34; title=&#34;5. 同步和挖矿&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;同步和挖矿&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在节点A或节点B中，可以启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用 1 个线程进行挖矿&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;挖到的区块会自动同步到其他节点。你可以通过以下命令查看区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-账户和交易管理&#34;&gt;&lt;a href=&#34;#6-账户和交易管理&#34; class=&#34;headerlink&#34; title=&#34;6. 账户和交易管理&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;账户和交易管理&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建新账户&#34;&gt;&lt;a href=&#34;#创建新账户&#34; class=&#34;headerlink&#34; title=&#34;创建新账户&#34;&gt;&lt;/a&gt;创建新账户&lt;/h5&gt;&lt;p&gt;在 Geth 控制台中，你可以为每个节点创建新账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;解锁账户-1&#34;&gt;&lt;a href=&#34;#解锁账户-1&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;发送交易前需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送交易&#34;&gt;&lt;a href=&#34;#发送交易&#34; class=&#34;headerlink&#34; title=&#34;发送交易&#34;&gt;&lt;/a&gt;发送交易&lt;/h5&gt;&lt;p&gt;在节点之间发送交易，可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 转账金额，单位为 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-设置启动脚本&#34;&gt;&lt;a href=&#34;#7-设置启动脚本&#34; class=&#34;headerlink&#34; title=&#34;7. 设置启动脚本&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;设置启动脚本&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;为了方便，你可以将节点启动命令放入 &lt;code&gt;.bat&lt;/code&gt; 或 &lt;code&gt;.cmd&lt;/code&gt; 文件中，在 Windows 上直接双击执行。例如，创建一个 &lt;code&gt;start_nodeA.bat&lt;/code&gt; 文件，内容为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后创建 &lt;code&gt;start_nodeB.bat&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-多节点连接的总结步骤&#34;&gt;&lt;a href=&#34;#8-多节点连接的总结步骤&#34; class=&#34;headerlink&#34; title=&#34;8. 多节点连接的总结步骤&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;多节点连接的总结步骤&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件，并初始化所有节点。&lt;/li&gt;
&lt;li&gt;启动每个节点，确保使用相同的 &lt;code&gt;networkid&lt;/code&gt; 和不同的 &lt;code&gt;port&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 手动连接节点，确保它们可以互相通信。&lt;/li&gt;
&lt;li&gt;启动挖矿，并通过 &lt;code&gt;miner.start()&lt;/code&gt; 命令进行区块生成。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.peers&lt;/code&gt; 和 &lt;code&gt;net.peerCount&lt;/code&gt; 查看连接状态。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这些步骤，你可以在私链上搭建多个节点的网络，节点之间可以互相同步区块、挖矿和发送交易。&lt;/p&gt;
&lt;h2 id=&#34;三、构建示例项目&#34;&gt;&lt;a href=&#34;#三、构建示例项目&#34; class=&#34;headerlink&#34; title=&#34;三、构建示例项目&#34;&gt;&lt;/a&gt;三、构建示例项目&lt;/h2&gt;&lt;h3 id=&#34;创建-Truffle-项目&#34;&gt;&lt;a href=&#34;#创建-Truffle-项目&#34; class=&#34;headerlink&#34; title=&#34;创建 Truffle 项目&#34;&gt;&lt;/a&gt;创建 Truffle 项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&#34;创建项目目录：&#34;&gt;&lt;a href=&#34;#创建项目目录：&#34; class=&#34;headerlink&#34; title=&#34;创建项目目录：&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建项目目录&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; my-dapp
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my-dapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&#34;初始化-Truffle-项目：&#34;&gt;&lt;a href=&#34;#初始化-Truffle-项目：&#34; class=&#34;headerlink&#34; title=&#34;初始化 Truffle 项目：&#34;&gt;&lt;/a&gt;&lt;strong&gt;初始化 Truffle 项目&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle init or truffle.cmd unbox webpack &lt;span class=&#34;token comment&#34;&gt;#后者用 webpack 模版初始化项目骨架结构&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装项目依赖的 NPM 包 ，执行以下命令安装 npm 包:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; app
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;修改-Truffle-配置&#34;&gt;&lt;a href=&#34;#修改-Truffle-配置&#34; class=&#34;headerlink&#34; title=&#34;修改 Truffle 配置&#34;&gt;&lt;/a&gt;修改 Truffle 配置&lt;/h3&gt;&lt;p&gt;在项目根目录下找到 &lt;code&gt;truffle-config.js&lt;/code&gt; 文件，并修改如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;development&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;network_id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 匹配任何网络 ID&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3000000&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 设置最大 gas 限制&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;compilers&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;solc&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0.8.0&#34;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 指定 Solidity 编译器版本&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写智能合约&#34;&gt;&lt;a href=&#34;#编写智能合约&#34; class=&#34;headerlink&#34; title=&#34;编写智能合约&#34;&gt;&lt;/a&gt;编写智能合约&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;contracts&lt;/code&gt; 目录下创建一个新的合约文件，例如 &lt;code&gt;MyContract.sol&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-solidity&#34; data-language=&#34;solidity&#34;&gt;&lt;code class=&#34;language-solidity&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// SPDX-License-Identifier: MIT&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;token version number&#34;&gt;0.8.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyContract&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; message&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建迁移文件&#34;&gt;&lt;a href=&#34;#创建迁移文件&#34; class=&#34;headerlink&#34; title=&#34;创建迁移文件&#34;&gt;&lt;/a&gt;创建迁移文件&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;migrations&lt;/code&gt; 目录下创建一个新的迁移文件，例如 &lt;code&gt;2_deploy_my_contract.js&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-默认迁移行为&#34;&gt;&lt;a href=&#34;#1-默认迁移行为&#34; class=&#34;headerlink&#34; title=&#34;1. 默认迁移行为&#34;&gt;&lt;/a&gt;1. 默认迁移行为&lt;/h4&gt;&lt;p&gt;当你运行以下命令时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Truffle 会按照 &lt;code&gt;migrations&lt;/code&gt; 目录中脚本的顺序自动部署所有合约。每个脚本的文件名通常以数字开头，以确定部署顺序。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1_initial_migration.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-部署特定合约&#34;&gt;&lt;a href=&#34;#2-部署特定合约&#34; class=&#34;headerlink&#34; title=&#34;2. 部署特定合约&#34;&gt;&lt;/a&gt;2. 部署特定合约&lt;/h4&gt;&lt;p&gt;如果你只想部署特定的合约，可以按照以下步骤进行：&lt;/p&gt;
&lt;h5 id=&#34;2-1-创建特定迁移文件&#34;&gt;&lt;a href=&#34;#2-1-创建特定迁移文件&#34; class=&#34;headerlink&#34; title=&#34;2.1 创建特定迁移文件&#34;&gt;&lt;/a&gt;2.1 创建特定迁移文件&lt;/h5&gt;&lt;p&gt;你可以在 &lt;code&gt;migrations&lt;/code&gt; 目录中创建新的迁移文件，只包含要部署的合约。例如，假设你只想部署 &lt;code&gt;MyContract&lt;/code&gt; 合约，你可以创建一个新的迁移文件，例如 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-2-使用-f-参数&#34;&gt;&lt;a href=&#34;#2-2-使用-f-参数&#34; class=&#34;headerlink&#34; title=&#34;2.2 使用 --f 参数&#34;&gt;&lt;/a&gt;2.2 使用 &lt;code&gt;--f&lt;/code&gt; 参数&lt;/h5&gt;&lt;p&gt;如果你想只运行特定的迁移文件，可以使用 &lt;code&gt;--f&lt;/code&gt; 参数（&lt;code&gt;--f&lt;/code&gt; 后接文件的序号）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--f&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将只运行 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt; 文件中的迁移脚本。&lt;/p&gt;
&lt;h4 id=&#34;3-回滚并重新部署&#34;&gt;&lt;a href=&#34;#3-回滚并重新部署&#34; class=&#34;headerlink&#34; title=&#34;3. 回滚并重新部署&#34;&gt;&lt;/a&gt;3. 回滚并重新部署&lt;/h4&gt;&lt;p&gt;如果你需要重新部署某个合约，可以使用 &lt;code&gt;--reset&lt;/code&gt; 参数，这将重新运行所有的迁移：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--reset&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果只想回滚到某个特定迁移并重新部署，你可以使用 &lt;code&gt;--to&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--to&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回滚到并重新部署到第二个迁移（&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;）为止的所有迁移。&lt;/p&gt;
&lt;h4 id=&#34;4-部署的选择性控制&#34;&gt;&lt;a href=&#34;#4-部署的选择性控制&#34; class=&#34;headerlink&#34; title=&#34;4. 部署的选择性控制&#34;&gt;&lt;/a&gt;4. 部署的选择性控制&lt;/h4&gt;&lt;p&gt;如果你的合约之间存在依赖关系（例如，一个合约依赖于另一个合约），你应该确保按照适当的顺序部署。可以在迁移脚本中引用之前已经部署的合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractA&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instanceA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContractA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;token comment&#34;&gt;// 部署时传递 MyContractA 的地址&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractB&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; instanceA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;address&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编译合约&#34;&gt;&lt;a href=&#34;#编译合约&#34; class=&#34;headerlink&#34; title=&#34;编译合约&#34;&gt;&lt;/a&gt;编译合约&lt;/h3&gt;&lt;p&gt;在部署合约之前，您需要确保智能合约已被编译。您可以通过以下命令来编译合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle compile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;自动编译与部署&#34;&gt;&lt;a href=&#34;#自动编译与部署&#34; class=&#34;headerlink&#34; title=&#34;自动编译与部署&#34;&gt;&lt;/a&gt;自动编译与部署&lt;/h4&gt;&lt;p&gt;在执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时，Truffle 会自动检查合约是否已经编译。如果合约文件有更改或未编译，Truffle 会自动执行编译。因此，在以下情况下，您可以不手动执行编译命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合约未编译&lt;/strong&gt;：当您修改了合约后，执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时会自动编译。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合约已经是最新&lt;/strong&gt;：如果合约未更改并且已经编译，则可以直接执行迁移命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;如何确认编译状态&#34;&gt;&lt;a href=&#34;#如何确认编译状态&#34; class=&#34;headerlink&#34; title=&#34;如何确认编译状态&#34;&gt;&lt;/a&gt;如何确认编译状态&lt;/h4&gt;&lt;p&gt;如果您不确定合约是否已经编译，可以检查 &lt;code&gt;build/contracts&lt;/code&gt; 目录。编译后，该目录下应该会生成合约的 JSON 文件（包含字节码和 ABI）。例如，&lt;code&gt;MyContract.json&lt;/code&gt; 文件中应该有相关信息。&lt;/p&gt;
&lt;p&gt;如果您希望在每次部署时都重新编译合约，可以在 &lt;code&gt;migrate&lt;/code&gt; 命令中使用 &lt;code&gt;--compile-all&lt;/code&gt; 参数，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate --compile-all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将强制 Truffle 重新编译所有合约。&lt;/p&gt;
&lt;h3 id=&#34;启动-Geth-节点&#34;&gt;&lt;a href=&#34;#启动-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;启动 Geth 节点&#34;&gt;&lt;/a&gt;启动 Geth 节点&lt;/h3&gt;&lt;p&gt;在 Geth 的命令行窗口中，启动您的节点，使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8545&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;解锁账户-2&#34;&gt;&lt;a href=&#34;#解锁账户-2&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，解锁您的账户（假设 &lt;code&gt;user1&lt;/code&gt; 是您的账户地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your_password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果已经正确地解锁了账户,你会看到部署过程停止在某个状态&lt;/p&gt;
&lt;p&gt;这是因为 truffle 在等待部署交易提交,但是我们在私链中还没有启动挖矿。  现在切换回 geth 终端窗口,查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
pending:1,  
queued:0  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有一个挂起的交易&lt;/p&gt;
&lt;h3 id=&#34;启动挖矿-1&#34;&gt;&lt;a href=&#34;#启动挖矿-1&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;稍等小会儿,再查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  pending:0,  queued:0  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;交易已经成功提交了&lt;/p&gt;
&lt;h3 id=&#34;部署合约&#34;&gt;&lt;a href=&#34;#部署合约&#34; class=&#34;headerlink&#34; title=&#34;部署合约&#34;&gt;&lt;/a&gt;部署合约&lt;/h3&gt;&lt;p&gt;在项目目录中，使用以下命令部署合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;检查部署结果&#34;&gt;&lt;a href=&#34;#检查部署结果&#34; class=&#34;headerlink&#34; title=&#34;检查部署结果&#34;&gt;&lt;/a&gt;检查部署结果&lt;/h3&gt;&lt;p&gt;部署完成后，您可以查看终端输出中的合约地址和交易哈希，确认合约是否成功部署。&lt;/p&gt;
&lt;h3 id=&#34;与合约交互&#34;&gt;&lt;a href=&#34;#与合约交互&#34; class=&#34;headerlink&#34; title=&#34;与合约交互&#34;&gt;&lt;/a&gt;与合约交互&lt;/h3&gt;&lt;p&gt;在合约部署后，您可以使用 Truffle 控制台与合约进行交互：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动 Truffle 控制台：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle console &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在控制台中，获取合约实例并与其交互：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContract&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; currentMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出当前消息&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;New Message&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 更新消息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; updatedMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;updatedMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出更新后的消息&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;启动-DApp&#34;&gt;&lt;a href=&#34;#启动-DApp&#34; class=&#34;headerlink&#34; title=&#34;启动 DApp&#34;&gt;&lt;/a&gt;启动 DApp&lt;/h3&gt;&lt;p&gt;执行以下命令来启动 DApp:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run dev  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器里访问 &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080&lt;/a&gt; 即可&lt;/p&gt;
&lt;p&gt;如果你希望从别的机器也可以访问你的 DApp 应用,修改一下 &lt;code&gt;package.json&lt;/code&gt;:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
	scripts:&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    	&lt;span class=&#34;token string&#34;&gt;&#34;dev&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;webpack-dev-server –-host 0.0.0.0&#34;&lt;/span&gt; 
    	&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;四、命令详解&#34;&gt;&lt;a href=&#34;#四、命令详解&#34; class=&#34;headerlink&#34; title=&#34;四、命令详解&#34;&gt;&lt;/a&gt;四、命令详解&lt;/h2&gt;&lt;h3 id=&#34;1-Geth-命令行选项&#34;&gt;&lt;a href=&#34;#1-Geth-命令行选项&#34; class=&#34;headerlink&#34; title=&#34;1. Geth 命令行选项&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Geth 命令行选项&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在启动 Geth 时使用的，用来配置节点行为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–datadir&lt;/strong&gt;：指定数据目录，所有区块链和配置数据将保存在此目录中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–networkid&lt;/strong&gt;：选择要加入的网络 ID，避免连接到错误的链。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–port&lt;/strong&gt;：指定节点的P2P通信端口（默认是 30303）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–nodiscover&lt;/strong&gt;：禁用节点自动发现，防止自动连接其他节点（常用于私有网络）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–maxpeers&lt;/strong&gt;：设置最多连接的节点数（默认 25）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–mine&lt;/strong&gt;：启动节点时立即开始挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–minerthreads&lt;/strong&gt;：设置挖矿使用的线程数量（默认为 1）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–etherbase&lt;/strong&gt;：指定挖矿奖励接收的以太坊地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; 0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpc&lt;/strong&gt;：启用 HTTP-RPC 接口，允许通过 HTTP 与节点交互。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcaddr&lt;/strong&gt;：指定 HTTP-RPC 接口监听的地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcport&lt;/strong&gt;：指定 HTTP-RPC 端口。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpccorsdomain&lt;/strong&gt;：指定允许通过 CORS（跨域资源共享）访问的域，通常设置为 &lt;code&gt;*&lt;/code&gt; 允许所有域。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcapi&lt;/strong&gt;：指定允许通过 RPC 接口调用的 API 模块（例如 &lt;code&gt;eth&lt;/code&gt;, &lt;code&gt;net&lt;/code&gt;, &lt;code&gt;web3&lt;/code&gt;）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–syncmode&lt;/strong&gt;：设置节点的同步模式，常用的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fast&lt;/code&gt;（默认，快速同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;（完全同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;light&lt;/code&gt;（轻节点，只下载区块头）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--syncmode&lt;/span&gt; fast&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–ipcdisable&lt;/strong&gt;：禁用 Geth 的 IPC-RPC 通信接口（默认启用 IPC）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--ipcdisable&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-Geth-控制台命令&#34;&gt;&lt;a href=&#34;#2-Geth-控制台命令&#34; class=&#34;headerlink&#34; title=&#34;2. Geth 控制台命令&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;Geth 控制台命令&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在 Geth 启动并进入控制台时使用的，或者通过 &lt;code&gt;geth attach&lt;/code&gt; 来附加到已运行的节点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.syncing&lt;/strong&gt;：查看节点是否在同步，并返回同步状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syncing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.blockNumber&lt;/strong&gt;：获取当前节点的区块高度。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBlock(blockNumber)**：查看某个区块的信息（例如查看最新区块）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBalance(address)**：查看某个地址的余额。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.start(threads)**：启动挖矿，并指定使用的线程数（例如 1 个线程）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.stop()**：停止挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.newAccount(password)**：创建新账户，并设置密码。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.unlockAccount(address, password)**：解锁指定账户，允许在一段时间内使用账户进行交易。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;admin.peers&lt;/strong&gt;：查看当前连接的节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**admin.addPeer(enodeURL)**：手动添加一个节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;net.peerCount&lt;/strong&gt;：查看连接的节点数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;txpool.status&lt;/strong&gt;：查看交易池的状态，包含等待和挂起的交易数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**debug.verbosity(level)**：设置日志的详细程度（0 为最少，5 为最多）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;debug&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;verbosity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**web3.sha3(string)**：计算字符串的 Keccak-256 哈希。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sha3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.sendTransaction({from: sender, to: receiver, value: amount})**：发送交易（注意单位为 Wei）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xReceiverAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些命令涵盖了Geth在日常使用中的常见需求，包括节点管理、账户管理、挖矿、网络连接、交易等。你可以根据自己的需求组合使用。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
