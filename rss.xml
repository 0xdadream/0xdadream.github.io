<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Sat, 28 Sep 2024 21:25:00 +0800</pubDate>
        <lastBuildDate>Sat, 28 Sep 2024 21:25:00 +0800</lastBuildDate>
        <category>tip</category>
        <category>安装</category>
        <category>re</category>
        <category>工具</category>
        <category>Java</category>
        <category>linux</category>
        <category>教程</category>
        <category>web</category>
        <category>wp</category>
        <category>攻防世界</category>
        <category>BUUCTF</category>
        <category>windows</category>
        <category>server</category>
        <category>bug</category>
        <category>环境</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>tips</category>
        <category>git</category>
        <category>java</category>
        <category>学习</category>
        <category>命令</category>
        <category>tools</category>
        <category>文件上传</category>
        <category>php</category>
        <category>python</category>
        <category>汇编</category>
        <category>i春秋</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/</guid>
            <title>zotero 7安装以及使用</title>
            <link>https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/</link>
            <category>tools</category>
            <pubDate>Sat, 28 Sep 2024 21:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;zotero-7安装以及使用&#34;&gt;&lt;a href=&#34;#zotero-7安装以及使用&#34; class=&#34;headerlink&#34; title=&#34;zotero 7安装以及使用&#34;&gt;&lt;/a&gt;zotero 7安装以及使用&lt;/h1&gt;&lt;h2 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;访问官网&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;打开浏览器，访问 &lt;a href=&#34;https://www.zotero.org/&#34;&gt;Zotero官网&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下载 Zotero&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;点击页面上的“Download”按钮。&lt;/li&gt;
&lt;li&gt;根据你的操作系统选择相应的版本（Windows、macOS、Linux）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装 Zotero&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;Windows：&lt;ul&gt;
&lt;li&gt;下载完成后，双击下载的 &lt;code&gt;.exe&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;按照提示进行安装，完成后在开始菜单中找到Zotero。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;macOS：&lt;ul&gt;
&lt;li&gt;下载 &lt;code&gt;.dmg&lt;/code&gt; 文件后，双击打开。&lt;/li&gt;
&lt;li&gt;将Zotero图标拖动到“应用程序”文件夹中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux：&lt;ul&gt;
&lt;li&gt;根据你的发行版选择合适的安装方式（如使用包管理器或手动解压）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;设置同步&#34;&gt;&lt;a href=&#34;#设置同步&#34; class=&#34;headerlink&#34; title=&#34;设置同步&#34;&gt;&lt;/a&gt;设置同步&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创建 Zotero 账户&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果还没有账户，访问 &lt;a href=&#34;https://www.zotero.org/&#34;&gt;Zotero官网&lt;/a&gt; 并点击“注册”以创建一个新账户。填写所需信息并确认电子邮件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进入首选项&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击菜单栏中的“编辑”（Windows）或“Zotero”（macOS）。&lt;/li&gt;
&lt;li&gt;选择“设置”以打开设置窗口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;设置同步&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在设置窗口中，选择“同步”选项卡。&lt;/li&gt;
&lt;li&gt;在“账户”部分，输入你的 Zotero 账户邮箱和密码。&lt;/li&gt;
&lt;li&gt;点击“验证”以确保信息正确。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;启用同步&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;勾选“自动同步”选项。这将允许 Zotero 在你添加或修改文献时自动进行同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;手动同步&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Zotero 界面的右上角，有一个绿色的同步图标（两个旋转的箭头）。点击它可以手动触发同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设置同步到坚果云&#34;&gt;&lt;a href=&#34;#设置同步到坚果云&#34; class=&#34;headerlink&#34; title=&#34;设置同步到坚果云&#34;&gt;&lt;/a&gt;设置同步到坚果云&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先在坚果云里为Zotero设置应用密码，在坚果云官网登录你的坚果云账号后打开【账户信息】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%BD%91%E9%A1%B5%E7%AB%AF%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF.png&#34; alt=&#34;账户信息&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择【安全选项】-【添加应用密码】-输入名称-【生成密码】，这个密码就是后面会在zoteor里需要输入的专门的应用密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%89%E5%85%A8%E9%80%89%E9%A1%B9-1.png&#34; alt=&#34;安全选项&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%94%9F%E6%88%90%E5%AF%86%E7%A0%81.png&#34; alt=&#34;密码&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%8C%E6%88%90%E5%AF%86%E7%A0%81.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开Zotero，选择【工具】-【首选项】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg&#34; alt=&#34;QQ截图20170601102448&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开【同步】，&lt;strong&gt;Zotero同步服务器&lt;/strong&gt;里登录的是你的Zotero账号和密码，在下面的&lt;strong&gt;文件同步&lt;/strong&gt;里选择使用【WebDav】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg&#34; alt=&#34;QQ截图20170601102548&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在这里填写你的坚果云的服务器地址：&lt;a href=&#34;https://dav.jianguoyun.com/dav/%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D%E6%98%AF%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%AF%86%E7%A0%81%E6%98%AF%E4%B8%80%E5%BC%80%E5%A7%8B%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%EF%BC%88%E9%9D%9E%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%EF%BC%89%EF%BC%8C%E8%AE%BE%E7%BD%AE%E5%A5%BD%E5%90%8E%E9%80%89%E6%8B%A9ok%E5%8D%B3%E5%8F%AF%E3%80%82&#34;&gt;https://dav.jianguoyun.com/dav/，用户名是坚果云账号，密码是一开始设置的应用密码（非坚果云账号登录密码），设置好后选择ok即可。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg&#34; alt=&#34;QQ截图20170601103235&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回到首页，点击右边的绿色的圈就可以同步更新，如果是第一次设置，会提示在坚果云里自动创建一个名叫：zotero的文件夹，用于存放同步更新的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg&#34; alt=&#34;QQ截图20170601141516&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;插件安装推荐&#34;&gt;&lt;a href=&#34;#插件安装推荐&#34; class=&#34;headerlink&#34; title=&#34;插件安装推荐&#34;&gt;&lt;/a&gt;插件安装推荐&lt;/h2&gt;&lt;h3 id=&#34;zotero-style&#34;&gt;&lt;a href=&#34;#zotero-style&#34; class=&#34;headerlink&#34; title=&#34;zotero-style&#34;&gt;&lt;/a&gt;zotero-style&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/MuiseDestiny/zotero-style&#34;&gt;MuiseDestiny/zotero-style: Ethereal Style for Zotero (github.com)&lt;/a&gt;这是一个多彩的插件，用于增强 Zotero 的界面功能&lt;/p&gt;
&lt;h3 id=&#34;zotero-pdf-translate&#34;&gt;&lt;a href=&#34;#zotero-pdf-translate&#34; class=&#34;headerlink&#34; title=&#34;zotero-pdf-translate&#34;&gt;&lt;/a&gt;zotero-pdf-translate&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/windingwind/zotero-pdf-translate&#34;&gt;windingwind/zotero-pdf-translate: Translate PDF, EPub, webpage, metadata, annotations, notes to the target language. Support 20+ translate services. (github.com)&lt;/a&gt;深度适配 Zotero 阅读器的翻译插件&lt;/p&gt;
&lt;h3 id=&#34;jasminum&#34;&gt;&lt;a href=&#34;#jasminum&#34; class=&#34;headerlink&#34; title=&#34;jasminum&#34;&gt;&lt;/a&gt;jasminum&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/l0o0/jasminum&#34;&gt;l0o0/jasminum: A Zotero add-on to retrive CNKI meta data. 一个简单的Zotero 插件，用于识别中文元数据 (github.com)&lt;/a&gt;这个插件用来增强 Zotero 对中文文献的支持能力，包括自动更新中文 translators、根据中文文献名检索其元数据等。&lt;/p&gt;
&lt;h3 id=&#34;绿青蛙&#34;&gt;&lt;a href=&#34;#绿青蛙&#34; class=&#34;headerlink&#34; title=&#34;绿青蛙&#34;&gt;&lt;/a&gt;绿青蛙&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/redleafnew/zotero-updateifsE&#34;&gt;redleafnew/zotero-updateifsE: Green Frog https://github.com/redleafnew/zotero-updateifs 的easyScholar数据版。更新影响因子，其他一系列工具，详见Readme&lt;/a&gt;easyScholar数据版，显示更多期刊信息，详细使用见链接&lt;/p&gt;
&lt;h3 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://zotero-chinese.com/user-guide/&#34;&gt;Zotero 百科全书 | Zotero 中文社区 (zotero-chinese.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://help.jianguoyun.com/?p=3168&#34;&gt;如何在Zotero中设置webdav连接到坚果云？ | 坚果云帮助中心 (jianguoyun.com)&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/09/28/word-cha-ru-ye-ma-bu-bao-gua-feng-mian-mu-lu/</guid>
            <title>word插入页码不包括封面目录</title>
            <link>https://0xdadream.github.io/2024/09/28/word-cha-ru-ye-ma-bu-bao-gua-feng-mian-mu-lu/</link>
            <category>tips</category>
            <pubDate>Sat, 28 Sep 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;word插入页码不包括封面目录&#34;&gt;&lt;a href=&#34;#word插入页码不包括封面目录&#34; class=&#34;headerlink&#34; title=&#34;word插入页码不包括封面目录&#34;&gt;&lt;/a&gt;word插入页码不包括封面目录&lt;/h1&gt;&lt;p&gt;依次点击布局-&amp;gt;分隔符-&amp;gt;下一页&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/a0b6e41e8d3413096926bdd4b12714b8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后插入-&amp;gt;页码-&amp;gt;顶或底-&amp;gt;随便一模版（插入时最后为正文首页）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/79a5d330c3b43502e3abeba5cab7c086.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击链接到前一页关闭它&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/24470b6e67ffdebaf3afad9d80eb854e.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后设置页码格式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/a9d2b79c6d838f63ac4cbdffcf59bacc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，然后更新目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/b7693230771f988cd378852cd8d09011.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/</guid>
            <title>windows安装软件时中文乱码</title>
            <link>https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/</link>
            <category>bug</category>
            <pubDate>Sat, 21 Sep 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;windows安装软件时中文乱码&#34;&gt;&lt;a href=&#34;#windows安装软件时中文乱码&#34; class=&#34;headerlink&#34; title=&#34;windows安装软件时中文乱码&#34;&gt;&lt;/a&gt;windows安装软件时中文乱码&lt;/h1&gt;&lt;p&gt;启动控制面板，将查看方式调整为 “大图标”。点击 “区域”&amp;gt;“管理”&amp;gt;“更改系统区域设置”，确认 “当前系统区域设置” 为中文 (简体，中国)，如果下方的复选框为勾选状态，请取消勾选。如果未勾选，请将复选框勾选。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/18/finalshell-gai-zi-ti/</guid>
            <title>finalshell改字体</title>
            <link>https://0xdadream.github.io/2024/08/18/finalshell-gai-zi-ti/</link>
            <category>tips</category>
            <pubDate>Sun, 18 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;finalshell改字体&#34;&gt;&lt;a href=&#34;#finalshell改字体&#34; class=&#34;headerlink&#34; title=&#34;finalshell改字体&#34;&gt;&lt;/a&gt;finalshell改字体&lt;/h1&gt;&lt;p&gt;右上角点击选项-&amp;gt;弹出对话框选择字体，点击就可修改了&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</guid>
            <title>SDKMAN教程</title>
            <link>https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</link>
            <category>教程</category>
            <pubDate>Thu, 15 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SDKMAN教程&#34;&gt;&lt;a href=&#34;#SDKMAN教程&#34; class=&#34;headerlink&#34; title=&#34;SDKMAN教程&#34;&gt;&lt;/a&gt;SDKMAN教程&lt;/h1&gt;&lt;h3 id=&#34;1-安装-Git-Bash&#34;&gt;&lt;a href=&#34;#1-安装-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Git Bash&#34;&gt;&lt;/a&gt;1. 安装 Git Bash&lt;/h3&gt;&lt;p&gt;首先，确保你已经安装了 Git Bash。如果还没有，可以从 &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 下载并安装。&lt;/p&gt;
&lt;h3 id=&#34;2-使用-Git-Bash-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#2-使用-Git-Bash-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Git Bash 安装 SDKMAN!&#34;&gt;&lt;/a&gt;2. 使用 Git Bash 安装 SDKMAN!&lt;/h3&gt;&lt;h4 id=&#34;步骤-1-打开-Git-Bash&#34;&gt;&lt;a href=&#34;#步骤-1-打开-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 打开 Git Bash&#34;&gt;&lt;/a&gt;步骤 1: 打开 Git Bash&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在 Windows 上，右键点击桌面或文件夹空白处，选择 &lt;code&gt;Git Bash Here&lt;/code&gt;，打开 Git Bash 终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;步骤-2-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#步骤-2-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 安装 SDKMAN!&#34;&gt;&lt;/a&gt;步骤 2: 安装 SDKMAN!&lt;/h4&gt;&lt;p&gt;在 Git Bash 中执行以下命令来安装 SDKMAN!：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https://get.sdkman.io&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装完成后，执行以下命令加载 SDKMAN!：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/bin/sdkman-init.sh&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-3-验证安装&#34;&gt;&lt;a href=&#34;#步骤-3-验证安装&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 验证安装&#34;&gt;&lt;/a&gt;步骤 3: 验证安装&lt;/h4&gt;&lt;p&gt;输入以下命令，确认 SDKMAN! 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-使用-SDKMAN-安装-Java&#34;&gt;&lt;a href=&#34;#3-使用-SDKMAN-安装-Java&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 SDKMAN! 安装 Java&#34;&gt;&lt;/a&gt;3. 使用 SDKMAN! 安装 Java&lt;/h3&gt;&lt;h4 id=&#34;安装-Java-版本&#34;&gt;&lt;a href=&#34;#安装-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;安装 Java 版本&#34;&gt;&lt;/a&gt;安装 Java 版本&lt;/h4&gt;&lt;p&gt;你可以使用 SDKMAN! 安装你需要的 Java 版本，例如 Java 17：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;设置默认-Java-版本&#34;&gt;&lt;a href=&#34;#设置默认-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;设置默认 Java 版本&#34;&gt;&lt;/a&gt;设置默认 Java 版本&lt;/h4&gt;&lt;p&gt;安装完成后，将 Java 17 设置为默认版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk default &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-配置系统环境变量（全局可用）&#34;&gt;&lt;a href=&#34;#4-配置系统环境变量（全局可用）&#34; class=&#34;headerlink&#34; title=&#34;4. 配置系统环境变量（全局可用）&#34;&gt;&lt;/a&gt;4. 配置系统环境变量（全局可用）&lt;/h3&gt;&lt;p&gt;为了让其他 Shell（如 PowerShell、CMD）也能使用 SDKMAN! 安装的 Java，需要将 Java 的路径添加到系统环境变量中。&lt;/p&gt;
&lt;h4 id=&#34;步骤-1-查找-Java-安装路径&#34;&gt;&lt;a href=&#34;#步骤-1-查找-Java-安装路径&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 查找 Java 安装路径&#34;&gt;&lt;/a&gt;步骤 1: 查找 Java 安装路径&lt;/h4&gt;&lt;p&gt;首先，找到 SDKMAN! 安装的 Java 版本路径。一般位于 &lt;code&gt;$HOME/.sdkman/candidates/java/current/bin&lt;/code&gt;，具体路径可以通过以下命令在 Git Bash 中查看：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/candidates/java/current/bin&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会输出类似于以下的路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/c/Users/YourUsername/.sdkman/candidates/java/current/bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-2-打开系统环境变量设置&#34;&gt;&lt;a href=&#34;#步骤-2-打开系统环境变量设置&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 打开系统环境变量设置&#34;&gt;&lt;/a&gt;步骤 2: 打开系统环境变量设置&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;右键点击 “此电脑” 或 “计算机”，选择 “属性”。&lt;/li&gt;
&lt;li&gt;在左侧点击 “高级系统设置”。&lt;/li&gt;
&lt;li&gt;在弹出的窗口中，点击 “环境变量” 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;步骤-3-添加-Java-路径到系统-PATH&#34;&gt;&lt;a href=&#34;#步骤-3-添加-Java-路径到系统-PATH&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 添加 Java 路径到系统 PATH&#34;&gt;&lt;/a&gt;步骤 3: 添加 Java 路径到系统 &lt;code&gt;PATH&lt;/code&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在系统变量下，找到 &lt;code&gt;Path&lt;/code&gt; 变量并点击 “编辑”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “新建”，并添加以下路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Users&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;YourUsername&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;.sdkman&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;candidates&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;current&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “确定” 关闭所有窗口。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-验证配置&#34;&gt;&lt;a href=&#34;#5-验证配置&#34; class=&#34;headerlink&#34; title=&#34;5. 验证配置&#34;&gt;&lt;/a&gt;5. 验证配置&lt;/h3&gt;&lt;p&gt;关闭所有打开的终端，然后重新打开 CMD、PowerShell 或其他终端，输入以下命令，确认 Java 版本是否正确配置：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果看到安装的 Java 版本信息，说明配置成功。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/15/java-ban-ben/</guid>
            <title>Java版本</title>
            <link>https://0xdadream.github.io/2024/08/15/java-ban-ben/</link>
            <category>Java</category>
            <pubDate>Thu, 15 Aug 2024 02:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Java版本&#34;&gt;&lt;a href=&#34;#Java版本&#34; class=&#34;headerlink&#34; title=&#34;Java版本&#34;&gt;&lt;/a&gt;Java版本&lt;/h1&gt;&lt;p&gt;理解 Java 的版本号、JDK（Java Development Kit），以及相关的概念。下面是对这些概念的详细解释，以及它们之间的区别和作用。&lt;/p&gt;
&lt;h2 id=&#34;1-Java-版本号&#34;&gt;&lt;a href=&#34;#1-Java-版本号&#34; class=&#34;headerlink&#34; title=&#34;1. Java 版本号&#34;&gt;&lt;/a&gt;1. Java 版本号&lt;/h2&gt;&lt;p&gt;Java 版本号标识了 Java 语言和平台的特定版本，每个版本都引入了新的特性、改进和修复。Java 版本号的格式通常是 **&lt;code&gt;&amp;lt;主版本&amp;gt;.&amp;lt;次版本&amp;gt;.&amp;lt;更新版本&amp;gt;&lt;/code&gt;**。&lt;/p&gt;
&lt;h4 id=&#34;版本号的构成&#34;&gt;&lt;a href=&#34;#版本号的构成&#34; class=&#34;headerlink&#34; title=&#34;版本号的构成&#34;&gt;&lt;/a&gt;版本号的构成&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;标识大的版本更新。主版本通常代表语言、平台或 API 级别的重大变化。例如，Java 8、Java 11、Java 17 等都是主版本。&lt;/li&gt;
&lt;li&gt;Java 版本号从 1.x 系列（如 1.0、1.2、1.4、1.5）过渡到直接使用主版本号（如 8、11、17），1.5 对应的是 Java 5。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;次版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;次版本通常是更细粒度的更新，可能引入一些小的特性、性能改进或者 API 变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;更新版本通常是针对安全性和漏洞修复的补丁版本。例如，Java 11.0.2 代表 Java 11 的第二次更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-JDK（Java-Development-Kit）&#34;&gt;&lt;a href=&#34;#2-JDK（Java-Development-Kit）&#34; class=&#34;headerlink&#34; title=&#34;2. JDK（Java Development Kit）&#34;&gt;&lt;/a&gt;2. JDK（Java Development Kit）&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JDK&lt;/strong&gt; 是开发 Java 应用程序的工具包，它包含了一系列工具、库和编译器，用于开发、编译、调试和运行 Java 应用程序。JDK 是 Java 的核心组件之一，也是每个 Java 开发者必须安装的工具。&lt;/p&gt;
&lt;h4 id=&#34;JDK-的主要组成部分&#34;&gt;&lt;a href=&#34;#JDK-的主要组成部分&#34; class=&#34;headerlink&#34; title=&#34;JDK 的主要组成部分&#34;&gt;&lt;/a&gt;JDK 的主要组成部分&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 编译器 (&lt;code&gt;javac&lt;/code&gt;)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;编译 Java 源代码（&lt;code&gt;.java&lt;/code&gt; 文件）为字节码（&lt;code&gt;.class&lt;/code&gt; 文件）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 虚拟机 (&lt;code&gt;java&lt;/code&gt;)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;执行编译后的字节码，使得 Java 应用程序可以跨平台运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标准类库&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;包含 Java API 提供的标准类库，如集合框架、I/O 操作、网络编程等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发工具&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;包括调试工具（&lt;code&gt;jdb&lt;/code&gt;）、文档生成工具（&lt;code&gt;javadoc&lt;/code&gt;）、打包工具（&lt;code&gt;jar&lt;/code&gt;）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-JDK-与-JRE-的区别&#34;&gt;&lt;a href=&#34;#3-JDK-与-JRE-的区别&#34; class=&#34;headerlink&#34; title=&#34;3. JDK 与 JRE 的区别&#34;&gt;&lt;/a&gt;3. JDK 与 JRE 的区别&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JRE&lt;/strong&gt;（Java Runtime Environment）是 Java 运行环境，它是 JDK 的一个子集，包含 JVM 和标准类库，用于运行 Java 应用程序，但不包括编译器和开发工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JDK&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;包含 JRE，用于开发和运行 Java 应用程序。&lt;/li&gt;
&lt;li&gt;适用于开发者。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JRE&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;仅用于运行 Java 应用程序。&lt;/li&gt;
&lt;li&gt;适用于最终用户或运行环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-Java-SE-Java-EE-Java-ME-的区别&#34;&gt;&lt;a href=&#34;#4-Java-SE-Java-EE-Java-ME-的区别&#34; class=&#34;headerlink&#34; title=&#34;4. Java SE, Java EE, Java ME 的区别&#34;&gt;&lt;/a&gt;4. Java SE, Java EE, Java ME 的区别&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java SE (Standard Edition)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Java 标准版，包含了开发常规桌面和服务器应用程序所需的基础功能。大多数 Java 开发者都使用 Java SE。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java EE (Enterprise Edition)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Java 企业版，基于 Java SE，添加了用于开发大规模分布式企业应用的额外功能，如 Web 服务、企业 JavaBeans (EJB)、Servlets、JSP 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java ME (Micro Edition)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Java 微型版，专为嵌入式设备、移动设备和小型设备设计，包含适应这些设备的特定功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5-版本区别与用途&#34;&gt;&lt;a href=&#34;#5-版本区别与用途&#34; class=&#34;headerlink&#34; title=&#34;5. 版本区别与用途&#34;&gt;&lt;/a&gt;5. 版本区别与用途&lt;/h2&gt;&lt;p&gt;每个 Java 版本都会引入新的特性和改进，因此理解不同版本的区别对选择合适的开发环境非常重要。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 8 (LTS)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;被广泛使用的 LTS 版本，引入了 Lambda 表达式、Stream API、默认方法等关键特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 11 (LTS)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;继 Java 8 之后的另一个 LTS 版本，引入了新的 HTTP Client API、局部变量类型推断 (&lt;code&gt;var&lt;/code&gt;) 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 17 (LTS)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;最新的 LTS 版本，包含了大量的新特性和改进，如封闭类、增强的 Switch 表达式等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非 LTS 版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;这些版本在发布后的短期内得到支持，主要用于引入和测试新特性。如 Java 9、10、12、13 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-常见的-JDK-实现及其特点&#34;&gt;&lt;a href=&#34;#6-常见的-JDK-实现及其特点&#34; class=&#34;headerlink&#34; title=&#34;6. 常见的 JDK 实现及其特点&#34;&gt;&lt;/a&gt;6. 常见的 JDK 实现及其特点&lt;/h2&gt;&lt;h3 id=&#34;1-Oracle-JDK&#34;&gt;&lt;a href=&#34;#1-Oracle-JDK&#34; class=&#34;headerlink&#34; title=&#34;1. Oracle JDK&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Oracle JDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Oracle JDK&lt;/strong&gt; 是 Oracle 公司官方发布的 Java 开发工具包，是 Java SE（Standard Edition）的参考实现。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;商业版（从 JDK 11 开始），需要商业许可证用于生产环境，但开发和测试用途免费。&lt;/li&gt;
&lt;li&gt;定期更新和安全修补。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;LTS（长期支持）版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;非 LTS 版本：12、13、14、15、16、18、19 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-OpenJDK&#34;&gt;&lt;a href=&#34;#2-OpenJDK&#34; class=&#34;headerlink&#34; title=&#34;2. OpenJDK&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;OpenJDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenJDK&lt;/strong&gt; 是一个开源的 JDK 实现，由 Oracle 和其他社区成员共同维护，是 Oracle JDK 的基础。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;开源且免费使用。&lt;/li&gt;
&lt;li&gt;与 Oracle JDK 基本相同，但可能缺少一些商业特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;和 Oracle JDK 同步的版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供最新的非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-Adoptium-Eclipse-Temurin&#34;&gt;&lt;a href=&#34;#3-Adoptium-Eclipse-Temurin&#34; class=&#34;headerlink&#34; title=&#34;3. Adoptium (Eclipse Temurin)&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;Adoptium (Eclipse Temurin)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Adoptium&lt;/strong&gt; 前身为 AdoptOpenJDK，现在由 Eclipse 基金会管理。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;社区驱动的开源 JDK 发行版。&lt;/li&gt;
&lt;li&gt;提供高质量的二进制构建，适用于不同平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-Amazon-Corretto&#34;&gt;&lt;a href=&#34;#4-Amazon-Corretto&#34; class=&#34;headerlink&#34; title=&#34;4. Amazon Corretto&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;Amazon Corretto&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Amazon Corretto&lt;/strong&gt; 是由亚马逊发布的免费、开源的 JDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;亚马逊维护，包含长时间的支持和性能改进。&lt;/li&gt;
&lt;li&gt;完全兼容 OpenJDK。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;提供 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-Azul-Zulu&#34;&gt;&lt;a href=&#34;#5-Azul-Zulu&#34; class=&#34;headerlink&#34; title=&#34;5. Azul Zulu&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;Azul Zulu&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Azul Zulu&lt;/strong&gt; 是由 Azul 公司发布的一个商业支持的 OpenJDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;商业支持，适用于企业环境。&lt;/li&gt;
&lt;li&gt;提供与不同平台兼容的版本，包括 Windows、Linux、macOS 和嵌入式系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-GraalVM&#34;&gt;&lt;a href=&#34;#6-GraalVM&#34; class=&#34;headerlink&#34; title=&#34;6. GraalVM&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;GraalVM&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GraalVM&lt;/strong&gt; 是 Oracle 提供的一个高性能、可扩展的 Java 虚拟机，它也是一个多语言开发环境。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;支持多语言运行时，包括 Java、JavaScript、Python、Ruby 等。&lt;/li&gt;
&lt;li&gt;提供本机映像生成（Native Image）功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;基于 OpenJDK 构建，版本与 OpenJDK 保持一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-Red-Hat-OpenJDK&#34;&gt;&lt;a href=&#34;#7-Red-Hat-OpenJDK&#34; class=&#34;headerlink&#34; title=&#34;7. Red Hat OpenJDK&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;Red Hat OpenJDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Red Hat OpenJDK&lt;/strong&gt; 是由 Red Hat 提供的 OpenJDK 构建，主要针对企业级应用。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;提供商业支持和长期支持。&lt;/li&gt;
&lt;li&gt;常用于 Red Hat Enterprise Linux（RHEL）环境中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-SAP-Machine&#34;&gt;&lt;a href=&#34;#8-SAP-Machine&#34; class=&#34;headerlink&#34; title=&#34;8. SAP Machine&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;SAP Machine&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SAP Machine&lt;/strong&gt; 是 SAP 发布的 OpenJDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;用于 SAP 产品和客户的支持环境。&lt;/li&gt;
&lt;li&gt;完全开源，兼容 OpenJDK。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-Liberica-JDK&#34;&gt;&lt;a href=&#34;#9-Liberica-JDK&#34; class=&#34;headerlink&#34; title=&#34;9. Liberica JDK&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;Liberica JDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Liberica JDK&lt;/strong&gt; 是由 BellSoft 发布的 OpenJDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;提供全功能 JDK，包括完整的 JavaFX 支持。&lt;/li&gt;
&lt;li&gt;提供不同平台和操作系统的兼容版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-SDK-Software-Development-Kit&#34;&gt;&lt;a href=&#34;#7-SDK-Software-Development-Kit&#34; class=&#34;headerlink&#34; title=&#34;7. SDK (Software Development Kit)&#34;&gt;&lt;/a&gt;7. SDK (Software Development Kit)&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;SDK&lt;/strong&gt; 是软件开发工具包（Software Development Kit）的缩写。它通常包括了一组开发工具、库、示例代码、文档和其他资源，帮助开发者构建应用程序。对于 JVM 生态系统中的 SDK，最常见的例子是 Java 开发工具包（&lt;strong&gt;JDK&lt;/strong&gt;，Java Development Kit）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK: JDK 是 Java 的官方 SDK，包含了开发 Java 应用程序所需的所有工具和库。JDK 中主要包括：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 编译器（javac）&lt;/strong&gt;: 用于将 Java 源代码编译成字节码（.class 文件）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 运行时环境（JRE）&lt;/strong&gt;: 包含 JVM 和标准 Java 类库，负责运行 Java 应用程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他工具&lt;/strong&gt;: 如 &lt;code&gt;javadoc&lt;/code&gt;（生成文档的工具）、&lt;code&gt;jdb&lt;/code&gt;（Java 调试器）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了 JDK，其他 JVM 语言（如 Scala、Kotlin）也有自己的 SDK，这些 SDK 提供了用于编译、运行和调试这些语言的工具。&lt;/p&gt;
&lt;h2 id=&#34;8-JVM-工具&#34;&gt;&lt;a href=&#34;#8-JVM-工具&#34; class=&#34;headerlink&#34; title=&#34;8. JVM 工具&#34;&gt;&lt;/a&gt;8. JVM 工具&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JVM 工具&lt;/strong&gt; 是指那些用于开发、管理和优化基于 JVM 的应用程序的工具。这些工具帮助开发者在 JVM 上构建和管理应用程序，包括编译、运行、调试、打包、依赖管理等方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JVM&lt;/strong&gt; 是 Java 程序的运行环境。Java 代码在编译器的帮助下转化为字节码，这些字节码由 JVM 来执行。JVM 为不同的操作系统提供了统一的运行环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java 程序跨平台性的实现依赖于 JVM。Java 编译器将源代码编译成与平台无关的字节码，JVM 则负责在不同平台上将字节码解释成机器码并执行。因此，只要平台有适配的 JVM，Java 程序就可以在上面运行，无需修改代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虽然 JVM 是为 Java 设计的，但由于它的通用性，其他语言（如 Scala、Kotlin、Groovy 等）也可以编译为 JVM 字节码，并在 JVM 上运行。因此，JVM 并不局限于 Java 语言，它已经发展为支持多种语言的强大平台。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/12/windows-chuang-jian-wen-jian/</guid>
            <title>windows创建文件</title>
            <link>https://0xdadream.github.io/2024/08/12/windows-chuang-jian-wen-jian/</link>
            <category>windows</category>
            <pubDate>Mon, 12 Aug 2024 03:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;windows创建文件&#34;&gt;&lt;a href=&#34;#windows创建文件&#34; class=&#34;headerlink&#34; title=&#34;windows创建文件&#34;&gt;&lt;/a&gt;windows创建文件&lt;/h1&gt;&lt;h3 id=&#34;1-使用-echo-命令&#34;&gt;&lt;a href=&#34;#1-使用-echo-命令&#34; class=&#34;headerlink&#34; title=&#34;1. 使用 echo 命令&#34;&gt;&lt;/a&gt;1. 使用 &lt;code&gt;echo&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;echo&lt;/code&gt; 命令将内容写入一个新的文件中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;echo 文件内容 &amp;gt; 文件名.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果文件已经存在，这个命令会覆盖原来的内容。&lt;/p&gt;
&lt;h3 id=&#34;2-使用-type-nul-命令&#34;&gt;&lt;a href=&#34;#2-使用-type-nul-命令&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 type nul 命令&#34;&gt;&lt;/a&gt;2. 使用 &lt;code&gt;type nul&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;这个命令可以创建一个空文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;type nul &amp;gt; 文件名.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-使用-copy-con-命令&#34;&gt;&lt;a href=&#34;#3-使用-copy-con-命令&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 copy con 命令&#34;&gt;&lt;/a&gt;3. 使用 &lt;code&gt;copy con&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;&lt;code&gt;copy con&lt;/code&gt; 可以创建文件并直接输入内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;copy con 文件名.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入完内容后，按 &lt;code&gt;Ctrl + Z&lt;/code&gt; 然后回车保存并退出。&lt;/p&gt;
&lt;h3 id=&#34;4-使用-fsutil-命令&#34;&gt;&lt;a href=&#34;#4-使用-fsutil-命令&#34; class=&#34;headerlink&#34; title=&#34;4. 使用 fsutil 命令&#34;&gt;&lt;/a&gt;4. 使用 &lt;code&gt;fsutil&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;&lt;code&gt;fsutil&lt;/code&gt; 可以创建指定大小的文件（以字节为单位）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;fsutil file createnew 文件名.txt 文件大小（以字节为单位）&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-使用-PowerShell-的-New-Item-cmdlet&#34;&gt;&lt;a href=&#34;#5-使用-PowerShell-的-New-Item-cmdlet&#34; class=&#34;headerlink&#34; title=&#34;5. 使用 PowerShell 的 New-Item cmdlet&#34;&gt;&lt;/a&gt;5. 使用 PowerShell 的 &lt;code&gt;New-Item&lt;/code&gt; cmdlet&lt;/h3&gt;&lt;p&gt;在PowerShell中，你可以使用 &lt;code&gt;New-Item&lt;/code&gt; 来创建文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;New-Item -Path .\文件名.txt -ItemType File&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/</guid>
            <title>conda安装及使用</title>
            <link>https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/</link>
            <category>环境</category>
            <pubDate>Mon, 12 Aug 2024 01:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;conda安装及使用&#34;&gt;&lt;a href=&#34;#conda安装及使用&#34; class=&#34;headerlink&#34; title=&#34;conda安装及使用&#34;&gt;&lt;/a&gt;conda安装及使用&lt;/h1&gt;&lt;h3 id=&#34;Conda-的安装&#34;&gt;&lt;a href=&#34;#Conda-的安装&#34; class=&#34;headerlink&#34; title=&#34;Conda 的安装&#34;&gt;&lt;/a&gt;Conda 的安装&lt;/h3&gt;&lt;h4 id=&#34;1-使用-Anaconda-安装&#34;&gt;&lt;a href=&#34;#1-使用-Anaconda-安装&#34; class=&#34;headerlink&#34; title=&#34;1. 使用 Anaconda 安装&#34;&gt;&lt;/a&gt;1. 使用 Anaconda 安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Anaconda&lt;/strong&gt; 是一个包含了 Python 和众多常用库（如 NumPy、Pandas、SciPy、Jupyter Notebook 等）的数据科学平台。它自带 &lt;code&gt;conda&lt;/code&gt;，适合需要完整数据科学工具包的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-使用-Miniconda-安装&#34;&gt;&lt;a href=&#34;#2-使用-Miniconda-安装&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Miniconda 安装&#34;&gt;&lt;/a&gt;2. 使用 Miniconda 安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Miniconda&lt;/strong&gt; 是一个轻量级安装包，只包含 &lt;code&gt;conda&lt;/code&gt; 和 Python，适合那些希望灵活选择并安装所需包的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;安装步骤：&#34;&gt;&lt;a href=&#34;#安装步骤：&#34; class=&#34;headerlink&#34; title=&#34;安装步骤：&#34;&gt;&lt;/a&gt;安装步骤：&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载 Miniconda 安装程序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 Miniconda 下载页面。&lt;/li&gt;
&lt;li&gt;选择适合你操作系统的版本（Windows、macOS、Linux）并下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装 Miniconda&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;：双击下载的 &lt;code&gt;.exe&lt;/code&gt; 文件并按照提示安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;macOS/Linux&lt;/p&gt;
&lt;p&gt;：在终端中运行下载的 .sh文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt; Miniconda3-latest-MacOSX-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt; Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加环境变量&lt;/p&gt;
&lt;p&gt;如果你在安装时未勾选添加 &lt;code&gt;conda&lt;/code&gt; 到 &lt;code&gt;PATH&lt;/code&gt; 环境变量，或者想手动添加，可以按照以下步骤进行：&lt;/p&gt;
&lt;h4 id=&#34;Windows&#34;&gt;&lt;a href=&#34;#Windows&#34; class=&#34;headerlink&#34; title=&#34;Windows&#34;&gt;&lt;/a&gt;Windows&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;打开环境变量设置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;右键点击“此电脑”或“我的电脑”，选择“属性”。&lt;/li&gt;
&lt;li&gt;点击“高级系统设置”。&lt;/li&gt;
&lt;li&gt;在“系统属性”窗口中，点击“环境变量”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编辑 &lt;code&gt;PATH&lt;/code&gt; 变量：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在“系统变量”或“用户变量”部分，找到并选中 &lt;code&gt;Path&lt;/code&gt; 变量，点击“编辑”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击“新建”，添加 Anaconda 或 Miniconda 的安装路径。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;&lt;span class=&#34;token target symbol&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;\Users\YourUsername\Anaconda3
&lt;span class=&#34;token target symbol&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;\Users\YourUsername\Anaconda3\Scripts
&lt;span class=&#34;token target symbol&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;\Users\YourUsername\Anaconda3\Library\bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存并退出设置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证配置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开命令提示符，运行 conda验证是否可用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;macOS-和-Linux&#34;&gt;&lt;a href=&#34;#macOS-和-Linux&#34; class=&#34;headerlink&#34; title=&#34;macOS 和 Linux&#34;&gt;&lt;/a&gt;macOS 和 Linux&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编辑 Shell 配置文件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开终端，编辑你的 shell 配置文件（如 &lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.zshrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt; 等）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加以下行到文件末尾：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/miniconda3/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果安装的是 Anaconda，将路径替换为 Anaconda 的安装路径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;刷新配置文件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;保存文件后，运行以下命令使更改生效：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.bashrc  &lt;span class=&#34;token comment&#34;&gt;# 或者 `source ~/.zshrc`，具体取决于你使用的 shell&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证配置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在终端运行 conda 验证是否可用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;初始化 conda&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装完成后，运行以下命令初始化 conda：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda init&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新启动终端，以确保初始化生效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;Conda-的使用&#34;&gt;&lt;a href=&#34;#Conda-的使用&#34; class=&#34;headerlink&#34; title=&#34;Conda 的使用&#34;&gt;&lt;/a&gt;Conda 的使用&lt;/h3&gt;&lt;h4 id=&#34;1-验证安装&#34;&gt;&lt;a href=&#34;#1-验证安装&#34; class=&#34;headerlink&#34; title=&#34;1. 验证安装&#34;&gt;&lt;/a&gt;1. 验证安装&lt;/h4&gt;&lt;p&gt;在终端或命令提示符中运行以下命令，查看 conda 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你应该看到类似 &lt;code&gt;conda 4.x.x&lt;/code&gt; 的输出，表明 conda 已成功安装。&lt;/p&gt;
&lt;h4 id=&#34;2-更新-Conda&#34;&gt;&lt;a href=&#34;#2-更新-Conda&#34; class=&#34;headerlink&#34; title=&#34;2. 更新 Conda&#34;&gt;&lt;/a&gt;2. 更新 Conda&lt;/h4&gt;&lt;p&gt;安装后，建议将 conda 更新到最新版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda update conda&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-创建新环境&#34;&gt;&lt;a href=&#34;#3-创建新环境&#34; class=&#34;headerlink&#34; title=&#34;3. 创建新环境&#34;&gt;&lt;/a&gt;3. 创建新环境&lt;/h4&gt;&lt;p&gt;使用以下命令创建一个新的 Python 环境（例如 &lt;code&gt;myenv&lt;/code&gt;），并指定 Python 版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; myenv &lt;span class=&#34;token assign-left variable&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.9&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为 &lt;code&gt;myenv&lt;/code&gt; 的新环境并安装 Python 3.9。&lt;/p&gt;
&lt;h4 id=&#34;4-激活环境&#34;&gt;&lt;a href=&#34;#4-激活环境&#34; class=&#34;headerlink&#34; title=&#34;4. 激活环境&#34;&gt;&lt;/a&gt;4. 激活环境&lt;/h4&gt;&lt;p&gt;创建环境后，使用以下命令激活它：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate myenv&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;激活环境后，命令提示符前缀将会显示当前激活的环境名称。&lt;/p&gt;
&lt;h4 id=&#34;5-安装包&#34;&gt;&lt;a href=&#34;#5-安装包&#34; class=&#34;headerlink&#34; title=&#34;5. 安装包&#34;&gt;&lt;/a&gt;5. 安装包&lt;/h4&gt;&lt;p&gt;在激活的环境中，使用以下命令安装所需包（例如 NumPy）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Conda 会自动处理包的依赖关系，并为你安装所有必要的依赖。&lt;/p&gt;
&lt;h4 id=&#34;6-列出已安装的包&#34;&gt;&lt;a href=&#34;#6-列出已安装的包&#34; class=&#34;headerlink&#34; title=&#34;6. 列出已安装的包&#34;&gt;&lt;/a&gt;6. 列出已安装的包&lt;/h4&gt;&lt;p&gt;使用以下命令查看当前环境中已安装的所有包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;7-更新包&#34;&gt;&lt;a href=&#34;#7-更新包&#34; class=&#34;headerlink&#34; title=&#34;7. 更新包&#34;&gt;&lt;/a&gt;7. 更新包&lt;/h4&gt;&lt;p&gt;使用以下命令更新特定包（例如 NumPy）到最新版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda update numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-删除包&#34;&gt;&lt;a href=&#34;#8-删除包&#34; class=&#34;headerlink&#34; title=&#34;8. 删除包&#34;&gt;&lt;/a&gt;8. 删除包&lt;/h4&gt;&lt;p&gt;若不再需要某个包，可以使用以下命令将其删除：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda remove numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;9-列出所有环境&#34;&gt;&lt;a href=&#34;#9-列出所有环境&#34; class=&#34;headerlink&#34; title=&#34;9. 列出所有环境&#34;&gt;&lt;/a&gt;9. 列出所有环境&lt;/h4&gt;&lt;p&gt;使用以下命令查看你创建的所有环境：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token function&#34;&gt;env&lt;/span&gt; list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-删除环境&#34;&gt;&lt;a href=&#34;#10-删除环境&#34; class=&#34;headerlink&#34; title=&#34;10. 删除环境&#34;&gt;&lt;/a&gt;10. 删除环境&lt;/h4&gt;&lt;p&gt;若不再需要某个环境，可以使用以下命令删除它：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;bconda remove &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; myenv &lt;span class=&#34;token parameter variable&#34;&gt;--all&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/</guid>
            <title>软链接和硬链接</title>
            <link>https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/</link>
            <category>命令</category>
            <pubDate>Sat, 10 Aug 2024 10:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;软链接和硬链接&#34;&gt;&lt;a href=&#34;#软链接和硬链接&#34; class=&#34;headerlink&#34; title=&#34;软链接和硬链接&#34;&gt;&lt;/a&gt;软链接和硬链接&lt;/h1&gt;&lt;p&gt;在Linux和Unix系统中，&lt;strong&gt;软链接&lt;/strong&gt;（符号链接，symbolic link，简称&lt;code&gt;symlink&lt;/code&gt;）和&lt;strong&gt;硬链接&lt;/strong&gt;（hard link）是两种用于指向文件或目录的方式。它们有不同的用途和行为。&lt;/p&gt;
&lt;h2 id=&#34;1-软链接（Symbolic-Link）&#34;&gt;&lt;a href=&#34;#1-软链接（Symbolic-Link）&#34; class=&#34;headerlink&#34; title=&#34;1. 软链接（Symbolic Link）&#34;&gt;&lt;/a&gt;1. 软链接（Symbolic Link）&lt;/h2&gt;&lt;p&gt;软链接类似于Windows中的快捷方式，它是一个指向另一个文件或目录的指针。创建软链接后，这个链接文件本身并不包含目标文件的数据，而是包含目标文件的路径。&lt;/p&gt;
&lt;h4 id=&#34;特性：&#34;&gt;&lt;a href=&#34;#特性：&#34; class=&#34;headerlink&#34; title=&#34;特性：&#34;&gt;&lt;/a&gt;特性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指向目标文件的路径&lt;/strong&gt;：软链接文件仅存储目标文件的路径，而不是文件内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨文件系统&lt;/strong&gt;：软链接可以指向不同文件系统中的文件或目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;链断裂问题&lt;/strong&gt;：如果目标文件被删除或移动，软链接将失效，成为“断链”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件大小&lt;/strong&gt;：软链接的大小是指向目标文件路径的长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建软链接&#34;&gt;&lt;a href=&#34;#创建软链接&#34; class=&#34;headerlink&#34; title=&#34;创建软链接&#34;&gt;&lt;/a&gt;创建软链接&lt;/h4&gt;&lt;p&gt;要创建一个软链接，你可以使用&lt;code&gt;ln -s&lt;/code&gt;命令。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /path/to/target /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /home/user/original_file.txt /home/user/shortcut_to_file.txt &lt;span class=&#34;token comment&#34;&gt;# 也可以是目录&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为&lt;code&gt;shortcut_to_file.txt&lt;/code&gt;的软链接，指向&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;查看软链接&#34;&gt;&lt;a href=&#34;#查看软链接&#34; class=&#34;headerlink&#34; title=&#34;查看软链接&#34;&gt;&lt;/a&gt;查看软链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;ls -l&lt;/code&gt;命令可以查看软链接的详细信息。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; /home/user/shortcut_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;lrwxrwxrwx &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/shortcut_to_file.txt -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; /home/user/original_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;l&lt;/code&gt;表示这是一个软链接，箭头&lt;code&gt;-&amp;gt;&lt;/code&gt;后面是目标路径。&lt;/p&gt;
&lt;h4 id=&#34;删除软链接&#34;&gt;&lt;a href=&#34;#删除软链接&#34; class=&#34;headerlink&#34; title=&#34;删除软链接&#34;&gt;&lt;/a&gt;删除软链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;rm&lt;/code&gt;命令删除软链接。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /home/user/shortcut_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除软链接，但不会影响目标文件。&lt;/p&gt;
&lt;h2 id=&#34;2-硬链接（Hard-Link）&#34;&gt;&lt;a href=&#34;#2-硬链接（Hard-Link）&#34; class=&#34;headerlink&#34; title=&#34;2. 硬链接（Hard Link）&#34;&gt;&lt;/a&gt;2. 硬链接（Hard Link）&lt;/h2&gt;&lt;p&gt;硬链接是文件系统中的一个目录条目，它指向文件的实际数据块。与软链接不同，硬链接不是指向路径，而是指向数据块。因此，硬链接和原始文件共享相同的数据块。&lt;/p&gt;
&lt;h4 id=&#34;特性：-1&#34;&gt;&lt;a href=&#34;#特性：-1&#34; class=&#34;headerlink&#34; title=&#34;特性：&#34;&gt;&lt;/a&gt;特性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指向数据块&lt;/strong&gt;：硬链接指向文件的实际数据块，而不是路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享文件数据&lt;/strong&gt;：硬链接和原始文件共享相同的数据块，因此它们内容完全相同，且修改一个文件内容会同时更新硬链接的内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不可跨文件系统&lt;/strong&gt;：硬链接必须在同一文件系统内。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除影响&lt;/strong&gt;：删除一个硬链接不会影响文件的实际数据，只有当所有指向数据块的硬链接都删除后，文件的数据才会被删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建硬链接&#34;&gt;&lt;a href=&#34;#创建硬链接&#34; class=&#34;headerlink&#34; title=&#34;创建硬链接&#34;&gt;&lt;/a&gt;创建硬链接&lt;/h4&gt;&lt;p&gt;要创建一个硬链接，你可以使用&lt;code&gt;ln&lt;/code&gt;命令（不带&lt;code&gt;-s&lt;/code&gt;选项）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; /path/to/target /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; /home/user/original_file.txt /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为&lt;code&gt;hardlink_to_file.txt&lt;/code&gt;的硬链接，指向&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;的数据块。&lt;/p&gt;
&lt;h4 id=&#34;查看硬链接&#34;&gt;&lt;a href=&#34;#查看硬链接&#34; class=&#34;headerlink&#34; title=&#34;查看硬链接&#34;&gt;&lt;/a&gt;查看硬链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;ls -li&lt;/code&gt;命令可以查看文件的inode号，硬链接共享相同的inode号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-li&lt;/span&gt; /path/to/target /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-li&lt;/span&gt; /home/user/original_file.txt /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1234567&lt;/span&gt; -rw-r--r-- &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/original_file.txt
&lt;span class=&#34;token number&#34;&gt;1234567&lt;/span&gt; -rw-r--r-- &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;两个文件共享相同的inode号（&lt;code&gt;1234567&lt;/code&gt;），说明它们是硬链接。&lt;/p&gt;
&lt;h4 id=&#34;删除硬链接&#34;&gt;&lt;a href=&#34;#删除硬链接&#34; class=&#34;headerlink&#34; title=&#34;删除硬链接&#34;&gt;&lt;/a&gt;删除硬链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;rm&lt;/code&gt;命令删除硬链接。删除硬链接不会删除文件数据，只有当所有硬链接都被删除后，文件数据才会被删除。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除硬链接，但&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;仍然存在，文件数据依然可用。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;软链接&lt;/strong&gt;：适合用作快捷方式和指向目录。使用软链接时，请确保目标文件存在，或会造成“断链”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬链接&lt;/strong&gt;：适用于同一文件系统内共享文件数据，不能链接到目录（通常情况下）。硬链接不可跨文件系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;进阶操作&#34;&gt;&lt;a href=&#34;#进阶操作&#34; class=&#34;headerlink&#34; title=&#34;进阶操作&#34;&gt;&lt;/a&gt;进阶操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看所有链接&lt;/strong&gt;：使用&lt;code&gt;find&lt;/code&gt;命令查找所有指向某个目标的软链接或硬链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /path/to/directory &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; l &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;link_name&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令会查找所有名为&lt;code&gt;link_name&lt;/code&gt;的软链接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/09/git-shi-yong/</guid>
            <title>git使用</title>
            <link>https://0xdadream.github.io/2024/08/09/git-shi-yong/</link>
            <category>git</category>
            <pubDate>Fri, 09 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;git使用&#34;&gt;&lt;a href=&#34;#git使用&#34; class=&#34;headerlink&#34; title=&#34;git使用&#34;&gt;&lt;/a&gt;git使用&lt;/h1&gt;&lt;h3 id=&#34;1-安装-Git&#34;&gt;&lt;a href=&#34;#1-安装-Git&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Git&#34;&gt;&lt;/a&gt;1. 安装 Git&lt;/h3&gt;&lt;h4 id=&#34;Windows&#34;&gt;&lt;a href=&#34;#Windows&#34; class=&#34;headerlink&#34; title=&#34;Windows&#34;&gt;&lt;/a&gt;Windows&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;从 &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git 官方网站&lt;/a&gt; 下载 Git 安装程序。&lt;/li&gt;
&lt;li&gt;双击安装程序并按照提示完成安装。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;Linux&#34;&gt;&lt;a href=&#34;#Linux&#34; class=&#34;headerlink&#34; title=&#34;Linux&#34;&gt;&lt;/a&gt;Linux&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用包管理器安装 Git（以 Ubuntu 为例）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-配置-Git&#34;&gt;&lt;a href=&#34;#2-配置-Git&#34; class=&#34;headerlink&#34; title=&#34;2. 配置 Git&#34;&gt;&lt;/a&gt;2. 配置 Git&lt;/h3&gt;&lt;p&gt;安装完成后，配置用户名和邮箱：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; config &lt;span class=&#34;token parameter variable&#34;&gt;--global&lt;/span&gt; user.name &lt;span class=&#34;token string&#34;&gt;&#34;你的名字&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; config &lt;span class=&#34;token parameter variable&#34;&gt;--global&lt;/span&gt; user.email &lt;span class=&#34;token string&#34;&gt;&#34;你的邮箱&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-创建-SSH-Key&#34;&gt;&lt;a href=&#34;#3-创建-SSH-Key&#34; class=&#34;headerlink&#34; title=&#34;3. 创建 SSH Key&#34;&gt;&lt;/a&gt;3. 创建 SSH Key&lt;/h3&gt;&lt;p&gt;如果需要使用 SSH 方式连接 GitHub，生成 SSH key 并添加到 GitHub。&lt;/p&gt;
&lt;h4 id=&#34;生成-SSH-Key&#34;&gt;&lt;a href=&#34;#生成-SSH-Key&#34; class=&#34;headerlink&#34; title=&#34;生成 SSH Key&#34;&gt;&lt;/a&gt;生成 SSH Key&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;ssh-keygen -t rsa -C &#34;你的邮箱&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按提示操作，默认保存位置即可。生成完成后，使用以下命令查看公钥：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; ~/.ssh/id_rsa.pub&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;添加-SSH-Key-到-GitHub&#34;&gt;&lt;a href=&#34;#添加-SSH-Key-到-GitHub&#34; class=&#34;headerlink&#34; title=&#34;添加 SSH Key 到 GitHub&#34;&gt;&lt;/a&gt;添加 SSH Key 到 GitHub&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;登录 GitHub，进入 &lt;a href=&#34;https://github.com/settings/keys&#34;&gt;SSH and GPG keys&lt;/a&gt; 页面。&lt;/li&gt;
&lt;li&gt;点击 “New SSH key”，粘贴上一步生成的公钥内容，点击 “Add SSH key”。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-创建-Git-仓库&#34;&gt;&lt;a href=&#34;#4-创建-Git-仓库&#34; class=&#34;headerlink&#34; title=&#34;4. 创建 Git 仓库&#34;&gt;&lt;/a&gt;4. 创建 Git 仓库&lt;/h3&gt;&lt;h4 id=&#34;本地仓库&#34;&gt;&lt;a href=&#34;#本地仓库&#34; class=&#34;headerlink&#34; title=&#34;本地仓库&#34;&gt;&lt;/a&gt;本地仓库&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建一个新的目录并进入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; my_project
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my_project&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初始化 Git 仓库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; init&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;远程仓库&#34;&gt;&lt;a href=&#34;#远程仓库&#34; class=&#34;headerlink&#34; title=&#34;远程仓库&#34;&gt;&lt;/a&gt;远程仓库&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;登录 GitHub，点击右上角 “+”，选择 “New repository”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;填写仓库名和描述，点击 “Create repository”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 文件用于告诉 Git 哪些文件或目录不应该被添加到版本控制中。它在 Git 项目中非常重要，特别是当你的项目包含一些不需要共享的文件，如编译后的二进制文件、临时文件、或包含敏感信息的配置文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 文件通常放在项目的根目录下，但你也可以在子目录中添加 &lt;code&gt;.gitignore&lt;/code&gt; 文件，作用范围仅限于该目录及其子目录。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 文件的语法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;忽略特定文件或目录&lt;/strong&gt;：在 &lt;code&gt;.gitignore&lt;/code&gt; 中直接写上文件名或目录名。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 忽略文件&lt;/span&gt;
secret.txt

&lt;span class=&#34;token comment&#34;&gt;# 忽略目录&lt;/span&gt;
/logs/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通配符&lt;/strong&gt;：使用 &lt;code&gt;*&lt;/code&gt; 代表任意字符，&lt;code&gt;?&lt;/code&gt; 代表单个字符，&lt;code&gt;[abc]&lt;/code&gt; 代表匹配集合中的任意一个字符。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 忽略所有 .log 文件&lt;/span&gt;
*.log

&lt;span class=&#34;token comment&#34;&gt;# 忽略以 &#34;temp&#34; 开头的文件&lt;/span&gt;
temp*

&lt;span class=&#34;token comment&#34;&gt;# 忽略名为 &#34;backup&#34; 或 &#34;bak&#34; 的文件&lt;/span&gt;
*.&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;bB&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;aA&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;kK&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;排除规则&lt;/strong&gt;：以 &lt;code&gt;!&lt;/code&gt; 开头的行用于排除某些文件或目录，这些文件即使符合前面的忽略规则也不会被忽略。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 忽略所有 .log 文件，但不忽略 important.log&lt;/span&gt;
*.log
&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;important.log&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;指定路径&lt;/strong&gt;：使用斜杠 &lt;code&gt;/&lt;/code&gt; 来表示目录路径。以斜杠开头表示从根目录开始匹配。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 只忽略根目录下的 &#34;config.json&#34;，不忽略其他目录中的 &#34;config.json&#34;&lt;/span&gt;
/config.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-关联本地仓库与远程仓库&#34;&gt;&lt;a href=&#34;#5-关联本地仓库与远程仓库&#34; class=&#34;headerlink&#34; title=&#34;5. 关联本地仓库与远程仓库&#34;&gt;&lt;/a&gt;5. 关联本地仓库与远程仓库&lt;/h3&gt;&lt;p&gt;在本地仓库中，执行以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; origin git@github.com:你的用户名/仓库名.git&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;git remote add&lt;/code&gt; 是一个 Git 命令，用于向你的本地仓库添加一个远程仓库。一个远程仓库是一个托管在某个服务器上的 Git 仓库，你可以将本地的更改推送到远程仓库，也可以从远程仓库拉取更新。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;origin&lt;/code&gt; 是这个远程仓库的名字。你可以把它理解为远程仓库的一个别名，便于你以后引用这个远程仓库。在大多数情况下，&lt;code&gt;origin&lt;/code&gt; 是默认的名字，用于指向你克隆的或第一次关联的远程仓库。&lt;/p&gt;
&lt;p&gt;通过执行这条命令，你告诉 Git：**这个本地仓库的远程仓库是位于 GitHub 上的 &lt;code&gt;git@github.com:你的用户名/仓库名.git&lt;/code&gt; 这个位置，并且将它命名为 &lt;code&gt;origin&lt;/code&gt;**。&lt;/p&gt;
&lt;p&gt;之后，你可以使用类似 &lt;code&gt;git push origin master&lt;/code&gt; 的命令将本地的代码推送到 GitHub 上的远程仓库，或者使用 &lt;code&gt;git pull origin master&lt;/code&gt; 从 GitHub 上拉取更新。&lt;/p&gt;
&lt;h3 id=&#34;6-基本-Git-操作&#34;&gt;&lt;a href=&#34;#6-基本-Git-操作&#34; class=&#34;headerlink&#34; title=&#34;6. 基本 Git 操作&#34;&gt;&lt;/a&gt;6. 基本 Git 操作&lt;/h3&gt;&lt;h4 id=&#34;添加文件并提交&#34;&gt;&lt;a href=&#34;#添加文件并提交&#34; class=&#34;headerlink&#34; title=&#34;添加文件并提交&#34;&gt;&lt;/a&gt;添加文件并提交&lt;/h4&gt;&lt;p&gt;提交前的工作目录是工作区（文件操作的区域）&lt;/p&gt;
&lt;p&gt;添加文件到暂存区：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令用于将指定的文件添加到 Git 的暂存区（Stage）。暂存区是一个临时区域，你可以在其中暂时存放那些你准备提交到仓库的更改。文件在添加到暂存区之前，可以进行修改，而这些修改不会立即提交到仓库中。&lt;/p&gt;
&lt;p&gt;或添加所有文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提交到本地仓库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;提交信息&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令用于将暂存区中的所有内容提交到本地 Git 仓库，并为此次提交添加一条消息。&lt;code&gt;-m &#34;提交信息&#34;&lt;/code&gt; 选项允许你在命令行中直接输入一条提交信息，而不需要进入编辑器。&lt;/p&gt;
&lt;h4 id=&#34;查看暂存区的文件&#34;&gt;&lt;a href=&#34;#查看暂存区的文件&#34; class=&#34;headerlink&#34; title=&#34;查看暂存区的文件&#34;&gt;&lt;/a&gt;查看暂存区的文件&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git status&lt;/code&gt; 命令会显示工作区和暂存区的状态，包括哪些文件被修改但尚未添加到暂存区，以及哪些文件已经被添加到暂存区。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出中，暂存区中的文件会显示在 &lt;code&gt;Changes to be committed&lt;/code&gt; 部分。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Changes to be committed:
  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;token string&#34;&gt;&#34;git restore --staged &amp;lt;file&amp;gt;...&#34;&lt;/span&gt; to unstage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        modified:   index.html
        new file:   style.css&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这意味着 &lt;code&gt;index.html&lt;/code&gt; 文件已被修改并添加到暂存区，而 &lt;code&gt;style.css&lt;/code&gt; 是一个新文件，也已经被添加到暂存区。&lt;/p&gt;
&lt;h4 id=&#34;使用-git-diff-cached-查看暂存区的更改&#34;&gt;&lt;a href=&#34;#使用-git-diff-cached-查看暂存区的更改&#34; class=&#34;headerlink&#34; title=&#34;使用 git diff --cached 查看暂存区的更改&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git diff --cached&lt;/code&gt; 查看暂存区的更改&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git diff --cached&lt;/code&gt; 命令会显示暂存区中的更改细节。这个命令的输出与 &lt;code&gt;git diff&lt;/code&gt; 类似，但只显示暂存区中的内容，而不包括工作区中尚未添加到暂存区的修改。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--cached&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者你也可以使用 &lt;code&gt;git diff --staged&lt;/code&gt;，效果是一样的。&lt;/p&gt;
&lt;p&gt;这个命令将显示具体的代码差异，即哪些行被修改、添加或删除。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--git&lt;/span&gt; a/index.html b/index.html
index 83b2d7e&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;e39a4ff &lt;span class=&#34;token number&#34;&gt;100644&lt;/span&gt;
--- a/index.html
+++ b/index.html
@@ -12,7 +12,7 @@
   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;My Website&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/title&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/head&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
-  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, World&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;
+  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;Welcome to My Website&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/body&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/html&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;从-Git-暂存区移除文件&#34;&gt;&lt;a href=&#34;#从-Git-暂存区移除文件&#34; class=&#34;headerlink&#34; title=&#34;从 Git 暂存区移除文件&#34;&gt;&lt;/a&gt;从 Git 暂存区移除文件&lt;/h4&gt;&lt;h5 id=&#34;使用-git-restore-staged&#34;&gt;&lt;a href=&#34;#使用-git-restore-staged&#34; class=&#34;headerlink&#34; title=&#34;使用 git restore --staged&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git restore --staged&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;用于将文件从暂存区移除，并恢复到工作区的状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; restore &lt;span class=&#34;token parameter variable&#34;&gt;--staged&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;使用-git-reset&#34;&gt;&lt;a href=&#34;#使用-git-reset&#34; class=&#34;headerlink&#34; title=&#34;使用 git reset&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git reset&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;用于回滚或取消更改。使用 &lt;code&gt;git reset&lt;/code&gt; 也可以将文件从暂存区移除。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;移除所有文件&#34;&gt;&lt;a href=&#34;#移除所有文件&#34; class=&#34;headerlink&#34; title=&#34;移除所有文件&#34;&gt;&lt;/a&gt;移除所有文件&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把暂存区中的所有文件全部移除，同时保留它们在工作区中的修改。&lt;/p&gt;
&lt;h4 id=&#34;恢复工作区文件&#34;&gt;&lt;a href=&#34;#恢复工作区文件&#34; class=&#34;headerlink&#34; title=&#34;恢复工作区文件&#34;&gt;&lt;/a&gt;恢复工作区文件&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout -- test.txt
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token comment&#34;&gt;# 直接还原为最新版本&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;是用于丢弃工作区中对 &lt;code&gt;txt&lt;/code&gt; 文件的所有未提交更改的命令。具体来说，它将 &lt;code&gt;txt&lt;/code&gt; 文件恢复到最后一次提交时的状态。&lt;/p&gt;
&lt;h4 id=&#34;版本回退&#34;&gt;&lt;a href=&#34;#版本回退&#34; class=&#34;headerlink&#34; title=&#34;版本回退&#34;&gt;&lt;/a&gt;版本回退&lt;/h4&gt;&lt;h5 id=&#34;使用-git-reset-回退版本&#34;&gt;&lt;a href=&#34;#使用-git-reset-回退版本&#34; class=&#34;headerlink&#34; title=&#34;使用 git reset 回退版本&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git reset&lt;/code&gt; 回退版本&lt;/h5&gt;&lt;p&gt;&lt;code&gt;git reset&lt;/code&gt; 用于回退到某个特定的提交，并且可以选择性地影响暂存区和工作区。&lt;/p&gt;
&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--soft&lt;/code&gt;：仅移动 &lt;code&gt;HEAD&lt;/code&gt;，不影响暂存区和工作区。回退后的所有更改都保留在暂存区中。（HEAD为当前版本）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--mixed&lt;/code&gt;（默认选项）：移动 &lt;code&gt;HEAD&lt;/code&gt;，并重置暂存区，但保留工作区的更改。回退后的更改仍在工作区，但不在暂存区。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--hard&lt;/code&gt;：移动 &lt;code&gt;HEAD&lt;/code&gt;，同时重置暂存区和工作区。回退后的所有更改都被删除，不可恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假设你想回退到特定的提交 &lt;code&gt;abc123&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;软回退：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--soft&lt;/span&gt; abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把当前分支指针（&lt;code&gt;HEAD&lt;/code&gt;）移到 &lt;code&gt;abc123&lt;/code&gt;，但保持工作区和暂存区的所有更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;混合回退：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--mixed&lt;/span&gt; abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回退到 &lt;code&gt;abc123&lt;/code&gt;，并将暂存区重置为该提交的状态，但保留工作区的更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;硬回退：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回退到 &lt;code&gt;abc123&lt;/code&gt;，并删除所有在 &lt;code&gt;abc123&lt;/code&gt; 之后的更改。这个操作不可逆，因此使用前请务必确认。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用-git-revert-进行安全回退&#34;&gt;&lt;a href=&#34;#使用-git-revert-进行安全回退&#34; class=&#34;headerlink&#34; title=&#34;使用 git revert 进行安全回退&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git revert&lt;/code&gt; 进行安全回退&lt;/h5&gt;&lt;p&gt;&lt;code&gt;git revert&lt;/code&gt; 用于生成一个新的提交，该提交会撤销指定的历史提交，而不会改变项目的提交历史。&lt;code&gt;git revert&lt;/code&gt; 是一种“安全”的回退方式，因为它保留了所有历史记录。&lt;/p&gt;
&lt;p&gt;假设你想撤销提交 &lt;code&gt;abc123&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; revert abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将生成一个新的提交，它的作用是撤销 &lt;code&gt;abc123&lt;/code&gt; 所做的更改，而不会影响 &lt;code&gt;abc123&lt;/code&gt; 之前或之后的其他提交。&lt;/p&gt;
&lt;h5 id=&#34;使用-git-checkout-回退到特定提交（仅查看）&#34;&gt;&lt;a href=&#34;#使用-git-checkout-回退到特定提交（仅查看）&#34; class=&#34;headerlink&#34; title=&#34;使用 git checkout 回退到特定提交（仅查看）&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git checkout&lt;/code&gt; 回退到特定提交（仅查看）&lt;/h5&gt;&lt;p&gt;&lt;code&gt;git checkout&lt;/code&gt; 主要用于切换分支或查看特定提交。你可以暂时回退到某个提交，但不修改当前分支的状态。&lt;/p&gt;
&lt;p&gt;假设你想查看 &lt;code&gt;abc123&lt;/code&gt; 提交的状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把工作区和暂存区切换到 &lt;code&gt;abc123&lt;/code&gt; 提交的状态，但不会更改当前分支的指针。如果你想回到最新的状态，可以使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（假设你在 &lt;code&gt;master&lt;/code&gt; 分支上）&lt;/p&gt;
&lt;h5 id=&#34;如何找到提交的哈希值&#34;&gt;&lt;a href=&#34;#如何找到提交的哈希值&#34; class=&#34;headerlink&#34; title=&#34;如何找到提交的哈希值&#34;&gt;&lt;/a&gt;如何找到提交的哈希值&lt;/h5&gt;&lt;p&gt;在执行版本回退前，你需要知道要回退到的提交的哈希值（类似 &lt;code&gt;abc123&lt;/code&gt;）。可以使用以下命令查看提交历史：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log &lt;span class=&#34;token parameter variable&#34;&gt;--pretty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;oneline &lt;span class=&#34;token comment&#34;&gt;# 显示一行&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; HEAD^ &lt;span class=&#34;token comment&#34;&gt;# 回退上一个版本&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; HEAD^^ &lt;span class=&#34;token comment&#34;&gt;# 同理&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; HEAD~10&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将显示所有提交的日志，包括提交哈希、作者、日期和提交信息。&lt;/p&gt;
&lt;h4 id=&#34;删除文件&#34;&gt;&lt;a href=&#34;#删除文件&#34; class=&#34;headerlink&#34; title=&#34;删除文件&#34;&gt;&lt;/a&gt;删除文件&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git rm &amp;lt;file&amp;gt;&lt;/code&gt;和&lt;code&gt;git add&amp;lt;file&amp;gt;&lt;/code&gt;效果是一样的&lt;/p&gt;
&lt;h4 id=&#34;推送到远程仓库&#34;&gt;&lt;a href=&#34;#推送到远程仓库&#34; class=&#34;headerlink&#34; title=&#34;推送到远程仓库&#34;&gt;&lt;/a&gt;推送到远程仓库&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin master
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#查看远程库信息&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; origin &lt;span class=&#34;token comment&#34;&gt;# 删除关联&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;克隆远程仓库&#34;&gt;&lt;a href=&#34;#克隆远程仓库&#34; class=&#34;headerlink&#34; title=&#34;克隆远程仓库&#34;&gt;&lt;/a&gt;克隆远程仓库&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone git@github.com:你的用户名/仓库名.git&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;拉取更新&#34;&gt;&lt;a href=&#34;#拉取更新&#34; class=&#34;headerlink&#34; title=&#34;拉取更新&#34;&gt;&lt;/a&gt;拉取更新&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; pull origin master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Git标签&#34;&gt;&lt;a href=&#34;#Git标签&#34; class=&#34;headerlink&#34; title=&#34;Git标签&#34;&gt;&lt;/a&gt;Git标签&lt;/h4&gt;&lt;p&gt;给某个提交打标签（通常用于发布版本）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; tag &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; v1.0 &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;版本1.0&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;推送标签到远程仓库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin &lt;span class=&#34;token parameter variable&#34;&gt;--tags&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-分支管理&#34;&gt;&lt;a href=&#34;#7-分支管理&#34; class=&#34;headerlink&#34; title=&#34;7. 分支管理&#34;&gt;&lt;/a&gt;7. 分支管理&lt;/h3&gt;&lt;h4 id=&#34;1-创建分支&#34;&gt;&lt;a href=&#34;#1-创建分支&#34; class=&#34;headerlink&#34; title=&#34;1. 创建分支&#34;&gt;&lt;/a&gt;1. 创建分支&lt;/h4&gt;&lt;p&gt;要创建一个新的分支，使用 &lt;code&gt;git branch&lt;/code&gt; 命令。新分支会基于你当前所在的分支创建。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会创建一个名为 &lt;code&gt;feature/new-feature&lt;/code&gt; 的新分支，但不会切换到该分支。&lt;/p&gt;
&lt;h4 id=&#34;2-切换分支&#34;&gt;&lt;a href=&#34;#2-切换分支&#34; class=&#34;headerlink&#34; title=&#34;2. 切换分支&#34;&gt;&lt;/a&gt;2. 切换分支&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;git checkout&lt;/code&gt; 或 &lt;code&gt;git switch&lt;/code&gt; 来切换到其他分支。在 Git 2.23 之后，Git 引入了 &lt;code&gt;git switch&lt;/code&gt;，它专门用于切换分支，更加直观和安全。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; switch feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将切换到 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支，并更新工作区和暂存区以匹配该分支的状态。&lt;/p&gt;
&lt;h4 id=&#34;3-创建并切换到新分支&#34;&gt;&lt;a href=&#34;#3-创建并切换到新分支&#34; class=&#34;headerlink&#34; title=&#34;3. 创建并切换到新分支&#34;&gt;&lt;/a&gt;3. 创建并切换到新分支&lt;/h4&gt;&lt;p&gt;可以使用 &lt;code&gt;git checkout -b&lt;/code&gt; 或 &lt;code&gt;git switch -c&lt;/code&gt; 在创建新分支的同时切换到该分支。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token parameter variable&#34;&gt;-b&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; switch &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支并立即切换到该分支。&lt;/p&gt;
&lt;h4 id=&#34;4-查看分支&#34;&gt;&lt;a href=&#34;#4-查看分支&#34; class=&#34;headerlink&#34; title=&#34;4. 查看分支&#34;&gt;&lt;/a&gt;4. 查看分支&lt;/h4&gt;&lt;p&gt;要查看所有分支，可以使用 &lt;code&gt;git branch&lt;/code&gt; 命令。当前所在的分支会以 &lt;code&gt;*&lt;/code&gt; 标记。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;  develop
* feature/new-feature
  master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这表明你当前在 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支上。&lt;/p&gt;
&lt;h4 id=&#34;5-合并分支&#34;&gt;&lt;a href=&#34;#5-合并分支&#34; class=&#34;headerlink&#34; title=&#34;5. 合并分支&#34;&gt;&lt;/a&gt;5. 合并分支&lt;/h4&gt;&lt;p&gt;当你完成了在某个分支上的工作并希望将其合并回主分支（例如 &lt;code&gt;master&lt;/code&gt; 或 &lt;code&gt;develop&lt;/code&gt;），你可以使用 &lt;code&gt;git merge&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;合并分支的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;切换到目标分支（通常是 master 或 develop）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合并工作分支&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; merge feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把 &lt;code&gt;feature/new-feature&lt;/code&gt;分支的更改合并到 &lt;code&gt;master&lt;/code&gt;分支中。如果没有冲突，Git 会自动完成合并。如果有冲突，需要手动解决后再完成合并。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;6-处理合并冲突&#34;&gt;&lt;a href=&#34;#6-处理合并冲突&#34; class=&#34;headerlink&#34; title=&#34;6. 处理合并冲突&#34;&gt;&lt;/a&gt;6. 处理合并冲突&lt;/h4&gt;&lt;p&gt;当 Git 无法自动合并两个分支时，会提示合并冲突。此时，需要手动编辑冲突的文件，解决冲突后再继续合并。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开冲突文件，找到冲突标记：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-diff&#34; data-language=&#34;diff&#34;&gt;&lt;code class=&#34;language-diff&#34;&gt;&lt;span class=&#34;token deleted-arrow deleted&#34;&gt;&lt;span class=&#34;token prefix deleted&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token line&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
&lt;/span&gt;&lt;/span&gt;当前分支的代码
=======
被合并分支的代码
&lt;span class=&#34;token inserted-arrow inserted&#34;&gt;&lt;span class=&#34;token prefix inserted&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token line&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; feature/new-feature&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;手动解决冲突&lt;/strong&gt;，编辑文件使其符合预期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标记冲突为已解决并提交：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; 冲突文件
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;7-删除分支&#34;&gt;&lt;a href=&#34;#7-删除分支&#34; class=&#34;headerlink&#34; title=&#34;7. 删除分支&#34;&gt;&lt;/a&gt;7. 删除分支&lt;/h4&gt;&lt;p&gt;当一个分支的工作完成且不再需要时，可以将其删除。&lt;/p&gt;
&lt;p&gt;删除本地分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果分支尚未合并，Git 会阻止删除，以防丢失更改。要强制删除，可以使用 &lt;code&gt;-D&lt;/code&gt; 选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch &lt;span class=&#34;token parameter variable&#34;&gt;-D&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除远程分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin &lt;span class=&#34;token parameter variable&#34;&gt;--delete&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除远程仓库中的 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支。&lt;/p&gt;
&lt;h4 id=&#34;8-远程分支&#34;&gt;&lt;a href=&#34;#8-远程分支&#34; class=&#34;headerlink&#34; title=&#34;8. 远程分支&#34;&gt;&lt;/a&gt;8. 远程分支&lt;/h4&gt;&lt;p&gt;远程分支是托管在远程仓库中的分支，例如 GitHub、GitLab 上的分支。通常，当你推送分支到远程仓库时，该分支会自动在远程仓库中创建。&lt;/p&gt;
&lt;p&gt;查看远程分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将列出所有远程分支。&lt;/p&gt;
&lt;p&gt;推送本地分支到远程：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支推送到远程仓库的 &lt;code&gt;origin&lt;/code&gt;（默认远程名称）上。&lt;/p&gt;
&lt;h4 id=&#34;9-跟踪远程分支&#34;&gt;&lt;a href=&#34;#9-跟踪远程分支&#34; class=&#34;headerlink&#34; title=&#34;9. 跟踪远程分支&#34;&gt;&lt;/a&gt;9. 跟踪远程分支&lt;/h4&gt;&lt;p&gt;你可以将本地分支与远程分支关联，使推送和拉取更方便。&lt;/p&gt;
&lt;p&gt;创建跟踪分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token parameter variable&#34;&gt;-b&lt;/span&gt; feature/new-feature origin/feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者，如果分支已经存在：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch --set-upstream-to&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;origin/feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-更新远程分支&#34;&gt;&lt;a href=&#34;#10-更新远程分支&#34; class=&#34;headerlink&#34; title=&#34;10. 更新远程分支&#34;&gt;&lt;/a&gt;10. 更新远程分支&lt;/h4&gt;&lt;p&gt;要同步本地仓库与远程仓库的状态，使用 &lt;code&gt;git fetch&lt;/code&gt; 或 &lt;code&gt;git pull&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;拉取更新并合并：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; pull origin master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将从远程 &lt;code&gt;master&lt;/code&gt; 分支拉取最新的更改并合并到当前分支。&lt;/p&gt;
&lt;p&gt;仅获取更新（不合并）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; fetch origin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将更新本地的远程分支信息，但不合并更改。&lt;/p&gt;
&lt;h3 id=&#34;8-存储进度&#34;&gt;&lt;a href=&#34;#8-存储进度&#34; class=&#34;headerlink&#34; title=&#34;8.存储进度&#34;&gt;&lt;/a&gt;8.存储进度&lt;/h3&gt;&lt;p&gt;&lt;code&gt;git stash&lt;/code&gt; 允许你将当前的工作进度（包括工作区和暂存区的更改）暂时存储起来，以便可以在一个干净的工作区中进行其他操作。之后，你可以随时恢复这些存储的更改。&lt;/p&gt;
&lt;h4 id=&#34;1-基本命令：git-stash&#34;&gt;&lt;a href=&#34;#1-基本命令：git-stash&#34; class=&#34;headerlink&#34; title=&#34;1. 基本命令：git stash&#34;&gt;&lt;/a&gt;1. 基本命令：&lt;code&gt;git stash&lt;/code&gt;&lt;/h4&gt;&lt;h5 id=&#34;1-1-存储当前工作区和暂存区的更改&#34;&gt;&lt;a href=&#34;#1-1-存储当前工作区和暂存区的更改&#34; class=&#34;headerlink&#34; title=&#34;1.1 存储当前工作区和暂存区的更改&#34;&gt;&lt;/a&gt;1.1 存储当前工作区和暂存区的更改&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将当前分支的工作区和暂存区的所有更改存储起来，工作区将恢复到最后一次提交时的状态。存储的更改会被放入一个“栈”中，供以后恢复使用。&lt;/p&gt;
&lt;h5 id=&#34;1-2-存储时添加描述信息&#34;&gt;&lt;a href=&#34;#1-2-存储时添加描述信息&#34; class=&#34;headerlink&#34; title=&#34;1.2 存储时添加描述信息&#34;&gt;&lt;/a&gt;1.2 存储时添加描述信息&lt;/h5&gt;&lt;p&gt;你可以为存储的更改添加描述信息，以便更容易区分多个存储。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash save &lt;span class=&#34;token string&#34;&gt;&#34;描述信息&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-查看存储：git-stash-list&#34;&gt;&lt;a href=&#34;#2-查看存储：git-stash-list&#34; class=&#34;headerlink&#34; title=&#34;2. 查看存储：git stash list&#34;&gt;&lt;/a&gt;2. 查看存储：&lt;code&gt;git stash list&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会列出所有的存储记录，每一条记录都有唯一的索引和描述信息。输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;stash@&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;: WIP on master: 5d1e76a 修复首页布局
stash@&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;: WIP on master: 2a7b8d9 添加新功能&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;stash@{0}&lt;/code&gt; 是最顶部的存储记录，&lt;code&gt;stash@{1}&lt;/code&gt; 是次存储记录，依此类推。&lt;/p&gt;
&lt;h4 id=&#34;3-恢复存储：git-stash-pop-和-git-stash-apply&#34;&gt;&lt;a href=&#34;#3-恢复存储：git-stash-pop-和-git-stash-apply&#34; class=&#34;headerlink&#34; title=&#34;3. 恢复存储：git stash pop 和 git stash apply&#34;&gt;&lt;/a&gt;3. 恢复存储：&lt;code&gt;git stash pop&lt;/code&gt; 和 &lt;code&gt;git stash apply&lt;/code&gt;&lt;/h4&gt;&lt;h5 id=&#34;3-1-git-stash-pop&#34;&gt;&lt;a href=&#34;#3-1-git-stash-pop&#34; class=&#34;headerlink&#34; title=&#34;3.1 git stash pop&#34;&gt;&lt;/a&gt;3.1 &lt;code&gt;git stash pop&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash pop&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将最近存储的更改恢复到工作区和暂存区，并将该存储记录从列表中删除。如果有冲突，Git 会提示手动解决冲突。&lt;/p&gt;
&lt;h5 id=&#34;3-2-git-stash-apply&#34;&gt;&lt;a href=&#34;#3-2-git-stash-apply&#34; class=&#34;headerlink&#34; title=&#34;3.2 git stash apply&#34;&gt;&lt;/a&gt;3.2 &lt;code&gt;git stash apply&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash apply&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将最近的存储恢复到工作区和暂存区，但不会删除该存储记录。如果你需要多次应用存储，使用 &lt;code&gt;apply&lt;/code&gt; 比 &lt;code&gt;pop&lt;/code&gt; 更合适。&lt;/p&gt;
&lt;h4 id=&#34;3-3-恢复特定存储&#34;&gt;&lt;a href=&#34;#3-3-恢复特定存储&#34; class=&#34;headerlink&#34; title=&#34;3.3 恢复特定存储&#34;&gt;&lt;/a&gt;3.3 恢复特定存储&lt;/h4&gt;&lt;p&gt;如果有多个存储记录，你可以指定恢复某个特定的存储。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash apply stash@&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会恢复索引为 &lt;code&gt;stash@{1}&lt;/code&gt; 的存储，并保留存储记录。&lt;/p&gt;
&lt;h3 id=&#34;9-常见的Git-Hooks&#34;&gt;&lt;a href=&#34;#9-常见的Git-Hooks&#34; class=&#34;headerlink&#34; title=&#34;9.常见的Git Hooks&#34;&gt;&lt;/a&gt;9.常见的Git Hooks&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pre-commit&lt;/strong&gt;：在&lt;code&gt;git commit&lt;/code&gt;命令执行之前触发。可以用来执行代码风格检查或静态分析，防止不合格的代码提交。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commit-msg&lt;/strong&gt;：在提交信息编辑完成后触发。用于检查提交信息是否符合团队规范（如强制使用特定格式）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;post-commit&lt;/strong&gt;：在提交完成后触发。可以用于执行通知或部署任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例：自动检查代码风格&#34;&gt;&lt;a href=&#34;#示例：自动检查代码风格&#34; class=&#34;headerlink&#34; title=&#34;示例：自动检查代码风格&#34;&gt;&lt;/a&gt;示例：自动检查代码风格&lt;/h4&gt;&lt;p&gt;假设你使用&lt;code&gt;pre-commit&lt;/code&gt;钩子来检查Python代码的风格是否符合PEP8标准。以下是一个简单的脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--cached&lt;/span&gt; --name-only --diff-filter&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ACM &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\.py$&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-z&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token assign-left variable&#34;&gt;unformatted&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;pycodestyle $files&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-z&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$unformatted&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Python代码风格检查失败:&#34;&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$unformatted&lt;/span&gt;&#34;&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将这个脚本保存为&lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;并赋予可执行权限：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x .git/hooks/pre-commit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/03/shell/</guid>
            <title>shell</title>
            <link>https://0xdadream.github.io/2024/08/03/shell/</link>
            <category>命令</category>
            <pubDate>Sat, 03 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;shell&#34;&gt;&lt;a href=&#34;#shell&#34; class=&#34;headerlink&#34; title=&#34;shell&#34;&gt;&lt;/a&gt;shell&lt;/h1&gt;&lt;p&gt;Shell 是一种用于与操作系统进行交互的命令行界面。常见的 Shell 有 Bash（Bourne Again Shell）、Zsh、Ksh、以及 Windows 上的 PowerShell。Shell 不仅可以用于执行单个命令，还可以编写脚本来自动化任务。以下是一些基本的 Shell 命令和脚本编写的示例。&lt;/p&gt;
&lt;h2 id=&#34;基本-Shell-命令&#34;&gt;&lt;a href=&#34;#基本-Shell-命令&#34; class=&#34;headerlink&#34; title=&#34;基本 Shell 命令&#34;&gt;&lt;/a&gt;基本 Shell 命令&lt;/h2&gt;&lt;h3 id=&#34;文件和目录操作&#34;&gt;&lt;a href=&#34;#文件和目录操作&#34; class=&#34;headerlink&#34; title=&#34;文件和目录操作&#34;&gt;&lt;/a&gt;文件和目录操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ls&lt;/strong&gt;：列出目录内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 显示详细信息&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 显示所有文件，包括隐藏文件&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cd&lt;/strong&gt;：更改目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /path/to/directory
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回上一级目录&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;pwd&lt;/strong&gt;：显示当前工作目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;pwd&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mkdir&lt;/strong&gt;：创建目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; new_directory&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;rm&lt;/strong&gt;：删除文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; directory  &lt;span class=&#34;token comment&#34;&gt;# 删除目录及其内容&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cp&lt;/strong&gt;：复制文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; source_file destination
&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; source_directory destination  &lt;span class=&#34;token comment&#34;&gt;# 复制目录及其内容&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mv&lt;/strong&gt;：移动或重命名文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; old_name new_name
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; /path/to/destination&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件查看和编辑&#34;&gt;&lt;a href=&#34;#文件查看和编辑&#34; class=&#34;headerlink&#34; title=&#34;文件查看和编辑&#34;&gt;&lt;/a&gt;文件查看和编辑&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cat&lt;/strong&gt;：查看文件内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;less&lt;/strong&gt;：分页查看文件内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;less&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;head&lt;/strong&gt;：查看文件开头部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; filename  &lt;span class=&#34;token comment&#34;&gt;# 查看前 10 行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;tail&lt;/strong&gt;：查看文件末尾部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; filename  &lt;span class=&#34;token comment&#34;&gt;# 查看后 10 行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;nano&lt;/strong&gt;、&lt;strong&gt;vi&lt;/strong&gt;、&lt;strong&gt;vim&lt;/strong&gt;：文本编辑器&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;系统信息和管理&#34;&gt;&lt;a href=&#34;#系统信息和管理&#34; class=&#34;headerlink&#34; title=&#34;系统信息和管理&#34;&gt;&lt;/a&gt;系统信息和管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;echo&lt;/strong&gt;：打印消息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;whoami&lt;/strong&gt;：显示当前用户&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;whoami&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;top&lt;/strong&gt;：实时显示系统性能信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ps&lt;/strong&gt;：显示当前进程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; aux  &lt;span class=&#34;token comment&#34;&gt;# 显示所有进程&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;kill&lt;/strong&gt;：终止进程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; PID
&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-9&lt;/span&gt; PID  &lt;span class=&#34;token comment&#34;&gt;# 强制终止进程&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chmod&lt;/strong&gt;：更改文件权限&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x filename  &lt;span class=&#34;token comment&#34;&gt;# 使文件可执行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chown&lt;/strong&gt;：更改文件所有者&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; user:group filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络相关&#34;&gt;&lt;a href=&#34;#网络相关&#34; class=&#34;headerlink&#34; title=&#34;网络相关&#34;&gt;&lt;/a&gt;网络相关&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ping&lt;/strong&gt;：测试网络连通性&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ping&lt;/span&gt; example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;curl&lt;/strong&gt;：发送网络请求&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;wget&lt;/strong&gt;：下载文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; http://example.com/file&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;管道和重定向&#34;&gt;&lt;a href=&#34;#管道和重定向&#34; class=&#34;headerlink&#34; title=&#34;管道和重定向&#34;&gt;&lt;/a&gt;管道和重定向&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;**|**：管道，将一个命令的输出作为另一个命令的输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pattern&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;gt;**：重定向输出到文件（覆盖）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;gt;&amp;gt;**：重定向输出到文件（追加）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;lt;**：重定向输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; inputfile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设置变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;MY_VAR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$MY_VAR&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Shell-脚本&#34;&gt;&lt;a href=&#34;#Shell-脚本&#34; class=&#34;headerlink&#34; title=&#34;Shell 脚本&#34;&gt;&lt;/a&gt;Shell 脚本&lt;/h2&gt;&lt;p&gt;Shell 脚本是一组 Shell 命令的集合，通常用于自动化任务。以下是一个简单的 Shell 脚本示例：&lt;/p&gt;
&lt;h3 id=&#34;创建脚本文件&#34;&gt;&lt;a href=&#34;#创建脚本文件&#34; class=&#34;headerlink&#34; title=&#34;创建脚本文件&#34;&gt;&lt;/a&gt;创建脚本文件&lt;/h3&gt;&lt;p&gt;使用你喜欢的文本编辑器创建一个脚本文件，例如 &lt;code&gt;myscript.sh&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写脚本&#34;&gt;&lt;a href=&#34;#编写脚本&#34; class=&#34;headerlink&#34; title=&#34;编写脚本&#34;&gt;&lt;/a&gt;编写脚本&lt;/h3&gt;&lt;p&gt;在脚本文件中编写以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 打印消息&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is a simple shell script.&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 设置变量&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;NAME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Alice&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用变量&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, &lt;span class=&#34;token variable&#34;&gt;$NAME&lt;/span&gt;!&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 条件语句&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$NAME&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Alice&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome, Alice!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;You are not Alice.&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 循环&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Number: &lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 函数&lt;/span&gt;
&lt;span class=&#34;token function-name function&#34;&gt;my_function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is a function.&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 调用函数&lt;/span&gt;
my_function&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运行脚本&#34;&gt;&lt;a href=&#34;#运行脚本&#34; class=&#34;headerlink&#34; title=&#34;运行脚本&#34;&gt;&lt;/a&gt;运行脚本&lt;/h3&gt;&lt;p&gt;首先使脚本可执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后运行脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</guid>
            <title>使用cloudflare的R2创建图床</title>
            <link>https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</link>
            <category>教程</category>
            <pubDate>Sat, 27 Jul 2024 15:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;a href=&#34;#使用cloudflare的R2创建图床&#34; class=&#34;headerlink&#34; title=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;/a&gt;使用cloudflare的R2创建图床&lt;/h1&gt;&lt;h2 id=&#34;创建存储桶&#34;&gt;&lt;a href=&#34;#创建存储桶&#34; class=&#34;headerlink&#34; title=&#34;创建存储桶&#34;&gt;&lt;/a&gt;创建存储桶&lt;/h2&gt;&lt;p&gt;首先有一个cloudflare账号并且成功开通R2服务&lt;/p&gt;
&lt;p&gt;依次点击R2-&amp;gt;创建存储桶&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/8c361d6ac6f76ad87da98ce758a4261a.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入创建的桶，点击设置，下滑点击连接到域，example.com为你在cloudflare上托管的域名，会自动添加记录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e02d80f0f528eb474a327a3ee2aac1cc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;等待初始化成功就可以上传图片了并通过url访问了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/592642fec58d64822ca9dd28855095c9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传图片后点进去就能看到url&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/33de127f3053a3537919fae0a5b35c61.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装PicGo&#34;&gt;&lt;a href=&#34;#安装PicGo&#34; class=&#34;headerlink&#34; title=&#34;安装PicGo&#34;&gt;&lt;/a&gt;安装PicGo&lt;/h2&gt;&lt;p&gt;这个用于管理图片上传和浏览&lt;/p&gt;
&lt;p&gt;github仓库地址&lt;a href=&#34;https://github.com/Molunerfinn/PicGo&#34;&gt;Releases · Molunerfinn/PicGo (github.com)&lt;/a&gt;下载安装&lt;/p&gt;
&lt;p&gt;要先下载node.js环境，看往期文章&lt;/p&gt;
&lt;p&gt;完成后打开软件进入插件搜索&lt;code&gt;S3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/9db03c02e835473d6d06852a17c625b4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置picgo&lt;/p&gt;
&lt;p&gt;先创建API令牌&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/658d705739daffbba58141c804c382d5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后像这样设置，创建完成记得保存密钥&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3532bc2477a125fef6ac1db367b602d0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;保存密钥后关闭&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5d17e288bc348b17904a78a2b0d48ae0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开软件，+号添加配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/22d21e489a73ad311ebd53ec422faee8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3ca6c26f83e255df9dce765281e8a034.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到这个S3API&lt;/p&gt;
&lt;p&gt;如下填写&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e2d3e9e11a19b0a3e1e2c6a7538ee923.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/2b5992966ed9d88fe80c8f1b8d242fac.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/27/powershell-ti-quan/</guid>
            <title>powershell提权</title>
            <link>https://0xdadream.github.io/2024/07/27/powershell-ti-quan/</link>
            <category>windows</category>
            <category>tools</category>
            <pubDate>Sat, 27 Jul 2024 10:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;powershell提权&#34;&gt;&lt;a href=&#34;#powershell提权&#34; class=&#34;headerlink&#34; title=&#34;powershell提权&#34;&gt;&lt;/a&gt;powershell提权&lt;/h1&gt;&lt;p&gt;安装gsudo&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;winget &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; gerardog.gsudo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gerardog.github.io/gsudo/docs/install&#34;&gt;How to Install | gsudo Documentation (gerardog.github.io)&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/27/ming-ling-xing-shu-ru-python-tiao-zhuan-wei-ruan-shang-dian/</guid>
            <title>命令行输入python跳转微软商店</title>
            <link>https://0xdadream.github.io/2024/07/27/ming-ling-xing-shu-ru-python-tiao-zhuan-wei-ruan-shang-dian/</link>
            <category>bug</category>
            <pubDate>Sat, 27 Jul 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;命令行输入python跳转微软商店&#34;&gt;&lt;a href=&#34;#命令行输入python跳转微软商店&#34; class=&#34;headerlink&#34; title=&#34;命令行输入python跳转微软商店&#34;&gt;&lt;/a&gt;命令行输入python跳转微软商店&lt;/h1&gt;&lt;p&gt;删除环境变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/644f05c4b54d27b5796941ad33aea87a.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/20/linux-mei-hua-ming-ling-xing/</guid>
            <title>linux美化命令行</title>
            <link>https://0xdadream.github.io/2024/07/20/linux-mei-hua-ming-ling-xing/</link>
            <category>tip</category>
            <pubDate>Sat, 20 Jul 2024 06:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux美化命令行&#34;&gt;&lt;a href=&#34;#linux美化命令行&#34; class=&#34;headerlink&#34; title=&#34;linux美化命令行&#34;&gt;&lt;/a&gt;linux美化命令行&lt;/h1&gt;&lt;h2 id=&#34;centos8&#34;&gt;&lt;a href=&#34;#centos8&#34; class=&#34;headerlink&#34; title=&#34;centos8&#34;&gt;&lt;/a&gt;centos8&lt;/h2&gt;&lt;h3 id=&#34;安装和配置-Zsh&#34;&gt;&lt;a href=&#34;#安装和配置-Zsh&#34; class=&#34;headerlink&#34; title=&#34;安装和配置 Zsh&#34;&gt;&lt;/a&gt;安装和配置 Zsh&lt;/h3&gt;&lt;p&gt;首先，安装 Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将默认 shell 更改为 Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;chsh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新登录以使更改生效，或者使用以下命令启动 Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装和配置-Oh-My-Zsh&#34;&gt;&lt;a href=&#34;#安装和配置-Oh-My-Zsh&#34; class=&#34;headerlink&#34; title=&#34;安装和配置 Oh My Zsh&#34;&gt;&lt;/a&gt;安装和配置 Oh My Zsh&lt;/h3&gt;&lt;p&gt;下载并安装 Oh My Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装并启用-Powerline&#34;&gt;&lt;a href=&#34;#安装并启用-Powerline&#34; class=&#34;headerlink&#34; title=&#34;安装并启用 Powerline&#34;&gt;&lt;/a&gt;安装并启用 Powerline&lt;/h3&gt;&lt;p&gt;安装 Powerline 及其字体支持：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; epel-release
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; powerline powerline-fonts&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件以启用 Powerline：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在文件末尾添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; /usr/share/powerline/zsh/powerline.zsh &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /usr/share/powerline/zsh/powerline.zsh
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出，然后重新加载 &lt;code&gt;~/.zshrc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装并配置插件&#34;&gt;&lt;a href=&#34;#安装并配置插件&#34; class=&#34;headerlink&#34; title=&#34;安装并配置插件&#34;&gt;&lt;/a&gt;安装并配置插件&lt;/h3&gt;&lt;h4 id=&#34;安装-zsh-syntax-highlighting-插件&#34;&gt;&lt;a href=&#34;#安装-zsh-syntax-highlighting-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 zsh-syntax-highlighting 插件&#34;&gt;&lt;/a&gt;安装 zsh-syntax-highlighting 插件&lt;/h4&gt;&lt;p&gt;该插件提供命令语法高亮：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;安装-zsh-autosuggestions-插件&#34;&gt;&lt;a href=&#34;#安装-zsh-autosuggestions-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 zsh-autosuggestions 插件&#34;&gt;&lt;/a&gt;安装 zsh-autosuggestions 插件&lt;/h4&gt;&lt;p&gt;该插件提供命令自动建议：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;安装-fzf-插件&#34;&gt;&lt;a href=&#34;#安装-fzf-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 fzf 插件&#34;&gt;&lt;/a&gt;安装 fzf 插件&lt;/h4&gt;&lt;p&gt;该插件提供模糊搜索功能：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ctrl+R开启搜索&lt;/p&gt;
&lt;h4 id=&#34;安装-zsh-history-substring-search-插件&#34;&gt;&lt;a href=&#34;#安装-zsh-history-substring-search-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 zsh-history-substring-search 插件&#34;&gt;&lt;/a&gt;安装 zsh-history-substring-search 插件&lt;/h4&gt;&lt;p&gt;该插件提供历史记录子字符串搜索：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-history-substring-search ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;上箭头键（↑）&lt;/strong&gt;：在历史记录中查找当前输入的子字符串的上一条记录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下箭头键（↓）&lt;/strong&gt;：在历史记录中查找当前输入的子字符串的下一条记录&lt;/p&gt;
&lt;h3 id=&#34;安装-z-插件&#34;&gt;&lt;a href=&#34;#安装-z-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 z 插件&#34;&gt;&lt;/a&gt;安装 &lt;code&gt;z&lt;/code&gt; 插件&lt;/h3&gt;&lt;p&gt;克隆 &lt;code&gt;z&lt;/code&gt; 插件仓库，用于目录跳转的非常方便的工具：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/rupa/z.git /var/local/z&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里不能放在&lt;code&gt;~&lt;/code&gt;目录，有报错，没有目录自己创建&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z &amp;lt;部分目录名&amp;gt;&lt;/code&gt;：跳转到包含指定部分目录名的路径中访问频率最高的目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z -l &amp;lt;部分目录名&amp;gt;&lt;/code&gt;：列出包含指定部分目录名的所有目录，并按访问频率排序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z -c &amp;lt;部分目录名&amp;gt;&lt;/code&gt;：列出包含指定部分目录名的所有目录，并按访问时间排序&lt;/p&gt;
&lt;h4 id=&#34;配置插件&#34;&gt;&lt;a href=&#34;#配置插件&#34; class=&#34;headerlink&#34; title=&#34;配置插件&#34;&gt;&lt;/a&gt;配置插件&lt;/h4&gt;&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件，添加并启用插件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到 &lt;code&gt;plugins&lt;/code&gt; 这一行，并将其修改为如下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt;
    zsh-syntax-highlighting
    zsh-autosuggestions
    zsh-history-substring-search
    z
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在文件末尾添加以下内容以启用 &lt;code&gt;zsh-history-substring-search&lt;/code&gt; 和 &lt;code&gt;fzf&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

&lt;span class=&#34;token comment&#34;&gt;# z 插件配置&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /var/local/z/z.sh

&lt;span class=&#34;token comment&#34;&gt;# zsh-history-substring-search configuration&lt;/span&gt;
bindkey &lt;span class=&#34;token string&#34;&gt;&#39;^[[A&#39;&lt;/span&gt; history-substring-search-up
bindkey &lt;span class=&#34;token string&#34;&gt;&#39;^[[B&#39;&lt;/span&gt; history-substring-search-down

&lt;span class=&#34;token comment&#34;&gt;# fzf configuration&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; ~/.fzf.zsh &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.fzf.zsh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出，然后重新加载 &lt;code&gt;~/.zshrc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装并配置-Powerlevel10k-主题&#34;&gt;&lt;a href=&#34;#安装并配置-Powerlevel10k-主题&#34; class=&#34;headerlink&#34; title=&#34;安装并配置 Powerlevel10k 主题&#34;&gt;&lt;/a&gt;安装并配置 Powerlevel10k 主题&lt;/h3&gt;&lt;p&gt;Powerlevel10k 是一个高性能的 Zsh 主题，提供了丰富的美化选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/romkatv/powerlevel10k.git &lt;span class=&#34;token variable&#34;&gt;${ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom}&lt;/span&gt;/themes/powerlevel10k&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件，设置 Powerlevel10k 主题：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;ZSH_THEME&lt;/code&gt; 行修改为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;powerlevel10k/powerlevel10k&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出，然后重新加载 &lt;code&gt;~/.zshrc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一次启动时，Powerlevel10k 会引导你完成配置，选择你喜欢的配置选项即可&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;p10k configure &lt;span class=&#34;token comment&#34;&gt;# 重新配置主题&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Zsh-别名&#34;&gt;&lt;a href=&#34;#Zsh-别名&#34; class=&#34;headerlink&#34; title=&#34;Zsh 别名&#34;&gt;&lt;/a&gt;Zsh 别名&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;添加常用别名&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;ll&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ls -la&#39;&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;git status&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;保存并应用更改&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;一键脚本&#34;&gt;&lt;a href=&#34;#一键脚本&#34; class=&#34;headerlink&#34; title=&#34;一键脚本&#34;&gt;&lt;/a&gt;一键脚本&lt;/h3&gt;&lt;p&gt;创建文件zsh-setup.sh&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim zsh-setup.sh&lt;/code&gt;，将下面代码粘贴进来&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 更新系统并安装 Zsh&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum update &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 将默认 shell 更改为 Zsh&lt;/span&gt;
chsh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 Oh My Zsh&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 Powerline 和字体支持&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; epel-release
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; powerline powerline-fonts

&lt;span class=&#34;token comment&#34;&gt;# 配置 Powerline&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EOF&#39;
if [ -f /usr/share/powerline/zsh/powerline.zsh ]; then
    source /usr/share/powerline/zsh/powerline.zsh
fi
EOF&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 zsh-syntax-highlighting 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

&lt;span class=&#34;token comment&#34;&gt;# 安装 zsh-autosuggestions 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

&lt;span class=&#34;token comment&#34;&gt;# 安装 fzf 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install &lt;span class=&#34;token parameter variable&#34;&gt;--all&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 zsh-history-substring-search 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-history-substring-search ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search

&lt;span class=&#34;token comment&#34;&gt;# 安装 z 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/rupa/z.git /var/local/z

&lt;span class=&#34;token comment&#34;&gt;# 配置插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EOF&#39;
plugins=(
    git
    zsh-syntax-highlighting
    zsh-autosuggestions
    zsh-history-substring-search
    z
)

source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# z 插件配置
source /var/local/z/z.sh

# zsh-history-substring-search configuration
bindkey &#39;^[[A&#39; history-substring-search-up
bindkey &#39;^[[B&#39; history-substring-search-down

# fzf configuration
[ -f ~/.fzf.zsh ] &amp;amp;&amp;amp; source ~/.fzf.zsh
EOF&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 Powerlevel10k 主题&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/romkatv/powerlevel10k.git &lt;span class=&#34;token variable&#34;&gt;${ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom}&lt;/span&gt;/themes/powerlevel10k

&lt;span class=&#34;token comment&#34;&gt;# 配置 Powerlevel10k 主题&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sed&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;s/ZSH_THEME=&#34;.*&#34;/ZSH_THEME=&#34;powerlevel10k\/powerlevel10k&#34;/&#39;&lt;/span&gt; ~/.zshrc

&lt;span class=&#34;token comment&#34;&gt;# 重新加载 Zsh 配置&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc

&lt;span class=&#34;token comment&#34;&gt;# 提示用户重新登录以使更改生效&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please log out and log back in to apply the changes.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;chmod +x zsh-setup.sh&lt;/code&gt;赋予执行权限&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./zsh-setup.sh&lt;/code&gt;执行两次脚本，再执行&lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;ubuntu&#34;&gt;&lt;a href=&#34;#ubuntu&#34; class=&#34;headerlink&#34; title=&#34;ubuntu&#34;&gt;&lt;/a&gt;ubuntu&lt;/h2&gt;&lt;p&gt;和centos基本一致，将yum换成apt安装命令即可&lt;/p&gt;
&lt;p&gt;一键脚本也是将yum换成apt&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/03/centos8-guan-fang-yuan-shi-xiao/</guid>
            <title>centos8官方源失效</title>
            <link>https://0xdadream.github.io/2024/07/03/centos8-guan-fang-yuan-shi-xiao/</link>
            <category>bug</category>
            <pubDate>Wed, 03 Jul 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;centos8官方源失效&#34;&gt;&lt;a href=&#34;#centos8官方源失效&#34; class=&#34;headerlink&#34; title=&#34;centos8官方源失效&#34;&gt;&lt;/a&gt;centos8官方源失效&lt;/h1&gt;&lt;p&gt;当你运行yum的下载命令时有如下报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;CentOS Stream &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; - AppStream                                                                           
Errors during downloading metadata &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; repository &lt;span class=&#34;token string&#34;&gt;&#39;appstream&#39;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这表明官方源已经失效，只能更换源，这里更换国内的阿里镜像源，当然在这之前你可以试试ping各类网站，试试是不是自己网络问题&lt;/p&gt;
&lt;h2 id=&#34;更换源&#34;&gt;&lt;a href=&#34;#更换源&#34; class=&#34;headerlink&#34; title=&#34;更换源&#34;&gt;&lt;/a&gt;更换源&lt;/h2&gt;&lt;h3 id=&#34;重置-yum配置&#34;&gt;&lt;a href=&#34;#重置-yum配置&#34; class=&#34;headerlink&#34; title=&#34;重置 yum配置&#34;&gt;&lt;/a&gt;重置 yum配置&lt;/h3&gt;&lt;p&gt;如果之前进行了许多更改，可能需要重置yum配置以确保没有配置错误。&lt;/p&gt;
&lt;h4 id=&#34;备份并重新创建-yum-配置文件&#34;&gt;&lt;a href=&#34;#备份并重新创建-yum-配置文件&#34; class=&#34;headerlink&#34; title=&#34;备份并重新创建 yum 配置文件&#34;&gt;&lt;/a&gt;备份并重新创建 yum 配置文件&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; /etc/yum.repos.d /etc/yum.repos.d.bak
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; /etc/yum.repos.d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;下载阿里源&#34;&gt;&lt;a href=&#34;#下载阿里源&#34; class=&#34;headerlink&#34; title=&#34;下载阿里源&#34;&gt;&lt;/a&gt;下载阿里源&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-O&lt;/span&gt; /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若是本地网络，下载再上传&lt;/p&gt;
&lt;h4 id=&#34;清理-yum-缓存并重建缓存&#34;&gt;&lt;a href=&#34;#清理-yum-缓存并重建缓存&#34; class=&#34;headerlink&#34; title=&#34;清理 yum 缓存并重建缓存&#34;&gt;&lt;/a&gt;清理 yum 缓存并重建缓存&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum clean all
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum makecache&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;添加一个非官方源（国外）&#34;&gt;&lt;a href=&#34;#添加一个非官方源（国外）&#34; class=&#34;headerlink&#34; title=&#34;添加一个非官方源（国外）&#34;&gt;&lt;/a&gt;添加一个非官方源（国外）&lt;/h2&gt;&lt;h3 id=&#34;在-CentOS-8-x-上安装-EPEL-存储库&#34;&gt;&lt;a href=&#34;#在-CentOS-8-x-上安装-EPEL-存储库&#34; class=&#34;headerlink&#34; title=&#34;在 CentOS 8.x 上安装 EPEL 存储库&#34;&gt;&lt;/a&gt;在 CentOS 8.x 上安装 EPEL 存储库&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#切换到root&lt;/span&gt;
yum search epel  &lt;span class=&#34;token comment&#34;&gt;#搜索&lt;/span&gt;
yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; epel-release &lt;span class=&#34;token comment&#34;&gt;# 安装&lt;/span&gt;
yum config-manager --set-enabled epel &lt;span class=&#34;token comment&#34;&gt;#启用 EPEL 存储库&lt;/span&gt;
yum config-manager --set-enabled PowerTools 
yum update &lt;span class=&#34;token comment&#34;&gt;#更新源&lt;/span&gt;
yum repolist &lt;span class=&#34;token comment&#34;&gt;#查看已安装的库&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用-EPEL-存储库&#34;&gt;&lt;a href=&#34;#使用-EPEL-存储库&#34; class=&#34;headerlink&#34; title=&#34;使用 EPEL 存储库&#34;&gt;&lt;/a&gt;使用 EPEL 存储库&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;sudo yum --disablerepo=&#34;*&#34; --enablerepo=&#34;epel&#34; list available | grep &#39;package&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**&lt;code&gt;yum&lt;/code&gt;**： 这是 CentOS 和 RHEL 系统上用于管理软件包的命令行工具&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;--disablerepo=&#34;\*&#34;&lt;/code&gt;**： 这个选项禁用所有配置的存储库，&lt;code&gt;*&lt;/code&gt; 是一个通配符，表示所有存储库都将被禁用&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;--enablerepo=&#34;epel&#34;&lt;/code&gt;**： 这个选项仅启用 EPEL 存储库，这样可以确保命令只查询并显示 EPEL 存储库中的软件包&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;list available&lt;/code&gt;**： 这个子命令列出所有可用的软件包，它会显示在启用的存储库中可供安装的软件包列表&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;grep &#39;package&#39;&lt;/code&gt;**：匹配包名&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;--enablerepo&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;epel&#34;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 从 EPEL 存储库安装软件包&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装并启用-REMI-存储库&#34;&gt;&lt;a href=&#34;#安装并启用-REMI-存储库&#34; class=&#34;headerlink&#34; title=&#34;安装并启用 REMI 存储库&#34;&gt;&lt;/a&gt;安装并启用 REMI 存储库&lt;/h2&gt;&lt;p&gt;在终端中执行以下命令，在 CentOS 8上安装 REMI 存储库&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; https://rpms.remirepo.net/enterprise/remi-release-8.rpm&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查已启用的存储库&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum repolist&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;您可以安装 yum-config-manager，这将帮助您从命令行快速启用和禁用存储库，前面config-manager报错就可以安装&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; dnf-utils&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行时启用存储库&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token parameter variable&#34;&gt;--enablerepo&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;remi &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://help.aliyun.com/zh/ecs/user-guide/change-centos-8-repository-addresses&#34;&gt;CentOS 8 EOL如何切换源？_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cyberciti.biz/faq/how-to-enable-and-install-epel-repo-on-centos-8-x/&#34;&gt;如何在 CentOS 8 上启用和安装 EPEL Repo - nixCraft (cyberciti.biz)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://computingforgeeks.com/how-to-install-epel-repository-on-rhel-8-centos-8/&#34;&gt;如何在 RHEL 8 或 CentOS 8 上安装 EPEL 存储库 |ComputingForGeeks的&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://computingforgeeks.com/install-and-enable-remi-repository-on-centos-rhel/&#34;&gt;在 CentOS 8 上安装并启用 REMI 存储库 |RHEL 8 |ComputingForGeeks的&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/06/27/powershell-mei-hua/</guid>
            <title>powershell美化</title>
            <link>https://0xdadream.github.io/2024/06/27/powershell-mei-hua/</link>
            <category>tip</category>
            <pubDate>Thu, 27 Jun 2024 09:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;powershell美化&#34;&gt;&lt;a href=&#34;#powershell美化&#34; class=&#34;headerlink&#34; title=&#34;powershell美化&#34;&gt;&lt;/a&gt;powershell美化&lt;/h1&gt;&lt;h2 id=&#34;写在前面&#34;&gt;&lt;a href=&#34;#写在前面&#34; class=&#34;headerlink&#34; title=&#34;写在前面&#34;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;除了安装命令，其他都是测试命令，后续再写进配置文件&lt;/p&gt;
&lt;h2 id=&#34;安装主题控件&#34;&gt;&lt;a href=&#34;#安装主题控件&#34; class=&#34;headerlink&#34; title=&#34;安装主题控件&#34;&gt;&lt;/a&gt;安装主题控件&lt;/h2&gt;&lt;p&gt;安装主题oh-my-posh，powershell中执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;winget &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; JanDeDobbeleer.OhMyPosh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; winget
oh-my-posh init pwsh &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; Invoke-Expression &lt;span class=&#34;token comment&#34;&gt;# 查看效果，这里可能不能显示符号&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;点击加号旁边进入设置，左边点击powershell，向下滑点击外观，将字体改成nerd类型的字体，也能到&lt;a href=&#34;https://www.nerdfonts.com/font-downloads&#34;&gt;Nerd Fonts - Iconic font aggregator, glyphs/icons collection, &amp;amp; fonts patcher&lt;/a&gt;下载字体&lt;/p&gt;
&lt;p&gt;也能直接改默认&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Get-PoshThemes &lt;span class=&#34;token comment&#34;&gt;# 查看主题&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 选择并应用一个主题&lt;/span&gt;
oh-my-posh init pwsh &lt;span class=&#34;token parameter variable&#34;&gt;--config&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$env&lt;/span&gt;:POSH_THEMES_PATH&lt;span class=&#34;token entity&#34; title=&#34;\t&#34;&gt;\t&lt;/span&gt;heme.json&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; Invoke-Expression
&lt;span class=&#34;token comment&#34;&gt;# 将 $env:POSH_THEMES_PATH\theme.json 替换为实际的主题文件路径,运行$env:POSH_THEMES_PATH可以看到主题的绝对路径&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;powershell模块管理基础命令&#34;&gt;&lt;a href=&#34;#powershell模块管理基础命令&#34; class=&#34;headerlink&#34; title=&#34;powershell模块管理基础命令&#34;&gt;&lt;/a&gt;powershell模块管理基础命令&lt;/h2&gt;&lt;h3 id=&#34;1-安装模块&#34;&gt;&lt;a href=&#34;#1-安装模块&#34; class=&#34;headerlink&#34; title=&#34;1. 安装模块&#34;&gt;&lt;/a&gt;1. 安装模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Install-Module&lt;/code&gt; 命令从 PowerShell Gallery 安装模块：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Install-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Force&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-导入模块&#34;&gt;&lt;a href=&#34;#2-导入模块&#34; class=&#34;headerlink&#34; title=&#34;2. 导入模块&#34;&gt;&lt;/a&gt;2. 导入模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Import-Module&lt;/code&gt; 命令加载模块，使其命令可用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-查看已安装模块&#34;&gt;&lt;a href=&#34;#3-查看已安装模块&#34; class=&#34;headerlink&#34; title=&#34;3. 查看已安装模块&#34;&gt;&lt;/a&gt;3. 查看已安装模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Get-Module&lt;/code&gt; 查看当前会话中已加载的模块，或者使用 &lt;code&gt;-ListAvailable&lt;/code&gt; 参数查看系统上所有已安装的模块：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看当前会话中已加载的模块&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Get-Module&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 查看系统上所有已安装的模块&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Get-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ListAvailable&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-获取模块命令&#34;&gt;&lt;a href=&#34;#4-获取模块命令&#34; class=&#34;headerlink&#34; title=&#34;4. 获取模块命令&#34;&gt;&lt;/a&gt;4. 获取模块命令&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Get-Command&lt;/code&gt; 查看某个模块中的所有命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Get-Command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Module ModuleName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-查看模块信息&#34;&gt;&lt;a href=&#34;#5-查看模块信息&#34; class=&#34;headerlink&#34; title=&#34;5. 查看模块信息&#34;&gt;&lt;/a&gt;5. 查看模块信息&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Get-Module&lt;/code&gt; 查看模块的详细信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Get-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-更新模块&#34;&gt;&lt;a href=&#34;#6-更新模块&#34; class=&#34;headerlink&#34; title=&#34;6. 更新模块&#34;&gt;&lt;/a&gt;6. 更新模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Update-Module&lt;/code&gt; 更新已安装的模块：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Update-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-卸载模块&#34;&gt;&lt;a href=&#34;#7-卸载模块&#34; class=&#34;headerlink&#34; title=&#34;7. 卸载模块&#34;&gt;&lt;/a&gt;7. 卸载模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Remove-Module&lt;/code&gt; 卸载模块，从当前会话中移除：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Remove-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-查找模块&#34;&gt;&lt;a href=&#34;#8-查找模块&#34; class=&#34;headerlink&#34; title=&#34;8. 查找模块&#34;&gt;&lt;/a&gt;8. 查找模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Find-Module&lt;/code&gt; 从 PowerShell Gallery 查找模块：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Find-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-保存模块&#34;&gt;&lt;a href=&#34;#9-保存模块&#34; class=&#34;headerlink&#34; title=&#34;9. 保存模块&#34;&gt;&lt;/a&gt;9. 保存模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Save-Module&lt;/code&gt; 将模块保存到本地文件夹，而不是直接安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Save-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Path C:\Path\To\Save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-发布模块&#34;&gt;&lt;a href=&#34;#10-发布模块&#34; class=&#34;headerlink&#34; title=&#34;10. 发布模块&#34;&gt;&lt;/a&gt;10. 发布模块&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Publish-Module&lt;/code&gt; 将模块发布到 PowerShell Gallery（需要先进行配置和认证）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Publish-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name ModuleName &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;NuGetApiKey &lt;span class=&#34;token string&#34;&gt;&#39;YourApiKey&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;示例：安装和使用-PSReadLine-模块&#34;&gt;&lt;a href=&#34;#示例：安装和使用-PSReadLine-模块&#34; class=&#34;headerlink&#34; title=&#34;示例：安装和使用 PSReadLine 模块&#34;&gt;&lt;/a&gt;示例：安装和使用 &lt;code&gt;PSReadLine&lt;/code&gt; 模块&lt;/h3&gt;&lt;p&gt;下面是一个完整的示例，展示了如何安装、导入和使用 &lt;code&gt;PSReadLine&lt;/code&gt; 模块：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 安装 PSReadLine 模块&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Install-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name PSReadLine &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Force

&lt;span class=&#34;token comment&#34;&gt;# 导入 PSReadLine 模块&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name PSReadLine

&lt;span class=&#34;token comment&#34;&gt;# 查看 PSReadLine 模块中的命令&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Get-Command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Module PSReadLine

&lt;span class=&#34;token comment&#34;&gt;# 设置 PSReadLine 选项（例如，设置语法高亮颜色）&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PredictionSource History

&lt;span class=&#34;token comment&#34;&gt;# 卸载 PSReadLine 模块（从当前会话中移除）&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Remove-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name PSReadLine&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装插件（可选）&#34;&gt;&lt;a href=&#34;#安装插件（可选）&#34; class=&#34;headerlink&#34; title=&#34;安装插件（可选）&#34;&gt;&lt;/a&gt;安装插件（可选）&lt;/h2&gt;&lt;p&gt;首先设置PSGallery为受信任存储库&lt;/p&gt;
&lt;p&gt;要将&lt;code&gt;PSGallery&lt;/code&gt;设置为受信任的存储库，可以运行以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Set-PSRepository&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name &lt;span class=&#34;token string&#34;&gt;&#39;PSGallery&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;InstallationPolicy Truste&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PSReadLine&#34;&gt;&lt;a href=&#34;#PSReadLine&#34; class=&#34;headerlink&#34; title=&#34;PSReadLine&#34;&gt;&lt;/a&gt;PSReadLine&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Install-Module &lt;span class=&#34;token parameter variable&#34;&gt;-Name&lt;/span&gt; PSReadLine &lt;span class=&#34;token parameter variable&#34;&gt;-Scope&lt;/span&gt; CurrentUser &lt;span class=&#34;token parameter variable&#34;&gt;-Force&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-SkipPublisherCheck&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我的配置附上&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; PSReadLine
&lt;span class=&#34;token comment&#34;&gt;# 设置 PSReadLine 的编辑模式为 Emacs 风格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 禁用提示音&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 设置历史预测源为命令历史&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 设置预测视图样式为列表视图&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 启用工具提示功能&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 防止保存历史记录中的重复命令&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;EditMode Emacs `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;BellStyle None `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PredictionSource History `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PredictionViewStyle ListView `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ShowToolTips `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;HistoryNoDuplicates `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Colors @&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 设置不同元素的颜色，如命令、参数、运算符、变量、字符串、数字、成员、类型、和默认颜色&lt;/span&gt;
                         Command = &lt;span class=&#34;token string&#34;&gt;&#39;Cyan&#39;&lt;/span&gt;
                         Parameter = &lt;span class=&#34;token string&#34;&gt;&#39;Yellow&#39;&lt;/span&gt;
                         Operator = &lt;span class=&#34;token string&#34;&gt;&#39;Red&#39;&lt;/span&gt;
                         Variable = &lt;span class=&#34;token string&#34;&gt;&#39;Green&#39;&lt;/span&gt;
                         String = &lt;span class=&#34;token string&#34;&gt;&#39;Magenta&#39;&lt;/span&gt;
                         Number = &lt;span class=&#34;token string&#34;&gt;&#39;White&#39;&lt;/span&gt;
                         Member = &lt;span class=&#34;token string&#34;&gt;&#39;DarkYellow&#39;&lt;/span&gt;
                         &lt;span class=&#34;token function&#34;&gt;Type&lt;/span&gt; = &lt;span class=&#34;token string&#34;&gt;&#39;DarkCyan&#39;&lt;/span&gt;
                         Default = &lt;span class=&#34;token string&#34;&gt;&#39;Gray&#39;&lt;/span&gt;
                     &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 增量搜索，你在键入时会动态显示匹配项&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-PSReadLineKeyHandler&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Chord Ctrl+R &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Function&lt;/span&gt; ReverseSearchHistory
&lt;span class=&#34;token comment&#34;&gt;# 逐步搜索，每按一次快捷键会找到下一个匹配项&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#Set-PSReadLineKeyHandler -Chord &#39;Ctrl+r&#39; -Function HistorySearchBackward &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Shows navigable menu of all options when hitting Tab&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-PSReadLineKeyHandler&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Key Tab &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Function&lt;/span&gt; Complete
&lt;span class=&#34;token comment&#34;&gt;#Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;z&#34;&gt;&lt;a href=&#34;#z&#34; class=&#34;headerlink&#34; title=&#34;z&#34;&gt;&lt;/a&gt;z&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Install-Module&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name Z &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Scope CurrentUser &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Force &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;SkipPublisherCheck &lt;span class=&#34;token comment&#34;&gt;# 安装&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，使用以下命令导入 &lt;code&gt;z&lt;/code&gt; 模块：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; Z&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;使用-Z-模块&#34;&gt;&lt;a href=&#34;#使用-Z-模块&#34; class=&#34;headerlink&#34; title=&#34;使用 Z 模块&#34;&gt;&lt;/a&gt;使用 Z 模块&lt;/h4&gt;&lt;h5 id=&#34;切换到目录&#34;&gt;&lt;a href=&#34;#切换到目录&#34; class=&#34;headerlink&#34; title=&#34;切换到目录&#34;&gt;&lt;/a&gt;切换到目录&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;z&lt;/code&gt; 命令加上目录的部分名称，可以快速切换到该目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;z foldername&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如，假设你经常访问名为 &lt;code&gt;Projects&lt;/code&gt; 的目录，你可以通过以下命令快速跳转到该目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;z projects&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;显示目录历史&#34;&gt;&lt;a href=&#34;#显示目录历史&#34; class=&#34;headerlink&#34; title=&#34;显示目录历史&#34;&gt;&lt;/a&gt;显示目录历史&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;-l&lt;/code&gt; 参数列出所有之前访问过的目录历史：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;z &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;l&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;posh-git&#34;&gt;&lt;a href=&#34;#posh-git&#34; class=&#34;headerlink&#34; title=&#34;posh-git&#34;&gt;&lt;/a&gt;posh-git&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token function&#34;&gt;Install-Module&lt;/span&gt; posh-git &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Scope CurrentUser &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Force &lt;span class=&#34;token comment&#34;&gt;# 安装&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; posh-git &lt;span class=&#34;token comment&#34;&gt;# 导入&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该模块管理和监视 Git 仓库的状态，进入git目录就能看到&lt;/p&gt;
&lt;h3 id=&#34;PSFzf&#34;&gt;&lt;a href=&#34;#PSFzf&#34; class=&#34;headerlink&#34; title=&#34;PSFzf&#34;&gt;&lt;/a&gt;PSFzf&lt;/h3&gt;&lt;p&gt;提供了在命令行中进行快速模糊搜索和选择的功能&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Set-PsFzfOption &lt;span class=&#34;token parameter variable&#34;&gt;-PSReadLineChordProvider&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Ctrl+f&#39;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-PSReadLineChordReverseHistory&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Ctrl+r&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Set-PsFzfOption&lt;/code&gt; 命令用于配置 &lt;code&gt;PSFzf&lt;/code&gt; 模块的选项，以定制键绑定和其他行为，将 &lt;code&gt;Ctrl+f&lt;/code&gt; 设置为启动模糊搜索，&lt;code&gt;Ctrl+r&lt;/code&gt; 设置为反向搜索历史记录的功能，使用这个可以不用上面那个，或者换个快捷键&lt;/p&gt;
&lt;h2 id=&#34;添加别名&#34;&gt;&lt;a href=&#34;#添加别名&#34; class=&#34;headerlink&#34; title=&#34;添加别名&#34;&gt;&lt;/a&gt;添加别名&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Set-Alias ll &lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt;
Set-Alias g &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt;
Set-Alias &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; findstr&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我的部分别名&lt;/p&gt;
&lt;h2 id=&#34;设置环境变量&#34;&gt;&lt;a href=&#34;#设置环境变量&#34; class=&#34;headerlink&#34; title=&#34;设置环境变量&#34;&gt;&lt;/a&gt;设置环境变量&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$env&lt;/span&gt;:http_proxy&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://127.0.0.1:10809&#34;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$env&lt;/span&gt;:puser &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;C:\Users\xxx\Documents\PowerShell\Microsoft.PowerShell_profile.ps1&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的用处是在命令行执行&lt;code&gt;$env:http_proxy&lt;/code&gt;就可以改变powershell的代理端口，执行&lt;code&gt;cat $env:puser&lt;/code&gt;可以查看powershell的配置文件&lt;/p&gt;
&lt;h2 id=&#34;加入配置文件&#34;&gt;&lt;a href=&#34;#加入配置文件&#34; class=&#34;headerlink&#34; title=&#34;加入配置文件&#34;&gt;&lt;/a&gt;加入配置文件&lt;/h2&gt;&lt;p&gt;执行&lt;code&gt;$PROFILE&lt;/code&gt;可以得到配置文件目录，可以按目录创建文件，编辑文件，我的部分代码如下&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# Oh My Posh configuration&lt;/span&gt;
oh-my-posh init pwsh &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;config &lt;span class=&#34;token string&#34;&gt;&#34;C:\Users\xxx\AppData\Local\Programs\oh-my-posh\themes\night-owl.omp.json&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Invoke-Expression&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Import other modules&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; z
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; posh-git
&lt;span class=&#34;token comment&#34;&gt;#Icons&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; Terminal-Icons

&lt;span class=&#34;token comment&#34;&gt;# PSReadLine options&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; PSReadLine
&lt;span class=&#34;token comment&#34;&gt;# 设置 PSReadLine 的编辑模式为 Emacs 风格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 禁用提示音&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 设置历史预测源为命令历史&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 设置预测视图样式为列表视图&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 启用工具提示功能&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 防止保存历史记录中的重复命令&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;EditMode Emacs `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;BellStyle None `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PredictionSource History `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PredictionViewStyle ListView `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ShowToolTips `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;HistoryNoDuplicates `
                     &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Colors @&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 设置不同元素的颜色，如命令、参数、运算符、变量、字符串、数字、成员、类型、函数和默认颜色&lt;/span&gt;
                         Command = &lt;span class=&#34;token string&#34;&gt;&#39;Cyan&#39;&lt;/span&gt;
                         Parameter = &lt;span class=&#34;token string&#34;&gt;&#39;Yellow&#39;&lt;/span&gt;
                         Operator = &lt;span class=&#34;token string&#34;&gt;&#39;Red&#39;&lt;/span&gt;
                         Variable = &lt;span class=&#34;token string&#34;&gt;&#39;Green&#39;&lt;/span&gt;
                         String = &lt;span class=&#34;token string&#34;&gt;&#39;Magenta&#39;&lt;/span&gt;
                         Number = &lt;span class=&#34;token string&#34;&gt;&#39;White&#39;&lt;/span&gt;
                         Member = &lt;span class=&#34;token string&#34;&gt;&#39;DarkYellow&#39;&lt;/span&gt;
                         &lt;span class=&#34;token function&#34;&gt;Type&lt;/span&gt; = &lt;span class=&#34;token string&#34;&gt;&#39;DarkCyan&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#                         Function = &#39;Blue&#39;&lt;/span&gt;
                         Default = &lt;span class=&#34;token string&#34;&gt;&#39;Gray&#39;&lt;/span&gt;
                     &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 增量搜索，你在键入时会动态显示匹配项&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#Set-PSReadLineKeyHandler -Chord Ctrl+R -Function ReverseSearchHistory&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 逐步搜索，每按一次快捷键会找到下一个匹配项#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#Set-PSReadLineKeyHandler -Chord &#39;Ctrl+r&#39; -Function HistorySearchBackward &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Shows navigable menu of all options when hitting Tab&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-PSReadLineKeyHandler&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Key Tab &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Function&lt;/span&gt; Complete
&lt;span class=&#34;token comment&#34;&gt;#Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#Utilities&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; which &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$command&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;token function&#34;&gt;Get-Command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Name &lt;span class=&#34;token variable&#34;&gt;$command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ErrorAction SilentlyContinue &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;
	 &lt;span class=&#34;token function&#34;&gt;Select-Object&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ExpandProperty Path &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ErrorAction SilentlyContinue
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#Fzf&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Import-Module&lt;/span&gt; PSFzf
&lt;span class=&#34;token function&#34;&gt;Set-PsFzfOption&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PSReadLineChordProvider &lt;span class=&#34;token string&#34;&gt;&#39;Ctrl+f&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;PSReadLineChordReverseHistory &lt;span class=&#34;token string&#34;&gt;&#39;Ctrl+r&#39;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Alias&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-Alias&lt;/span&gt; ll &lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;Set-Alias&lt;/span&gt; g git
&lt;span class=&#34;token function&#34;&gt;Set-Alias&lt;/span&gt; grep findstr

&lt;span class=&#34;token comment&#34;&gt;#env&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$env&lt;/span&gt;:http_proxy=&lt;span class=&#34;token string&#34;&gt;&#34;http://127.0.0.1:10809&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#启动改变代理&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$env&lt;/span&gt;:puser = &lt;span class=&#34;token string&#34;&gt;&#34;C:\Users\xxx\Documents\PowerShell\Microsoft.PowerShell_profile.ps1&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中which函数实现了linux上的函数功能，其他的前面有讲，保存，启动powershell&lt;/p&gt;
&lt;h2 id=&#34;vscode图标不显示&#34;&gt;&lt;a href=&#34;#vscode图标不显示&#34; class=&#34;headerlink&#34; title=&#34;vscode图标不显示&#34;&gt;&lt;/a&gt;vscode图标不显示&lt;/h2&gt;&lt;p&gt;更改字体为CaskaydiaCove Nerd Font Mono，改成可显示就行，右上角文件-&amp;gt;首选项-&amp;gt;设置，搜索&lt;code&gt;terminal font&lt;/code&gt;，两个都改了吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/08/042de8724389e36cbf3332d529f917ec.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/06/27/hexo-shang-chuan-tu-pian/</guid>
            <title>hexo上传图片</title>
            <link>https://0xdadream.github.io/2024/06/27/hexo-shang-chuan-tu-pian/</link>
            <category>tip</category>
            <pubDate>Thu, 27 Jun 2024 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;hexo上传图片&#34;&gt;&lt;a href=&#34;#hexo上传图片&#34; class=&#34;headerlink&#34; title=&#34;hexo上传图片&#34;&gt;&lt;/a&gt;hexo上传图片&lt;/h1&gt;&lt;p&gt;我是hexo5.4.0，暂时没找到好的办法&lt;/p&gt;
&lt;p&gt;笨办法就是放在source里的images文件夹里，使用路径&lt;code&gt;images/xxx.png&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/06/23/githubpage-tian-jia-yu-ming/</guid>
            <title>githubpage添加域名</title>
            <link>https://0xdadream.github.io/2024/06/23/githubpage-tian-jia-yu-ming/</link>
            <category>tip</category>
            <pubDate>Sun, 23 Jun 2024 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;githubpage添加域名&#34;&gt;&lt;a href=&#34;#githubpage添加域名&#34; class=&#34;headerlink&#34; title=&#34;githubpage添加域名&#34;&gt;&lt;/a&gt;githubpage添加域名&lt;/h1&gt;&lt;h2 id=&#34;域名解析&#34;&gt;&lt;a href=&#34;#域名解析&#34; class=&#34;headerlink&#34; title=&#34;域名解析&#34;&gt;&lt;/a&gt;域名解析&lt;/h2&gt;&lt;p&gt;到域名解析商添加记录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;一条A记录 主机记录@ 你的博客IP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ping xxx.github.io&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
一条CNAME记录 主机记录www xxx.github.io&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;绑定github&#34;&gt;&lt;a href=&#34;#绑定github&#34; class=&#34;headerlink&#34; title=&#34;绑定github&#34;&gt;&lt;/a&gt;绑定github&lt;/h2&gt;&lt;p&gt;进入page项目的仓库，点击settings，设置Custom domain，输入自己的域名，检测通过后，到source文件夹下创建&lt;code&gt;CNAME.txt&lt;/code&gt;内容为&lt;code&gt;你的域名&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/06/23/hexo-qian-yi/</guid>
            <title>hexo迁移</title>
            <link>https://0xdadream.github.io/2024/06/23/hexo-qian-yi/</link>
            <category>tip</category>
            <pubDate>Sun, 23 Jun 2024 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;hexo迁移&#34;&gt;&lt;a href=&#34;#hexo迁移&#34; class=&#34;headerlink&#34; title=&#34;hexo迁移&#34;&gt;&lt;/a&gt;hexo迁移&lt;/h1&gt;&lt;h2 id=&#34;直接更换电脑&#34;&gt;&lt;a href=&#34;#直接更换电脑&#34; class=&#34;headerlink&#34; title=&#34;直接更换电脑&#34;&gt;&lt;/a&gt;直接更换电脑&lt;/h2&gt;&lt;h3 id=&#34;安装环境&#34;&gt;&lt;a href=&#34;#安装环境&#34; class=&#34;headerlink&#34; title=&#34;安装环境&#34;&gt;&lt;/a&gt;安装环境&lt;/h3&gt;&lt;p&gt;安装git和node，自行搜索安装，node推荐安装在github上的nvm，方便切换版本&lt;/p&gt;
&lt;h3 id=&#34;本机与github建立连接&#34;&gt;&lt;a href=&#34;#本机与github建立连接&#34; class=&#34;headerlink&#34; title=&#34;本机与github建立连接&#34;&gt;&lt;/a&gt;本机与github建立连接&lt;/h3&gt;&lt;p&gt;设置git配置信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; config &lt;span class=&#34;token parameter variable&#34;&gt;--global&lt;/span&gt; user.name &lt;span class=&#34;token string&#34;&gt;&#34;你的GitHub用户名&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; config &lt;span class=&#34;token parameter variable&#34;&gt;--global&lt;/span&gt; user.email &lt;span class=&#34;token string&#34;&gt;&#34;你的GitHub注册邮箱&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成ssh密钥文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; rsa &lt;span class=&#34;token parameter variable&#34;&gt;-C&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;你的GitHub注册邮箱&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后连续三次回车&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c/Users/youuser/.ssh/id_rsa.pub&lt;/code&gt;里面的内容即是双方通信的密钥&lt;/p&gt;
&lt;p&gt;将密钥复制到github-&amp;gt;右上角头像-&amp;gt;settings-&amp;gt;SSH and GPG keys，保存&lt;/p&gt;
&lt;p&gt;本机测试连接&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-T&lt;/span&gt; git@github.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装hexo&#34;&gt;&lt;a href=&#34;#安装hexo&#34; class=&#34;headerlink&#34; title=&#34;安装hexo&#34;&gt;&lt;/a&gt;安装hexo&lt;/h3&gt;&lt;p&gt;创建一个文件夹用于存放博客文件，cd 进入该目录，执行命令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; hexo-cli &lt;span class=&#34;token comment&#34;&gt;#安装hexo&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; update hexo &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#升级hexo&lt;/span&gt;
hexo init  --no-install &lt;span class=&#34;token comment&#34;&gt;#初始化blog，需要先创建一个博客主文件夹，在文件夹里执行，就是上面创建的，或者&lt;/span&gt;
hexo init blog&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;文件夹名&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; --no-install &lt;span class=&#34;token comment&#34;&gt;#--no-install是阻止项目克隆下来后，自动安装依赖，不使用会自动安装最新版本hexo，具体自己影响实测&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; hexo@5.4.0 &lt;span class=&#34;token comment&#34;&gt;#安装想要的hexo版本，我的这个主题这个版本合适&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装插件&#34;&gt;&lt;a href=&#34;#安装插件&#34; class=&#34;headerlink&#34; title=&#34;安装插件&#34;&gt;&lt;/a&gt;安装插件&lt;/h3&gt;&lt;p&gt;旧电脑在博客主目录执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; list &lt;span class=&#34;token comment&#34;&gt;# 查看安装过的插件&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新电脑执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&#34;token comment&#34;&gt;#安装包名字，不加版本默认最新 &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也能把旧电脑的&lt;code&gt;package.json&lt;/code&gt;文件复制到新电脑，在主目录下执行&lt;code&gt;npm install&lt;/code&gt;安装插件&lt;/p&gt;
&lt;h3 id=&#34;移植文件&#34;&gt;&lt;a href=&#34;#移植文件&#34; class=&#34;headerlink&#34; title=&#34;移植文件&#34;&gt;&lt;/a&gt;移植文件&lt;/h3&gt;&lt;p&gt;将&lt;code&gt;source&lt;/code&gt; &lt;code&gt;themes&lt;/code&gt; &lt;code&gt;_config.yml&lt;/code&gt;从旧电脑复制过来&lt;/p&gt;
&lt;h3 id=&#34;部署&#34;&gt;&lt;a href=&#34;#部署&#34; class=&#34;headerlink&#34; title=&#34;部署&#34;&gt;&lt;/a&gt;部署&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo g &lt;span class=&#34;token comment&#34;&gt;#生成静态文件&lt;/span&gt;
hexo s &lt;span class=&#34;token comment&#34;&gt;#测试网页&lt;/span&gt;
hexo d &lt;span class=&#34;token comment&#34;&gt;#没问题部署&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
    </channel>
</rss>
