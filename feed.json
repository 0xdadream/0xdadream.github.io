{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2024/11/10/linux-fang-huo-qiang-gui-ze/",
            "url": "https://0xdadream.github.io/2024/11/10/linux-fang-huo-qiang-gui-ze/",
            "title": "linux防火墙规则",
            "date_published": "2024-11-10T01:25:00.000Z",
            "content_html": "<h1 id=\"linux防火墙规则\"><a href=\"#linux防火墙规则\" class=\"headerlink\" title=\"linux防火墙规则\"></a>linux防火墙规则</h1><h2 id=\"iptables\"><a href=\"#iptables\" class=\"headerlink\" title=\"iptables\"></a>iptables</h2><h4 id=\"1-查看当前防火墙规则\"><a href=\"#1-查看当前防火墙规则\" class=\"headerlink\" title=\"1. 查看当前防火墙规则\"></a>1. 查看当前防火墙规则</h4><p><strong>使用 iptables 查看规则：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-L</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将列出所有的链和规则。<code>-L</code> 参数代表列出（List）。</p>\n<p><strong>查看详细信息：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-L</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>-v</code> 参数代表详细（Verbose），<code>-n</code> 参数代表不解析服务名称（Numeric）。</p>\n<p><strong>查看特定链的规则：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-L</span> INPUT <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-配置防火墙规则\"><a href=\"#2-配置防火墙规则\" class=\"headerlink\" title=\"2. 配置防火墙规则\"></a>2. 配置防火墙规则</h4><p><strong>添加规则允许 SSH：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">--dport</span> <span class=\"token number\">22</span> <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这条命令将添加一条规则到 <code>INPUT</code> 链，允许所有进入的 TCP 流量到达端口 22（SSH）。</p>\n<p><strong>添加规则拒绝特定 IP：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.100 <span class=\"token parameter variable\">-j</span> DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这条命令将拒绝来自 IP 地址 <code>192.168.1.100</code> 的所有流量。</p>\n<p><strong>添加规则允许来自特定 IP 的 HTTP 访问：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-p</span> tcp <span class=\"token parameter variable\">-s</span> <span class=\"token number\">192.168</span>.1.101 <span class=\"token parameter variable\">--dport</span> <span class=\"token number\">80</span> <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>添加规则允许已建立的连接：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-A</span> INPUT <span class=\"token parameter variable\">-m</span> state <span class=\"token parameter variable\">--state</span> ESTABLISHED,RELATED <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>添加规则允许出站流量：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-A</span> OUTPUT <span class=\"token parameter variable\">-j</span> ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"3-删除防火墙规则\"><a href=\"#3-删除防火墙规则\" class=\"headerlink\" title=\"3. 删除防火墙规则\"></a>3. 删除防火墙规则</h4><p><strong>删除特定规则：</strong> 要删除规则，你需要知道规则的编号。使用 <code>-L --line-numbers</code> 查看规则编号：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-L</span> --line-numbers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后删除规则，例如删除编号为 3 的规则：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-D</span> INPUT <span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"4-保存防火墙规则\"><a href=\"#4-保存防火墙规则\" class=\"headerlink\" title=\"4. 保存防火墙规则\"></a>4. 保存防火墙规则</h4><p><strong>保存 iptables 规则：</strong> 在 Debian/Ubuntu 上，你可以使用 <code>iptables-persistent</code> 包来保存规则：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> iptables-persistent<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在 CentOS/RHEL 上，你可以使用 <code>service</code> 或 <code>systemctl</code> 命令来保存规则：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> iptables save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl save iptables<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"5-恢复防火墙规则\"><a href=\"#5-恢复防火墙规则\" class=\"headerlink\" title=\"5. 恢复防火墙规则\"></a>5. 恢复防火墙规则</h4><p><strong>在系统启动时恢复 iptables 规则：</strong> 在 Debian/Ubuntu 上，安装 <code>iptables-persistent</code> 后，规则会自动在启动时恢复。在 CentOS/RHEL 上，你需要手动保存规则，并在 <code>/etc/rc.d/rc.local</code> 或使用 <code>systemctl</code> 配置启动脚本中添加恢复规则的命令。</p>\n<h4 id=\"6-重置防火墙规则\"><a href=\"#6-重置防火墙规则\" class=\"headerlink\" title=\"6. 重置防火墙规则\"></a>6. 重置防火墙规则</h4><p><strong>重置 iptables 到默认设置：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-F</span>\n<span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-X</span>\n<span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-t</span> nat <span class=\"token parameter variable\">-F</span>\n<span class=\"token function\">sudo</span> iptables <span class=\"token parameter variable\">-t</span> nat <span class=\"token parameter variable\">-X</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>-F</code> 代表清空规则，<code>-X</code> 代表清空用户自定义链。</p>\n<h4 id=\"7-防火墙规则的持久化\"><a href=\"#7-防火墙规则的持久化\" class=\"headerlink\" title=\"7. 防火墙规则的持久化\"></a>7. 防火墙规则的持久化</h4><p><strong>Ubuntu/Debian：</strong> 安装 <code>iptables-persistent</code> 包后，它会在 <code>/etc/iptables/rules.v4</code> 文件中保存规则。</p>\n<p><strong>CentOS/RHEL：</strong> 你可以使用 <code>iptables-services</code> 包来管理 iptables 的持久化：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> iptables-services\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> iptables\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> iptables save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"8-查看和管理系统服务\"><a href=\"#8-查看和管理系统服务\" class=\"headerlink\" title=\"8. 查看和管理系统服务\"></a>8. 查看和管理系统服务</h4><p><strong>查看所有服务：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl list-units <span class=\"token parameter variable\">--type</span><span class=\"token operator\">=</span>service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>启动/停止服务：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl start iptables\n<span class=\"token function\">sudo</span> systemctl stop iptables<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>设置服务开机启动：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> iptables<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>禁用服务开机启动：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl disable iptables<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>以上是 Linux 防火墙规则的完整指南，包括查看、配置、删除、保存、恢复和重置防火墙规则等操作。请根据你的具体需求和 Linux 发行版进行相应的操作。</p>\n<h4 id=\"9-关闭或强制删除防火墙\"><a href=\"#9-关闭或强制删除防火墙\" class=\"headerlink\" title=\"9. 关闭或强制删除防火墙\"></a>9. 关闭或强制删除防火墙</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> purge netfilter-persistent <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">reboot</span>\n或 <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/iptables <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"firewalld\"><a href=\"#firewalld\" class=\"headerlink\" title=\"firewalld\"></a>firewalld</h2><h4 id=\"1-Firewalld-简介\"><a href=\"#1-Firewalld-简介\" class=\"headerlink\" title=\"1. Firewalld 简介\"></a>1. Firewalld 简介</h4><p><code>Firewalld</code> 是一个动态防火墙管理工具，它提供了基于区域（zone）和服务（service）的简化配置界面，使得管理防火墙规则更加容易。它支持动态更新防火墙规则，可以在运行时添加、删除、修改规则，而不需要重新加载整个防火墙配置。</p>\n<h4 id=\"2-服务的启动、停止和状态查看\"><a href=\"#2-服务的启动、停止和状态查看\" class=\"headerlink\" title=\"2. 服务的启动、停止和状态查看\"></a>2. 服务的启动、停止和状态查看</h4><ul>\n<li><p>启动防火墙：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl start firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>停止防火墙：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl stop firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>设置防火墙开机启动：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>禁用防火墙开机启动：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl disable firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看防火墙状态：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl status firewalld\n<span class=\"token comment\"># 或者</span>\n<span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--state</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>查看版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"3-查看和设置默认区域\"><a href=\"#3-查看和设置默认区域\" class=\"headerlink\" title=\"3. 查看和设置默认区域\"></a>3. 查看和设置默认区域</h4><ul>\n<li><p>查看默认区域：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd --get-default-zone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看所有可用的区域：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd --get-zones<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看当前活动区域：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd --get-active-zones<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>设置默认区域：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd --set-default-zone<span class=\"token operator\">=</span>your_zone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中your_zone是你想要设置的默认区域的名称，比如public、internal、dmz等。</p>\n</li>\n</ul>\n<h4 id=\"4-使用-firewall-cmd-命令行工具进行规则配置\"><a href=\"#4-使用-firewall-cmd-命令行工具进行规则配置\" class=\"headerlink\" title=\"4. 使用 firewall-cmd 命令行工具进行规则配置\"></a>4. 使用 firewall-cmd 命令行工具进行规则配置</h4><ul>\n<li><p>添加规则开放端口：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp <span class=\"token parameter variable\">--permanent</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>添加规则允许服务：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http <span class=\"token parameter variable\">--permanent</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>删除规则：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --remove-service<span class=\"token operator\">=</span>http <span class=\"token parameter variable\">--permanent</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"5-重新加载防火墙配置\"><a href=\"#5-重新加载防火墙配置\" class=\"headerlink\" title=\"5. 重新加载防火墙配置\"></a>5. 重新加载防火墙配置</h4><p>为了使永久配置生效，需要重新加载 <code>firewalld</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--reload</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"6-查询已开放的端口、已允许的服务\"><a href=\"#6-查询已开放的端口、已允许的服务\" class=\"headerlink\" title=\"6. 查询已开放的端口、已允许的服务\"></a>6. 查询已开放的端口、已允许的服务</h4><ul>\n<li><p>查询特定区域支持的所有特性：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>zone_name --list-all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中，zone_name是你要查询的区域的名称。</p>\n</li>\n<li><p>查询特定区域支持的所有服务：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>zone_name --list-services<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查询特定区域开放的端口：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>zone_name --list-ports<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"7-绑定接口到特定区域\"><a href=\"#7-绑定接口到特定区域\" class=\"headerlink\" title=\"7. 绑定接口到特定区域\"></a>7. 绑定接口到特定区域</h4><ul>\n<li><p>永久更改接口的区域绑定：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>home --add-interface<span class=\"token operator\">=</span>eth0 <span class=\"token parameter variable\">--permanent</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>为了使永久更改生效，需要重新加载firewalld</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--reload</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>再次验证更改：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewall-cmd --get-active-zones<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n",
            "tags": [
                "linux"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/",
            "url": "https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/",
            "title": "flask教程",
            "date_published": "2024-11-06T01:25:00.000Z",
            "content_html": "<h1 id=\"flask教程\"><a href=\"#flask教程\" class=\"headerlink\" title=\"flask教程\"></a>flask教程</h1><h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><h3 id=\"中型\"><a href=\"#中型\" class=\"headerlink\" title=\"中型\"></a>中型</h3><pre class=\"line-numbers language-dtd\" data-language=\"dtd\"><code class=\"language-dtd\">my_flask_project/\n├── app/                     # 核心应用文件夹\n│   ├── __init__.py          # 应用初始化\n│   ├── routes.py            # 路由定义\n│   ├── models.py            # 数据模型（如需要）\n│   ├── templates/           # HTML 模板\n│   │   └── index.html\n│   └── static/              # 静态文件\n│       ├── css/\n│       │   └── style.css\n│       └── js/\n│           └── script.js\n├── config.py                # 配置文件\n├── run.py                   # 启动文件\n└── requirements.txt         # 依赖文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"app-init-py\"><a href=\"#app-init-py\" class=\"headerlink\" title=\"app/__init__.py\"></a><code>app/__init__.py</code></h4><p>在 <code>__init__.py</code> 中创建并初始化 Flask 应用，加载配置，并从 <code>routes.py</code> 注册路由。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>from_object<span class=\"token punctuation\">(</span><span class=\"token string\">'config.Config'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 加载配置</span>\n\n    <span class=\"token keyword\">with</span> app<span class=\"token punctuation\">.</span>app_context<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 导入并注册路由</span>\n        <span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> routes\n        <span class=\"token keyword\">return</span> app<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>说明</strong>：<code>create_app</code> 函数用于创建和配置应用实例。<code>app.app_context()</code> 确保在应用上下文中导入路由。</li>\n</ul>\n<h4 id=\"app-routes-py\"><a href=\"#app-routes-py\" class=\"headerlink\" title=\"app/routes.py\"></a><code>app/routes.py</code></h4><p>定义项目的路由，所有路由相关的逻辑放在这个文件中。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> render_template<span class=\"token punctuation\">,</span> current_app <span class=\"token keyword\">as</span> app\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>说明</strong>：<code>app.route('/')</code> 是根路径的路由，返回 <code>index.html</code> 模板页面。</li>\n</ul>\n<h4 id=\"app-models-py-（可选）\"><a href=\"#app-models-py-（可选）\" class=\"headerlink\" title=\"app/models.py （可选）\"></a><code>app/models.py</code> （可选）</h4><p>如果项目需要数据库模型，可以在此文件中定义。例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask_sqlalchemy <span class=\"token keyword\">import</span> SQLAlchemy\n\ndb <span class=\"token operator\">=</span> SQLAlchemy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    username <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"config-py\"><a href=\"#config-py\" class=\"headerlink\" title=\"config.py\"></a><code>config.py</code></h4><p>配置文件，用于管理全局配置（例如密钥、数据库 URI 等）。将敏感信息存储在环境变量中更安全。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">:</span>\n    SECRET_KEY <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string\">'your_secret_key'</span>\n    SQLALCHEMY_DATABASE_URI <span class=\"token operator\">=</span> <span class=\"token string\">'sqlite:///site.db'</span>\n    SQLALCHEMY_TRACK_MODIFICATIONS <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"app-templates-index-html\"><a href=\"#app-templates-index-html\" class=\"headerlink\" title=\"app/templates/index.html\"></a><code>app/templates/index.html</code></h4><p>HTML 模板文件示例。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>My Flask App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ url_for('static', filename='css/style.css') }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Welcome to My Flask App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Hello, Flask with modular structure!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ url_for('static', filename='js/script.js') }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"app-static-css-style-css\"><a href=\"#app-static-css-style-css\" class=\"headerlink\" title=\"app/static/css/style.css\"></a><code>app/static/css/style.css</code></h4><p>简单的 CSS 文件，用于为页面增加样式。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* static/css/style.css */</span>\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Arial<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f0f0f0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"app-static-js-script-js\"><a href=\"#app-static-js-script-js\" class=\"headerlink\" title=\"app/static/js/script.js\"></a><code>app/static/js/script.js</code></h4><p>简单的 JavaScript 文件。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// static/js/script.js</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to My Flask App with modular structure!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"run-py\"><a href=\"#run-py\" class=\"headerlink\" title=\"run.py\"></a><code>run.py</code></h4><p>项目的启动文件，通过调用 <code>create_app</code> 函数启动应用。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> app <span class=\"token keyword\">import</span> create_app\n\napp <span class=\"token operator\">=</span> create_app<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><strong>说明</strong>：<code>run.py</code> 是整个项目的入口文件，使用 <code>app.run(debug=True)</code> 启动应用程序。</li>\n</ul>\n<h4 id=\"requirements-txt\"><a href=\"#requirements-txt\" class=\"headerlink\" title=\"requirements.txt\"></a><code>requirements.txt</code></h4><p>包含项目依赖。</p>\n<h3 id=\"大型\"><a href=\"#大型\" class=\"headerlink\" title=\"大型\"></a>大型</h3><pre class=\"line-numbers language-dtd\" data-language=\"dtd\"><code class=\"language-dtd\">my_flask_project/\n├── app/\n│   ├── __init__.py           # 初始化应用程序和配置\n│   ├── routes.py             # 路由定义\n│   ├── models.py             # 数据库模型定义\n│   ├── templates/            # HTML 模板文件\n│   │   └── base.html\n│   ├── static/               # 静态文件（CSS、JS、图片等）\n│   │   ├── css/\n│   │   │   └── style.css\n│   │   ├── js/\n│   │   └── images/\n│   └── blueprints/           # 各个功能模块的蓝图\n│       ├── __init__.py\n│       ├── user/             # 用户模块\n│       │   ├── __init__.py\n│       │   ├── routes.py\n│       │   └── templates/\n│       └── admin/            # 管理员模块\n│           ├── __init__.py\n│           ├── routes.py\n│           └── templates/\n├── migrations/               # 数据库迁移文件（使用 Flask-Migrate）\n├── tests/                    # 测试代码\n│   ├── __init__.py\n│   └── test_app.py\n├── config.py                 # 配置文件\n├── manage.py                 # 启动、管理和迁移命令\n└── requirements.txt          # 依赖包<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>**<code>app/</code>**：主要应用程序文件夹，包含所有核心代码。</p>\n<ul>\n<li>**<code>__init__.py</code>**：初始化 Flask 应用、加载配置和注册蓝图。</li>\n<li>**<code>routes.py</code>**：定义全局路由。</li>\n<li>**<code>models.py</code>**：定义数据库模型。</li>\n<li>**<code>templates/</code>**：存储 HTML 模板。</li>\n<li>**<code>static/</code>**：存储静态文件，如 CSS、JavaScript 和图片。</li>\n<li>**<code>blueprints/</code>**：存储不同功能模块的蓝图，每个模块可以有自己的 <code>routes.py</code> 和 <code>templates/</code> 文件夹。</li>\n</ul>\n<p>**<code>migrations/</code>**：数据库迁移文件（如使用 Flask-Migrate 时生成）。</p>\n<p>**<code>tests/</code>**：测试文件夹，用于单元测试或集成测试。</p>\n<p>**<code>config.py</code>**：存储配置文件，如数据库连接和应用的全局设置。</p>\n<p>**<code>manage.py</code>**：用于管理项目的文件，可添加自定义命令，如启动服务器、初始化数据库等。</p>\n<p>**<code>requirements.txt</code>**：记录项目的所有依赖包。</p>\n</li>\n</ul>\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><h3 id=\"1-基本路由\"><a href=\"#1-基本路由\" class=\"headerlink\" title=\"1. 基本路由\"></a>1. 基本路由</h3><p>最简单的路由是将一个 URL 映射到一个视图函数。可以使用 <code>@app.route()</code> 装饰器来定义路由。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Welcome to the homepage!\"</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/about'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">about</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"This is the about page.\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>@app.route('/')</code>：当用户访问根路径（如 <code>http://localhost:5000/</code>）时，执行 <code>home</code> 函数。</li>\n<li><code>@app.route('/about')</code>：访问 <code>/about</code> 时，执行 <code>about</code> 函数。</li>\n</ul>\n<h3 id=\"2-动态路由\"><a href=\"#2-动态路由\" class=\"headerlink\" title=\"2. 动态路由\"></a>2. 动态路由</h3><p>可以在路由中添加动态部分，用来接收 URL 中的参数。动态部分用尖括号 <code>&lt;...&gt;</code> 表示，Flask 会自动将 URL 中的值传递给视图函数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/&lt;username&gt;'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">show_user</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span></span><span class=\"token string\">!\"</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>访问 <code>/user/john</code> 时，会输出 <code>Hello, john!</code>。</li>\n<li><code>&lt;username&gt;</code> 是一个动态参数，视图函数 <code>show_user</code> 将接收 <code>username</code> 的值。</li>\n</ul>\n<h4 id=\"指定数据类型\"><a href=\"#指定数据类型\" class=\"headerlink\" title=\"指定数据类型\"></a>指定数据类型</h4><p>默认情况下，Flask 会将 URL 参数作为字符串处理。如果需要其他类型的数据，可以在尖括号内指定：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/post/&lt;int:post_id&gt;'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">show_post</span><span class=\"token punctuation\">(</span>post_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Post ID is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>post_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>&lt;int:post_id&gt;</code> 指定了 <code>post_id</code> 必须是整数，访问 <code>/post/5</code> 会返回 <code>Post ID is 5</code>。</li>\n<li>常用的数据类型有：<ul>\n<li><code>&lt;int:variable&gt;</code>：整数</li>\n<li><code>&lt;float:variable&gt;</code>：浮点数</li>\n<li><code>&lt;path:variable&gt;</code>：字符串（允许包含 <code>/</code>）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-多种请求方法\"><a href=\"#3-多种请求方法\" class=\"headerlink\" title=\"3. 多种请求方法\"></a>3. 多种请求方法</h3><p>默认情况下，Flask 路由只响应 <code>GET</code> 请求。如果需要处理其他 HTTP 方法（如 <code>POST</code>、<code>PUT</code>、<code>DELETE</code> 等），可以通过 <code>methods</code> 参数指定。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/submit'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Form submitted!\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Please submit the form.\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>methods=['GET', 'POST']</code>：允许 <code>submit</code> 路由响应 <code>GET</code> 和 <code>POST</code> 请求。</li>\n<li>使用 <code>request.method</code> 判断请求类型并做不同的处理。</li>\n</ul>\n<h3 id=\"4-路由别名（URL-别名）\"><a href=\"#4-路由别名（URL-别名）\" class=\"headerlink\" title=\"4. 路由别名（URL 别名）\"></a>4. 路由别名（URL 别名）</h3><p>可以使用 <code>url_for</code> 函数生成路由的 URL，避免硬编码 URL。在视图函数上使用 <code>endpoint</code> 参数，可以给路由一个别名，用于简化 <code>url_for</code> 函数调用。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> url_for\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/profile/&lt;username&gt;'</span><span class=\"token punctuation\">,</span> endpoint<span class=\"token operator\">=</span><span class=\"token string\">'user_profile'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">profile</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"User: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token comment\"># 使用 url_for 动态生成 URL</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/redirect_to_profile'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">redirect_to_profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'user_profile'</span><span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span><span class=\"token string\">'john'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>访问 <code>/redirect_to_profile</code> 会重定向到 <code>/profile/john</code>。</li>\n</ul>\n<h3 id=\"5-重定向与错误处理\"><a href=\"#5-重定向与错误处理\" class=\"headerlink\" title=\"5. 重定向与错误处理\"></a>5. 重定向与错误处理</h3><p>可以通过 <code>redirect</code> 实现重定向，或用 <code>abort</code> 函数处理错误。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> redirect<span class=\"token punctuation\">,</span> abort\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/old-url'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">old_url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 重定向到新的 URL</span>\n    <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'new_url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/new-url'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">new_url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"This is the new URL.\"</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/secret'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">secret</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    abort<span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回 403 错误</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>redirect(url_for('new_url'))</code>：将用户重定向到 <code>new_url</code> 视图。</li>\n<li><code>abort(403)</code>：返回 403 错误页面。</li>\n</ul>\n<h3 id=\"6-带查询参数的路由\"><a href=\"#6-带查询参数的路由\" class=\"headerlink\" title=\"6. 带查询参数的路由\"></a>6. 带查询参数的路由</h3><p>查询参数一般附加在 URL 的末尾，例如 <code>http://localhost:5000/search?query=flask</code>。可以通过 <code>request.args</code> 获取这些参数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> request\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/search'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    query <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'query'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Search results for: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>request.args.get('query')</code>：获取查询参数 <code>query</code> 的值。</li>\n</ul>\n<h3 id=\"7-路由分组（蓝图）\"><a href=\"#7-路由分组（蓝图）\" class=\"headerlink\" title=\"7. 路由分组（蓝图）\"></a>7. 路由分组（蓝图）</h3><p>如果应用较大，可以将路由划分为不同的模块（称为“蓝图”），以提高代码组织性。以下是一个简单的蓝图示例。</p>\n<h4 id=\"创建蓝图文件-app-user-py：\"><a href=\"#创建蓝图文件-app-user-py：\" class=\"headerlink\" title=\"创建蓝图文件 app/user.py：\"></a>创建蓝图文件 <code>app/user.py</code>：</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Blueprint\n\nuser_bp <span class=\"token operator\">=</span> Blueprint<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> __name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@user_bp<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/&lt;username&gt;'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">profile</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"User Profile for </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"注册蓝图到应用中-app-init-py：\"><a href=\"#注册蓝图到应用中-app-init-py：\" class=\"headerlink\" title=\"注册蓝图到应用中 app/__init__.py：\"></a>注册蓝图到应用中 <code>app/__init__.py</code>：</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>user <span class=\"token keyword\">import</span> user_bp\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n    app<span class=\"token punctuation\">.</span>register_blueprint<span class=\"token punctuation\">(</span>user_bp<span class=\"token punctuation\">,</span> url_prefix<span class=\"token operator\">=</span><span class=\"token string\">'/user'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 注册蓝图</span>\n\n    <span class=\"token keyword\">return</span> app<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>url_prefix='/user'</code>：访问 <code>/user/&lt;username&gt;</code> 时，会调用 <code>user_bp</code> 蓝图中的 <code>profile</code> 路由。</li>\n<li>蓝图让大型应用代码更清晰。</li>\n</ul>\n<h3 id=\"8-格式化\"><a href=\"#8-格式化\" class=\"headerlink\" title=\"8. 格式化\"></a>8. 格式化</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> jsonify\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/json'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">json_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Flask\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2.0\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"9-视图函数的装饰器\"><a href=\"#9-视图函数的装饰器\" class=\"headerlink\" title=\"9.视图函数的装饰器\"></a>9.视图函数的装饰器</h3><p>除了 @app.route，Flask 还支持其他装饰器，用于实现更复杂的功能。</p>\n<ul>\n<li>**<code>@app.before_request</code>**：在每个请求处理之前运行的函数。</li>\n<li>**<code>@app.after_request</code>**：在每个请求处理之后运行的函数。</li>\n<li>**<code>@app.teardown_request</code>**：在请求结束后运行的函数，用于清理工作。</li>\n</ul>\n<p>示例装饰器使用：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>before_request</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">before_request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before request'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>after_request</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">after_request</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After request'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> response\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>teardown_request</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">teardown_request</span><span class=\"token punctuation\">(</span>exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Teardown request'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"完整示例\"><a href=\"#完整示例\" class=\"headerlink\" title=\"完整示例\"></a>完整示例</h3><p>以下是一个包含多种路由定义方式的完整示例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> url_for<span class=\"token punctuation\">,</span> abort<span class=\"token punctuation\">,</span> jsonify\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Welcome to the homepage!\"</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/&lt;username&gt;'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">show_user</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span></span><span class=\"token string\">!\"</span></span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/post/&lt;int:post_id&gt;'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">show_post</span><span class=\"token punctuation\">(</span>post_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Post ID is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>post_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/submit'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Form submitted!\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Please submit the form.\"</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/search'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    query <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'query'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Search results for: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/json'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">json_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Flask\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2.0\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/old-url'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">old_url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/secret'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">secret</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    abort<span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask-模板渲染\"><a href=\"#Flask-模板渲染\" class=\"headerlink\" title=\"Flask 模板渲染\"></a>Flask 模板渲染</h2><p>在 Flask 中，模板渲染是生成动态 HTML 页面的一种方法。Flask 使用 Jinja2 模板引擎来帮助你在 HTML 中插入变量、控制结构（如条件判断、循环）等内容，以便动态生成页面。</p>\n<h3 id=\"1-设置模板文件夹\"><a href=\"#1-设置模板文件夹\" class=\"headerlink\" title=\"1. 设置模板文件夹\"></a>1. 设置模板文件夹</h3><p>在 Flask 项目中，默认的模板文件夹是 <code>templates</code>，建议将所有 HTML 模板文件放在这个文件夹中。Flask 会自动寻找并渲染该目录中的模板文件。</p>\n<h3 id=\"2-创建基本-HTML-模板\"><a href=\"#2-创建基本-HTML-模板\" class=\"headerlink\" title=\"2. 创建基本 HTML 模板\"></a>2. 创建基本 HTML 模板</h3><p>假设我们在 <code>templates/index.html</code> 中创建了一个基本的 HTML 模板文件：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- templates/index.html --&gt;</span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>{{ title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>{{ heading }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>{{ content }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在这个模板中：</p>\n<ul>\n<li><code>{{ title }}</code>、<code>{{ heading }}</code> 和 <code>{{ content }}</code> 是变量占位符，在渲染模板时会被 Flask 替换成实际的值。</li>\n</ul>\n<h3 id=\"3-渲染模板\"><a href=\"#3-渲染模板\" class=\"headerlink\" title=\"3. 渲染模板\"></a>3. 渲染模板</h3><p>在 Flask 中，可以使用 <code>render_template</code> 函数来渲染 HTML 模板，并将变量传递给模板。下面是一个简单的视图函数，渲染上面的 <code>index.html</code> 模板。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">=</span><span class=\"token string\">\"Home Page\"</span><span class=\"token punctuation\">,</span> heading<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to My Website\"</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"This is the home page content.\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>render_template('index.html', ...)</code>：<code>render_template</code> 函数会在 <code>templates</code> 文件夹中找到 <code>index.html</code> 文件，并将指定变量传入模板。</li>\n<li><code>title=\"Home Page\"</code>：将 <code>title</code> 变量的值传入模板，模板中的 <code>{{ title }}</code> 将被替换为 <code>Home Page</code>。</li>\n</ul>\n<h3 id=\"4-模板变量和控制结构\"><a href=\"#4-模板变量和控制结构\" class=\"headerlink\" title=\"4. 模板变量和控制结构\"></a>4. 模板变量和控制结构</h3><p>Jinja2 模板支持在 HTML 中使用变量、控制结构（条件、循环）等操作。</p>\n<h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><p>使用双大括号 <code>{{ ... }}</code> 在模板中插入变量。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Hello, {{ name }}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h4><p>使用 <code>{% if ... %}` 和 `{% endif %}</code> 添加条件逻辑：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">{% if user_is_logged_in %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Welcome back, {{ username }}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n{% else %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Please log in to access your account.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n{% endif %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h4><p>使用 <code>{% for ... in ... %}` 和 `{% endfor %}</code> 添加循环：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    {% for item in items %}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>{{ item }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    {% endfor %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-继承与块\"><a href=\"#5-继承与块\" class=\"headerlink\" title=\"5. 继承与块\"></a>5. 继承与块</h3><p>Jinja2 支持模板继承，可以创建一个基础模板供其他模板继承。可以将公共结构（如导航栏、页脚等）放在基础模板中，然后在子模板中覆盖特定部分。</p>\n<h4 id=\"基础模板-templates-base-html\"><a href=\"#基础模板-templates-base-html\" class=\"headerlink\" title=\"基础模板 templates/base.html\"></a>基础模板 <code>templates/base.html</code></h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>{% block title %}My Website{% endblock %}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>My Website<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n        {% block content %}{% endblock %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>© 2024 My Website<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>{% block title %}` 和 `{% block content %}` 是块占位符，子模板可以覆盖这些内容。\n\n#### 子模板 `templates/index.html`\n\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">{% extends \"base.html\" %}\n\n{% block title %}Home Page{% endblock %}\n\n{% block content %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Welcome to the Home Page<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>This is some content specific to the home page.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n{% endblock %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n- `{% extends \"base.html\" %}` 表示继承 `base.html` 模板。\n- `{% block title %}Home Page{% endblock %}</code>：覆盖了基础模板中的 <code>title</code> 块。</li>\n<li><code>{% block content %}...{% endblock %}</code>：覆盖了基础模板中的 <code>content</code> 块。</li>\n</ul>\n<h3 id=\"6-使用静态文件\"><a href=\"#6-使用静态文件\" class=\"headerlink\" title=\"6. 使用静态文件\"></a>6. 使用静态文件</h3><p>Flask 默认将静态文件放在 <code>static</code> 文件夹中，例如 CSS、JavaScript 文件等。在模板中，可以通过 <code>url_for('static', filename='...')</code> 生成静态文件的 URL。</p>\n<p>假设有一个 CSS 文件 <code>static/style.css</code>，可以在模板中引入：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- 在 base.html 中引入 CSS 文件 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ url_for('static', filename='style.css') }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-完整示例\"><a href=\"#7-完整示例\" class=\"headerlink\" title=\"7. 完整示例\"></a>7. 完整示例</h3><p>以下是包含基础模板、变量、循环、条件的完整 Flask 应用示例。</p>\n<h4 id=\"项目结构-1\"><a href=\"#项目结构-1\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h4><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">my_flask_app<span class=\"token operator\">/</span>\n├── app<span class=\"token punctuation\">.</span>py\n├── templates<span class=\"token operator\">/</span>\n│   ├── <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span>html\n│   ├── index<span class=\"token punctuation\">.</span>html\n└── <span class=\"token keyword\">static</span><span class=\"token operator\">/</span>\n    └── style<span class=\"token punctuation\">.</span>css<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"app-py\"><a href=\"#app-py\" class=\"headerlink\" title=\"app.py\"></a><code>app.py</code></h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Item 1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Item 2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Item 3\"</span><span class=\"token punctuation\">]</span>\n    user_is_logged_in <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">=</span><span class=\"token string\">\"Home Page\"</span><span class=\"token punctuation\">,</span> items<span class=\"token operator\">=</span>items<span class=\"token punctuation\">,</span> user_is_logged_in<span class=\"token operator\">=</span>user_is_logged_in<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span><span class=\"token string\">\"John Doe\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"templates-base-html\"><a href=\"#templates-base-html\" class=\"headerlink\" title=\"templates/base.html\"></a><code>templates/base.html</code></h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>{% block title %}My Website{% endblock %}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ url_for('static', filename='style.css') }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>My Website<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n        {% block content %}{% endblock %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>© 2024 My Website<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"templates-index-html\"><a href=\"#templates-index-html\" class=\"headerlink\" title=\"templates/index.html\"></a><code>templates/index.html</code></h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">{% extends \"base.html\" %}\n\n{% block title %}Home Page{% endblock %}\n\n{% block content %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Welcome to the Home Page<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n    {% if user_is_logged_in %}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Welcome back, {{ username }}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    {% else %}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Please log in to access your account.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    {% endif %}\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n        {% for item in items %}\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>{{ item }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n        {% endfor %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n{% endblock %}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"static-style-css\"><a href=\"#static-style-css\" class=\"headerlink\" title=\"static/style.css\"></a><code>static/style.css</code></h4><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/* 示例样式 */</span>\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Arial<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">header</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">footer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Flask-表单处理\"><a href=\"#Flask-表单处理\" class=\"headerlink\" title=\"Flask 表单处理\"></a>Flask 表单处理</h2><p>在 Flask 中，表单处理是一个常见的功能，它涉及接收用户输入、验证数据以及相应地进行处理。Flask 提供了 <code>Flask-WTF</code> 扩展，使得表单的创建、验证和处理变得更加简单和强大。下面将详细介绍如何在 Flask 中处理表单，包括安装 Flask-WTF、创建表单、验证表单、显示表单错误和处理表单数据。</p>\n<h3 id=\"1-安装-Flask-WTF\"><a href=\"#1-安装-Flask-WTF\" class=\"headerlink\" title=\"1. 安装 Flask-WTF\"></a>1. 安装 Flask-WTF</h3><p>在开始之前，你需要确保安装了 <code>Flask-WTF</code>。可以通过 <code>pip</code> 进行安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> Flask-WTF<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-创建-Flask-应用\"><a href=\"#2-创建-Flask-应用\" class=\"headerlink\" title=\"2. 创建 Flask 应用\"></a>2. 创建 Flask 应用</h3><p>创建一个简单的 Flask 应用并设置基本配置。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template\n<span class=\"token keyword\">from</span> flask_wtf <span class=\"token keyword\">import</span> FlaskForm\n<span class=\"token keyword\">from</span> wtforms <span class=\"token keyword\">import</span> StringField<span class=\"token punctuation\">,</span> SubmitField\n<span class=\"token keyword\">from</span> wtforms<span class=\"token punctuation\">.</span>validators <span class=\"token keyword\">import</span> DataRequired\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'your_secret_key'</span>  <span class=\"token comment\"># 设置安全密钥</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-创建表单类\"><a href=\"#3-创建表单类\" class=\"headerlink\" title=\"3. 创建表单类\"></a>3. 创建表单类</h3><p>使用 <code>Flask-WTF</code> 创建表单类，定义所需的字段和验证规则。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyForm</span><span class=\"token punctuation\">(</span>FlaskForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    username <span class=\"token operator\">=</span> StringField<span class=\"token punctuation\">(</span><span class=\"token string\">'Username'</span><span class=\"token punctuation\">,</span> validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    submit <span class=\"token operator\">=</span> SubmitField<span class=\"token punctuation\">(</span><span class=\"token string\">'Submit'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>StringField</code>：表示一个文本输入字段。</li>\n<li><code>DataRequired()</code>：确保字段不为空。</li>\n</ul>\n<h3 id=\"4-渲染表单\"><a href=\"#4-渲染表单\" class=\"headerlink\" title=\"4. 渲染表单\"></a>4. 渲染表单</h3><p>在视图函数中实例化表单并传递给模板。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    form <span class=\"token operator\">=</span> MyForm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>validate_on_submit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 验证表单数据</span>\n        username <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span>data  <span class=\"token comment\"># 获取输入的用户名</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span></span><span class=\"token string\">!'</span></span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span> form<span class=\"token operator\">=</span>form<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>validate_on_submit()</code>：检查请求方法是否为 POST 并验证表单数据。</li>\n<li><code>form.username.data</code>：访问用户输入的值。</li>\n</ul>\n<h3 id=\"5-创建模板\"><a href=\"#5-创建模板\" class=\"headerlink\" title=\"5. 创建模板\"></a>5. 创建模板</h3><p>在 <code>templates</code> 文件夹中创建一个模板 <code>index.html</code>，用于显示表单。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- templates/index.html --&gt;</span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Flask Form Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Enter your username<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        {{ form.hidden_tag() }}  <span class=\"token comment\">&lt;!-- 防止 CSRF 攻击 --&gt;</span>\n        {{ form.username.label }} {{ form.username(size=20) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n        {% for error in form.username.errors %}\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>[{{ error }}]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n        {% endfor %}\n        {{ form.submit() }}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>{{ form.hidden_tag() }}</code>：生成隐藏的 CSRF 令牌，增强安全性。</li>\n<li>使用 <code>{% for error in form.username.errors %}</code> 循环显示字段的验证错误。</li>\n</ul>\n<h3 id=\"6-处理表单错误\"><a href=\"#6-处理表单错误\" class=\"headerlink\" title=\"6. 处理表单错误\"></a>6. 处理表单错误</h3><p>如果表单验证失败，Flask-WTF 会自动将错误信息存储在字段的 <code>errors</code> 属性中。在模板中，可以通过条件判断显示相应的错误消息。</p>\n<h3 id=\"7-完整示例-1\"><a href=\"#7-完整示例-1\" class=\"headerlink\" title=\"7. 完整示例\"></a>7. 完整示例</h3><p>以下是一个完整的 Flask 应用示例，展示了如何使用 Flask-WTF 处理表单。</p>\n<h4 id=\"项目结构-2\"><a href=\"#项目结构-2\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">my_flask_app/\n├── app.py                   <span class=\"token comment\"># Flask 应用主文件</span>\n└── templates/\n    └── index.html          <span class=\"token comment\"># 表单模板</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"app-py-1\"><a href=\"#app-py-1\" class=\"headerlink\" title=\"app.py\"></a><code>app.py</code></h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">码<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template\n<span class=\"token keyword\">from</span> flask_wtf <span class=\"token keyword\">import</span> FlaskForm\n<span class=\"token keyword\">from</span> wtforms <span class=\"token keyword\">import</span> StringField<span class=\"token punctuation\">,</span> SubmitField\n<span class=\"token keyword\">from</span> wtforms<span class=\"token punctuation\">.</span>validators <span class=\"token keyword\">import</span> DataRequired\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'your_secret_key'</span>  <span class=\"token comment\"># 设置安全密钥</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyForm</span><span class=\"token punctuation\">(</span>FlaskForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    username <span class=\"token operator\">=</span> StringField<span class=\"token punctuation\">(</span><span class=\"token string\">'Username'</span><span class=\"token punctuation\">,</span> validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    submit <span class=\"token operator\">=</span> SubmitField<span class=\"token punctuation\">(</span><span class=\"token string\">'Submit'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    form <span class=\"token operator\">=</span> MyForm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>validate_on_submit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 验证表单数据</span>\n        username <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span>data  <span class=\"token comment\"># 获取输入的用户名</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'Hello, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span></span><span class=\"token string\">!'</span></span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span> form<span class=\"token operator\">=</span>form<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"templates-index-html-1\"><a href=\"#templates-index-html-1\" class=\"headerlink\" title=\"templates/index.html\"></a><code>templates/index.html</code></h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Flask Form Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Enter your username<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        {{ form.hidden_tag() }}  <span class=\"token comment\">&lt;!-- 防止 CSRF 攻击 --&gt;</span>\n        {{ form.username.label }} {{ form.username(size=20) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n        {% for error in form.username.errors %}\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>[{{ error }}]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n        {% endfor %}\n        {{ form.submit() }}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"8-添加更多字段和验证器\"><a href=\"#8-添加更多字段和验证器\" class=\"headerlink\" title=\"8. 添加更多字段和验证器\"></a>8. 添加更多字段和验证器</h3><p>可以使用 <code>WTForms</code> 提供的多种字段类型和验证器来扩展表单功能。例如，可以添加 <code>EmailField</code>、<code>PasswordField</code>、<code>SelectField</code> 等。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> wtforms <span class=\"token keyword\">import</span> EmailField<span class=\"token punctuation\">,</span> PasswordField<span class=\"token punctuation\">,</span> SelectField\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExtendedForm</span><span class=\"token punctuation\">(</span>FlaskForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    username <span class=\"token operator\">=</span> StringField<span class=\"token punctuation\">(</span><span class=\"token string\">'Username'</span><span class=\"token punctuation\">,</span> validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> EmailField<span class=\"token punctuation\">(</span><span class=\"token string\">'Email'</span><span class=\"token punctuation\">,</span> validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> PasswordField<span class=\"token punctuation\">(</span><span class=\"token string\">'Password'</span><span class=\"token punctuation\">,</span> validators<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>DataRequired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    options <span class=\"token operator\">=</span> SelectField<span class=\"token punctuation\">(</span><span class=\"token string\">'Options'</span><span class=\"token punctuation\">,</span> choices<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'opt1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Option 1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'opt2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Option 2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    submit <span class=\"token operator\">=</span> SubmitField<span class=\"token punctuation\">(</span><span class=\"token string\">'Submit'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"9-处理文件上传\"><a href=\"#9-处理文件上传\" class=\"headerlink\" title=\"9. 处理文件上传\"></a>9. 处理文件上传</h3><p>Flask-WTF 也支持文件上传，可以使用 <code>FileField</code>。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> wtforms <span class=\"token keyword\">import</span> FileField\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UploadForm</span><span class=\"token punctuation\">(</span>FlaskForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> FileField<span class=\"token punctuation\">(</span><span class=\"token string\">'File'</span><span class=\"token punctuation\">)</span>\n    submit <span class=\"token operator\">=</span> SubmitField<span class=\"token punctuation\">(</span><span class=\"token string\">'Upload'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">upload_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    form <span class=\"token operator\">=</span> UploadForm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>validate_on_submit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>data\n        <span class=\"token comment\"># 处理文件上传</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'File </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">}</span></span><span class=\"token string\"> uploaded successfully!'</span></span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'upload.html'</span><span class=\"token punctuation\">,</span> form<span class=\"token operator\">=</span>form<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"10-保护表单安全\"><a href=\"#10-保护表单安全\" class=\"headerlink\" title=\"10. 保护表单安全\"></a>10. 保护表单安全</h3><p>使用 <code>SECRET_KEY</code> 保护表单，防止 CSRF 攻击，确保所有表单都使用 <code>form.hidden_tag()</code> 生成 CSRF 令牌。</p>\n",
            "tags": [
                "教程",
                "python"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/03/pip-huan-yuan/",
            "url": "https://0xdadream.github.io/2024/11/03/pip-huan-yuan/",
            "title": "pip换源",
            "date_published": "2024-11-03T01:25:00.000Z",
            "content_html": "<h1 id=\"pip换源\"><a href=\"#pip换源\" class=\"headerlink\" title=\"pip换源\"></a>pip换源</h1><h3 id=\"1-临时换源\"><a href=\"#1-临时换源\" class=\"headerlink\" title=\"1. 临时换源\"></a>1. 临时换源</h3><p>临时换源是在安装某个包时指定使用特定的源，而不改变全局配置。例如，使用清华大学源安装一个包的命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> package_name <span class=\"token parameter variable\">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中<code>package_name</code>是您要安装的包的名称。</p>\n<h3 id=\"2-永久换源\"><a href=\"#2-永久换源\" class=\"headerlink\" title=\"2. 永久换源\"></a>2. 永久换源</h3><p>永久换源是通过修改pip的配置文件来实现的，这样每次使用pip时都会默认使用指定的源。</p>\n<h4 id=\"2-1-找到pip配置文件的位置\"><a href=\"#2-1-找到pip配置文件的位置\" class=\"headerlink\" title=\"2.1 找到pip配置文件的位置\"></a>2.1 找到pip配置文件的位置</h4><ul>\n<li><strong>Unix/Linux/MacOS</strong>: <code>~/.pip/pip.conf</code></li>\n<li><strong>Windows</strong>: <code>%APPDATA%\\pip\\pip.ini</code></li>\n</ul>\n<p>如果配置文件不存在，可以手动创建。</p>\n<h4 id=\"2-2-编辑pip配置文件\"><a href=\"#2-2-编辑pip配置文件\" class=\"headerlink\" title=\"2.2 编辑pip配置文件\"></a>2.2 编辑pip配置文件</h4><ul>\n<li><p>Unix/Linux/MacOS: 打开或创建<code>~/.pip/pip.conf</code>文件，并添加以下内容：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>Windows: 打开或创建<code>%APPDATA%\\pip\\pip.ini</code>文件，并添加以下内容：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>其中<code>https://pypi.tuna.tsinghua.edu.cn/simple</code>可以替换为您选择的其他源的URL。</p>\n</li>\n</ul>\n<h4 id=\"2-3-命令\"><a href=\"#2-3-命令\" class=\"headerlink\" title=\"2.3 命令\"></a>2.3 命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 清华源</span>\npip config <span class=\"token builtin class-name\">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-重置镜像源\"><a href=\"#3-重置镜像源\" class=\"headerlink\" title=\"3. 重置镜像源\"></a>3. 重置镜像源</h3><p>如果您需要重置镜像源到默认的PyPI官方源，可以使用以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip config <span class=\"token builtin class-name\">unset</span> global.index-url<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会将全局设置的镜像源删除，恢复到默认设置。</p>\n<h3 id=\"4-验证和测试\"><a href=\"#4-验证和测试\" class=\"headerlink\" title=\"4. 验证和测试\"></a>4. 验证和测试</h3><p>您可以通过以下命令检查当前pip配置的源：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip config list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后尝试安装一个包来测试配置是否生效。</p>\n<h3 id=\"5-国内常用源地址\"><a href=\"#5-国内常用源地址\" class=\"headerlink\" title=\"5. 国内常用源地址\"></a>5. 国内常用源地址</h3><p>以下是一些国内常用的pip源地址，供您选择使用：</p>\n<ul>\n<li>清华大学源：<code>https://pypi.tuna.tsinghua.edu.cn/simple</code></li>\n<li>阿里云源：<code>https://mirrors.aliyun.com/pypi/simple</code></li>\n<li>豆瓣源：<code>https://pypi.douban.com/simple</code></li>\n<li>中国科学技术大学源：<code>https://pypi.mirrors.ustc.edu.cn/simple</code></li>\n<li>腾讯云源：<code>https://mirrors.cloud.tencent.com/pypi/simple</code></li>\n</ul>\n<p>在pip镜像升级报警，只需要添加信任源即可：</p>\n<ul>\n<li><p>临时换源处理</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> beautifulsoup4 --trusted-host mirrors.aliyun.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>更换默认源配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>install<span class=\"token punctuation\">]</span>\ntrusted-host<span class=\"token operator\">=</span>pypi.douban.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n",
            "tags": [
                "tips"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/",
            "url": "https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/",
            "title": "以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台",
            "date_published": "2024-10-16T01:25:00.000Z",
            "content_html": "<h1 id=\"以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台\"><a href=\"#以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台\" class=\"headerlink\" title=\"以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台\"></a>以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台</h1><h2 id=\"一、安装-DApp-开发环境\"><a href=\"#一、安装-DApp-开发环境\" class=\"headerlink\" title=\"一、安装 DApp 开发环境\"></a>一、安装 DApp 开发环境</h2><h3 id=\"1-1-安装-Node-js\"><a href=\"#1-1-安装-Node-js\" class=\"headerlink\" title=\"1.1 安装 Node.js\"></a>1.1 安装 Node.js</h3><p>看我这篇<a href=\"https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/\">node.js版本问题 | 逐梦 (0xdadream.github.io)</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">node</span> <span class=\"token parameter variable\">--version</span>\nv22.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-2-安装-Geth\"><a href=\"#1-2-安装-Geth\" class=\"headerlink\" title=\"1.2 安装 Geth\"></a>1.2 安装 Geth</h3><p><a href=\"https://geth.ethereum.org/downloads\">Downloads | go-ethereum</a></p>\n<p>下载 64 位<a href=\"https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe\">https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe</a></p>\n<p>或者 32 位<a href=\"https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe\">https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe</a> </p>\n<p>Geth 安装程序,然后进行安装。 安装完毕后打开一个控制台,执行命令验证安装成功:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth version\nGeth\nVersion: <span class=\"token number\">1.8</span>.3-stable <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-3-安装-solidity-编译器\"><a href=\"#1-3-安装-solidity-编译器\" class=\"headerlink\" title=\"1.3 安装 solidity 编译器\"></a>1.3 安装 solidity 编译器</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> solc <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>  安装完毕后,执行命令验证安装成功 </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">solcjs <span class=\"token parameter variable\">-V</span>\n<span class=\"token number\">0.8</span>.28+commit.7893614a.Emscripten.clang<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-4-安装-web3\"><a href=\"#1-4-安装-web3\" class=\"headerlink\" title=\"1.4 安装 web3\"></a>1.4 安装 web3</h3><p>Web3 的安装过程使用了 git,因此需要先安装 windows 版的 git 命令行<a href=\"https://0xdadream.github.io/2024/08/09/git-shi-yong/\">git使用 | 逐梦 (0xdadream.github.io)</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> web3 <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>验证，创建一个文件<code>index.js</code>,写入以下内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">const <span class=\"token punctuation\">{</span> Web3 <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'web3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"Version:\"</span>,Web3.version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">node</span> index.js\nVersion: <span class=\"token number\">4.13</span>.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-5-安装-truffle-框架\"><a href=\"#1-5-安装-truffle-框架\" class=\"headerlink\" title=\"1.5 安装 truffle 框架\"></a>1.5 安装 truffle 框架</h3><p> 执行以下命令安装 truffle 开发框架: </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> truffle<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>验证安装:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle.cmd version\nTruffle v5.11.5 <span class=\"token punctuation\">(</span>core: <span class=\"token number\">5.11</span>.5<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-6-安装-webpack\"><a href=\"#1-6-安装-webpack\" class=\"headerlink\" title=\"1.6 安装 webpack\"></a>1.6 安装 webpack</h3><p>执行以下命令安装 webpack:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> webpack –g <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>验证安装  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">webpack <span class=\"token parameter variable\">-h</span>\nUsage: webpack <span class=\"token punctuation\">[</span>entries<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span>\nAlternative usage to run commands: webpack <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二、运行私链节点\"><a href=\"#二、运行私链节点\" class=\"headerlink\" title=\"二、运行私链节点\"></a>二、运行私链节点</h2><h3 id=\"2-1-创世块配置\"><a href=\"#2-1-创世块配置\" class=\"headerlink\" title=\"2.1 创世块配置\"></a>2.1 创世块配置</h3><p>创建一个节点目录 node1,并在其中创建私链的创世块配置文件:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> node1\n<span class=\"token builtin class-name\">cd</span> node1\nnotepad gensis.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>然后编辑内容如下:</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">987</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2100000\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"300000\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"f41c74c9ae680c1aa78f42e5647a62f353b7bdde\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"400000\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>config.chainId</code>用来声明以太坊网络编号,选择一个大于 10 的数字即可。  <code>difficulty</code> 用来声明挖矿难度,越小的值难度越低,也就能更快速地出块。</p>\n<p>完整版的 <code>gensis.json</code> 如下所示</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">987</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x400\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xffffffff\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 可选填的参数</span>\n  <span class=\"token property\">\"coinbase\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000000000000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"extraData\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x00\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"nonce\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000001\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"mixhash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000000000000000000000000000000000000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parentHash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000000000000000000000000000000000000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x00\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"430e986e0cca10a174baad96871ec9cb308c6d05\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"111111\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>各个字段解释如下：</p>\n<table>\n<thead>\n<tr>\n<th>必填</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>chainId</td>\n<td>自定义私链的网络ID，不同的网络ID无法互联通讯，以太坊公链ID 为1，我们设置为987以防止与网络中其他私链冲突。</td>\n</tr>\n<tr>\n<td>homesteadBlock</td>\n<td>是否为HomeStead版本的区块，设置为0表明是。</td>\n</tr>\n<tr>\n<td>eip155Block</td>\n<td>EIP155 [<a href=\"https://ethbook.abyteahead.com/ch5/build.html#id5\">1]</a> 是一个以太坊分叉提议，为了和以前的以太坊经典ETC 链条分叉而存在，我们私链不需要它，设为0。</td>\n</tr>\n<tr>\n<td>eip158Block</td>\n<td>EIP158 [<a href=\"https://ethbook.abyteahead.com/ch5/build.html#id6\">2]</a> 是一个以太坊分叉提议，为了解决之前以太坊空账户造成效率低下的协议漏洞而分叉，我们私链不需要它，设为0。</td>\n</tr>\n<tr>\n<td>difficulty</td>\n<td>设置当前区块难度，若难度过大挖矿就很慢，我们设置较小值。</td>\n</tr>\n<tr>\n<td>gasLimit</td>\n<td>单一区块最大 gas 消耗上限，用来限制能够打包进入块的交易数量与信息总和，我们在学习中可以设置为最大。</td>\n</tr>\n<tr>\n<td>选填</td>\n<td></td>\n</tr>\n<tr>\n<td>coinbase</td>\n<td>打包该块的矿工的奖励地址，因为是创世块，可设为0地址。</td>\n</tr>\n<tr>\n<td>extraData</td>\n<td>打包该块时矿工记录的笔记。</td>\n</tr>\n<tr>\n<td>nonce</td>\n<td>打包该块时矿工挖矿所用到的Ethash输入参数nonce。</td>\n</tr>\n<tr>\n<td>mixHash</td>\n<td>与nonce配合用于挖矿，创世区无前一个区块，可不填。</td>\n</tr>\n<tr>\n<td>parentHash</td>\n<td>前一个区块头的哈希值，创世区块无前一个区块，设为0。</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>打包该块的时间戳，符合Unix Timestamp标准，设为0。</td>\n</tr>\n<tr>\n<td>alloc</td>\n<td>创世时各账户分配以太币的数量，不想分配则忽略。</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-2-初始化私链节点\"><a href=\"#2-2-初始化私链节点\" class=\"headerlink\" title=\"2.2 初始化私链节点\"></a>2.2 初始化私链节点</h3><p>执行 geth 的 init 命令初始化私链节点:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> .<span class=\"token punctuation\">\\</span>data init gensis.json\n\n<span class=\"token comment\"># Successfully wrote genesis state</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这会在当前目录下创建 data 目录,用来保存区块数据及账户信息</p>\n<p>可以上述命令写到一个脚本 <code>init.cmd</code> 里，文件内容如下:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> .<span class=\"token punctuation\">\\</span>data init gensis.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在部署下一个节点时,就可以直接执行这个脚本进行初始化了。例如,在另一台机器上:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">init.cmd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-3-启动私链节点\"><a href=\"#2-3-启动私链节点\" class=\"headerlink\" title=\"2.3 启动私链节点\"></a>2.3 启动私链节点</h3><p>在我们现在的环境下，需要启动一个 Geth 节点来接入私链网络（实际上也是这个私链网络的唯一一个节点），负责在创世块后挖出第一个块。该节点也是我们与以太坊私链通信的节点服务器。下面我们来启动这样一个节点。同样,你可以用一个脚本 <code>console.cmd</code> 来简化启动节点时的输入,文件内容如下:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data ^\n<span class=\"token parameter variable\">--rpc</span> <span class=\"token parameter variable\">--rpcaddr</span> <span class=\"token number\">127.0</span>.0.1 <span class=\"token parameter variable\">--rpcport</span> <span class=\"token number\">8545</span> <span class=\"token parameter variable\">--rpccorsdomain</span> <span class=\"token string\">\"*\"</span> ^\n<span class=\"token parameter variable\">--rpcapi</span> <span class=\"token string\">\"eth,net,web3,personal,admin,shh,txpool,debug,miner\"</span> ^\n<span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--maxpeers</span> <span class=\"token number\">30</span> <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> ^\n<span class=\"token parameter variable\">--mine</span> <span class=\"token parameter variable\">--minerthreads</span> <span class=\"token number\">1</span> ^\n<span class=\"token parameter variable\">--etherbase</span> <span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>geth启动时命令行参数解释如下表:</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–rpc</td>\n<td>开启JSON-RPC 服务，可供调用/调试访问。</td>\n</tr>\n<tr>\n<td>–rpcaddr</td>\n<td>本地监听JSON-RPC的地址。</td>\n</tr>\n<tr>\n<td>–rpcport</td>\n<td>本地监听JSON-RPC的端口。</td>\n</tr>\n<tr>\n<td>–prccorsdomain</td>\n<td>本地监听JSON-RPC允许的域名访问。</td>\n</tr>\n<tr>\n<td>–rpcapi</td>\n<td>允许提供的RPC服务模块，在示例中选择了数个模块加载。</td>\n</tr>\n<tr>\n<td>–nodiscover</td>\n<td>关闭自动发现节点，私有链开发时防止他人意外接入，可选择关闭该选项避免他人加入网络。</td>\n</tr>\n<tr>\n<td>–maxpeers</td>\n<td>允许最大节点链接数目。</td>\n</tr>\n<tr>\n<td>–networkid</td>\n<td>指定以太坊网络ID。</td>\n</tr>\n<tr>\n<td>–port</td>\n<td>监听以太坊节点之间P2P消息的TCP/UDP端口，默认30303。</td>\n</tr>\n<tr>\n<td>–mine</td>\n<td>节点启动挖矿功能，参与挖矿。</td>\n</tr>\n<tr>\n<td>–minerthreads</td>\n<td>挖矿的多线程配置，例子中配置为1个线程。</td>\n</tr>\n<tr>\n<td>–etherbase</td>\n<td>若启动挖矿功能，挖矿奖励的接受地址，例子中我们随便填了一个。</td>\n</tr>\n<tr>\n<td>console</td>\n<td>(可选) 启动后进入命令行模式，直接输入命令互动操作。</td>\n</tr>\n</tbody></table>\n<p>输入回车，启动成功！此时控制台会输出一组日志信息并有欢迎信息</p>\n<p>以后启动节点,只要直接执行这个脚本即可:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">console.cmd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入控制台</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth attach http://127.0.0.1:8545<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"Geth-启动结果解释\"><a href=\"#Geth-启动结果解释\" class=\"headerlink\" title=\"Geth 启动结果解释\"></a>Geth 启动结果解释</h4><ul>\n<li><strong>数据目录</strong>：你指定了 <code>--datadir ./data</code>，Geth 会将所有区块链数据和配置文件存储在该目录中。</li>\n<li><strong>RPC 服务</strong>：你启动了 HTTP-RPC 接口，监听地址为 <code>127.0.0.1</code>，端口为 <code>8545</code>。这意味着你可以通过 HTTP 方式与节点交互。</li>\n<li><strong>挖矿</strong>：你启用了 <code>--mine</code> 参数，使用一个线程（<code>--minerthreads 1</code>）进行挖矿，挖矿奖励会发送到地址 <code>0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82</code>。</li>\n<li><strong>禁止节点发现</strong>：你启用了 <code>--nodiscover</code> 参数，这意味着节点不会自动发现和连接其他节点（适用于私有链）。</li>\n</ul>\n<h4 id=\"后续如何使用这些配置\"><a href=\"#后续如何使用这些配置\" class=\"headerlink\" title=\"后续如何使用这些配置\"></a>后续如何使用这些配置</h4><h5 id=\"进入控制台后：\"><a href=\"#进入控制台后：\" class=\"headerlink\" title=\"进入控制台后：\"></a>进入控制台后：</h5><p>你可以直接在 Geth 控制台中输入命令与节点交互。以下是一些常见的操作：</p>\n<ul>\n<li><p><strong>查看挖矿状态</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span>hashrate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会返回当前的挖矿算力。</p>\n</li>\n<li><p><strong>查看当前区块高度</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会显示当前节点已同步的最新区块号。</p>\n</li>\n<li><p><strong>查看账户余额</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会显示指定账户的余额。</p>\n</li>\n<li><p><strong>停止挖矿</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会停止挖矿进程。</p>\n</li>\n<li><p><strong>发送交易</strong>： 你可以使用 <code>eth.sendTransaction</code> 发送交易。例如：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>解锁账户</strong>： 如果要发送交易，首先需要解锁账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h5 id=\"使用-RPC-接口：\"><a href=\"#使用-RPC-接口：\" class=\"headerlink\" title=\"使用 RPC 接口：\"></a>使用 RPC 接口：</h5><p>你启动了 RPC 服务，这意味着你可以通过 HTTP 与节点交互，而不必进入控制台。可以使用 <code>curl</code>、Web3.js、Python 等工具来与节点通信。下面是几个例子：</p>\n<ul>\n<li><p><strong>使用 <code>curl</code> 查看区块高度</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token parameter variable\">--data</span> <span class=\"token string\">'{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}'</span> http://127.0.0.1:8545<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会返回当前的区块高度。</p>\n</li>\n<li><p><strong>使用 Web3.js 与节点交互</strong>： 你可以使用 Web3.js 编写一个简单的脚本来获取节点信息。例如，安装 Web3.js：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> web3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后使用以下 JavaScript 代码获取节点的区块高度：</p>\n<pre class=\"line-numbers language-web-idl\" data-language=\"web-idl\"><code class=\"language-web-idl\"><span class=\"token keyword\">const</span> <span class=\"token class-name\">Web3</span> <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span>'web3'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token class-name\">web3</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">new</span> Web3<span class=\"token punctuation\">(</span>'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:8545');</span>\n\nweb3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getBlockNumber<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>then<span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h5 id=\"手动添加其他节点：\"><a href=\"#手动添加其他节点：\" class=\"headerlink\" title=\"手动添加其他节点：\"></a>手动添加其他节点：</h5><p>如果你想手动连接其他节点，可以使用 <code>admin.addPeer</code> 命令。例如：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span><span class=\"token function\">addPeer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enode://publickey@ip:port\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将允许你将其他节点加入到网络中。</p>\n<h3 id=\"2-4-账户管理\"><a href=\"#2-4-账户管理\" class=\"headerlink\" title=\"2.4 账户管理\"></a>2.4 账户管理</h3><h4 id=\"2-4-1-查看账户列表\"><a href=\"#2-4-1-查看账户列表\" class=\"headerlink\" title=\"2.4.1 查看账户列表\"></a>2.4.1 查看账户列表</h4><p>在 geth 控制台,使用 eth 对象的 accounts 属性查看目前的账户列表:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.accounts  or personal.listAccounts\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-4-2-创建新账户\"><a href=\"#2-4-2-创建新账户\" class=\"headerlink\" title=\"2.4.2 创建新账户\"></a>2.4.2 创建新账户</h4><p>在 geth 控制台,使用 personal 对象的 newAccount()方法创建一个新账户,参数为你自己选择的密码:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> personal.newAccount<span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span>  \n<span class=\"token string\">\"0x6e1d438b00d5bb865c4d842e9c02549709130147\"</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>输出就是新创建的账户地址(公钥),你的输出不会和上面的示例相同。geth 会保存到数据目录下的 keystore 文件中。</p>\n<h4 id=\"2-4-3-查询账户余额\"><a href=\"#2-4-3-查询账户余额\" class=\"headerlink\" title=\"2.4.3 查询账户余额\"></a>2.4.3 查询账户余额</h4><p>在 geth 控制台,使用 personal 对象的 getBalance()方法获取挃定账户的余额,参数为账户地址:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.getBalance<span class=\"token punctuation\">(</span>eth.accounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  \n<span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>  或者直接输入账户地址:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.getBalance<span class=\"token punctuation\">(</span><span class=\"token string\">'0xd8bcf1324d566cbec5d3b67e6e14485b06a41d49'</span><span class=\"token punctuation\">)</span>  \n<span class=\"token number\">0</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">web3.fromWei<span class=\"token punctuation\">(</span>eth.getBalance<span class=\"token punctuation\">(</span>eth.accounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># 将wei换算成eth</span>\nweb3.toWei<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-4-4-挖矿\"><a href=\"#2-4-4-挖矿\" class=\"headerlink\" title=\"2.4.4 挖矿\"></a>2.4.4 挖矿</h4><p>私有链不用其他节点也能挖矿</p>\n<h5 id=\"1-启动和停止挖矿\"><a href=\"#1-启动和停止挖矿\" class=\"headerlink\" title=\"1. 启动和停止挖矿\"></a>1. <strong>启动和停止挖矿</strong></h5><h6 id=\"启动挖矿\"><a href=\"#启动挖矿\" class=\"headerlink\" title=\"启动挖矿\"></a>启动挖矿</h6><p>要开始挖矿，你可以使用以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">miner.start(threads)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>threads参数表示使用多少个线程进行挖矿。比如要用 1 个线程：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"停止挖矿\"><a href=\"#停止挖矿\" class=\"headerlink\" title=\"停止挖矿\"></a>停止挖矿</h6><p>要停止挖矿，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"2-查看挖矿状态\"><a href=\"#2-查看挖矿状态\" class=\"headerlink\" title=\"2. 查看挖矿状态\"></a>2. <strong>查看挖矿状态</strong></h5><h6 id=\"查看挖矿是否正在进行\"><a href=\"#查看挖矿是否正在进行\" class=\"headerlink\" title=\"查看挖矿是否正在进行\"></a>查看挖矿是否正在进行</h6><p>你可以通过以下命令检查节点当前是否正在挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>mining<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>这个命令返回 <code>true</code> 表示节点正在挖矿，返回 <code>false</code> 表示节点没有在挖矿。</li>\n</ul>\n<h6 id=\"查看当前的哈希算力\"><a href=\"#查看当前的哈希算力\" class=\"headerlink\" title=\"查看当前的哈希算力\"></a>查看当前的哈希算力</h6><p>使用以下命令查看节点的哈希算力：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span>hashrate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>返回的数值表示每秒计算的哈希数，以 H/s（哈希每秒）为单位。</li>\n</ul>\n<h6 id=\"查看矿工账户\"><a href=\"#查看矿工账户\" class=\"headerlink\" title=\"查看矿工账户\"></a>查看矿工账户</h6><p>使用以下命令查看当前挖矿收益的账户（即矿工地址）：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>coinbase<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"查看当前区块高度\"><a href=\"#查看当前区块高度\" class=\"headerlink\" title=\"查看当前区块高度\"></a>查看当前区块高度</h6><p>你可以通过以下命令查看节点同步到的最新区块高度：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"3-设置矿工账户\"><a href=\"#3-设置矿工账户\" class=\"headerlink\" title=\"3. 设置矿工账户\"></a>3. <strong>设置矿工账户</strong></h5><p>在挖矿前，通常需要设置 <code>coinbase</code>（即矿工账户地址），挖矿的奖励会发送到这个地址。你可以使用以下命令设置 <code>coinbase</code>：</p>\n<h6 id=\"设置矿工账户\"><a href=\"#设置矿工账户\" class=\"headerlink\" title=\"设置矿工账户\"></a>设置矿工账户</h6><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">setEtherbase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAccountAddress\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>这个命令将指定的账户设置为矿工账户。</li>\n</ul>\n<h5 id=\"4-挖矿奖励和账户\"><a href=\"#4-挖矿奖励和账户\" class=\"headerlink\" title=\"4. 挖矿奖励和账户\"></a>4. <strong>挖矿奖励和账户</strong></h5><h6 id=\"查看当前账户的余额\"><a href=\"#查看当前账户的余额\" class=\"headerlink\" title=\"查看当前账户的余额\"></a>查看当前账户的余额</h6><p>要查看矿工账户的余额，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>coinbase<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"解锁矿工账户\"><a href=\"#解锁矿工账户\" class=\"headerlink\" title=\"解锁矿工账户\"></a>解锁矿工账户</h6><p>如果你希望自动将矿工奖励发送到某个账户，你可能需要解锁该账户，尤其是在你打算用这个账户发送交易时：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>coinbase<span class=\"token punctuation\">,</span> <span class=\"token string\">\"yourpassword\"</span><span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>duration</code> 是账户解锁的时间，单位是秒。</li>\n</ul>\n<h5 id=\"5-与挖矿相关的高级操作\"><a href=\"#5-与挖矿相关的高级操作\" class=\"headerlink\" title=\"5. 与挖矿相关的高级操作\"></a>5. <strong>与挖矿相关的高级操作</strong></h5><h6 id=\"设置挖矿目标难度\"><a href=\"#设置挖矿目标难度\" class=\"headerlink\" title=\"设置挖矿目标难度\"></a>设置挖矿目标难度</h6><p>在私有链上，你可以通过修改 <code>genesis.json</code> 文件中的 <code>difficulty</code> 值来控制挖矿难度。在 Geth 运行期间，无法直接修改目标难度。</p>\n<h6 id=\"查看挖到的区块\"><a href=\"#查看挖到的区块\" class=\"headerlink\" title=\"查看挖到的区块\"></a>查看挖到的区块</h6><p>使用以下命令可以查看最新的区块信息：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'latest'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>eth.getBlock()</code> 返回的区块信息包含以下常见字段：</p>\n<ul>\n<li><code>number</code>: 区块号</li>\n<li><code>hash</code>: 区块的哈希值</li>\n<li><code>parentHash</code>: 父区块的哈希</li>\n<li><code>nonce</code>: 区块中工作量证明的 nonce 值</li>\n<li><code>miner</code>: 挖出该区块的矿工地址</li>\n<li><code>difficulty</code>: 区块的挖矿难度</li>\n<li><code>totalDifficulty</code>: 该区块链上到当前区块为止的总难度</li>\n<li><code>size</code>: 区块大小（以字节为单位）</li>\n<li><code>gasLimit</code>: 该区块的 gas 上限</li>\n<li><code>gasUsed</code>: 该区块使用的 gas</li>\n<li><code>timestamp</code>: 区块的时间戳</li>\n<li><code>transactions</code>: 包含在该区块中的交易数组</li>\n<li><code>uncles</code>: 包含该区块的叔块数组</li>\n</ul>\n<h6 id=\"自动挖矿新交易\"><a href=\"#自动挖矿新交易\" class=\"headerlink\" title=\"自动挖矿新交易\"></a>自动挖矿新交易</h6><p>Geth 提供一个选项可以在有新交易进入交易池时自动开始挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">setAuto</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>设置为 <code>1</code> 后，每当交易池中有新交易时，节点将自动开始挖矿。</li>\n</ul>\n<h5 id=\"6-挖矿的调试工具\"><a href=\"#6-挖矿的调试工具\" class=\"headerlink\" title=\"6. 挖矿的调试工具\"></a>6. <strong>挖矿的调试工具</strong></h5><h6 id=\"查看交易池中的交易\"><a href=\"#查看交易池中的交易\" class=\"headerlink\" title=\"查看交易池中的交易\"></a>查看交易池中的交易</h6><p>如果你想查看待处理的交易，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>返回的信息会告诉你有多少笔交易在交易池中等待执行。</li>\n</ul>\n<h6 id=\"查看挖矿日志\"><a href=\"#查看挖矿日志\" class=\"headerlink\" title=\"查看挖矿日志\"></a>查看挖矿日志</h6><p>挖矿日志可以帮助你跟踪挖矿状态和进度。在 Geth 启动时，你可以通过设置日志等级来查看挖矿详细信息。例如，使用 <code>--verbosity</code> 参数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">geth <span class=\"token operator\">--</span>verbosity <span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这样，挖矿时的日志会显示更多详细的挖矿信息。</p>\n<h5 id=\"7-挖矿常见问题\"><a href=\"#7-挖矿常见问题\" class=\"headerlink\" title=\"7. 挖矿常见问题\"></a>7. <strong>挖矿常见问题</strong></h5><ul>\n<li><p><strong>无法开始挖矿？</strong> 如果你无法开始挖矿，可能是由于账户未解锁。确保你已解锁矿工账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>coinbase<span class=\"token punctuation\">,</span> <span class=\"token string\">\"yourpassword\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>矿工奖励没有到账？</strong> 矿工奖励发放需要时间，尤其是在主网上挖矿时，奖励只有在挖到的区块被确认后才能到账。</p>\n</li>\n</ul>\n<h5 id=\"8-挖矿命令汇总\"><a href=\"#8-挖矿命令汇总\" class=\"headerlink\" title=\"8. 挖矿命令汇总\"></a>8. <strong>挖矿命令汇总</strong></h5><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>miner.start(threads)</code></td>\n<td>启动挖矿，<code>threads</code> 为使用的线程数</td>\n</tr>\n<tr>\n<td><code>miner.stop()</code></td>\n<td>停止挖矿</td>\n</tr>\n<tr>\n<td><code>miner.hashrate</code></td>\n<td>查看当前的挖矿算力</td>\n</tr>\n<tr>\n<td><code>eth.mining</code></td>\n<td>查看是否正在挖矿</td>\n</tr>\n<tr>\n<td><code>miner.setEtherbase(\"address\")</code></td>\n<td>设置矿工账户</td>\n</tr>\n<tr>\n<td><code>eth.getBalance(eth.coinbase)</code></td>\n<td>查看矿工账户的余额</td>\n</tr>\n<tr>\n<td><code>eth.blockNumber</code></td>\n<td>查看当前区块高度</td>\n</tr>\n<tr>\n<td><code>eth.getBlock('latest')</code></td>\n<td>查看最新的区块信息</td>\n</tr>\n<tr>\n<td><code>txpool.status</code></td>\n<td>查看交易池中的待处理交易</td>\n</tr>\n<tr>\n<td><code>personal.unlockAccount(eth.coinbase, \"password\", 600)</code></td>\n<td>解锁矿工账户</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-4-5-解锁账户\"><a href=\"#2-4-5-解锁账户\" class=\"headerlink\" title=\"2.4.5 解锁账户\"></a>2.4.5 解锁账户</h4><p>在部署合约时需要一个解锁的账户。</p>\n<p>在 geth 控制台使用 <code>personal</code> 对象的 <code>unlockAccount()</code>  方法来解锁挃定的账户,参数为账户地址和账户密码(在创建账户时挃定的那个密码):  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.unlockAccount<span class=\"token punctuation\">(</span>eth.accounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span>  \n<span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-5-交易\"><a href=\"#2-5-交易\" class=\"headerlink\" title=\"2.5 交易\"></a>2.5 交易</h3><h4 id=\"1-发送交易\"><a href=\"#1-发送交易\" class=\"headerlink\" title=\"1. 发送交易\"></a>1. <strong>发送交易</strong></h4><h5 id=\"使用-eth-sendTransaction-发送交易\"><a href=\"#使用-eth-sendTransaction-发送交易\" class=\"headerlink\" title=\"使用 eth.sendTransaction 发送交易\"></a>使用 <code>eth.sendTransaction</code> 发送交易</h5><p>发送交易时，你可以使用 <code>eth.sendTransaction</code> 命令。示例如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>from</code>: 发送者账户的地址，必须先解锁账户。</li>\n<li><code>to</code>: 接收者账户的地址。</li>\n<li><code>value</code>: 发送的金额，单位是 wei（可以使用 <code>web3.toWei</code> 转换成 ether）。</li>\n<li><code>gas</code>: （可选）指定交易的 gas 上限，默认为 <code>21000</code>，适用于普通转账。</li>\n<li><code>gasPrice</code>: （可选）指定每单位 gas 的价格，默认为当前网络的 gas 价格。</li>\n<li><code>data</code>: （可选）包含用于合约调用的数据（智能合约交易时用到）。</li>\n</ul>\n<h5 id=\"解锁账户\"><a href=\"#解锁账户\" class=\"headerlink\" title=\"解锁账户\"></a>解锁账户</h5><p>在发送交易前，如果账户被锁定，你需要解锁账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>600</code> 表示账户将保持解锁 600 秒。</li>\n</ul>\n<h4 id=\"2-查询交易\"><a href=\"#2-查询交易\" class=\"headerlink\" title=\"2. 查询交易\"></a>2. <strong>查询交易</strong></h4><h5 id=\"根据交易哈希查询交易信息\"><a href=\"#根据交易哈希查询交易信息\" class=\"headerlink\" title=\"根据交易哈希查询交易信息\"></a>根据交易哈希查询交易信息</h5><p>发送交易后，你可以使用交易哈希查询交易的详细信息：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xTransactionHash\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将返回交易的详细信息，包括发送者、接收者、金额、gas 费用等。</p>\n<p><code>eth.getTransaction()</code> 会返回一个包含该交易详细信息的对象，常见的字段包括：</p>\n<ul>\n<li><code>blockHash</code>: 该交易所属区块的哈希。</li>\n<li><code>blockNumber</code>: 该交易所属区块的区块号。</li>\n<li><code>from</code>: 发起该交易的地址。</li>\n<li><code>gas</code>: 该交易消耗的 gas 限额。</li>\n<li><code>gasPrice</code>: 该交易的 gas 价格。</li>\n<li><code>hash</code>: 该交易的哈希值。</li>\n<li><code>input</code>: 交易的数据字段，通常是合约调用时传递的数据。</li>\n<li><code>nonce</code>: 发送方账户的 nonce 值，表示该账户发起的交易计数。</li>\n<li><code>to</code>: 交易接收者的地址，如果是合约创建交易则为 <code>null</code>。</li>\n<li><code>transactionIndex</code>: 该交易在区块中的索引。</li>\n<li><code>value</code>: 该交易中发送的以太币数量（以 wei 为单位）。</li>\n</ul>\n<h5 id=\"交易未打包\"><a href=\"#交易未打包\" class=\"headerlink\" title=\"交易未打包\"></a>交易未打包</h5><p><strong><code>blockHash</code>: <code>null</code></strong> 当交易尚未被打包时，<code>blockHash</code> 的值为 <code>null</code>，因为该交易还没有被包含在任何区块中。</p>\n<p><strong><code>blockNumber</code>: <code>null</code></strong> 同样，由于交易未被打包，<code>blockNumber</code> 也会是 <code>null</code>，表示该交易还未属于任何区块。</p>\n<p><strong><code>transactionIndex</code>: <code>null</code></strong> 因为交易还没有被打包到区块，因此也没有在区块中的位置，<code>transactionIndex</code> 为 <code>null</code>。</p>\n<p><strong>其他字段</strong> 其他交易的基本信息仍然可以被查询到，包括：</p>\n<ul>\n<li><code>from</code>: 发送者的地址。</li>\n<li><code>to</code>: 接收者的地址（或者 <code>null</code> 如果是合约创建交易）。</li>\n<li><code>value</code>: 发送的以太币数量（以 wei 为单位）。</li>\n<li><code>gas</code>: 该交易所消耗的 Gas 限额。</li>\n<li><code>gasPrice</code>: Gas 价格。</li>\n<li><code>nonce</code>: 发送者账户的交易计数。</li>\n<li><code>input</code>: 交易中包含的数据（如合约调用时的参数）。</li>\n</ul>\n<h5 id=\"根据交易哈希查询交易收据\"><a href=\"#根据交易哈希查询交易收据\" class=\"headerlink\" title=\"根据交易哈希查询交易收据\"></a>根据交易哈希查询交易收据</h5><p>要查看交易是否成功被打包到区块中，可以使用以下命令查询交易收据：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getTransactionReceipt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xTransactionHash\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回的交易收据包含以下信息：</p>\n<ul>\n<li><code>status</code>: 交易的执行状态，<code>1</code> 表示成功，<code>0</code> 表示失败。</li>\n<li><code>blockHash</code>: 包含该交易的区块的哈希。</li>\n<li><code>blockNumber</code>: 区块号。</li>\n<li><code>transactionHash</code>: 交易哈希。</li>\n<li><code>gasUsed</code>: 此交易消耗的 gas 量。</li>\n<li><code>logs</code>: 该交易的事件日志列表</li>\n</ul>\n<h4 id=\"3-创建自定义交易\"><a href=\"#3-创建自定义交易\" class=\"headerlink\" title=\"3. 创建自定义交易\"></a>3. <strong>创建自定义交易</strong></h4><p>你可以使用 <code>eth.sendTransaction</code> 创建自定义交易，除了 <code>from</code> 和 <code>to</code> 之外，还可以指定 <code>gas</code>、<code>gasPrice</code> 和 <code>data</code> 等字段：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gas</span><span class=\"token operator\">:</span> <span class=\"token number\">21000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasPrice</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gwei\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSomeData\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>gas</code>: 设置交易的 gas 限制，确保足够高。</li>\n<li><code>gasPrice</code>: 设置每单位 gas 的价格，单位是 wei。</li>\n</ul>\n<h5 id=\"自定义-gas-价格\"><a href=\"#自定义-gas-价格\" class=\"headerlink\" title=\"自定义 gas 价格\"></a>自定义 gas 价格</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gas</span><span class=\"token operator\">:</span> <span class=\"token number\">21000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasPrice</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gwei\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这将设置一个较高的 gas 价格，以加快交易打包。</p>\n<h4 id=\"4-离线签名交易\"><a href=\"#4-离线签名交易\" class=\"headerlink\" title=\"4. 离线签名交易\"></a>4. <strong>离线签名交易</strong></h4><p>在某些场景下，你可能希望在离线状态下生成交易并签名，然后再发送。以下是离线签名交易的步骤：</p>\n<h5 id=\"构建未签名交易\"><a href=\"#构建未签名交易\" class=\"headerlink\" title=\"构建未签名交易\"></a>构建未签名交易</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> rawTx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">nonce</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getTransactionCount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasPrice</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token string\">'20'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gwei'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasLimit</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span><span class=\"token number\">21000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ether'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"签名交易\"><a href=\"#签名交易\" class=\"headerlink\" title=\"签名交易\"></a>签名交易</h5><p>使用 <code>eth.accounts.signTransaction</code> 函数来签名交易：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> signedTx <span class=\"token operator\">=</span> eth<span class=\"token punctuation\">.</span>accounts<span class=\"token punctuation\">.</span><span class=\"token function\">signTransaction</span><span class=\"token punctuation\">(</span>rawTx<span class=\"token punctuation\">,</span> <span class=\"token string\">\"0xPrivateKey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"发送已签名交易\"><a href=\"#发送已签名交易\" class=\"headerlink\" title=\"发送已签名交易\"></a>发送已签名交易</h5><p>发送已签名的交易，可以使用 <code>eth.sendSignedTransaction</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendSignedTransaction</span><span class=\"token punctuation\">(</span>signedTx<span class=\"token punctuation\">.</span>rawTransaction<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'receipt'</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-批量发送交易\"><a href=\"#5-批量发送交易\" class=\"headerlink\" title=\"5. 批量发送交易\"></a>5. <strong>批量发送交易</strong></h4><p>如果你需要一次发送多笔交易，你可以在脚本中批量调用 <code>eth.sendTransaction</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-检查账户余额\"><a href=\"#6-检查账户余额\" class=\"headerlink\" title=\"6. 检查账户余额\"></a>6. <strong>检查账户余额</strong></h4><p>你可以随时使用以下命令检查账户的余额：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xAddress\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>返回值为账户的余额，单位是 wei。如果你想以以太币（ether）显示，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span><span class=\"token function\">fromWei</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xAddress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"7-检查交易池中的交易\"><a href=\"#7-检查交易池中的交易\" class=\"headerlink\" title=\"7. 检查交易池中的交易\"></a>7. <strong>检查交易池中的交易</strong></h4><p>交易被发送后，可能会在交易池中等待确认。你可以使用以下命令查看交易池中的状态：</p>\n<h5 id=\"检查挂起的交易\"><a href=\"#检查挂起的交易\" class=\"headerlink\" title=\"检查挂起的交易\"></a>检查挂起的交易</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会返回交易池中的待处理和挂起的交易数量。</p>\n<h5 id=\"查看具体的挂起交易\"><a href=\"#查看具体的挂起交易\" class=\"headerlink\" title=\"查看具体的挂起交易\"></a>查看具体的挂起交易</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>inspect<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会显示详细的待处理和挂起交易的信息。</p>\n<h4 id=\"8-检查当前的-gas-价格\"><a href=\"#8-检查当前的-gas-价格\" class=\"headerlink\" title=\"8. 检查当前的 gas 价格\"></a>8. <strong>检查当前的 gas 价格</strong></h4><p>你可以使用以下命令来获取当前网络建议的 gas 价格：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>gasPrice<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>返回的值是以 wei 为单位的当前 gas 价格。</li>\n</ul>\n<h4 id=\"9-监听区块和交易事件\"><a href=\"#9-监听区块和交易事件\" class=\"headerlink\" title=\"9. 监听区块和交易事件\"></a>9. <strong>监听区块和交易事件</strong></h4><p>你可以通过监听事件来实时监控交易状态。例如，当新区块生成时，可以收到通知：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newBlockHeaders'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>error<span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">subscriptionId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>subscriptionId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blockHeader</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>blockHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"10-交易命令汇总\"><a href=\"#10-交易命令汇总\" class=\"headerlink\" title=\"10. 交易命令汇总\"></a>10. <strong>交易命令汇总</strong></h4><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>eth.sendTransaction({...})</code></td>\n<td>发送普通或自定义交易</td>\n</tr>\n<tr>\n<td><code>personal.unlockAccount(...)</code></td>\n<td>解锁账户以便发送交易</td>\n</tr>\n<tr>\n<td><code>eth.getTransaction(\"txHash\")</code></td>\n<td>根据哈希查询交易详情</td>\n</tr>\n<tr>\n<td><code>eth.getTransactionReceipt(\"txHash\")</code></td>\n<td>根据哈希查询交易收据</td>\n</tr>\n<tr>\n<td><code>eth.getBalance(\"0xAddress\")</code></td>\n<td>查询账户余额</td>\n</tr>\n<tr>\n<td><code>txpool.status</code></td>\n<td>查看交易池的状态</td>\n</tr>\n<tr>\n<td><code>eth.gasPrice</code></td>\n<td>获取当前的 gas 价格</td>\n</tr>\n<tr>\n<td><code>eth.accounts.signTransaction({...}, \"privateKey\")</code></td>\n<td>离线签名交易</td>\n</tr>\n<tr>\n<td><code>eth.sendSignedTransaction(\"signedTx\")</code></td>\n<td>发送已签名交易</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-6-私链多个节点连接的详细命令\"><a href=\"#2-6-私链多个节点连接的详细命令\" class=\"headerlink\" title=\"2.6 私链多个节点连接的详细命令\"></a>2.6 私链多个节点连接的详细命令</h3><p>在以太坊私链中，多个节点可以通过网络连接形成一个共识网络。在这种情况下，节点之间需要能够发现彼此，并保持同步。以下是详细的步骤和命令，用于设置并连接多个 Geth 节点到同一个私链网络。</p>\n<h4 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. <strong>准备工作</strong></h4><h5 id=\"创建-genesis-json-文件\"><a href=\"#创建-genesis-json-文件\" class=\"headerlink\" title=\"创建 genesis.json 文件\"></a>创建 <code>genesis.json</code> 文件</h5><p>在私链中，所有节点需要共享同一个创世区块 (<code>genesis block</code>)。首先，创建一个 <code>genesis.json</code> 文件，它定义了私链的创世区块和区块链的初始配置。</p>\n<p>以下是一个示例 <code>genesis.json</code> 文件：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">987</span><span class=\"token punctuation\">,</span> \n    <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> \n    <span class=\"token property\">\"eip150Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"byzantiumBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"constantinopleBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"petersburgBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"0xYourAccountAddress\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1000000000000000000000\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>chainId</code>: 为私链设置一个独特的网络 ID（不同于主网和测试网）。</li>\n<li><code>difficulty</code>: 设置初始挖矿难度，数值越低，挖矿越容易。</li>\n<li><code>gasLimit</code>: 设置每个区块的 gas 上限。</li>\n<li><code>alloc</code>: 为指定账户分配初始余额。</li>\n</ul>\n<h4 id=\"2-初始化-Geth-节点\"><a href=\"#2-初始化-Geth-节点\" class=\"headerlink\" title=\"2. 初始化 Geth 节点\"></a>2. <strong>初始化 Geth 节点</strong></h4><p>每个节点在第一次启动时都需要初始化私链。假设你已经有了 Geth，并将数据目录设置为 <code>./data</code>，可以使用以下命令初始化节点：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data init genesis.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>--datadir ./data</code>: 指定节点的数据目录。</li>\n<li><code>init genesis.json</code>: 使用 <code>genesis.json</code> 文件初始化链。</li>\n</ul>\n<p>每个私链节点都需要运行此命令。</p>\n<h4 id=\"3-启动节点\"><a href=\"#3-启动节点\" class=\"headerlink\" title=\"3. 启动节点\"></a>3. <strong>启动节点</strong></h4><p>使用以下命令启动每个节点，并确保每个节点都指定相同的 <code>--networkid</code> 和使用 <code>--port</code> 参数设置不同的端口。</p>\n<h5 id=\"启动第一个节点（节点A）\"><a href=\"#启动第一个节点（节点A）\" class=\"headerlink\" title=\"启动第一个节点（节点A）\"></a>启动第一个节点（节点A）</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8545</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>--datadir ./data</code>: 指定节点的数据目录。</li>\n<li><code>--networkid 987</code>: 设置网络 ID，与 <code>genesis.json</code> 中的 <code>chainId</code> 保持一致。</li>\n<li><code>--port 30303</code>: 设置 P2P 连接的监听端口。</li>\n<li><code>--nodiscover</code>: 禁用节点发现功能（如果你想手动连接节点）。</li>\n<li><code>--http</code>: 启用 HTTP-RPC 服务，便于远程访问节点。</li>\n<li><code>console</code>: 启动 Geth 控制台以便执行命令。</li>\n</ul>\n<h5 id=\"启动第二个节点（节点B）\"><a href=\"#启动第二个节点（节点B）\" class=\"headerlink\" title=\"启动第二个节点（节点B）\"></a>启动第二个节点（节点B）</h5><p>节点B可以在另一台机器上，也可以是本机上的另一个实例，只需要不同的数据目录和端口：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./node2data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30304</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8546</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>--datadir ./node2data</code>: 为节点B设置不同的数据目录。</li>\n<li><code>--port 30304</code>: 节点B的 P2P 端口必须与节点A不同。</li>\n<li><code>--http.port 8546</code>: HTTP-RPC 服务端口与节点A不同。</li>\n</ul>\n<h4 id=\"4-手动连接节点\"><a href=\"#4-手动连接节点\" class=\"headerlink\" title=\"4. 手动连接节点\"></a>4. <strong>手动连接节点</strong></h4><p>因为 <code>--nodiscover</code> 禁用了自动发现，必须手动连接节点。</p>\n<h5 id=\"获取节点的-enode-信息\"><a href=\"#获取节点的-enode-信息\" class=\"headerlink\" title=\"获取节点的 enode 信息\"></a>获取节点的 <code>enode</code> 信息</h5><p>在节点A的控制台中，输入以下命令获取节点A的 <code>enode</code> 地址：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span>nodeInfo<span class=\"token punctuation\">.</span>enode<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出类似于：</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token string\">\"enode://1234567890abcdef@127.0.0.1:30303?discport=0\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个地址是节点A的唯一标识，后面的 <code>@127.0.0.1:30303</code> 表示节点A运行的 IP 和端口。</p>\n<h5 id=\"连接节点B到节点A\"><a href=\"#连接节点B到节点A\" class=\"headerlink\" title=\"连接节点B到节点A\"></a>连接节点B到节点A</h5><p>在节点B的控制台中，使用 <code>admin.addPeer</code> 命令连接到节点A：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span><span class=\"token function\">addPeer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enode://1234567890abcdef@127.0.0.1:30303\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>将 <code>\"enode://1234567890abcdef@127.0.0.1:30303\"</code> 替换为节点A的 <code>enode</code> 地址。</li>\n</ul>\n<h5 id=\"验证节点是否连接\"><a href=\"#验证节点是否连接\" class=\"headerlink\" title=\"验证节点是否连接\"></a>验证节点是否连接</h5><p>在任何一个节点的控制台中，使用以下命令检查当前连接的对等节点数量：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">net<span class=\"token punctuation\">.</span>peerCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>如果节点成功连接，该命令将返回大于 <code>0</code> 的值。</li>\n</ul>\n<p>你还可以使用以下命令查看当前的连接节点列表：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span>peers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"5-同步和挖矿\"><a href=\"#5-同步和挖矿\" class=\"headerlink\" title=\"5. 同步和挖矿\"></a>5. <strong>同步和挖矿</strong></h4><p>在节点A或节点B中，可以启动挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 使用 1 个线程进行挖矿</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>挖到的区块会自动同步到其他节点。你可以通过以下命令查看区块高度：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"6-账户和交易管理\"><a href=\"#6-账户和交易管理\" class=\"headerlink\" title=\"6. 账户和交易管理\"></a>6. <strong>账户和交易管理</strong></h4><h5 id=\"创建新账户\"><a href=\"#创建新账户\" class=\"headerlink\" title=\"创建新账户\"></a>创建新账户</h5><p>在 Geth 控制台中，你可以为每个节点创建新账户：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">newAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"解锁账户-1\"><a href=\"#解锁账户-1\" class=\"headerlink\" title=\"解锁账户\"></a>解锁账户</h5><p>发送交易前需要解锁账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAccountAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"发送交易\"><a href=\"#发送交易\" class=\"headerlink\" title=\"发送交易\"></a>发送交易</h5><p>在节点之间发送交易，可以使用 <code>eth.sendTransaction</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>from</code>: 发送者账户地址。</li>\n<li><code>to</code>: 接收者账户地址。</li>\n<li><code>value</code>: 转账金额，单位为 wei。</li>\n</ul>\n<h4 id=\"7-设置启动脚本\"><a href=\"#7-设置启动脚本\" class=\"headerlink\" title=\"7. 设置启动脚本\"></a>7. <strong>设置启动脚本</strong></h4><p>为了方便，你可以将节点启动命令放入 <code>.bat</code> 或 <code>.cmd</code> 文件中，在 Windows 上直接双击执行。例如，创建一个 <code>start_nodeA.bat</code> 文件，内容为：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8545</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后创建 <code>start_nodeB.bat</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./node2data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30304</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8546</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"8-多节点连接的总结步骤\"><a href=\"#8-多节点连接的总结步骤\" class=\"headerlink\" title=\"8. 多节点连接的总结步骤\"></a>8. <strong>多节点连接的总结步骤</strong></h4><ol>\n<li>创建 <code>genesis.json</code> 文件，并初始化所有节点。</li>\n<li>启动每个节点，确保使用相同的 <code>networkid</code> 和不同的 <code>port</code>。</li>\n<li>使用 <code>admin.addPeer</code> 手动连接节点，确保它们可以互相通信。</li>\n<li>启动挖矿，并通过 <code>miner.start()</code> 命令进行区块生成。</li>\n<li>使用 <code>admin.peers</code> 和 <code>net.peerCount</code> 查看连接状态。</li>\n</ol>\n<p>通过这些步骤，你可以在私链上搭建多个节点的网络，节点之间可以互相同步区块、挖矿和发送交易。</p>\n<h2 id=\"三、构建示例项目\"><a href=\"#三、构建示例项目\" class=\"headerlink\" title=\"三、构建示例项目\"></a>三、构建示例项目</h2><h3 id=\"创建-Truffle-项目\"><a href=\"#创建-Truffle-项目\" class=\"headerlink\" title=\"创建 Truffle 项目\"></a>创建 Truffle 项目</h3><ol>\n<li><h4 id=\"创建项目目录：\"><a href=\"#创建项目目录：\" class=\"headerlink\" title=\"创建项目目录：\"></a><strong>创建项目目录</strong>：</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> my-dapp\n<span class=\"token builtin class-name\">cd</span> my-dapp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><h4 id=\"初始化-Truffle-项目：\"><a href=\"#初始化-Truffle-项目：\" class=\"headerlink\" title=\"初始化 Truffle 项目：\"></a><strong>初始化 Truffle 项目</strong>：</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle init or truffle.cmd unbox webpack <span class=\"token comment\">#后者用 webpack 模版初始化项目骨架结构</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装项目依赖的 NPM 包 ，执行以下命令安装 npm 包:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> app\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"修改-Truffle-配置\"><a href=\"#修改-Truffle-配置\" class=\"headerlink\" title=\"修改 Truffle 配置\"></a>修改 Truffle 配置</h3><p>在项目根目录下找到 <code>truffle-config.js</code> 文件，并修改如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">networks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">development</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 根据实际情况设置</span>\n      <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">8545</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 根据实际情况设置</span>\n      <span class=\"token literal-property property\">network_id</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 匹配任何网络 ID</span>\n      <span class=\"token literal-property property\">gas</span><span class=\"token operator\">:</span> <span class=\"token number\">3000000</span>        <span class=\"token comment\">// 设置最大 gas 限制</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">compilers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">solc</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.8.0\"</span>   <span class=\"token comment\">// 指定 Solidity 编译器版本</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"编写智能合约\"><a href=\"#编写智能合约\" class=\"headerlink\" title=\"编写智能合约\"></a>编写智能合约</h3><p>在 <code>contracts</code> 目录下创建一个新的合约文件，例如 <code>MyContract.sol</code>：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyContract</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> message<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> initialMessage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        message <span class=\"token operator\">=</span> initialMessage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> newMessage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        message <span class=\"token operator\">=</span> newMessage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"创建迁移文件\"><a href=\"#创建迁移文件\" class=\"headerlink\" title=\"创建迁移文件\"></a>创建迁移文件</h3><p>在 <code>migrations</code> 目录下创建一个新的迁移文件，例如 <code>2_deploy_my_contract.js</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContract <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deployer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContract<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"1-默认迁移行为\"><a href=\"#1-默认迁移行为\" class=\"headerlink\" title=\"1. 默认迁移行为\"></a>1. 默认迁移行为</h4><p>当你运行以下命令时：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>Truffle 会按照 <code>migrations</code> 目录中脚本的顺序自动部署所有合约。每个脚本的文件名通常以数字开头，以确定部署顺序。例如：</p>\n<ul>\n<li><code>1_initial_migration.js</code></li>\n<li><code>2_deploy_contracts.js</code></li>\n</ul>\n<h4 id=\"2-部署特定合约\"><a href=\"#2-部署特定合约\" class=\"headerlink\" title=\"2. 部署特定合约\"></a>2. 部署特定合约</h4><p>如果你只想部署特定的合约，可以按照以下步骤进行：</p>\n<h5 id=\"2-1-创建特定迁移文件\"><a href=\"#2-1-创建特定迁移文件\" class=\"headerlink\" title=\"2.1 创建特定迁移文件\"></a>2.1 创建特定迁移文件</h5><p>你可以在 <code>migrations</code> 目录中创建新的迁移文件，只包含要部署的合约。例如，假设你只想部署 <code>MyContract</code> 合约，你可以创建一个新的迁移文件，例如 <code>3_deploy_my_contract.js</code>，内容如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContract <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deployer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContract<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-2-使用-f-参数\"><a href=\"#2-2-使用-f-参数\" class=\"headerlink\" title=\"2.2 使用 --f 参数\"></a>2.2 使用 <code>--f</code> 参数</h5><p>如果你想只运行特定的迁移文件，可以使用 <code>--f</code> 参数（<code>--f</code> 后接文件的序号）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--f</span> <span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将只运行 <code>3_deploy_my_contract.js</code> 文件中的迁移脚本。</p>\n<h4 id=\"3-回滚并重新部署\"><a href=\"#3-回滚并重新部署\" class=\"headerlink\" title=\"3. 回滚并重新部署\"></a>3. 回滚并重新部署</h4><p>如果你需要重新部署某个合约，可以使用 <code>--reset</code> 参数，这将重新运行所有的迁移：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--reset</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果只想回滚到某个特定迁移并重新部署，你可以使用 <code>--to</code> 参数：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--to</span> <span class=\"token number\">2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将回滚到并重新部署到第二个迁移（<code>2_deploy_contracts.js</code>）为止的所有迁移。</p>\n<h4 id=\"4-部署的选择性控制\"><a href=\"#4-部署的选择性控制\" class=\"headerlink\" title=\"4. 部署的选择性控制\"></a>4. 部署的选择性控制</h4><p>如果你的合约之间存在依赖关系（例如，一个合约依赖于另一个合约），你应该确保按照适当的顺序部署。可以在迁移脚本中引用之前已经部署的合约：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContractA <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContractA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MyContractB <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContractB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deployer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContractA<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> instanceA <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> MyContractA<span class=\"token punctuation\">.</span><span class=\"token function\">deployed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// 部署时传递 MyContractA 的地址</span>\n  <span class=\"token keyword\">await</span> deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContractB<span class=\"token punctuation\">,</span> instanceA<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"编译合约\"><a href=\"#编译合约\" class=\"headerlink\" title=\"编译合约\"></a>编译合约</h3><p>在部署合约之前，您需要确保智能合约已被编译。您可以通过以下命令来编译合约：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle compile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"自动编译与部署\"><a href=\"#自动编译与部署\" class=\"headerlink\" title=\"自动编译与部署\"></a>自动编译与部署</h4><p>在执行 <code>truffle migrate</code> 时，Truffle 会自动检查合约是否已经编译。如果合约文件有更改或未编译，Truffle 会自动执行编译。因此，在以下情况下，您可以不手动执行编译命令：</p>\n<ul>\n<li><strong>合约未编译</strong>：当您修改了合约后，执行 <code>truffle migrate</code> 时会自动编译。</li>\n<li><strong>合约已经是最新</strong>：如果合约未更改并且已经编译，则可以直接执行迁移命令。</li>\n</ul>\n<h4 id=\"如何确认编译状态\"><a href=\"#如何确认编译状态\" class=\"headerlink\" title=\"如何确认编译状态\"></a>如何确认编译状态</h4><p>如果您不确定合约是否已经编译，可以检查 <code>build/contracts</code> 目录。编译后，该目录下应该会生成合约的 JSON 文件（包含字节码和 ABI）。例如，<code>MyContract.json</code> 文件中应该有相关信息。</p>\n<p>如果您希望在每次部署时都重新编译合约，可以在 <code>migrate</code> 命令中使用 <code>--compile-all</code> 参数，如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate --compile-all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将强制 Truffle 重新编译所有合约。</p>\n<h3 id=\"启动-Geth-节点\"><a href=\"#启动-Geth-节点\" class=\"headerlink\" title=\"启动 Geth 节点\"></a>启动 Geth 节点</h3><p>在 Geth 的命令行窗口中，启动您的节点，使用以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> <span class=\"token parameter variable\">--rpc</span> <span class=\"token parameter variable\">--rpcaddr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--rpcport</span> <span class=\"token string\">\"8545\"</span> <span class=\"token parameter variable\">--rpccorsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--rpcapi</span> <span class=\"token string\">\"eth,net,web3,personal,admin,shh,txpool,debug,miner\"</span> <span class=\"token parameter variable\">--mine</span> <span class=\"token parameter variable\">--minerthreads</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"解锁账户-2\"><a href=\"#解锁账户-2\" class=\"headerlink\" title=\"解锁账户\"></a>解锁账户</h3><p>在 Geth 控制台中，解锁您的账户（假设 <code>user1</code> 是您的账户地址）：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"your_password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果已经正确地解锁了账户,你会看到部署过程停止在某个状态</p>\n<p>这是因为 truffle 在等待部署交易提交,但是我们在私链中还没有启动挖矿。  现在切换回 geth 终端窗口,查看交易池的状态:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">txpool.status  \n<span class=\"token punctuation\">{</span>  \npending:1,  \nqueued:0  \n<span class=\"token punctuation\">}</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有一个挂起的交易</p>\n<h3 id=\"启动挖矿-1\"><a href=\"#启动挖矿-1\" class=\"headerlink\" title=\"启动挖矿\"></a>启动挖矿</h3><p>在 Geth 控制台中，启动挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>稍等小会儿,再查看交易池的状态:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">txpool.status  \n<span class=\"token punctuation\">{</span>  pending:0,  queued:0  <span class=\"token punctuation\">}</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>交易已经成功提交了</p>\n<h3 id=\"部署合约\"><a href=\"#部署合约\" class=\"headerlink\" title=\"部署合约\"></a>部署合约</h3><p>在项目目录中，使用以下命令部署合约：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--network</span> development<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"检查部署结果\"><a href=\"#检查部署结果\" class=\"headerlink\" title=\"检查部署结果\"></a>检查部署结果</h3><p>部署完成后，您可以查看终端输出中的合约地址和交易哈希，确认合约是否成功部署。</p>\n<h3 id=\"与合约交互\"><a href=\"#与合约交互\" class=\"headerlink\" title=\"与合约交互\"></a>与合约交互</h3><p>在合约部署后，您可以使用 Truffle 控制台与合约进行交互：</p>\n<ol>\n<li><p>启动 Truffle 控制台：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle console <span class=\"token parameter variable\">--network</span> development<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>在控制台中，获取合约实例并与其交互：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> MyContract<span class=\"token punctuation\">.</span><span class=\"token function\">deployed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> currentMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 输出当前消息</span>\n\n<span class=\"token keyword\">await</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New Message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 更新消息</span>\n<span class=\"token keyword\">const</span> updatedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>updatedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 输出更新后的消息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"启动-DApp\"><a href=\"#启动-DApp\" class=\"headerlink\" title=\"启动 DApp\"></a>启动 DApp</h3><p>执行以下命令来启动 DApp:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在浏览器里访问 <a href=\"http://localhost:8080/\">http://localhost:8080</a> 即可</p>\n<p>如果你希望从别的机器也可以访问你的 DApp 应用,修改一下 <code>package.json</code>:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>  \n\tscripts:<span class=\"token punctuation\">{</span>\n    \t<span class=\"token string\">\"dev\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"webpack-dev-server –-host 0.0.0.0\"</span> \n    \t<span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、命令详解\"><a href=\"#四、命令详解\" class=\"headerlink\" title=\"四、命令详解\"></a>四、命令详解</h2><h3 id=\"1-Geth-命令行选项\"><a href=\"#1-Geth-命令行选项\" class=\"headerlink\" title=\"1. Geth 命令行选项\"></a>1. <strong>Geth 命令行选项</strong></h3><p>这些命令是在启动 Geth 时使用的，用来配置节点行为。</p>\n<ul>\n<li><p><strong>–datadir</strong>：指定数据目录，所有区块链和配置数据将保存在此目录中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–networkid</strong>：选择要加入的网络 ID，避免连接到错误的链。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–port</strong>：指定节点的P2P通信端口（默认是 30303）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–nodiscover</strong>：禁用节点自动发现，防止自动连接其他节点（常用于私有网络）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--nodiscover</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–maxpeers</strong>：设置最多连接的节点数（默认 25）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--maxpeers</span> <span class=\"token number\">30</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–mine</strong>：启动节点时立即开始挖矿。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--mine</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–minerthreads</strong>：设置挖矿使用的线程数量（默认为 1）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--minerthreads</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–etherbase</strong>：指定挖矿奖励接收的以太坊地址。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--etherbase</span> 0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpc</strong>：启用 HTTP-RPC 接口，允许通过 HTTP 与节点交互。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpc</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpcaddr</strong>：指定 HTTP-RPC 接口监听的地址。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpcaddr</span> <span class=\"token number\">127.0</span>.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpcport</strong>：指定 HTTP-RPC 端口。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpcport</span> <span class=\"token number\">8545</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpccorsdomain</strong>：指定允许通过 CORS（跨域资源共享）访问的域，通常设置为 <code>*</code> 允许所有域。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpccorsdomain</span> <span class=\"token string\">\"*\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpcapi</strong>：指定允许通过 RPC 接口调用的 API 模块（例如 <code>eth</code>, <code>net</code>, <code>web3</code>）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpcapi</span> <span class=\"token string\">\"eth,net,web3\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–syncmode</strong>：设置节点的同步模式，常用的有：</p>\n<ul>\n<li><code>fast</code>（默认，快速同步）</li>\n<li><code>full</code>（完全同步）</li>\n<li><code>light</code>（轻节点，只下载区块头）</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--syncmode</span> fast<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–ipcdisable</strong>：禁用 Geth 的 IPC-RPC 通信接口（默认启用 IPC）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--ipcdisable</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"2-Geth-控制台命令\"><a href=\"#2-Geth-控制台命令\" class=\"headerlink\" title=\"2. Geth 控制台命令\"></a>2. <strong>Geth 控制台命令</strong></h3><p>这些命令是在 Geth 启动并进入控制台时使用的，或者通过 <code>geth attach</code> 来附加到已运行的节点。</p>\n<ul>\n<li><p><strong>eth.syncing</strong>：查看节点是否在同步，并返回同步状态。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>syncing<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>eth.blockNumber</strong>：获取当前节点的区块高度。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**eth.getBlock(blockNumber)**：查看某个区块的信息（例如查看最新区块）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>blockNumber<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**eth.getBalance(address)**：查看某个地址的余额。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAddressHere\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**miner.start(threads)**：启动挖矿，并指定使用的线程数（例如 1 个线程）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**miner.stop()**：停止挖矿。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**personal.newAccount(password)**：创建新账户，并设置密码。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">newAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YourPassword\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**personal.unlockAccount(address, password)**：解锁指定账户，允许在一段时间内使用账户进行交易。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAddressHere\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"YourPassword\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>admin.peers</strong>：查看当前连接的节点。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span>peers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**admin.addPeer(enodeURL)**：手动添加一个节点。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span><span class=\"token function\">addPeer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enode://...\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>net.peerCount</strong>：查看连接的节点数量。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">net<span class=\"token punctuation\">.</span>peerCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>txpool.status</strong>：查看交易池的状态，包含等待和挂起的交易数量。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**debug.verbosity(level)**：设置日志的详细程度（0 为最少，5 为最多）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">debug<span class=\"token punctuation\">.</span><span class=\"token function\">verbosity</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**web3.sha3(string)**：计算字符串的 Keccak-256 哈希。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span><span class=\"token function\">sha3</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**eth.sendTransaction({from: sender, to: receiver, value: amount})**：发送交易（注意单位为 Wei）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xYourAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xReceiverAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>这些命令涵盖了Geth在日常使用中的常见需求，包括节点管理、账户管理、挖矿、网络连接、交易等。你可以根据自己的需求组合使用。</p>\n",
            "tags": [
                "教程",
                "区块链"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/10/10/devc-an-zhuang-wai-bu-ku/",
            "url": "https://0xdadream.github.io/2024/10/10/devc-an-zhuang-wai-bu-ku/",
            "title": "dev c++安装外部库",
            "date_published": "2024-10-10T07:25:00.000Z",
            "content_html": "<h1 id=\"dev-c-安装外部库\"><a href=\"#dev-c-安装外部库\" class=\"headerlink\" title=\"dev c++安装外部库\"></a>dev c++安装外部库</h1><p>先去下载一个外部库压缩包，例如<a href=\"https://github.com/libtom/libtommath/releases\">Releases · libtom/libtommath (github.com)</a></p>\n<p>得到一个压缩包不要解压，打开DEV C++ -&gt;工具-&gt;package manager-&gt;install(找到你刚才的安装包)-&gt;安装完毕</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/10/0e5f63951c3d9755f2eea6eb081bdb95.png\"></p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/10/2899d25fe20c9db160235fe901c1c0a6.png\"></p>\n<p>然后工具-&gt;编译选项-&gt;目录-&gt;c++包含文件，如下添加路径</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/10/314916c6d40c34b86c64b15e2e154f13.png\"></p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/10/e5f4530cae912a78f07d34d84c3fd954.png\"></p>\n<p>点击右下角文件目录图样选择路径，路径如图在dev c++安装目录下找刚才安装的库，然后添加，确定</p>\n",
            "tags": [
                "tips"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/",
            "url": "https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/",
            "title": "文件名含义",
            "date_published": "2024-10-10T01:25:00.000Z",
            "content_html": "<h1 id=\"文件名含义\"><a href=\"#文件名含义\" class=\"headerlink\" title=\"文件名含义\"></a>文件名含义</h1><h3 id=\"1-版本号\"><a href=\"#1-版本号\" class=\"headerlink\" title=\"1. 版本号\"></a>1. <strong>版本号</strong></h3><p>安装文件名通常包含软件的版本号，用来表示该版本相对于其他版本的更新程度。</p>\n<ul>\n<li><strong>示例</strong>：<code>software_1.0.0.exe</code></li>\n<li><strong>含义</strong>：软件版本为1.0.0，版本号通常采用三段式：<code>主版本号.次版本号.修订号</code>。主版本号表示重大更新，次版本号表示功能增加，修订号表示小的修复。</li>\n</ul>\n<h3 id=\"2-操作系统（OS）标识\"><a href=\"#2-操作系统（OS）标识\" class=\"headerlink\" title=\"2. 操作系统（OS）标识\"></a>2. <strong>操作系统（OS）标识</strong></h3><p>文件名中通常会有一个标识符，用于指定该安装文件适用于哪个操作系统。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>win</code>：Windows 系统</li>\n<li><code>mac</code> 或 <code>osx</code>：Mac OS 系统</li>\n<li><code>linux</code>：Linux 系统</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64.exe</code></li>\n<li><strong>含义</strong>：该软件适用于64位的Windows系统。</li>\n</ul>\n<h3 id=\"3-位数或架构\"><a href=\"#3-位数或架构\" class=\"headerlink\" title=\"3. 位数或架构\"></a>3. <strong>位数或架构</strong></h3><p>安装文件通常会注明是为32位（x86）还是64位（x64）系统架构设计的。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>x86</code> 或 <code>32</code>：适用于32位系统</li>\n<li><code>x64</code> 或 <code>64</code>：适用于64位系统</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_x64.deb</code></li>\n<li><strong>含义</strong>：软件适用于64位架构的系统。</li>\n</ul>\n<h3 id=\"4-安装文件类型\"><a href=\"#4-安装文件类型\" class=\"headerlink\" title=\"4. 安装文件类型\"></a>4. <strong>安装文件类型</strong></h3><p>文件扩展名（如<code>.exe</code>, <code>.msi</code>, <code>.deb</code>, <code>.rpm</code>）表示安装文件的类型和其安装方式。</p>\n<ul>\n<li>常见扩展名：<ul>\n<li><code>.exe</code>：Windows 可执行文件</li>\n<li><code>.msi</code>：Windows 安装包</li>\n<li><code>.deb</code>：Debian 或 Ubuntu 的安装包</li>\n<li><code>.rpm</code>：Red Hat 或 CentOS 的安装包</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_amd64.deb</code></li>\n<li><strong>含义</strong>：该软件是为64位系统的Debian或Ubuntu环境提供的安装包。</li>\n</ul>\n<h3 id=\"5-压缩格式\"><a href=\"#5-压缩格式\" class=\"headerlink\" title=\"5. 压缩格式\"></a>5. <strong>压缩格式</strong></h3><p>有些安装文件是以压缩包的形式发布的，文件名中会包含压缩格式的标识。</p>\n<ul>\n<li>常见扩展名：<ul>\n<li><code>.zip</code>：ZIP 压缩格式</li>\n<li><code>.tar.gz</code>：Gzip压缩的Tar包（常用于Linux）</li>\n<li><code>.7z</code>：7-Zip压缩格式</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_linux.tar.gz</code></li>\n<li><strong>含义</strong>：该文件是为Linux系统提供的安装包，并以Gzip格式压缩。</li>\n</ul>\n<h3 id=\"6-预发布-稳定版标识\"><a href=\"#6-预发布-稳定版标识\" class=\"headerlink\" title=\"6. 预发布/稳定版标识\"></a>6. <strong>预发布/稳定版标识</strong></h3><p>文件名中有时会包含有关该版本是否为稳定版或预发布版本的信息。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>beta</code>：测试版</li>\n<li><code>alpha</code>：早期开发版</li>\n<li><code>rc</code>：发布候选版（Release Candidate）</li>\n<li><code>stable</code>：稳定版</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_beta.exe</code></li>\n<li><strong>含义</strong>：该文件是软件的测试版。</li>\n</ul>\n<h3 id=\"7-特殊用途标识\"><a href=\"#7-特殊用途标识\" class=\"headerlink\" title=\"7. 特殊用途标识\"></a>7. <strong>特殊用途标识</strong></h3><p>某些文件名中可能还包含表示特定用途的标识符，例如为开发者准备的工具包、文档文件等。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>sdk</code>：软件开发工具包</li>\n<li><code>docs</code>：文档</li>\n<li><code>lite</code>：精简版</li>\n<li><code>full</code>：完整版本</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_sdk_win64.zip</code></li>\n<li><strong>含义</strong>：该文件是用于Windows 64位系统的软件开发工具包，并以ZIP格式压缩。</li>\n</ul>\n<h3 id=\"8-语言或区域标识\"><a href=\"#8-语言或区域标识\" class=\"headerlink\" title=\"8. 语言或区域标识\"></a>8. <strong>语言或区域标识</strong></h3><p>某些安装文件可能还会包含语言或区域的代码，表示该软件适用于特定语言版本。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>en</code>：英语</li>\n<li><code>cn</code> 或 <code>zh</code>：中文</li>\n<li><code>fr</code>：法语</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_zh-cn.exe</code></li>\n<li><strong>含义</strong>：这是面向中国大陆的中文版本，适用于64位的Windows系统。</li>\n</ul>\n<h3 id=\"9-发行渠道或发行模式\"><a href=\"#9-发行渠道或发行模式\" class=\"headerlink\" title=\"9. 发行渠道或发行模式\"></a>9. <strong>发行渠道或发行模式</strong></h3><p>文件名中有时会标明软件的发行渠道或模式，帮助用户了解该软件是通过何种方式发布的。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>offline</code> 或 <code>standalone</code>：离线安装包，不需要网络连接即可安装</li>\n<li><code>web</code> 或 <code>online</code>：在线安装器，下载时体积小，安装过程中需要联网下载额外文件</li>\n<li><code>portable</code>：便携版，通常无需安装，可直接运行</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_offline.exe</code></li>\n<li><strong>含义</strong>：适用于64位Windows系统的离线安装包。</li>\n</ul>\n<h3 id=\"10-安全标识或加密\"><a href=\"#10-安全标识或加密\" class=\"headerlink\" title=\"10. 安全标识或加密\"></a>10. <strong>安全标识或加密</strong></h3><p>某些安装文件可能在名称中包含与安全相关的标识符，通常用于表示该文件的来源可信或包含特定的安全加密方式。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>signed</code>：已签名的安装文件，确保文件未被篡改</li>\n<li><code>hash</code>：指文件的哈希值（如SHA256），用户可用来验证文件完整性</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_signed.exe</code></li>\n<li><strong>含义</strong>：该文件已经过数字签名验证，确保文件的来源安全。</li>\n</ul>\n<h3 id=\"11-支持的硬件平台\"><a href=\"#11-支持的硬件平台\" class=\"headerlink\" title=\"11. 支持的硬件平台\"></a>11. <strong>支持的硬件平台</strong></h3><p>一些安装文件会标明其支持的硬件平台，特别是在跨平台软件或硬件驱动程序中，这一点很常见。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>arm</code> 或 <code>arm64</code>：适用于基于ARM架构的设备</li>\n<li><code>intel</code> 或 <code>x86_64</code>：适用于基于Intel或AMD x86_64架构的设备</li>\n<li><code>nvidia</code>：适用于NVIDIA显卡驱动</li>\n<li><code>amd</code>：适用于AMD显卡驱动</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_arm64.deb</code></li>\n<li><strong>含义</strong>：该安装包适用于基于ARM64架构的设备，通常在移动设备或某些低功耗的服务器上使用。</li>\n</ul>\n<h3 id=\"12-地域和市场\"><a href=\"#12-地域和市场\" class=\"headerlink\" title=\"12. 地域和市场\"></a>12. <strong>地域和市场</strong></h3><p>某些安装文件名会指出该软件是为特定国家或地区的市场发布的，特别是在带有本地化内容或法规限制的软件中。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>us</code>：美国市场</li>\n<li><code>eu</code>：欧洲市场</li>\n<li><code>cn</code>：中国市场</li>\n<li><code>jp</code>：日本市场</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_cn.exe</code></li>\n<li><strong>含义</strong>：该文件是适用于中国市场的Windows 64位版本。</li>\n</ul>\n<h3 id=\"13-多语言支持\"><a href=\"#13-多语言支持\" class=\"headerlink\" title=\"13. 多语言支持\"></a>13. <strong>多语言支持</strong></h3><p>文件名中有时会包含软件的语言支持类型，表示是否为多语言版本或仅支持特定语言。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>ml</code> 或 <code>multi</code>：多语言版本</li>\n<li><code>en</code>：仅支持英语</li>\n<li><code>zh-cn</code>：简体中文</li>\n<li><code>es</code>：西班牙语</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_multi.exe</code></li>\n<li><strong>含义</strong>：该安装文件支持多种语言，用户可以在安装时选择语言。</li>\n</ul>\n<h3 id=\"14-开发版本类型\"><a href=\"#14-开发版本类型\" class=\"headerlink\" title=\"14. 开发版本类型\"></a>14. <strong>开发版本类型</strong></h3><p>开发者在发布未完成的测试版软件时，文件名中可能包含不同类型的开发版本标识符。这些标识符有助于区分不同的开发阶段。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>dev</code>：开发版，通常是未完成的版本，用于开发者内部测试</li>\n<li><code>snapshot</code>：快照版，是开发过程中某个时间点的版本</li>\n<li><code>nightly</code>：每晚构建版，指每天自动生成的开发版</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_snapshot_win64.exe</code></li>\n<li><strong>含义</strong>：该文件是开发过程中的快照版本，可能不稳定或包含实验性功能。</li>\n</ul>\n<h3 id=\"15-安装模式\"><a href=\"#15-安装模式\" class=\"headerlink\" title=\"15. 安装模式\"></a>15. <strong>安装模式</strong></h3><p>文件名中有时会包含不同的安装模式，特别是在支持用户自定义安装或选择不同模块的安装包中。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>full</code>：完整安装包，包含所有功能模块</li>\n<li><code>lite</code> 或 <code>min</code>：轻量或精简版，包含最少的功能模块</li>\n<li><code>custom</code>：用户可以自定义选择安装哪些功能模块</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_lite.exe</code></li>\n<li><strong>含义</strong>：这是软件的精简版，适用于64位Windows系统，可能省去了一些不常用的功能。</li>\n</ul>\n<h3 id=\"16-分发类型\"><a href=\"#16-分发类型\" class=\"headerlink\" title=\"16. 分发类型\"></a>16. <strong>分发类型</strong></h3><p>某些安装文件会根据分发渠道或协议进行分类，特别是开源软件或商业软件中，这些标识符帮助用户了解软件的使用条款或发布方式。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>community</code>：社区版，通常是免费或开源版本</li>\n<li><code>enterprise</code> 或 <code>pro</code>：企业版或专业版，通常包含高级功能，面向商业用户</li>\n<li><code>trial</code>：试用版，提供一定期限的免费使用</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_enterprise_win64.exe</code></li>\n<li><strong>含义</strong>：这是面向企业用户的专业版安装包。</li>\n</ul>\n<h3 id=\"17-补丁版本和维护版本\"><a href=\"#17-补丁版本和维护版本\" class=\"headerlink\" title=\"17. 补丁版本和维护版本\"></a>17. <strong>补丁版本和维护版本</strong></h3><p>有些文件名会包含补丁（patch）或维护（maintenance）版本信息，表示该文件是在原版基础上进行修复、改进或安全更新的版本。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>patch</code> 或 <code>hotfix</code>：补丁版，修复特定问题</li>\n<li><code>sp1</code>, <code>sp2</code> 等：服务包版本（Service Pack），通常是对多个问题的修复合集</li>\n<li><code>update</code>：更新版本，提供功能改进或错误修复</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_sp1_win64.exe</code></li>\n<li><strong>含义</strong>：这是软件1.0.0版本的第一个服务包，适用于64位Windows系统，包含问题修复和改进。</li>\n</ul>\n<h3 id=\"18-兼容性标识\"><a href=\"#18-兼容性标识\" class=\"headerlink\" title=\"18. 兼容性标识\"></a>18. <strong>兼容性标识</strong></h3><p>某些安装文件会注明与其他软件或硬件的兼容性信息，特别是在驱动程序或插件的安装包中。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>compatible</code>：表示与特定系统或硬件兼容</li>\n<li><code>legacy</code>：遗留版本，支持旧版本系统或硬件</li>\n<li><code>universal</code>：通用版，适用于多个平台</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win64_legacy.exe</code></li>\n<li><strong>含义</strong>：这是适用于旧版本Windows系统或旧硬件的安装包。</li>\n</ul>\n<h3 id=\"19-试用期或限制\"><a href=\"#19-试用期或限制\" class=\"headerlink\" title=\"19. 试用期或限制\"></a>19. <strong>试用期或限制</strong></h3><p>某些商业软件的试用版会在文件名中包含试用期或功能限制的信息。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>trial30</code> 或 <code>trial60</code>：表示该版本有30天或60天的试用期</li>\n<li><code>limited</code>：有限制版，可能功能或时间受限</li>\n<li><code>demo</code>：演示版，通常只包含部分功能或限制使用时间</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_trial30_win64.exe</code></li>\n<li><strong>含义</strong>：这是带有30天试用期的版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"20-多合一安装包\"><a href=\"#20-多合一安装包\" class=\"headerlink\" title=\"20. 多合一安装包\"></a>20. <strong>多合一安装包</strong></h3><p>有些软件提供“多合一”安装包，允许用户在一个安装文件中选择不同的安装选项或版本。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>all-in-one</code>：多合一安装包，包含多个版本或功能模块</li>\n<li><code>combo</code>：组合安装包，通常包含主程序和附加组件</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_all-in-one_win64.exe</code></li>\n<li><strong>含义</strong>：这是一个多合一安装包，适用于64位Windows系统，可能包含多个模块或功能供选择安装。</li>\n</ul>\n<h3 id=\"21-源代码和构建信息\"><a href=\"#21-源代码和构建信息\" class=\"headerlink\" title=\"21. 源代码和构建信息\"></a>21. <strong>源代码和构建信息</strong></h3><p>某些开源软件的安装文件名中可能包含源代码的相关信息，供开发者自行构建或定制。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>src</code> 或 <code>source</code>：源代码</li>\n<li><code>build</code>：构建版本</li>\n<li><code>bin</code>：二进制文件，已编译可直接运行</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_src.tar.gz</code></li>\n<li><strong>含义</strong>：这是软件的源代码包，以Gzip压缩的Tar格式发布，适用于开发者。</li>\n</ul>\n<h3 id=\"22-安装程序或压缩包\"><a href=\"#22-安装程序或压缩包\" class=\"headerlink\" title=\"22. 安装程序或压缩包\"></a>22. <strong>安装程序或压缩包</strong></h3><p>文件名中还可能指明软件是通过安装程序直接安装，还是提供压缩包供手动解压和安装。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>installer</code>：安装程序，通常是带有图形化或命令行界面的安装文件</li>\n<li><code>portable</code>：便携版，无需安装，解压后即可运行</li>\n<li><code>archive</code>：压缩包，通常需要手动解压后安装或运行</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_portable_win64.zip</code></li>\n<li><strong>含义</strong>：这是适用于64位Windows系统的便携版软件，用户无需安装，解压后即可使用。</li>\n</ul>\n<h3 id=\"23-企业或个人版\"><a href=\"#23-企业或个人版\" class=\"headerlink\" title=\"23. 企业或个人版\"></a>23. <strong>企业或个人版</strong></h3><p>某些软件文件名中可能明确区分企业版和个人版，以帮助用户选择合适的版本。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>enterprise</code> 或 <code>business</code>：企业版，面向商业用户，通常包含更多管理或安全功能</li>\n<li><code>personal</code>：个人版，面向普通用户，功能较简化</li>\n<li><code>home</code>：家庭版，适合家庭用户使用</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_enterprise_win64.exe</code></li>\n<li><strong>含义</strong>：这是适用于企业用户的64位Windows系统版本。</li>\n</ul>\n<h3 id=\"24-特定用途的子版本\"><a href=\"#24-特定用途的子版本\" class=\"headerlink\" title=\"24. 特定用途的子版本\"></a>24. <strong>特定用途的子版本</strong></h3><p>软件可能根据不同用途或功能模块发布子版本，文件名中会包含对应的模块标识。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>server</code>：服务器版，适用于服务器环境</li>\n<li><code>client</code>：客户端版，适用于普通用户</li>\n<li><code>gui</code>：图形用户界面版本</li>\n<li><code>cli</code>：命令行版本</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_server_win64.exe</code></li>\n<li><strong>含义</strong>：这是软件的服务器版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"25-云服务或集成\"><a href=\"#25-云服务或集成\" class=\"headerlink\" title=\"25. 云服务或集成\"></a>25. <strong>云服务或集成</strong></h3><p>随着云计算的普及，某些安装包可能包含云端服务集成的信息，帮助用户了解该软件是否与云服务兼容或包含云功能。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>cloud</code>：与云服务集成，或为云环境设计的版本</li>\n<li><code>saas</code>：软件即服务（Software as a Service）版本</li>\n<li><code>hybrid</code>：混合云，支持本地和云服务的集成</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_cloud_win64.exe</code></li>\n<li><strong>含义</strong>：这是支持云服务集成的版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"26-模块化安装\"><a href=\"#26-模块化安装\" class=\"headerlink\" title=\"26. 模块化安装\"></a>26. <strong>模块化安装</strong></h3><p>某些软件会根据不同的功能模块或插件来区分不同的安装包，文件名中通常会有相应模块的标识符。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>core</code>：核心模块，必需的主功能</li>\n<li><code>plugin</code>：插件模块，扩展功能或第三方插件</li>\n<li><code>addon</code>：附加功能模块，通常用于增强主功能</li>\n<li><code>extension</code>：扩展功能，常用于浏览器或IDE</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_core_win64.exe</code></li>\n<li><strong>含义</strong>：这是软件的核心模块，适用于64位Windows系统，可能不包括其他可选功能或插件。</li>\n</ul>\n<h3 id=\"27-操作系统版本兼容性\"><a href=\"#27-操作系统版本兼容性\" class=\"headerlink\" title=\"27. 操作系统版本兼容性\"></a>27. <strong>操作系统版本兼容性</strong></h3><p>文件名中可能会包含针对特定操作系统版本的标识，特别是当某些软件只能在某些系统版本上运行时。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>xp</code>, <code>vista</code>, <code>7</code>, <code>8</code>, <code>10</code>, <code>11</code>：表示适用于特定版本的Windows操作系统</li>\n<li><code>ubuntu18.04</code>, <code>ubuntu20.04</code>：表示适用于特定版本的Ubuntu系统</li>\n<li><code>macos10.15</code>, <code>macos11</code>：表示适用于特定版本的macOS系统</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_win10_win64.exe</code></li>\n<li><strong>含义</strong>：这是适用于Windows 10系统的64位安装文件，可能不兼容其他Windows版本。</li>\n</ul>\n<h3 id=\"28-国际化和本地化\"><a href=\"#28-国际化和本地化\" class=\"headerlink\" title=\"28. 国际化和本地化\"></a>28. <strong>国际化和本地化</strong></h3><p>软件发布时，可能会根据不同国家和地区进行本地化调整，文件名中会包含国际化的标识符，以帮助用户选择适合自己语言和地区的版本。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>intl</code>：国际化版本，支持多种语言和地区</li>\n<li><code>us</code>：美国地区版本</li>\n<li><code>cn</code>, <code>zh-cn</code>：中国简体中文版本</li>\n<li><code>de</code>：德国版</li>\n<li><code>jp</code>：日本版</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_zh-cn_win64.exe</code></li>\n<li><strong>含义</strong>：这是简体中文版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"29-编译器或运行时兼容\"><a href=\"#29-编译器或运行时兼容\" class=\"headerlink\" title=\"29. 编译器或运行时兼容\"></a>29. <strong>编译器或运行时兼容</strong></h3><p>对于开发工具或软件开发包（SDK），安装文件名可能会包含与特定编译器或运行时环境的兼容性信息。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>gcc</code>：GNU编译器（通常用于Linux）</li>\n<li><code>msvc</code>：Microsoft Visual C++ 编译器（Windows）</li>\n<li><code>jdk</code>：Java开发工具包（JDK）</li>\n<li><code>dotnet</code>：.NET运行时环境</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_gcc_linux64.tar.gz</code></li>\n<li><strong>含义</strong>：这是用GCC编译的版本，适用于64位Linux系统。</li>\n</ul>\n<h3 id=\"30-虚拟机或容器支持\"><a href=\"#30-虚拟机或容器支持\" class=\"headerlink\" title=\"30. 虚拟机或容器支持\"></a>30. <strong>虚拟机或容器支持</strong></h3><p>安装文件可能包含与虚拟化或容器化环境兼容的信息，特别是在需要虚拟机镜像或容器映像的情况下。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>vm</code>：虚拟机镜像（如VirtualBox、VMware）</li>\n<li><code>docker</code>：Docker容器映像</li>\n<li><code>vagrant</code>：Vagrant虚拟机镜像</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_docker_image.tar</code></li>\n<li><strong>含义</strong>：这是Docker的容器镜像文件，通常用于容器化部署。</li>\n</ul>\n<h3 id=\"31-加密和安全机制\"><a href=\"#31-加密和安全机制\" class=\"headerlink\" title=\"31. 加密和安全机制\"></a>31. <strong>加密和安全机制</strong></h3><p>某些软件安装文件中会包含加密或安全机制的信息，特别是针对高度敏感的应用程序或企业环境。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>encrypted</code>：表示安装包已加密，需特定密钥或密码才能解压或安装</li>\n<li><code>fips</code>：符合FIPS（Federal Information Processing Standards）标准，适用于政府或安全要求较高的环境</li>\n<li><code>hsm</code>：硬件安全模块（Hardware Security Module）兼容</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_fips_win64.exe</code></li>\n<li><strong>含义</strong>：这是符合FIPS标准的版本，适用于需要高安全性的64位Windows系统。</li>\n</ul>\n<h3 id=\"32-数据库或数据存储支持\"><a href=\"#32-数据库或数据存储支持\" class=\"headerlink\" title=\"32. 数据库或数据存储支持\"></a>32. <strong>数据库或数据存储支持</strong></h3><p>某些软件文件名会指出其支持的数据库或数据存储解决方案，特别是在涉及数据库管理工具或与特定数据库整合的应用中。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>mysql</code>：支持MySQL数据库</li>\n<li><code>pgsql</code>：支持PostgreSQL数据库</li>\n<li><code>mongodb</code>：支持MongoDB数据库</li>\n<li><code>redis</code>：支持Redis数据库</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_mysql_win64.exe</code></li>\n<li><strong>含义</strong>：这是支持MySQL数据库的版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"33-API或协议支持\"><a href=\"#33-API或协议支持\" class=\"headerlink\" title=\"33. API或协议支持\"></a>33. <strong>API或协议支持</strong></h3><p>安装文件名中有时会提到软件支持的API或协议，特别是当软件依赖特定的网络协议或服务接口时。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>rest</code>：支持REST API</li>\n<li><code>grpc</code>：支持gRPC协议</li>\n<li><code>soap</code>：支持SOAP协议</li>\n<li><code>http2</code>：支持HTTP/2协议</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_rest_win64.exe</code></li>\n<li><strong>含义</strong>：这是支持REST API的版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"34-虚拟现实（VR）或增强现实（AR）支持\"><a href=\"#34-虚拟现实（VR）或增强现实（AR）支持\" class=\"headerlink\" title=\"34. 虚拟现实（VR）或增强现实（AR）支持\"></a>34. <strong>虚拟现实（VR）或增强现实（AR）支持</strong></h3><p>随着虚拟现实和增强现实技术的应用，一些安装文件可能包含与VR或AR兼容的信息。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>vr</code>：虚拟现实支持</li>\n<li><code>ar</code>：增强现实支持</li>\n<li><code>xr</code>：扩展现实（Extended Reality），包括VR和AR</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_vr_win64.exe</code></li>\n<li><strong>含义</strong>：这是支持虚拟现实的版本，适用于64位Windows系统。</li>\n</ul>\n<h3 id=\"35-物联网（IoT）支持\"><a href=\"#35-物联网（IoT）支持\" class=\"headerlink\" title=\"35. 物联网（IoT）支持\"></a>35. <strong>物联网（IoT）支持</strong></h3><p>随着物联网技术的普及，一些软件的安装文件名可能包含物联网相关的支持信息。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>iot</code>：物联网支持，适用于物联网设备</li>\n<li><code>edge</code>：边缘计算设备支持</li>\n<li><code>mqtt</code>：支持MQTT协议（常用于物联网）</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_iot_linux64.tar.gz</code></li>\n<li><strong>含义</strong>：这是支持物联网功能的版本，适用于64位Linux系统。</li>\n</ul>\n<h3 id=\"36-大数据平台兼容\"><a href=\"#36-大数据平台兼容\" class=\"headerlink\" title=\"36. 大数据平台兼容\"></a>36. <strong>大数据平台兼容</strong></h3><p>对于与大数据平台集成的软件，文件名中可能会包含特定平台的支持信息。</p>\n<ul>\n<li>常见标识符：<ul>\n<li><code>hadoop</code>：支持Hadoop平台</li>\n<li><code>spark</code>：支持Apache Spark</li>\n<li><code>hive</code>：支持Apache Hive</li>\n<li><code>kafka</code>：支持Apache Kafka</li>\n</ul>\n</li>\n<li><strong>示例</strong>：<code>software_1.0.0_hadoop_win64.exe</code></li>\n<li><strong>含义</strong>：这是支持Hadoop平台的版本，适用于64位Windows系统。</li>\n</ul>\n",
            "tags": [
                "教程"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/10/03/windows-xian-shi-yi-chang/",
            "url": "https://0xdadream.github.io/2024/10/03/windows-xian-shi-yi-chang/",
            "title": "windows显示异常",
            "date_published": "2024-10-03T01:25:00.000Z",
            "content_html": "<h1 id=\"windows显示异常\"><a href=\"#windows显示异常\" class=\"headerlink\" title=\"windows显示异常\"></a>windows显示异常</h1><p>windows中显示不完整，或者遮挡等不正常显示时，如下修改</p>\n<p>进入软件的exe执行文件，右键-&gt;属性-&gt;兼容性-&gt;更改所有用户的设置-&gt;更改高DPI设置-&gt;高DPI缩放替代-&gt;勾选替代高DPI的缩放行为指定系统，从上到下依次尝试</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/10/2c720759e87891d9b603f00411555832.png\"></p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/",
            "url": "https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/",
            "title": "zotero 7安装以及使用",
            "date_published": "2024-09-28T13:25:00.000Z",
            "content_html": "<h1 id=\"zotero-7安装以及使用\"><a href=\"#zotero-7安装以及使用\" class=\"headerlink\" title=\"zotero 7安装以及使用\"></a>zotero 7安装以及使用</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><strong>访问官网</strong>：<ul>\n<li>打开浏览器，访问 <a href=\"https://www.zotero.org/\">Zotero官网</a>。</li>\n</ul>\n</li>\n<li><strong>下载 Zotero</strong>：<ul>\n<li>点击页面上的“Download”按钮。</li>\n<li>根据你的操作系统选择相应的版本（Windows、macOS、Linux）。</li>\n</ul>\n</li>\n<li><strong>安装 Zotero</strong>：<ul>\n<li>Windows：<ul>\n<li>下载完成后，双击下载的 <code>.exe</code> 文件。</li>\n<li>按照提示进行安装，完成后在开始菜单中找到Zotero。</li>\n</ul>\n</li>\n<li>macOS：<ul>\n<li>下载 <code>.dmg</code> 文件后，双击打开。</li>\n<li>将Zotero图标拖动到“应用程序”文件夹中。</li>\n</ul>\n</li>\n<li>Linux：<ul>\n<li>根据你的发行版选择合适的安装方式（如使用包管理器或手动解压）。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"设置同步\"><a href=\"#设置同步\" class=\"headerlink\" title=\"设置同步\"></a>设置同步</h2><p><strong>创建 Zotero 账户</strong>：</p>\n<ul>\n<li>如果还没有账户，访问 <a href=\"https://www.zotero.org/\">Zotero官网</a> 并点击“注册”以创建一个新账户。填写所需信息并确认电子邮件。</li>\n</ul>\n<p><strong>进入首选项</strong>：</p>\n<ul>\n<li>点击菜单栏中的“编辑”（Windows）或“Zotero”（macOS）。</li>\n<li>选择“设置”以打开设置窗口。</li>\n</ul>\n<p><strong>设置同步</strong>：</p>\n<ul>\n<li>在设置窗口中，选择“同步”选项卡。</li>\n<li>在“账户”部分，输入你的 Zotero 账户邮箱和密码。</li>\n<li>点击“验证”以确保信息正确。</li>\n</ul>\n<p><strong>启用同步</strong>：</p>\n<ul>\n<li>勾选“自动同步”选项。这将允许 Zotero 在你添加或修改文献时自动进行同步。</li>\n</ul>\n<p><strong>手动同步</strong>：</p>\n<ul>\n<li>在 Zotero 界面的右上角，有一个绿色的同步图标（两个旋转的箭头）。点击它可以手动触发同步。</li>\n</ul>\n<h2 id=\"设置同步到坚果云\"><a href=\"#设置同步到坚果云\" class=\"headerlink\" title=\"设置同步到坚果云\"></a>设置同步到坚果云</h2><ul>\n<li>首先在坚果云里为Zotero设置应用密码，在坚果云官网登录你的坚果云账号后打开【账户信息】</li>\n</ul>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%BD%91%E9%A1%B5%E7%AB%AF%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF.png\" alt=\"账户信息\"></p>\n<ul>\n<li>选择【安全选项】-【添加应用密码】-输入名称-【生成密码】，这个密码就是后面会在zoteor里需要输入的专门的应用密码。</li>\n</ul>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%89%E5%85%A8%E9%80%89%E9%A1%B9-1.png\" alt=\"安全选项\"></p>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%94%9F%E6%88%90%E5%AF%86%E7%A0%81.png\" alt=\"密码\"></p>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%8C%E6%88%90%E5%AF%86%E7%A0%81.png\" alt=\"img\"></p>\n<ul>\n<li>打开Zotero，选择【工具】-【首选项】</li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg\" alt=\"QQ截图20170601102448\"></a></p>\n<ul>\n<li>打开【同步】，<strong>Zotero同步服务器</strong>里登录的是你的Zotero账号和密码，在下面的<strong>文件同步</strong>里选择使用【WebDav】</li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg\" alt=\"QQ截图20170601102548\"></a></p>\n<ul>\n<li>在这里填写你的坚果云的服务器地址：<a href=\"https://dav.jianguoyun.com/dav/%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D%E6%98%AF%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%AF%86%E7%A0%81%E6%98%AF%E4%B8%80%E5%BC%80%E5%A7%8B%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%EF%BC%88%E9%9D%9E%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%EF%BC%89%EF%BC%8C%E8%AE%BE%E7%BD%AE%E5%A5%BD%E5%90%8E%E9%80%89%E6%8B%A9ok%E5%8D%B3%E5%8F%AF%E3%80%82\">https://dav.jianguoyun.com/dav/，用户名是坚果云账号，密码是一开始设置的应用密码（非坚果云账号登录密码），设置好后选择ok即可。</a></li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg\" alt=\"QQ截图20170601103235\"></a></p>\n<ul>\n<li>回到首页，点击右边的绿色的圈就可以同步更新，如果是第一次设置，会提示在坚果云里自动创建一个名叫：zotero的文件夹，用于存放同步更新的文件。</li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg\" alt=\"QQ截图20170601141516\"></a></p>\n<h2 id=\"插件安装推荐\"><a href=\"#插件安装推荐\" class=\"headerlink\" title=\"插件安装推荐\"></a>插件安装推荐</h2><h3 id=\"zotero-style\"><a href=\"#zotero-style\" class=\"headerlink\" title=\"zotero-style\"></a>zotero-style</h3><p><a href=\"https://github.com/MuiseDestiny/zotero-style\">MuiseDestiny/zotero-style: Ethereal Style for Zotero (github.com)</a>这是一个多彩的插件，用于增强 Zotero 的界面功能</p>\n<h3 id=\"zotero-pdf-translate\"><a href=\"#zotero-pdf-translate\" class=\"headerlink\" title=\"zotero-pdf-translate\"></a>zotero-pdf-translate</h3><p><a href=\"https://github.com/windingwind/zotero-pdf-translate\">windingwind/zotero-pdf-translate: Translate PDF, EPub, webpage, metadata, annotations, notes to the target language. Support 20+ translate services. (github.com)</a>深度适配 Zotero 阅读器的翻译插件</p>\n<h3 id=\"jasminum\"><a href=\"#jasminum\" class=\"headerlink\" title=\"jasminum\"></a>jasminum</h3><p><a href=\"https://github.com/l0o0/jasminum\">l0o0/jasminum: A Zotero add-on to retrive CNKI meta data. 一个简单的Zotero 插件，用于识别中文元数据 (github.com)</a>这个插件用来增强 Zotero 对中文文献的支持能力，包括自动更新中文 translators、根据中文文献名检索其元数据等。</p>\n<h3 id=\"绿青蛙\"><a href=\"#绿青蛙\" class=\"headerlink\" title=\"绿青蛙\"></a>绿青蛙</h3><p><a href=\"https://github.com/redleafnew/zotero-updateifsE\">redleafnew/zotero-updateifsE: Green Frog https://github.com/redleafnew/zotero-updateifs 的easyScholar数据版。更新影响因子，其他一系列工具，详见Readme</a>easyScholar数据版，显示更多期刊信息，详细使用见链接</p>\n<h2 id=\"android下载\"><a href=\"#android下载\" class=\"headerlink\" title=\"android下载\"></a>android下载</h2><p><a href=\"https://zotero.cn.uptodown.com/android/download\">下载Zotero 1.0.0-102针对于Android | Uptodown.com</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://zotero-chinese.com/user-guide/\">Zotero 百科全书 | Zotero 中文社区 (zotero-chinese.com)</a></p>\n<p><a href=\"https://help.jianguoyun.com/?p=3168\">如何在Zotero中设置webdav连接到坚果云？ | 坚果云帮助中心 (jianguoyun.com)</a></p>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/09/28/word-cha-ru-ye-ma-bu-bao-gua-feng-mian-mu-lu/",
            "url": "https://0xdadream.github.io/2024/09/28/word-cha-ru-ye-ma-bu-bao-gua-feng-mian-mu-lu/",
            "title": "word插入页码不包括封面目录",
            "date_published": "2024-09-28T01:25:00.000Z",
            "content_html": "<h1 id=\"word插入页码不包括封面目录\"><a href=\"#word插入页码不包括封面目录\" class=\"headerlink\" title=\"word插入页码不包括封面目录\"></a>word插入页码不包括封面目录</h1><p>依次点击布局-&gt;分隔符-&gt;下一页</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/09/a0b6e41e8d3413096926bdd4b12714b8.png\"></p>\n<p>然后插入-&gt;页码-&gt;顶或底-&gt;随便一模版（插入时最后为正文首页）</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/09/79a5d330c3b43502e3abeba5cab7c086.png\"></p>\n<p>然后点击链接到前一页关闭它</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/09/24470b6e67ffdebaf3afad9d80eb854e.png\"></p>\n<p>然后设置页码格式</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/09/a9d2b79c6d838f63ac4cbdffcf59bacc.png\"></p>\n<p>如图，然后更新目录</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/09/b7693230771f988cd378852cd8d09011.png\"></p>\n",
            "tags": [
                "tips"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/",
            "url": "https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/",
            "title": "windows安装软件时中文乱码",
            "date_published": "2024-09-21T01:25:00.000Z",
            "content_html": "<h1 id=\"windows安装软件时中文乱码\"><a href=\"#windows安装软件时中文乱码\" class=\"headerlink\" title=\"windows安装软件时中文乱码\"></a>windows安装软件时中文乱码</h1><p>启动控制面板，将查看方式调整为 “大图标”。点击 “区域”&gt;“管理”&gt;“更改系统区域设置”，确认 “当前系统区域设置” 为中文 (简体，中国)，如果下方的复选框为勾选状态，请取消勾选。如果未勾选，请将复选框勾选。</p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/18/finalshell-gai-zi-ti/",
            "url": "https://0xdadream.github.io/2024/08/18/finalshell-gai-zi-ti/",
            "title": "finalshell改字体",
            "date_published": "2024-08-18T01:25:00.000Z",
            "content_html": "<h1 id=\"finalshell改字体\"><a href=\"#finalshell改字体\" class=\"headerlink\" title=\"finalshell改字体\"></a>finalshell改字体</h1><p>右上角点击选项-&gt;弹出对话框选择字体，点击就可修改了</p>\n",
            "tags": [
                "tips"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/",
            "url": "https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/",
            "title": "SDKMAN教程",
            "date_published": "2024-08-15T01:25:00.000Z",
            "content_html": "<h1 id=\"SDKMAN教程\"><a href=\"#SDKMAN教程\" class=\"headerlink\" title=\"SDKMAN教程\"></a>SDKMAN教程</h1><h3 id=\"1-安装-Git-Bash\"><a href=\"#1-安装-Git-Bash\" class=\"headerlink\" title=\"1. 安装 Git Bash\"></a>1. 安装 Git Bash</h3><p>首先，确保你已经安装了 Git Bash。如果还没有，可以从 <a href=\"https://gitforwindows.org/\">Git for Windows</a> 下载并安装。</p>\n<h3 id=\"2-使用-Git-Bash-安装-SDKMAN\"><a href=\"#2-使用-Git-Bash-安装-SDKMAN\" class=\"headerlink\" title=\"2. 使用 Git Bash 安装 SDKMAN!\"></a>2. 使用 Git Bash 安装 SDKMAN!</h3><h4 id=\"步骤-1-打开-Git-Bash\"><a href=\"#步骤-1-打开-Git-Bash\" class=\"headerlink\" title=\"步骤 1: 打开 Git Bash\"></a>步骤 1: 打开 Git Bash</h4><ul>\n<li>在 Windows 上，右键点击桌面或文件夹空白处，选择 <code>Git Bash Here</code>，打开 Git Bash 终端。</li>\n</ul>\n<h4 id=\"步骤-2-安装-SDKMAN\"><a href=\"#步骤-2-安装-SDKMAN\" class=\"headerlink\" title=\"步骤 2: 安装 SDKMAN!\"></a>步骤 2: 安装 SDKMAN!</h4><p>在 Git Bash 中执行以下命令来安装 SDKMAN!：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token string\">\"https://get.sdkman.io\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>安装完成后，执行以下命令加载 SDKMAN!：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.sdkman/bin/sdkman-init.sh\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"步骤-3-验证安装\"><a href=\"#步骤-3-验证安装\" class=\"headerlink\" title=\"步骤 3: 验证安装\"></a>步骤 3: 验证安装</h4><p>输入以下命令，确认 SDKMAN! 是否安装成功：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sdk version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"3-使用-SDKMAN-安装-Java\"><a href=\"#3-使用-SDKMAN-安装-Java\" class=\"headerlink\" title=\"3. 使用 SDKMAN! 安装 Java\"></a>3. 使用 SDKMAN! 安装 Java</h3><h4 id=\"安装-Java-版本\"><a href=\"#安装-Java-版本\" class=\"headerlink\" title=\"安装 Java 版本\"></a>安装 Java 版本</h4><p>你可以使用 SDKMAN! 安装你需要的 Java 版本，例如 Java 17：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sdk <span class=\"token function\">install</span> <span class=\"token function\">java</span> <span class=\"token number\">17.0</span>.0-tem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"设置默认-Java-版本\"><a href=\"#设置默认-Java-版本\" class=\"headerlink\" title=\"设置默认 Java 版本\"></a>设置默认 Java 版本</h4><p>安装完成后，将 Java 17 设置为默认版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sdk default <span class=\"token function\">java</span> <span class=\"token number\">17.0</span>.0-tem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"4-配置系统环境变量（全局可用）\"><a href=\"#4-配置系统环境变量（全局可用）\" class=\"headerlink\" title=\"4. 配置系统环境变量（全局可用）\"></a>4. 配置系统环境变量（全局可用）</h3><p>为了让其他 Shell（如 PowerShell、CMD）也能使用 SDKMAN! 安装的 Java，需要将 Java 的路径添加到系统环境变量中。</p>\n<h4 id=\"步骤-1-查找-Java-安装路径\"><a href=\"#步骤-1-查找-Java-安装路径\" class=\"headerlink\" title=\"步骤 1: 查找 Java 安装路径\"></a>步骤 1: 查找 Java 安装路径</h4><p>首先，找到 SDKMAN! 安装的 Java 版本路径。一般位于 <code>$HOME/.sdkman/candidates/java/current/bin</code>，具体路径可以通过以下命令在 Git Bash 中查看：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.sdkman/candidates/java/current/bin\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会输出类似于以下的路径：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/c/Users/YourUsername/.sdkman/candidates/java/current/bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"步骤-2-打开系统环境变量设置\"><a href=\"#步骤-2-打开系统环境变量设置\" class=\"headerlink\" title=\"步骤 2: 打开系统环境变量设置\"></a>步骤 2: 打开系统环境变量设置</h4><ol>\n<li>右键点击 “此电脑” 或 “计算机”，选择 “属性”。</li>\n<li>在左侧点击 “高级系统设置”。</li>\n<li>在弹出的窗口中，点击 “环境变量” 按钮。</li>\n</ol>\n<h4 id=\"步骤-3-添加-Java-路径到系统-PATH\"><a href=\"#步骤-3-添加-Java-路径到系统-PATH\" class=\"headerlink\" title=\"步骤 3: 添加 Java 路径到系统 PATH\"></a>步骤 3: 添加 Java 路径到系统 <code>PATH</code></h4><ol>\n<li><p>在系统变量下，找到 <code>Path</code> 变量并点击 “编辑”。</p>\n</li>\n<li><p>点击 “新建”，并添加以下路径：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>YourUsername<span class=\"token punctuation\">\\</span>.sdkman<span class=\"token punctuation\">\\</span>candidates<span class=\"token punctuation\">\\</span>java<span class=\"token punctuation\">\\</span>current<span class=\"token punctuation\">\\</span>bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>点击 “确定” 关闭所有窗口。</p>\n</li>\n</ol>\n<h3 id=\"5-验证配置\"><a href=\"#5-验证配置\" class=\"headerlink\" title=\"5. 验证配置\"></a>5. 验证配置</h3><p>关闭所有打开的终端，然后重新打开 CMD、PowerShell 或其他终端，输入以下命令，确认 Java 版本是否正确配置：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">java</span> <span class=\"token parameter variable\">-version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果看到安装的 Java 版本信息，说明配置成功。</p>\n",
            "tags": [
                "教程"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/15/java-ban-ben/",
            "url": "https://0xdadream.github.io/2024/08/15/java-ban-ben/",
            "title": "Java版本",
            "date_published": "2024-08-14T18:25:00.000Z",
            "content_html": "<h1 id=\"Java版本\"><a href=\"#Java版本\" class=\"headerlink\" title=\"Java版本\"></a>Java版本</h1><p>理解 Java 的版本号、JDK（Java Development Kit），以及相关的概念。下面是对这些概念的详细解释，以及它们之间的区别和作用。</p>\n<h2 id=\"1-Java-版本号\"><a href=\"#1-Java-版本号\" class=\"headerlink\" title=\"1. Java 版本号\"></a>1. Java 版本号</h2><p>Java 版本号标识了 Java 语言和平台的特定版本，每个版本都引入了新的特性、改进和修复。Java 版本号的格式通常是 **<code>&lt;主版本&gt;.&lt;次版本&gt;.&lt;更新版本&gt;</code>**。</p>\n<h4 id=\"版本号的构成\"><a href=\"#版本号的构成\" class=\"headerlink\" title=\"版本号的构成\"></a>版本号的构成</h4><ul>\n<li><strong>主版本</strong>:<ul>\n<li>标识大的版本更新。主版本通常代表语言、平台或 API 级别的重大变化。例如，Java 8、Java 11、Java 17 等都是主版本。</li>\n<li>Java 版本号从 1.x 系列（如 1.0、1.2、1.4、1.5）过渡到直接使用主版本号（如 8、11、17），1.5 对应的是 Java 5。</li>\n</ul>\n</li>\n<li><strong>次版本</strong>:<ul>\n<li>次版本通常是更细粒度的更新，可能引入一些小的特性、性能改进或者 API 变化。</li>\n</ul>\n</li>\n<li><strong>更新版本</strong>:<ul>\n<li>更新版本通常是针对安全性和漏洞修复的补丁版本。例如，Java 11.0.2 代表 Java 11 的第二次更新。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-JDK（Java-Development-Kit）\"><a href=\"#2-JDK（Java-Development-Kit）\" class=\"headerlink\" title=\"2. JDK（Java Development Kit）\"></a>2. JDK（Java Development Kit）</h2><p><strong>JDK</strong> 是开发 Java 应用程序的工具包，它包含了一系列工具、库和编译器，用于开发、编译、调试和运行 Java 应用程序。JDK 是 Java 的核心组件之一，也是每个 Java 开发者必须安装的工具。</p>\n<h4 id=\"JDK-的主要组成部分\"><a href=\"#JDK-的主要组成部分\" class=\"headerlink\" title=\"JDK 的主要组成部分\"></a>JDK 的主要组成部分</h4><ul>\n<li><strong>Java 编译器 (<code>javac</code>)</strong>:<ul>\n<li>编译 Java 源代码（<code>.java</code> 文件）为字节码（<code>.class</code> 文件）。</li>\n</ul>\n</li>\n<li><strong>Java 虚拟机 (<code>java</code>)</strong>:<ul>\n<li>执行编译后的字节码，使得 Java 应用程序可以跨平台运行。</li>\n</ul>\n</li>\n<li><strong>标准类库</strong>:<ul>\n<li>包含 Java API 提供的标准类库，如集合框架、I/O 操作、网络编程等。</li>\n</ul>\n</li>\n<li><strong>开发工具</strong>:<ul>\n<li>包括调试工具（<code>jdb</code>）、文档生成工具（<code>javadoc</code>）、打包工具（<code>jar</code>）等。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-JDK-与-JRE-的区别\"><a href=\"#3-JDK-与-JRE-的区别\" class=\"headerlink\" title=\"3. JDK 与 JRE 的区别\"></a>3. JDK 与 JRE 的区别</h2><p><strong>JRE</strong>（Java Runtime Environment）是 Java 运行环境，它是 JDK 的一个子集，包含 JVM 和标准类库，用于运行 Java 应用程序，但不包括编译器和开发工具。</p>\n<ul>\n<li><strong>JDK</strong>:<ul>\n<li>包含 JRE，用于开发和运行 Java 应用程序。</li>\n<li>适用于开发者。</li>\n</ul>\n</li>\n<li><strong>JRE</strong>:<ul>\n<li>仅用于运行 Java 应用程序。</li>\n<li>适用于最终用户或运行环境。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-Java-SE-Java-EE-Java-ME-的区别\"><a href=\"#4-Java-SE-Java-EE-Java-ME-的区别\" class=\"headerlink\" title=\"4. Java SE, Java EE, Java ME 的区别\"></a>4. Java SE, Java EE, Java ME 的区别</h2><ul>\n<li><strong>Java SE (Standard Edition)</strong>:<ul>\n<li>Java 标准版，包含了开发常规桌面和服务器应用程序所需的基础功能。大多数 Java 开发者都使用 Java SE。</li>\n</ul>\n</li>\n<li><strong>Java EE (Enterprise Edition)</strong>:<ul>\n<li>Java 企业版，基于 Java SE，添加了用于开发大规模分布式企业应用的额外功能，如 Web 服务、企业 JavaBeans (EJB)、Servlets、JSP 等。</li>\n</ul>\n</li>\n<li><strong>Java ME (Micro Edition)</strong>:<ul>\n<li>Java 微型版，专为嵌入式设备、移动设备和小型设备设计，包含适应这些设备的特定功能。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-版本区别与用途\"><a href=\"#5-版本区别与用途\" class=\"headerlink\" title=\"5. 版本区别与用途\"></a>5. 版本区别与用途</h2><p>每个 Java 版本都会引入新的特性和改进，因此理解不同版本的区别对选择合适的开发环境非常重要。</p>\n<ul>\n<li><strong>Java 8 (LTS)</strong>:<ul>\n<li>被广泛使用的 LTS 版本，引入了 Lambda 表达式、Stream API、默认方法等关键特性。</li>\n</ul>\n</li>\n<li><strong>Java 11 (LTS)</strong>:<ul>\n<li>继 Java 8 之后的另一个 LTS 版本，引入了新的 HTTP Client API、局部变量类型推断 (<code>var</code>) 等。</li>\n</ul>\n</li>\n<li><strong>Java 17 (LTS)</strong>:<ul>\n<li>最新的 LTS 版本，包含了大量的新特性和改进，如封闭类、增强的 Switch 表达式等。</li>\n</ul>\n</li>\n<li><strong>非 LTS 版本</strong>:<ul>\n<li>这些版本在发布后的短期内得到支持，主要用于引入和测试新特性。如 Java 9、10、12、13 等。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-常见的-JDK-实现及其特点\"><a href=\"#6-常见的-JDK-实现及其特点\" class=\"headerlink\" title=\"6. 常见的 JDK 实现及其特点\"></a>6. 常见的 JDK 实现及其特点</h2><h3 id=\"1-Oracle-JDK\"><a href=\"#1-Oracle-JDK\" class=\"headerlink\" title=\"1. Oracle JDK\"></a>1. <strong>Oracle JDK</strong></h3><ul>\n<li><strong>Oracle JDK</strong> 是 Oracle 公司官方发布的 Java 开发工具包，是 Java SE（Standard Edition）的参考实现。</li>\n<li>特点:<ul>\n<li>商业版（从 JDK 11 开始），需要商业许可证用于生产环境，但开发和测试用途免费。</li>\n<li>定期更新和安全修补。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>LTS（长期支持）版本：8、11、17 等。</li>\n<li>非 LTS 版本：12、13、14、15、16、18、19 等。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-OpenJDK\"><a href=\"#2-OpenJDK\" class=\"headerlink\" title=\"2. OpenJDK\"></a>2. <strong>OpenJDK</strong></h3><ul>\n<li><strong>OpenJDK</strong> 是一个开源的 JDK 实现，由 Oracle 和其他社区成员共同维护，是 Oracle JDK 的基础。</li>\n<li>特点:<ul>\n<li>开源且免费使用。</li>\n<li>与 Oracle JDK 基本相同，但可能缺少一些商业特性。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>和 Oracle JDK 同步的版本：8、11、17 等。</li>\n<li>提供最新的非 LTS 版本。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-Adoptium-Eclipse-Temurin\"><a href=\"#3-Adoptium-Eclipse-Temurin\" class=\"headerlink\" title=\"3. Adoptium (Eclipse Temurin)\"></a>3. <strong>Adoptium (Eclipse Temurin)</strong></h3><ul>\n<li><strong>Adoptium</strong> 前身为 AdoptOpenJDK，现在由 Eclipse 基金会管理。</li>\n<li>特点:<ul>\n<li>社区驱动的开源 JDK 发行版。</li>\n<li>提供高质量的二进制构建，适用于不同平台。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>支持 LTS 版本：8、11、17 等。</li>\n<li>提供非 LTS 版本。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-Amazon-Corretto\"><a href=\"#4-Amazon-Corretto\" class=\"headerlink\" title=\"4. Amazon Corretto\"></a>4. <strong>Amazon Corretto</strong></h3><ul>\n<li><strong>Amazon Corretto</strong> 是由亚马逊发布的免费、开源的 JDK 发行版。</li>\n<li>特点:<ul>\n<li>亚马逊维护，包含长时间的支持和性能改进。</li>\n<li>完全兼容 OpenJDK。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>提供 LTS 版本：8、11、17 等。</li>\n<li>提供非 LTS 版本。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-Azul-Zulu\"><a href=\"#5-Azul-Zulu\" class=\"headerlink\" title=\"5. Azul Zulu\"></a>5. <strong>Azul Zulu</strong></h3><ul>\n<li><strong>Azul Zulu</strong> 是由 Azul 公司发布的一个商业支持的 OpenJDK 发行版。</li>\n<li>特点:<ul>\n<li>商业支持，适用于企业环境。</li>\n<li>提供与不同平台兼容的版本，包括 Windows、Linux、macOS 和嵌入式系统。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>支持 LTS 版本：8、11、17 等。</li>\n<li>提供非 LTS 版本。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-GraalVM\"><a href=\"#6-GraalVM\" class=\"headerlink\" title=\"6. GraalVM\"></a>6. <strong>GraalVM</strong></h3><ul>\n<li><strong>GraalVM</strong> 是 Oracle 提供的一个高性能、可扩展的 Java 虚拟机，它也是一个多语言开发环境。</li>\n<li>特点:<ul>\n<li>支持多语言运行时，包括 Java、JavaScript、Python、Ruby 等。</li>\n<li>提供本机映像生成（Native Image）功能。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>基于 OpenJDK 构建，版本与 OpenJDK 保持一致。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-Red-Hat-OpenJDK\"><a href=\"#7-Red-Hat-OpenJDK\" class=\"headerlink\" title=\"7. Red Hat OpenJDK\"></a>7. <strong>Red Hat OpenJDK</strong></h3><ul>\n<li><strong>Red Hat OpenJDK</strong> 是由 Red Hat 提供的 OpenJDK 构建，主要针对企业级应用。</li>\n<li>特点:<ul>\n<li>提供商业支持和长期支持。</li>\n<li>常用于 Red Hat Enterprise Linux（RHEL）环境中。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>支持 LTS 版本：8、11、17 等。</li>\n<li>提供非 LTS 版本。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-SAP-Machine\"><a href=\"#8-SAP-Machine\" class=\"headerlink\" title=\"8. SAP Machine\"></a>8. <strong>SAP Machine</strong></h3><ul>\n<li><strong>SAP Machine</strong> 是 SAP 发布的 OpenJDK 发行版。</li>\n<li>特点:<ul>\n<li>用于 SAP 产品和客户的支持环境。</li>\n<li>完全开源，兼容 OpenJDK。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>支持 LTS 版本：8、11、17 等。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-Liberica-JDK\"><a href=\"#9-Liberica-JDK\" class=\"headerlink\" title=\"9. Liberica JDK\"></a>9. <strong>Liberica JDK</strong></h3><ul>\n<li><strong>Liberica JDK</strong> 是由 BellSoft 发布的 OpenJDK 发行版。</li>\n<li>特点:<ul>\n<li>提供全功能 JDK，包括完整的 JavaFX 支持。</li>\n<li>提供不同平台和操作系统的兼容版本。</li>\n</ul>\n</li>\n<li>版本:<ul>\n<li>支持 LTS 版本：8、11、17 等。</li>\n<li>提供非 LTS 版本。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"7-SDK-Software-Development-Kit\"><a href=\"#7-SDK-Software-Development-Kit\" class=\"headerlink\" title=\"7. SDK (Software Development Kit)\"></a>7. SDK (Software Development Kit)</h2><p><strong>SDK</strong> 是软件开发工具包（Software Development Kit）的缩写。它通常包括了一组开发工具、库、示例代码、文档和其他资源，帮助开发者构建应用程序。对于 JVM 生态系统中的 SDK，最常见的例子是 Java 开发工具包（<strong>JDK</strong>，Java Development Kit）。</p>\n<ul>\n<li>JDK: JDK 是 Java 的官方 SDK，包含了开发 Java 应用程序所需的所有工具和库。JDK 中主要包括：<ul>\n<li><strong>Java 编译器（javac）</strong>: 用于将 Java 源代码编译成字节码（.class 文件）。</li>\n<li><strong>Java 运行时环境（JRE）</strong>: 包含 JVM 和标准 Java 类库，负责运行 Java 应用程序。</li>\n<li><strong>其他工具</strong>: 如 <code>javadoc</code>（生成文档的工具）、<code>jdb</code>（Java 调试器）等。</li>\n</ul>\n</li>\n</ul>\n<p>除了 JDK，其他 JVM 语言（如 Scala、Kotlin）也有自己的 SDK，这些 SDK 提供了用于编译、运行和调试这些语言的工具。</p>\n<h2 id=\"8-JVM-工具\"><a href=\"#8-JVM-工具\" class=\"headerlink\" title=\"8. JVM 工具\"></a>8. JVM 工具</h2><p><strong>JVM 工具</strong> 是指那些用于开发、管理和优化基于 JVM 的应用程序的工具。这些工具帮助开发者在 JVM 上构建和管理应用程序，包括编译、运行、调试、打包、依赖管理等方面。</p>\n<ul>\n<li><p><strong>JVM</strong> 是 Java 程序的运行环境。Java 代码在编译器的帮助下转化为字节码，这些字节码由 JVM 来执行。JVM 为不同的操作系统提供了统一的运行环境。</p>\n</li>\n<li><p>Java 程序跨平台性的实现依赖于 JVM。Java 编译器将源代码编译成与平台无关的字节码，JVM 则负责在不同平台上将字节码解释成机器码并执行。因此，只要平台有适配的 JVM，Java 程序就可以在上面运行，无需修改代码。</p>\n</li>\n<li><p>虽然 JVM 是为 Java 设计的，但由于它的通用性，其他语言（如 Scala、Kotlin、Groovy 等）也可以编译为 JVM 字节码，并在 JVM 上运行。因此，JVM 并不局限于 Java 语言，它已经发展为支持多种语言的强大平台。</p>\n</li>\n</ul>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/12/windows-chuang-jian-wen-jian/",
            "url": "https://0xdadream.github.io/2024/08/12/windows-chuang-jian-wen-jian/",
            "title": "windows创建文件",
            "date_published": "2024-08-11T19:25:00.000Z",
            "content_html": "<h1 id=\"windows创建文件\"><a href=\"#windows创建文件\" class=\"headerlink\" title=\"windows创建文件\"></a>windows创建文件</h1><h3 id=\"1-使用-echo-命令\"><a href=\"#1-使用-echo-命令\" class=\"headerlink\" title=\"1. 使用 echo 命令\"></a>1. 使用 <code>echo</code> 命令</h3><p>你可以使用 <code>echo</code> 命令将内容写入一个新的文件中：</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">echo 文件内容 &gt; 文件名.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果文件已经存在，这个命令会覆盖原来的内容。</p>\n<h3 id=\"2-使用-type-nul-命令\"><a href=\"#2-使用-type-nul-命令\" class=\"headerlink\" title=\"2. 使用 type nul 命令\"></a>2. 使用 <code>type nul</code> 命令</h3><p>这个命令可以创建一个空文件：</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">type nul &gt; 文件名.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"3-使用-copy-con-命令\"><a href=\"#3-使用-copy-con-命令\" class=\"headerlink\" title=\"3. 使用 copy con 命令\"></a>3. 使用 <code>copy con</code> 命令</h3><p><code>copy con</code> 可以创建文件并直接输入内容：</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">copy con 文件名.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输入完内容后，按 <code>Ctrl + Z</code> 然后回车保存并退出。</p>\n<h3 id=\"4-使用-fsutil-命令\"><a href=\"#4-使用-fsutil-命令\" class=\"headerlink\" title=\"4. 使用 fsutil 命令\"></a>4. 使用 <code>fsutil</code> 命令</h3><p><code>fsutil</code> 可以创建指定大小的文件（以字节为单位）：</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">fsutil file createnew 文件名.txt 文件大小（以字节为单位）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"5-使用-PowerShell-的-New-Item-cmdlet\"><a href=\"#5-使用-PowerShell-的-New-Item-cmdlet\" class=\"headerlink\" title=\"5. 使用 PowerShell 的 New-Item cmdlet\"></a>5. 使用 PowerShell 的 <code>New-Item</code> cmdlet</h3><p>在PowerShell中，你可以使用 <code>New-Item</code> 来创建文件：</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">New-Item -Path .\\文件名.txt -ItemType File<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>",
            "tags": [
                "windows"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/",
            "url": "https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/",
            "title": "conda安装及使用",
            "date_published": "2024-08-11T17:25:00.000Z",
            "content_html": "<h1 id=\"conda安装及使用\"><a href=\"#conda安装及使用\" class=\"headerlink\" title=\"conda安装及使用\"></a>conda安装及使用</h1><h3 id=\"Conda-的安装\"><a href=\"#Conda-的安装\" class=\"headerlink\" title=\"Conda 的安装\"></a>Conda 的安装</h3><h4 id=\"1-使用-Anaconda-安装\"><a href=\"#1-使用-Anaconda-安装\" class=\"headerlink\" title=\"1. 使用 Anaconda 安装\"></a>1. 使用 Anaconda 安装</h4><ul>\n<li><strong>Anaconda</strong> 是一个包含了 Python 和众多常用库（如 NumPy、Pandas、SciPy、Jupyter Notebook 等）的数据科学平台。它自带 <code>conda</code>，适合需要完整数据科学工具包的用户。</li>\n</ul>\n<h4 id=\"2-使用-Miniconda-安装\"><a href=\"#2-使用-Miniconda-安装\" class=\"headerlink\" title=\"2. 使用 Miniconda 安装\"></a>2. 使用 Miniconda 安装</h4><ul>\n<li><strong>Miniconda</strong> 是一个轻量级安装包，只包含 <code>conda</code> 和 Python，适合那些希望灵活选择并安装所需包的用户。</li>\n</ul>\n<h5 id=\"安装步骤：\"><a href=\"#安装步骤：\" class=\"headerlink\" title=\"安装步骤：\"></a>安装步骤：</h5><ol>\n<li><p><strong>下载 Miniconda 安装程序</strong></p>\n<ul>\n<li>访问 Miniconda 下载页面。</li>\n<li>选择适合你操作系统的版本（Windows、macOS、Linux）并下载。</li>\n</ul>\n</li>\n<li><p><strong>安装 Miniconda</strong></p>\n<ul>\n<li><p><strong>Windows</strong>：双击下载的 <code>.exe</code> 文件并按照提示安装。</p>\n</li>\n<li><p>macOS/Linux</p>\n<p>：在终端中运行下载的 .sh文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> Miniconda3-latest-MacOSX-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> Miniconda3-latest-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>添加环境变量</p>\n<p>如果你在安装时未勾选添加 <code>conda</code> 到 <code>PATH</code> 环境变量，或者想手动添加，可以按照以下步骤进行：</p>\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><ol>\n<li><p><strong>打开环境变量设置：</strong></p>\n<ul>\n<li>右键点击“此电脑”或“我的电脑”，选择“属性”。</li>\n<li>点击“高级系统设置”。</li>\n<li>在“系统属性”窗口中，点击“环境变量”。</li>\n</ul>\n</li>\n<li><p><strong>编辑 <code>PATH</code> 变量：</strong></p>\n<ul>\n<li><p>在“系统变量”或“用户变量”部分，找到并选中 <code>Path</code> 变量，点击“编辑”。</p>\n</li>\n<li><p>点击“新建”，添加 Anaconda 或 Miniconda 的安装路径。例如：</p>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\"><span class=\"token target symbol\">C</span><span class=\"token punctuation\">:</span>\\Users\\YourUsername\\Anaconda3\n<span class=\"token target symbol\">C</span><span class=\"token punctuation\">:</span>\\Users\\YourUsername\\Anaconda3\\Scripts\n<span class=\"token target symbol\">C</span><span class=\"token punctuation\">:</span>\\Users\\YourUsername\\Anaconda3\\Library\\bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>保存并退出设置。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>验证配置：</strong></p>\n<ul>\n<li><p>打开命令提示符，运行 conda验证是否可用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n<h4 id=\"macOS-和-Linux\"><a href=\"#macOS-和-Linux\" class=\"headerlink\" title=\"macOS 和 Linux\"></a>macOS 和 Linux</h4><ol>\n<li><p><strong>编辑 Shell 配置文件：</strong></p>\n<ul>\n<li><p>打开终端，编辑你的 shell 配置文件（如 <code>.bashrc</code>, <code>.zshrc</code>, <code>.bash_profile</code> 等）。</p>\n</li>\n<li><p>添加以下行到文件末尾：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/miniconda3/bin:<span class=\"token environment constant\">$PATH</span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果安装的是 Anaconda，将路径替换为 Anaconda 的安装路径。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>刷新配置文件：</strong></p>\n<ul>\n<li><p>保存文件后，运行以下命令使更改生效：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.bashrc  <span class=\"token comment\"># 或者 `source ~/.zshrc`，具体取决于你使用的 shell</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p><strong>验证配置：</strong></p>\n<ul>\n<li><p>在终端运行 conda 验证是否可用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p><strong>初始化 conda</strong></p>\n<ul>\n<li><p>安装完成后，运行以下命令初始化 conda：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>重新启动终端，以确保初始化生效。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Conda-的使用\"><a href=\"#Conda-的使用\" class=\"headerlink\" title=\"Conda 的使用\"></a>Conda 的使用</h3><h4 id=\"1-验证安装\"><a href=\"#1-验证安装\" class=\"headerlink\" title=\"1. 验证安装\"></a>1. 验证安装</h4><p>在终端或命令提示符中运行以下命令，查看 conda 是否安装成功：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>你应该看到类似 <code>conda 4.x.x</code> 的输出，表明 conda 已成功安装。</p>\n<h4 id=\"2-更新-Conda\"><a href=\"#2-更新-Conda\" class=\"headerlink\" title=\"2. 更新 Conda\"></a>2. 更新 Conda</h4><p>安装后，建议将 conda 更新到最新版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda update conda<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"3-创建新环境\"><a href=\"#3-创建新环境\" class=\"headerlink\" title=\"3. 创建新环境\"></a>3. 创建新环境</h4><p>使用以下命令创建一个新的 Python 环境（例如 <code>myenv</code>），并指定 Python 版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda create <span class=\"token parameter variable\">-n</span> myenv <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将创建一个名为 <code>myenv</code> 的新环境并安装 Python 3.9。</p>\n<h4 id=\"4-激活环境\"><a href=\"#4-激活环境\" class=\"headerlink\" title=\"4. 激活环境\"></a>4. 激活环境</h4><p>创建环境后，使用以下命令激活它：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda activate myenv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>激活环境后，命令提示符前缀将会显示当前激活的环境名称。</p>\n<h4 id=\"5-安装包\"><a href=\"#5-安装包\" class=\"headerlink\" title=\"5. 安装包\"></a>5. 安装包</h4><p>在激活的环境中，使用以下命令安装所需包（例如 NumPy）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> numpy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>Conda 会自动处理包的依赖关系，并为你安装所有必要的依赖。</p>\n<h4 id=\"6-列出已安装的包\"><a href=\"#6-列出已安装的包\" class=\"headerlink\" title=\"6. 列出已安装的包\"></a>6. 列出已安装的包</h4><p>使用以下命令查看当前环境中已安装的所有包：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"7-更新包\"><a href=\"#7-更新包\" class=\"headerlink\" title=\"7. 更新包\"></a>7. 更新包</h4><p>使用以下命令更新特定包（例如 NumPy）到最新版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda update numpy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"8-删除包\"><a href=\"#8-删除包\" class=\"headerlink\" title=\"8. 删除包\"></a>8. 删除包</h4><p>若不再需要某个包，可以使用以下命令将其删除：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda remove numpy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"9-列出所有环境\"><a href=\"#9-列出所有环境\" class=\"headerlink\" title=\"9. 列出所有环境\"></a>9. 列出所有环境</h4><p>使用以下命令查看你创建的所有环境：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">env</span> list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"10-删除环境\"><a href=\"#10-删除环境\" class=\"headerlink\" title=\"10. 删除环境\"></a>10. 删除环境</h4><p>若不再需要某个环境，可以使用以下命令删除它：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">bconda remove <span class=\"token parameter variable\">-n</span> myenv <span class=\"token parameter variable\">--all</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"11-添加pycharm可执行文件\"><a href=\"#11-添加pycharm可执行文件\" class=\"headerlink\" title=\"11.添加pycharm可执行文件\"></a>11.添加pycharm可执行文件</h4><p>在设置/首选项窗口中，选择左侧的 <code>Project: 你的项目名</code> &gt; <code>Python Interpreter（解释器）</code>，在Python Interpreter页面，点击右侧的添加解释器，选择 添加本地解释器，在弹出的窗口中，选择 <code>Conda Environment</code>，可执行文件若为空，复制<code>conda\\condabin\\conda.bat</code>文件的目录到框里就，在加载</p>\n",
            "tags": [
                "环境"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/",
            "url": "https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/",
            "title": "软链接和硬链接",
            "date_published": "2024-08-10T02:25:00.000Z",
            "content_html": "<h1 id=\"软链接和硬链接\"><a href=\"#软链接和硬链接\" class=\"headerlink\" title=\"软链接和硬链接\"></a>软链接和硬链接</h1><p>在Linux和Unix系统中，<strong>软链接</strong>（符号链接，symbolic link，简称<code>symlink</code>）和<strong>硬链接</strong>（hard link）是两种用于指向文件或目录的方式。它们有不同的用途和行为。</p>\n<h2 id=\"1-软链接（Symbolic-Link）\"><a href=\"#1-软链接（Symbolic-Link）\" class=\"headerlink\" title=\"1. 软链接（Symbolic Link）\"></a>1. 软链接（Symbolic Link）</h2><p>软链接类似于Windows中的快捷方式，它是一个指向另一个文件或目录的指针。创建软链接后，这个链接文件本身并不包含目标文件的数据，而是包含目标文件的路径。</p>\n<h4 id=\"特性：\"><a href=\"#特性：\" class=\"headerlink\" title=\"特性：\"></a>特性：</h4><ul>\n<li><strong>指向目标文件的路径</strong>：软链接文件仅存储目标文件的路径，而不是文件内容。</li>\n<li><strong>跨文件系统</strong>：软链接可以指向不同文件系统中的文件或目录。</li>\n<li><strong>链断裂问题</strong>：如果目标文件被删除或移动，软链接将失效，成为“断链”。</li>\n<li><strong>文件大小</strong>：软链接的大小是指向目标文件路径的长度。</li>\n</ul>\n<h4 id=\"创建软链接\"><a href=\"#创建软链接\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h4><p>要创建一个软链接，你可以使用<code>ln -s</code>命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /path/to/target /path/to/symlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /home/user/original_file.txt /home/user/shortcut_to_file.txt <span class=\"token comment\"># 也可以是目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将创建一个名为<code>shortcut_to_file.txt</code>的软链接，指向<code>/home/user/original_file.txt</code>。</p>\n<h4 id=\"查看软链接\"><a href=\"#查看软链接\" class=\"headerlink\" title=\"查看软链接\"></a>查看软链接</h4><p>使用<code>ls -l</code>命令可以查看软链接的详细信息。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /path/to/symlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /home/user/shortcut_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lrwxrwxrwx <span class=\"token number\">1</span> user user <span class=\"token number\">21</span> Aug <span class=\"token number\">12</span> <span class=\"token number\">12</span>:00 /home/user/shortcut_to_file.txt -<span class=\"token operator\">&gt;</span> /home/user/original_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>l</code>表示这是一个软链接，箭头<code>-&gt;</code>后面是目标路径。</p>\n<h4 id=\"删除软链接\"><a href=\"#删除软链接\" class=\"headerlink\" title=\"删除软链接\"></a>删除软链接</h4><p>使用<code>rm</code>命令删除软链接。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /path/to/symlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /home/user/shortcut_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将删除软链接，但不会影响目标文件。</p>\n<h2 id=\"2-硬链接（Hard-Link）\"><a href=\"#2-硬链接（Hard-Link）\" class=\"headerlink\" title=\"2. 硬链接（Hard Link）\"></a>2. 硬链接（Hard Link）</h2><p>硬链接是文件系统中的一个目录条目，它指向文件的实际数据块。与软链接不同，硬链接不是指向路径，而是指向数据块。因此，硬链接和原始文件共享相同的数据块。</p>\n<h4 id=\"特性：-1\"><a href=\"#特性：-1\" class=\"headerlink\" title=\"特性：\"></a>特性：</h4><ul>\n<li><strong>指向数据块</strong>：硬链接指向文件的实际数据块，而不是路径。</li>\n<li><strong>共享文件数据</strong>：硬链接和原始文件共享相同的数据块，因此它们内容完全相同，且修改一个文件内容会同时更新硬链接的内容。</li>\n<li><strong>不可跨文件系统</strong>：硬链接必须在同一文件系统内。</li>\n<li><strong>删除影响</strong>：删除一个硬链接不会影响文件的实际数据，只有当所有指向数据块的硬链接都删除后，文件的数据才会被删除。</li>\n</ul>\n<h4 id=\"创建硬链接\"><a href=\"#创建硬链接\" class=\"headerlink\" title=\"创建硬链接\"></a>创建硬链接</h4><p>要创建一个硬链接，你可以使用<code>ln</code>命令（不带<code>-s</code>选项）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> /path/to/target /path/to/hardlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> /home/user/original_file.txt /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将创建一个名为<code>hardlink_to_file.txt</code>的硬链接，指向<code>/home/user/original_file.txt</code>的数据块。</p>\n<h4 id=\"查看硬链接\"><a href=\"#查看硬链接\" class=\"headerlink\" title=\"查看硬链接\"></a>查看硬链接</h4><p>使用<code>ls -li</code>命令可以查看文件的inode号，硬链接共享相同的inode号。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-li</span> /path/to/target /path/to/hardlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-li</span> /home/user/original_file.txt /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1234567</span> -rw-r--r-- <span class=\"token number\">2</span> user user <span class=\"token number\">1024</span> Aug <span class=\"token number\">12</span> <span class=\"token number\">12</span>:00 /home/user/original_file.txt\n<span class=\"token number\">1234567</span> -rw-r--r-- <span class=\"token number\">2</span> user user <span class=\"token number\">1024</span> Aug <span class=\"token number\">12</span> <span class=\"token number\">12</span>:00 /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>两个文件共享相同的inode号（<code>1234567</code>），说明它们是硬链接。</p>\n<h4 id=\"删除硬链接\"><a href=\"#删除硬链接\" class=\"headerlink\" title=\"删除硬链接\"></a>删除硬链接</h4><p>使用<code>rm</code>命令删除硬链接。删除硬链接不会删除文件数据，只有当所有硬链接都被删除后，文件数据才会被删除。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /path/to/hardlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将删除硬链接，但<code>/home/user/original_file.txt</code>仍然存在，文件数据依然可用。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ul>\n<li><strong>软链接</strong>：适合用作快捷方式和指向目录。使用软链接时，请确保目标文件存在，或会造成“断链”。</li>\n<li><strong>硬链接</strong>：适用于同一文件系统内共享文件数据，不能链接到目录（通常情况下）。硬链接不可跨文件系统。</li>\n</ul>\n<h2 id=\"进阶操作\"><a href=\"#进阶操作\" class=\"headerlink\" title=\"进阶操作\"></a>进阶操作</h2><ul>\n<li><p><strong>查看所有链接</strong>：使用<code>find</code>命令查找所有指向某个目标的软链接或硬链接。</p>\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /path/to/directory <span class=\"token parameter variable\">-type</span> l <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"link_name\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个命令会查找所有名为<code>link_name</code>的软链接。</p>\n</li>\n</ul>\n",
            "tags": [
                "命令"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/09/git-shi-yong/",
            "url": "https://0xdadream.github.io/2024/08/09/git-shi-yong/",
            "title": "git使用",
            "date_published": "2024-08-09T01:25:00.000Z",
            "content_html": "<h1 id=\"git使用\"><a href=\"#git使用\" class=\"headerlink\" title=\"git使用\"></a>git使用</h1><h3 id=\"1-安装-Git\"><a href=\"#1-安装-Git\" class=\"headerlink\" title=\"1. 安装 Git\"></a>1. 安装 Git</h3><h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><ol>\n<li>从 <a href=\"https://git-scm.com/download/win\">Git 官方网站</a> 下载 Git 安装程序。</li>\n<li>双击安装程序并按照提示完成安装。</li>\n</ol>\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><ol>\n<li><p>使用包管理器安装 Git（以 Ubuntu 为例）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"2-配置-Git\"><a href=\"#2-配置-Git\" class=\"headerlink\" title=\"2. 配置 Git\"></a>2. 配置 Git</h3><p>安装完成后，配置用户名和邮箱：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"你的名字\"</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"你的邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-创建-SSH-Key\"><a href=\"#3-创建-SSH-Key\" class=\"headerlink\" title=\"3. 创建 SSH Key\"></a>3. 创建 SSH Key</h3><p>如果需要使用 SSH 方式连接 GitHub，生成 SSH key 并添加到 GitHub。</p>\n<h4 id=\"生成-SSH-Key\"><a href=\"#生成-SSH-Key\" class=\"headerlink\" title=\"生成 SSH Key\"></a>生成 SSH Key</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -t rsa -C \"你的邮箱\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>按提示操作，默认保存位置即可。生成完成后，使用以下命令查看公钥：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"添加-SSH-Key-到-GitHub\"><a href=\"#添加-SSH-Key-到-GitHub\" class=\"headerlink\" title=\"添加 SSH Key 到 GitHub\"></a>添加 SSH Key 到 GitHub</h4><ol>\n<li>登录 GitHub，进入 <a href=\"https://github.com/settings/keys\">SSH and GPG keys</a> 页面。</li>\n<li>点击 “New SSH key”，粘贴上一步生成的公钥内容，点击 “Add SSH key”。</li>\n</ol>\n<h3 id=\"4-创建-Git-仓库\"><a href=\"#4-创建-Git-仓库\" class=\"headerlink\" title=\"4. 创建 Git 仓库\"></a>4. 创建 Git 仓库</h3><h4 id=\"本地仓库\"><a href=\"#本地仓库\" class=\"headerlink\" title=\"本地仓库\"></a>本地仓库</h4><ol>\n<li><p>创建一个新的目录并进入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> my_project\n<span class=\"token builtin class-name\">cd</span> my_project<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>初始化 Git 仓库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h4><ol>\n<li><p>登录 GitHub，点击右上角 “+”，选择 “New repository”。</p>\n</li>\n<li><p>填写仓库名和描述，点击 “Create repository”。</p>\n</li>\n<li><p><code>.gitignore</code> 文件用于告诉 Git 哪些文件或目录不应该被添加到版本控制中。它在 Git 项目中非常重要，特别是当你的项目包含一些不需要共享的文件，如编译后的二进制文件、临时文件、或包含敏感信息的配置文件。</p>\n<p><code>.gitignore</code> 文件通常放在项目的根目录下，但你也可以在子目录中添加 <code>.gitignore</code> 文件，作用范围仅限于该目录及其子目录。</p>\n<p><code>.gitignore</code> 文件的语法</p>\n<ul>\n<li><p><strong>忽略特定文件或目录</strong>：在 <code>.gitignore</code> 中直接写上文件名或目录名。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 忽略文件</span>\nsecret.txt\n\n<span class=\"token comment\"># 忽略目录</span>\n/logs/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>通配符</strong>：使用 <code>*</code> 代表任意字符，<code>?</code> 代表单个字符，<code>[abc]</code> 代表匹配集合中的任意一个字符。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 忽略所有 .log 文件</span>\n*.log\n\n<span class=\"token comment\"># 忽略以 \"temp\" 开头的文件</span>\ntemp*\n\n<span class=\"token comment\"># 忽略名为 \"backup\" 或 \"bak\" 的文件</span>\n*.<span class=\"token punctuation\">[</span>bB<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>aA<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>kK<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>排除规则</strong>：以 <code>!</code> 开头的行用于排除某些文件或目录，这些文件即使符合前面的忽略规则也不会被忽略。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 忽略所有 .log 文件，但不忽略 important.log</span>\n*.log\n<span class=\"token operator\">!</span>important.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>指定路径</strong>：使用斜杠 <code>/</code> 来表示目录路径。以斜杠开头表示从根目录开始匹配。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 只忽略根目录下的 \"config.json\"，不忽略其他目录中的 \"config.json\"</span>\n/config.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"5-关联本地仓库与远程仓库\"><a href=\"#5-关联本地仓库与远程仓库\" class=\"headerlink\" title=\"5. 关联本地仓库与远程仓库\"></a>5. 关联本地仓库与远程仓库</h3><p>在本地仓库中，执行以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:你的用户名/仓库名.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>git remote add</code> 是一个 Git 命令，用于向你的本地仓库添加一个远程仓库。一个远程仓库是一个托管在某个服务器上的 Git 仓库，你可以将本地的更改推送到远程仓库，也可以从远程仓库拉取更新。</p>\n<p><code>origin</code> 是这个远程仓库的名字。你可以把它理解为远程仓库的一个别名，便于你以后引用这个远程仓库。在大多数情况下，<code>origin</code> 是默认的名字，用于指向你克隆的或第一次关联的远程仓库。</p>\n<p>通过执行这条命令，你告诉 Git：**这个本地仓库的远程仓库是位于 GitHub 上的 <code>git@github.com:你的用户名/仓库名.git</code> 这个位置，并且将它命名为 <code>origin</code>**。</p>\n<p>之后，你可以使用类似 <code>git push origin master</code> 的命令将本地的代码推送到 GitHub 上的远程仓库，或者使用 <code>git pull origin master</code> 从 GitHub 上拉取更新。</p>\n<h3 id=\"6-基本-Git-操作\"><a href=\"#6-基本-Git-操作\" class=\"headerlink\" title=\"6. 基本 Git 操作\"></a>6. 基本 Git 操作</h3><h4 id=\"添加文件并提交\"><a href=\"#添加文件并提交\" class=\"headerlink\" title=\"添加文件并提交\"></a>添加文件并提交</h4><p>提交前的工作目录是工作区（文件操作的区域）</p>\n<p>添加文件到暂存区：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> 文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这条命令用于将指定的文件添加到 Git 的暂存区（Stage）。暂存区是一个临时区域，你可以在其中暂时存放那些你准备提交到仓库的更改。文件在添加到暂存区之前，可以进行修改，而这些修改不会立即提交到仓库中。</p>\n<p>或添加所有文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>提交到本地仓库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"提交信息\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这条命令用于将暂存区中的所有内容提交到本地 Git 仓库，并为此次提交添加一条消息。<code>-m \"提交信息\"</code> 选项允许你在命令行中直接输入一条提交信息，而不需要进入编辑器。</p>\n<h4 id=\"查看暂存区的文件\"><a href=\"#查看暂存区的文件\" class=\"headerlink\" title=\"查看暂存区的文件\"></a>查看暂存区的文件</h4><p><code>git status</code> 命令会显示工作区和暂存区的状态，包括哪些文件被修改但尚未添加到暂存区，以及哪些文件已经被添加到暂存区。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出中，暂存区中的文件会显示在 <code>Changes to be committed</code> 部分。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Changes to be committed:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git restore --staged &lt;file&gt;...\"</span> to unstage<span class=\"token punctuation\">)</span>\n        modified:   index.html\n        new file:   style.css<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这意味着 <code>index.html</code> 文件已被修改并添加到暂存区，而 <code>style.css</code> 是一个新文件，也已经被添加到暂存区。</p>\n<h4 id=\"使用-git-diff-cached-查看暂存区的更改\"><a href=\"#使用-git-diff-cached-查看暂存区的更改\" class=\"headerlink\" title=\"使用 git diff --cached 查看暂存区的更改\"></a>使用 <code>git diff --cached</code> 查看暂存区的更改</h4><p><code>git diff --cached</code> 命令会显示暂存区中的更改细节。这个命令的输出与 <code>git diff</code> 类似，但只显示暂存区中的内容，而不包括工作区中尚未添加到暂存区的修改。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token parameter variable\">--cached</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者你也可以使用 <code>git diff --staged</code>，效果是一样的。</p>\n<p>这个命令将显示具体的代码差异，即哪些行被修改、添加或删除。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">diff</span> <span class=\"token parameter variable\">--git</span> a/index.html b/index.html\nindex 83b2d7e<span class=\"token punctuation\">..</span>e39a4ff <span class=\"token number\">100644</span>\n--- a/index.html\n+++ b/index.html\n@@ -12,7 +12,7 @@\n   <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>My Website<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n-  <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>Hello, World<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>\n+  <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>Welcome to My Website<span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>&gt;</span>\n <span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"从-Git-暂存区移除文件\"><a href=\"#从-Git-暂存区移除文件\" class=\"headerlink\" title=\"从 Git 暂存区移除文件\"></a>从 Git 暂存区移除文件</h4><h5 id=\"使用-git-restore-staged\"><a href=\"#使用-git-restore-staged\" class=\"headerlink\" title=\"使用 git restore --staged\"></a>使用 <code>git restore --staged</code></h5><p>用于将文件从暂存区移除，并恢复到工作区的状态。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> restore <span class=\"token parameter variable\">--staged</span> 文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"使用-git-reset\"><a href=\"#使用-git-reset\" class=\"headerlink\" title=\"使用 git reset\"></a>使用 <code>git reset</code></h5><p>用于回滚或取消更改。使用 <code>git reset</code> 也可以将文件从暂存区移除。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset 文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"移除所有文件\"><a href=\"#移除所有文件\" class=\"headerlink\" title=\"移除所有文件\"></a>移除所有文件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将把暂存区中的所有文件全部移除，同时保留它们在工作区中的修改。</p>\n<h4 id=\"恢复工作区文件\"><a href=\"#恢复工作区文件\" class=\"headerlink\" title=\"恢复工作区文件\"></a>恢复工作区文件</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -- test.txt\n<span class=\"token function\">git</span> checkout <span class=\"token comment\"># 直接还原为最新版本</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>是用于丢弃工作区中对 <code>txt</code> 文件的所有未提交更改的命令。具体来说，它将 <code>txt</code> 文件恢复到最后一次提交时的状态。</p>\n<h4 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h4><h5 id=\"使用-git-reset-回退版本\"><a href=\"#使用-git-reset-回退版本\" class=\"headerlink\" title=\"使用 git reset 回退版本\"></a>使用 <code>git reset</code> 回退版本</h5><p><code>git reset</code> 用于回退到某个特定的提交，并且可以选择性地影响暂存区和工作区。</p>\n<p>常用选项：</p>\n<ul>\n<li><code>--soft</code>：仅移动 <code>HEAD</code>，不影响暂存区和工作区。回退后的所有更改都保留在暂存区中。（HEAD为当前版本）</li>\n<li><code>--mixed</code>（默认选项）：移动 <code>HEAD</code>，并重置暂存区，但保留工作区的更改。回退后的更改仍在工作区，但不在暂存区。</li>\n<li><code>--hard</code>：移动 <code>HEAD</code>，同时重置暂存区和工作区。回退后的所有更改都被删除，不可恢复。</li>\n</ul>\n<p>假设你想回退到特定的提交 <code>abc123</code>。</p>\n<ul>\n<li><p><strong>软回退：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--soft</span> abc123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将把当前分支指针（<code>HEAD</code>）移到 <code>abc123</code>，但保持工作区和暂存区的所有更改。</p>\n</li>\n<li><p><strong>混合回退：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--mixed</span> abc123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将回退到 <code>abc123</code>，并将暂存区重置为该提交的状态，但保留工作区的更改。</p>\n</li>\n<li><p><strong>硬回退：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> abc123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将回退到 <code>abc123</code>，并删除所有在 <code>abc123</code> 之后的更改。这个操作不可逆，因此使用前请务必确认。</p>\n</li>\n</ul>\n<h5 id=\"使用-git-revert-进行安全回退\"><a href=\"#使用-git-revert-进行安全回退\" class=\"headerlink\" title=\"使用 git revert 进行安全回退\"></a>使用 <code>git revert</code> 进行安全回退</h5><p><code>git revert</code> 用于生成一个新的提交，该提交会撤销指定的历史提交，而不会改变项目的提交历史。<code>git revert</code> 是一种“安全”的回退方式，因为它保留了所有历史记录。</p>\n<p>假设你想撤销提交 <code>abc123</code>。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> revert abc123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将生成一个新的提交，它的作用是撤销 <code>abc123</code> 所做的更改，而不会影响 <code>abc123</code> 之前或之后的其他提交。</p>\n<h5 id=\"使用-git-checkout-回退到特定提交（仅查看）\"><a href=\"#使用-git-checkout-回退到特定提交（仅查看）\" class=\"headerlink\" title=\"使用 git checkout 回退到特定提交（仅查看）\"></a>使用 <code>git checkout</code> 回退到特定提交（仅查看）</h5><p><code>git checkout</code> 主要用于切换分支或查看特定提交。你可以暂时回退到某个提交，但不修改当前分支的状态。</p>\n<p>假设你想查看 <code>abc123</code> 提交的状态。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout abc123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将把工作区和暂存区切换到 <code>abc123</code> 提交的状态，但不会更改当前分支的指针。如果你想回到最新的状态，可以使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>（假设你在 <code>master</code> 分支上）</p>\n<h5 id=\"如何找到提交的哈希值\"><a href=\"#如何找到提交的哈希值\" class=\"headerlink\" title=\"如何找到提交的哈希值\"></a>如何找到提交的哈希值</h5><p>在执行版本回退前，你需要知道要回退到的提交的哈希值（类似 <code>abc123</code>）。可以使用以下命令查看提交历史：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log\n<span class=\"token function\">git</span> log <span class=\"token parameter variable\">--pretty</span><span class=\"token operator\">=</span>oneline <span class=\"token comment\"># 显示一行</span>\n<span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD^ <span class=\"token comment\"># 回退上一个版本</span>\n<span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD^^ <span class=\"token comment\"># 同理</span>\n<span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD~10<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这将显示所有提交的日志，包括提交哈希、作者、日期和提交信息。</p>\n<h4 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h4><p><code>git rm &lt;file&gt;</code>和<code>git add&lt;file&gt;</code>效果是一样的</p>\n<h4 id=\"推送到远程仓库\"><a href=\"#推送到远程仓库\" class=\"headerlink\" title=\"推送到远程仓库\"></a>推送到远程仓库</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin master\n<span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span> <span class=\"token comment\">#查看远程库信息</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">rm</span> origin <span class=\"token comment\"># 删除关联</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"克隆远程仓库\"><a href=\"#克隆远程仓库\" class=\"headerlink\" title=\"克隆远程仓库\"></a>克隆远程仓库</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:你的用户名/仓库名.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"拉取更新\"><a href=\"#拉取更新\" class=\"headerlink\" title=\"拉取更新\"></a>拉取更新</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"Git标签\"><a href=\"#Git标签\" class=\"headerlink\" title=\"Git标签\"></a>Git标签</h4><p>给某个提交打标签（通常用于发布版本）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag <span class=\"token parameter variable\">-a</span> v1.0 <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"版本1.0\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>推送标签到远程仓库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token parameter variable\">--tags</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"7-分支管理\"><a href=\"#7-分支管理\" class=\"headerlink\" title=\"7. 分支管理\"></a>7. 分支管理</h3><h4 id=\"1-创建分支\"><a href=\"#1-创建分支\" class=\"headerlink\" title=\"1. 创建分支\"></a>1. 创建分支</h4><p>要创建一个新的分支，使用 <code>git branch</code> 命令。新分支会基于你当前所在的分支创建。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会创建一个名为 <code>feature/new-feature</code> 的新分支，但不会切换到该分支。</p>\n<h4 id=\"2-切换分支\"><a href=\"#2-切换分支\" class=\"headerlink\" title=\"2. 切换分支\"></a>2. 切换分支</h4><p>使用 <code>git checkout</code> 或 <code>git switch</code> 来切换到其他分支。在 Git 2.23 之后，Git 引入了 <code>git switch</code>，它专门用于切换分支，更加直观和安全。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> switch feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将切换到 <code>feature/new-feature</code> 分支，并更新工作区和暂存区以匹配该分支的状态。</p>\n<h4 id=\"3-创建并切换到新分支\"><a href=\"#3-创建并切换到新分支\" class=\"headerlink\" title=\"3. 创建并切换到新分支\"></a>3. 创建并切换到新分支</h4><p>可以使用 <code>git checkout -b</code> 或 <code>git switch -c</code> 在创建新分支的同时切换到该分支。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> switch <span class=\"token parameter variable\">-c</span> feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将创建 <code>feature/new-feature</code> 分支并立即切换到该分支。</p>\n<h4 id=\"4-查看分支\"><a href=\"#4-查看分支\" class=\"headerlink\" title=\"4. 查看分支\"></a>4. 查看分支</h4><p>要查看所有分支，可以使用 <code>git branch</code> 命令。当前所在的分支会以 <code>*</code> 标记。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">  develop\n* feature/new-feature\n  master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这表明你当前在 <code>feature/new-feature</code> 分支上。</p>\n<h4 id=\"5-合并分支\"><a href=\"#5-合并分支\" class=\"headerlink\" title=\"5. 合并分支\"></a>5. 合并分支</h4><p>当你完成了在某个分支上的工作并希望将其合并回主分支（例如 <code>master</code> 或 <code>develop</code>），你可以使用 <code>git merge</code> 命令。</p>\n<p>合并分支的步骤：</p>\n<ol>\n<li><p>切换到目标分支（通常是 master 或 develop）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>合并工作分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> merge feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将把 <code>feature/new-feature</code>分支的更改合并到 <code>master</code>分支中。如果没有冲突，Git 会自动完成合并。如果有冲突，需要手动解决后再完成合并。</p>\n</li>\n</ol>\n<h4 id=\"6-处理合并冲突\"><a href=\"#6-处理合并冲突\" class=\"headerlink\" title=\"6. 处理合并冲突\"></a>6. 处理合并冲突</h4><p>当 Git 无法自动合并两个分支时，会提示合并冲突。此时，需要手动编辑冲突的文件，解决冲突后再继续合并。</p>\n<ol>\n<li><p>打开冲突文件，找到冲突标记：</p>\n<pre class=\"line-numbers language-diff\" data-language=\"diff\"><code class=\"language-diff\"><span class=\"token deleted-arrow deleted\"><span class=\"token prefix deleted\">&lt;</span><span class=\"token line\">&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n</span></span>当前分支的代码\n=======\n被合并分支的代码\n<span class=\"token inserted-arrow inserted\"><span class=\"token prefix inserted\">&gt;</span><span class=\"token line\">&gt;&gt;&gt;&gt;&gt;&gt; feature/new-feature</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>手动解决冲突</strong>，编辑文件使其符合预期。</p>\n</li>\n<li><p>标记冲突为已解决并提交：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> 冲突文件\n<span class=\"token function\">git</span> commit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"7-删除分支\"><a href=\"#7-删除分支\" class=\"headerlink\" title=\"7. 删除分支\"></a>7. 删除分支</h4><p>当一个分支的工作完成且不再需要时，可以将其删除。</p>\n<p>删除本地分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-d</span> feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果分支尚未合并，Git 会阻止删除，以防丢失更改。要强制删除，可以使用 <code>-D</code> 选项：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-D</span> feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>删除远程分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token parameter variable\">--delete</span> feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将删除远程仓库中的 <code>feature/new-feature</code> 分支。</p>\n<h4 id=\"8-远程分支\"><a href=\"#8-远程分支\" class=\"headerlink\" title=\"8. 远程分支\"></a>8. 远程分支</h4><p>远程分支是托管在远程仓库中的分支，例如 GitHub、GitLab 上的分支。通常，当你推送分支到远程仓库时，该分支会自动在远程仓库中创建。</p>\n<p>查看远程分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-r</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将列出所有远程分支。</p>\n<p>推送本地分支到远程：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会将 <code>feature/new-feature</code> 分支推送到远程仓库的 <code>origin</code>（默认远程名称）上。</p>\n<h4 id=\"9-跟踪远程分支\"><a href=\"#9-跟踪远程分支\" class=\"headerlink\" title=\"9. 跟踪远程分支\"></a>9. 跟踪远程分支</h4><p>你可以将本地分支与远程分支关联，使推送和拉取更方便。</p>\n<p>创建跟踪分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> feature/new-feature origin/feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者，如果分支已经存在：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch --set-upstream-to<span class=\"token operator\">=</span>origin/feature/new-feature<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"10-更新远程分支\"><a href=\"#10-更新远程分支\" class=\"headerlink\" title=\"10. 更新远程分支\"></a>10. 更新远程分支</h4><p>要同步本地仓库与远程仓库的状态，使用 <code>git fetch</code> 或 <code>git pull</code>。</p>\n<p>拉取更新并合并：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将从远程 <code>master</code> 分支拉取最新的更改并合并到当前分支。</p>\n<p>仅获取更新（不合并）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> fetch origin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将更新本地的远程分支信息，但不合并更改。</p>\n<h3 id=\"8-存储进度\"><a href=\"#8-存储进度\" class=\"headerlink\" title=\"8.存储进度\"></a>8.存储进度</h3><p><code>git stash</code> 允许你将当前的工作进度（包括工作区和暂存区的更改）暂时存储起来，以便可以在一个干净的工作区中进行其他操作。之后，你可以随时恢复这些存储的更改。</p>\n<h4 id=\"1-基本命令：git-stash\"><a href=\"#1-基本命令：git-stash\" class=\"headerlink\" title=\"1. 基本命令：git stash\"></a>1. 基本命令：<code>git stash</code></h4><h5 id=\"1-1-存储当前工作区和暂存区的更改\"><a href=\"#1-1-存储当前工作区和暂存区的更改\" class=\"headerlink\" title=\"1.1 存储当前工作区和暂存区的更改\"></a>1.1 存储当前工作区和暂存区的更改</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会将当前分支的工作区和暂存区的所有更改存储起来，工作区将恢复到最后一次提交时的状态。存储的更改会被放入一个“栈”中，供以后恢复使用。</p>\n<h5 id=\"1-2-存储时添加描述信息\"><a href=\"#1-2-存储时添加描述信息\" class=\"headerlink\" title=\"1.2 存储时添加描述信息\"></a>1.2 存储时添加描述信息</h5><p>你可以为存储的更改添加描述信息，以便更容易区分多个存储。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash save <span class=\"token string\">\"描述信息\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"2-查看存储：git-stash-list\"><a href=\"#2-查看存储：git-stash-list\" class=\"headerlink\" title=\"2. 查看存储：git stash list\"></a>2. 查看存储：<code>git stash list</code></h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会列出所有的存储记录，每一条记录都有唯一的索引和描述信息。输出示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stash@<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span>: WIP on master: 5d1e76a 修复首页布局\nstash@<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>: WIP on master: 2a7b8d9 添加新功能<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>stash@{0}</code> 是最顶部的存储记录，<code>stash@{1}</code> 是次存储记录，依此类推。</p>\n<h4 id=\"3-恢复存储：git-stash-pop-和-git-stash-apply\"><a href=\"#3-恢复存储：git-stash-pop-和-git-stash-apply\" class=\"headerlink\" title=\"3. 恢复存储：git stash pop 和 git stash apply\"></a>3. 恢复存储：<code>git stash pop</code> 和 <code>git stash apply</code></h4><h5 id=\"3-1-git-stash-pop\"><a href=\"#3-1-git-stash-pop\" class=\"headerlink\" title=\"3.1 git stash pop\"></a>3.1 <code>git stash pop</code></h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash pop<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会将最近存储的更改恢复到工作区和暂存区，并将该存储记录从列表中删除。如果有冲突，Git 会提示手动解决冲突。</p>\n<h5 id=\"3-2-git-stash-apply\"><a href=\"#3-2-git-stash-apply\" class=\"headerlink\" title=\"3.2 git stash apply\"></a>3.2 <code>git stash apply</code></h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash apply<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会将最近的存储恢复到工作区和暂存区，但不会删除该存储记录。如果你需要多次应用存储，使用 <code>apply</code> 比 <code>pop</code> 更合适。</p>\n<h4 id=\"3-3-恢复特定存储\"><a href=\"#3-3-恢复特定存储\" class=\"headerlink\" title=\"3.3 恢复特定存储\"></a>3.3 恢复特定存储</h4><p>如果有多个存储记录，你可以指定恢复某个特定的存储。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash apply stash@<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会恢复索引为 <code>stash@{1}</code> 的存储，并保留存储记录。</p>\n<h3 id=\"9-常见的Git-Hooks\"><a href=\"#9-常见的Git-Hooks\" class=\"headerlink\" title=\"9.常见的Git Hooks\"></a>9.常见的Git Hooks</h3><ul>\n<li><strong>pre-commit</strong>：在<code>git commit</code>命令执行之前触发。可以用来执行代码风格检查或静态分析，防止不合格的代码提交。</li>\n<li><strong>commit-msg</strong>：在提交信息编辑完成后触发。用于检查提交信息是否符合团队规范（如强制使用特定格式）。</li>\n<li><strong>post-commit</strong>：在提交完成后触发。可以用于执行通知或部署任务。</li>\n</ul>\n<h4 id=\"示例：自动检查代码风格\"><a href=\"#示例：自动检查代码风格\" class=\"headerlink\" title=\"示例：自动检查代码风格\"></a>示例：自动检查代码风格</h4><p>假设你使用<code>pre-commit</code>钩子来检查Python代码的风格是否符合PEP8标准。以下是一个简单的脚本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token assign-left variable\">files</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token parameter variable\">--cached</span> --name-only --diff-filter<span class=\"token operator\">=</span>ACM <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'\\.py$'</span><span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$files</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">unformatted</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>pycodestyle $files<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$unformatted</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Python代码风格检查失败:\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$unformatted</span>\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将这个脚本保存为<code>.git/hooks/pre-commit</code>并赋予可执行权限：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x .git/hooks/pre-commit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>",
            "tags": [
                "git"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/03/shell/",
            "url": "https://0xdadream.github.io/2024/08/03/shell/",
            "title": "shell",
            "date_published": "2024-08-03T01:25:00.000Z",
            "content_html": "<h1 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h1><p>Shell 是一种用于与操作系统进行交互的命令行界面。常见的 Shell 有 Bash（Bourne Again Shell）、Zsh、Ksh、以及 Windows 上的 PowerShell。Shell 不仅可以用于执行单个命令，还可以编写脚本来自动化任务。以下是一些基本的 Shell 命令和脚本编写的示例。</p>\n<h2 id=\"基本-Shell-命令\"><a href=\"#基本-Shell-命令\" class=\"headerlink\" title=\"基本 Shell 命令\"></a>基本 Shell 命令</h2><h3 id=\"文件和目录操作\"><a href=\"#文件和目录操作\" class=\"headerlink\" title=\"文件和目录操作\"></a>文件和目录操作</h3><ul>\n<li><p><strong>ls</strong>：列出目录内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span>\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span>  <span class=\"token comment\"># 显示详细信息</span>\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span>  <span class=\"token comment\"># 显示所有文件，包括隐藏文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>cd</strong>：更改目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /path/to/directory\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>  <span class=\"token comment\"># 返回上一级目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>pwd</strong>：显示当前工作目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">pwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>mkdir</strong>：创建目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> new_directory<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>rm</strong>：删除文件或目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> filename\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> directory  <span class=\"token comment\"># 删除目录及其内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>cp</strong>：复制文件或目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> source_file destination\n<span class=\"token function\">cp</span> <span class=\"token parameter variable\">-r</span> source_directory destination  <span class=\"token comment\"># 复制目录及其内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>mv</strong>：移动或重命名文件或目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> old_name new_name\n<span class=\"token function\">mv</span> <span class=\"token function\">file</span> /path/to/destination<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"文件查看和编辑\"><a href=\"#文件查看和编辑\" class=\"headerlink\" title=\"文件查看和编辑\"></a>文件查看和编辑</h3><ul>\n<li><p><strong>cat</strong>：查看文件内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>less</strong>：分页查看文件内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">less</span> filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>head</strong>：查看文件开头部分</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">head</span> filename\n<span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span> filename  <span class=\"token comment\"># 查看前 10 行</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>tail</strong>：查看文件末尾部分</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> filename\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span> filename  <span class=\"token comment\"># 查看后 10 行</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>nano</strong>、<strong>vi</strong>、<strong>vim</strong>：文本编辑器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">nano</span> filename\n<span class=\"token function\">vi</span> filename\n<span class=\"token function\">vim</span> filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"系统信息和管理\"><a href=\"#系统信息和管理\" class=\"headerlink\" title=\"系统信息和管理\"></a>系统信息和管理</h3><ul>\n<li><p><strong>echo</strong>：打印消息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>whoami</strong>：显示当前用户</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">whoami</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>top</strong>：实时显示系统性能信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">top</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>ps</strong>：显示当前进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span>\n<span class=\"token function\">ps</span> aux  <span class=\"token comment\"># 显示所有进程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>kill</strong>：终止进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">kill</span> PID\n<span class=\"token function\">kill</span> <span class=\"token parameter variable\">-9</span> PID  <span class=\"token comment\"># 强制终止进程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>chmod</strong>：更改文件权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">755</span> filename\n<span class=\"token function\">chmod</span> +x filename  <span class=\"token comment\"># 使文件可执行</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>chown</strong>：更改文件所有者</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> user:group filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"网络相关\"><a href=\"#网络相关\" class=\"headerlink\" title=\"网络相关\"></a>网络相关</h3><ul>\n<li><p><strong>ping</strong>：测试网络连通性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ping</span> example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>curl</strong>：发送网络请求</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>wget</strong>：下载文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://example.com/file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"管道和重定向\"><a href=\"#管道和重定向\" class=\"headerlink\" title=\"管道和重定向\"></a>管道和重定向</h3><ul>\n<li><p>**|**：管道，将一个命令的输出作为另一个命令的输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"pattern\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**&gt;**：重定向输出到文件（覆盖）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span> <span class=\"token operator\">&gt;</span> file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**&gt;&gt;**：重定向输出到文件（追加）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span> <span class=\"token operator\">&gt;&gt;</span> file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**&lt;**：重定向输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">command</span> <span class=\"token operator\">&lt;</span> inputfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><ul>\n<li><p>设置变量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">MY_VAR</span><span class=\"token operator\">=</span><span class=\"token string\">\"Hello, World!\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>使用变量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$MY_VAR</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"Shell-脚本\"><a href=\"#Shell-脚本\" class=\"headerlink\" title=\"Shell 脚本\"></a>Shell 脚本</h2><p>Shell 脚本是一组 Shell 命令的集合，通常用于自动化任务。以下是一个简单的 Shell 脚本示例：</p>\n<h3 id=\"创建脚本文件\"><a href=\"#创建脚本文件\" class=\"headerlink\" title=\"创建脚本文件\"></a>创建脚本文件</h3><p>使用你喜欢的文本编辑器创建一个脚本文件，例如 <code>myscript.sh</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">nano</span> myscript.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"编写脚本\"><a href=\"#编写脚本\" class=\"headerlink\" title=\"编写脚本\"></a>编写脚本</h3><p>在脚本文件中编写以下内容：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># 打印消息</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"This is a simple shell script.\"</span>\n\n<span class=\"token comment\"># 设置变量</span>\n<span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Alice\"</span>\n\n<span class=\"token comment\"># 使用变量</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, <span class=\"token variable\">$NAME</span>!\"</span>\n\n<span class=\"token comment\"># 条件语句</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$NAME</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Alice\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Welcome, Alice!\"</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You are not Alice.\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># 循环</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Number: <span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 函数</span>\n<span class=\"token function-name function\">my_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"This is a function.\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 调用函数</span>\nmy_function<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"运行脚本\"><a href=\"#运行脚本\" class=\"headerlink\" title=\"运行脚本\"></a>运行脚本</h3><p>首先使脚本可执行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x myscript.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后运行脚本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./myscript.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>",
            "tags": [
                "命令"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/",
            "url": "https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/",
            "title": "使用cloudflare的R2创建图床",
            "date_published": "2024-07-27T07:25:00.000Z",
            "content_html": "<h1 id=\"使用cloudflare的R2创建图床\"><a href=\"#使用cloudflare的R2创建图床\" class=\"headerlink\" title=\"使用cloudflare的R2创建图床\"></a>使用cloudflare的R2创建图床</h1><h2 id=\"创建存储桶\"><a href=\"#创建存储桶\" class=\"headerlink\" title=\"创建存储桶\"></a>创建存储桶</h2><p>首先有一个cloudflare账号并且成功开通R2服务</p>\n<p>依次点击R2-&gt;创建存储桶</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/8c361d6ac6f76ad87da98ce758a4261a.png\"></p>\n<p>进入创建的桶，点击设置，下滑点击连接到域，example.com为你在cloudflare上托管的域名，会自动添加记录</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/e02d80f0f528eb474a327a3ee2aac1cc.png\"></p>\n<p>等待初始化成功就可以上传图片了并通过url访问了</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/592642fec58d64822ca9dd28855095c9.png\"></p>\n<p>上传图片后点进去就能看到url</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/33de127f3053a3537919fae0a5b35c61.png\"></p>\n<h2 id=\"安装PicGo\"><a href=\"#安装PicGo\" class=\"headerlink\" title=\"安装PicGo\"></a>安装PicGo</h2><p>这个用于管理图片上传和浏览</p>\n<p>github仓库地址<a href=\"https://github.com/Molunerfinn/PicGo\">Releases · Molunerfinn/PicGo (github.com)</a>下载安装</p>\n<p>要先下载node.js环境，看往期文章</p>\n<p>完成后打开软件进入插件搜索<code>S3</code></p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/9db03c02e835473d6d06852a17c625b4.png\"></p>\n<p>配置picgo</p>\n<p>先创建API令牌</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/658d705739daffbba58141c804c382d5.png\"></p>\n<p>然后像这样设置，创建完成记得保存密钥</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/3532bc2477a125fef6ac1db367b602d0.png\"></p>\n<p>保存密钥后关闭</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/5d17e288bc348b17904a78a2b0d48ae0.png\"></p>\n<p>打开软件，+号添加配置</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/22d21e489a73ad311ebd53ec422faee8.png\"></p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/3ca6c26f83e255df9dce765281e8a034.png\"></p>\n<p>找到这个S3API</p>\n<p>如下填写</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/e2d3e9e11a19b0a3e1e2c6a7538ee923.png\"></p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/2b5992966ed9d88fe80c8f1b8d242fac.png\"></p>\n",
            "tags": [
                "教程"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/07/27/powershell-ti-quan/",
            "url": "https://0xdadream.github.io/2024/07/27/powershell-ti-quan/",
            "title": "powershell提权",
            "date_published": "2024-07-27T02:25:00.000Z",
            "content_html": "<h1 id=\"powershell提权\"><a href=\"#powershell提权\" class=\"headerlink\" title=\"powershell提权\"></a>powershell提权</h1><p>安装gsudo</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">winget <span class=\"token function\">install</span> gerardog.gsudo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><a href=\"https://gerardog.github.io/gsudo/docs/install\">How to Install | gsudo Documentation (gerardog.github.io)</a></p>\n",
            "tags": [
                "windows",
                "tools"
            ]
        }
    ]
}