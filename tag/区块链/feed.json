{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"区块链\" tag",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/",
            "url": "https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/",
            "title": "以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台",
            "date_published": "2024-10-16T01:25:00.000Z",
            "content_html": "<h1 id=\"以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台\"><a href=\"#以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台\" class=\"headerlink\" title=\"以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台\"></a>以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台</h1><h2 id=\"一、安装-DApp-开发环境\"><a href=\"#一、安装-DApp-开发环境\" class=\"headerlink\" title=\"一、安装 DApp 开发环境\"></a>一、安装 DApp 开发环境</h2><h3 id=\"1-1-安装-Node-js\"><a href=\"#1-1-安装-Node-js\" class=\"headerlink\" title=\"1.1 安装 Node.js\"></a>1.1 安装 Node.js</h3><p>看我这篇<a href=\"https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/\">node.js版本问题 | 逐梦 (0xdadream.github.io)</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">node</span> <span class=\"token parameter variable\">--version</span>\nv22.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-2-安装-Geth\"><a href=\"#1-2-安装-Geth\" class=\"headerlink\" title=\"1.2 安装 Geth\"></a>1.2 安装 Geth</h3><p><a href=\"https://geth.ethereum.org/downloads\">Downloads | go-ethereum</a></p>\n<p>下载 64 位<a href=\"https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe\">https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe</a></p>\n<p>或者 32 位<a href=\"https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe\">https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe</a> </p>\n<p>Geth 安装程序,然后进行安装。 安装完毕后打开一个控制台,执行命令验证安装成功:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth version\nGeth\nVersion: <span class=\"token number\">1.8</span>.3-stable <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-3-安装-solidity-编译器\"><a href=\"#1-3-安装-solidity-编译器\" class=\"headerlink\" title=\"1.3 安装 solidity 编译器\"></a>1.3 安装 solidity 编译器</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> solc <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>  安装完毕后,执行命令验证安装成功 </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">solcjs <span class=\"token parameter variable\">-V</span>\n<span class=\"token number\">0.8</span>.28+commit.7893614a.Emscripten.clang<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-4-安装-web3\"><a href=\"#1-4-安装-web3\" class=\"headerlink\" title=\"1.4 安装 web3\"></a>1.4 安装 web3</h3><p>Web3 的安装过程使用了 git,因此需要先安装 windows 版的 git 命令行<a href=\"https://0xdadream.github.io/2024/08/09/git-shi-yong/\">git使用 | 逐梦 (0xdadream.github.io)</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> web3 <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>验证，创建一个文件<code>index.js</code>,写入以下内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">const <span class=\"token punctuation\">{</span> Web3 <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'web3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"Version:\"</span>,Web3.version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">node</span> index.js\nVersion: <span class=\"token number\">4.13</span>.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-5-安装-truffle-框架\"><a href=\"#1-5-安装-truffle-框架\" class=\"headerlink\" title=\"1.5 安装 truffle 框架\"></a>1.5 安装 truffle 框架</h3><p> 执行以下命令安装 truffle 开发框架: </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> truffle<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>验证安装:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle.cmd version\nTruffle v5.11.5 <span class=\"token punctuation\">(</span>core: <span class=\"token number\">5.11</span>.5<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-6-安装-webpack\"><a href=\"#1-6-安装-webpack\" class=\"headerlink\" title=\"1.6 安装 webpack\"></a>1.6 安装 webpack</h3><p>执行以下命令安装 webpack:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> webpack –g <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>验证安装  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">webpack <span class=\"token parameter variable\">-h</span>\nUsage: webpack <span class=\"token punctuation\">[</span>entries<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span>\nAlternative usage to run commands: webpack <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"二、运行私链节点\"><a href=\"#二、运行私链节点\" class=\"headerlink\" title=\"二、运行私链节点\"></a>二、运行私链节点</h2><h3 id=\"2-1-创世块配置\"><a href=\"#2-1-创世块配置\" class=\"headerlink\" title=\"2.1 创世块配置\"></a>2.1 创世块配置</h3><p>创建一个节点目录 node1,并在其中创建私链的创世块配置文件:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> node1\n<span class=\"token builtin class-name\">cd</span> node1\nnotepad gensis.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>然后编辑内容如下:</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">987</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2100000\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"300000\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"f41c74c9ae680c1aa78f42e5647a62f353b7bdde\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"400000\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>config.chainId</code>用来声明以太坊网络编号,选择一个大于 10 的数字即可。  <code>difficulty</code> 用来声明挖矿难度,越小的值难度越低,也就能更快速地出块。</p>\n<p>完整版的 <code>gensis.json</code> 如下所示</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">987</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x400\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xffffffff\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 可选填的参数</span>\n  <span class=\"token property\">\"coinbase\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000000000000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"extraData\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x00\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"nonce\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000001\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"mixhash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000000000000000000000000000000000000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parentHash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x0000000000000000000000000000000000000000000000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x00\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"430e986e0cca10a174baad96871ec9cb308c6d05\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"111111\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>各个字段解释如下：</p>\n<table>\n<thead>\n<tr>\n<th>必填</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>chainId</td>\n<td>自定义私链的网络ID，不同的网络ID无法互联通讯，以太坊公链ID 为1，我们设置为987以防止与网络中其他私链冲突。</td>\n</tr>\n<tr>\n<td>homesteadBlock</td>\n<td>是否为HomeStead版本的区块，设置为0表明是。</td>\n</tr>\n<tr>\n<td>eip155Block</td>\n<td>EIP155 [<a href=\"https://ethbook.abyteahead.com/ch5/build.html#id5\">1]</a> 是一个以太坊分叉提议，为了和以前的以太坊经典ETC 链条分叉而存在，我们私链不需要它，设为0。</td>\n</tr>\n<tr>\n<td>eip158Block</td>\n<td>EIP158 [<a href=\"https://ethbook.abyteahead.com/ch5/build.html#id6\">2]</a> 是一个以太坊分叉提议，为了解决之前以太坊空账户造成效率低下的协议漏洞而分叉，我们私链不需要它，设为0。</td>\n</tr>\n<tr>\n<td>difficulty</td>\n<td>设置当前区块难度，若难度过大挖矿就很慢，我们设置较小值。</td>\n</tr>\n<tr>\n<td>gasLimit</td>\n<td>单一区块最大 gas 消耗上限，用来限制能够打包进入块的交易数量与信息总和，我们在学习中可以设置为最大。</td>\n</tr>\n<tr>\n<td>选填</td>\n<td></td>\n</tr>\n<tr>\n<td>coinbase</td>\n<td>打包该块的矿工的奖励地址，因为是创世块，可设为0地址。</td>\n</tr>\n<tr>\n<td>extraData</td>\n<td>打包该块时矿工记录的笔记。</td>\n</tr>\n<tr>\n<td>nonce</td>\n<td>打包该块时矿工挖矿所用到的Ethash输入参数nonce。</td>\n</tr>\n<tr>\n<td>mixHash</td>\n<td>与nonce配合用于挖矿，创世区无前一个区块，可不填。</td>\n</tr>\n<tr>\n<td>parentHash</td>\n<td>前一个区块头的哈希值，创世区块无前一个区块，设为0。</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>打包该块的时间戳，符合Unix Timestamp标准，设为0。</td>\n</tr>\n<tr>\n<td>alloc</td>\n<td>创世时各账户分配以太币的数量，不想分配则忽略。</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-2-初始化私链节点\"><a href=\"#2-2-初始化私链节点\" class=\"headerlink\" title=\"2.2 初始化私链节点\"></a>2.2 初始化私链节点</h3><p>执行 geth 的 init 命令初始化私链节点:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> .<span class=\"token punctuation\">\\</span>data init gensis.json\n\n<span class=\"token comment\"># Successfully wrote genesis state</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这会在当前目录下创建 data 目录,用来保存区块数据及账户信息</p>\n<p>可以上述命令写到一个脚本 <code>init.cmd</code> 里，文件内容如下:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> .<span class=\"token punctuation\">\\</span>data init gensis.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在部署下一个节点时,就可以直接执行这个脚本进行初始化了。例如,在另一台机器上:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">init.cmd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-3-启动私链节点\"><a href=\"#2-3-启动私链节点\" class=\"headerlink\" title=\"2.3 启动私链节点\"></a>2.3 启动私链节点</h3><p>在我们现在的环境下，需要启动一个 Geth 节点来接入私链网络（实际上也是这个私链网络的唯一一个节点），负责在创世块后挖出第一个块。该节点也是我们与以太坊私链通信的节点服务器。下面我们来启动这样一个节点。同样,你可以用一个脚本 <code>console.cmd</code> 来简化启动节点时的输入,文件内容如下:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data ^\n<span class=\"token parameter variable\">--rpc</span> <span class=\"token parameter variable\">--rpcaddr</span> <span class=\"token number\">127.0</span>.0.1 <span class=\"token parameter variable\">--rpcport</span> <span class=\"token number\">8545</span> <span class=\"token parameter variable\">--rpccorsdomain</span> <span class=\"token string\">\"*\"</span> ^\n<span class=\"token parameter variable\">--rpcapi</span> <span class=\"token string\">\"eth,net,web3,personal,admin,shh,txpool,debug,miner\"</span> ^\n<span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--maxpeers</span> <span class=\"token number\">30</span> <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> ^\n<span class=\"token parameter variable\">--mine</span> <span class=\"token parameter variable\">--minerthreads</span> <span class=\"token number\">1</span> ^\n<span class=\"token parameter variable\">--etherbase</span> <span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>geth启动时命令行参数解释如下表:</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>–rpc</td>\n<td>开启JSON-RPC 服务，可供调用/调试访问。</td>\n</tr>\n<tr>\n<td>–rpcaddr</td>\n<td>本地监听JSON-RPC的地址。</td>\n</tr>\n<tr>\n<td>–rpcport</td>\n<td>本地监听JSON-RPC的端口。</td>\n</tr>\n<tr>\n<td>–prccorsdomain</td>\n<td>本地监听JSON-RPC允许的域名访问。</td>\n</tr>\n<tr>\n<td>–rpcapi</td>\n<td>允许提供的RPC服务模块，在示例中选择了数个模块加载。</td>\n</tr>\n<tr>\n<td>–nodiscover</td>\n<td>关闭自动发现节点，私有链开发时防止他人意外接入，可选择关闭该选项避免他人加入网络。</td>\n</tr>\n<tr>\n<td>–maxpeers</td>\n<td>允许最大节点链接数目。</td>\n</tr>\n<tr>\n<td>–networkid</td>\n<td>指定以太坊网络ID。</td>\n</tr>\n<tr>\n<td>–port</td>\n<td>监听以太坊节点之间P2P消息的TCP/UDP端口，默认30303。</td>\n</tr>\n<tr>\n<td>–mine</td>\n<td>节点启动挖矿功能，参与挖矿。</td>\n</tr>\n<tr>\n<td>–minerthreads</td>\n<td>挖矿的多线程配置，例子中配置为1个线程。</td>\n</tr>\n<tr>\n<td>–etherbase</td>\n<td>若启动挖矿功能，挖矿奖励的接受地址，例子中我们随便填了一个。</td>\n</tr>\n<tr>\n<td>console</td>\n<td>(可选) 启动后进入命令行模式，直接输入命令互动操作。</td>\n</tr>\n</tbody></table>\n<p>输入回车，启动成功！此时控制台会输出一组日志信息并有欢迎信息</p>\n<p>以后启动节点,只要直接执行这个脚本即可:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">console.cmd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入控制台</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth attach http://127.0.0.1:8545<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"Geth-启动结果解释\"><a href=\"#Geth-启动结果解释\" class=\"headerlink\" title=\"Geth 启动结果解释\"></a>Geth 启动结果解释</h4><ul>\n<li><strong>数据目录</strong>：你指定了 <code>--datadir ./data</code>，Geth 会将所有区块链数据和配置文件存储在该目录中。</li>\n<li><strong>RPC 服务</strong>：你启动了 HTTP-RPC 接口，监听地址为 <code>127.0.0.1</code>，端口为 <code>8545</code>。这意味着你可以通过 HTTP 方式与节点交互。</li>\n<li><strong>挖矿</strong>：你启用了 <code>--mine</code> 参数，使用一个线程（<code>--minerthreads 1</code>）进行挖矿，挖矿奖励会发送到地址 <code>0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82</code>。</li>\n<li><strong>禁止节点发现</strong>：你启用了 <code>--nodiscover</code> 参数，这意味着节点不会自动发现和连接其他节点（适用于私有链）。</li>\n</ul>\n<h4 id=\"后续如何使用这些配置\"><a href=\"#后续如何使用这些配置\" class=\"headerlink\" title=\"后续如何使用这些配置\"></a>后续如何使用这些配置</h4><h5 id=\"进入控制台后：\"><a href=\"#进入控制台后：\" class=\"headerlink\" title=\"进入控制台后：\"></a>进入控制台后：</h5><p>你可以直接在 Geth 控制台中输入命令与节点交互。以下是一些常见的操作：</p>\n<ul>\n<li><p><strong>查看挖矿状态</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span>hashrate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会返回当前的挖矿算力。</p>\n</li>\n<li><p><strong>查看当前区块高度</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会显示当前节点已同步的最新区块号。</p>\n</li>\n<li><p><strong>查看账户余额</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会显示指定账户的余额。</p>\n</li>\n<li><p><strong>停止挖矿</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会停止挖矿进程。</p>\n</li>\n<li><p><strong>发送交易</strong>： 你可以使用 <code>eth.sendTransaction</code> 发送交易。例如：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>解锁账户</strong>： 如果要发送交易，首先需要解锁账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h5 id=\"使用-RPC-接口：\"><a href=\"#使用-RPC-接口：\" class=\"headerlink\" title=\"使用 RPC 接口：\"></a>使用 RPC 接口：</h5><p>你启动了 RPC 服务，这意味着你可以通过 HTTP 与节点交互，而不必进入控制台。可以使用 <code>curl</code>、Web3.js、Python 等工具来与节点通信。下面是几个例子：</p>\n<ul>\n<li><p><strong>使用 <code>curl</code> 查看区块高度</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token parameter variable\">--data</span> <span class=\"token string\">'{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}'</span> http://127.0.0.1:8545<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会返回当前的区块高度。</p>\n</li>\n<li><p><strong>使用 Web3.js 与节点交互</strong>： 你可以使用 Web3.js 编写一个简单的脚本来获取节点信息。例如，安装 Web3.js：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> web3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后使用以下 JavaScript 代码获取节点的区块高度：</p>\n<pre class=\"line-numbers language-web-idl\" data-language=\"web-idl\"><code class=\"language-web-idl\"><span class=\"token keyword\">const</span> <span class=\"token class-name\">Web3</span> <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span>'web3'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token class-name\">web3</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">new</span> Web3<span class=\"token punctuation\">(</span>'http<span class=\"token operator\">:</span><span class=\"token comment\">//127.0.0.1:8545');</span>\n\nweb3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getBlockNumber<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>then<span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h5 id=\"手动添加其他节点：\"><a href=\"#手动添加其他节点：\" class=\"headerlink\" title=\"手动添加其他节点：\"></a>手动添加其他节点：</h5><p>如果你想手动连接其他节点，可以使用 <code>admin.addPeer</code> 命令。例如：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span><span class=\"token function\">addPeer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enode://publickey@ip:port\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将允许你将其他节点加入到网络中。</p>\n<h3 id=\"2-4-账户管理\"><a href=\"#2-4-账户管理\" class=\"headerlink\" title=\"2.4 账户管理\"></a>2.4 账户管理</h3><h4 id=\"2-4-1-查看账户列表\"><a href=\"#2-4-1-查看账户列表\" class=\"headerlink\" title=\"2.4.1 查看账户列表\"></a>2.4.1 查看账户列表</h4><p>在 geth 控制台,使用 eth 对象的 accounts 属性查看目前的账户列表:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.accounts  or personal.listAccounts\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-4-2-创建新账户\"><a href=\"#2-4-2-创建新账户\" class=\"headerlink\" title=\"2.4.2 创建新账户\"></a>2.4.2 创建新账户</h4><p>在 geth 控制台,使用 personal 对象的 newAccount()方法创建一个新账户,参数为你自己选择的密码:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> personal.newAccount<span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span>  \n<span class=\"token string\">\"0x6e1d438b00d5bb865c4d842e9c02549709130147\"</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>输出就是新创建的账户地址(公钥),你的输出不会和上面的示例相同。geth 会保存到数据目录下的 keystore 文件中。</p>\n<h4 id=\"2-4-3-查询账户余额\"><a href=\"#2-4-3-查询账户余额\" class=\"headerlink\" title=\"2.4.3 查询账户余额\"></a>2.4.3 查询账户余额</h4><p>在 geth 控制台,使用 personal 对象的 getBalance()方法获取挃定账户的余额,参数为账户地址:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.getBalance<span class=\"token punctuation\">(</span>eth.accounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  \n<span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>  或者直接输入账户地址:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.getBalance<span class=\"token punctuation\">(</span><span class=\"token string\">'0xd8bcf1324d566cbec5d3b67e6e14485b06a41d49'</span><span class=\"token punctuation\">)</span>  \n<span class=\"token number\">0</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">web3.fromWei<span class=\"token punctuation\">(</span>eth.getBalance<span class=\"token punctuation\">(</span>eth.accounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># 将wei换算成eth</span>\nweb3.toWei<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-4-4-挖矿\"><a href=\"#2-4-4-挖矿\" class=\"headerlink\" title=\"2.4.4 挖矿\"></a>2.4.4 挖矿</h4><p>私有链不用其他节点也能挖矿</p>\n<h5 id=\"1-启动和停止挖矿\"><a href=\"#1-启动和停止挖矿\" class=\"headerlink\" title=\"1. 启动和停止挖矿\"></a>1. <strong>启动和停止挖矿</strong></h5><h6 id=\"启动挖矿\"><a href=\"#启动挖矿\" class=\"headerlink\" title=\"启动挖矿\"></a>启动挖矿</h6><p>要开始挖矿，你可以使用以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">miner.start(threads)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>threads参数表示使用多少个线程进行挖矿。比如要用 1 个线程：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"停止挖矿\"><a href=\"#停止挖矿\" class=\"headerlink\" title=\"停止挖矿\"></a>停止挖矿</h6><p>要停止挖矿，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"2-查看挖矿状态\"><a href=\"#2-查看挖矿状态\" class=\"headerlink\" title=\"2. 查看挖矿状态\"></a>2. <strong>查看挖矿状态</strong></h5><h6 id=\"查看挖矿是否正在进行\"><a href=\"#查看挖矿是否正在进行\" class=\"headerlink\" title=\"查看挖矿是否正在进行\"></a>查看挖矿是否正在进行</h6><p>你可以通过以下命令检查节点当前是否正在挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>mining<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>这个命令返回 <code>true</code> 表示节点正在挖矿，返回 <code>false</code> 表示节点没有在挖矿。</li>\n</ul>\n<h6 id=\"查看当前的哈希算力\"><a href=\"#查看当前的哈希算力\" class=\"headerlink\" title=\"查看当前的哈希算力\"></a>查看当前的哈希算力</h6><p>使用以下命令查看节点的哈希算力：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span>hashrate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>返回的数值表示每秒计算的哈希数，以 H/s（哈希每秒）为单位。</li>\n</ul>\n<h6 id=\"查看矿工账户\"><a href=\"#查看矿工账户\" class=\"headerlink\" title=\"查看矿工账户\"></a>查看矿工账户</h6><p>使用以下命令查看当前挖矿收益的账户（即矿工地址）：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>coinbase<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"查看当前区块高度\"><a href=\"#查看当前区块高度\" class=\"headerlink\" title=\"查看当前区块高度\"></a>查看当前区块高度</h6><p>你可以通过以下命令查看节点同步到的最新区块高度：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"3-设置矿工账户\"><a href=\"#3-设置矿工账户\" class=\"headerlink\" title=\"3. 设置矿工账户\"></a>3. <strong>设置矿工账户</strong></h5><p>在挖矿前，通常需要设置 <code>coinbase</code>（即矿工账户地址），挖矿的奖励会发送到这个地址。你可以使用以下命令设置 <code>coinbase</code>：</p>\n<h6 id=\"设置矿工账户\"><a href=\"#设置矿工账户\" class=\"headerlink\" title=\"设置矿工账户\"></a>设置矿工账户</h6><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">setEtherbase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAccountAddress\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>这个命令将指定的账户设置为矿工账户。</li>\n</ul>\n<h5 id=\"4-挖矿奖励和账户\"><a href=\"#4-挖矿奖励和账户\" class=\"headerlink\" title=\"4. 挖矿奖励和账户\"></a>4. <strong>挖矿奖励和账户</strong></h5><h6 id=\"查看当前账户的余额\"><a href=\"#查看当前账户的余额\" class=\"headerlink\" title=\"查看当前账户的余额\"></a>查看当前账户的余额</h6><p>要查看矿工账户的余额，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>coinbase<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"解锁矿工账户\"><a href=\"#解锁矿工账户\" class=\"headerlink\" title=\"解锁矿工账户\"></a>解锁矿工账户</h6><p>如果你希望自动将矿工奖励发送到某个账户，你可能需要解锁该账户，尤其是在你打算用这个账户发送交易时：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>coinbase<span class=\"token punctuation\">,</span> <span class=\"token string\">\"yourpassword\"</span><span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>duration</code> 是账户解锁的时间，单位是秒。</li>\n</ul>\n<h5 id=\"5-与挖矿相关的高级操作\"><a href=\"#5-与挖矿相关的高级操作\" class=\"headerlink\" title=\"5. 与挖矿相关的高级操作\"></a>5. <strong>与挖矿相关的高级操作</strong></h5><h6 id=\"设置挖矿目标难度\"><a href=\"#设置挖矿目标难度\" class=\"headerlink\" title=\"设置挖矿目标难度\"></a>设置挖矿目标难度</h6><p>在私有链上，你可以通过修改 <code>genesis.json</code> 文件中的 <code>difficulty</code> 值来控制挖矿难度。在 Geth 运行期间，无法直接修改目标难度。</p>\n<h6 id=\"查看挖到的区块\"><a href=\"#查看挖到的区块\" class=\"headerlink\" title=\"查看挖到的区块\"></a>查看挖到的区块</h6><p>使用以下命令可以查看最新的区块信息：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'latest'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>eth.getBlock()</code> 返回的区块信息包含以下常见字段：</p>\n<ul>\n<li><code>number</code>: 区块号</li>\n<li><code>hash</code>: 区块的哈希值</li>\n<li><code>parentHash</code>: 父区块的哈希</li>\n<li><code>nonce</code>: 区块中工作量证明的 nonce 值</li>\n<li><code>miner</code>: 挖出该区块的矿工地址</li>\n<li><code>difficulty</code>: 区块的挖矿难度</li>\n<li><code>totalDifficulty</code>: 该区块链上到当前区块为止的总难度</li>\n<li><code>size</code>: 区块大小（以字节为单位）</li>\n<li><code>gasLimit</code>: 该区块的 gas 上限</li>\n<li><code>gasUsed</code>: 该区块使用的 gas</li>\n<li><code>timestamp</code>: 区块的时间戳</li>\n<li><code>transactions</code>: 包含在该区块中的交易数组</li>\n<li><code>uncles</code>: 包含该区块的叔块数组</li>\n</ul>\n<h6 id=\"自动挖矿新交易\"><a href=\"#自动挖矿新交易\" class=\"headerlink\" title=\"自动挖矿新交易\"></a>自动挖矿新交易</h6><p>Geth 提供一个选项可以在有新交易进入交易池时自动开始挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">setAuto</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>设置为 <code>1</code> 后，每当交易池中有新交易时，节点将自动开始挖矿。</li>\n</ul>\n<h5 id=\"6-挖矿的调试工具\"><a href=\"#6-挖矿的调试工具\" class=\"headerlink\" title=\"6. 挖矿的调试工具\"></a>6. <strong>挖矿的调试工具</strong></h5><h6 id=\"查看交易池中的交易\"><a href=\"#查看交易池中的交易\" class=\"headerlink\" title=\"查看交易池中的交易\"></a>查看交易池中的交易</h6><p>如果你想查看待处理的交易，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>返回的信息会告诉你有多少笔交易在交易池中等待执行。</li>\n</ul>\n<h6 id=\"查看挖矿日志\"><a href=\"#查看挖矿日志\" class=\"headerlink\" title=\"查看挖矿日志\"></a>查看挖矿日志</h6><p>挖矿日志可以帮助你跟踪挖矿状态和进度。在 Geth 启动时，你可以通过设置日志等级来查看挖矿详细信息。例如，使用 <code>--verbosity</code> 参数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">geth <span class=\"token operator\">--</span>verbosity <span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这样，挖矿时的日志会显示更多详细的挖矿信息。</p>\n<h5 id=\"7-挖矿常见问题\"><a href=\"#7-挖矿常见问题\" class=\"headerlink\" title=\"7. 挖矿常见问题\"></a>7. <strong>挖矿常见问题</strong></h5><ul>\n<li><p><strong>无法开始挖矿？</strong> 如果你无法开始挖矿，可能是由于账户未解锁。确保你已解锁矿工账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>coinbase<span class=\"token punctuation\">,</span> <span class=\"token string\">\"yourpassword\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>矿工奖励没有到账？</strong> 矿工奖励发放需要时间，尤其是在主网上挖矿时，奖励只有在挖到的区块被确认后才能到账。</p>\n</li>\n</ul>\n<h5 id=\"8-挖矿命令汇总\"><a href=\"#8-挖矿命令汇总\" class=\"headerlink\" title=\"8. 挖矿命令汇总\"></a>8. <strong>挖矿命令汇总</strong></h5><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>miner.start(threads)</code></td>\n<td>启动挖矿，<code>threads</code> 为使用的线程数</td>\n</tr>\n<tr>\n<td><code>miner.stop()</code></td>\n<td>停止挖矿</td>\n</tr>\n<tr>\n<td><code>miner.hashrate</code></td>\n<td>查看当前的挖矿算力</td>\n</tr>\n<tr>\n<td><code>eth.mining</code></td>\n<td>查看是否正在挖矿</td>\n</tr>\n<tr>\n<td><code>miner.setEtherbase(\"address\")</code></td>\n<td>设置矿工账户</td>\n</tr>\n<tr>\n<td><code>eth.getBalance(eth.coinbase)</code></td>\n<td>查看矿工账户的余额</td>\n</tr>\n<tr>\n<td><code>eth.blockNumber</code></td>\n<td>查看当前区块高度</td>\n</tr>\n<tr>\n<td><code>eth.getBlock('latest')</code></td>\n<td>查看最新的区块信息</td>\n</tr>\n<tr>\n<td><code>txpool.status</code></td>\n<td>查看交易池中的待处理交易</td>\n</tr>\n<tr>\n<td><code>personal.unlockAccount(eth.coinbase, \"password\", 600)</code></td>\n<td>解锁矿工账户</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-4-5-解锁账户\"><a href=\"#2-4-5-解锁账户\" class=\"headerlink\" title=\"2.4.5 解锁账户\"></a>2.4.5 解锁账户</h4><p>在部署合约时需要一个解锁的账户。</p>\n<p>在 geth 控制台使用 <code>personal</code> 对象的 <code>unlockAccount()</code>  方法来解锁挃定的账户,参数为账户地址和账户密码(在创建账户时挃定的那个密码):  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&gt;</span> eth.unlockAccount<span class=\"token punctuation\">(</span>eth.accounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span>  \n<span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-5-交易\"><a href=\"#2-5-交易\" class=\"headerlink\" title=\"2.5 交易\"></a>2.5 交易</h3><h4 id=\"1-发送交易\"><a href=\"#1-发送交易\" class=\"headerlink\" title=\"1. 发送交易\"></a>1. <strong>发送交易</strong></h4><h5 id=\"使用-eth-sendTransaction-发送交易\"><a href=\"#使用-eth-sendTransaction-发送交易\" class=\"headerlink\" title=\"使用 eth.sendTransaction 发送交易\"></a>使用 <code>eth.sendTransaction</code> 发送交易</h5><p>发送交易时，你可以使用 <code>eth.sendTransaction</code> 命令。示例如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>from</code>: 发送者账户的地址，必须先解锁账户。</li>\n<li><code>to</code>: 接收者账户的地址。</li>\n<li><code>value</code>: 发送的金额，单位是 wei（可以使用 <code>web3.toWei</code> 转换成 ether）。</li>\n<li><code>gas</code>: （可选）指定交易的 gas 上限，默认为 <code>21000</code>，适用于普通转账。</li>\n<li><code>gasPrice</code>: （可选）指定每单位 gas 的价格，默认为当前网络的 gas 价格。</li>\n<li><code>data</code>: （可选）包含用于合约调用的数据（智能合约交易时用到）。</li>\n</ul>\n<h5 id=\"解锁账户\"><a href=\"#解锁账户\" class=\"headerlink\" title=\"解锁账户\"></a>解锁账户</h5><p>在发送交易前，如果账户被锁定，你需要解锁账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>600</code> 表示账户将保持解锁 600 秒。</li>\n</ul>\n<h4 id=\"2-查询交易\"><a href=\"#2-查询交易\" class=\"headerlink\" title=\"2. 查询交易\"></a>2. <strong>查询交易</strong></h4><h5 id=\"根据交易哈希查询交易信息\"><a href=\"#根据交易哈希查询交易信息\" class=\"headerlink\" title=\"根据交易哈希查询交易信息\"></a>根据交易哈希查询交易信息</h5><p>发送交易后，你可以使用交易哈希查询交易的详细信息：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xTransactionHash\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将返回交易的详细信息，包括发送者、接收者、金额、gas 费用等。</p>\n<p><code>eth.getTransaction()</code> 会返回一个包含该交易详细信息的对象，常见的字段包括：</p>\n<ul>\n<li><code>blockHash</code>: 该交易所属区块的哈希。</li>\n<li><code>blockNumber</code>: 该交易所属区块的区块号。</li>\n<li><code>from</code>: 发起该交易的地址。</li>\n<li><code>gas</code>: 该交易消耗的 gas 限额。</li>\n<li><code>gasPrice</code>: 该交易的 gas 价格。</li>\n<li><code>hash</code>: 该交易的哈希值。</li>\n<li><code>input</code>: 交易的数据字段，通常是合约调用时传递的数据。</li>\n<li><code>nonce</code>: 发送方账户的 nonce 值，表示该账户发起的交易计数。</li>\n<li><code>to</code>: 交易接收者的地址，如果是合约创建交易则为 <code>null</code>。</li>\n<li><code>transactionIndex</code>: 该交易在区块中的索引。</li>\n<li><code>value</code>: 该交易中发送的以太币数量（以 wei 为单位）。</li>\n</ul>\n<h5 id=\"交易未打包\"><a href=\"#交易未打包\" class=\"headerlink\" title=\"交易未打包\"></a>交易未打包</h5><p><strong><code>blockHash</code>: <code>null</code></strong> 当交易尚未被打包时，<code>blockHash</code> 的值为 <code>null</code>，因为该交易还没有被包含在任何区块中。</p>\n<p><strong><code>blockNumber</code>: <code>null</code></strong> 同样，由于交易未被打包，<code>blockNumber</code> 也会是 <code>null</code>，表示该交易还未属于任何区块。</p>\n<p><strong><code>transactionIndex</code>: <code>null</code></strong> 因为交易还没有被打包到区块，因此也没有在区块中的位置，<code>transactionIndex</code> 为 <code>null</code>。</p>\n<p><strong>其他字段</strong> 其他交易的基本信息仍然可以被查询到，包括：</p>\n<ul>\n<li><code>from</code>: 发送者的地址。</li>\n<li><code>to</code>: 接收者的地址（或者 <code>null</code> 如果是合约创建交易）。</li>\n<li><code>value</code>: 发送的以太币数量（以 wei 为单位）。</li>\n<li><code>gas</code>: 该交易所消耗的 Gas 限额。</li>\n<li><code>gasPrice</code>: Gas 价格。</li>\n<li><code>nonce</code>: 发送者账户的交易计数。</li>\n<li><code>input</code>: 交易中包含的数据（如合约调用时的参数）。</li>\n</ul>\n<h5 id=\"根据交易哈希查询交易收据\"><a href=\"#根据交易哈希查询交易收据\" class=\"headerlink\" title=\"根据交易哈希查询交易收据\"></a>根据交易哈希查询交易收据</h5><p>要查看交易是否成功被打包到区块中，可以使用以下命令查询交易收据：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getTransactionReceipt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xTransactionHash\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回的交易收据包含以下信息：</p>\n<ul>\n<li><code>status</code>: 交易的执行状态，<code>1</code> 表示成功，<code>0</code> 表示失败。</li>\n<li><code>blockHash</code>: 包含该交易的区块的哈希。</li>\n<li><code>blockNumber</code>: 区块号。</li>\n<li><code>transactionHash</code>: 交易哈希。</li>\n<li><code>gasUsed</code>: 此交易消耗的 gas 量。</li>\n<li><code>logs</code>: 该交易的事件日志列表</li>\n</ul>\n<h4 id=\"3-创建自定义交易\"><a href=\"#3-创建自定义交易\" class=\"headerlink\" title=\"3. 创建自定义交易\"></a>3. <strong>创建自定义交易</strong></h4><p>你可以使用 <code>eth.sendTransaction</code> 创建自定义交易，除了 <code>from</code> 和 <code>to</code> 之外，还可以指定 <code>gas</code>、<code>gasPrice</code> 和 <code>data</code> 等字段：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gas</span><span class=\"token operator\">:</span> <span class=\"token number\">21000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasPrice</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gwei\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSomeData\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>gas</code>: 设置交易的 gas 限制，确保足够高。</li>\n<li><code>gasPrice</code>: 设置每单位 gas 的价格，单位是 wei。</li>\n</ul>\n<h5 id=\"自定义-gas-价格\"><a href=\"#自定义-gas-价格\" class=\"headerlink\" title=\"自定义 gas 价格\"></a>自定义 gas 价格</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gas</span><span class=\"token operator\">:</span> <span class=\"token number\">21000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasPrice</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gwei\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这将设置一个较高的 gas 价格，以加快交易打包。</p>\n<h4 id=\"4-离线签名交易\"><a href=\"#4-离线签名交易\" class=\"headerlink\" title=\"4. 离线签名交易\"></a>4. <strong>离线签名交易</strong></h4><p>在某些场景下，你可能希望在离线状态下生成交易并签名，然后再发送。以下是离线签名交易的步骤：</p>\n<h5 id=\"构建未签名交易\"><a href=\"#构建未签名交易\" class=\"headerlink\" title=\"构建未签名交易\"></a>构建未签名交易</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> rawTx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">nonce</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getTransactionCount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasPrice</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token string\">'20'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gwei'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gasLimit</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span><span class=\"token number\">21000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toHex</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ether'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"签名交易\"><a href=\"#签名交易\" class=\"headerlink\" title=\"签名交易\"></a>签名交易</h5><p>使用 <code>eth.accounts.signTransaction</code> 函数来签名交易：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> signedTx <span class=\"token operator\">=</span> eth<span class=\"token punctuation\">.</span>accounts<span class=\"token punctuation\">.</span><span class=\"token function\">signTransaction</span><span class=\"token punctuation\">(</span>rawTx<span class=\"token punctuation\">,</span> <span class=\"token string\">\"0xPrivateKey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"发送已签名交易\"><a href=\"#发送已签名交易\" class=\"headerlink\" title=\"发送已签名交易\"></a>发送已签名交易</h5><p>发送已签名的交易，可以使用 <code>eth.sendSignedTransaction</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendSignedTransaction</span><span class=\"token punctuation\">(</span>signedTx<span class=\"token punctuation\">.</span>rawTransaction<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'receipt'</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-批量发送交易\"><a href=\"#5-批量发送交易\" class=\"headerlink\" title=\"5. 批量发送交易\"></a>5. <strong>批量发送交易</strong></h4><p>如果你需要一次发送多笔交易，你可以在脚本中批量调用 <code>eth.sendTransaction</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-检查账户余额\"><a href=\"#6-检查账户余额\" class=\"headerlink\" title=\"6. 检查账户余额\"></a>6. <strong>检查账户余额</strong></h4><p>你可以随时使用以下命令检查账户的余额：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xAddress\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>返回值为账户的余额，单位是 wei。如果你想以以太币（ether）显示，可以使用以下命令：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span><span class=\"token function\">fromWei</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xAddress\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"7-检查交易池中的交易\"><a href=\"#7-检查交易池中的交易\" class=\"headerlink\" title=\"7. 检查交易池中的交易\"></a>7. <strong>检查交易池中的交易</strong></h4><p>交易被发送后，可能会在交易池中等待确认。你可以使用以下命令查看交易池中的状态：</p>\n<h5 id=\"检查挂起的交易\"><a href=\"#检查挂起的交易\" class=\"headerlink\" title=\"检查挂起的交易\"></a>检查挂起的交易</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会返回交易池中的待处理和挂起的交易数量。</p>\n<h5 id=\"查看具体的挂起交易\"><a href=\"#查看具体的挂起交易\" class=\"headerlink\" title=\"查看具体的挂起交易\"></a>查看具体的挂起交易</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>inspect<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这会显示详细的待处理和挂起交易的信息。</p>\n<h4 id=\"8-检查当前的-gas-价格\"><a href=\"#8-检查当前的-gas-价格\" class=\"headerlink\" title=\"8. 检查当前的 gas 价格\"></a>8. <strong>检查当前的 gas 价格</strong></h4><p>你可以使用以下命令来获取当前网络建议的 gas 价格：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>gasPrice<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>返回的值是以 wei 为单位的当前 gas 价格。</li>\n</ul>\n<h4 id=\"9-监听区块和交易事件\"><a href=\"#9-监听区块和交易事件\" class=\"headerlink\" title=\"9. 监听区块和交易事件\"></a>9. <strong>监听区块和交易事件</strong></h4><p>你可以通过监听事件来实时监控交易状态。例如，当新区块生成时，可以收到通知：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newBlockHeaders'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>error<span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">subscriptionId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>subscriptionId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blockHeader</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>blockHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"10-交易命令汇总\"><a href=\"#10-交易命令汇总\" class=\"headerlink\" title=\"10. 交易命令汇总\"></a>10. <strong>交易命令汇总</strong></h4><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>eth.sendTransaction({...})</code></td>\n<td>发送普通或自定义交易</td>\n</tr>\n<tr>\n<td><code>personal.unlockAccount(...)</code></td>\n<td>解锁账户以便发送交易</td>\n</tr>\n<tr>\n<td><code>eth.getTransaction(\"txHash\")</code></td>\n<td>根据哈希查询交易详情</td>\n</tr>\n<tr>\n<td><code>eth.getTransactionReceipt(\"txHash\")</code></td>\n<td>根据哈希查询交易收据</td>\n</tr>\n<tr>\n<td><code>eth.getBalance(\"0xAddress\")</code></td>\n<td>查询账户余额</td>\n</tr>\n<tr>\n<td><code>txpool.status</code></td>\n<td>查看交易池的状态</td>\n</tr>\n<tr>\n<td><code>eth.gasPrice</code></td>\n<td>获取当前的 gas 价格</td>\n</tr>\n<tr>\n<td><code>eth.accounts.signTransaction({...}, \"privateKey\")</code></td>\n<td>离线签名交易</td>\n</tr>\n<tr>\n<td><code>eth.sendSignedTransaction(\"signedTx\")</code></td>\n<td>发送已签名交易</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-6-私链多个节点连接的详细命令\"><a href=\"#2-6-私链多个节点连接的详细命令\" class=\"headerlink\" title=\"2.6 私链多个节点连接的详细命令\"></a>2.6 私链多个节点连接的详细命令</h3><p>在以太坊私链中，多个节点可以通过网络连接形成一个共识网络。在这种情况下，节点之间需要能够发现彼此，并保持同步。以下是详细的步骤和命令，用于设置并连接多个 Geth 节点到同一个私链网络。</p>\n<h4 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. <strong>准备工作</strong></h4><h5 id=\"创建-genesis-json-文件\"><a href=\"#创建-genesis-json-文件\" class=\"headerlink\" title=\"创建 genesis.json 文件\"></a>创建 <code>genesis.json</code> 文件</h5><p>在私链中，所有节点需要共享同一个创世区块 (<code>genesis block</code>)。首先，创建一个 <code>genesis.json</code> 文件，它定义了私链的创世区块和区块链的初始配置。</p>\n<p>以下是一个示例 <code>genesis.json</code> 文件：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">987</span><span class=\"token punctuation\">,</span> \n    <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> \n    <span class=\"token property\">\"eip150Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"byzantiumBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"constantinopleBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"petersburgBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"0xYourAccountAddress\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1000000000000000000000\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>chainId</code>: 为私链设置一个独特的网络 ID（不同于主网和测试网）。</li>\n<li><code>difficulty</code>: 设置初始挖矿难度，数值越低，挖矿越容易。</li>\n<li><code>gasLimit</code>: 设置每个区块的 gas 上限。</li>\n<li><code>alloc</code>: 为指定账户分配初始余额。</li>\n</ul>\n<h4 id=\"2-初始化-Geth-节点\"><a href=\"#2-初始化-Geth-节点\" class=\"headerlink\" title=\"2. 初始化 Geth 节点\"></a>2. <strong>初始化 Geth 节点</strong></h4><p>每个节点在第一次启动时都需要初始化私链。假设你已经有了 Geth，并将数据目录设置为 <code>./data</code>，可以使用以下命令初始化节点：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data init genesis.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>--datadir ./data</code>: 指定节点的数据目录。</li>\n<li><code>init genesis.json</code>: 使用 <code>genesis.json</code> 文件初始化链。</li>\n</ul>\n<p>每个私链节点都需要运行此命令。</p>\n<h4 id=\"3-启动节点\"><a href=\"#3-启动节点\" class=\"headerlink\" title=\"3. 启动节点\"></a>3. <strong>启动节点</strong></h4><p>使用以下命令启动每个节点，并确保每个节点都指定相同的 <code>--networkid</code> 和使用 <code>--port</code> 参数设置不同的端口。</p>\n<h5 id=\"启动第一个节点（节点A）\"><a href=\"#启动第一个节点（节点A）\" class=\"headerlink\" title=\"启动第一个节点（节点A）\"></a>启动第一个节点（节点A）</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8545</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>--datadir ./data</code>: 指定节点的数据目录。</li>\n<li><code>--networkid 987</code>: 设置网络 ID，与 <code>genesis.json</code> 中的 <code>chainId</code> 保持一致。</li>\n<li><code>--port 30303</code>: 设置 P2P 连接的监听端口。</li>\n<li><code>--nodiscover</code>: 禁用节点发现功能（如果你想手动连接节点）。</li>\n<li><code>--http</code>: 启用 HTTP-RPC 服务，便于远程访问节点。</li>\n<li><code>console</code>: 启动 Geth 控制台以便执行命令。</li>\n</ul>\n<h5 id=\"启动第二个节点（节点B）\"><a href=\"#启动第二个节点（节点B）\" class=\"headerlink\" title=\"启动第二个节点（节点B）\"></a>启动第二个节点（节点B）</h5><p>节点B可以在另一台机器上，也可以是本机上的另一个实例，只需要不同的数据目录和端口：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./node2data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30304</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8546</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><code>--datadir ./node2data</code>: 为节点B设置不同的数据目录。</li>\n<li><code>--port 30304</code>: 节点B的 P2P 端口必须与节点A不同。</li>\n<li><code>--http.port 8546</code>: HTTP-RPC 服务端口与节点A不同。</li>\n</ul>\n<h4 id=\"4-手动连接节点\"><a href=\"#4-手动连接节点\" class=\"headerlink\" title=\"4. 手动连接节点\"></a>4. <strong>手动连接节点</strong></h4><p>因为 <code>--nodiscover</code> 禁用了自动发现，必须手动连接节点。</p>\n<h5 id=\"获取节点的-enode-信息\"><a href=\"#获取节点的-enode-信息\" class=\"headerlink\" title=\"获取节点的 enode 信息\"></a>获取节点的 <code>enode</code> 信息</h5><p>在节点A的控制台中，输入以下命令获取节点A的 <code>enode</code> 地址：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span>nodeInfo<span class=\"token punctuation\">.</span>enode<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出类似于：</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token string\">\"enode://1234567890abcdef@127.0.0.1:30303?discport=0\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个地址是节点A的唯一标识，后面的 <code>@127.0.0.1:30303</code> 表示节点A运行的 IP 和端口。</p>\n<h5 id=\"连接节点B到节点A\"><a href=\"#连接节点B到节点A\" class=\"headerlink\" title=\"连接节点B到节点A\"></a>连接节点B到节点A</h5><p>在节点B的控制台中，使用 <code>admin.addPeer</code> 命令连接到节点A：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span><span class=\"token function\">addPeer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enode://1234567890abcdef@127.0.0.1:30303\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>将 <code>\"enode://1234567890abcdef@127.0.0.1:30303\"</code> 替换为节点A的 <code>enode</code> 地址。</li>\n</ul>\n<h5 id=\"验证节点是否连接\"><a href=\"#验证节点是否连接\" class=\"headerlink\" title=\"验证节点是否连接\"></a>验证节点是否连接</h5><p>在任何一个节点的控制台中，使用以下命令检查当前连接的对等节点数量：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">net<span class=\"token punctuation\">.</span>peerCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>如果节点成功连接，该命令将返回大于 <code>0</code> 的值。</li>\n</ul>\n<p>你还可以使用以下命令查看当前的连接节点列表：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span>peers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"5-同步和挖矿\"><a href=\"#5-同步和挖矿\" class=\"headerlink\" title=\"5. 同步和挖矿\"></a>5. <strong>同步和挖矿</strong></h4><p>在节点A或节点B中，可以启动挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 使用 1 个线程进行挖矿</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>挖到的区块会自动同步到其他节点。你可以通过以下命令查看区块高度：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"6-账户和交易管理\"><a href=\"#6-账户和交易管理\" class=\"headerlink\" title=\"6. 账户和交易管理\"></a>6. <strong>账户和交易管理</strong></h4><h5 id=\"创建新账户\"><a href=\"#创建新账户\" class=\"headerlink\" title=\"创建新账户\"></a>创建新账户</h5><p>在 Geth 控制台中，你可以为每个节点创建新账户：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">newAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"解锁账户-1\"><a href=\"#解锁账户-1\" class=\"headerlink\" title=\"解锁账户\"></a>解锁账户</h5><p>发送交易前需要解锁账户：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAccountAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"发送交易\"><a href=\"#发送交易\" class=\"headerlink\" title=\"发送交易\"></a>发送交易</h5><p>在节点之间发送交易，可以使用 <code>eth.sendTransaction</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xSenderAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xRecipientAddress\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>from</code>: 发送者账户地址。</li>\n<li><code>to</code>: 接收者账户地址。</li>\n<li><code>value</code>: 转账金额，单位为 wei。</li>\n</ul>\n<h4 id=\"7-设置启动脚本\"><a href=\"#7-设置启动脚本\" class=\"headerlink\" title=\"7. 设置启动脚本\"></a>7. <strong>设置启动脚本</strong></h4><p>为了方便，你可以将节点启动命令放入 <code>.bat</code> 或 <code>.cmd</code> 文件中，在 Windows 上直接双击执行。例如，创建一个 <code>start_nodeA.bat</code> 文件，内容为：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8545</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后创建 <code>start_nodeB.bat</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./node2data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30304</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--http</span> <span class=\"token parameter variable\">--http.addr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--http.port</span> <span class=\"token number\">8546</span> <span class=\"token parameter variable\">--http.corsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--http.api</span> <span class=\"token string\">\"eth,net,web3,personal,admin\"</span> console<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"8-多节点连接的总结步骤\"><a href=\"#8-多节点连接的总结步骤\" class=\"headerlink\" title=\"8. 多节点连接的总结步骤\"></a>8. <strong>多节点连接的总结步骤</strong></h4><ol>\n<li>创建 <code>genesis.json</code> 文件，并初始化所有节点。</li>\n<li>启动每个节点，确保使用相同的 <code>networkid</code> 和不同的 <code>port</code>。</li>\n<li>使用 <code>admin.addPeer</code> 手动连接节点，确保它们可以互相通信。</li>\n<li>启动挖矿，并通过 <code>miner.start()</code> 命令进行区块生成。</li>\n<li>使用 <code>admin.peers</code> 和 <code>net.peerCount</code> 查看连接状态。</li>\n</ol>\n<p>通过这些步骤，你可以在私链上搭建多个节点的网络，节点之间可以互相同步区块、挖矿和发送交易。</p>\n<h2 id=\"三、构建示例项目\"><a href=\"#三、构建示例项目\" class=\"headerlink\" title=\"三、构建示例项目\"></a>三、构建示例项目</h2><h3 id=\"创建-Truffle-项目\"><a href=\"#创建-Truffle-项目\" class=\"headerlink\" title=\"创建 Truffle 项目\"></a>创建 Truffle 项目</h3><ol>\n<li><h4 id=\"创建项目目录：\"><a href=\"#创建项目目录：\" class=\"headerlink\" title=\"创建项目目录：\"></a><strong>创建项目目录</strong>：</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> my-dapp\n<span class=\"token builtin class-name\">cd</span> my-dapp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><h4 id=\"初始化-Truffle-项目：\"><a href=\"#初始化-Truffle-项目：\" class=\"headerlink\" title=\"初始化 Truffle 项目：\"></a><strong>初始化 Truffle 项目</strong>：</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle init or truffle.cmd unbox webpack <span class=\"token comment\">#后者用 webpack 模版初始化项目骨架结构</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装项目依赖的 NPM 包 ，执行以下命令安装 npm 包:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> app\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"修改-Truffle-配置\"><a href=\"#修改-Truffle-配置\" class=\"headerlink\" title=\"修改 Truffle 配置\"></a>修改 Truffle 配置</h3><p>在项目根目录下找到 <code>truffle-config.js</code> 文件，并修改如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">networks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">development</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 根据实际情况设置</span>\n      <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">8545</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">// 根据实际情况设置</span>\n      <span class=\"token literal-property property\">network_id</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 匹配任何网络 ID</span>\n      <span class=\"token literal-property property\">gas</span><span class=\"token operator\">:</span> <span class=\"token number\">3000000</span>        <span class=\"token comment\">// 设置最大 gas 限制</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">compilers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">solc</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">version</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.8.0\"</span>   <span class=\"token comment\">// 指定 Solidity 编译器版本</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"编写智能合约\"><a href=\"#编写智能合约\" class=\"headerlink\" title=\"编写智能合约\"></a>编写智能合约</h3><p>在 <code>contracts</code> 目录下创建一个新的合约文件，例如 <code>MyContract.sol</code>：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyContract</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> message<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> initialMessage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        message <span class=\"token operator\">=</span> initialMessage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> newMessage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        message <span class=\"token operator\">=</span> newMessage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"创建迁移文件\"><a href=\"#创建迁移文件\" class=\"headerlink\" title=\"创建迁移文件\"></a>创建迁移文件</h3><p>在 <code>migrations</code> 目录下创建一个新的迁移文件，例如 <code>2_deploy_my_contract.js</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContract <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deployer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContract<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"1-默认迁移行为\"><a href=\"#1-默认迁移行为\" class=\"headerlink\" title=\"1. 默认迁移行为\"></a>1. 默认迁移行为</h4><p>当你运行以下命令时：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>Truffle 会按照 <code>migrations</code> 目录中脚本的顺序自动部署所有合约。每个脚本的文件名通常以数字开头，以确定部署顺序。例如：</p>\n<ul>\n<li><code>1_initial_migration.js</code></li>\n<li><code>2_deploy_contracts.js</code></li>\n</ul>\n<h4 id=\"2-部署特定合约\"><a href=\"#2-部署特定合约\" class=\"headerlink\" title=\"2. 部署特定合约\"></a>2. 部署特定合约</h4><p>如果你只想部署特定的合约，可以按照以下步骤进行：</p>\n<h5 id=\"2-1-创建特定迁移文件\"><a href=\"#2-1-创建特定迁移文件\" class=\"headerlink\" title=\"2.1 创建特定迁移文件\"></a>2.1 创建特定迁移文件</h5><p>你可以在 <code>migrations</code> 目录中创建新的迁移文件，只包含要部署的合约。例如，假设你只想部署 <code>MyContract</code> 合约，你可以创建一个新的迁移文件，例如 <code>3_deploy_my_contract.js</code>，内容如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContract <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deployer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContract<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-2-使用-f-参数\"><a href=\"#2-2-使用-f-参数\" class=\"headerlink\" title=\"2.2 使用 --f 参数\"></a>2.2 使用 <code>--f</code> 参数</h5><p>如果你想只运行特定的迁移文件，可以使用 <code>--f</code> 参数（<code>--f</code> 后接文件的序号）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--f</span> <span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将只运行 <code>3_deploy_my_contract.js</code> 文件中的迁移脚本。</p>\n<h4 id=\"3-回滚并重新部署\"><a href=\"#3-回滚并重新部署\" class=\"headerlink\" title=\"3. 回滚并重新部署\"></a>3. 回滚并重新部署</h4><p>如果你需要重新部署某个合约，可以使用 <code>--reset</code> 参数，这将重新运行所有的迁移：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--reset</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果只想回滚到某个特定迁移并重新部署，你可以使用 <code>--to</code> 参数：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--to</span> <span class=\"token number\">2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将回滚到并重新部署到第二个迁移（<code>2_deploy_contracts.js</code>）为止的所有迁移。</p>\n<h4 id=\"4-部署的选择性控制\"><a href=\"#4-部署的选择性控制\" class=\"headerlink\" title=\"4. 部署的选择性控制\"></a>4. 部署的选择性控制</h4><p>如果你的合约之间存在依赖关系（例如，一个合约依赖于另一个合约），你应该确保按照适当的顺序部署。可以在迁移脚本中引用之前已经部署的合约：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContractA <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContractA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MyContractB <span class=\"token operator\">=</span> artifacts<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyContractB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deployer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContractA<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> instanceA <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> MyContractA<span class=\"token punctuation\">.</span><span class=\"token function\">deployed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// 部署时传递 MyContractA 的地址</span>\n  <span class=\"token keyword\">await</span> deployer<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>MyContractB<span class=\"token punctuation\">,</span> instanceA<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"编译合约\"><a href=\"#编译合约\" class=\"headerlink\" title=\"编译合约\"></a>编译合约</h3><p>在部署合约之前，您需要确保智能合约已被编译。您可以通过以下命令来编译合约：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle compile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"自动编译与部署\"><a href=\"#自动编译与部署\" class=\"headerlink\" title=\"自动编译与部署\"></a>自动编译与部署</h4><p>在执行 <code>truffle migrate</code> 时，Truffle 会自动检查合约是否已经编译。如果合约文件有更改或未编译，Truffle 会自动执行编译。因此，在以下情况下，您可以不手动执行编译命令：</p>\n<ul>\n<li><strong>合约未编译</strong>：当您修改了合约后，执行 <code>truffle migrate</code> 时会自动编译。</li>\n<li><strong>合约已经是最新</strong>：如果合约未更改并且已经编译，则可以直接执行迁移命令。</li>\n</ul>\n<h4 id=\"如何确认编译状态\"><a href=\"#如何确认编译状态\" class=\"headerlink\" title=\"如何确认编译状态\"></a>如何确认编译状态</h4><p>如果您不确定合约是否已经编译，可以检查 <code>build/contracts</code> 目录。编译后，该目录下应该会生成合约的 JSON 文件（包含字节码和 ABI）。例如，<code>MyContract.json</code> 文件中应该有相关信息。</p>\n<p>如果您希望在每次部署时都重新编译合约，可以在 <code>migrate</code> 命令中使用 <code>--compile-all</code> 参数，如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate --compile-all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将强制 Truffle 重新编译所有合约。</p>\n<h3 id=\"启动-Geth-节点\"><a href=\"#启动-Geth-节点\" class=\"headerlink\" title=\"启动 Geth 节点\"></a>启动 Geth 节点</h3><p>在 Geth 的命令行窗口中，启动您的节点，使用以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span> <span class=\"token parameter variable\">--nodiscover</span> <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span> <span class=\"token parameter variable\">--rpc</span> <span class=\"token parameter variable\">--rpcaddr</span> <span class=\"token string\">\"127.0.0.1\"</span> <span class=\"token parameter variable\">--rpcport</span> <span class=\"token string\">\"8545\"</span> <span class=\"token parameter variable\">--rpccorsdomain</span> <span class=\"token string\">\"*\"</span> <span class=\"token parameter variable\">--rpcapi</span> <span class=\"token string\">\"eth,net,web3,personal,admin,shh,txpool,debug,miner\"</span> <span class=\"token parameter variable\">--mine</span> <span class=\"token parameter variable\">--minerthreads</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"解锁账户-2\"><a href=\"#解锁账户-2\" class=\"headerlink\" title=\"解锁账户\"></a>解锁账户</h3><p>在 Geth 控制台中，解锁您的账户（假设 <code>user1</code> 是您的账户地址）：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"your_password\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果已经正确地解锁了账户,你会看到部署过程停止在某个状态</p>\n<p>这是因为 truffle 在等待部署交易提交,但是我们在私链中还没有启动挖矿。  现在切换回 geth 终端窗口,查看交易池的状态:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">txpool.status  \n<span class=\"token punctuation\">{</span>  \npending:1,  \nqueued:0  \n<span class=\"token punctuation\">}</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>有一个挂起的交易</p>\n<h3 id=\"启动挖矿-1\"><a href=\"#启动挖矿-1\" class=\"headerlink\" title=\"启动挖矿\"></a>启动挖矿</h3><p>在 Geth 控制台中，启动挖矿：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>稍等小会儿,再查看交易池的状态:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">txpool.status  \n<span class=\"token punctuation\">{</span>  pending:0,  queued:0  <span class=\"token punctuation\">}</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>交易已经成功提交了</p>\n<h3 id=\"部署合约\"><a href=\"#部署合约\" class=\"headerlink\" title=\"部署合约\"></a>部署合约</h3><p>在项目目录中，使用以下命令部署合约：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle migrate <span class=\"token parameter variable\">--network</span> development<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"检查部署结果\"><a href=\"#检查部署结果\" class=\"headerlink\" title=\"检查部署结果\"></a>检查部署结果</h3><p>部署完成后，您可以查看终端输出中的合约地址和交易哈希，确认合约是否成功部署。</p>\n<h3 id=\"与合约交互\"><a href=\"#与合约交互\" class=\"headerlink\" title=\"与合约交互\"></a>与合约交互</h3><p>在合约部署后，您可以使用 Truffle 控制台与合约进行交互：</p>\n<ol>\n<li><p>启动 Truffle 控制台：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">truffle console <span class=\"token parameter variable\">--network</span> development<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>在控制台中，获取合约实例并与其交互：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> MyContract<span class=\"token punctuation\">.</span><span class=\"token function\">deployed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> currentMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 输出当前消息</span>\n\n<span class=\"token keyword\">await</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New Message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 更新消息</span>\n<span class=\"token keyword\">const</span> updatedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>updatedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 输出更新后的消息</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"启动-DApp\"><a href=\"#启动-DApp\" class=\"headerlink\" title=\"启动 DApp\"></a>启动 DApp</h3><p>执行以下命令来启动 DApp:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在浏览器里访问 <a href=\"http://localhost:8080/\">http://localhost:8080</a> 即可</p>\n<p>如果你希望从别的机器也可以访问你的 DApp 应用,修改一下 <code>package.json</code>:  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>  \n\tscripts:<span class=\"token punctuation\">{</span>\n    \t<span class=\"token string\">\"dev\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"webpack-dev-server –-host 0.0.0.0\"</span> \n    \t<span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、命令详解\"><a href=\"#四、命令详解\" class=\"headerlink\" title=\"四、命令详解\"></a>四、命令详解</h2><h3 id=\"1-Geth-命令行选项\"><a href=\"#1-Geth-命令行选项\" class=\"headerlink\" title=\"1. Geth 命令行选项\"></a>1. <strong>Geth 命令行选项</strong></h3><p>这些命令是在启动 Geth 时使用的，用来配置节点行为。</p>\n<ul>\n<li><p><strong>–datadir</strong>：指定数据目录，所有区块链和配置数据将保存在此目录中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--datadir</span> ./data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–networkid</strong>：选择要加入的网络 ID，避免连接到错误的链。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--networkid</span> <span class=\"token number\">987</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–port</strong>：指定节点的P2P通信端口（默认是 30303）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--port</span> <span class=\"token number\">30303</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–nodiscover</strong>：禁用节点自动发现，防止自动连接其他节点（常用于私有网络）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--nodiscover</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–maxpeers</strong>：设置最多连接的节点数（默认 25）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--maxpeers</span> <span class=\"token number\">30</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–mine</strong>：启动节点时立即开始挖矿。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--mine</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–minerthreads</strong>：设置挖矿使用的线程数量（默认为 1）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--minerthreads</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–etherbase</strong>：指定挖矿奖励接收的以太坊地址。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--etherbase</span> 0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpc</strong>：启用 HTTP-RPC 接口，允许通过 HTTP 与节点交互。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpc</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpcaddr</strong>：指定 HTTP-RPC 接口监听的地址。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpcaddr</span> <span class=\"token number\">127.0</span>.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpcport</strong>：指定 HTTP-RPC 端口。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpcport</span> <span class=\"token number\">8545</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpccorsdomain</strong>：指定允许通过 CORS（跨域资源共享）访问的域，通常设置为 <code>*</code> 允许所有域。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpccorsdomain</span> <span class=\"token string\">\"*\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–rpcapi</strong>：指定允许通过 RPC 接口调用的 API 模块（例如 <code>eth</code>, <code>net</code>, <code>web3</code>）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--rpcapi</span> <span class=\"token string\">\"eth,net,web3\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–syncmode</strong>：设置节点的同步模式，常用的有：</p>\n<ul>\n<li><code>fast</code>（默认，快速同步）</li>\n<li><code>full</code>（完全同步）</li>\n<li><code>light</code>（轻节点，只下载区块头）</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--syncmode</span> fast<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>–ipcdisable</strong>：禁用 Geth 的 IPC-RPC 通信接口（默认启用 IPC）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geth <span class=\"token parameter variable\">--ipcdisable</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"2-Geth-控制台命令\"><a href=\"#2-Geth-控制台命令\" class=\"headerlink\" title=\"2. Geth 控制台命令\"></a>2. <strong>Geth 控制台命令</strong></h3><p>这些命令是在 Geth 启动并进入控制台时使用的，或者通过 <code>geth attach</code> 来附加到已运行的节点。</p>\n<ul>\n<li><p><strong>eth.syncing</strong>：查看节点是否在同步，并返回同步状态。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>syncing<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>eth.blockNumber</strong>：获取当前节点的区块高度。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span>blockNumber<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**eth.getBlock(blockNumber)**：查看某个区块的信息（例如查看最新区块）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span>eth<span class=\"token punctuation\">.</span>blockNumber<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**eth.getBalance(address)**：查看某个地址的余额。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAddressHere\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**miner.start(threads)**：启动挖矿，并指定使用的线程数（例如 1 个线程）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**miner.stop()**：停止挖矿。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">miner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**personal.newAccount(password)**：创建新账户，并设置密码。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">newAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YourPassword\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**personal.unlockAccount(address, password)**：解锁指定账户，允许在一段时间内使用账户进行交易。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">personal<span class=\"token punctuation\">.</span><span class=\"token function\">unlockAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0xYourAddressHere\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"YourPassword\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>admin.peers</strong>：查看当前连接的节点。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span>peers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**admin.addPeer(enodeURL)**：手动添加一个节点。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">admin<span class=\"token punctuation\">.</span><span class=\"token function\">addPeer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enode://...\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>net.peerCount</strong>：查看连接的节点数量。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">net<span class=\"token punctuation\">.</span>peerCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>txpool.status</strong>：查看交易池的状态，包含等待和挂起的交易数量。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">txpool<span class=\"token punctuation\">.</span>status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**debug.verbosity(level)**：设置日志的详细程度（0 为最少，5 为最多）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">debug<span class=\"token punctuation\">.</span><span class=\"token function\">verbosity</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**web3.sha3(string)**：计算字符串的 Keccak-256 哈希。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span><span class=\"token function\">sha3</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**eth.sendTransaction({from: sender, to: receiver, value: amount})**：发送交易（注意单位为 Wei）。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xYourAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0xReceiverAddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>这些命令涵盖了Geth在日常使用中的常见需求，包括节点管理、账户管理、挖矿、网络连接、交易等。你可以根据自己的需求组合使用。</p>\n",
            "tags": [
                "教程",
                "区块链"
            ]
        }
    ]
}