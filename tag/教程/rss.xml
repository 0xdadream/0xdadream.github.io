<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦 • Posts by &#34;教程&#34; tag</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Wed, 16 Oct 2024 09:25:00 +0800</pubDate>
        <lastBuildDate>Wed, 16 Oct 2024 09:25:00 +0800</lastBuildDate>
        <category>tip</category>
        <category>re</category>
        <category>工具</category>
        <category>Java</category>
        <category>linux</category>
        <category>安装</category>
        <category>教程</category>
        <category>web</category>
        <category>wp</category>
        <category>攻防世界</category>
        <category>windows</category>
        <category>BUUCTF</category>
        <category>server</category>
        <category>bug</category>
        <category>环境</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>tips</category>
        <category>git</category>
        <category>java</category>
        <category>命令</category>
        <category>学习</category>
        <category>tools</category>
        <category>文件上传</category>
        <category>php</category>
        <category>python</category>
        <category>汇编</category>
        <category>i春秋</category>
        <category>区块链</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</guid>
            <title>以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台</title>
            <link>https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</link>
            <category>教程</category>
            <category>区块链</category>
            <pubDate>Wed, 16 Oct 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34;&gt;&lt;a href=&#34;#以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34; class=&#34;headerlink&#34; title=&#34;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&#34;&gt;&lt;/a&gt;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&lt;/h1&gt;&lt;h2 id=&#34;一、安装-DApp-开发环境&#34;&gt;&lt;a href=&#34;#一、安装-DApp-开发环境&#34; class=&#34;headerlink&#34; title=&#34;一、安装 DApp 开发环境&#34;&gt;&lt;/a&gt;一、安装 DApp 开发环境&lt;/h2&gt;&lt;h3 id=&#34;1-1-安装-Node-js&#34;&gt;&lt;a href=&#34;#1-1-安装-Node-js&#34; class=&#34;headerlink&#34; title=&#34;1.1 安装 Node.js&#34;&gt;&lt;/a&gt;1.1 安装 Node.js&lt;/h3&gt;&lt;p&gt;看我这篇&lt;a href=&#34;https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/&#34;&gt;node.js版本问题 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;
v22.0.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-2-安装-Geth&#34;&gt;&lt;a href=&#34;#1-2-安装-Geth&#34; class=&#34;headerlink&#34; title=&#34;1.2 安装 Geth&#34;&gt;&lt;/a&gt;1.2 安装 Geth&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://geth.ethereum.org/downloads&#34;&gt;Downloads | go-ethereum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载 64 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者 32 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Geth 安装程序,然后进行安装。 安装完毕后打开一个控制台,执行命令验证安装成功:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth version
Geth
Version: &lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;.3-stable &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-3-安装-solidity-编译器&#34;&gt;&lt;a href=&#34;#1-3-安装-solidity-编译器&#34; class=&#34;headerlink&#34; title=&#34;1.3 安装 solidity 编译器&#34;&gt;&lt;/a&gt;1.3 安装 solidity 编译器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; solc &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  安装完毕后,执行命令验证安装成功 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;solcjs &lt;span class=&#34;token parameter variable&#34;&gt;-V&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0.8&lt;/span&gt;.28+commit.7893614a.Emscripten.clang&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-4-安装-web3&#34;&gt;&lt;a href=&#34;#1-4-安装-web3&#34; class=&#34;headerlink&#34; title=&#34;1.4 安装 web3&#34;&gt;&lt;/a&gt;1.4 安装 web3&lt;/h3&gt;&lt;p&gt;Web3 的安装过程使用了 git,因此需要先安装 windows 版的 git 命令行&lt;a href=&#34;https://0xdadream.github.io/2024/08/09/git-shi-yong/&#34;&gt;git使用 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3 &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证，创建一个文件&lt;code&gt;index.js&lt;/code&gt;,写入以下内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;const &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; Web3 &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;web3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

console.log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Version:&#34;&lt;/span&gt;,Web3.version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; index.js
Version: &lt;span class=&#34;token number&#34;&gt;4.13&lt;/span&gt;.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-5-安装-truffle-框架&#34;&gt;&lt;a href=&#34;#1-5-安装-truffle-框架&#34; class=&#34;headerlink&#34; title=&#34;1.5 安装 truffle 框架&#34;&gt;&lt;/a&gt;1.5 安装 truffle 框架&lt;/h3&gt;&lt;p&gt; 执行以下命令安装 truffle 开发框架: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; truffle&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle.cmd version
Truffle v5.11.5 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core: &lt;span class=&#34;token number&#34;&gt;5.11&lt;/span&gt;.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-6-安装-webpack&#34;&gt;&lt;a href=&#34;#1-6-安装-webpack&#34; class=&#34;headerlink&#34; title=&#34;1.6 安装 webpack&#34;&gt;&lt;/a&gt;1.6 安装 webpack&lt;/h3&gt;&lt;p&gt;执行以下命令安装 webpack:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; webpack –g &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;webpack &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;
Usage: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;entries&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
Alternative usage to run commands: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;二、运行私链节点&#34;&gt;&lt;a href=&#34;#二、运行私链节点&#34; class=&#34;headerlink&#34; title=&#34;二、运行私链节点&#34;&gt;&lt;/a&gt;二、运行私链节点&lt;/h2&gt;&lt;h3 id=&#34;2-1-创世块配置&#34;&gt;&lt;a href=&#34;#2-1-创世块配置&#34; class=&#34;headerlink&#34; title=&#34;2.1 创世块配置&#34;&gt;&lt;/a&gt;2.1 创世块配置&lt;/h3&gt;&lt;p&gt;创建一个节点目录 node1,并在其中创建私链的创世块配置文件:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; node1
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; node1
notepad gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后编辑内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2100000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;300000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;f41c74c9ae680c1aa78f42e5647a62f353b7bdde&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;400000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config.chainId&lt;/code&gt;用来声明以太坊网络编号,选择一个大于 10 的数字即可。  &lt;code&gt;difficulty&lt;/code&gt; 用来声明挖矿难度,越小的值难度越低,也就能更快速地出块。&lt;/p&gt;
&lt;p&gt;完整版的 &lt;code&gt;gensis.json&lt;/code&gt; 如下所示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x400&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xffffffff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;// 可选填的参数&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;coinbase&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;extraData&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;nonce&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;mixhash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;parentHash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;430e986e0cca10a174baad96871ec9cb308c6d05&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;111111&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各个字段解释如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;必填&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;chainId&lt;/td&gt;
&lt;td&gt;自定义私链的网络ID，不同的网络ID无法互联通讯，以太坊公链ID 为1，我们设置为987以防止与网络中其他私链冲突。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;homesteadBlock&lt;/td&gt;
&lt;td&gt;是否为HomeStead版本的区块，设置为0表明是。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip155Block&lt;/td&gt;
&lt;td&gt;EIP155 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id5&#34;&gt;1]&lt;/a&gt; 是一个以太坊分叉提议，为了和以前的以太坊经典ETC 链条分叉而存在，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip158Block&lt;/td&gt;
&lt;td&gt;EIP158 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id6&#34;&gt;2]&lt;/a&gt; 是一个以太坊分叉提议，为了解决之前以太坊空账户造成效率低下的协议漏洞而分叉，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;difficulty&lt;/td&gt;
&lt;td&gt;设置当前区块难度，若难度过大挖矿就很慢，我们设置较小值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gasLimit&lt;/td&gt;
&lt;td&gt;单一区块最大 gas 消耗上限，用来限制能够打包进入块的交易数量与信息总和，我们在学习中可以设置为最大。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;选填&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coinbase&lt;/td&gt;
&lt;td&gt;打包该块的矿工的奖励地址，因为是创世块，可设为0地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extraData&lt;/td&gt;
&lt;td&gt;打包该块时矿工记录的笔记。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nonce&lt;/td&gt;
&lt;td&gt;打包该块时矿工挖矿所用到的Ethash输入参数nonce。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mixHash&lt;/td&gt;
&lt;td&gt;与nonce配合用于挖矿，创世区无前一个区块，可不填。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parentHash&lt;/td&gt;
&lt;td&gt;前一个区块头的哈希值，创世区块无前一个区块，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;打包该块的时间戳，符合Unix Timestamp标准，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alloc&lt;/td&gt;
&lt;td&gt;创世时各账户分配以太币的数量，不想分配则忽略。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-2-初始化私链节点&#34;&gt;&lt;a href=&#34;#2-2-初始化私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.2 初始化私链节点&#34;&gt;&lt;/a&gt;2.2 初始化私链节点&lt;/h3&gt;&lt;p&gt;执行 geth 的 init 命令初始化私链节点:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json

&lt;span class=&#34;token comment&#34;&gt;# Successfully wrote genesis state&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会在当前目录下创建 data 目录,用来保存区块数据及账户信息&lt;/p&gt;
&lt;p&gt;可以上述命令写到一个脚本 &lt;code&gt;init.cmd&lt;/code&gt; 里，文件内容如下:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在部署下一个节点时,就可以直接执行这个脚本进行初始化了。例如,在另一台机器上:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;init.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-启动私链节点&#34;&gt;&lt;a href=&#34;#2-3-启动私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.3 启动私链节点&#34;&gt;&lt;/a&gt;2.3 启动私链节点&lt;/h3&gt;&lt;p&gt;在我们现在的环境下，需要启动一个 Geth 节点来接入私链网络（实际上也是这个私链网络的唯一一个节点），负责在创世块后挖出第一个块。该节点也是我们与以太坊私链通信的节点服务器。下面我们来启动这样一个节点。同样,你可以用一个脚本 &lt;code&gt;console.cmd&lt;/code&gt; 来简化启动节点时的输入,文件内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geth启动时命令行参数解释如下表:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;–rpc&lt;/td&gt;
&lt;td&gt;开启JSON-RPC 服务，可供调用/调试访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcaddr&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcport&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–prccorsdomain&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC允许的域名访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcapi&lt;/td&gt;
&lt;td&gt;允许提供的RPC服务模块，在示例中选择了数个模块加载。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–nodiscover&lt;/td&gt;
&lt;td&gt;关闭自动发现节点，私有链开发时防止他人意外接入，可选择关闭该选项避免他人加入网络。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–maxpeers&lt;/td&gt;
&lt;td&gt;允许最大节点链接数目。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–networkid&lt;/td&gt;
&lt;td&gt;指定以太坊网络ID。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–port&lt;/td&gt;
&lt;td&gt;监听以太坊节点之间P2P消息的TCP/UDP端口，默认30303。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–mine&lt;/td&gt;
&lt;td&gt;节点启动挖矿功能，参与挖矿。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–minerthreads&lt;/td&gt;
&lt;td&gt;挖矿的多线程配置，例子中配置为1个线程。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–etherbase&lt;/td&gt;
&lt;td&gt;若启动挖矿功能，挖矿奖励的接受地址，例子中我们随便填了一个。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;console&lt;/td&gt;
&lt;td&gt;(可选) 启动后进入命令行模式，直接输入命令互动操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;输入回车，启动成功！此时控制台会输出一组日志信息并有欢迎信息&lt;/p&gt;
&lt;p&gt;以后启动节点,只要直接执行这个脚本即可:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;console.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入控制台&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth attach http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Geth-启动结果解释&#34;&gt;&lt;a href=&#34;#Geth-启动结果解释&#34; class=&#34;headerlink&#34; title=&#34;Geth 启动结果解释&#34;&gt;&lt;/a&gt;Geth 启动结果解释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据目录&lt;/strong&gt;：你指定了 &lt;code&gt;--datadir ./data&lt;/code&gt;，Geth 会将所有区块链数据和配置文件存储在该目录中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RPC 服务&lt;/strong&gt;：你启动了 HTTP-RPC 接口，监听地址为 &lt;code&gt;127.0.0.1&lt;/code&gt;，端口为 &lt;code&gt;8545&lt;/code&gt;。这意味着你可以通过 HTTP 方式与节点交互。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挖矿&lt;/strong&gt;：你启用了 &lt;code&gt;--mine&lt;/code&gt; 参数，使用一个线程（&lt;code&gt;--minerthreads 1&lt;/code&gt;）进行挖矿，挖矿奖励会发送到地址 &lt;code&gt;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止节点发现&lt;/strong&gt;：你启用了 &lt;code&gt;--nodiscover&lt;/code&gt; 参数，这意味着节点不会自动发现和连接其他节点（适用于私有链）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;后续如何使用这些配置&#34;&gt;&lt;a href=&#34;#后续如何使用这些配置&#34; class=&#34;headerlink&#34; title=&#34;后续如何使用这些配置&#34;&gt;&lt;/a&gt;后续如何使用这些配置&lt;/h4&gt;&lt;h5 id=&#34;进入控制台后：&#34;&gt;&lt;a href=&#34;#进入控制台后：&#34; class=&#34;headerlink&#34; title=&#34;进入控制台后：&#34;&gt;&lt;/a&gt;进入控制台后：&lt;/h5&gt;&lt;p&gt;你可以直接在 Geth 控制台中输入命令与节点交互。以下是一些常见的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看挖矿状态&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的挖矿算力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看当前区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示当前节点已同步的最新区块号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看账户余额&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示指定账户的余额。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;停止挖矿&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会停止挖矿进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;发送交易&lt;/strong&gt;： 你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;解锁账户&lt;/strong&gt;： 如果要发送交易，首先需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用-RPC-接口：&#34;&gt;&lt;a href=&#34;#使用-RPC-接口：&#34; class=&#34;headerlink&#34; title=&#34;使用 RPC 接口：&#34;&gt;&lt;/a&gt;使用 RPC 接口：&lt;/h5&gt;&lt;p&gt;你启动了 RPC 服务，这意味着你可以通过 HTTP 与节点交互，而不必进入控制台。可以使用 &lt;code&gt;curl&lt;/code&gt;、Web3.js、Python 等工具来与节点通信。下面是几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;curl&lt;/code&gt; 查看区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; POST &lt;span class=&#34;token parameter variable&#34;&gt;--data&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;{&#34;jsonrpc&#34;:&#34;2.0&#34;,&#34;method&#34;:&#34;eth_blockNumber&#34;,&#34;params&#34;:[],&#34;id&#34;:1}&#39;&lt;/span&gt; http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的区块高度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 Web3.js 与节点交互&lt;/strong&gt;： 你可以使用 Web3.js 编写一个简单的脚本来获取节点信息。例如，安装 Web3.js：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后使用以下 JavaScript 代码获取节点的区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-web-idl&#34; data-language=&#34;web-idl&#34;&gt;&lt;code class=&#34;language-web-idl&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;web3&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;new&lt;/span&gt; Web3&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:8545&#39;);&lt;/span&gt;

web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getBlockNumber&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;then&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;手动添加其他节点：&#34;&gt;&lt;a href=&#34;#手动添加其他节点：&#34; class=&#34;headerlink&#34; title=&#34;手动添加其他节点：&#34;&gt;&lt;/a&gt;手动添加其他节点：&lt;/h5&gt;&lt;p&gt;如果你想手动连接其他节点，可以使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://publickey@ip:port&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将允许你将其他节点加入到网络中。&lt;/p&gt;
&lt;h3 id=&#34;2-4-账户管理&#34;&gt;&lt;a href=&#34;#2-4-账户管理&#34; class=&#34;headerlink&#34; title=&#34;2.4 账户管理&#34;&gt;&lt;/a&gt;2.4 账户管理&lt;/h3&gt;&lt;h4 id=&#34;2-4-1-查看账户列表&#34;&gt;&lt;a href=&#34;#2-4-1-查看账户列表&#34; class=&#34;headerlink&#34; title=&#34;2.4.1 查看账户列表&#34;&gt;&lt;/a&gt;2.4.1 查看账户列表&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 eth 对象的 accounts 属性查看目前的账户列表:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.accounts  or personal.listAccounts
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-2-创建新账户&#34;&gt;&lt;a href=&#34;#2-4-2-创建新账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.2 创建新账户&#34;&gt;&lt;/a&gt;2.4.2 创建新账户&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 newAccount()方法创建一个新账户,参数为你自己选择的密码:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; personal.newAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;123456&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token string&#34;&gt;&#34;0x6e1d438b00d5bb865c4d842e9c02549709130147&#34;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出就是新创建的账户地址(公钥),你的输出不会和上面的示例相同。geth 会保存到数据目录下的 keystore 文件中。&lt;/p&gt;
&lt;h4 id=&#34;2-4-3-查询账户余额&#34;&gt;&lt;a href=&#34;#2-4-3-查询账户余额&#34; class=&#34;headerlink&#34; title=&#34;2.4.3 查询账户余额&#34;&gt;&lt;/a&gt;2.4.3 查询账户余额&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 getBalance()方法获取挃定账户的余额,参数为账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  或者直接输入账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0xd8bcf1324d566cbec5d3b67e6e14485b06a41d49&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;web3.fromWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 将wei换算成eth&lt;/span&gt;
web3.toWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-4-挖矿&#34;&gt;&lt;a href=&#34;#2-4-4-挖矿&#34; class=&#34;headerlink&#34; title=&#34;2.4.4 挖矿&#34;&gt;&lt;/a&gt;2.4.4 挖矿&lt;/h4&gt;&lt;p&gt;私有链不用其他节点也能挖矿&lt;/p&gt;
&lt;h5 id=&#34;1-启动和停止挖矿&#34;&gt;&lt;a href=&#34;#1-启动和停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;1. 启动和停止挖矿&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;启动和停止挖矿&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;启动挖矿&#34;&gt;&lt;a href=&#34;#启动挖矿&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h6&gt;&lt;p&gt;要开始挖矿，你可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;miner.start(threads)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;threads参数表示使用多少个线程进行挖矿。比如要用 1 个线程：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;停止挖矿&#34;&gt;&lt;a href=&#34;#停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;停止挖矿&#34;&gt;&lt;/a&gt;停止挖矿&lt;/h6&gt;&lt;p&gt;要停止挖矿，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-查看挖矿状态&#34;&gt;&lt;a href=&#34;#2-查看挖矿状态&#34; class=&#34;headerlink&#34; title=&#34;2. 查看挖矿状态&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查看挖矿状态&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看挖矿是否正在进行&#34;&gt;&lt;a href=&#34;#查看挖矿是否正在进行&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿是否正在进行&#34;&gt;&lt;/a&gt;查看挖矿是否正在进行&lt;/h6&gt;&lt;p&gt;你可以通过以下命令检查节点当前是否正在挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mining&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令返回 &lt;code&gt;true&lt;/code&gt; 表示节点正在挖矿，返回 &lt;code&gt;false&lt;/code&gt; 表示节点没有在挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看当前的哈希算力&#34;&gt;&lt;a href=&#34;#查看当前的哈希算力&#34; class=&#34;headerlink&#34; title=&#34;查看当前的哈希算力&#34;&gt;&lt;/a&gt;查看当前的哈希算力&lt;/h6&gt;&lt;p&gt;使用以下命令查看节点的哈希算力：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的数值表示每秒计算的哈希数，以 H/s（哈希每秒）为单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看矿工账户&#34;&gt;&lt;a href=&#34;#查看矿工账户&#34; class=&#34;headerlink&#34; title=&#34;查看矿工账户&#34;&gt;&lt;/a&gt;查看矿工账户&lt;/h6&gt;&lt;p&gt;使用以下命令查看当前挖矿收益的账户（即矿工地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;查看当前区块高度&#34;&gt;&lt;a href=&#34;#查看当前区块高度&#34; class=&#34;headerlink&#34; title=&#34;查看当前区块高度&#34;&gt;&lt;/a&gt;查看当前区块高度&lt;/h6&gt;&lt;p&gt;你可以通过以下命令查看节点同步到的最新区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-设置矿工账户&#34;&gt;&lt;a href=&#34;#3-设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;3. 设置矿工账户&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;设置矿工账户&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;在挖矿前，通常需要设置 &lt;code&gt;coinbase&lt;/code&gt;（即矿工账户地址），挖矿的奖励会发送到这个地址。你可以使用以下命令设置 &lt;code&gt;coinbase&lt;/code&gt;：&lt;/p&gt;
&lt;h6 id=&#34;设置矿工账户&#34;&gt;&lt;a href=&#34;#设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;设置矿工账户&#34;&gt;&lt;/a&gt;设置矿工账户&lt;/h6&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setEtherbase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令将指定的账户设置为矿工账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;4-挖矿奖励和账户&#34;&gt;&lt;a href=&#34;#4-挖矿奖励和账户&#34; class=&#34;headerlink&#34; title=&#34;4. 挖矿奖励和账户&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;挖矿奖励和账户&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看当前账户的余额&#34;&gt;&lt;a href=&#34;#查看当前账户的余额&#34; class=&#34;headerlink&#34; title=&#34;查看当前账户的余额&#34;&gt;&lt;/a&gt;查看当前账户的余额&lt;/h6&gt;&lt;p&gt;要查看矿工账户的余额，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;解锁矿工账户&#34;&gt;&lt;a href=&#34;#解锁矿工账户&#34; class=&#34;headerlink&#34; title=&#34;解锁矿工账户&#34;&gt;&lt;/a&gt;解锁矿工账户&lt;/h6&gt;&lt;p&gt;如果你希望自动将矿工奖励发送到某个账户，你可能需要解锁该账户，尤其是在你打算用这个账户发送交易时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; duration&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;duration&lt;/code&gt; 是账户解锁的时间，单位是秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;5-与挖矿相关的高级操作&#34;&gt;&lt;a href=&#34;#5-与挖矿相关的高级操作&#34; class=&#34;headerlink&#34; title=&#34;5. 与挖矿相关的高级操作&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;与挖矿相关的高级操作&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;设置挖矿目标难度&#34;&gt;&lt;a href=&#34;#设置挖矿目标难度&#34; class=&#34;headerlink&#34; title=&#34;设置挖矿目标难度&#34;&gt;&lt;/a&gt;设置挖矿目标难度&lt;/h6&gt;&lt;p&gt;在私有链上，你可以通过修改 &lt;code&gt;genesis.json&lt;/code&gt; 文件中的 &lt;code&gt;difficulty&lt;/code&gt; 值来控制挖矿难度。在 Geth 运行期间，无法直接修改目标难度。&lt;/p&gt;
&lt;h6 id=&#34;查看挖到的区块&#34;&gt;&lt;a href=&#34;#查看挖到的区块&#34; class=&#34;headerlink&#34; title=&#34;查看挖到的区块&#34;&gt;&lt;/a&gt;查看挖到的区块&lt;/h6&gt;&lt;p&gt;使用以下命令可以查看最新的区块信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;latest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;eth.getBlock()&lt;/code&gt; 返回的区块信息包含以下常见字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt;: 区块号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 区块的哈希值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parentHash&lt;/code&gt;: 父区块的哈希&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 区块中工作量证明的 nonce 值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miner&lt;/code&gt;: 挖出该区块的矿工地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 区块的挖矿难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;totalDifficulty&lt;/code&gt;: 该区块链上到当前区块为止的总难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: 区块大小（以字节为单位）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 该区块的 gas 上限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 该区块使用的 gas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt;: 区块的时间戳&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactions&lt;/code&gt;: 包含在该区块中的交易数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uncles&lt;/code&gt;: 包含该区块的叔块数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;自动挖矿新交易&#34;&gt;&lt;a href=&#34;#自动挖矿新交易&#34; class=&#34;headerlink&#34; title=&#34;自动挖矿新交易&#34;&gt;&lt;/a&gt;自动挖矿新交易&lt;/h6&gt;&lt;p&gt;Geth 提供一个选项可以在有新交易进入交易池时自动开始挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setAuto&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置为 &lt;code&gt;1&lt;/code&gt; 后，每当交易池中有新交易时，节点将自动开始挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;6-挖矿的调试工具&#34;&gt;&lt;a href=&#34;#6-挖矿的调试工具&#34; class=&#34;headerlink&#34; title=&#34;6. 挖矿的调试工具&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;挖矿的调试工具&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看交易池中的交易&#34;&gt;&lt;a href=&#34;#查看交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;查看交易池中的交易&#34;&gt;&lt;/a&gt;查看交易池中的交易&lt;/h6&gt;&lt;p&gt;如果你想查看待处理的交易，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的信息会告诉你有多少笔交易在交易池中等待执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看挖矿日志&#34;&gt;&lt;a href=&#34;#查看挖矿日志&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿日志&#34;&gt;&lt;/a&gt;查看挖矿日志&lt;/h6&gt;&lt;p&gt;挖矿日志可以帮助你跟踪挖矿状态和进度。在 Geth 启动时，你可以通过设置日志等级来查看挖矿详细信息。例如，使用 &lt;code&gt;--verbosity&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;geth &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;verbosity &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，挖矿时的日志会显示更多详细的挖矿信息。&lt;/p&gt;
&lt;h5 id=&#34;7-挖矿常见问题&#34;&gt;&lt;a href=&#34;#7-挖矿常见问题&#34; class=&#34;headerlink&#34; title=&#34;7. 挖矿常见问题&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;挖矿常见问题&lt;/strong&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;无法开始挖矿？&lt;/strong&gt; 如果你无法开始挖矿，可能是由于账户未解锁。确保你已解锁矿工账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;矿工奖励没有到账？&lt;/strong&gt; 矿工奖励发放需要时间，尤其是在主网上挖矿时，奖励只有在挖到的区块被确认后才能到账。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;8-挖矿命令汇总&#34;&gt;&lt;a href=&#34;#8-挖矿命令汇总&#34; class=&#34;headerlink&#34; title=&#34;8. 挖矿命令汇总&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;挖矿命令汇总&lt;/strong&gt;&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.start(threads)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启动挖矿，&lt;code&gt;threads&lt;/code&gt; 为使用的线程数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.stop()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;停止挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.hashrate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前的挖矿算力&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.mining&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看是否正在挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.setEtherbase(&#34;address&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(eth.coinbase)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看矿工账户的余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.blockNumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前区块高度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBlock(&#39;latest&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看最新的区块信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池中的待处理交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(eth.coinbase, &#34;password&#34;, 600)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;2-4-5-解锁账户&#34;&gt;&lt;a href=&#34;#2-4-5-解锁账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.5 解锁账户&#34;&gt;&lt;/a&gt;2.4.5 解锁账户&lt;/h4&gt;&lt;p&gt;在部署合约时需要一个解锁的账户。&lt;/p&gt;
&lt;p&gt;在 geth 控制台使用 &lt;code&gt;personal&lt;/code&gt; 对象的 &lt;code&gt;unlockAccount()&lt;/code&gt;  方法来解锁挃定的账户,参数为账户地址和账户密码(在创建账户时挃定的那个密码):  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.unlockAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;123456&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-5-交易&#34;&gt;&lt;a href=&#34;#2-5-交易&#34; class=&#34;headerlink&#34; title=&#34;2.5 交易&#34;&gt;&lt;/a&gt;2.5 交易&lt;/h3&gt;&lt;h4 id=&#34;1-发送交易&#34;&gt;&lt;a href=&#34;#1-发送交易&#34; class=&#34;headerlink&#34; title=&#34;1. 发送交易&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;使用-eth-sendTransaction-发送交易&#34;&gt;&lt;a href=&#34;#使用-eth-sendTransaction-发送交易&#34; class=&#34;headerlink&#34; title=&#34;使用 eth.sendTransaction 发送交易&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易&lt;/h5&gt;&lt;p&gt;发送交易时，你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 命令。示例如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户的地址，必须先解锁账户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的金额，单位是 wei（可以使用 &lt;code&gt;web3.toWei&lt;/code&gt; 转换成 ether）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: （可选）指定交易的 gas 上限，默认为 &lt;code&gt;21000&lt;/code&gt;，适用于普通转账。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: （可选）指定每单位 gas 的价格，默认为当前网络的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: （可选）包含用于合约调用的数据（智能合约交易时用到）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;解锁账户&#34;&gt;&lt;a href=&#34;#解锁账户&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;在发送交易前，如果账户被锁定，你需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;600&lt;/code&gt; 表示账户将保持解锁 600 秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-查询交易&#34;&gt;&lt;a href=&#34;#2-查询交易&#34; class=&#34;headerlink&#34; title=&#34;2. 查询交易&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查询交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易信息&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;/a&gt;根据交易哈希查询交易信息&lt;/h5&gt;&lt;p&gt;发送交易后，你可以使用交易哈希查询交易的详细信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将返回交易的详细信息，包括发送者、接收者、金额、gas 费用等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eth.getTransaction()&lt;/code&gt; 会返回一个包含该交易详细信息的对象，常见的字段包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 该交易所属区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 该交易所属区块的区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发起该交易的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易消耗的 gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 该交易的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 该交易的哈希值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易的数据字段，通常是合约调用时传递的数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送方账户的 nonce 值，表示该账户发起的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 交易接收者的地址，如果是合约创建交易则为 &lt;code&gt;null&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: 该交易在区块中的索引。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 该交易中发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;交易未打包&#34;&gt;&lt;a href=&#34;#交易未打包&#34; class=&#34;headerlink&#34; title=&#34;交易未打包&#34;&gt;&lt;/a&gt;交易未打包&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockHash&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 当交易尚未被打包时，&lt;code&gt;blockHash&lt;/code&gt; 的值为 &lt;code&gt;null&lt;/code&gt;，因为该交易还没有被包含在任何区块中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockNumber&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 同样，由于交易未被打包，&lt;code&gt;blockNumber&lt;/code&gt; 也会是 &lt;code&gt;null&lt;/code&gt;，表示该交易还未属于任何区块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 因为交易还没有被打包到区块，因此也没有在区块中的位置，&lt;code&gt;transactionIndex&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他字段&lt;/strong&gt; 其他交易的基本信息仍然可以被查询到，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者的地址（或者 &lt;code&gt;null&lt;/code&gt; 如果是合约创建交易）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易所消耗的 Gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: Gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送者账户的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易中包含的数据（如合约调用时的参数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易收据&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;/a&gt;根据交易哈希查询交易收据&lt;/h5&gt;&lt;p&gt;要查看交易是否成功被打包到区块中，可以使用以下命令查询交易收据：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionReceipt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回的交易收据包含以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 交易的执行状态，&lt;code&gt;1&lt;/code&gt; 表示成功，&lt;code&gt;0&lt;/code&gt; 表示失败。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 包含该交易的区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionHash&lt;/code&gt;: 交易哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 此交易消耗的 gas 量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;logs&lt;/code&gt;: 该交易的事件日志列表&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-创建自定义交易&#34;&gt;&lt;a href=&#34;#3-创建自定义交易&#34; class=&#34;headerlink&#34; title=&#34;3. 创建自定义交易&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;创建自定义交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 创建自定义交易，除了 &lt;code&gt;from&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 之外，还可以指定 &lt;code&gt;gas&lt;/code&gt;、&lt;code&gt;gasPrice&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 等字段：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSomeData&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 设置交易的 gas 限制，确保足够高。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 设置每单位 gas 的价格，单位是 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;自定义-gas-价格&#34;&gt;&lt;a href=&#34;#自定义-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;自定义 gas 价格&#34;&gt;&lt;/a&gt;自定义 gas 价格&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将设置一个较高的 gas 价格，以加快交易打包。&lt;/p&gt;
&lt;h4 id=&#34;4-离线签名交易&#34;&gt;&lt;a href=&#34;#4-离线签名交易&#34; class=&#34;headerlink&#34; title=&#34;4. 离线签名交易&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;离线签名交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在某些场景下，你可能希望在离线状态下生成交易并签名，然后再发送。以下是离线签名交易的步骤：&lt;/p&gt;
&lt;h5 id=&#34;构建未签名交易&#34;&gt;&lt;a href=&#34;#构建未签名交易&#34; class=&#34;headerlink&#34; title=&#34;构建未签名交易&#34;&gt;&lt;/a&gt;构建未签名交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; rawTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;nonce&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;gwei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ether&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;签名交易&#34;&gt;&lt;a href=&#34;#签名交易&#34; class=&#34;headerlink&#34; title=&#34;签名交易&#34;&gt;&lt;/a&gt;签名交易&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;eth.accounts.signTransaction&lt;/code&gt; 函数来签名交易：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; signedTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;accounts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;signTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rawTx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xPrivateKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送已签名交易&#34;&gt;&lt;a href=&#34;#发送已签名交易&#34; class=&#34;headerlink&#34; title=&#34;发送已签名交易&#34;&gt;&lt;/a&gt;发送已签名交易&lt;/h5&gt;&lt;p&gt;发送已签名的交易，可以使用 &lt;code&gt;eth.sendSignedTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendSignedTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;signedTx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rawTransaction&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;receipt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-批量发送交易&#34;&gt;&lt;a href=&#34;#5-批量发送交易&#34; class=&#34;headerlink&#34; title=&#34;5. 批量发送交易&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;批量发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果你需要一次发送多笔交易，你可以在脚本中批量调用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-检查账户余额&#34;&gt;&lt;a href=&#34;#6-检查账户余额&#34; class=&#34;headerlink&#34; title=&#34;6. 检查账户余额&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;检查账户余额&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以随时使用以下命令检查账户的余额：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回值为账户的余额，单位是 wei。如果你想以以太币（ether）显示，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-检查交易池中的交易&#34;&gt;&lt;a href=&#34;#7-检查交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;7. 检查交易池中的交易&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;检查交易池中的交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;交易被发送后，可能会在交易池中等待确认。你可以使用以下命令查看交易池中的状态：&lt;/p&gt;
&lt;h5 id=&#34;检查挂起的交易&#34;&gt;&lt;a href=&#34;#检查挂起的交易&#34; class=&#34;headerlink&#34; title=&#34;检查挂起的交易&#34;&gt;&lt;/a&gt;检查挂起的交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回交易池中的待处理和挂起的交易数量。&lt;/p&gt;
&lt;h5 id=&#34;查看具体的挂起交易&#34;&gt;&lt;a href=&#34;#查看具体的挂起交易&#34; class=&#34;headerlink&#34; title=&#34;查看具体的挂起交易&#34;&gt;&lt;/a&gt;查看具体的挂起交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inspect&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示详细的待处理和挂起交易的信息。&lt;/p&gt;
&lt;h4 id=&#34;8-检查当前的-gas-价格&#34;&gt;&lt;a href=&#34;#8-检查当前的-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;8. 检查当前的 gas 价格&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;检查当前的 gas 价格&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用以下命令来获取当前网络建议的 gas 价格：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gasPrice&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的值是以 wei 为单位的当前 gas 价格。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9-监听区块和交易事件&#34;&gt;&lt;a href=&#34;#9-监听区块和交易事件&#34; class=&#34;headerlink&#34; title=&#34;9. 监听区块和交易事件&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;监听区块和交易事件&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以通过监听事件来实时监控交易状态。例如，当新区块生成时，可以收到通知：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;newBlockHeaders&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;error&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;connected&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;subscriptionId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;subscriptionId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;blockHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blockHeader&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-交易命令汇总&#34;&gt;&lt;a href=&#34;#10-交易命令汇总&#34; class=&#34;headerlink&#34; title=&#34;10. 交易命令汇总&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;交易命令汇总&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendTransaction({...})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送普通或自定义交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁账户以便发送交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransaction(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易详情&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransactionReceipt(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易收据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(&#34;0xAddress&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查询账户余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.gasPrice&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取当前的 gas 价格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.accounts.signTransaction({...}, &#34;privateKey&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;离线签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendSignedTransaction(&#34;signedTx&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送已签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-6-私链多个节点连接的详细命令&#34;&gt;&lt;a href=&#34;#2-6-私链多个节点连接的详细命令&#34; class=&#34;headerlink&#34; title=&#34;2.6 私链多个节点连接的详细命令&#34;&gt;&lt;/a&gt;2.6 私链多个节点连接的详细命令&lt;/h3&gt;&lt;p&gt;在以太坊私链中，多个节点可以通过网络连接形成一个共识网络。在这种情况下，节点之间需要能够发现彼此，并保持同步。以下是详细的步骤和命令，用于设置并连接多个 Geth 节点到同一个私链网络。&lt;/p&gt;
&lt;h4 id=&#34;1-准备工作&#34;&gt;&lt;a href=&#34;#1-准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 准备工作&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;准备工作&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建-genesis-json-文件&#34;&gt;&lt;a href=&#34;#创建-genesis-json-文件&#34; class=&#34;headerlink&#34; title=&#34;创建 genesis.json 文件&#34;&gt;&lt;/a&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件&lt;/h5&gt;&lt;p&gt;在私链中，所有节点需要共享同一个创世区块 (&lt;code&gt;genesis block&lt;/code&gt;)。首先，创建一个 &lt;code&gt;genesis.json&lt;/code&gt; 文件，它定义了私链的创世区块和区块链的初始配置。&lt;/p&gt;
&lt;p&gt;以下是一个示例 &lt;code&gt;genesis.json&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;eip150Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;byzantiumBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;constantinopleBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;petersburgBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1000000000000000000000&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chainId&lt;/code&gt;: 为私链设置一个独特的网络 ID（不同于主网和测试网）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 设置初始挖矿难度，数值越低，挖矿越容易。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 设置每个区块的 gas 上限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alloc&lt;/code&gt;: 为指定账户分配初始余额。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-初始化-Geth-节点&#34;&gt;&lt;a href=&#34;#2-初始化-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;2. 初始化 Geth 节点&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;初始化 Geth 节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;每个节点在第一次启动时都需要初始化私链。假设你已经有了 Geth，并将数据目录设置为 &lt;code&gt;./data&lt;/code&gt;，可以使用以下命令初始化节点：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data init genesis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init genesis.json&lt;/code&gt;: 使用 &lt;code&gt;genesis.json&lt;/code&gt; 文件初始化链。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个私链节点都需要运行此命令。&lt;/p&gt;
&lt;h4 id=&#34;3-启动节点&#34;&gt;&lt;a href=&#34;#3-启动节点&#34; class=&#34;headerlink&#34; title=&#34;3. 启动节点&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;启动节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;使用以下命令启动每个节点，并确保每个节点都指定相同的 &lt;code&gt;--networkid&lt;/code&gt; 和使用 &lt;code&gt;--port&lt;/code&gt; 参数设置不同的端口。&lt;/p&gt;
&lt;h5 id=&#34;启动第一个节点（节点A）&#34;&gt;&lt;a href=&#34;#启动第一个节点（节点A）&#34; class=&#34;headerlink&#34; title=&#34;启动第一个节点（节点A）&#34;&gt;&lt;/a&gt;启动第一个节点（节点A）&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--networkid 987&lt;/code&gt;: 设置网络 ID，与 &lt;code&gt;genesis.json&lt;/code&gt; 中的 &lt;code&gt;chainId&lt;/code&gt; 保持一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30303&lt;/code&gt;: 设置 P2P 连接的监听端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--nodiscover&lt;/code&gt;: 禁用节点发现功能（如果你想手动连接节点）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http&lt;/code&gt;: 启用 HTTP-RPC 服务，便于远程访问节点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console&lt;/code&gt;: 启动 Geth 控制台以便执行命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;启动第二个节点（节点B）&#34;&gt;&lt;a href=&#34;#启动第二个节点（节点B）&#34; class=&#34;headerlink&#34; title=&#34;启动第二个节点（节点B）&#34;&gt;&lt;/a&gt;启动第二个节点（节点B）&lt;/h5&gt;&lt;p&gt;节点B可以在另一台机器上，也可以是本机上的另一个实例，只需要不同的数据目录和端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./node2data&lt;/code&gt;: 为节点B设置不同的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30304&lt;/code&gt;: 节点B的 P2P 端口必须与节点A不同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http.port 8546&lt;/code&gt;: HTTP-RPC 服务端口与节点A不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-手动连接节点&#34;&gt;&lt;a href=&#34;#4-手动连接节点&#34; class=&#34;headerlink&#34; title=&#34;4. 手动连接节点&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;手动连接节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;因为 &lt;code&gt;--nodiscover&lt;/code&gt; 禁用了自动发现，必须手动连接节点。&lt;/p&gt;
&lt;h5 id=&#34;获取节点的-enode-信息&#34;&gt;&lt;a href=&#34;#获取节点的-enode-信息&#34; class=&#34;headerlink&#34; title=&#34;获取节点的 enode 信息&#34;&gt;&lt;/a&gt;获取节点的 &lt;code&gt;enode&lt;/code&gt; 信息&lt;/h5&gt;&lt;p&gt;在节点A的控制台中，输入以下命令获取节点A的 &lt;code&gt;enode&lt;/code&gt; 地址：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nodeInfo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;enode&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出类似于：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-perl&#34; data-language=&#34;perl&#34;&gt;&lt;code class=&#34;language-perl&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303?discport=0&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个地址是节点A的唯一标识，后面的 &lt;code&gt;@127.0.0.1:30303&lt;/code&gt; 表示节点A运行的 IP 和端口。&lt;/p&gt;
&lt;h5 id=&#34;连接节点B到节点A&#34;&gt;&lt;a href=&#34;#连接节点B到节点A&#34; class=&#34;headerlink&#34; title=&#34;连接节点B到节点A&#34;&gt;&lt;/a&gt;连接节点B到节点A&lt;/h5&gt;&lt;p&gt;在节点B的控制台中，使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令连接到节点A：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/code&gt; 替换为节点A的 &lt;code&gt;enode&lt;/code&gt; 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;验证节点是否连接&#34;&gt;&lt;a href=&#34;#验证节点是否连接&#34; class=&#34;headerlink&#34; title=&#34;验证节点是否连接&#34;&gt;&lt;/a&gt;验证节点是否连接&lt;/h5&gt;&lt;p&gt;在任何一个节点的控制台中，使用以下命令检查当前连接的对等节点数量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果节点成功连接，该命令将返回大于 &lt;code&gt;0&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你还可以使用以下命令查看当前的连接节点列表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-同步和挖矿&#34;&gt;&lt;a href=&#34;#5-同步和挖矿&#34; class=&#34;headerlink&#34; title=&#34;5. 同步和挖矿&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;同步和挖矿&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在节点A或节点B中，可以启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用 1 个线程进行挖矿&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;挖到的区块会自动同步到其他节点。你可以通过以下命令查看区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-账户和交易管理&#34;&gt;&lt;a href=&#34;#6-账户和交易管理&#34; class=&#34;headerlink&#34; title=&#34;6. 账户和交易管理&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;账户和交易管理&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建新账户&#34;&gt;&lt;a href=&#34;#创建新账户&#34; class=&#34;headerlink&#34; title=&#34;创建新账户&#34;&gt;&lt;/a&gt;创建新账户&lt;/h5&gt;&lt;p&gt;在 Geth 控制台中，你可以为每个节点创建新账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;解锁账户-1&#34;&gt;&lt;a href=&#34;#解锁账户-1&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;发送交易前需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送交易&#34;&gt;&lt;a href=&#34;#发送交易&#34; class=&#34;headerlink&#34; title=&#34;发送交易&#34;&gt;&lt;/a&gt;发送交易&lt;/h5&gt;&lt;p&gt;在节点之间发送交易，可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 转账金额，单位为 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-设置启动脚本&#34;&gt;&lt;a href=&#34;#7-设置启动脚本&#34; class=&#34;headerlink&#34; title=&#34;7. 设置启动脚本&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;设置启动脚本&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;为了方便，你可以将节点启动命令放入 &lt;code&gt;.bat&lt;/code&gt; 或 &lt;code&gt;.cmd&lt;/code&gt; 文件中，在 Windows 上直接双击执行。例如，创建一个 &lt;code&gt;start_nodeA.bat&lt;/code&gt; 文件，内容为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后创建 &lt;code&gt;start_nodeB.bat&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-多节点连接的总结步骤&#34;&gt;&lt;a href=&#34;#8-多节点连接的总结步骤&#34; class=&#34;headerlink&#34; title=&#34;8. 多节点连接的总结步骤&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;多节点连接的总结步骤&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件，并初始化所有节点。&lt;/li&gt;
&lt;li&gt;启动每个节点，确保使用相同的 &lt;code&gt;networkid&lt;/code&gt; 和不同的 &lt;code&gt;port&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 手动连接节点，确保它们可以互相通信。&lt;/li&gt;
&lt;li&gt;启动挖矿，并通过 &lt;code&gt;miner.start()&lt;/code&gt; 命令进行区块生成。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.peers&lt;/code&gt; 和 &lt;code&gt;net.peerCount&lt;/code&gt; 查看连接状态。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这些步骤，你可以在私链上搭建多个节点的网络，节点之间可以互相同步区块、挖矿和发送交易。&lt;/p&gt;
&lt;h2 id=&#34;三、构建示例项目&#34;&gt;&lt;a href=&#34;#三、构建示例项目&#34; class=&#34;headerlink&#34; title=&#34;三、构建示例项目&#34;&gt;&lt;/a&gt;三、构建示例项目&lt;/h2&gt;&lt;h3 id=&#34;创建-Truffle-项目&#34;&gt;&lt;a href=&#34;#创建-Truffle-项目&#34; class=&#34;headerlink&#34; title=&#34;创建 Truffle 项目&#34;&gt;&lt;/a&gt;创建 Truffle 项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&#34;创建项目目录：&#34;&gt;&lt;a href=&#34;#创建项目目录：&#34; class=&#34;headerlink&#34; title=&#34;创建项目目录：&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建项目目录&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; my-dapp
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my-dapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&#34;初始化-Truffle-项目：&#34;&gt;&lt;a href=&#34;#初始化-Truffle-项目：&#34; class=&#34;headerlink&#34; title=&#34;初始化 Truffle 项目：&#34;&gt;&lt;/a&gt;&lt;strong&gt;初始化 Truffle 项目&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle init or truffle.cmd unbox webpack &lt;span class=&#34;token comment&#34;&gt;#后者用 webpack 模版初始化项目骨架结构&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装项目依赖的 NPM 包 ，执行以下命令安装 npm 包:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; app
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;修改-Truffle-配置&#34;&gt;&lt;a href=&#34;#修改-Truffle-配置&#34; class=&#34;headerlink&#34; title=&#34;修改 Truffle 配置&#34;&gt;&lt;/a&gt;修改 Truffle 配置&lt;/h3&gt;&lt;p&gt;在项目根目录下找到 &lt;code&gt;truffle-config.js&lt;/code&gt; 文件，并修改如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;development&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;network_id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 匹配任何网络 ID&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3000000&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 设置最大 gas 限制&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;compilers&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;solc&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0.8.0&#34;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 指定 Solidity 编译器版本&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写智能合约&#34;&gt;&lt;a href=&#34;#编写智能合约&#34; class=&#34;headerlink&#34; title=&#34;编写智能合约&#34;&gt;&lt;/a&gt;编写智能合约&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;contracts&lt;/code&gt; 目录下创建一个新的合约文件，例如 &lt;code&gt;MyContract.sol&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-solidity&#34; data-language=&#34;solidity&#34;&gt;&lt;code class=&#34;language-solidity&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// SPDX-License-Identifier: MIT&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;token version number&#34;&gt;0.8.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyContract&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; message&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建迁移文件&#34;&gt;&lt;a href=&#34;#创建迁移文件&#34; class=&#34;headerlink&#34; title=&#34;创建迁移文件&#34;&gt;&lt;/a&gt;创建迁移文件&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;migrations&lt;/code&gt; 目录下创建一个新的迁移文件，例如 &lt;code&gt;2_deploy_my_contract.js&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-默认迁移行为&#34;&gt;&lt;a href=&#34;#1-默认迁移行为&#34; class=&#34;headerlink&#34; title=&#34;1. 默认迁移行为&#34;&gt;&lt;/a&gt;1. 默认迁移行为&lt;/h4&gt;&lt;p&gt;当你运行以下命令时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Truffle 会按照 &lt;code&gt;migrations&lt;/code&gt; 目录中脚本的顺序自动部署所有合约。每个脚本的文件名通常以数字开头，以确定部署顺序。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1_initial_migration.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-部署特定合约&#34;&gt;&lt;a href=&#34;#2-部署特定合约&#34; class=&#34;headerlink&#34; title=&#34;2. 部署特定合约&#34;&gt;&lt;/a&gt;2. 部署特定合约&lt;/h4&gt;&lt;p&gt;如果你只想部署特定的合约，可以按照以下步骤进行：&lt;/p&gt;
&lt;h5 id=&#34;2-1-创建特定迁移文件&#34;&gt;&lt;a href=&#34;#2-1-创建特定迁移文件&#34; class=&#34;headerlink&#34; title=&#34;2.1 创建特定迁移文件&#34;&gt;&lt;/a&gt;2.1 创建特定迁移文件&lt;/h5&gt;&lt;p&gt;你可以在 &lt;code&gt;migrations&lt;/code&gt; 目录中创建新的迁移文件，只包含要部署的合约。例如，假设你只想部署 &lt;code&gt;MyContract&lt;/code&gt; 合约，你可以创建一个新的迁移文件，例如 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-2-使用-f-参数&#34;&gt;&lt;a href=&#34;#2-2-使用-f-参数&#34; class=&#34;headerlink&#34; title=&#34;2.2 使用 --f 参数&#34;&gt;&lt;/a&gt;2.2 使用 &lt;code&gt;--f&lt;/code&gt; 参数&lt;/h5&gt;&lt;p&gt;如果你想只运行特定的迁移文件，可以使用 &lt;code&gt;--f&lt;/code&gt; 参数（&lt;code&gt;--f&lt;/code&gt; 后接文件的序号）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--f&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将只运行 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt; 文件中的迁移脚本。&lt;/p&gt;
&lt;h4 id=&#34;3-回滚并重新部署&#34;&gt;&lt;a href=&#34;#3-回滚并重新部署&#34; class=&#34;headerlink&#34; title=&#34;3. 回滚并重新部署&#34;&gt;&lt;/a&gt;3. 回滚并重新部署&lt;/h4&gt;&lt;p&gt;如果你需要重新部署某个合约，可以使用 &lt;code&gt;--reset&lt;/code&gt; 参数，这将重新运行所有的迁移：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--reset&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果只想回滚到某个特定迁移并重新部署，你可以使用 &lt;code&gt;--to&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--to&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回滚到并重新部署到第二个迁移（&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;）为止的所有迁移。&lt;/p&gt;
&lt;h4 id=&#34;4-部署的选择性控制&#34;&gt;&lt;a href=&#34;#4-部署的选择性控制&#34; class=&#34;headerlink&#34; title=&#34;4. 部署的选择性控制&#34;&gt;&lt;/a&gt;4. 部署的选择性控制&lt;/h4&gt;&lt;p&gt;如果你的合约之间存在依赖关系（例如，一个合约依赖于另一个合约），你应该确保按照适当的顺序部署。可以在迁移脚本中引用之前已经部署的合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractA&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instanceA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContractA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;token comment&#34;&gt;// 部署时传递 MyContractA 的地址&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractB&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; instanceA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;address&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编译合约&#34;&gt;&lt;a href=&#34;#编译合约&#34; class=&#34;headerlink&#34; title=&#34;编译合约&#34;&gt;&lt;/a&gt;编译合约&lt;/h3&gt;&lt;p&gt;在部署合约之前，您需要确保智能合约已被编译。您可以通过以下命令来编译合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle compile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;自动编译与部署&#34;&gt;&lt;a href=&#34;#自动编译与部署&#34; class=&#34;headerlink&#34; title=&#34;自动编译与部署&#34;&gt;&lt;/a&gt;自动编译与部署&lt;/h4&gt;&lt;p&gt;在执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时，Truffle 会自动检查合约是否已经编译。如果合约文件有更改或未编译，Truffle 会自动执行编译。因此，在以下情况下，您可以不手动执行编译命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合约未编译&lt;/strong&gt;：当您修改了合约后，执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时会自动编译。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合约已经是最新&lt;/strong&gt;：如果合约未更改并且已经编译，则可以直接执行迁移命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;如何确认编译状态&#34;&gt;&lt;a href=&#34;#如何确认编译状态&#34; class=&#34;headerlink&#34; title=&#34;如何确认编译状态&#34;&gt;&lt;/a&gt;如何确认编译状态&lt;/h4&gt;&lt;p&gt;如果您不确定合约是否已经编译，可以检查 &lt;code&gt;build/contracts&lt;/code&gt; 目录。编译后，该目录下应该会生成合约的 JSON 文件（包含字节码和 ABI）。例如，&lt;code&gt;MyContract.json&lt;/code&gt; 文件中应该有相关信息。&lt;/p&gt;
&lt;p&gt;如果您希望在每次部署时都重新编译合约，可以在 &lt;code&gt;migrate&lt;/code&gt; 命令中使用 &lt;code&gt;--compile-all&lt;/code&gt; 参数，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate --compile-all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将强制 Truffle 重新编译所有合约。&lt;/p&gt;
&lt;h3 id=&#34;启动-Geth-节点&#34;&gt;&lt;a href=&#34;#启动-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;启动 Geth 节点&#34;&gt;&lt;/a&gt;启动 Geth 节点&lt;/h3&gt;&lt;p&gt;在 Geth 的命令行窗口中，启动您的节点，使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8545&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;解锁账户-2&#34;&gt;&lt;a href=&#34;#解锁账户-2&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，解锁您的账户（假设 &lt;code&gt;user1&lt;/code&gt; 是您的账户地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your_password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果已经正确地解锁了账户,你会看到部署过程停止在某个状态&lt;/p&gt;
&lt;p&gt;这是因为 truffle 在等待部署交易提交,但是我们在私链中还没有启动挖矿。  现在切换回 geth 终端窗口,查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
pending:1,  
queued:0  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有一个挂起的交易&lt;/p&gt;
&lt;h3 id=&#34;启动挖矿-1&#34;&gt;&lt;a href=&#34;#启动挖矿-1&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;稍等小会儿,再查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  pending:0,  queued:0  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;交易已经成功提交了&lt;/p&gt;
&lt;h3 id=&#34;部署合约&#34;&gt;&lt;a href=&#34;#部署合约&#34; class=&#34;headerlink&#34; title=&#34;部署合约&#34;&gt;&lt;/a&gt;部署合约&lt;/h3&gt;&lt;p&gt;在项目目录中，使用以下命令部署合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;检查部署结果&#34;&gt;&lt;a href=&#34;#检查部署结果&#34; class=&#34;headerlink&#34; title=&#34;检查部署结果&#34;&gt;&lt;/a&gt;检查部署结果&lt;/h3&gt;&lt;p&gt;部署完成后，您可以查看终端输出中的合约地址和交易哈希，确认合约是否成功部署。&lt;/p&gt;
&lt;h3 id=&#34;与合约交互&#34;&gt;&lt;a href=&#34;#与合约交互&#34; class=&#34;headerlink&#34; title=&#34;与合约交互&#34;&gt;&lt;/a&gt;与合约交互&lt;/h3&gt;&lt;p&gt;在合约部署后，您可以使用 Truffle 控制台与合约进行交互：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动 Truffle 控制台：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle console &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在控制台中，获取合约实例并与其交互：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContract&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; currentMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出当前消息&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;New Message&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 更新消息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; updatedMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;updatedMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出更新后的消息&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;启动-DApp&#34;&gt;&lt;a href=&#34;#启动-DApp&#34; class=&#34;headerlink&#34; title=&#34;启动 DApp&#34;&gt;&lt;/a&gt;启动 DApp&lt;/h3&gt;&lt;p&gt;执行以下命令来启动 DApp:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run dev  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器里访问 &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080&lt;/a&gt; 即可&lt;/p&gt;
&lt;p&gt;如果你希望从别的机器也可以访问你的 DApp 应用,修改一下 &lt;code&gt;package.json&lt;/code&gt;:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
	scripts:&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    	&lt;span class=&#34;token string&#34;&gt;&#34;dev&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;webpack-dev-server –-host 0.0.0.0&#34;&lt;/span&gt; 
    	&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;四、命令详解&#34;&gt;&lt;a href=&#34;#四、命令详解&#34; class=&#34;headerlink&#34; title=&#34;四、命令详解&#34;&gt;&lt;/a&gt;四、命令详解&lt;/h2&gt;&lt;h3 id=&#34;1-Geth-命令行选项&#34;&gt;&lt;a href=&#34;#1-Geth-命令行选项&#34; class=&#34;headerlink&#34; title=&#34;1. Geth 命令行选项&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Geth 命令行选项&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在启动 Geth 时使用的，用来配置节点行为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–datadir&lt;/strong&gt;：指定数据目录，所有区块链和配置数据将保存在此目录中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–networkid&lt;/strong&gt;：选择要加入的网络 ID，避免连接到错误的链。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–port&lt;/strong&gt;：指定节点的P2P通信端口（默认是 30303）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–nodiscover&lt;/strong&gt;：禁用节点自动发现，防止自动连接其他节点（常用于私有网络）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–maxpeers&lt;/strong&gt;：设置最多连接的节点数（默认 25）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–mine&lt;/strong&gt;：启动节点时立即开始挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–minerthreads&lt;/strong&gt;：设置挖矿使用的线程数量（默认为 1）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–etherbase&lt;/strong&gt;：指定挖矿奖励接收的以太坊地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; 0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpc&lt;/strong&gt;：启用 HTTP-RPC 接口，允许通过 HTTP 与节点交互。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcaddr&lt;/strong&gt;：指定 HTTP-RPC 接口监听的地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcport&lt;/strong&gt;：指定 HTTP-RPC 端口。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpccorsdomain&lt;/strong&gt;：指定允许通过 CORS（跨域资源共享）访问的域，通常设置为 &lt;code&gt;*&lt;/code&gt; 允许所有域。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcapi&lt;/strong&gt;：指定允许通过 RPC 接口调用的 API 模块（例如 &lt;code&gt;eth&lt;/code&gt;, &lt;code&gt;net&lt;/code&gt;, &lt;code&gt;web3&lt;/code&gt;）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–syncmode&lt;/strong&gt;：设置节点的同步模式，常用的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fast&lt;/code&gt;（默认，快速同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;（完全同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;light&lt;/code&gt;（轻节点，只下载区块头）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--syncmode&lt;/span&gt; fast&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–ipcdisable&lt;/strong&gt;：禁用 Geth 的 IPC-RPC 通信接口（默认启用 IPC）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--ipcdisable&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-Geth-控制台命令&#34;&gt;&lt;a href=&#34;#2-Geth-控制台命令&#34; class=&#34;headerlink&#34; title=&#34;2. Geth 控制台命令&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;Geth 控制台命令&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在 Geth 启动并进入控制台时使用的，或者通过 &lt;code&gt;geth attach&lt;/code&gt; 来附加到已运行的节点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.syncing&lt;/strong&gt;：查看节点是否在同步，并返回同步状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syncing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.blockNumber&lt;/strong&gt;：获取当前节点的区块高度。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBlock(blockNumber)**：查看某个区块的信息（例如查看最新区块）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBalance(address)**：查看某个地址的余额。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.start(threads)**：启动挖矿，并指定使用的线程数（例如 1 个线程）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.stop()**：停止挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.newAccount(password)**：创建新账户，并设置密码。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.unlockAccount(address, password)**：解锁指定账户，允许在一段时间内使用账户进行交易。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;admin.peers&lt;/strong&gt;：查看当前连接的节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**admin.addPeer(enodeURL)**：手动添加一个节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;net.peerCount&lt;/strong&gt;：查看连接的节点数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;txpool.status&lt;/strong&gt;：查看交易池的状态，包含等待和挂起的交易数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**debug.verbosity(level)**：设置日志的详细程度（0 为最少，5 为最多）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;debug&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;verbosity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**web3.sha3(string)**：计算字符串的 Keccak-256 哈希。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sha3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.sendTransaction({from: sender, to: receiver, value: amount})**：发送交易（注意单位为 Wei）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xReceiverAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些命令涵盖了Geth在日常使用中的常见需求，包括节点管理、账户管理、挖矿、网络连接、交易等。你可以根据自己的需求组合使用。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/</guid>
            <title>文件名含义</title>
            <link>https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/</link>
            <category>教程</category>
            <pubDate>Thu, 10 Oct 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;文件名含义&#34;&gt;&lt;a href=&#34;#文件名含义&#34; class=&#34;headerlink&#34; title=&#34;文件名含义&#34;&gt;&lt;/a&gt;文件名含义&lt;/h1&gt;&lt;h3 id=&#34;1-版本号&#34;&gt;&lt;a href=&#34;#1-版本号&#34; class=&#34;headerlink&#34; title=&#34;1. 版本号&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;版本号&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件名通常包含软件的版本号，用来表示该版本相对于其他版本的更新程度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：软件版本为1.0.0，版本号通常采用三段式：&lt;code&gt;主版本号.次版本号.修订号&lt;/code&gt;。主版本号表示重大更新，次版本号表示功能增加，修订号表示小的修复。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-操作系统（OS）标识&#34;&gt;&lt;a href=&#34;#2-操作系统（OS）标识&#34; class=&#34;headerlink&#34; title=&#34;2. 操作系统（OS）标识&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;操作系统（OS）标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中通常会有一个标识符，用于指定该安装文件适用于哪个操作系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;win&lt;/code&gt;：Windows 系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mac&lt;/code&gt; 或 &lt;code&gt;osx&lt;/code&gt;：Mac OS 系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linux&lt;/code&gt;：Linux 系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该软件适用于64位的Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-位数或架构&#34;&gt;&lt;a href=&#34;#3-位数或架构&#34; class=&#34;headerlink&#34; title=&#34;3. 位数或架构&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;位数或架构&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件通常会注明是为32位（x86）还是64位（x64）系统架构设计的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x86&lt;/code&gt; 或 &lt;code&gt;32&lt;/code&gt;：适用于32位系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x64&lt;/code&gt; 或 &lt;code&gt;64&lt;/code&gt;：适用于64位系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_x64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：软件适用于64位架构的系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-安装文件类型&#34;&gt;&lt;a href=&#34;#4-安装文件类型&#34; class=&#34;headerlink&#34; title=&#34;4. 安装文件类型&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;安装文件类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件扩展名（如&lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.msi&lt;/code&gt;, &lt;code&gt;.deb&lt;/code&gt;, &lt;code&gt;.rpm&lt;/code&gt;）表示安装文件的类型和其安装方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见扩展名：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.exe&lt;/code&gt;：Windows 可执行文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.msi&lt;/code&gt;：Windows 安装包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.deb&lt;/code&gt;：Debian 或 Ubuntu 的安装包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.rpm&lt;/code&gt;：Red Hat 或 CentOS 的安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_amd64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该软件是为64位系统的Debian或Ubuntu环境提供的安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-压缩格式&#34;&gt;&lt;a href=&#34;#5-压缩格式&#34; class=&#34;headerlink&#34; title=&#34;5. 压缩格式&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;压缩格式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些安装文件是以压缩包的形式发布的，文件名中会包含压缩格式的标识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见扩展名：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.zip&lt;/code&gt;：ZIP 压缩格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.tar.gz&lt;/code&gt;：Gzip压缩的Tar包（常用于Linux）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.7z&lt;/code&gt;：7-Zip压缩格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_linux.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是为Linux系统提供的安装包，并以Gzip格式压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-预发布-稳定版标识&#34;&gt;&lt;a href=&#34;#6-预发布-稳定版标识&#34; class=&#34;headerlink&#34; title=&#34;6. 预发布/稳定版标识&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;预发布/稳定版标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含有关该版本是否为稳定版或预发布版本的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beta&lt;/code&gt;：测试版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt;：早期开发版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rc&lt;/code&gt;：发布候选版（Release Candidate）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stable&lt;/code&gt;：稳定版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_beta.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是软件的测试版。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-特殊用途标识&#34;&gt;&lt;a href=&#34;#7-特殊用途标识&#34; class=&#34;headerlink&#34; title=&#34;7. 特殊用途标识&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;特殊用途标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些文件名中可能还包含表示特定用途的标识符，例如为开发者准备的工具包、文档文件等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sdk&lt;/code&gt;：软件开发工具包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;：文档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lite&lt;/code&gt;：精简版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;：完整版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_sdk_win64.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是用于Windows 64位系统的软件开发工具包，并以ZIP格式压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-语言或区域标识&#34;&gt;&lt;a href=&#34;#8-语言或区域标识&#34; class=&#34;headerlink&#34; title=&#34;8. 语言或区域标识&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;语言或区域标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件可能还会包含语言或区域的代码，表示该软件适用于特定语言版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;en&lt;/code&gt;：英语&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt; 或 &lt;code&gt;zh&lt;/code&gt;：中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fr&lt;/code&gt;：法语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_zh-cn.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是面向中国大陆的中文版本，适用于64位的Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-发行渠道或发行模式&#34;&gt;&lt;a href=&#34;#9-发行渠道或发行模式&#34; class=&#34;headerlink&#34; title=&#34;9. 发行渠道或发行模式&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;发行渠道或发行模式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会标明软件的发行渠道或模式，帮助用户了解该软件是通过何种方式发布的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offline&lt;/code&gt; 或 &lt;code&gt;standalone&lt;/code&gt;：离线安装包，不需要网络连接即可安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt; 或 &lt;code&gt;online&lt;/code&gt;：在线安装器，下载时体积小，安装过程中需要联网下载额外文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;portable&lt;/code&gt;：便携版，通常无需安装，可直接运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_offline.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：适用于64位Windows系统的离线安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-安全标识或加密&#34;&gt;&lt;a href=&#34;#10-安全标识或加密&#34; class=&#34;headerlink&#34; title=&#34;10. 安全标识或加密&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;安全标识或加密&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件可能在名称中包含与安全相关的标识符，通常用于表示该文件的来源可信或包含特定的安全加密方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;signed&lt;/code&gt;：已签名的安装文件，确保文件未被篡改&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;：指文件的哈希值（如SHA256），用户可用来验证文件完整性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_signed.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件已经过数字签名验证，确保文件的来源安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;11-支持的硬件平台&#34;&gt;&lt;a href=&#34;#11-支持的硬件平台&#34; class=&#34;headerlink&#34; title=&#34;11. 支持的硬件平台&#34;&gt;&lt;/a&gt;11. &lt;strong&gt;支持的硬件平台&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;一些安装文件会标明其支持的硬件平台，特别是在跨平台软件或硬件驱动程序中，这一点很常见。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arm&lt;/code&gt; 或 &lt;code&gt;arm64&lt;/code&gt;：适用于基于ARM架构的设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intel&lt;/code&gt; 或 &lt;code&gt;x86_64&lt;/code&gt;：适用于基于Intel或AMD x86_64架构的设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nvidia&lt;/code&gt;：适用于NVIDIA显卡驱动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;amd&lt;/code&gt;：适用于AMD显卡驱动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_arm64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该安装包适用于基于ARM64架构的设备，通常在移动设备或某些低功耗的服务器上使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-地域和市场&#34;&gt;&lt;a href=&#34;#12-地域和市场&#34; class=&#34;headerlink&#34; title=&#34;12. 地域和市场&#34;&gt;&lt;/a&gt;12. &lt;strong&gt;地域和市场&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件名会指出该软件是为特定国家或地区的市场发布的，特别是在带有本地化内容或法规限制的软件中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;：美国市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eu&lt;/code&gt;：欧洲市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt;：中国市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jp&lt;/code&gt;：日本市场&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_cn.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是适用于中国市场的Windows 64位版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;13-多语言支持&#34;&gt;&lt;a href=&#34;#13-多语言支持&#34; class=&#34;headerlink&#34; title=&#34;13. 多语言支持&#34;&gt;&lt;/a&gt;13. &lt;strong&gt;多语言支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含软件的语言支持类型，表示是否为多语言版本或仅支持特定语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ml&lt;/code&gt; 或 &lt;code&gt;multi&lt;/code&gt;：多语言版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;en&lt;/code&gt;：仅支持英语&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zh-cn&lt;/code&gt;：简体中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;es&lt;/code&gt;：西班牙语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_multi.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该安装文件支持多种语言，用户可以在安装时选择语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;14-开发版本类型&#34;&gt;&lt;a href=&#34;#14-开发版本类型&#34; class=&#34;headerlink&#34; title=&#34;14. 开发版本类型&#34;&gt;&lt;/a&gt;14. &lt;strong&gt;开发版本类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;开发者在发布未完成的测试版软件时，文件名中可能包含不同类型的开发版本标识符。这些标识符有助于区分不同的开发阶段。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dev&lt;/code&gt;：开发版，通常是未完成的版本，用于开发者内部测试&lt;/li&gt;
&lt;li&gt;&lt;code&gt;snapshot&lt;/code&gt;：快照版，是开发过程中某个时间点的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;：每晚构建版，指每天自动生成的开发版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_snapshot_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是开发过程中的快照版本，可能不稳定或包含实验性功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;15-安装模式&#34;&gt;&lt;a href=&#34;#15-安装模式&#34; class=&#34;headerlink&#34; title=&#34;15. 安装模式&#34;&gt;&lt;/a&gt;15. &lt;strong&gt;安装模式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含不同的安装模式，特别是在支持用户自定义安装或选择不同模块的安装包中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;：完整安装包，包含所有功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lite&lt;/code&gt; 或 &lt;code&gt;min&lt;/code&gt;：轻量或精简版，包含最少的功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;custom&lt;/code&gt;：用户可以自定义选择安装哪些功能模块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_lite.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的精简版，适用于64位Windows系统，可能省去了一些不常用的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;16-分发类型&#34;&gt;&lt;a href=&#34;#16-分发类型&#34; class=&#34;headerlink&#34; title=&#34;16. 分发类型&#34;&gt;&lt;/a&gt;16. &lt;strong&gt;分发类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件会根据分发渠道或协议进行分类，特别是开源软件或商业软件中，这些标识符帮助用户了解软件的使用条款或发布方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;community&lt;/code&gt;：社区版，通常是免费或开源版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; 或 &lt;code&gt;pro&lt;/code&gt;：企业版或专业版，通常包含高级功能，面向商业用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trial&lt;/code&gt;：试用版，提供一定期限的免费使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_enterprise_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是面向企业用户的专业版安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;17-补丁版本和维护版本&#34;&gt;&lt;a href=&#34;#17-补丁版本和维护版本&#34; class=&#34;headerlink&#34; title=&#34;17. 补丁版本和维护版本&#34;&gt;&lt;/a&gt;17. &lt;strong&gt;补丁版本和维护版本&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些文件名会包含补丁（patch）或维护（maintenance）版本信息，表示该文件是在原版基础上进行修复、改进或安全更新的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;patch&lt;/code&gt; 或 &lt;code&gt;hotfix&lt;/code&gt;：补丁版，修复特定问题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sp1&lt;/code&gt;, &lt;code&gt;sp2&lt;/code&gt; 等：服务包版本（Service Pack），通常是对多个问题的修复合集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt;：更新版本，提供功能改进或错误修复&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_sp1_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件1.0.0版本的第一个服务包，适用于64位Windows系统，包含问题修复和改进。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;18-兼容性标识&#34;&gt;&lt;a href=&#34;#18-兼容性标识&#34; class=&#34;headerlink&#34; title=&#34;18. 兼容性标识&#34;&gt;&lt;/a&gt;18. &lt;strong&gt;兼容性标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件会注明与其他软件或硬件的兼容性信息，特别是在驱动程序或插件的安装包中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;compatible&lt;/code&gt;：表示与特定系统或硬件兼容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;legacy&lt;/code&gt;：遗留版本，支持旧版本系统或硬件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;universal&lt;/code&gt;：通用版，适用于多个平台&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_legacy.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于旧版本Windows系统或旧硬件的安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;19-试用期或限制&#34;&gt;&lt;a href=&#34;#19-试用期或限制&#34; class=&#34;headerlink&#34; title=&#34;19. 试用期或限制&#34;&gt;&lt;/a&gt;19. &lt;strong&gt;试用期或限制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些商业软件的试用版会在文件名中包含试用期或功能限制的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;trial30&lt;/code&gt; 或 &lt;code&gt;trial60&lt;/code&gt;：表示该版本有30天或60天的试用期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;limited&lt;/code&gt;：有限制版，可能功能或时间受限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;demo&lt;/code&gt;：演示版，通常只包含部分功能或限制使用时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_trial30_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是带有30天试用期的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;20-多合一安装包&#34;&gt;&lt;a href=&#34;#20-多合一安装包&#34; class=&#34;headerlink&#34; title=&#34;20. 多合一安装包&#34;&gt;&lt;/a&gt;20. &lt;strong&gt;多合一安装包&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些软件提供“多合一”安装包，允许用户在一个安装文件中选择不同的安装选项或版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;all-in-one&lt;/code&gt;：多合一安装包，包含多个版本或功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;combo&lt;/code&gt;：组合安装包，通常包含主程序和附加组件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_all-in-one_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是一个多合一安装包，适用于64位Windows系统，可能包含多个模块或功能供选择安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;21-源代码和构建信息&#34;&gt;&lt;a href=&#34;#21-源代码和构建信息&#34; class=&#34;headerlink&#34; title=&#34;21. 源代码和构建信息&#34;&gt;&lt;/a&gt;21. &lt;strong&gt;源代码和构建信息&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些开源软件的安装文件名中可能包含源代码的相关信息，供开发者自行构建或定制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt;：源代码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build&lt;/code&gt;：构建版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bin&lt;/code&gt;：二进制文件，已编译可直接运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_src.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的源代码包，以Gzip压缩的Tar格式发布，适用于开发者。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-安装程序或压缩包&#34;&gt;&lt;a href=&#34;#22-安装程序或压缩包&#34; class=&#34;headerlink&#34; title=&#34;22. 安装程序或压缩包&#34;&gt;&lt;/a&gt;22. &lt;strong&gt;安装程序或压缩包&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中还可能指明软件是通过安装程序直接安装，还是提供压缩包供手动解压和安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;installer&lt;/code&gt;：安装程序，通常是带有图形化或命令行界面的安装文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;portable&lt;/code&gt;：便携版，无需安装，解压后即可运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;archive&lt;/code&gt;：压缩包，通常需要手动解压后安装或运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_portable_win64.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于64位Windows系统的便携版软件，用户无需安装，解压后即可使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-企业或个人版&#34;&gt;&lt;a href=&#34;#23-企业或个人版&#34; class=&#34;headerlink&#34; title=&#34;23. 企业或个人版&#34;&gt;&lt;/a&gt;23. &lt;strong&gt;企业或个人版&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件文件名中可能明确区分企业版和个人版，以帮助用户选择合适的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; 或 &lt;code&gt;business&lt;/code&gt;：企业版，面向商业用户，通常包含更多管理或安全功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;personal&lt;/code&gt;：个人版，面向普通用户，功能较简化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home&lt;/code&gt;：家庭版，适合家庭用户使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_enterprise_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于企业用户的64位Windows系统版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;24-特定用途的子版本&#34;&gt;&lt;a href=&#34;#24-特定用途的子版本&#34; class=&#34;headerlink&#34; title=&#34;24. 特定用途的子版本&#34;&gt;&lt;/a&gt;24. &lt;strong&gt;特定用途的子版本&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;软件可能根据不同用途或功能模块发布子版本，文件名中会包含对应的模块标识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt;：服务器版，适用于服务器环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client&lt;/code&gt;：客户端版，适用于普通用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gui&lt;/code&gt;：图形用户界面版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cli&lt;/code&gt;：命令行版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_server_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的服务器版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;25-云服务或集成&#34;&gt;&lt;a href=&#34;#25-云服务或集成&#34; class=&#34;headerlink&#34; title=&#34;25. 云服务或集成&#34;&gt;&lt;/a&gt;25. &lt;strong&gt;云服务或集成&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着云计算的普及，某些安装包可能包含云端服务集成的信息，帮助用户了解该软件是否与云服务兼容或包含云功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cloud&lt;/code&gt;：与云服务集成，或为云环境设计的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;saas&lt;/code&gt;：软件即服务（Software as a Service）版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hybrid&lt;/code&gt;：混合云，支持本地和云服务的集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_cloud_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持云服务集成的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;26-模块化安装&#34;&gt;&lt;a href=&#34;#26-模块化安装&#34; class=&#34;headerlink&#34; title=&#34;26. 模块化安装&#34;&gt;&lt;/a&gt;26. &lt;strong&gt;模块化安装&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件会根据不同的功能模块或插件来区分不同的安装包，文件名中通常会有相应模块的标识符。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;core&lt;/code&gt;：核心模块，必需的主功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugin&lt;/code&gt;：插件模块，扩展功能或第三方插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addon&lt;/code&gt;：附加功能模块，通常用于增强主功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extension&lt;/code&gt;：扩展功能，常用于浏览器或IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_core_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的核心模块，适用于64位Windows系统，可能不包括其他可选功能或插件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;27-操作系统版本兼容性&#34;&gt;&lt;a href=&#34;#27-操作系统版本兼容性&#34; class=&#34;headerlink&#34; title=&#34;27. 操作系统版本兼容性&#34;&gt;&lt;/a&gt;27. &lt;strong&gt;操作系统版本兼容性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中可能会包含针对特定操作系统版本的标识，特别是当某些软件只能在某些系统版本上运行时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xp&lt;/code&gt;, &lt;code&gt;vista&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;8&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;11&lt;/code&gt;：表示适用于特定版本的Windows操作系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ubuntu18.04&lt;/code&gt;, &lt;code&gt;ubuntu20.04&lt;/code&gt;：表示适用于特定版本的Ubuntu系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;macos10.15&lt;/code&gt;, &lt;code&gt;macos11&lt;/code&gt;：表示适用于特定版本的macOS系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win10_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于Windows 10系统的64位安装文件，可能不兼容其他Windows版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;28-国际化和本地化&#34;&gt;&lt;a href=&#34;#28-国际化和本地化&#34; class=&#34;headerlink&#34; title=&#34;28. 国际化和本地化&#34;&gt;&lt;/a&gt;28. &lt;strong&gt;国际化和本地化&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;软件发布时，可能会根据不同国家和地区进行本地化调整，文件名中会包含国际化的标识符，以帮助用户选择适合自己语言和地区的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;intl&lt;/code&gt;：国际化版本，支持多种语言和地区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;：美国地区版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;zh-cn&lt;/code&gt;：中国简体中文版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;de&lt;/code&gt;：德国版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jp&lt;/code&gt;：日本版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_zh-cn_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是简体中文版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;29-编译器或运行时兼容&#34;&gt;&lt;a href=&#34;#29-编译器或运行时兼容&#34; class=&#34;headerlink&#34; title=&#34;29. 编译器或运行时兼容&#34;&gt;&lt;/a&gt;29. &lt;strong&gt;编译器或运行时兼容&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于开发工具或软件开发包（SDK），安装文件名可能会包含与特定编译器或运行时环境的兼容性信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt;：GNU编译器（通常用于Linux）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msvc&lt;/code&gt;：Microsoft Visual C++ 编译器（Windows）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jdk&lt;/code&gt;：Java开发工具包（JDK）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dotnet&lt;/code&gt;：.NET运行时环境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_gcc_linux64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是用GCC编译的版本，适用于64位Linux系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;30-虚拟机或容器支持&#34;&gt;&lt;a href=&#34;#30-虚拟机或容器支持&#34; class=&#34;headerlink&#34; title=&#34;30. 虚拟机或容器支持&#34;&gt;&lt;/a&gt;30. &lt;strong&gt;虚拟机或容器支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件可能包含与虚拟化或容器化环境兼容的信息，特别是在需要虚拟机镜像或容器映像的情况下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vm&lt;/code&gt;：虚拟机镜像（如VirtualBox、VMware）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker&lt;/code&gt;：Docker容器映像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant&lt;/code&gt;：Vagrant虚拟机镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_docker_image.tar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是Docker的容器镜像文件，通常用于容器化部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;31-加密和安全机制&#34;&gt;&lt;a href=&#34;#31-加密和安全机制&#34; class=&#34;headerlink&#34; title=&#34;31. 加密和安全机制&#34;&gt;&lt;/a&gt;31. &lt;strong&gt;加密和安全机制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件安装文件中会包含加密或安全机制的信息，特别是针对高度敏感的应用程序或企业环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encrypted&lt;/code&gt;：表示安装包已加密，需特定密钥或密码才能解压或安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fips&lt;/code&gt;：符合FIPS（Federal Information Processing Standards）标准，适用于政府或安全要求较高的环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hsm&lt;/code&gt;：硬件安全模块（Hardware Security Module）兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_fips_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是符合FIPS标准的版本，适用于需要高安全性的64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;32-数据库或数据存储支持&#34;&gt;&lt;a href=&#34;#32-数据库或数据存储支持&#34; class=&#34;headerlink&#34; title=&#34;32. 数据库或数据存储支持&#34;&gt;&lt;/a&gt;32. &lt;strong&gt;数据库或数据存储支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件文件名会指出其支持的数据库或数据存储解决方案，特别是在涉及数据库管理工具或与特定数据库整合的应用中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql&lt;/code&gt;：支持MySQL数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pgsql&lt;/code&gt;：支持PostgreSQL数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongodb&lt;/code&gt;：支持MongoDB数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redis&lt;/code&gt;：支持Redis数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_mysql_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持MySQL数据库的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;33-API或协议支持&#34;&gt;&lt;a href=&#34;#33-API或协议支持&#34; class=&#34;headerlink&#34; title=&#34;33. API或协议支持&#34;&gt;&lt;/a&gt;33. &lt;strong&gt;API或协议支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件名中有时会提到软件支持的API或协议，特别是当软件依赖特定的网络协议或服务接口时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;：支持REST API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grpc&lt;/code&gt;：支持gRPC协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;soap&lt;/code&gt;：支持SOAP协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http2&lt;/code&gt;：支持HTTP/2协议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_rest_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持REST API的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;34-虚拟现实（VR）或增强现实（AR）支持&#34;&gt;&lt;a href=&#34;#34-虚拟现实（VR）或增强现实（AR）支持&#34; class=&#34;headerlink&#34; title=&#34;34. 虚拟现实（VR）或增强现实（AR）支持&#34;&gt;&lt;/a&gt;34. &lt;strong&gt;虚拟现实（VR）或增强现实（AR）支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着虚拟现实和增强现实技术的应用，一些安装文件可能包含与VR或AR兼容的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vr&lt;/code&gt;：虚拟现实支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ar&lt;/code&gt;：增强现实支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xr&lt;/code&gt;：扩展现实（Extended Reality），包括VR和AR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_vr_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持虚拟现实的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;35-物联网（IoT）支持&#34;&gt;&lt;a href=&#34;#35-物联网（IoT）支持&#34; class=&#34;headerlink&#34; title=&#34;35. 物联网（IoT）支持&#34;&gt;&lt;/a&gt;35. &lt;strong&gt;物联网（IoT）支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着物联网技术的普及，一些软件的安装文件名可能包含物联网相关的支持信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iot&lt;/code&gt;：物联网支持，适用于物联网设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;edge&lt;/code&gt;：边缘计算设备支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mqtt&lt;/code&gt;：支持MQTT协议（常用于物联网）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_iot_linux64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持物联网功能的版本，适用于64位Linux系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;36-大数据平台兼容&#34;&gt;&lt;a href=&#34;#36-大数据平台兼容&#34; class=&#34;headerlink&#34; title=&#34;36. 大数据平台兼容&#34;&gt;&lt;/a&gt;36. &lt;strong&gt;大数据平台兼容&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于与大数据平台集成的软件，文件名中可能会包含特定平台的支持信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hadoop&lt;/code&gt;：支持Hadoop平台&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spark&lt;/code&gt;：支持Apache Spark&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hive&lt;/code&gt;：支持Apache Hive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka&lt;/code&gt;：支持Apache Kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_hadoop_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持Hadoop平台的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</guid>
            <title>SDKMAN教程</title>
            <link>https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</link>
            <category>教程</category>
            <pubDate>Thu, 15 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SDKMAN教程&#34;&gt;&lt;a href=&#34;#SDKMAN教程&#34; class=&#34;headerlink&#34; title=&#34;SDKMAN教程&#34;&gt;&lt;/a&gt;SDKMAN教程&lt;/h1&gt;&lt;h3 id=&#34;1-安装-Git-Bash&#34;&gt;&lt;a href=&#34;#1-安装-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Git Bash&#34;&gt;&lt;/a&gt;1. 安装 Git Bash&lt;/h3&gt;&lt;p&gt;首先，确保你已经安装了 Git Bash。如果还没有，可以从 &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 下载并安装。&lt;/p&gt;
&lt;h3 id=&#34;2-使用-Git-Bash-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#2-使用-Git-Bash-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Git Bash 安装 SDKMAN!&#34;&gt;&lt;/a&gt;2. 使用 Git Bash 安装 SDKMAN!&lt;/h3&gt;&lt;h4 id=&#34;步骤-1-打开-Git-Bash&#34;&gt;&lt;a href=&#34;#步骤-1-打开-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 打开 Git Bash&#34;&gt;&lt;/a&gt;步骤 1: 打开 Git Bash&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在 Windows 上，右键点击桌面或文件夹空白处，选择 &lt;code&gt;Git Bash Here&lt;/code&gt;，打开 Git Bash 终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;步骤-2-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#步骤-2-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 安装 SDKMAN!&#34;&gt;&lt;/a&gt;步骤 2: 安装 SDKMAN!&lt;/h4&gt;&lt;p&gt;在 Git Bash 中执行以下命令来安装 SDKMAN!：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https://get.sdkman.io&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装完成后，执行以下命令加载 SDKMAN!：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/bin/sdkman-init.sh&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-3-验证安装&#34;&gt;&lt;a href=&#34;#步骤-3-验证安装&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 验证安装&#34;&gt;&lt;/a&gt;步骤 3: 验证安装&lt;/h4&gt;&lt;p&gt;输入以下命令，确认 SDKMAN! 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-使用-SDKMAN-安装-Java&#34;&gt;&lt;a href=&#34;#3-使用-SDKMAN-安装-Java&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 SDKMAN! 安装 Java&#34;&gt;&lt;/a&gt;3. 使用 SDKMAN! 安装 Java&lt;/h3&gt;&lt;h4 id=&#34;安装-Java-版本&#34;&gt;&lt;a href=&#34;#安装-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;安装 Java 版本&#34;&gt;&lt;/a&gt;安装 Java 版本&lt;/h4&gt;&lt;p&gt;你可以使用 SDKMAN! 安装你需要的 Java 版本，例如 Java 17：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;设置默认-Java-版本&#34;&gt;&lt;a href=&#34;#设置默认-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;设置默认 Java 版本&#34;&gt;&lt;/a&gt;设置默认 Java 版本&lt;/h4&gt;&lt;p&gt;安装完成后，将 Java 17 设置为默认版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk default &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-配置系统环境变量（全局可用）&#34;&gt;&lt;a href=&#34;#4-配置系统环境变量（全局可用）&#34; class=&#34;headerlink&#34; title=&#34;4. 配置系统环境变量（全局可用）&#34;&gt;&lt;/a&gt;4. 配置系统环境变量（全局可用）&lt;/h3&gt;&lt;p&gt;为了让其他 Shell（如 PowerShell、CMD）也能使用 SDKMAN! 安装的 Java，需要将 Java 的路径添加到系统环境变量中。&lt;/p&gt;
&lt;h4 id=&#34;步骤-1-查找-Java-安装路径&#34;&gt;&lt;a href=&#34;#步骤-1-查找-Java-安装路径&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 查找 Java 安装路径&#34;&gt;&lt;/a&gt;步骤 1: 查找 Java 安装路径&lt;/h4&gt;&lt;p&gt;首先，找到 SDKMAN! 安装的 Java 版本路径。一般位于 &lt;code&gt;$HOME/.sdkman/candidates/java/current/bin&lt;/code&gt;，具体路径可以通过以下命令在 Git Bash 中查看：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/candidates/java/current/bin&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会输出类似于以下的路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/c/Users/YourUsername/.sdkman/candidates/java/current/bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-2-打开系统环境变量设置&#34;&gt;&lt;a href=&#34;#步骤-2-打开系统环境变量设置&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 打开系统环境变量设置&#34;&gt;&lt;/a&gt;步骤 2: 打开系统环境变量设置&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;右键点击 “此电脑” 或 “计算机”，选择 “属性”。&lt;/li&gt;
&lt;li&gt;在左侧点击 “高级系统设置”。&lt;/li&gt;
&lt;li&gt;在弹出的窗口中，点击 “环境变量” 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;步骤-3-添加-Java-路径到系统-PATH&#34;&gt;&lt;a href=&#34;#步骤-3-添加-Java-路径到系统-PATH&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 添加 Java 路径到系统 PATH&#34;&gt;&lt;/a&gt;步骤 3: 添加 Java 路径到系统 &lt;code&gt;PATH&lt;/code&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在系统变量下，找到 &lt;code&gt;Path&lt;/code&gt; 变量并点击 “编辑”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “新建”，并添加以下路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Users&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;YourUsername&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;.sdkman&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;candidates&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;current&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “确定” 关闭所有窗口。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-验证配置&#34;&gt;&lt;a href=&#34;#5-验证配置&#34; class=&#34;headerlink&#34; title=&#34;5. 验证配置&#34;&gt;&lt;/a&gt;5. 验证配置&lt;/h3&gt;&lt;p&gt;关闭所有打开的终端，然后重新打开 CMD、PowerShell 或其他终端，输入以下命令，确认 Java 版本是否正确配置：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果看到安装的 Java 版本信息，说明配置成功。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</guid>
            <title>使用cloudflare的R2创建图床</title>
            <link>https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</link>
            <category>教程</category>
            <pubDate>Sat, 27 Jul 2024 15:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;a href=&#34;#使用cloudflare的R2创建图床&#34; class=&#34;headerlink&#34; title=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;/a&gt;使用cloudflare的R2创建图床&lt;/h1&gt;&lt;h2 id=&#34;创建存储桶&#34;&gt;&lt;a href=&#34;#创建存储桶&#34; class=&#34;headerlink&#34; title=&#34;创建存储桶&#34;&gt;&lt;/a&gt;创建存储桶&lt;/h2&gt;&lt;p&gt;首先有一个cloudflare账号并且成功开通R2服务&lt;/p&gt;
&lt;p&gt;依次点击R2-&amp;gt;创建存储桶&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/8c361d6ac6f76ad87da98ce758a4261a.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入创建的桶，点击设置，下滑点击连接到域，example.com为你在cloudflare上托管的域名，会自动添加记录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e02d80f0f528eb474a327a3ee2aac1cc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;等待初始化成功就可以上传图片了并通过url访问了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/592642fec58d64822ca9dd28855095c9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传图片后点进去就能看到url&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/33de127f3053a3537919fae0a5b35c61.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装PicGo&#34;&gt;&lt;a href=&#34;#安装PicGo&#34; class=&#34;headerlink&#34; title=&#34;安装PicGo&#34;&gt;&lt;/a&gt;安装PicGo&lt;/h2&gt;&lt;p&gt;这个用于管理图片上传和浏览&lt;/p&gt;
&lt;p&gt;github仓库地址&lt;a href=&#34;https://github.com/Molunerfinn/PicGo&#34;&gt;Releases · Molunerfinn/PicGo (github.com)&lt;/a&gt;下载安装&lt;/p&gt;
&lt;p&gt;要先下载node.js环境，看往期文章&lt;/p&gt;
&lt;p&gt;完成后打开软件进入插件搜索&lt;code&gt;S3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/9db03c02e835473d6d06852a17c625b4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置picgo&lt;/p&gt;
&lt;p&gt;先创建API令牌&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/658d705739daffbba58141c804c382d5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后像这样设置，创建完成记得保存密钥&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3532bc2477a125fef6ac1db367b602d0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;保存密钥后关闭&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5d17e288bc348b17904a78a2b0d48ae0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开软件，+号添加配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/22d21e489a73ad311ebd53ec422faee8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3ca6c26f83e255df9dce765281e8a034.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到这个S3API&lt;/p&gt;
&lt;p&gt;如下填写&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e2d3e9e11a19b0a3e1e2c6a7538ee923.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/2b5992966ed9d88fe80c8f1b8d242fac.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
