<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦 • Posts by &#34;教程&#34; tag</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Mon, 02 Jun 2025 22:25:00 +0800</pubDate>
        <lastBuildDate>Mon, 02 Jun 2025 22:25:00 +0800</lastBuildDate>
        <category>tip</category>
        <category>intel</category>
        <category>cloudflare</category>
        <category>安装</category>
        <category>tips</category>
        <category>re</category>
        <category>工具</category>
        <category>Java</category>
        <category>conda</category>
        <category>linux</category>
        <category>教程</category>
        <category>环境</category>
        <category>bug</category>
        <category>web</category>
        <category>wp</category>
        <category>BUUCTF</category>
        <category>攻防世界</category>
        <category>windows</category>
        <category>server</category>
        <category>comfyui</category>
        <category>powershell</category>
        <category>wall</category>
        <category>tools</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>emby</category>
        <category>python</category>
        <category>git</category>
        <category>google</category>
        <category>java</category>
        <category>学习</category>
        <category>命令</category>
        <category>远程</category>
        <category>php</category>
        <category>文件上传</category>
        <category>命令行</category>
        <category>下载</category>
        <category>区块链</category>
        <category>汇编</category>
        <category>密码学</category>
        <category>i春秋</category>
        <category>证书</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/06/02/linux-chang-yong-ming-ling-xiang-xi-jiao-cheng/</guid>
            <title>Linux 常用命令详解教程</title>
            <link>https://0xdadream.github.io/2025/06/02/linux-chang-yong-ming-ling-xiang-xi-jiao-cheng/</link>
            <category>教程</category>
            <pubDate>Mon, 02 Jun 2025 22:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Linux-常用命令详解教程&#34;&gt;&lt;a href=&#34;#Linux-常用命令详解教程&#34; class=&#34;headerlink&#34; title=&#34;Linux 常用命令详解教程&#34;&gt;&lt;/a&gt;Linux 常用命令详解教程&lt;/h1&gt;&lt;p&gt;本教程旨在提供一份全面的 Linux 常用命令列表，涵盖文件管理、系统信息获取、高级系统监控、文本处理、用户与权限管理、网络配置与诊断以及端口和防火墙管理等多个方面。每个命令都将包含其用途、常用语法、重要选项及示例，力求内容完整且实用。&lt;/p&gt;
&lt;h2 id=&#34;一、文件和目录管理-File-and-Directory-Management&#34;&gt;&lt;a href=&#34;#一、文件和目录管理-File-and-Directory-Management&#34; class=&#34;headerlink&#34; title=&#34;一、文件和目录管理 (File and Directory Management)&#34;&gt;&lt;/a&gt;一、文件和目录管理 (File and Directory Management)&lt;/h2&gt;&lt;p&gt;文件和目录管理是 Linux 系统操作的基础。以下命令能帮助用户有效地在文件系统中进行导航、创建、删除、复制、移动和查找文件及目录。&lt;/p&gt;
&lt;h3 id=&#34;1-1-基本导航与列表-Basic-Navigation-and-Listing&#34;&gt;&lt;a href=&#34;#1-1-基本导航与列表-Basic-Navigation-and-Listing&#34; class=&#34;headerlink&#34; title=&#34;1.1 基本导航与列表 (Basic Navigation and Listing)&#34;&gt;&lt;/a&gt;1.1 基本导航与列表 (Basic Navigation and Listing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/strong&gt; (列出目录内容 List directory contents)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示目录中的文件和子目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ls [选项][目录名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 以长格式显示详细信息，包括权限、所有者、大小、修改日期等。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有文件，包括隐藏文件（以 &lt;code&gt;.&lt;/code&gt; 开头的文件）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示文件大小 (例如 1K, 234M, 2G)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;: 显示除 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;..&lt;/code&gt; 之外的所有文件，包括隐藏文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 按文件大小降序排序。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 按修改时间排序，最新修改的在前。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归列出所有子目录的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -l /home/user&lt;/code&gt;: 以长格式列出 &lt;code&gt;/home/user&lt;/code&gt; 目录的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -ah&lt;/code&gt;: 以人类可读格式显示当前目录所有文件（包括隐藏文件）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/strong&gt; (更改目录 Change directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 切换当前工作目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cd [目录路径]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;特殊用法:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd..&lt;/code&gt;: 切换到上一级目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt; 或 &lt;code&gt;cd&lt;/code&gt;: 切换到当前用户的主目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd -&lt;/code&gt;: 切换到上一个工作目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd /var/log&lt;/code&gt;: 切换到 &lt;code&gt;/var/log&lt;/code&gt; 目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd../documents&lt;/code&gt;: 从当前目录切换到上一级的 &lt;code&gt;documents&lt;/code&gt; 子目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/strong&gt; (打印工作目录 Print working directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前所在的完整目录路径。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;pwd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-文件与目录操作-File-and-Directory-Operations&#34;&gt;&lt;a href=&#34;#1-2-文件与目录操作-File-and-Directory-Operations&#34; class=&#34;headerlink&#34; title=&#34;1.2 文件与目录操作 (File and Directory Operations)&#34;&gt;&lt;/a&gt;1.2 文件与目录操作 (File and Directory Operations)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;mkdir&lt;/code&gt;&lt;/strong&gt; (创建目录 Make directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 创建一个新的目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;mkdir [选项] 目录名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 递归创建目录，如果父目录不存在则一并创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mkdir new_project&lt;/code&gt;: 在当前目录下创建名为 &lt;code&gt;new_project&lt;/code&gt; 的目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir -p project/docs/images&lt;/code&gt;: 递归创建 &lt;code&gt;project&lt;/code&gt; 目录及其子目录 &lt;code&gt;docs&lt;/code&gt; 和 &lt;code&gt;images&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rmdir&lt;/code&gt;&lt;/strong&gt; (删除空目录 Remove empty directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 删除一个空的目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;rmdir [选项] 目录名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 递归删除目录，当子目录被删除后其父目录变为空时，也一同被删除。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ignore-fail-on-non-empty&lt;/code&gt;: 删除非空目录时忽略错误（通常不推荐，应使用 &lt;code&gt;rm -r&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;rmdir old_folder&lt;/code&gt; (如果 &lt;code&gt;old_folder&lt;/code&gt; 为空，则删除它)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/strong&gt; (复制文件和目录 Copy files and directories)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 复制文件或目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cp [选项] 源文件/目录 目标文件/目录&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt;: 递归复制目录及其内容。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 覆盖前提示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细的复制过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cp file1.txt file1_backup.txt&lt;/code&gt;: 将 &lt;code&gt;file1.txt&lt;/code&gt; 复制为 &lt;code&gt;file1_backup.txt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp -r project_a/ /backup/project_a_backup&lt;/code&gt;: 将 &lt;code&gt;project_a&lt;/code&gt; 目录及其所有内容复制到 &lt;code&gt;/backup/project_a_backup&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/strong&gt; (移动或重命名文件和目录 Move or rename files and directories)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 移动文件或目录，或者在同一目录下对文件或目录进行重命名。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;mv [选项] 源文件/目录 目标文件/目录&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 覆盖前提示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不覆盖已存在的目标文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 仅当源文件比目标文件新，或目标文件不存在时，才执行移动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mv report.docx documents/&lt;/code&gt;: 将 &lt;code&gt;report.docx&lt;/code&gt; 移动到 &lt;code&gt;documents&lt;/code&gt; 目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv old_name.txt new_name.txt&lt;/code&gt;: 将 &lt;code&gt;old_name.txt&lt;/code&gt; 重命名为 &lt;code&gt;new_name.txt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv temp_folder /opt/archive/&lt;/code&gt;: 将 &lt;code&gt;temp_folder&lt;/code&gt; 目录移动到 &lt;code&gt;/opt/archive/&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rm&lt;/code&gt;&lt;/strong&gt; (删除文件或目录 Remove files or directories)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 删除文件或目录。这是一个非常强大的命令，使用时需格外小心。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;rm [选项] 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt;: 递归删除目录及其所有内容。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 强制删除，不进行提示，忽略不存在的文件和参数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 删除前逐一提示确认。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细的删除过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;警告:&lt;/strong&gt; &lt;code&gt;rm -rf&lt;/code&gt; 命令会无提示地递归删除指定目录下的所有内容，一旦执行无法轻易恢复，务必谨慎使用。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rm unwanted_file.txt&lt;/code&gt;: 删除 &lt;code&gt;unwanted_file.txt&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -rf old_project/&lt;/code&gt;: 强制递归删除 &lt;code&gt;old_project&lt;/code&gt; 目录及其所有内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;touch&lt;/code&gt;&lt;/strong&gt; (创建空文件或更新文件时间戳 Create empty file or update file timestamps)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 创建一个空文件，或者更新已有文件的时间戳（访问时间和修改时间）。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;touch [选项] 文件名...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;touch newfile.log&lt;/code&gt;: 创建一个名为 &lt;code&gt;newfile.log&lt;/code&gt; 的空文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch existing_file.txt&lt;/code&gt;: 更新 &lt;code&gt;existing_file.txt&lt;/code&gt; 的时间戳。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ln&lt;/code&gt;&lt;/strong&gt; (创建链接 Create links)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 在文件之间创建链接，分为硬链接和符号链接（软链接）。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ln [选项] 源文件 链接名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 创建符号链接（软链接）。如果不使用此选项，则创建硬链接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;硬链接与符号链接的区别:&lt;ul&gt;
&lt;li&gt;硬链接：与原文件共享相同的inode号和数据块，删除原文件不影响硬链接的访问，除非所有硬链接和原文件都被删除。不能对目录创建硬链接，不能跨文件系统创建硬链接。 &lt;/li&gt;
&lt;li&gt;符号链接：一个指向原文件路径的特殊文件，类似于快捷方式。删除原文件会导致符号链接失效。可以对目录创建符号链接，也可以跨文件系统创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ln target.txt hard_link.txt&lt;/code&gt;: 为 &lt;code&gt;target.txt&lt;/code&gt; 创建一个名为 &lt;code&gt;hard_link.txt&lt;/code&gt; 的硬链接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ln -s /opt/app/config.conf /etc/app_config.conf&lt;/code&gt;: 为 &lt;code&gt;/opt/app/config.conf&lt;/code&gt; 创建一个名为 &lt;code&gt;/etc/app_config.conf&lt;/code&gt; 的符号链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-3-文件查找与类型判断-File-Searching-and-Type-Identification&#34;&gt;&lt;a href=&#34;#1-3-文件查找与类型判断-File-Searching-and-Type-Identification&#34; class=&#34;headerlink&#34; title=&#34;1.3 文件查找与类型判断 (File Searching and Type Identification)&#34;&gt;&lt;/a&gt;1.3 文件查找与类型判断 (File Searching and Type Identification)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;find&lt;/code&gt;&lt;/strong&gt; (在目录层次结构中查找文件 Search for files in a directory hierarchy)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 根据指定的条件在目录树中搜索文件和目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;find [路径...][表达式选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用表达式选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-name &#34;模式&#34;&lt;/code&gt;: 按文件名模式查找 (支持通配符, 如 &lt;code&gt;*.txt&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type 类型&lt;/code&gt;: 按文件类型查找 (如 &lt;code&gt;f&lt;/code&gt; 普通文件, &lt;code&gt;d&lt;/code&gt; 目录, &lt;code&gt;l&lt;/code&gt; 符号链接)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-user 用户名&lt;/code&gt;: 按文件所有者查找。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-group 组名&lt;/code&gt;: 按文件所属组查找。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-size [+|-]大小[cwbkMG]&lt;/code&gt;: 按文件大小查找 (如 &lt;code&gt;+10M&lt;/code&gt; 大于10MB, &lt;code&gt;-1k&lt;/code&gt; 小于1KB)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime [-|+]天数&lt;/code&gt;: 按文件修改时间查找 (如 &lt;code&gt;-7&lt;/code&gt; 7天内修改, &lt;code&gt;+30&lt;/code&gt; 30天前修改)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-exec 命令 {} \;&lt;/code&gt;: 对找到的每个文件执行指定的命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-maxdepth 层数&lt;/code&gt;: 限制搜索深度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find /home/user -name &#34;*.log&#34; -mtime -7&lt;/code&gt;: 在 &lt;code&gt;/home/user&lt;/code&gt; 目录及其子目录下查找最近7天内修改过的所有 &lt;code&gt;.log&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find. -type f -size +100M -exec rm {} \;&lt;/code&gt;: 查找当前目录下大于100MB的普通文件并删除它们（删除前会提示）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;file&lt;/code&gt;&lt;/strong&gt; (判断文件类型 Determine file type)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 识别给定文件的类型。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;file [选项] 文件名...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; 或 &lt;code&gt;--brief&lt;/code&gt;: 简要模式，不输出文件名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 输出MIME类型字符串。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt;: 尝试查看压缩文件内部。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file document.pdf&lt;/code&gt;: 显示 &lt;code&gt;document.pdf&lt;/code&gt; 的文件类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file -bi image.jpg&lt;/code&gt;: 以MIME类型格式简要显示 &lt;code&gt;image.jpg&lt;/code&gt; 的类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二、系统信息与管理-System-Information-and-Management&#34;&gt;&lt;a href=&#34;#二、系统信息与管理-System-Information-and-Management&#34; class=&#34;headerlink&#34; title=&#34;二、系统信息与管理 (System Information and Management)&#34;&gt;&lt;/a&gt;二、系统信息与管理 (System Information and Management)&lt;/h2&gt;&lt;p&gt;了解系统的运行状态、硬件信息和基本配置是系统管理的重要组成部分。&lt;/p&gt;
&lt;h3 id=&#34;2-1-系统基本信息-Basic-System-Information&#34;&gt;&lt;a href=&#34;#2-1-系统基本信息-Basic-System-Information&#34; class=&#34;headerlink&#34; title=&#34;2.1 系统基本信息 (Basic System Information)&#34;&gt;&lt;/a&gt;2.1 系统基本信息 (Basic System Information)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;uname&lt;/code&gt;&lt;/strong&gt; (打印系统信息 Print system information)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前系统的内核名称、版本、主机名等信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;uname [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有可用信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示内核发行版本。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示内核名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 显示网络节点主机名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 显示机器硬件名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;uname -a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;hostname&lt;/code&gt;&lt;/strong&gt; (显示或设置系统的主机名 Show or set the system’s host name)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 查看或临时设置系统的主机名。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;hostname [选项][新主机名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--short&lt;/code&gt;: 显示短主机名 (第一个点之前的部分)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--fqdn&lt;/code&gt; 或 &lt;code&gt;--long&lt;/code&gt;: 显示完全限定域名 (FQDN)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--ip-address&lt;/code&gt;: 显示主机的IP地址 (如果可解析)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; 或 &lt;code&gt;--all-ip-addresses&lt;/code&gt;: 显示主机所有网络接口的IP地址。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; 或 &lt;code&gt;--domain&lt;/code&gt;: 显示DNS域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt;: 显示当前主机名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo hostname new-server-name&lt;/code&gt;: 临时将主机名设置为 &lt;code&gt;new-server-name&lt;/code&gt; (永久更改需修改配置文件，如 &lt;code&gt;/etc/hostname&lt;/code&gt; )。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;date&lt;/code&gt;&lt;/strong&gt; (打印或设置系统日期和时间 Print or set the system date and time)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示或设置系统的当前日期和时间。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;date [选项][+格式]YY][.ss]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项与格式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+%Y-%m-%d %H:%M:%S&lt;/code&gt;: 以 &lt;code&gt;年-月-日 时:分:秒&lt;/code&gt; 格式显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--set=&#34;字符串&#34;&lt;/code&gt;: 设置日期和时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt;: 显示当前日期和时间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date &#39;+%A, %B %d, %Y&#39;&lt;/code&gt;: 以 “星期几, 月份 日期, 年份” 格式显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo date --set=&#34;2024-07-30 10:30:00&#34;&lt;/code&gt;: 将日期和时间设置为2024年7月30日10点30分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;uptime&lt;/code&gt;&lt;/strong&gt; (告诉系统已运行多长时间 Tell how long the system has been running)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示系统自上次启动以来运行了多长时间、当前用户数量以及系统平均负载。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;uptime [选项]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 以易读格式显示运行时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;uptime&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;whoami&lt;/code&gt;&lt;/strong&gt; (打印有效用户ID Print effective user ID)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前正在操作的用户名。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;whoami&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;whoami&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2-磁盘与内存使用-Disk-and-Memory-Usage&#34;&gt;&lt;a href=&#34;#2-2-磁盘与内存使用-Disk-and-Memory-Usage&#34; class=&#34;headerlink&#34; title=&#34;2.2 磁盘与内存使用 (Disk and Memory Usage)&#34;&gt;&lt;/a&gt;2.2 磁盘与内存使用 (Disk and Memory Usage)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;df&lt;/code&gt;&lt;/strong&gt; (报告文件系统磁盘空间使用情况 Report file system disk space usage)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示文件系统的总空间、已用空间、可用空间和挂载点。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;df [选项][文件/目录]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示 (例如 GB, MB)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt;: 显示文件系统类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 显示inode信息而非块使用情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;df -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;du&lt;/code&gt;&lt;/strong&gt; (估算文件空间使用情况 Estimate file space usage)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示指定文件或目录占用的磁盘空间大小。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;du [选项][文件/目录]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 仅显示总计大小。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 显示总计大小，并在最后显示所有参数的总和。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-depth=N&lt;/code&gt;: 只显示指定深度的目录大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;du -sh /var/log&lt;/code&gt;: 显示 &lt;code&gt;/var/log&lt;/code&gt; 目录的总大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -h --max-depth=1 /home&lt;/code&gt;: 显示 &lt;code&gt;/home&lt;/code&gt; 目录下第一级子目录和文件的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;free&lt;/code&gt;&lt;/strong&gt; (显示系统中的可用和已用物理内存和交换内存量 Display amount of free and used memory in the system)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 查看系统内存和交换空间的使用情况。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;free [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 以MB为单位显示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;: 以GB为单位显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s N&lt;/code&gt;: 每N秒刷新一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;free -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-3-系统控制-System-Control&#34;&gt;&lt;a href=&#34;#2-3-系统控制-System-Control&#34; class=&#34;headerlink&#34; title=&#34;2.3 系统控制 (System Control)&#34;&gt;&lt;/a&gt;2.3 系统控制 (System Control)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/strong&gt; (关闭系统 Schedule a system shutdown)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 安全地关闭或重启Linux系统，可以指定延迟时间或特定时间，并向登录用户发送警告信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo shutdown [选项] 时间 [警告信息]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 关闭系统后停止电源 (halt)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P&lt;/code&gt;: 关闭系统后切断电源 (power off)，通常是 &lt;code&gt;-h&lt;/code&gt; 的默认行为。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 重启系统。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 取消先前安排的关机。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 发送警告信息，但不实际关机。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;时间参数:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;now&lt;/code&gt;: 立刻执行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;+分钟数&lt;/code&gt;: 指定多少分钟后执行 (例如 &lt;code&gt;+10&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;hh:mm&lt;/code&gt;: 指定绝对时间执行 (例如 &lt;code&gt;23:00&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo shutdown -h now&lt;/code&gt;: 立刻关闭系统。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo shutdown -r +15 &#34;系统将在15分钟后重启以进行维护&#34;&lt;/code&gt;: 15分钟后重启系统并发送消息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo shutdown -c&lt;/code&gt;: 取消已计划的关机或重启。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;reboot&lt;/code&gt;&lt;/strong&gt; (重启系统 Reboot the system)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 重启Linux系统。通常是 &lt;code&gt;shutdown -r now&lt;/code&gt; 的一个快捷方式。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo reboot [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 强制重启，不调用 &lt;code&gt;shutdown&lt;/code&gt;。不推荐常规使用。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 关闭电源（如果系统支持）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo reboot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;history&lt;/code&gt;&lt;/strong&gt; (显示或操作历史列表 Display or manipulate the history list)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示用户在当前shell会话中执行过的命令历史。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;history [选项][数量]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 清空历史列表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 偏移量&lt;/code&gt;: 删除指定偏移量的历史条目。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特殊用法:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;!!&lt;/code&gt;: 执行上一条命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;!编号&lt;/code&gt;: 执行历史列表中指定编号的命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;!字符串&lt;/code&gt;: 执行最近一条以指定字符串开头的命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+R&lt;/code&gt;: 反向搜索历史命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;history&lt;/code&gt;: 显示所有命令历史。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;history 20&lt;/code&gt;: 显示最近20条命令历史。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!ls&lt;/code&gt;: 执行最近一条以 &lt;code&gt;ls&lt;/code&gt; 开头的命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;man&lt;/code&gt;&lt;/strong&gt; (系统参考手册的分页程序 an interface to the on-line reference manuals)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示命令、函数或配置文件的帮助手册页。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;man [选项][章节] 命令名/主题&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-k 关键字&lt;/code&gt;: 根据关键字搜索手册页标题和描述 (等同于 &lt;code&gt;apropos&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导航:&lt;/strong&gt; 在 &lt;code&gt;man&lt;/code&gt; 页面中，通常使用与 &lt;code&gt;less&lt;/code&gt; 相同的导航键（如空格翻页，&lt;code&gt;q&lt;/code&gt; 退出，&lt;code&gt;/&lt;/code&gt; 搜索）。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man ls&lt;/code&gt;: 显示 &lt;code&gt;ls&lt;/code&gt; 命令的手册页。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man 5 passwd&lt;/code&gt;: 显示 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件格式的手册页 (第5章节通常是文件格式)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/strong&gt; (清屏 Clear the terminal screen)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 清除终端屏幕上的所有内容，将提示符移到屏幕顶部。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;clear&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;clear&lt;/code&gt; (快捷键通常是 &lt;code&gt;Ctrl+L&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;alias&lt;/code&gt;&lt;/strong&gt; (定义或显示别名 Define or display aliases)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 为长命令或常用命令序列创建简短的别名。 &lt;/li&gt;
&lt;li&gt;语法:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alias&lt;/code&gt;: 显示所有已定义的别名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;alias 名称=&#39;命令&#39;&lt;/code&gt; : 定义一个别名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;unalias 名称&lt;/code&gt;: 删除一个别名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久化:&lt;/strong&gt; 临时定义的别名只在当前shell会话有效。要使其永久生效，需将其添加到shell的配置文件中，如 &lt;code&gt;~/.bashrc&lt;/code&gt; 或 &lt;code&gt;~/.bash_aliases&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alias ll=&#39;ls -alF&#39;&lt;/code&gt;: 定义 &lt;code&gt;ll&lt;/code&gt; 作为 &lt;code&gt;ls -alF&lt;/code&gt; 的别名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alias update=&#39;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&#39;&lt;/code&gt;: 定义 &lt;code&gt;update&lt;/code&gt; 用于更新系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三、高级系统监控-Advanced-System-Monitoring&#34;&gt;&lt;a href=&#34;#三、高级系统监控-Advanced-System-Monitoring&#34; class=&#34;headerlink&#34; title=&#34;三、高级系统监控 (Advanced System Monitoring)&#34;&gt;&lt;/a&gt;三、高级系统监控 (Advanced System Monitoring)&lt;/h2&gt;&lt;p&gt;除了基本的系统信息查看，Linux还提供了一系列高级工具，用于深入监控系统性能的各个方面，如CPU、内存、I/O和网络活动。&lt;/p&gt;
&lt;h3 id=&#34;3-1-进程管理与监控-Process-Management-and-Monitoring&#34;&gt;&lt;a href=&#34;#3-1-进程管理与监控-Process-Management-and-Monitoring&#34; class=&#34;headerlink&#34; title=&#34;3.1 进程管理与监控 (Process Management and Monitoring)&#34;&gt;&lt;/a&gt;3.1 进程管理与监控 (Process Management and Monitoring)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ps&lt;/code&gt;&lt;/strong&gt; (报告当前进程的快照 Report a snapshot of the current processes)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前系统中正在运行的进程信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ps [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;aux&lt;/code&gt;: 显示所有用户的进程（System V风格，无 &lt;code&gt;-&lt;/code&gt;）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ef&lt;/code&gt;: 显示所有进程，以完整格式（BSD风格，有 &lt;code&gt;-&lt;/code&gt;）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 显示指定用户的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--forest&lt;/code&gt;: 以ASCII字符显示进程树。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--sort=关键字&lt;/code&gt;: 按指定关键字排序 (例如 &lt;code&gt;%cpu&lt;/code&gt;, &lt;code&gt;%mem&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ps aux&lt;/code&gt;: 显示系统中所有正在运行的进程的详细信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -ef | grep sshd&lt;/code&gt;: 查找名为 &lt;code&gt;sshd&lt;/code&gt; 的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux --sort=-%mem | head -n 5&lt;/code&gt;: 显示内存使用率最高的5个进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt; (显示Linux进程 Display Linux processes)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 实时动态地显示系统中各个进程的资源占用状况，如CPU使用率、内存使用率等，默认按CPU使用率排序。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;top [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;交互命令 (在 &lt;code&gt;top&lt;/code&gt; 运行时):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt;: 按CPU使用百分比排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt;: 按内存使用百分比排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: 按进程ID (PID) 排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;: 杀死一个进程 (需要输入PID和信号，默认为15 SIGTERM)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;: 重新设置一个进程的nice值 (优先级)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; 或 &lt;code&gt;?&lt;/code&gt;: 显示帮助。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;: 退出 &lt;code&gt;top&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;: 改变刷新延迟时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d 秒数&lt;/code&gt;: 设置屏幕刷新间隔。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n 次数&lt;/code&gt;: 刷新指定次数后退出。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 批处理模式，适合将输出重定向到文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o +列名&lt;/code&gt;: 按指定列排序 (如 &lt;code&gt;+%MEM&lt;/code&gt; 按内存排序)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;top&lt;/code&gt; (启动实时监控)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;htop&lt;/code&gt;&lt;/strong&gt; (交互式进程查看器 Interactive process viewer)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; &lt;code&gt;top&lt;/code&gt; 的增强版，提供更友好的交互界面、颜色显示、鼠标支持、水平/垂直滚动以及完整的命令行显示。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;htop [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d 延迟&lt;/code&gt;: 设置更新之间的延迟（单位为十分之一秒，例如 &lt;code&gt;-d 10&lt;/code&gt; 表示1秒）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 只显示指定用户的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 列名&lt;/code&gt;: 按指定列排序 (例如 &lt;code&gt;-s PERCENT_MEM&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 以树状视图显示进程层级关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交互命令 (在 &lt;code&gt;htop&lt;/code&gt; 运行时):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;F4&lt;/code&gt; (或 &lt;code&gt;\&lt;/code&gt;): 过滤进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F5&lt;/code&gt; (或 &lt;code&gt;t&lt;/code&gt;): 切换树状视图。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F6&lt;/code&gt; (或 &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt;): 选择排序字段。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F9&lt;/code&gt; (或 &lt;code&gt;k&lt;/code&gt;): 杀死选中的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F10&lt;/code&gt; (或 &lt;code&gt;q&lt;/code&gt;): 退出 &lt;code&gt;htop&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;htop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/strong&gt; (向进程发送信号 Send a signal to a process)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 向指定的进程发送信号，常用于终止进程。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;kill [选项] PID...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用信号:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIGTERM&lt;/code&gt; (15): 默认信号，请求进程正常终止。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIGKILL&lt;/code&gt; (9): 强制终止进程，进程无法捕获此信号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIGHUP&lt;/code&gt; (1): 挂起进程，常用于让守护进程重新读取配置文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIGINT&lt;/code&gt; (2): 中断进程，等同于 &lt;code&gt;Ctrl+C&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 列出所有可用的信号名称。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-信号编号或名称&lt;/code&gt;: 指定要发送的信号 (例如 &lt;code&gt;-9&lt;/code&gt; 或 &lt;code&gt;-SIGKILL&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kill 12345&lt;/code&gt;: 向PID为12345的进程发送 &lt;code&gt;SIGTERM&lt;/code&gt; 信号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill -9 54321&lt;/code&gt;: 强制杀死PID为54321的进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pkill&lt;/code&gt;&lt;/strong&gt; (根据名称和其他属性查找或发信号给进程 Signal processes based on name and other attributes)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 根据进程名或其他属性向进程发送信号，通常用于终止进程。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;pkill [选项] 模式&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-信号&lt;/code&gt;: 指定要发送的信号 (例如 &lt;code&gt;-9&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 匹配指定用户的进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 匹配完整命令行参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pkill firefox&lt;/code&gt;: 终止所有名为 &lt;code&gt;firefox&lt;/code&gt; 的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkill -9 -f &#34;stale_script.py&#34;&lt;/code&gt;: 强制杀死完整命令行包含 “stale_script.py” 的进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;jobs&lt;/code&gt;&lt;/strong&gt; (列出活动作业 List active jobs)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示在当前shell会话中放到后台运行或被挂起的作业。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;jobs [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 同时显示作业的进程ID (PID)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 只显示作业的进程ID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 只显示正在运行的作业。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 只显示已停止（挂起）的作业。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;jobs -l&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;bg&lt;/code&gt;&lt;/strong&gt; (将作业放到后台运行 Resume suspended jobs in the background)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 将一个已挂起（stopped）的作业转到后台继续运行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;bg&lt;/code&gt; 51 (作业ID可通过 &lt;code&gt;jobs&lt;/code&gt; 命令查看，通常以 &lt;code&gt;%&lt;/code&gt; 开头，如 &lt;code&gt;%1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;bg %1&lt;/code&gt; (将作业号为1的挂起作业转到后台运行)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;fg&lt;/code&gt;&lt;/strong&gt; (将作业放到前台运行 Resume jobs in the foreground)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 将一个在后台运行或已挂起的作业转到前台继续运行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;fg&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;fg %2&lt;/code&gt; (将作业号为2的作业转到前台运行)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-2-系统性能分析-System-Performance-Analysis&#34;&gt;&lt;a href=&#34;#3-2-系统性能分析-System-Performance-Analysis&#34; class=&#34;headerlink&#34; title=&#34;3.2 系统性能分析 (System Performance Analysis)&#34;&gt;&lt;/a&gt;3.2 系统性能分析 (System Performance Analysis)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;vmstat&lt;/code&gt;&lt;/strong&gt; (报告虚拟内存统计信息 Report virtual memory statistics)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示关于进程、内存、分页、块I/O、陷阱和CPU活动的即时信息。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;vmstat [选项][延迟 [次数]]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示活动/非活动内存。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示各种事件计数器和内存统计信息的表格。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 显示磁盘统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 分区&lt;/code&gt;: 显示指定分区的详细统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 在输出中添加时间戳。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;延迟 次数&lt;/code&gt;: 每隔“延迟”秒输出一次报告，共输出“次数”次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出字段解释:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;procs&lt;/code&gt;: &lt;code&gt;r&lt;/code&gt; (等待运行的进程数), &lt;code&gt;b&lt;/code&gt; (不可中断睡眠的进程数)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;memory&lt;/code&gt;: &lt;code&gt;swpd&lt;/code&gt; (使用的虚拟内存), &lt;code&gt;free&lt;/code&gt; (空闲物理内存), &lt;code&gt;buff&lt;/code&gt; (用作缓冲的内存), &lt;code&gt;cache&lt;/code&gt; (用作缓存的内存)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;: &lt;code&gt;si&lt;/code&gt; (从磁盘换入的内存量/秒), &lt;code&gt;so&lt;/code&gt; (换出到磁盘的内存量/秒)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io&lt;/code&gt;: &lt;code&gt;bi&lt;/code&gt; (从块设备接收到的块数/秒), &lt;code&gt;bo&lt;/code&gt; (发送到块设备的块数/秒)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt;: &lt;code&gt;in&lt;/code&gt; (每秒中断次数), &lt;code&gt;cs&lt;/code&gt; (每秒上下文切换次数)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpu&lt;/code&gt;: &lt;code&gt;us&lt;/code&gt; (用户CPU时间百分比), &lt;code&gt;sy&lt;/code&gt; (系统CPU时间百分比), &lt;code&gt;id&lt;/code&gt; (空闲CPU时间百分比), &lt;code&gt;wa&lt;/code&gt; (等待I/O的CPU时间百分比), &lt;code&gt;st&lt;/code&gt; (从虚拟机窃取的CPU时间百分比)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmstat 2 5&lt;/code&gt;: 每2秒显示一次系统状态，共显示5次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vmstat -s&lt;/code&gt;: 显示内存和事件计数器摘要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;iostat&lt;/code&gt;&lt;/strong&gt; (报告CPU统计信息和输入/输出统计信息 Report Central Processing Unit (CPU) statistics and input/output statistics for devices and partitions)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 监控系统输入/输出设备和CPU的活动情况，用于识别磁盘或CPU瓶颈。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;iostat [选项][间隔 [次数]]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 仅显示CPU利用率报告。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 仅显示设备利用率报告。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;: 显示扩展的I/O统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 以KB为单位显示统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 以MB为单位显示统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 打印每个报告的时间。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p [设备 | ALL]&lt;/code&gt;: 显示块设备及其所有分区的统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;间隔 次数&lt;/code&gt;: 每隔“间隔”秒输出一次报告，共输出“次数”次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出字段解释 (部分):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%user&lt;/code&gt;: 用户级别CPU利用率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%system&lt;/code&gt;: 系统级别CPU利用率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%iowait&lt;/code&gt;: CPU等待I/O操作完成的时间百分比。高 &lt;code&gt;%iowait&lt;/code&gt; 通常表示I/O瓶颈。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;%idle&lt;/code&gt;: CPU空闲时间百分比。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tps&lt;/code&gt;: 每秒传输次数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Blk_read/s&lt;/code&gt; (或 &lt;code&gt;kB_read/s&lt;/code&gt;, &lt;code&gt;MB_read/s&lt;/code&gt;): 每秒读取的块/KB/MB数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Blk_wrtn/s&lt;/code&gt; (或 &lt;code&gt;kB_wrtn/s&lt;/code&gt;, &lt;code&gt;MB_wrtn/s&lt;/code&gt;): 每秒写入的块/KB/MB数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%util&lt;/code&gt;: 存储设备繁忙的时间百分比。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iostat -dx 2 5&lt;/code&gt;: 每2秒显示一次扩展的磁盘I/O统计信息，共显示5次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iostat -c 1&lt;/code&gt;: 每1秒显示一次CPU利用率。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;sar&lt;/code&gt;&lt;/strong&gt; (收集、报告或保存系统活动信息 Collect, report, or save system activity information)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; System Activity Reporter，一个强大的系统性能分析工具，可以收集和报告CPU、内存、I/O、网络等多种系统活动的统计数据，支持历史数据分析。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装:&lt;/strong&gt; &lt;code&gt;sar&lt;/code&gt; 通常包含在 &lt;code&gt;sysstat&lt;/code&gt; 包中，可能需要手动安装: &lt;code&gt;sudo apt-get install sysstat&lt;/code&gt; 或 &lt;code&gt;sudo yum install sysstat&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sar [选项][间隔 [次数]]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示CPU利用率。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示内存利用率。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 显示I/O和传输速率统计。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 显示块设备（磁盘）活动。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n DEV | EDEV |...&lt;/code&gt;: 显示网络统计信息 (&lt;code&gt;DEV&lt;/code&gt; 为网络接口，&lt;code&gt;EDEV&lt;/code&gt; 为网络错误)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt;: 显示运行队列长度和平均负载。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P ALL | CPU号&lt;/code&gt;: 报告每个处理器的统计信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 文件名&lt;/code&gt;: 将数据保存到二进制文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 文件名&lt;/code&gt;: 从指定文件读取数据。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;间隔 次数&lt;/code&gt;: 每隔“间隔”秒输出一次报告，共输出“次数”次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sar -u 2 5&lt;/code&gt;: 每2秒显示一次CPU利用率，共显示5次。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sar -r 1 3&lt;/code&gt;: 每1秒显示一次内存利用率，共显示3次。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sar -n DEV 1&lt;/code&gt;: 每1秒显示一次网络接口统计。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sar -f /var/log/sa/saDD&lt;/code&gt; (其中DD为日期): 查看历史系统活动报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;lsof&lt;/code&gt;&lt;/strong&gt; (列出打开的文件 List open files)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示系统中所有进程打开的文件列表。在Linux中，“一切皆文件”，因此 &lt;code&gt;lsof&lt;/code&gt; 可以显示打开的普通文件、目录、网络套接字、设备等。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;lsof [选项][文件名]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-i [条件]&lt;/code&gt;: 显示符合条件的网络连接。例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i TCP:22&lt;/code&gt;: 显示监听或连接到TCP端口22的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i :80&lt;/code&gt;: 显示监听或连接到端口80的进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i @主机名/IP&lt;/code&gt;: 显示与指定主机相关的连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 显示指定用户打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-p PID&lt;/code&gt;: 显示指定进程ID打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-c 命令名&lt;/code&gt;: 显示由指定命令名开头的进程打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;+D 目录&lt;/code&gt;: 递归显示目录下被打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-t&lt;/code&gt;: 只输出进程ID (PID)，常用于与其他命令结合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -i :80&lt;/code&gt;: 查看哪些进程正在使用80端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -u apache&lt;/code&gt;: 查看用户 &lt;code&gt;apache&lt;/code&gt; 打开了哪些文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof /var/log/syslog&lt;/code&gt;: 查看哪个进程打开了 &lt;code&gt;/var/log/syslog&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -p 1234&lt;/code&gt;: 查看PID为1234的进程打开了哪些文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;四、文本处理-Text-Processing&#34;&gt;&lt;a href=&#34;#四、文本处理-Text-Processing&#34; class=&#34;headerlink&#34; title=&#34;四、文本处理 (Text Processing)&#34;&gt;&lt;/a&gt;四、文本处理 (Text Processing)&lt;/h2&gt;&lt;p&gt;Linux 提供了大量强大的文本处理工具，用于查看、搜索、编辑和分析文本文件。&lt;/p&gt;
&lt;h3 id=&#34;4-1-文件内容查看-Viewing-File-Contents&#34;&gt;&lt;a href=&#34;#4-1-文件内容查看-Viewing-File-Contents&#34; class=&#34;headerlink&#34; title=&#34;4.1 文件内容查看 (Viewing File Contents)&#34;&gt;&lt;/a&gt;4.1 文件内容查看 (Viewing File Contents)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;cat&lt;/code&gt;&lt;/strong&gt; (连接文件并打印到标准输出 Concatenate files and print on the standard output)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示一个或多个文件的全部内容，也可用于创建或合并文件。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cat [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 显示行号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt;: 在每行末尾显示 &lt;code&gt;$&lt;/code&gt; 符号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat myfile.txt&lt;/code&gt;: 显示 &lt;code&gt;myfile.txt&lt;/code&gt; 的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat file1.txt file2.txt &amp;gt; combined.txt&lt;/code&gt;: 合并 &lt;code&gt;file1.txt&lt;/code&gt; 和 &lt;code&gt;file2.txt&lt;/code&gt; 的内容到 &lt;code&gt;combined.txt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat -n script.sh&lt;/code&gt;: 显示 &lt;code&gt;script.sh&lt;/code&gt; 的内容并带行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;less&lt;/code&gt;&lt;/strong&gt; (与 &lt;code&gt;more&lt;/code&gt; 功能相反，但功能更强大 Opposite of more, but with more features)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 分页查看文件内容，允许向前和向后滚动，支持搜索。比 &lt;code&gt;cat&lt;/code&gt; 更适合查看大文件。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;less [选项] 文件名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-N&lt;/code&gt;: 显示行号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 禁止长行自动换行 (内容超出屏幕宽度时可水平滚动)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 搜索时忽略大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt;: 如果内容能在一屏内显示完则自动退出。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt;: 退出 &lt;code&gt;less&lt;/code&gt; 后不清屏。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交互命令 (在 &lt;code&gt;less&lt;/code&gt; 运行时):&lt;ul&gt;
&lt;li&gt;空格键 或 &lt;code&gt;f&lt;/code&gt;: 向下翻一页。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: 向上翻一页。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt; 或 向下箭头: 向下滚动一行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt; 或 向上箭头: 向上滚动一行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;G&lt;/code&gt;: 跳转到文件末尾。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;: 跳转到文件开头。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/模式&lt;/code&gt;: 向下搜索指定模式。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;?模式&lt;/code&gt;: 向上搜索指定模式。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;: 重复上一次搜索 (同方向)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: 重复上一次搜索 (反方向)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;: 退出 &lt;code&gt;less&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;: 显示帮助。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;less large_log_file.log&lt;/code&gt;: 查看 &lt;code&gt;large_log_file.log&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dmesg | less -N&lt;/code&gt;: 分页显示内核环形缓冲区消息并带行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;head&lt;/code&gt;&lt;/strong&gt; (输出文件的第一部分 Output the first part of files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示文件的开头部分，默认显示前10行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;head [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n 数字&lt;/code&gt; 或 &lt;code&gt;-数字&lt;/code&gt;: 指定显示的行数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c 字节数&lt;/code&gt;: 指定显示的字节数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head access.log&lt;/code&gt;: 显示 &lt;code&gt;access.log&lt;/code&gt; 的前10行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head -n 20 error.log&lt;/code&gt;: 显示 &lt;code&gt;error.log&lt;/code&gt; 的前20行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tail&lt;/code&gt;&lt;/strong&gt; (输出文件的最后一部分 Output the last part of files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示文件的末尾部分，默认显示最后10行。常用于监控实时更新的日志文件。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;tail [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n 数字&lt;/code&gt; 或 &lt;code&gt;-数字&lt;/code&gt;: 指定显示的行数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c 字节数&lt;/code&gt;: 指定显示的字节数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 持续显示文件末尾追加的内容，直到按 &lt;code&gt;Ctrl+C&lt;/code&gt; 终止。非常适用于实时日志监控。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n +数字&lt;/code&gt;: 从第几行开始显示到文件末尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tail messages.log&lt;/code&gt;: 显示 &lt;code&gt;messages.log&lt;/code&gt; 的最后10行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -n 50 system.log&lt;/code&gt;: 显示 &lt;code&gt;system.log&lt;/code&gt; 的最后50行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -f /var/log/syslog&lt;/code&gt;: 实时监控 &lt;code&gt;/var/log/syslog&lt;/code&gt; 文件的新增内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-2-文本搜索与模式匹配-Text-Searching-and-Pattern-Matching&#34;&gt;&lt;a href=&#34;#4-2-文本搜索与模式匹配-Text-Searching-and-Pattern-Matching&#34; class=&#34;headerlink&#34; title=&#34;4.2 文本搜索与模式匹配 (Text Searching and Pattern Matching)&#34;&gt;&lt;/a&gt;4.2 文本搜索与模式匹配 (Text Searching and Pattern Matching)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (打印匹配模式的行 Print lines matching a pattern)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 在文件中搜索包含指定模式（字符串或正则表达式）的行，并打印这些行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;grep [选项] 模式 [文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 忽略模式和输入数据的大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 反向匹配，打印不包含模式的行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt;: 递归搜索目录下的所有文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 显示匹配行的行号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 只打印匹配行的计数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 只打印包含匹配模式的文件名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: 整词匹配。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt;: 使用扩展正则表达式 (ERE)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A 数字&lt;/code&gt;: 打印匹配行及其后N行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B 数字&lt;/code&gt;: 打印匹配行及其前N行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C 数字&lt;/code&gt;: 打印匹配行及其前后各N行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e 模式&lt;/code&gt;: 指定多个搜索模式。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 只显示匹配模式的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep &#34;error&#34; application.log&lt;/code&gt;: 在 &lt;code&gt;application.log&lt;/code&gt; 中搜索包含 “error” 的行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -i &#34;warning&#34; /var/log/messages&lt;/code&gt;: 在 &lt;code&gt;/var/log/messages&lt;/code&gt; 中不区分大小写地搜索 “warning”。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -r &#34;config_value&#34; /etc/myapp/&lt;/code&gt;: 递归搜索 &lt;code&gt;/etc/myapp/&lt;/code&gt; 目录中包含 “config_value” 的文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux | grep -v &#34;grep&#34;&lt;/code&gt;: 显示进程列表，但不显示 &lt;code&gt;grep&lt;/code&gt; 命令本身。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-3-文本编辑与转换-Text-Editing-and-Transformation&#34;&gt;&lt;a href=&#34;#4-3-文本编辑与转换-Text-Editing-and-Transformation&#34; class=&#34;headerlink&#34; title=&#34;4.3 文本编辑与转换 (Text Editing and Transformation)&#34;&gt;&lt;/a&gt;4.3 文本编辑与转换 (Text Editing and Transformation)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/strong&gt; (流编辑器，用于对输入流执行基本文本转换 Stream editor for performing basic text transformations on an input stream)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 一个强大的流编辑器，用于对文件或输入流进行非交互式的文本替换、删除、插入、转换等操作。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sed [选项] &#39;脚本&#39; [输入文件...]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i[后缀]&lt;/code&gt;: 直接修改文件内容 (如果提供后缀，则创建备份)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 禁止自动打印模式空间的内容，通常与 &lt;code&gt;p&lt;/code&gt; 命令配合使用。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e 脚本&lt;/code&gt;: 添加要执行的脚本。允许多个 &lt;code&gt;-e&lt;/code&gt; 来执行多个命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 脚本文件&lt;/code&gt;: 从脚本文件中读取 &lt;code&gt;sed&lt;/code&gt; 命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-E&lt;/code&gt;: 使用扩展正则表达式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用命令 (在脚本中):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;s/旧模式/新模式/[标志]&lt;/code&gt;: 替换 (substitute)。标志可以是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;: 全局替换行内所有匹配。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: 替换第N个匹配项。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt; 或 &lt;code&gt;i&lt;/code&gt;: 忽略大小写。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;d&lt;/code&gt;: 删除匹配的行。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;p&lt;/code&gt;: 打印模式空间的内容 (通常与 &lt;code&gt;-n&lt;/code&gt; 选项一起使用)。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;a\文本&lt;/code&gt;: 在匹配行之后追加文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;i\文本&lt;/code&gt;: 在匹配行之前插入文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;c\文本&lt;/code&gt;: 用文本替换匹配的行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;地址 (指定命令作用的行):&lt;/strong&gt; 可以是行号、正则表达式、或行号范围 (如 &lt;code&gt;1,5&lt;/code&gt; 表示第1到5行；&lt;code&gt;/pattern/&lt;/code&gt; 表示匹配模式的行)。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed &#39;s/apple/orange/g&#39; fruit.txt&lt;/code&gt;: 将 &lt;code&gt;fruit.txt&lt;/code&gt; 中所有的 “apple” 替换为 “orange” 并输出到标准输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed -i &#39;s/old_domain.com/new_domain.com/g&#39; config.file&lt;/code&gt;: 直接修改 &lt;code&gt;config.file&lt;/code&gt;，将其中的 “old_domain.com” 全部替换为 “new_domain.com”。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed -n &#39;/error/p&#39; server.log&lt;/code&gt;: 只打印 &lt;code&gt;server.log&lt;/code&gt; 中包含 “error” 的行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed &#39;1,5d&#39; data.txt&lt;/code&gt;: 删除 &lt;code&gt;data.txt&lt;/code&gt; 文件的前5行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed &#39;/^#/d&#39; config.conf&lt;/code&gt;: 删除 &lt;code&gt;config.conf&lt;/code&gt; 中所有以 &lt;code&gt;#&lt;/code&gt; 开头的注释行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;awk&lt;/code&gt;&lt;/strong&gt; (模式扫描和处理语言 Pattern scanning and processing language)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 一种强大的文本处理编程语言，非常适合处理结构化数据（如按列分隔的数据）、生成报告和执行复杂的文本操作。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;awk &#39;[选项] &#39;模式 {动作}&#39; [输入文件...]&#39;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;核心概念:&lt;ul&gt;
&lt;li&gt;记录 (Record): &lt;code&gt;awk&lt;/code&gt; 逐行处理输入，每行被视为一个记录，默认记录分隔符是换行符。&lt;/li&gt;
&lt;li&gt;字段 (Field): 每个记录被进一步分解为字段，默认字段分隔符是空格或制表符。字段可以用 &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,… &lt;code&gt;$NF&lt;/code&gt; (最后一个字段) 表示，&lt;code&gt;$0&lt;/code&gt; 表示整个记录。 &lt;/li&gt;
&lt;li&gt;模式 (Pattern): 在执行动作之前检查的条件。可以是正则表达式、比较表达式等。如果省略模式，则对每一行都执行动作。 &lt;/li&gt;
&lt;li&gt;动作 (Action): 由花括号 &lt;code&gt;{}&lt;/code&gt; 包围的一系列命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;BEGIN&lt;/code&gt; 块: 在处理任何输入行之前执行一次。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;END&lt;/code&gt; 块: 在处理完所有输入行之后执行一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-F 分隔符&lt;/code&gt;: 指定输入字段分隔符。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v 变量=值&lt;/code&gt;: 定义 &lt;code&gt;awk&lt;/code&gt; 脚本中可以使用的变量。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 程序文件&lt;/code&gt;: 从文件中读取 &lt;code&gt;awk&lt;/code&gt; 程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内置变量:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FS&lt;/code&gt;: 输入字段分隔符 (同 &lt;code&gt;-F&lt;/code&gt; 选项)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OFS&lt;/code&gt;: 输出字段分隔符 (默认为空格)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;RS&lt;/code&gt;: 输入记录分隔符 (默认为换行符)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ORS&lt;/code&gt;: 输出记录分隔符 (默认为换行符)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NR&lt;/code&gt;: 当前已处理的记录数（行号）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;NF&lt;/code&gt;: 当前记录中的字段数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awk&lt;/code&gt; 不仅仅是一个简单的文本过滤器，它实际上是一种编程语言，拥有变量、条件语句（如 &lt;code&gt;if&lt;/code&gt;）、循环（如 &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;）等编程结构 。这使其能够处理比 &lt;code&gt;grep&lt;/code&gt; 或 &lt;code&gt;sed&lt;/code&gt; 更复杂的文本处理任务，例如对数据进行计算、格式化输出复杂的报告等。&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;awk -F&#39;:&#39; &#39;{print $1, $3}&#39; /etc/passwd&lt;/code&gt;: 打印 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中以冒号分隔的第一和第三个字段（用户名和UID）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awk &#39;/error/ {count++; print &#34;Error on line &#34; NR &#34;: &#34; $0} END {print &#34;Total errors found: &#34; count}&#39; system.log&lt;/code&gt;: 搜索 &lt;code&gt;system.log&lt;/code&gt; 中包含 “error” 的行，打印行号和内容，并在最后打印错误总数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -l | awk &#39;{if ($5 &amp;gt; 1024) print $9, &#34;is larger than 1KB&#34;}&#39;&lt;/code&gt;: 列出当前目录中大于1KB的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/strong&gt; (转换或删除字符 Translate or delete characters)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于字符级别的转换（如大小写转换）或删除。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;tr [选项] SET1&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 删除 &lt;code&gt;SET1&lt;/code&gt; 中指定的所有字符。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 压缩 &lt;code&gt;SET1&lt;/code&gt; (或 &lt;code&gt;SET2&lt;/code&gt; 如果提供了 &lt;code&gt;SET2&lt;/code&gt;) 中连续重复的字符为一个。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 使用 &lt;code&gt;SET1&lt;/code&gt; 的补集。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字符集 (SET):&lt;/strong&gt; 可以是单个字符、字符范围 (如 &lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) 或特殊字符类 (如 &lt;code&gt;[:lower:]&lt;/code&gt;, &lt;code&gt;[:upper:]&lt;/code&gt;, &lt;code&gt;[:digit:]&lt;/code&gt;, &lt;code&gt;[:space:]&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo &#34;Hello World&#34; | tr &#39;A-Z&#39; &#39;a-z&#39;&lt;/code&gt;: 将标准输入中的大写字母转换为小写，输出 “hello world”。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat myfile.txt | tr -d &#39;\r&#39;&lt;/code&gt;: 删除 &lt;code&gt;myfile.txt&lt;/code&gt; 中的回车符 (Windows换行符转Unix换行符)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo &#34;This has too many spaces&#34; | tr -s &#39; &#39;&lt;/code&gt;: 将多个连续空格压缩为单个空格，输出 “This has too many spaces”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;cut&lt;/code&gt;&lt;/strong&gt; (从每行中删除文本区域 Remove sections from each line of files)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从文件的每一行中提取（剪切）指定的列或字符。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cut [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d 分隔符&lt;/code&gt;: 指定字段分隔符 (默认是制表符 TAB)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 字段列表&lt;/code&gt;: 指定要提取的字段编号，可以用逗号分隔多个字段 (如 &lt;code&gt;1,3&lt;/code&gt;) 或用连字符表示范围 (如 &lt;code&gt;2-5&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c 字符列表&lt;/code&gt;: 指定要提取的字符位置，格式同 &lt;code&gt;-f&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b 字节列表&lt;/code&gt;: 指定要提取的字节位置，格式同 &lt;code&gt;-f&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--complement&lt;/code&gt;: 提取指定字段/字符/字节之外的部分。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--output-delimiter=字符串&lt;/code&gt;: 指定输出字段的分隔符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cut -d&#39;:&#39; -f1,7 /etc/passwd&lt;/code&gt;: 提取 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中以冒号分隔的第一和第七个字段（用户名和shell）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;date | cut -c12-19&lt;/code&gt;: 显示当前时间的 时:分:秒 部分。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who | cut -c1-8&lt;/code&gt;: 提取 &lt;code&gt;who&lt;/code&gt; 命令输出中每行的前8个字符（通常是用户名）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-4-文本比较与统计-Text-Comparison-and-Statistics&#34;&gt;&lt;a href=&#34;#4-4-文本比较与统计-Text-Comparison-and-Statistics&#34; class=&#34;headerlink&#34; title=&#34;4.4 文本比较与统计 (Text Comparison and Statistics)&#34;&gt;&lt;/a&gt;4.4 文本比较与统计 (Text Comparison and Statistics)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/strong&gt; (对文本文件的行进行排序 Sort lines of text files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 对文件内容按行进行排序，支持多种排序规则。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sort [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 反向排序（降序）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 按数值大小进行排序。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k 字段号[,结束字段号][选项]&lt;/code&gt;: 按指定的字段进行排序。字段号从1开始。可以附加排序选项，如 &lt;code&gt;n&lt;/code&gt; (数值), &lt;code&gt;r&lt;/code&gt; (反向)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t 分隔符&lt;/code&gt;: 指定字段分隔符。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 输出唯一的行（去除重复行，等同于 &lt;code&gt;sort file | uniq&lt;/code&gt;）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 忽略大小写进行排序。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-M&lt;/code&gt;: 按月份名称排序 (Jan, Feb,…)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 人类可读数字排序 (例如 2K, 1G)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 输出文件&lt;/code&gt;: 将排序结果写入指定文件，而不是标准输出。可以用于原地排序，例如 &lt;code&gt;sort -o file.txt file.txt&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sort names.txt&lt;/code&gt;: 按字母顺序对 &lt;code&gt;names.txt&lt;/code&gt; 的行进行排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort -rn data.log | head -n 5&lt;/code&gt;: 对 &lt;code&gt;data.log&lt;/code&gt; 中的数字进行反向（从大到小）排序，并显示前5行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort -t&#39;:&#39; -k3n /etc/passwd&lt;/code&gt;: 以冒号为分隔符，按第三个字段（UID）的数值大小对 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件进行排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;uniq&lt;/code&gt;&lt;/strong&gt; (报告或省略重复行 Report or omit repeated lines)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从已排序的输入中删除或报告重复的相邻行。因此，&lt;code&gt;uniq&lt;/code&gt; 通常与 &lt;code&gt;sort&lt;/code&gt; 命令配合使用。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;uniq [选项][输入文件 [输出文件]]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 在每行前输出该行重复出现的次数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 仅显示重复出现的行（每组重复行只显示一次）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt;: 显示所有重复的行（而不是每组只显示一次）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 仅显示不重复的行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 比较时忽略大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f N&lt;/code&gt; 或 &lt;code&gt;--skip-fields=N&lt;/code&gt;: 跳过比较每行的前N个字段。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s N&lt;/code&gt; 或 &lt;code&gt;--skip-chars=N&lt;/code&gt;: 跳过比较每行的前N个字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sort access.log | uniq -c&lt;/code&gt;: 统计 &lt;code&gt;access.log&lt;/code&gt; 中每种唯一请求的次数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort data.txt | uniq -d&lt;/code&gt;: 显示 &lt;code&gt;data.txt&lt;/code&gt; 中所有重复的行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;wc&lt;/code&gt;&lt;/strong&gt; (打印换行符、字和字节计数 Print newline, word, and byte counts for each file)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 统计指定文件或标准输入的行数、单词数、字符数或字节数。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;wc [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 只统计行数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: 只统计单词数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 只统计字节数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 只统计字符数 (考虑多字节字符)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: 打印最长行的长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wc report.txt&lt;/code&gt;: 显示 &lt;code&gt;report.txt&lt;/code&gt; 的行数、单词数和字节数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -1 | wc -l&lt;/code&gt;: 统计当前目录下的文件和目录数量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep &#34;error&#34; logfile | wc -l&lt;/code&gt;: 统计 &lt;code&gt;logfile&lt;/code&gt; 中包含 “error” 的行数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;diff&lt;/code&gt;&lt;/strong&gt; (逐行比较文件 Compare files line by line)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 比较两个文件的内容，并显示它们之间的差异。常用于比较代码文件、配置文件等。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;diff [选项] 文件1 文件2&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;-U 数字&lt;/code&gt;: 以统一格式 (unified format) 输出差异，通常更易读，并被 &lt;code&gt;patch&lt;/code&gt; 命令使用。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 以上下文格式 (context format) 输出差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 比较时忽略大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: 忽略所有空格导致的差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B&lt;/code&gt;: 忽略因空行导致的差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归比较目录。如果比较的是目录，&lt;code&gt;diff&lt;/code&gt; 会比较两个目录中同名的文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--brief&lt;/code&gt;: 仅报告文件是否不同，不显示具体差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 当文件相同时报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输出格式解释:&lt;ul&gt;
&lt;li&gt;默认格式：&lt;code&gt;&amp;lt;&lt;/code&gt; 表示第一个文件中的行，&lt;code&gt;&amp;gt;&lt;/code&gt; 表示第二个文件中的行，行号和操作符（&lt;code&gt;a&lt;/code&gt; 添加, &lt;code&gt;d&lt;/code&gt; 删除, &lt;code&gt;c&lt;/code&gt; 更改）指示如何从文件1转换到文件2。 &lt;/li&gt;
&lt;li&gt;统一格式 (&lt;code&gt;-u&lt;/code&gt;): 以 &lt;code&gt;--- file1&lt;/code&gt; 和 &lt;code&gt;+++ file2&lt;/code&gt; 开头，差异部分用 &lt;code&gt;-&lt;/code&gt; (来自文件1) 和 &lt;code&gt;+&lt;/code&gt; (来自文件2) 标记。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;diff config_v1.conf config_v2.conf&lt;/code&gt;: 比较两个配置文件的差异。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diff -u old_script.sh new_script.sh &amp;gt; script.patch&lt;/code&gt;: 以统一格式生成补丁文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;diff -r project_v1/ project_v2/&lt;/code&gt;: 递归比较两个项目目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;五、用户、用户组与权限管理-User-Group-and-Permission-Management&#34;&gt;&lt;a href=&#34;#五、用户、用户组与权限管理-User-Group-and-Permission-Management&#34; class=&#34;headerlink&#34; title=&#34;五、用户、用户组与权限管理 (User, Group, and Permission Management)&#34;&gt;&lt;/a&gt;五、用户、用户组与权限管理 (User, Group, and Permission Management)&lt;/h2&gt;&lt;p&gt;管理用户账户、用户组以及文件和目录的访问权限是 Linux 系统安全与管理的核心。&lt;/p&gt;
&lt;h3 id=&#34;5-1-用户信息查看-Viewing-User-Information&#34;&gt;&lt;a href=&#34;#5-1-用户信息查看-Viewing-User-Information&#34; class=&#34;headerlink&#34; title=&#34;5.1 用户信息查看 (Viewing User Information)&#34;&gt;&lt;/a&gt;5.1 用户信息查看 (Viewing User Information)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;who&lt;/code&gt;&lt;/strong&gt; (显示当前已登录的用户 Show who is logged on)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前登录到系统的用户信息，包括用户名、终端、登录时间、来源IP等。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;who [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt;: 显示所有信息，包括空闲时间、进程ID等。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; 或 &lt;code&gt;--boot&lt;/code&gt;: 显示上次系统启动时间。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H&lt;/code&gt; 或 &lt;code&gt;--heading&lt;/code&gt;: 显示列标题。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;--users&lt;/code&gt;: 列出已登录用户，并显示空闲时间和PID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--count&lt;/code&gt;: 只显示登录用户名和数量。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;am i&lt;/code&gt; (或 &lt;code&gt;am I&lt;/code&gt;): 显示运行 &lt;code&gt;who&lt;/code&gt; 命令的当前用户信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;who&lt;/code&gt;: 显示当前登录用户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who -H&lt;/code&gt;: 显示当前登录用户并带列标题。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who am i&lt;/code&gt;: 显示当前终端会话的用户信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;id&lt;/code&gt;&lt;/strong&gt; (打印真实和有效的用户和组ID Print real and effective user and group IDs)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示指定用户（默认为当前用户）的UID（用户ID）、GID（组ID）以及所属的用户组信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;id [选项][用户名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 只显示有效用户ID (UID)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;: 只显示有效组ID (GID)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G&lt;/code&gt;: 显示所有组ID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 与 &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-G&lt;/code&gt; 配合使用，显示名称而非数字ID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 与 &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-G&lt;/code&gt; 配合使用，显示真实ID而非有效ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;: 显示当前用户的ID信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id john&lt;/code&gt;: 显示用户 &lt;code&gt;john&lt;/code&gt; 的ID信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id -Gn jane&lt;/code&gt;: 显示用户 &lt;code&gt;jane&lt;/code&gt; 所属的所有组的名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-2-用户切换与提权-Switching-Users-and-Elevating-Privileges&#34;&gt;&lt;a href=&#34;#5-2-用户切换与提权-Switching-Users-and-Elevating-Privileges&#34; class=&#34;headerlink&#34; title=&#34;5.2 用户切换与提权 (Switching Users and Elevating Privileges)&#34;&gt;&lt;/a&gt;5.2 用户切换与提权 (Switching Users and Elevating Privileges)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;su&lt;/code&gt;&lt;/strong&gt; (切换用户或成为超级用户 Switch user or become superuser)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 允许用户在当前终端会话中切换到另一个用户账户，如果未指定用户名，则默认切换到超级用户 (root)。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;su [选项][用户名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--login&lt;/code&gt;: 模拟一次完整的登录过程，加载目标用户的环境变量、主目录和shell配置。这是推荐的切换用户方式，以避免环境混乱。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c &#34;命令&#34;&lt;/code&gt;: 以目标用户身份执行单个命令后退出。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s shell路径&lt;/code&gt;: 指定切换后使用的shell。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--preserve-environment&lt;/code&gt;: 保留当前用户的环境变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;su - john&lt;/code&gt;: 切换到用户 &lt;code&gt;john&lt;/code&gt;，并加载其完整的登录环境。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;su -&lt;/code&gt;: 切换到 &lt;code&gt;root&lt;/code&gt; 用户，并加载其完整的登录环境 (需要输入root密码)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;su -c &#34;ls /root&#34; someuser&lt;/code&gt;: 以 &lt;code&gt;someuser&lt;/code&gt; 的身份执行 &lt;code&gt;ls /root&lt;/code&gt; 命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sudo&lt;/code&gt;&lt;/strong&gt; (以其他用户身份执行命令，通常是root Execute a command as another user, typically root)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 允许授权用户以超级用户 (root) 或其他指定用户的身份执行命令，而无需知道目标用户的密码（通常需要输入当前用户的密码进行验证）。这是比直接使用 &lt;code&gt;root&lt;/code&gt; 账户更安全的权限提升方式。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo [选项] 命令&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 以指定用户的身份执行命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 模拟一次 &lt;code&gt;root&lt;/code&gt; 用户的登录shell，加载 &lt;code&gt;root&lt;/code&gt; 的环境。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 执行由 &lt;code&gt;SHELL&lt;/code&gt; 环境变量指定的shell，通常是 &lt;code&gt;root&lt;/code&gt; 的shell。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 列出当前用户可以通过 &lt;code&gt;sudo&lt;/code&gt; 执行的命令以及禁止执行的命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 延长 &lt;code&gt;sudo&lt;/code&gt; 的密码凭证时效，而不执行命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 使当前的 &lt;code&gt;sudo&lt;/code&gt; 密码凭证失效，下次使用 &lt;code&gt;sudo&lt;/code&gt; 时需要重新输入密码。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 在后台运行命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置文件:&lt;/strong&gt; &lt;code&gt;sudo&lt;/code&gt; 的权限配置存储在 &lt;code&gt;/etc/sudoers&lt;/code&gt; 文件中，应使用 &lt;code&gt;visudo&lt;/code&gt; 命令进行编辑，以确保语法正确并防止配置错误导致系统无法使用 &lt;code&gt;sudo&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt update&lt;/code&gt;: 以 &lt;code&gt;root&lt;/code&gt; 权限更新软件包列表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo -u www-data crontab -l&lt;/code&gt;: 以 &lt;code&gt;www-data&lt;/code&gt; 用户身份列出其 &lt;code&gt;cron&lt;/code&gt; 作业。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo -i&lt;/code&gt;: 切换到 &lt;code&gt;root&lt;/code&gt; 用户的交互式shell。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-3-用户账户管理-User-Account-Management&#34;&gt;&lt;a href=&#34;#5-3-用户账户管理-User-Account-Management&#34; class=&#34;headerlink&#34; title=&#34;5.3 用户账户管理 (User Account Management)&#34;&gt;&lt;/a&gt;5.3 用户账户管理 (User Account Management)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;useradd&lt;/code&gt;&lt;/strong&gt; (创建新用户 Create a new user or update default new user information)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于在Linux系统中添加新的用户账户。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;useradd [选项] 用户名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 创建用户的主目录（如果不存在）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 家目录路径&lt;/code&gt;: 指定用户的主目录路径。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s shell路径&lt;/code&gt;: 指定用户的默认登录shell (例如 &lt;code&gt;/bin/bash&lt;/code&gt;, &lt;code&gt;/sbin/nologin&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g 初始组名或GID&lt;/code&gt;: 指定用户的主组。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G 附加组列表&lt;/code&gt;: 指定用户所属的附加组（逗号分隔）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c &#34;注释&#34;&lt;/code&gt;: 为用户账户添加注释信息（例如全名）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e YYYY-MM-DD&lt;/code&gt;: 设置账户的过期日期。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; &lt;code&gt;useradd&lt;/code&gt; 是一个底层工具，而 &lt;code&gt;adduser&lt;/code&gt; 是一个更用户友好的脚本，通常在Debian/Ubuntu系统中使用，它会进行更多交互式设置。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo useradd -m -s /bin/bash -c &#34;John Doe&#34; johnd&lt;/code&gt;: 创建一个名为 &lt;code&gt;johnd&lt;/code&gt; 的用户，创建其主目录，设置shell为bash，并添加注释。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo useradd -m -G developers,testers jane&lt;/code&gt;: 创建用户 &lt;code&gt;jane&lt;/code&gt;，创建其主目录，并将其加入 &lt;code&gt;developers&lt;/code&gt; 和 &lt;code&gt;testers&lt;/code&gt; 组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;userdel&lt;/code&gt;&lt;/strong&gt; (删除用户账户 Delete a user account and related files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于从系统中删除用户账户。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;userdel [选项] 用户名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 删除用户的主目录及其中的文件，以及用户的邮件池。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 强制删除用户账户，即使该用户当前已登录或其文件仍被使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo userdel olduser&lt;/code&gt;: 删除用户 &lt;code&gt;olduser&lt;/code&gt; (不删除其主目录)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo userdel -r former_employee&lt;/code&gt;: 删除用户 &lt;code&gt;former_employee&lt;/code&gt; 并移除其主目录和邮件池。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;usermod&lt;/code&gt;&lt;/strong&gt; (修改用户账户 Modify a user account)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于修改现有用户账户的各种属性。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;usermod [选项] 用户名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l 新登录名&lt;/code&gt;: 更改用户的登录名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 新家目录路径 [-m]&lt;/code&gt;: 更改用户的主目录。&lt;code&gt;-m&lt;/code&gt; 选项会将旧主目录的内容移动到新主目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 新shell路径&lt;/code&gt;: 更改用户的默认登录shell。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g 新主组名或GID&lt;/code&gt;: 更改用户的主组。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G 新附加组列表&lt;/code&gt;: 更改用户所属的附加组列表（会覆盖原有的附加组）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-aG 附加组&lt;/code&gt;: 将用户追加到指定的附加组，而不影响其他已有的附加组 ( &lt;code&gt;-a&lt;/code&gt; 必须与 &lt;code&gt;-G&lt;/code&gt; 一起使用)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: 锁定用户账户，使其无法登录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-U&lt;/code&gt;: 解锁用户账户。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e YYYY-MM-DD&lt;/code&gt;: 设置账户的过期日期。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c &#34;新注释&#34;&lt;/code&gt;: 修改用户的注释信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo usermod -s /usr/sbin/nologin restricted_user&lt;/code&gt;: 将用户 &lt;code&gt;restricted_user&lt;/code&gt; 的shell设置为 &lt;code&gt;/usr/sbin/nologin&lt;/code&gt;，使其无法登录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo usermod -aG docker current_user&lt;/code&gt;: 将用户 &lt;code&gt;current_user&lt;/code&gt; 添加到 &lt;code&gt;docker&lt;/code&gt; 组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo usermod -L problematic_user&lt;/code&gt;: 锁定用户 &lt;code&gt;problematic_user&lt;/code&gt; 的账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;passwd&lt;/code&gt;&lt;/strong&gt; (更改用户密码 Change user password)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于设置或更改用户账户的密码。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;passwd [选项][用户名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;行为:&lt;ul&gt;
&lt;li&gt;如果未指定用户名，则更改当前用户的密码 (需要输入当前密码)。 &lt;/li&gt;
&lt;li&gt;如果由 &lt;code&gt;root&lt;/code&gt; 用户执行并指定了用户名，则可以直接更改该用户的密码，无需知道其旧密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 删除指定用户的密码，使其可以无密码登录 (非常不安全，慎用)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 锁定指定用户的密码，使其无法通过密码登录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 解锁指定用户的密码。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--expire&lt;/code&gt;: 强制用户在下次登录时更改密码。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 显示密码状态信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n 天数&lt;/code&gt;: 设置密码最短有效天数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x 天数&lt;/code&gt;: 设置密码最长有效天数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 天数&lt;/code&gt;: 设置密码过期前多少天开始警告。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 天数&lt;/code&gt;: 密码过期后账户停用前的天数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;passwd&lt;/code&gt;: 更改当前用户的密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo passwd john&lt;/code&gt;: 更改用户 &lt;code&gt;john&lt;/code&gt; 的密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo passwd -l jane&lt;/code&gt;: 锁定用户 &lt;code&gt;jane&lt;/code&gt; 的密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-4-用户组管理-Group-Management&#34;&gt;&lt;a href=&#34;#5-4-用户组管理-Group-Management&#34; class=&#34;headerlink&#34; title=&#34;5.4 用户组管理 (Group Management)&#34;&gt;&lt;/a&gt;5.4 用户组管理 (Group Management)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groupadd&lt;/code&gt;&lt;/strong&gt; (创建新用户组 Create a new group)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于在系统中创建一个新的用户组。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groupadd [选项] 组名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-g GID&lt;/code&gt;: 指定新用户组的GID (组ID)。如果省略，系统会自动分配一个。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 创建一个系统组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo groupadd developers&lt;/code&gt;: 创建一个名为 &lt;code&gt;developers&lt;/code&gt; 的用户组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groupdel&lt;/code&gt;&lt;/strong&gt; (删除用户组 Delete a group)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于从系统中删除一个已存在的用户组。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groupdel [选项] 组名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--force&lt;/code&gt;: 强制删除组，即使该组是某个用户的主组（通常不推荐这样做，除非明确知道后果）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; 不能删除作为任何用户主组的组，除非先更改该用户的主组。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo groupdel old_project_team&lt;/code&gt;: 删除名为 &lt;code&gt;old_project_team&lt;/code&gt; 的用户组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groupmod&lt;/code&gt;&lt;/strong&gt; (修改用户组 Modify a group definition on the system)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于修改现有用户组的属性，如组名或GID。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groupmod [选项] 组名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n 新组名&lt;/code&gt;: 更改用户组的名称。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g 新GID&lt;/code&gt;: 更改用户组的GID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 与 &lt;code&gt;-g&lt;/code&gt; 配合使用，允许GID不唯一（通常不推荐）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo groupmod -n web_developers developers&lt;/code&gt;: 将用户组 &lt;code&gt;developers&lt;/code&gt; 重命名为 &lt;code&gt;web_developers&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo groupmod -g 1005 new_team&lt;/code&gt;: 将用户组 &lt;code&gt;new_team&lt;/code&gt; 的GID修改为1005。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groups&lt;/code&gt;&lt;/strong&gt; (打印用户所属的组 Print the groups a user is in)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示指定用户（默认为当前用户）所属的所有组的列表。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groups [用户名]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;groups&lt;/code&gt;: 显示当前用户所属的组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;groups john&lt;/code&gt;: 显示用户 &lt;code&gt;john&lt;/code&gt; 所属的组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-5-文件权限与归属管理-File-Permission-and-Ownership-Management&#34;&gt;&lt;a href=&#34;#5-5-文件权限与归属管理-File-Permission-and-Ownership-Management&#34; class=&#34;headerlink&#34; title=&#34;5.5 文件权限与归属管理 (File Permission and Ownership Management)&#34;&gt;&lt;/a&gt;5.5 文件权限与归属管理 (File Permission and Ownership Management)&lt;/h3&gt;&lt;p&gt;Linux 文件权限基于“用户-组-其他” (UGO) 模型，对每个文件或目录定义了读(r)、写(w)、执行(x)三种基本权限。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (更改文件模式位/权限 Change file mode bits)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 修改文件或目录的访问权限。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;chmod [选项] 模式 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;模式 (Mode):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;符号模式 (Symbolic Mode):&lt;/strong&gt; 使用 &lt;code&gt;u&lt;/code&gt; (所有者/用户), &lt;code&gt;g&lt;/code&gt; (组), &lt;code&gt;o&lt;/code&gt; (其他), &lt;code&gt;a&lt;/code&gt; (所有) 结合 &lt;code&gt;+&lt;/code&gt; (添加权限), &lt;code&gt;-&lt;/code&gt; (移除权限), &lt;code&gt;=&lt;/code&gt; (设置精确权限) 以及 &lt;code&gt;r&lt;/code&gt; (读), &lt;code&gt;w&lt;/code&gt; (写), &lt;code&gt;x&lt;/code&gt; (执行)。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字模式 (Octal Mode):&lt;/strong&gt; 使用三位八进制数表示权限，每位分别对应所有者、组和其他人。每位数字是r(4), w(2), x(1)权限值的和。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归地修改目录及其内容的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表格5.1: &lt;code&gt;chmod&lt;/code&gt; 数字模式权限含义&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数字&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;r (读)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;w (写)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;x (执行)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;无权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;写入权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;写入和执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;读取权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;读取和执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;读取和写入权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;读取、写入和执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;**示例:**
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+x script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 为文件 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 的所有者添加执行权限。 
 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt; private_key.pem&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 设置 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;private_key.pem&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 文件的权限为所有者可读写，组和其他人无任何权限 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rw-------&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;。
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; public_script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 设置 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;public_script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 权限为所有者可读写执行，组和其他人可读可执行 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rwxr-xr-x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;。 
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;750&lt;/span&gt; /var/www/my_app&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 递归地设置 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;/var/www/my_app&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 目录及其内容的权限为所有者读写执行，所属组读执行，其他人无权限。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;chown&lt;/code&gt;&lt;/strong&gt; (更改文件所有者和组 Change file owner and group)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 更改文件或目录的用户所有者和/或组所有者。通常需要超级用户权限。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;chown [选项][新所有者][:新组] 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归地更改目录及其内容的所有权。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo chown john myfile.txt&lt;/code&gt;: 将 &lt;code&gt;myfile.txt&lt;/code&gt; 的所有者更改为用户 &lt;code&gt;john&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chown jane:developers report.doc&lt;/code&gt;: 将 &lt;code&gt;report.doc&lt;/code&gt; 的所有者更改为 &lt;code&gt;jane&lt;/code&gt;，所属组更改为 &lt;code&gt;developers&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chown -R www-data:www-data /var/www/html&lt;/code&gt;: 递归地将 &lt;code&gt;/var/www/html&lt;/code&gt; 目录及其所有内容的所有者和所属组更改为 &lt;code&gt;www-data&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;chgrp&lt;/code&gt;&lt;/strong&gt; (更改文件组所有权 Change file group ownership)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 单独更改文件或目录的组所有者。通常需要超级用户权限。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;chgrp [选项] 新组 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归地更改目录及其内容的组所有权。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo chgrp editors draft.txt&lt;/code&gt;: 将 &lt;code&gt;draft.txt&lt;/code&gt; 的所属组更改为 &lt;code&gt;editors&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chgrp -R web_content /srv/my_website/assets&lt;/code&gt;: 递归地将 &lt;code&gt;/srv/my_website/assets&lt;/code&gt; 目录及其所有内容的所属组更改为 &lt;code&gt;web_content&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;六、网络命令-Networking-Commands&#34;&gt;&lt;a href=&#34;#六、网络命令-Networking-Commands&#34; class=&#34;headerlink&#34; title=&#34;六、网络命令 (Networking Commands)&#34;&gt;&lt;/a&gt;六、网络命令 (Networking Commands)&lt;/h2&gt;&lt;p&gt;Linux 提供了丰富的网络命令，用于测试连接、配置接口、查看状态、进行远程操作和DNS查询。&lt;/p&gt;
&lt;h3 id=&#34;6-1-网络连接测试-Network-Connectivity-Testing&#34;&gt;&lt;a href=&#34;#6-1-网络连接测试-Network-Connectivity-Testing&#34; class=&#34;headerlink&#34; title=&#34;6.1 网络连接测试 (Network Connectivity Testing)&#34;&gt;&lt;/a&gt;6.1 网络连接测试 (Network Connectivity Testing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ping&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (向网络主机发送ICMP ECHO_REQUEST数据包 Send ICMP ECHO_REQUEST to network hosts)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 测试与目标主机之间的网络连通性，通过发送ICMP回显请求并等待回显应答。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ping [选项] 主机名或IP地址&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c 次数&lt;/code&gt;: 发送指定数量的回显请求包后停止。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 间隔&lt;/code&gt;: 设置发送每个包之间的间隔秒数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 包大小&lt;/code&gt;: 设置发送包的大小（字节）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-W 超时&lt;/code&gt;: 设置等待响应的超时时间（秒）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ping google.com&lt;/code&gt;: 持续向 &lt;code&gt;google.com&lt;/code&gt; 发送ping包，直到手动停止 (&lt;code&gt;Ctrl+C&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ping -c 5 192.168.1.1&lt;/code&gt;: 向 IP 地址 &lt;code&gt;192.168.1.1&lt;/code&gt; 发送5个ping包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-2-网络接口配置与查看-Network-Interface-Configuration-and-Viewing&#34;&gt;&lt;a href=&#34;#6-2-网络接口配置与查看-Network-Interface-Configuration-and-Viewing&#34; class=&#34;headerlink&#34; title=&#34;6.2 网络接口配置与查看 (Network Interface Configuration and Viewing)&#34;&gt;&lt;/a&gt;6.2 网络接口配置与查看 (Network Interface Configuration and Viewing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/strong&gt; (显示/操作路由、网络设备、接口和隧道 Show / manipulate routing, network devices, interfaces and tunnels)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 这是Linux系统中用于网络配置的核心工具，功能强大，已取代旧的 &lt;code&gt;ifconfig&lt;/code&gt; 和 &lt;code&gt;route&lt;/code&gt; 等命令。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子命令:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;addr&lt;/code&gt;(或 a): 管理网络接口的IP地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ip addr show [dev 接口名]&lt;/code&gt;: 显示指定接口（或所有接口）的IP地址信息。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ip addr add IP地址/掩码 dev 接口名&lt;/code&gt;: 为接口添加IP地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip addr del IP地址/掩码 dev 接口名&lt;/code&gt;: 从接口删除IP地址。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;link&lt;/code&gt;(或 l): 管理网络设备（接口）本身。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip link show [dev 接口名]&lt;/code&gt;: 显示接口的状态和属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip link set 接口名 up/down&lt;/code&gt;: 启用或禁用指定的网络接口。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip link set 接口名 mtu 数值&lt;/code&gt;: 设置接口的最大传输单元 (MTU)。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;route&lt;/code&gt;(或 r): 管理路由表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip route show&lt;/code&gt; 或 &lt;code&gt;ip route list&lt;/code&gt;: 显示内核路由表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ip route add 目标网络/掩码 via 网关地址 [dev 接口名]&lt;/code&gt;: 添加一条静态路由。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip route del 目标网络/掩码&lt;/code&gt;: 删除一条路由。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;neigh&lt;/code&gt;(或 n): 管理ARP或NDP缓存（邻居表）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip neigh show&lt;/code&gt;: 显示邻居表。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ip&lt;/code&gt; 命令是 &lt;code&gt;ifconfig&lt;/code&gt; 的现代替代品，功能更强大，语法更一致。&lt;code&gt;ifconfig&lt;/code&gt; 在许多新发行版中已不再默认安装。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip addr show eth0&lt;/code&gt;: 显示 &lt;code&gt;eth0&lt;/code&gt; 接口的IP地址信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ip link set wlan0 down&lt;/code&gt;: 禁用 &lt;code&gt;wlan0&lt;/code&gt; 无线接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip route add default via 192.168.1.254 dev eth0&lt;/code&gt;: 添加默认网关。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/strong&gt; (配置网络接口 - 旧版 Configure a network interface - deprecated)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 在较旧的Linux系统中用于配置和显示网络接口信息。 &lt;/li&gt;
&lt;li&gt;内容:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt;: 显示所有活动接口的信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifconfig 接口名&lt;/code&gt;: 显示指定接口的信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ifconfig 接口名 IP地址 netmask 子网掩码 up&lt;/code&gt;: 配置接口IP并启用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; 此命令已逐渐被 &lt;code&gt;ip&lt;/code&gt; 命令取代，在新系统中可能未预装。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;ifconfig eth0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-3-网络状态与套接字查看-Network-Status-and-Socket-Viewing&#34;&gt;&lt;a href=&#34;#6-3-网络状态与套接字查看-Network-Status-and-Socket-Viewing&#34; class=&#34;headerlink&#34; title=&#34;6.3 网络状态与套接字查看 (Network Status and Socket Viewing)&#34;&gt;&lt;/a&gt;6.3 网络状态与套接字查看 (Network Status and Socket Viewing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ss&lt;/code&gt;&lt;/strong&gt; (另一个调查套接字的实用程序 Another utility to investigate sockets)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于显示活动的套接字连接信息，是 &lt;code&gt;netstat&lt;/code&gt; 的现代替代品，通常更快且提供更多信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ss [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;: 显示Unix域套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听状态的套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示使用套接字的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不解析服务名称，直接显示数字地址和端口号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有状态的套接字（监听和非监听）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 显示详细的套接字信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 显示计时器信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示套接字摘要统计。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;state 状态&lt;/code&gt;: 过滤特定状态的连接 (如 &lt;code&gt;established&lt;/code&gt;, &lt;code&gt;listen&lt;/code&gt;, &lt;code&gt;time-wait&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss&lt;/code&gt; 命令比 &lt;code&gt;netstat&lt;/code&gt; 更快、提供更多信息，并且是 &lt;code&gt;netstat&lt;/code&gt; 的推荐替代品。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ss -tulnp&lt;/code&gt;: 显示所有TCP和UDP的监听端口及其对应的进程，并以数字形式显示地址和端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tan state established&lt;/code&gt;: 显示所有已建立的TCP连接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tlp sport = :22&lt;/code&gt;: 显示监听在SSH端口（22）的TCP连接及进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;netstat&lt;/code&gt;&lt;/strong&gt; (打印网络连接、路由表、接口统计等 - 旧版 Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships - deprecated)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示网络连接、路由表、接口统计等信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;netstat [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP连接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP连接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示与套接字关联的进程ID和名称。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 以数字形式显示地址和端口号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有活动的连接和监听端口。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示内核路由表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 显示网络接口统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示各协议的统计摘要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; &lt;code&gt;netstat&lt;/code&gt; 已被 &lt;code&gt;ss&lt;/code&gt; 命令取代，在新系统中可能未预装或不被推荐使用。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo netstat -tulnp&lt;/code&gt;: 显示所有TCP和UDP的监听端口、对应的进程，并以数字形式显示地址和端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-4-远程连接与文件传输-Remote-Connection-and-File-Transfer&#34;&gt;&lt;a href=&#34;#6-4-远程连接与文件传输-Remote-Connection-and-File-Transfer&#34; class=&#34;headerlink&#34; title=&#34;6.4 远程连接与文件传输 (Remote Connection and File Transfer)&#34;&gt;&lt;/a&gt;6.4 远程连接与文件传输 (Remote Connection and File Transfer)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssh&lt;/code&gt;&lt;/strong&gt; (安全Shell客户端 OpenSSH SSH client (remote login program))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; Secure Shell，用于安全地远程登录到另一台Linux/Unix服务器，并执行命令。所有通信都会被加密。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ssh [选项] 用户名@主机名或IP地址 [命令]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p 端口号&lt;/code&gt;: 指定连接的远程SSH服务器端口 (默认为22)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 身份文件路径&lt;/code&gt;: 指定用于公钥认证的私钥文件路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt;: 启用X11转发，允许在本地显示远程GUI应用的界面。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L 本地端口:目标主机:目标端口&lt;/code&gt;: 设置本地端口转发。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R 远程端口:目标主机:目标端口&lt;/code&gt;: 设置远程端口转发。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C&lt;/code&gt;: 启用压缩，可以加快慢速网络下的传输速度。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 详细模式，显示连接过程的调试信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh user@example.com&lt;/code&gt;: 以用户 &lt;code&gt;user&lt;/code&gt; 的身份登录到 &lt;code&gt;example.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -p 2222 admin@192.168.1.100 &#34;df -h&#34;&lt;/code&gt;: 通过2222端口以 &lt;code&gt;admin&lt;/code&gt; 用户身份连接到 &lt;code&gt;192.168.1.100&lt;/code&gt; 并执行 &lt;code&gt;df -h&lt;/code&gt; 命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -L 8080:localhost:80 user@remote_server&lt;/code&gt;: 将本地的8080端口转发到远程服务器的80端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;scp&lt;/code&gt;&lt;/strong&gt; (安全复制文件 Secure copy (remote file copy program))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; Secure Copy Protocol，用于在本地主机和远程主机之间，或者两台远程主机之间安全地复制文件和目录。它使用SSH进行数据传输和认证。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;scp [选项][[用户名@]源主机:]源文件路径 [[用户名@]目标主机:]目标文件路径&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-P 端口号&lt;/code&gt; (注意是大写P): 指定远程主机的SSH端口。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归复制整个目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 身份文件路径&lt;/code&gt;: 指定用于认证的私钥文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C&lt;/code&gt;: 启用压缩。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细的传输过程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l 带宽限制&lt;/code&gt;: 限制传输带宽 (Kbit/s)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scp local_document.pdf user@remote.server.com:/home/user/documents/&lt;/code&gt;: 将本地文件 &lt;code&gt;local_document.pdf&lt;/code&gt; 复制到远程服务器的指定目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;scp -r user@source.server.com:/var/www/html/ /backup/website/&lt;/code&gt;: 将远程服务器上的 &lt;code&gt;html&lt;/code&gt; 目录递归复制到本地的 &lt;code&gt;/backup/website/&lt;/code&gt; 目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scp -P 2200 file.zip user@another.host:~/backups/&lt;/code&gt;: 通过2200端口将 &lt;code&gt;file.zip&lt;/code&gt; 复制到另一台远程主机的 &lt;code&gt;backups&lt;/code&gt; 目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;sftp&lt;/code&gt;&lt;/strong&gt; (安全文件传输程序 Secure File Transfer Program)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 提供一个交互式的安全文件传输会话，类似于传统的FTP客户端，但所有操作都通过SSH加密通道进行。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sftp [选项][用户名@]主机名或IP地址&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-P 端口号&lt;/code&gt; (大写P): 指定远程SSH端口。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b 批处理文件&lt;/code&gt;: 从批处理文件中读取命令执行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B 缓冲区大小&lt;/code&gt;: 指定传输缓冲区大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互模式常用命令:&lt;/p&gt;
&lt;p&gt; (在 sftp&amp;gt;提示符下使用) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get 远程文件 [本地路径]&lt;/code&gt;: 下载文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;put 本地文件 [远程路径]&lt;/code&gt;: 上传文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls [远程路径]&lt;/code&gt;: 列出远程目录内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd 远程路径&lt;/code&gt;: 更改远程当前目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lcd 本地路径&lt;/code&gt;: 更改本地当前目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;: 显示远程当前工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lpwd&lt;/code&gt;: 显示本地当前工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm 远程文件&lt;/code&gt;: 删除远程文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir 远程目录名&lt;/code&gt;: 创建远程目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rmdir 远程目录名&lt;/code&gt;: 删除远程目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt; 或 &lt;code&gt;?&lt;/code&gt;: 显示帮助信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt; 或 &lt;code&gt;quit&lt;/code&gt; 或 &lt;code&gt;bye&lt;/code&gt;: 断开连接并退出SFTP。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sftp user@fileserver.example.com&lt;/code&gt;: 连接到SFTP服务器。&lt;/li&gt;
&lt;li&gt;(在 &lt;code&gt;sftp&amp;gt;&lt;/code&gt; 提示符下) &lt;code&gt;get important_data.zip /local/backups/&lt;/code&gt;: 从远程服务器下载文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ftp&lt;/code&gt;&lt;/strong&gt; (文件传输协议客户端 - 旧版，不安全 File Transfer Protocol client - deprecated, insecure)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于通过文件传输协议 (FTP) 在网络上的计算机之间传输文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内容:&lt;/strong&gt; FTP传输数据和凭证（用户名、密码）时通常不加密，存在安全风险。推荐使用SFTP或SCP作为更安全的选择。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ftp [主机名或IP地址]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互模式常用命令:&lt;/p&gt;
&lt;p&gt; (在 ftp&amp;gt; 提示符下使用) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user 用户名 [密码]&lt;/code&gt;: 登录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get 远程文件 [本地文件名]&lt;/code&gt;: 下载文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;put 本地文件 [远程文件名]&lt;/code&gt;: 上传文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mget 远程文件模式&lt;/code&gt;: 下载多个文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mput 本地文件模式&lt;/code&gt;: 上传多个文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;: 列出远程目录内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd 远程目录&lt;/code&gt;: 更改远程当前目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;: 显示远程当前工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete 远程文件&lt;/code&gt;: 删除远程文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir 远程目录名&lt;/code&gt;: 创建远程目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;binary&lt;/code&gt;: 设置二进制传输模式 (传输非文本文件时必须)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ascii&lt;/code&gt;: 设置ASCII传输模式 (传输文本文件时)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bye&lt;/code&gt; 或 &lt;code&gt;quit&lt;/code&gt;: 断开连接并退出FTP。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ftp ftp.example.com&lt;/code&gt;: 连接到FTP服务器 &lt;code&gt;ftp.example.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;(在 &lt;code&gt;ftp&amp;gt;&lt;/code&gt; 提示符下) &lt;code&gt;get report.pdf&lt;/code&gt;: 下载 &lt;code&gt;report.pdf&lt;/code&gt; 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/strong&gt; (非交互式网络下载器 The non-interactive network downloader)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从Web服务器下载文件，支持HTTP, HTTPS, FTP协议。它是一个非交互式工具，可以在后台运行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;wget [选项]......&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-O 文件名&lt;/code&gt;: 将下载内容保存为指定的文件名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P 目录&lt;/code&gt;: 指定下载文件的保存目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 断点续传，继续下载未完成的文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归下载整个网站或目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l 深度&lt;/code&gt;: 递归下载时指定最大深度。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-np&lt;/code&gt;: 递归下载时不进入父目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 转换链接，使下载的HTML文件可以在本地查看。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 下载所有显示HTML页面所需的文件，如图片等。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 后台下载。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 文件&lt;/code&gt;: 从文件中读取URL列表进行下载。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--limit-rate=速度&lt;/code&gt;: 限制下载速度 (例如 &lt;code&gt;100k&lt;/code&gt;,&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;wget-非交互式网络下载器-The-non-interactive-network-downloader&#34;&gt;&lt;a href=&#34;#wget-非交互式网络下载器-The-non-interactive-network-downloader&#34; class=&#34;headerlink&#34; title=&#34;wget (非交互式网络下载器 The non-interactive network downloader)&#34;&gt;&lt;/a&gt;&lt;code&gt;wget&lt;/code&gt; (非交互式网络下载器 The non-interactive network downloader)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从Web服务器下载文件，支持HTTP, HTTPS, FTP协议。它是一个非交互式工具，可以在后台运行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;wget [选项]...... [URL...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-O 文件名&lt;/code&gt;: 将下载内容保存为指定的文件名。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -O latest.tar.gz https://example.com/latest-version.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P 目录&lt;/code&gt;: 指定下载文件的保存目录。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -P /opt/downloads https://example.com/archive.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 断点续传，继续下载未完成的文件。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -c https://large.example.com/bigfile.iso&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归下载整个网站或目录。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r http://example.com/docs/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l 深度&lt;/code&gt;: 递归下载时指定最大深度。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -l 2 http://example.com/&lt;/code&gt; (下载当前页和下一层链接)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-np&lt;/code&gt;: 递归下载时不进入父目录。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -np http://example.com/parent/child/&lt;/code&gt; (不会下载 &lt;code&gt;http://example.com/parent/&lt;/code&gt; 的其他内容)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 转换链接，使下载的HTML文件可以在本地查看。通常与 &lt;code&gt;-r&lt;/code&gt;一起使用。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -k http://example.com/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 下载所有显示HTML页面所需的文件，如图片、CSS等。通常与 &lt;code&gt;-r&lt;/code&gt;一起使用。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -p http://example.com/page.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 后台下载。日志默认输出到 &lt;code&gt;wget-log&lt;/code&gt;。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -b https://large.example.com/bigfile.iso&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 文件&lt;/code&gt;: 从文件中读取URL列表进行下载，每行一个URL。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -i urls.txt&lt;/code&gt; (其中 &lt;code&gt;urls.txt&lt;/code&gt; 包含多个下载链接)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--limit-rate=速度&lt;/code&gt;: 限制下载速度 (例如 100k, 1m)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --limit-rate=200k https://example.com/file.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--tries=数字&lt;/code&gt;: 设置重试次数 (0 表示无限)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --tries=5 https://example.com/file.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--user-agent=&#34;字符串&#34;&lt;/code&gt;: 设置自定义 User-Agent。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --user-agent=&#34;MyCustomBrowser/1.0&#34; https://example.com/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-check-certificate&lt;/code&gt;: 不检查服务器的SSL证书 (不安全，慎用)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --no-check-certificate https://self-signed.example.com/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--user=用户名 --password=密码&lt;/code&gt;: FTP或HTTP认证。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --user=myuser --password=mypass ftp://ftp.example.com/file.dat&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;curl-Client-URL-请求库&#34;&gt;&lt;a href=&#34;#curl-Client-URL-请求库&#34; class=&#34;headerlink&#34; title=&#34;curl (Client URL 请求库)&#34;&gt;&lt;/a&gt;&lt;code&gt;curl&lt;/code&gt; (Client URL 请求库)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于传输数据的命令行工具，支持多种协议，包括 HTTP, HTTPS, FTP, FTPS, SCP, SFTP, LDAP, SMTP 等。非常灵活，常用于API测试和自动化脚本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;curl [选项] [URL...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-O&lt;/code&gt;: 将输出写入与远程文件名相同的文件。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -O https://example.com/archive.zip&lt;/code&gt; (保存为 &lt;code&gt;archive.zip&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 文件名&lt;/code&gt;: 将输出写入指定的文件名。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -o new_archive.zip https://example.com/archive.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: 跟随HTTP重定向。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -L http://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; 或 &lt;code&gt;--head&lt;/code&gt;: 仅获取HTTP头信息。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -I https://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H &#34;头部信息&#34;&lt;/code&gt;: 添加自定义HTTP头部。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -H &#34;Authorization: Bearer mytoken&#34; https://api.example.com/data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X 请求方法&lt;/code&gt;: 指定HTTP请求方法 (GET, POST, PUT, DELETE 等)。&lt;ul&gt;
&lt;li&gt;示例 (POST): &lt;code&gt;curl -X POST -H &#34;Content-Type: application/json&#34; -d &#39;{&#34;key&#34;:&#34;value&#34;}&#39; https://api.example.com/submit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d &#34;数据&#34;&lt;/code&gt; 或 &lt;code&gt;--data &#34;数据&#34;&lt;/code&gt;: 发送HTTP POST请求的数据。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -d &#34;param1=value1&amp;amp;param2=value2&#34; https://example.com/form&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F &#34;表单数据&#34;&lt;/code&gt; 或 &lt;code&gt;--form &#34;表单数据&#34;&lt;/code&gt;: 模拟multipart/form-data提交，常用于文件上传。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -F &#34;file=@/path/to/localfile.txt&#34; -F &#34;name=myfile&#34; https://example.com/upload&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名:密码&lt;/code&gt;: 进行服务器认证。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -u myuser:mypassword https://api.example.com/protected&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--silent&lt;/code&gt;: 静默模式，不显示进度条或错误信息。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;STATUS=$(curl -s -o /dev/null -w &#34;%{http_code}&#34; https://example.com)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--verbose&lt;/code&gt;: 显示详细的通信信息，包括请求和响应头。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -v https://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; 或 &lt;code&gt;--insecure&lt;/code&gt;: 允许连接到没有有效SSL证书的HTTPS站点 (不安全，慎用)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -k https://self-signed.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--connect-timeout 秒数&lt;/code&gt;: 设置最大连接时间。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl --connect-timeout 5 https://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-time 秒数&lt;/code&gt;: 设置允许操作完成的最大总时间。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl --max-time 30 https://example.com/largefile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;nslookup-Name-Server-Lookup-🌐&#34;&gt;&lt;a href=&#34;#nslookup-Name-Server-Lookup-🌐&#34; class=&#34;headerlink&#34; title=&#34;nslookup (Name Server Lookup) 🌐&#34;&gt;&lt;/a&gt;&lt;code&gt;nslookup&lt;/code&gt; (Name Server Lookup) 🌐&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 查询DNS域名服务器，获取域名对应的IP地址或其他DNS记录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非交互模式: &lt;code&gt;nslookup [选项] [域名] [DNS服务器]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;交互模式: &lt;code&gt;nslookup&lt;/code&gt; (进入提示符后输入域名或选项)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用选项/查询类型:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认查询A记录 (IP地址)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=mx&lt;/code&gt;: 查询MX记录 (邮件交换服务器)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=ns&lt;/code&gt;: 查询NS记录 (域名服务器)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=soa&lt;/code&gt;: 查询SOA记录 (起始授权机构记录)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=txt&lt;/code&gt;: 查询TXT记录 (文本记录)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=ptr&lt;/code&gt;: 查询PTR记录 (反向DNS查找)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server &amp;lt;DNS服务器IP&amp;gt;&lt;/code&gt;: 在交互模式下指定查询使用的DNS服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup example.com&lt;/code&gt; (&lt;a href=&#34;https://www.google.com/search?q=%E6%9F%A5%E8%AF%A2example.com%E7%9A%84A%E8%AE%B0%E5%BD%95&#34;&gt;https://www.google.com/search?q=%E6%9F%A5%E8%AF%A2example.com的A记录&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup example.com 8.8.8.8&lt;/code&gt; (使用Google &lt;a href=&#34;https://www.google.com/search?q=DNS%E6%9F%A5%E8%AF%A2example.com&#34;&gt;https://www.google.com/search?q=DNS%E6%9F%A5%E8%AF%A2example.com&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互模式:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;nslookup
&amp;gt; server 8.8.8.8
&amp;gt; set type=mx
&amp;gt; google.com
&amp;gt; exit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup -type=mx google.com&lt;/code&gt; (非交互式查询MX记录)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup 8.8.4.4&lt;/code&gt; (反向查询IP地址对应的主机名)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;dig-Domain-Information-Groper-⛏️&#34;&gt;&lt;a href=&#34;#dig-Domain-Information-Groper-⛏️&#34; class=&#34;headerlink&#34; title=&#34;dig (Domain Information Groper) ⛏️&#34;&gt;&lt;/a&gt;&lt;code&gt;dig&lt;/code&gt; (Domain Information Groper) ⛏️&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 更强大和灵活的DNS查询工具，常用于DNS故障排除。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;dig [@服务器] [域名] [查询类型] [选项]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项/查询类型:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认查询A记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MX&lt;/code&gt;: 查询邮件交换记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NS&lt;/code&gt;: 查询域名服务器记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOA&lt;/code&gt;: 查询起始授权机构记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TXT&lt;/code&gt;: 查询文本记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ANY&lt;/code&gt;: 查询所有类型的记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x &amp;lt;IP地址&amp;gt;&lt;/code&gt;: 进行反向DNS查询。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+short&lt;/code&gt;: 只显示简短的答案。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+trace&lt;/code&gt;: 显示从根域名服务器开始的完整解析路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+noall +answer&lt;/code&gt;: 只显示答案部分。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@&amp;lt;DNS服务器IP&amp;gt;&lt;/code&gt;: 指定查询使用的DNS服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dig example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com MX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig @8.8.8.8 example.com NS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig -x 8.8.4.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com +short&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com +trace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com ANY +noall +answer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;traceroute-追踪路由路径-🗺️&#34;&gt;&lt;a href=&#34;#traceroute-追踪路由路径-🗺️&#34; class=&#34;headerlink&#34; title=&#34;traceroute (追踪路由路径) 🗺️&#34;&gt;&lt;/a&gt;&lt;code&gt;traceroute&lt;/code&gt; (追踪路由路径) 🗺️&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示数据包从本地主机到目标主机所经过的路由路径，以及每一跳的延迟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;traceroute [选项] 主机名或IP地址&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不将IP地址解析为主机名，加快显示速度。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt;: 使用ICMP ECHO请求代替UDP数据报 (类似Windows的tracert)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt;: 使用TCP SYN请求代替UDP数据报。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 端口号&lt;/code&gt;: 指定UDP或TCP的目标端口号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m 最大跳数&lt;/code&gt;: 设置最大跳数 (默认为30)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q 查询次数&lt;/code&gt;: 设置对每一跳发送的探测包数量 (默认为3)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 等待时间&lt;/code&gt;: 设置等待探测包回复的超时时间 (秒)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;traceroute google.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute -n 8.8.8.8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute -I example.com&lt;/code&gt; (使用ICMP)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute -T -p 80 example.com&lt;/code&gt; (&lt;a href=&#34;https://www.google.com/search?q=%E8%BF%BD%E8%B8%AA%E5%88%B0example.com%E7%9A%84TCP&#34;&gt;https://www.google.com/search?q=%E8%BF%BD%E8%B8%AA%E5%88%B0example.com的TCP&lt;/a&gt; 80端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;route-显示-操作IP路由表-传统&#34;&gt;&lt;a href=&#34;#route-显示-操作IP路由表-传统&#34; class=&#34;headerlink&#34; title=&#34;route (显示/操作IP路由表 - 传统)&#34;&gt;&lt;/a&gt;&lt;code&gt;route&lt;/code&gt; (显示/操作IP路由表 - 传统)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; (传统工具，推荐使用 &lt;code&gt;ip route&lt;/code&gt;) 显示和管理内核的IP路由表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;route&lt;/code&gt; 或 &lt;code&gt;route -n&lt;/code&gt; (显示路由表，-n以数字形式显示IP和端口)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route add [-net|-host] 目标 [netmask Nm] [gw Gw] [metric M] [[dev] If]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route del [-net|-host] 目标 [netmask Nm] [gw Gw] [metric M] [[dev] If]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用选项/参数:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 以数字形式显示地址，不解析主机名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt;: 添加一条路由。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;del&lt;/code&gt;: 删除一条路由。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-net 目标网络&lt;/code&gt;: 指定目标是一个网络。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-host 目标主机&lt;/code&gt;: 指定目标是一个主机。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netmask Nm&lt;/code&gt;: 指定网络的子网掩码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gw Gw&lt;/code&gt;: 指定网关地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dev If&lt;/code&gt;: 指定路由通过哪个网络接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metric M&lt;/code&gt;: 设置路由的度量值 (成本)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;route -n&lt;/code&gt; (显示当前路由表)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route add default gw 192.168.1.1&lt;/code&gt; (添加默认网关)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route del default gw 192.168.1.1&lt;/code&gt; (删除默认网关)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route add -net 10.0.0.0 netmask 255.0.0.0 gw 192.168.0.1&lt;/code&gt; (添加一个到10.0.0.0/8网络的静态路由)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route del -net 10.0.0.0 netmask 255.0.0.0&lt;/code&gt; (删除上述静态路由)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、端口查看与防火墙管理&#34;&gt;&lt;a href=&#34;#七、端口查看与防火墙管理&#34; class=&#34;headerlink&#34; title=&#34;七、端口查看与防火墙管理&#34;&gt;&lt;/a&gt;七、端口查看与防火墙管理&lt;/h2&gt;&lt;h3 id=&#34;ss-Socket-Statistics-SOCKET&#34;&gt;&lt;a href=&#34;#ss-Socket-Statistics-SOCKET&#34; class=&#34;headerlink&#34; title=&#34;ss (Socket Statistics)  SOCKET&#34;&gt;&lt;/a&gt;&lt;code&gt;ss&lt;/code&gt; (Socket Statistics)  SOCKET&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于转储套接字统计信息，可以显示比 &lt;code&gt;netstat&lt;/code&gt; 更多的TCP和状态信息。它是 &lt;code&gt;netstat&lt;/code&gt; 的现代替代品。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ss [选项]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听状态的套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示使用套接字的进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不解析服务名称，直接显示端口号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有套接字 (监听和非监听)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 显示详细的套接字信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 显示计时器信息。&lt;/li&gt;
&lt;li&gt;state &amp;lt;状态&amp;gt;: 过滤特定状态的连接，如 &lt;code&gt;established, listen, time-wait&lt;/code&gt;。&lt;ul&gt;
&lt;li&gt;例如: &lt;code&gt;ss state established&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ss -tulnp&lt;/code&gt; (最常用组合：显示所有TCP和UDP监听端口及其进程，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tan&lt;/code&gt; (显示所有TCP连接，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -s&lt;/code&gt; (显示套接字使用摘要)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -t -a dst :22&lt;/code&gt; (显示所有到22端口的TCP连接)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -t -a src 192.168.1.100:http&lt;/code&gt; (显示源自192.168.1.100的HTTP TCP连接)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;netstat-Network-Statistics-传统&#34;&gt;&lt;a href=&#34;#netstat-Network-Statistics-传统&#34; class=&#34;headerlink&#34; title=&#34;netstat (Network Statistics - 传统)&#34;&gt;&lt;/a&gt;&lt;code&gt;netstat&lt;/code&gt; (Network Statistics - 传统)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; (传统工具，推荐使用 &lt;code&gt;ss&lt;/code&gt;) 显示网络连接、路由表、接口统计等信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;netstat [选项]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听状态的套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示使用套接字的进程PID和名称 (通常需要root权限)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 以数字形式显示地址和端口号，不解析名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有活动的连接和监听端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示路由表 (类似 &lt;code&gt;route -n&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 显示网络接口统计信息 (类似 &lt;code&gt;ifconfig&lt;/code&gt; 或 &lt;code&gt;ip -s link&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 持续显示信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 显示扩展信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;netstat -tulnp&lt;/code&gt; (最常用组合：显示所有TCP和UDP监听端口及其进程，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -an&lt;/code&gt; (显示所有活动的连接和监听端口，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -rn&lt;/code&gt; (显示路由表)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -i&lt;/code&gt; (显示网络接口)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -antp | grep ESTABLISHED&lt;/code&gt; (显示所有已建立的TCP连接及其进程)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;iptables-IPv4-Packet-Filtering-and-NAT-🔥🧱&#34;&gt;&lt;a href=&#34;#iptables-IPv4-Packet-Filtering-and-NAT-🔥🧱&#34; class=&#34;headerlink&#34; title=&#34;iptables (IPv4 Packet Filtering and NAT) 🔥🧱&#34;&gt;&lt;/a&gt;&lt;code&gt;iptables&lt;/code&gt; (IPv4 Packet Filtering and NAT) 🔥🧱&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; Linux内核防火墙 &lt;code&gt;netfilter&lt;/code&gt; 的用户空间命令行工具，用于配置IPv4数据包过滤规则、NAT和包处理。功能强大但语法复杂。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本概念:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tables (表):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt;: 默认表，用于数据包过滤 (INPUT, OUTPUT, FORWARD 链)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nat&lt;/code&gt;: 用于网络地址转换 (PREROUTING, POSTROUTING, OUTPUT 链)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mangle&lt;/code&gt;: 用于修改IP头字段 (所有链)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;raw&lt;/code&gt;: 用于配置豁免，使数据包不经过连接跟踪。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chains (链):&lt;/p&gt;
&lt;p&gt; 规则的有序列表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INPUT&lt;/code&gt;: 处理发往本机的入站数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OUTPUT&lt;/code&gt;: 处理本机发出的出站数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FORWARD&lt;/code&gt;: 处理流经本机的转发数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PREROUTING&lt;/code&gt;: 在路由决策之前处理数据包 (常用于DNAT)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POSTROUTING&lt;/code&gt;: 在路由决策之后，数据包即将发出时处理 (常用于SNAT)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Targets (目标):&lt;/p&gt;
&lt;p&gt; 规则匹配后执行的动作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ACCEPT&lt;/code&gt;: 接受数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DROP&lt;/code&gt;: 丢弃数据包 (不响应)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REJECT&lt;/code&gt;: 拒绝数据包 (通常会返回错误信息)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOG&lt;/code&gt;: 记录数据包信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SNAT&lt;/code&gt;: 源地址转换。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DNAT&lt;/code&gt;: 目标地址转换。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MASQUERADE&lt;/code&gt;: 动态源地址转换 (常用于共享上网)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;语法 (通用):&lt;/strong&gt; &lt;code&gt;iptables [-t 表名] 命令 链名 匹配条件 -j 目标&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用命令:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-L [链名]&lt;/code&gt;: 列出规则。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细信息 (包和字节计数器)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 数字格式显示IP和端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--line-numbers&lt;/code&gt;: 显示规则编号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A 链名&lt;/code&gt;: 追加新规则到链尾。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I 链名 [规则编号]&lt;/code&gt;: 插入新规则到指定位置 (默认链首)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D 链名 规则编号或规则定义&lt;/code&gt;: 删除规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R 链名 规则编号 规则定义&lt;/code&gt;: 替换规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F [链名]&lt;/code&gt;: 清空链中的所有规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Z [链名]&lt;/code&gt;: 清零链中所有规则的包和字节计数器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P 链名 目标&lt;/code&gt;: 设置链的默认策略 (ACCEPT, DROP)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N 链名&lt;/code&gt;: 创建用户自定义链。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X [链名]&lt;/code&gt;: 删除用户自定义空链。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E 旧链名 新链名&lt;/code&gt;: 重命名用户自定义链。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用匹配条件:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p 协议&lt;/code&gt;: 指定协议 (tcp, udp, icmp, all)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 源地址/掩码&lt;/code&gt;: 指定源IP地址或网络。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 目标地址/掩码&lt;/code&gt;: 指定目标IP地址或网络。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 输入接口&lt;/code&gt;: 指定数据包进入的网络接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 输出接口&lt;/code&gt;: 指定数据包流出的网络接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--sport 源端口&lt;/code&gt;: 指定源端口 (需与 &lt;code&gt;-p tcp&lt;/code&gt; 或 &lt;code&gt;-p udp&lt;/code&gt; 配合)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dport 目标端口&lt;/code&gt;: 指定目标端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m 模块名 --模块选项&lt;/code&gt;: 使用扩展模块 (如 &lt;code&gt;state, conntrack, multiport, tcp, udp&lt;/code&gt;)。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m state --state NEW,ESTABLISHED,RELATED&lt;/code&gt;: 匹配连接状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m multiport --dports 22,80,443&lt;/code&gt;: 匹配多个目标端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;查看规则:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -L -n -v&lt;/code&gt; (查看filter表所有链的规则)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -L -n -v --line-numbers&lt;/code&gt; (查看nat表规则并显示行号)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置默认策略:&lt;/strong&gt; (通常先允许所有传出，拒绝所有传入和转发)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -P INPUT DROP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -P FORWARD DROP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -P OUTPUT ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;允许特定端口/服务:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT&lt;/code&gt; (允许SSH)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT&lt;/code&gt; (允许HTTP)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT&lt;/code&gt; (允许HTTPS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -i lo -j ACCEPT&lt;/code&gt; (允许来自本地回环接口的所有流量)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT&lt;/code&gt; (允许已建立和相关的连接)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;允许特定IP:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -s 192.168.1.100 -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻止特定IP:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -s 1.2.3.4 -j DROP&lt;/code&gt; (阻止单个IP)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -s 1.2.3.0/24 -j REJECT&lt;/code&gt; (拒绝整个子网)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除规则:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -D INPUT 3&lt;/code&gt; (删除INPUT链中编号为3的规则)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -D INPUT -s 1.2.3.4 -j DROP&lt;/code&gt; (按规则定义删除)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;清空规则:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -F INPUT&lt;/code&gt; (清空INPUT链)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -F&lt;/code&gt; (清空filter表所有链)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -F&lt;/code&gt; (清空nat表所有链)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAT示例 (SNAT/MASQUERADE - 共享上网):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;假设 &lt;code&gt;eth0&lt;/code&gt; 是外网接口，&lt;code&gt;eth1&lt;/code&gt; 是内网接口 (内网IP段 &lt;code&gt;192.168.1.0/24&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sysctl -w net.ipv4.ip_forward=1&lt;/code&gt; (开启IP转发)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAT示例 (DNAT - 端口转发):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;将外网接口 &lt;code&gt;eth0&lt;/code&gt; 的TCP 8080端口转发到内网服务器 &lt;code&gt;192.168.1.100&lt;/code&gt; 的80端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -j DNAT --to-destination 192.168.1.100:80&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A FORWARD -p tcp -d 192.168.1.100 --dport 80 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;保存和恢复规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规则默认在重启后丢失。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保存:&lt;/strong&gt; &lt;code&gt;sudo iptables-save &amp;gt; /etc/iptables/rules.v4&lt;/code&gt; (Debian/Ubuntu，需安装 &lt;code&gt;iptables-persistent&lt;/code&gt;) &lt;code&gt;sudo ip6tables-save &amp;gt; /etc/iptables/rules.v6&lt;/code&gt; 在RHEL/CentOS系统上，通常使用 &lt;code&gt;systemctl enable iptables&lt;/code&gt; 和 &lt;code&gt;systemctl start iptables&lt;/code&gt; (需要 &lt;code&gt;iptables-services&lt;/code&gt; 包)，规则保存在 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恢复:&lt;/strong&gt; &lt;code&gt;sudo iptables-restore &amp;lt; /etc/iptables/rules.v4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iptables-persistent&lt;/code&gt; (Debian/Ubuntu):&lt;ul&gt;
&lt;li&gt;安装: &lt;code&gt;sudo apt install iptables-persistent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;保存当前规则: &lt;code&gt;sudo netfilter-persistent save&lt;/code&gt; (或 &lt;code&gt;sudo /etc/init.d/netfilter-persistent save&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;系统启动时会自动加载。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ufw-Uncomplicated-Firewall-🛡️&#34;&gt;&lt;a href=&#34;#ufw-Uncomplicated-Firewall-🛡️&#34; class=&#34;headerlink&#34; title=&#34;ufw (Uncomplicated Firewall) 🛡️&#34;&gt;&lt;/a&gt;&lt;code&gt;ufw&lt;/code&gt; (Uncomplicated Firewall) 🛡️&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 一个用户友好的 &lt;code&gt;iptables&lt;/code&gt; 前端，旨在简化防火墙配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo ufw [选项] 命令&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用命令与选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;状态管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;: 启用防火墙 (并设置开机自启)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw disable&lt;/code&gt;: 禁用防火墙。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status&lt;/code&gt;: 查看防火墙状态和规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status numbered&lt;/code&gt;: 查看规则并显示编号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status verbose&lt;/code&gt;: 查看详细状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw reload&lt;/code&gt;: 重载防火墙规则 (不中断现有连接)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw reset&lt;/code&gt;: 重置防火墙到默认状态 (会禁用防火墙)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;默认策略:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;: 拒绝所有入站连接 (推荐)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default allow outgoing&lt;/code&gt;: 允许所有出站连接 (推荐)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny outgoing&lt;/code&gt;: 拒绝所有出站连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny routed&lt;/code&gt;: 拒绝所有转发的包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;规则管理 (allow/deny/reject/limit):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw allow &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow 22/tcp&lt;/code&gt; (允许TCP 22端口)&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow 53&lt;/code&gt; (允许TCP和UDP 53端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw allow &amp;lt;服务名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (服务名在 &lt;code&gt;/etc/services&lt;/code&gt;中定义)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow http&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow https&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw deny &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw deny 3306&lt;/code&gt; (拒绝访问MySQL端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw reject &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt; (拒绝并返回消息)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw limit &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (限制连接频率，如SSH，防止暴力破解：如果在30秒内尝试连接6次以上，则拒绝连接)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw limit ssh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于源/目标IP的规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow from &amp;lt;IP地址&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow from 192.168.1.100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow from &amp;lt;IP地址&amp;gt; to any port &amp;lt;端口号&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow from 192.168.1.100 to any port 22 proto tcp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw deny from &amp;lt;IP地址&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw deny from 1.2.3.4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于网络接口的规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow in on &amp;lt;接口名&amp;gt; to any port &amp;lt;端口号&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow in on eth1 to any port 80&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;删除规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw delete &amp;lt;规则定义&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw delete allow 80&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw delete allow from 1.2.3.4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw delete &amp;lt;规则编号&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (通过 &lt;code&gt;sudo ufw status numbered&lt;/code&gt; 获取编号)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw delete 3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;应用程序配置文件:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ufw&lt;/code&gt; 可以使用应用程序配置文件 (位于 &lt;code&gt;/etc/ufw/applications.d&lt;/code&gt;)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw app list&lt;/code&gt;: 列出可用的应用程序配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw app info &amp;lt;应用名&amp;gt;&lt;/code&gt;: 显示应用程序配置文件的详细信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw allow &amp;lt;应用名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;: 允许应用程序配置文件中定义的所有规则。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow &#39;Nginx Full&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;日志:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw logging on [low|medium|high|full]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw logging off&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;日志通常记录在 &lt;code&gt;/var/log/ufw.log&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例流程:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default allow outgoing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow ssh&lt;/code&gt; (或 &lt;code&gt;sudo ufw allow 22/tcp&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow http&lt;/code&gt; (或 &lt;code&gt;sudo ufw allow 80/tcp&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow https&lt;/code&gt; (或 &lt;code&gt;sudo ufw allow 443/tcp&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;firewall-cmd-Firewalld-Command-Line-Client-🔥-Zones&#34;&gt;&lt;a href=&#34;#firewall-cmd-Firewalld-Command-Line-Client-🔥-Zones&#34; class=&#34;headerlink&#34; title=&#34;firewall-cmd (Firewalld Command Line Client) 🔥 Zones&#34;&gt;&lt;/a&gt;&lt;code&gt;firewall-cmd&lt;/code&gt; (Firewalld Command Line Client) 🔥 Zones&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; &lt;code&gt;firewalld&lt;/code&gt; 服务的命令行客户端，是 RHEL/CentOS 7+ 和 Fedora 等发行版的默认防火墙管理工具。它使用 “区域 (zones)” 和 “服务 (services)” 的概念。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本概念:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Zones (区域):&lt;/strong&gt; 网络连接可以被分配到不同的区域，每个区域有自己独立的防火墙规则集。预定义区域如 &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;home&lt;/code&gt;, &lt;code&gt;work&lt;/code&gt;, &lt;code&gt;dmz&lt;/code&gt;, &lt;code&gt;internal&lt;/code&gt;, &lt;code&gt;external&lt;/code&gt;, &lt;code&gt;block&lt;/code&gt;, &lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;trusted&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Services (服务):&lt;/strong&gt; 预定义的 XML 文件，描述了服务所需的端口和协议 (如 &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;Permanent vs Runtime Configuration:&lt;ul&gt;
&lt;li&gt;默认情况下，&lt;code&gt;firewall-cmd&lt;/code&gt; 修改的是运行时配置，重启后失效。&lt;/li&gt;
&lt;li&gt;添加 &lt;code&gt;--permanent&lt;/code&gt; 选项可以修改永久配置，但需要 &lt;code&gt;firewall-cmd --reload&lt;/code&gt; 或重启 &lt;code&gt;firewalld&lt;/code&gt; 服务才能生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo firewall-cmd [选项] [操作]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用命令与选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;状态与管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl status firewalld&lt;/code&gt;: 查看 &lt;code&gt;firewalld&lt;/code&gt; 服务状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start firewalld&lt;/code&gt;: 启动服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl stop firewalld&lt;/code&gt;: 停止服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable firewalld&lt;/code&gt;: 设置开机自启。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl disable firewalld&lt;/code&gt;: 禁止开机自启。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --state&lt;/code&gt;: 查看防火墙运行状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --reload&lt;/code&gt;: 重载防火墙规则 (不中断现有连接，使永久配置生效)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --complete-reload&lt;/code&gt;: 完全重载 (中断现有连接)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;区域管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-default-zone&lt;/code&gt;: 获取默认区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --set-default-zone=&amp;lt;区域名&amp;gt;&lt;/code&gt;: 设置默认区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-active-zones&lt;/code&gt;: 获取当前活动的区域及其绑定的接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-zones&lt;/code&gt;: 列出所有可用区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --list-all&lt;/code&gt;: 列出指定区域的所有配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-interface=&amp;lt;接口名&amp;gt;&lt;/code&gt;: 将接口添加到指定区域 (运行时)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-interface=&amp;lt;接口名&amp;gt; --permanent&lt;/code&gt;: 永久添加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --change-interface=&amp;lt;接口名&amp;gt;&lt;/code&gt;: 修改接口所属区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-interface=&amp;lt;接口名&amp;gt;&lt;/code&gt;: 从区域移除接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-source=&amp;lt;IP或子网&amp;gt;&lt;/code&gt;: 将源IP/子网添加到区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-services&lt;/code&gt;: 列出所有预定义的服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-service=&amp;lt;服务名&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-service=&amp;lt;服务名&amp;gt; --permanent&lt;/code&gt; (永久)&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=http&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-service=&amp;lt;服务名&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-service=&amp;lt;服务名&amp;gt; --permanent&lt;/code&gt; (永久)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --list-services&lt;/code&gt;: 列出区域中允许的服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;端口管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt; --permanent&lt;/code&gt;(永久)&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-port=8080/tcp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt; --permanent&lt;/code&gt; (永久)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --list-ports&lt;/code&gt;: 列出区域中允许的端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Panic Mode:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --panic-on&lt;/code&gt;: 紧急模式，丢弃所有入站和出站数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --panic-off&lt;/code&gt;: 关闭紧急模式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --query-panic&lt;/code&gt;: 查询紧急模式状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Direct Rules (直接规则 - 类似iptables语法，不推荐常规使用):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --direct --add-rule ipv4 filter INPUT 0 -p tcp --dport 22 -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rich Rules (富规则 - 更灵活的规则定义):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#39;rule family=&#34;ipv4&#34; source address=&#34;192.168.1.0/24&#34; service name=&#34;ssh&#34; accept&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#39;rule family=&#34;ipv4&#34; source address=&#34;1.2.3.4&#34; reject&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例流程 (public区域):&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start firewalld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable firewalld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --set-default-zone=public&lt;/code&gt; (通常public是默认)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=http&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=https&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-port=8080-8090/tcp&lt;/code&gt; (允许一个端口范围)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --reload&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=public --list-all&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、常用配置文件与文本编辑器&#34;&gt;&lt;a href=&#34;#八、常用配置文件与文本编辑器&#34; class=&#34;headerlink&#34; title=&#34;八、常用配置文件与文本编辑器&#34;&gt;&lt;/a&gt;八、常用配置文件与文本编辑器&lt;/h2&gt;&lt;h3 id=&#34;常见重要配置文件-⚙️&#34;&gt;&lt;a href=&#34;#常见重要配置文件-⚙️&#34; class=&#34;headerlink&#34; title=&#34;常见重要配置文件 ⚙️&#34;&gt;&lt;/a&gt;常见重要配置文件 ⚙️&lt;/h3&gt;&lt;p&gt;以下是一些Linux系统中常见的配置文件及其典型路径和用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/passwd&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储用户账户信息（如用户名、用户ID (UID)、组ID (GID)、用户描述、家目录路径、默认shell）。密码字段通常是一个&lt;code&gt;x&lt;/code&gt;，表示加密后的密码存储在&lt;code&gt;/etc/shadow&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式&lt;/strong&gt;: &lt;code&gt;username:password_placeholder:UID:GID:comment:home_directory:login_shell&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/shadow&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 安全地存储用户加密后的密码和密码老化信息。此文件通常只有root用户可读。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;username:encrypted_password:last_password_change_date:min_password_age:max_password_age:warning_period:inactivity_period:expiration_date:reserved_field&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encrypted_password&lt;/code&gt;: &lt;code&gt;!&lt;/code&gt; 或 &lt;code&gt;*&lt;/code&gt; 表示账户被锁定或没有密码。&lt;/li&gt;
&lt;li&gt;日期字段通常是从1970年1月1日开始的天数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/group&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储用户组信息（组名、组ID (GID)、组成员列表）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式&lt;/strong&gt;: &lt;code&gt;group_name:password_placeholder:GID:user_list_comma_separated&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/fstab&lt;/strong&gt; (Filesystem Table):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 定义磁盘分区、各种块设备或远程文件系统如何在系统启动时挂载到文件系统中，或者在需要时由 &lt;code&gt;mount -a&lt;/code&gt; 命令挂载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;device_spec mount_point fstype options dump pass_num&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;device_spec&lt;/code&gt;: 设备（如&lt;code&gt;/dev/sda1&lt;/code&gt;）或UUID（如&lt;code&gt;UUID=xxxxxxxx-xxxx...&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mount_point&lt;/code&gt;: 挂载点（如&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;/home&lt;/code&gt;、&lt;code&gt;/var&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fstype&lt;/code&gt;: 文件系统类型（如&lt;code&gt;ext4&lt;/code&gt;、&lt;code&gt;xfs&lt;/code&gt;、&lt;code&gt;ntfs&lt;/code&gt;、&lt;code&gt;nfs&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options&lt;/code&gt;: 挂载选项（如&lt;code&gt;defaults&lt;/code&gt;、&lt;code&gt;rw&lt;/code&gt;、&lt;code&gt;ro&lt;/code&gt;、&lt;code&gt;noatime&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;: &lt;code&gt;dump&lt;/code&gt;工具是否备份（0或1）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pass_num&lt;/code&gt;: &lt;code&gt;fsck&lt;/code&gt;检查文件系统的顺序（0表示不检查，1表示根文件系统，2表示其他）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/hosts&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 提供静态的IP地址到主机名的映射。在DNS解析之前，系统会检查此文件。常用于本地测试或强制解析特定域名到特定IP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;IP_address canonical_hostname &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;aliases&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;127.0.0.1 localhost loopback&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;192.168.1.100 myserver myapp.local&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/resolv.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 配置DNS解析器，指定域名服务器（nameserver）的IP地址以及搜索域（search domain）。在许多现代发行版中，此文件可能由网络管理服务（如NetworkManager或systemd-resolved）动态生成和管理，不建议手动编辑。&lt;/li&gt;
&lt;li&gt;格式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nameserver IP_address_of_DNS_server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;search domain1.com domain2.net&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options timeout:1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;~/.bashrc&lt;/strong&gt; (用户特定):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: Bash shell的用户特定配置文件。当用户启动一个新的交互式非登录shell时（如打开一个新的终端窗口），此文件中的命令会被执行。常用于设置别名、环境变量、自定义提示符等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置&lt;/strong&gt;: 用户家目录下 (&lt;code&gt;~&lt;/code&gt; 表示家目录，如 &lt;code&gt;/home/username/.bashrc&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/profile&lt;/strong&gt; (系统全局):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: Bash (及其他Bourne兼容shell) 的系统全局配置文件。当任何用户登录系统时（登录shell），此文件中的命令会被执行。它通常会调用 &lt;code&gt;/etc/profile.d/&lt;/code&gt; 目录下的脚本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt;: 修改此文件会影响系统所有用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/profile.d/*.sh&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: &lt;code&gt;/etc/profile&lt;/code&gt; 通常会执行此目录下的所有 &lt;code&gt;.sh&lt;/code&gt; 脚本，用于模块化地配置系统范围的环境变量和启动程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/bash.bashrc&lt;/strong&gt; (系统全局，某些发行版):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 系统全局的bashrc文件，为所有用户的交互式非登录shell执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/var/log/syslog&lt;/strong&gt; (Debian/Ubuntu) 或 &lt;strong&gt;/var/log/messages&lt;/strong&gt; (RHEL/CentOS):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 系统主要的日志文件，记录了内核消息、系统服务消息、以及各种应用程序的日志。是故障排除的重要来源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;管理&lt;/strong&gt;: 通常由 &lt;code&gt;rsyslogd&lt;/code&gt; 或 &lt;code&gt;syslog-ng&lt;/code&gt; 服务管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/ssh/sshd_config&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: OpenSSH服务器 (sshd) 的配置文件。控制SSH服务的行为，如监听端口、是否允许root登录、认证方法等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 用于在系统启动时配置内核参数。&lt;code&gt;sysctl -p&lt;/code&gt; 可以加载此文件中的设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;常用文本编辑器-📝&#34;&gt;&lt;a href=&#34;#常用文本编辑器-📝&#34; class=&#34;headerlink&#34; title=&#34;常用文本编辑器 📝&#34;&gt;&lt;/a&gt;常用文本编辑器 📝&lt;/h3&gt;&lt;p&gt;在Linux命令行下，最常用的文本编辑器是 &lt;code&gt;vi&lt;/code&gt; (或其增强版 &lt;code&gt;vim&lt;/code&gt;) 和 &lt;code&gt;nano&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;nano&#34;&gt;&lt;a href=&#34;#nano&#34; class=&#34;headerlink&#34; title=&#34;nano&#34;&gt;&lt;/a&gt;&lt;code&gt;nano&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;nano&lt;/code&gt; 是一个简单易用的命令行文本编辑器，适合初学者。屏幕底部会显示常用快捷键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;启动:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nano 文件名&lt;/code&gt; (如果文件不存在，则创建新文件)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nano&lt;/code&gt; (不带文件名，之后可保存为新文件)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用快捷键 (Ctrl 代表 Control 键):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + G&lt;/code&gt;: 获取帮助 (显示所有快捷键)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + O&lt;/code&gt;: 保存文件 (Write Out)。会提示输入文件名，回车确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + X&lt;/code&gt;: 退出 &lt;code&gt;nano&lt;/code&gt;。如果文件已修改但未保存，会提示是否保存。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + W&lt;/code&gt;: 搜索文本 (Where is)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + \&lt;/code&gt;: 替换文本 (Replace)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + K&lt;/code&gt;:剪切当前行 (Cut Text)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + U&lt;/code&gt;: 粘贴剪切的文本 (Uncut Text)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + C&lt;/code&gt;: 显示当前光标位置 (行号、列号)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + J&lt;/code&gt;: 对齐当前段落 (Justify)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + T&lt;/code&gt;: 检查拼写 (需要安装 &lt;code&gt;spell&lt;/code&gt; 包)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + U&lt;/code&gt;: 撤销上一次操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + E&lt;/code&gt;: 重做上一次撤销的操作。&lt;/li&gt;
&lt;li&gt;方向键: 移动光标。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PageUp / PageDown&lt;/code&gt;: 上下翻页。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Home / End&lt;/code&gt;: 移动到行首/行尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo nano /etc/hosts&lt;/code&gt; (编辑hosts文件，需要sudo权限)&lt;/p&gt;
&lt;h4 id=&#34;vi-vim-Vi-IMproved&#34;&gt;&lt;a href=&#34;#vi-vim-Vi-IMproved&#34; class=&#34;headerlink&#34; title=&#34;vi / vim (Vi IMproved)&#34;&gt;&lt;/a&gt;&lt;code&gt;vi&lt;/code&gt; / &lt;code&gt;vim&lt;/code&gt; (Vi IMproved)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;vi&lt;/code&gt; 是一个功能强大的模态编辑器，学习曲线较陡峭，但熟练后效率极高。&lt;code&gt;vim&lt;/code&gt; 是 &lt;code&gt;vi&lt;/code&gt; 的增强版，提供了更多功能（如语法高亮、多级撤销等）。大多数现代系统实际上的 &lt;code&gt;vi&lt;/code&gt; 命令是指向 &lt;code&gt;vim&lt;/code&gt; 的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模式:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;命令模式 (Command Mode):&lt;/strong&gt; 默认模式。用于移动光标、删除文本、复制粘贴等操作。按键不会直接输入文本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入模式 (Insert Mode):&lt;/strong&gt; 用于输入文本。从命令模式按 &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt; 等键进入。按 &lt;code&gt;Esc&lt;/code&gt; 键返回命令模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;末行模式 (Last Line Mode / Ex Mode):&lt;/strong&gt; 在命令模式下按 &lt;code&gt;:&lt;/code&gt; 进入。用于执行保存、退出、搜索替换等命令。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;启动:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vi 文件名&lt;/code&gt; 或 &lt;code&gt;vim 文件名&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;基本操作 (命令模式下):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移动光标:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;: 左&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;: 下&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;: 上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;: 右&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;: 移动到下一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: 移动到上一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; (零): 移动到当前行行首&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;: 移动到当前行第一个非空白字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;: 移动到当前行行尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gg&lt;/code&gt;: 移动到文件第一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;G&lt;/code&gt;: 移动到文件最后一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;行号G&lt;/code&gt;: 移动到指定行号 (例如 &lt;code&gt;10G&lt;/code&gt; 到第10行)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进入插入模式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;: 在当前光标前插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;: 在当前行首插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt;: 在当前光标后追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt;: 在当前行尾追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o&lt;/code&gt;: 在当前行下方插入一个新行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;O&lt;/code&gt;: 在当前行上方插入一个新行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;删除文本:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: 删除当前光标处的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw&lt;/code&gt;: 删除一个单词 (从光标处到词尾)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dd&lt;/code&gt;: 删除当前行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数字dd&lt;/code&gt;: 删除从当前行开始的指定数量的行 (例如 &lt;code&gt;3dd&lt;/code&gt; 删除3行)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt;: 删除从光标到行尾的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;复制 (Yank) 与粘贴 (Put):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yw&lt;/code&gt;: 复制一个单词&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yy&lt;/code&gt;: 复制当前行 (y 代表 yank)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数字yy&lt;/code&gt;: 复制多行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;: 在光标后粘贴 (小写p)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt;: 在光标前粘贴 (大写P)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;撤销与重做:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;: 撤销上一次操作 (undo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + r&lt;/code&gt;: 重做上一次撤销的操作 (redo)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;搜索:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/模式&lt;/code&gt;: 向下搜索 “模式” (按 &lt;code&gt;n&lt;/code&gt; 查找下一个, &lt;code&gt;N&lt;/code&gt; 查找上一个)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?模式&lt;/code&gt;: 向上搜索 “模式”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;末行模式命令 (按 &lt;code&gt;:&lt;/code&gt; 后输入):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:w&lt;/code&gt;: 保存文件 (write)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:w 文件名&lt;/code&gt;:另存为指定文件名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:q&lt;/code&gt;: 退出 (quit)。如果文件已修改但未保存，会阻止退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:q!&lt;/code&gt;: 强制退出，不保存修改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt; 或 &lt;code&gt;:x&lt;/code&gt;: 保存并退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:e 文件名&lt;/code&gt;: 编辑另一个文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:set number&lt;/code&gt; 或 &lt;code&gt;:set nu&lt;/code&gt;: 显示行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:set nonumber&lt;/code&gt; 或 &lt;code&gt;:set nonu&lt;/code&gt;: 关闭行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:%s/旧字符串/新字符串/g&lt;/code&gt;: 全局替换 (g代表global)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:%s/旧字符串/新字符串/gc&lt;/code&gt;: 全局替换，每次替换前确认 (c代表confirm)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:!外部命令&lt;/code&gt;: 执行外部shell命令 (例如 &lt;code&gt;:!ls -l&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo vim /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习 &lt;code&gt;vim&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在终端中运行 &lt;code&gt;vimtutor&lt;/code&gt; 命令，这是一个交互式的 &lt;code&gt;vim&lt;/code&gt; 教程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这只是 &lt;code&gt;vim&lt;/code&gt; 功能的冰山一角，但足以应付日常的配置文件编辑。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/06/01/ji-yu-x-ui-yu-cloudflare-da-jian-jie-dian/</guid>
            <title>科学上网节点技术与实践：基于 X-UI 与 Cloudflare 的全面指南</title>
            <link>https://0xdadream.github.io/2025/06/01/ji-yu-x-ui-yu-cloudflare-da-jian-jie-dian/</link>
            <category>教程</category>
            <pubDate>Sun, 01 Jun 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;科学上网节点技术与实践：基于-X-UI-与-Cloudflare-的全面指南&#34;&gt;&lt;a href=&#34;#科学上网节点技术与实践：基于-X-UI-与-Cloudflare-的全面指南&#34; class=&#34;headerlink&#34; title=&#34;科学上网节点技术与实践：基于 X-UI 与 Cloudflare 的全面指南&#34;&gt;&lt;/a&gt;科学上网节点技术与实践：基于 X-UI 与 Cloudflare 的全面指南&lt;/h1&gt;&lt;h2 id=&#34;第一部分：科学上网节点与核心概念概述&#34;&gt;&lt;a href=&#34;#第一部分：科学上网节点与核心概念概述&#34; class=&#34;headerlink&#34; title=&#34;第一部分：科学上网节点与核心概念概述&#34;&gt;&lt;/a&gt;第一部分：科学上网节点与核心概念概述&lt;/h2&gt;&lt;h3 id=&#34;1-1-科学上网概述及其重要性&#34;&gt;&lt;a href=&#34;#1-1-科学上网概述及其重要性&#34; class=&#34;headerlink&#34; title=&#34;1.1 科学上网概述及其重要性&#34;&gt;&lt;/a&gt;1.1 科学上网概述及其重要性&lt;/h3&gt;&lt;p&gt;“科学上网”，通常指通过技术手段绕过互联网审查和地理限制，以访问全球开放信息资源的过程。在当前信息高度互联的时代，获取未经审查的、多元化的信息对于学术研究、技术创新以及文化交流至关重要。然而，常见的网络封锁技术，如IP地址封锁、域名系统 (DNS) 污染和深度包检测 (Deep Packet Inspection, DPI)，对信息的自由流通构成了挑战 。因此，理解和掌握科学上网技术，对于需要无障碍访问全球互联网资源的用户而言，具有实际意义。&lt;/p&gt;
&lt;h3 id=&#34;1-2-核心技术：Xray-与-x-ui-面板&#34;&gt;&lt;a href=&#34;#1-2-核心技术：Xray-与-x-ui-面板&#34; class=&#34;headerlink&#34; title=&#34;1.2 核心技术：Xray 与 x-ui 面板&#34;&gt;&lt;/a&gt;1.2 核心技术：Xray 与 x-ui 面板&lt;/h3&gt;&lt;p&gt;Xray 是一个功能强大且灵活的网络代理核心，被广泛用于构建科学上网节点。它支持多种代理协议和复杂的路由功能，能够有效地帮助用户绕过网络审查 。与 Xray 配合使用的 x-ui (特别是 MHSanaei 维护的 3x-ui 分支) 是一个用户友好的图形化管理面板，它极大地简化了 Xray 节点的配置和管理过程，支持多用户、多协议管理，并提供流量统计、到期时间限制等功能 。&lt;/p&gt;
&lt;h3 id=&#34;1-3-Cloudflare-的角色&#34;&gt;&lt;a href=&#34;#1-3-Cloudflare-的角色&#34; class=&#34;headerlink&#34; title=&#34;1.3 Cloudflare 的角色&#34;&gt;&lt;/a&gt;1.3 Cloudflare 的角色&lt;/h3&gt;&lt;p&gt;Cloudflare 是一家全球性的网络基础设施和安全公司，其提供的服务如内容分发网络 (CDN)、Workers（边缘计算）和 Tunnel（安全隧道）可以被巧妙地用于增强科学上网节点的隐蔽性和稳定性 。通过 Cloudflare，用户可以隐藏其代理服务器的真实IP地址，抵御分布式拒绝服务 (DDoS) 攻击，并在某些情况下改善连接速度和可靠性 。&lt;/p&gt;
&lt;h3 id=&#34;1-4-关键术语解析&#34;&gt;&lt;a href=&#34;#1-4-关键术语解析&#34; class=&#34;headerlink&#34; title=&#34;1.4 关键术语解析&#34;&gt;&lt;/a&gt;1.4 关键术语解析&lt;/h3&gt;&lt;p&gt;理解以下术语对于掌握本教程至关重要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TLS (Transport Layer Security) / SSL (Secure Sockets Layer):&lt;/strong&gt; TLS 及其前身 SSL 是保障网络通信安全和数据完整性的加密协议 。它们通过在客户端和服务器之间建立加密通道，确保数据传输不被窃听或篡改。在科学上网中，TLS 常用于伪装代理流量，使其看起来像正常的 HTTPS 流量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CDN (Content Delivery Network):&lt;/strong&gt; 内容分发网络通过在全球部署边缘服务器来缓存网站内容，使用户可以从最近的服务器获取数据，从而提高网站加载速度并减少源服务器负载 。对于代理节点，CDN 可以隐藏源服务器 IP，并可能分散流量特征。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket:&lt;/strong&gt; 一种在单个 TCP 连接上进行全双工通信的协议 。它允许服务器和客户端之间进行持续的、低延迟的双向数据交换。在代理中，WebSocket 常被用作一种传输方式，可以将代理流量封装在标准的 HTTP/HTTPS 端口（如 80 或 443）上传输，从而更好地伪装流量，并兼容 CDN 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC (Google Remote Procedure Call):&lt;/strong&gt; 一个高性能、开源的通用 RPC 框架，使用 HTTP/2 作为传输协议，支持多种语言 。gRPC 因其高效的序列化（Protocol Buffers）和多路复用特性，在代理应用中可以提供较低的延迟和带宽消耗，尤其适合移动端应用。Cloudflare 支持 gRPC 流量的代理 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REALITY:&lt;/strong&gt; Xray 引入的一种新的出站/入站协议特性，旨在通过借用目标网站的 TLS 证书指纹来消除服务器端 TLS 指纹特征，从而增强抗检测能力，同时保持前向保密性 。它允许用户在不购买域名或配置 TLS 服务器的情况下，向审查者呈现一个真实可信的 SNI (Server Name Indication)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XTLS:&lt;/strong&gt; 一种旨在减少 VLESS 和 Trojan 等协议中 TLS 加密层级所带来性能开销的技术 。它通过在特定条件下（如 &lt;code&gt;flow&lt;/code&gt; 设置为 &lt;code&gt;xtls-rprx-vision&lt;/code&gt;）直接处理内层数据，避免了多次 TLS 加解密，从而提升传输效率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uTLS (μTLS):&lt;/strong&gt; 一个 TLS 库，允许应用程序模仿不同浏览器或操作系统的 TLS 指纹 。在代理客户端中使用 uTLS 可以帮助伪装连接发起者的真实身份，使其流量特征更接近普通浏览器行为，从而降被识别的风险。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第二部分：代理协议深度解析&#34;&gt;&lt;a href=&#34;#第二部分：代理协议深度解析&#34; class=&#34;headerlink&#34; title=&#34;第二部分：代理协议深度解析&#34;&gt;&lt;/a&gt;第二部分：代理协议深度解析&lt;/h2&gt;&lt;p&gt;本部分将详细探讨几种主流的科学上网代理协议的原理、特性、优缺点及其在 x-ui 中的应用。&lt;/p&gt;
&lt;h3 id=&#34;2-1-Shadowsocks-SS&#34;&gt;&lt;a href=&#34;#2-1-Shadowsocks-SS&#34; class=&#34;headerlink&#34; title=&#34;2.1 Shadowsocks (SS)&#34;&gt;&lt;/a&gt;2.1 Shadowsocks (SS)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理与工作机制:&lt;/strong&gt; Shadowsocks 是一种基于 SOCKS5 代理的加密传输协议，最初由 clowwindy 于 2012 年为绕过中国的防火长城 (GFW) 而设计 。它通过在客户端和远程服务器之间创建一个加密隧道来工作。客户端将流量通过本地 SOCKS5 代理发送到 Shadowsocks 客户端软件，该软件对流量进行加密后发送到 Shadowsocks 服务器，服务器解密后再将流量转发至目标地址 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全特性:&lt;/strong&gt; Shadowsocks 使用用户选择的加密算法（如 AES-256-GCM, ChaCha20-Poly1305）对数据进行加密 。较新的 Shadowsocks AEAD (Authenticated Encryption with Associated Data) 密码套件（如 2022-blake3-aes-256-gcm）提供了更强的安全性和抗重放攻击能力 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能特点:&lt;/strong&gt; Shadowsocks 以其轻量级和高效率著称，对网络速度影响较小，能够提供较快的浏览和流媒体体验 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混淆能力:&lt;/strong&gt; Shadowsocks 本身并不侧重于复杂的流量混淆，其主要目标是加密。然而，由于其流量模式与标准协议不同，在早期能够有效绕过基于简单规则的检测。随着 DPI 技术的发展，单纯的 Shadowsocks 流量可能被识别。&lt;/li&gt;
&lt;li&gt;优缺点:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 设置相对简单，速度快，资源占用低，兼容性广（支持 Windows, macOS, Linux, Android, iOS）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 协议特征相对明显，容易被高级 DPI 检测；不具备传统 VPN 的所有网络流量封装能力，仅代理通过其 SOCKS5 接口的流量 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 中的配置:&lt;/strong&gt; 在 x-ui 中配置 Shadowsocks 时，主要参数包括加密方法、密码、监听端口和传输协议（通常是 TCP 和 UDP）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2-VMess-Virtual-Mess&#34;&gt;&lt;a href=&#34;#2-2-VMess-Virtual-Mess&#34; class=&#34;headerlink&#34; title=&#34;2.2 VMess (Virtual Mess)&#34;&gt;&lt;/a&gt;2.2 VMess (Virtual Mess)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理与工作机制:&lt;/strong&gt; VMess 是 V2Ray 项目（Xray 的前身和兼容核心）设计的一种主要代理协议，旨在提供比 Shadowsocks 更强的安全性和混淆性 。它在客户端和服务器之间建立加密连接，并通过动态改变数据包结构来增加流量分析的难度 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全特性:&lt;/strong&gt; VMess 使用对称加密（如 AES-128-GCM）和动态生成的会话 ID。它要求客户端和服务器共享精确的用户 ID (UUID) 和 alterId（用于改变加密方式）进行身份验证和加密 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能特点:&lt;/strong&gt; VMess 由于其加密和动态特性，相比 Shadowsocks 会有一定的性能开销，但通常仍能提供良好的速度 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混淆能力:&lt;/strong&gt; VMess 的设计目标之一就是抗检测。其动态协议特性使得流量难以被简单模式匹配。结合 TLS 和 WebSocket 等传输方式可以进一步增强混淆效果 。&lt;/li&gt;
&lt;li&gt;传输方式:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TCP:&lt;/strong&gt; 基础的 TCP 传输，可配合 TLS 加密。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket (WS):&lt;/strong&gt; 将 VMess 流量封装在 WebSocket 连接中，通常与 TLS 结合（VMess+WS+TLS），使其看起来像 HTTPS 流量，便于通过 CDN 中转和伪装 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC:&lt;/strong&gt; 将 VMess 流量封装在 gRPC 连接中，利用 HTTP/2 的多路复用特性，可以提供高效的传输，同样可以结合 TLS 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;优缺点:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 安全性高，抗检测能力强于 Shadowsocks，支持多种传输方式，配置灵活 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 配置相对复杂，性能开销略高于 Shadowsocks 和 VLESS 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 中的配置:&lt;/strong&gt; 在 x-ui 中配置 VMess 时，需要设置用户 UUID、alterId、监听端口、传输方式（TCP, WS, gRPC 等），以及相应的 TLS 设置（域名、证书路径）或 WebSocket 设置（路径、Host）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-3-VLESS-Virtual-Less&#34;&gt;&lt;a href=&#34;#2-3-VLESS-Virtual-Less&#34; class=&#34;headerlink&#34; title=&#34;2.3 VLESS (Virtual Less)&#34;&gt;&lt;/a&gt;2.3 VLESS (Virtual Less)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;原理与工作机制:&lt;/strong&gt; VLESS 是在 VMess 基础上发展而来的一种更轻量级的传输协议，旨在简化协议本身并提高效率 。与 VMess 不同，VLESS 本身不包含加密和身份验证机制，而是依赖于外部传输层（如 TLS）来提供这些功能 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安全特性:&lt;/strong&gt; VLESS 的安全性主要依赖于其底层的传输协议，如 TLS (XTLS) 或 REALITY。当与这些技术结合时，它可以提供非常高的安全性 。VLESS 本身不进行加密，这使得其头部特征更少，更难被检测。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;性能特点:&lt;/strong&gt; 由于其极简设计和无内置加密，VLESS 的性能开销非常低，通常比 VMess 更快，延迟更低，尤其适合对速度要求高的场景 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;混淆能力:&lt;/p&gt;
&lt;p&gt; VLESS 的核心优势在于其简洁性，这使得其流量本身更难被识别。当结合 XTLS 或 REALITY 时，其混淆能力非常出色。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XTLS (XTLS-Vision, XTLS-RPRX-Direct):&lt;/strong&gt; XTLS 是一种专为 VLESS 和 Trojan 设计的 TLS 增强技术，旨在通过优化 TLS 握手和数据传输路径，减少加密层级，从而显著提高性能，同时保持强大的安全性 。&lt;code&gt;xtls-rprx-vision&lt;/code&gt; 是 XTLS 的一种流控模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REALITY:&lt;/strong&gt; 如前所述，REALITY 通过借用真实网站的 TLS 证书指纹来消除服务器端的 TLS 特征，极大地增强了抗检测能力 。VLESS 是 REALITY 的理想搭配协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;传输方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TCP:&lt;/strong&gt; VLESS 可以直接通过 TCP 传输，通常与 XTLS 或 REALITY 结合使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket (WS):&lt;/strong&gt; VLESS 同样可以封装在 WebSocket 中，并结合 TLS (VLESS+WS+TLS)，以利用 CDN 和伪装流量 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC:&lt;/strong&gt; VLESS 也可以通过 gRPC 传输，并结合 TLS (VLESS+gRPC+TLS)，提供高效的多路复用连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优缺点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 性能极高，延迟低，配置相对 VMess 简单（当不考虑复杂的 XTLS/REALITY 时），灵活性强，抗检测能力强（尤其配合 REALITY）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 依赖外部加密，如果底层传输（如裸 TCP）未加密则不安全；高级配置（如 REALITY）对理解有一定要求 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x-ui 中的配置:&lt;/strong&gt; 在 x-ui 中配置 VLESS 时，主要设置用户 UUID、监听端口、传输方式（TCP, WS, gRPC），以及流控模式（如 &lt;code&gt;xtls-rprx-vision&lt;/code&gt; for XTLS，或不设置流控用于普通 TLS/WS）。如果使用 TLS，需要配置域名和证书路径。如果使用 REALITY，需要配置 &lt;code&gt;dest&lt;/code&gt;（目标伪装域名:端口）、&lt;code&gt;serverNames&lt;/code&gt;（SNI）、&lt;code&gt;privateKey&lt;/code&gt;、&lt;code&gt;shortIds&lt;/code&gt; 等参数 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-4-Trojan&#34;&gt;&lt;a href=&#34;#2-4-Trojan&#34; class=&#34;headerlink&#34; title=&#34;2.4 Trojan&#34;&gt;&lt;/a&gt;2.4 Trojan&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理与工作机制:&lt;/strong&gt; Trojan 协议的设计目标是模仿互联网上最常见的 HTTPS 流量，使其难以被检测和干扰 。它通过在服务器上监听一个端口（通常是 443），并处理进来的 TLS 连接。如果连接是合法的 Trojan 请求（通过密码验证），则代理流量；否则，将流量转发到服务器上预设的真实网站（如本地 Nginx 服务），从而使服务器在外部探测下表现得像一个普通的 HTTPS 网站 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全特性:&lt;/strong&gt; Trojan 强制使用 TLS 对所有流量进行加密，确保了传输的机密性和完整性。身份验证通过预共享的密码完成 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能特点:&lt;/strong&gt; 由于其设计直接利用 TLS，避免了额外的封装层，Trojan 通常具有较好的性能，接近于直接的 HTTPS 连接 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混淆能力:&lt;/strong&gt; Trojan 的核心优势在于其出色的混淆能力。它通过完全模拟 HTTPS 行为，包括 TLS 握手和数据传输，使得 DPI 系统很难将其与正常的 HTTPS 流量区分开来 。&lt;/li&gt;
&lt;li&gt;传输方式:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TCP (over TLS):&lt;/strong&gt; 这是 Trojan 的标准工作方式，直接在 TLS 加密的 TCP 连接上传输代理数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC:&lt;/strong&gt; Trojan 也可以通过 gRPC 传输，并结合 TLS (Trojan+gRPC+TLS)，这可以利用 gRPC 的特性，同时保持 Trojan 的 HTTPS 伪装。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;优缺点:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 伪装性极好，抗检测能力强，性能较好，设置相对简单（相比 VMess 的复杂配置）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 依赖于有效的 TLS 证书和域名配置；如果密码泄露或配置不当，安全性会受影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 中的配置:&lt;/strong&gt; 在 x-ui 中配置 Trojan 时，需要设置密码、监听端口（通常 443）、域名（用于 TLS 证书）、证书和私钥路径。对于 gRPC 传输，还需要配置 &lt;code&gt;serviceName&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-5-WireGuard&#34;&gt;&lt;a href=&#34;#2-5-WireGuard&#34; class=&#34;headerlink&#34; title=&#34;2.5 WireGuard&#34;&gt;&lt;/a&gt;2.5 WireGuard&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原理与工作机制:&lt;/strong&gt; WireGuard 是一种现代、高性能的 VPN 协议，旨在提供比传统 VPN 协议（如 OpenVPN, IPsec）更简单、更快速、更安全的解决方案 。它使用最先进的密码学技术，通过 UDP 传输数据，并在内核空间运行以提高效率 。WireGuard 通过公钥加密进行身份验证和密钥交换 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全特性:&lt;/strong&gt; WireGuard 使用固定的密码套件，包括 ChaCha20进行对称加密，Poly1305进行消息认证，Curve25519进行椭圆曲线 Diffie-Hellman 密钥交换，BLAKE2s进行哈希 。这种固定的选择减少了因密码套件协商错误导致的安全风险。它还提供完美前向保密。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能特点:&lt;/strong&gt; WireGuard 以其极高的性能和低延迟著称，代码量小（Linux 内核模块约 4000 行代码），易于审计，且资源消耗低，非常适合移动设备和嵌入式系统 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混淆能力:&lt;/strong&gt; WireGuard 本身不以流量混淆为主要设计目标。其流量特征（基于 UDP）相对固定，虽然不像 HTTPS 那样普遍，但在某些网络环境下可能被识别或限制。它不具备像 Trojan 或 VLESS+REALITY 那样的 HTTPS 伪装能力。&lt;/li&gt;
&lt;li&gt;优缺点:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 速度极快，延迟低，安全性高，配置简单，代码量小，跨平台支持良好 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 基于 UDP，可能在对 UDP 不友好的网络中表现不佳；协议相对较新，虽然经过广泛审计，但历史积淀不如 OpenVPN；隐私方面，默认配置下服务器会记录对端 IP，需要服务提供商额外处理以保护用户隐私 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 中的配置:&lt;/strong&gt; 3x-ui 面板支持 WireGuard 作为一种入站协议 。配置通常涉及设置监听端口、服务器私钥、客户端公钥、分配给客户端的 IP 地址以及允许的 IP 范围等。x-ui 简化了这个过程，但具体的界面选项需要参考面板本身 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;协议资源消耗与演进趋势&#34;&gt;&lt;a href=&#34;#协议资源消耗与演进趋势&#34; class=&#34;headerlink&#34; title=&#34;协议资源消耗与演进趋势&#34;&gt;&lt;/a&gt;协议资源消耗与演进趋势&lt;/h3&gt;&lt;p&gt;在资源消耗方面，一般而言，VLESS 由于其极简设计，通常比 VMess 更轻量，CPU 和内存占用更低 。Shadowsocks 也是一种非常轻量级的协议 。WireGuard 因其内核态实现和高效密码学，资源消耗极低 。Trojan 协议由于直接利用 TLS，其资源消耗主要取决于 TLS 的实现，通常也比较高效。相比之下，VMess 由于其内置的加密和动态特性，可能会有稍高的资源占用。实际的资源消耗会受到并发连接数、流量大小、服务器硬件配置以及具体实现（如 Xray 核心的优化程度）等多种因素影响。根据 Istio（使用 Envoy 代理，与 Xray 角色类似）的数据，代理本身每秒处理 1000 个请求大约消耗 0.2 至 0.5 vCPU 和 40MB 至 60MB 内存 ，这可以作为一个大致的参考，但 Xray 的具体表现会有所不同。&lt;/p&gt;
&lt;p&gt;科学上网协议的演进清晰地反映了审查技术与反审查技术之间的持续博弈。最初的 Shadowsocks 提供了基础的加密代理功能。随着 DPI 技术对 Shadowsocks 特征的识别，V2Ray 项目及其核心协议 VMess 应运而生，提供了更强的混淆和灵活性。然而，VMess 的复杂性也带来了一定的性能开销和配置难度。随后，VLESS 协议以其“更少即是更多”的理念出现，通过剥离内置加密，依赖底层传输（如 TLS/XTLS/REALITY）来保证安全，从而实现了更高的性能和更强的隐蔽性 。XTLS 和 REALITY 等技术的出现，进一步提升了 VLESS 和 Trojan 等协议的性能与抗检测能力，代表了当前协议发展的前沿方向 。这种演进趋势表明，未来的协议发展将更加注重性能、安全性和伪装性的平衡，以及对不断变化的审查策略的适应能力。&lt;/p&gt;
&lt;h2 id=&#34;第三部分：使用-x-ui-与-Cloudflare-搭建节点&#34;&gt;&lt;a href=&#34;#第三部分：使用-x-ui-与-Cloudflare-搭建节点&#34; class=&#34;headerlink&#34; title=&#34;第三部分：使用 x-ui 与 Cloudflare 搭建节点&#34;&gt;&lt;/a&gt;第三部分：使用 x-ui 与 Cloudflare 搭建节点&lt;/h2&gt;&lt;p&gt;本部分将详细指导如何在 VPS 上安装 x-ui 面板，并结合 Cloudflare 服务搭建各类型的科学上网节点。&lt;/p&gt;
&lt;h3 id=&#34;3-1-VPS-与域名准备&#34;&gt;&lt;a href=&#34;#3-1-VPS-与域名准备&#34; class=&#34;headerlink&#34; title=&#34;3.1 VPS 与域名准备&#34;&gt;&lt;/a&gt;3.1 VPS 与域名准备&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;选择 VPS (Virtual Private Server):&lt;ul&gt;
&lt;li&gt;选择一个位于审查区域之外的 VPS 提供商。考虑因素包括服务器位置（影响延迟）、带宽、CPU、内存、价格以及提供商的声誉。建议选择 KVM 虚拟化的 VPS 。&lt;/li&gt;
&lt;li&gt;操作系统推荐选择较新的稳定版 Linux 发行版，如 Ubuntu 20.04/22.04, Debian 10/11, CentOS 7+ (尽管 CentOS 7 即将 EOL) 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注册域名:&lt;ul&gt;
&lt;li&gt;你需要一个域名用于配置 TLS 加密，特别是当使用 WebSocket、gRPC 或 REALITY 等需要域名验证的场景时。可以选择如 Namecheap, Porkbun 等域名注册商 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基础服务器设置:&lt;ul&gt;
&lt;li&gt;通过 SSH 连接到你的 VPS。&lt;/li&gt;
&lt;li&gt;更新系统软件包：&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&lt;/code&gt; (以 Debian/Ubuntu 为例) 。&lt;/li&gt;
&lt;li&gt;安装必要工具，如 &lt;code&gt;curl&lt;/code&gt; 和 &lt;code&gt;socat&lt;/code&gt;：&lt;code&gt;sudo apt install curl socat -y&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-2-安装-x-ui-面板-MHSanaei-3x-ui&#34;&gt;&lt;a href=&#34;#3-2-安装-x-ui-面板-MHSanaei-3x-ui&#34; class=&#34;headerlink&#34; title=&#34;3.2 安装 x-ui 面板 (MHSanaei/3x-ui)&#34;&gt;&lt;/a&gt;3.2 安装 x-ui 面板 (MHSanaei/3x-ui)&lt;/h3&gt;&lt;p&gt;MHSanaei 的 3x-ui 是一个功能丰富的 Xray 管理面板。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;执行安装脚本:&lt;/p&gt;
&lt;p&gt;通过 SSH 连接到 VPS 后，运行以下命令安装最新版本的 3x-ui ：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装过程中，脚本可能会提示你设置面板的用户名、密码和访问端口 。如果选择不自定义，可能会随机生成。请务必记录这些信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;访问 x-ui 面板:&lt;/strong&gt; 安装完成后，通过浏览器访问 &lt;code&gt;http://&amp;lt;你的VPS_IP&amp;gt;:&amp;lt;面板端口&amp;gt;&lt;/code&gt; 来打开 x-ui 登录界面 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;初始登录与安全设置:&lt;/strong&gt; 使用安装时设置或脚本生成的用户名和密码登录。首次登录后，强烈建议立即修改默认的用户名和密码，并考虑修改面板的访问端口和一个随机的 URL 根路径（Web Base Path）以增强安全性 。这些设置通常在 x-ui 的“面板设置”中可以找到。可以通过在 VPS 终端运行 &lt;code&gt;x-ui&lt;/code&gt; 命令来访问管理菜单，其中包括重置 Web Base Path 等选项 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-3-SSL-证书管理&#34;&gt;&lt;a href=&#34;#3-3-SSL-证书管理&#34; class=&#34;headerlink&#34; title=&#34;3.3 SSL 证书管理&#34;&gt;&lt;/a&gt;3.3 SSL 证书管理&lt;/h3&gt;&lt;p&gt;为了启用 TLS 加密（对于 HTTPS 伪装和安全至关重要），你需要为你的域名获取 SSL 证书。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 x-ui 内置的 ACME 功能 (推荐):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确保你的域名已正确解析到 VPS 的 IP 地址（A 记录）。&lt;/li&gt;
&lt;li&gt;在 VPS 终端运行 &lt;code&gt;x-ui&lt;/code&gt; 命令，选择“SSL 证书管理” (SSL Certificate Management) 。&lt;/li&gt;
&lt;li&gt;按照提示选择“获取 SSL”(Get SSL)，输入你的域名，脚本会自动尝试通过 Let’s Encrypt 等 ACME 提供商申请证书。&lt;/li&gt;
&lt;li&gt;申请成功后，证书和私钥文件通常会保存在服务器的特定路径（如 &lt;code&gt;/root/.acme.sh/yourdomain.com/&lt;/code&gt; 或由 x-ui 指定的路径），并在 x-ui 面板中配置入站规则时引用这些路径。&lt;/li&gt;
&lt;li&gt;x-ui 通常支持自动续签申请到的证书 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 Certbot 手动申请 (备选方案):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 VPS 上安装 Certbot ：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo apt install certbot python3-certbot-nginx # (或相应的 Apache 插件)
# 或者更通用的方式
sudo apt install software-properties-common
sudo add-apt-repository ppa:certbot/certbot -y # 可能需要确认
sudo apt update
sudo apt install certbot -y&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;申请证书（以 standalone 模式为例，需要临时占用 80 端口；确保 Cloudflare DNS 记录此时为“DNS Only”）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo certbot certonly --standalone --agree-tos --register-unsafely-without-email -d yourdomain.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 yourdomain.com 替换为你的域名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;成功后，证书和私钥路径通常为 &lt;code&gt;/etc/letsencrypt/live/yourdomain.com/fullchain.pem&lt;/code&gt; 和 &lt;code&gt;/etc/letsencrypt/live/yourdomain.com/privkey.pem&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置自动续签：Certbot 通常会自动创建 systemd timer 或 cron job 来处理续签。可以通过 &lt;code&gt;sudo certbot renew --dry-run&lt;/code&gt; 测试续签。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 Cloudflare 源服务器证书 (Origin Certificate):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Cloudflare 仪表盘的 “SSL/TLS” -&amp;gt; “源服务器” 处创建源证书。Cloudflare 会提供证书和私钥。&lt;/li&gt;
&lt;li&gt;将这些证书和私钥内容上传到你的 VPS，并在 x-ui 中配置入站规则时直接粘贴内容或引用文件路径。&lt;/li&gt;
&lt;li&gt;这种方式下，Cloudflare 与你的源服务器之间的连接是加密的，但客户端到 Cloudflare 的连接仍需由 Cloudflare 提供的边缘证书处理。SSL/TLS 模式需设置为 “Full (Strict)”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通过 Cloudflare 获取 SSL (x-ui 功能):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你的域名通过 Cloudflare 解析，x-ui 的某些版本提供了通过 Cloudflare API 直接申请 SSL 证书的功能 。&lt;/li&gt;
&lt;li&gt;这需要你的 Cloudflare 注册邮箱和 Global API Key。在 x-ui 命令行菜单中选择“Cloudflare SSL 证书”并按提示操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-4-x-ui-基础节点配置-不使用-Cloudflare-CDN-Tunnel&#34;&gt;&lt;a href=&#34;#3-4-x-ui-基础节点配置-不使用-Cloudflare-CDN-Tunnel&#34; class=&#34;headerlink&#34; title=&#34;3.4 x-ui 基础节点配置 (不使用 Cloudflare CDN/Tunnel)&#34;&gt;&lt;/a&gt;3.4 x-ui 基础节点配置 (不使用 Cloudflare CDN/Tunnel)&lt;/h3&gt;&lt;p&gt;登录 x-ui 面板后，进入“入站列表”(Inbounds) 页面，点击“添加入站”(Add Inbound) 来创建新的代理节点。以下是一些常见协议的配置要点：&lt;/p&gt;
&lt;h4 id=&#34;3-4-1-VLESS-TCP-XTLS-Vision-REALITY&#34;&gt;&lt;a href=&#34;#3-4-1-VLESS-TCP-XTLS-Vision-REALITY&#34; class=&#34;headerlink&#34; title=&#34;3.4.1 VLESS + TCP + XTLS (Vision/REALITY)&#34;&gt;&lt;/a&gt;3.4.1 VLESS + TCP + XTLS (Vision/REALITY)&lt;/h4&gt;&lt;p&gt;这是目前推荐的高性能、高隐蔽性配置之一。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;备注 (Remark):&lt;/strong&gt; 给连接起一个描述性名称，如 &lt;code&gt;VLESS-XTLS-Direct&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; 选择 &lt;code&gt;vless&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监听IP (Listen IP):&lt;/strong&gt; 留空表示监听所有可用 IP 地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 推荐使用 &lt;code&gt;443&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户ID (ID / UUID):&lt;/strong&gt; x-ui 会自动生成一个 UUID，保持默认即可。这是客户端连接的凭证。&lt;/li&gt;
&lt;li&gt;流控 (Flow):&lt;ul&gt;
&lt;li&gt;对于 XTLS Vision: 选择 &lt;code&gt;xtls-rprx-vision&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; 选择 &lt;code&gt;tcp&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;TLS 设置:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;启用 TLS (Enable TLS):&lt;/strong&gt; &lt;em&gt;不勾选&lt;/em&gt; (因为 XTLS/REALITY 有自己的 TLS 处理机制)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;启用 XTLS (Enable XTLS):&lt;/strong&gt; &lt;em&gt;勾选&lt;/em&gt; (如果使用 XTLS Vision)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REALITY 设置 (如果选择 REALITY 而非 XTLS Vision):&lt;ul&gt;
&lt;li&gt;在 x-ui 面板中，通常 VLESS 协议下会有专门的 REALITY 安全设置区域 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接受代理协议 (Accept Proxy Protocol):&lt;/strong&gt; 可能需要勾选此项或类似选项来启用 REALITY 特有的参数 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标地址 (Dest):&lt;/strong&gt; 填写一个真实存在的、支持 TLSv1.3 和 H2 的境外网站域名和端口，例如 &lt;code&gt;www.microsoft.com:443&lt;/code&gt; 或 &lt;code&gt;dl.google.com:443&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server Names (SNI):&lt;/strong&gt; 填写目标地址对应的域名，例如 &lt;code&gt;www.microsoft.com&lt;/code&gt; 或 &lt;code&gt;dl.google.com&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;私钥 (Private Key):&lt;/strong&gt; 点击面板上的“生成新证书”或类似按钮生成 X25519 密钥对，这里填入私钥 1。公钥会自动生成或需要一并记录给客户端。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Short IDs:&lt;/strong&gt; 可以留空或生成一个随机的 Short ID，用于区分客户端 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uTLS 指纹 (uTLS):&lt;/strong&gt; 选择一个浏览器指纹，如 &lt;code&gt;chrome&lt;/code&gt; 或 &lt;code&gt;firefox&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域名 (Domain name):&lt;/strong&gt; 对于 XTLS Vision（非 REALITY），你需要填写真实申请过 SSL 证书的域名 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书公钥文件路径 (Certificate File Path / Public key file path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;fullchain.pem&lt;/code&gt; 文件路径 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书私钥文件路径 (Key File Path / Private key file path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;privkey.pem&lt;/code&gt; 文件路径 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-4-2-VMess-TCP-TLS&#34;&gt;&lt;a href=&#34;#3-4-2-VMess-TCP-TLS&#34; class=&#34;headerlink&#34; title=&#34;3.4.2 VMess + TCP + TLS&#34;&gt;&lt;/a&gt;3.4.2 VMess + TCP + TLS&lt;/h4&gt;&lt;p&gt;这种配置提供了较好的安全性和伪装性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;备注 (Remark):&lt;/strong&gt; 例如 &lt;code&gt;VMess-TCP-TLS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; 选择 &lt;code&gt;vmess&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监听IP (Listen IP):&lt;/strong&gt; 留空。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 推荐 &lt;code&gt;443&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户ID (UUID):&lt;/strong&gt; 自动生成，保持默认。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额外ID (AlterID):&lt;/strong&gt; 设置一个数字，如 &lt;code&gt;0&lt;/code&gt; (较新版本 Xray 中 alterId 作用减弱，可以设为0或较低值)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密方式 (Security):&lt;/strong&gt; 通常保持默认（如 &lt;code&gt;auto&lt;/code&gt; 或 &lt;code&gt;aes-128-gcm&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; 选择 &lt;code&gt;tcp&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;TLS 设置:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;启用 TLS (Enable TLS):&lt;/strong&gt; &lt;em&gt;勾选&lt;/em&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域名 (Domain name):&lt;/strong&gt; 填写你拥有并已申请 SSL 证书的域名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书公钥文件路径 (Certificate File Path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;fullchain.pem&lt;/code&gt; 文件路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书私钥文件路径 (Key File Path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;privkey.pem&lt;/code&gt; 文件路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ALPN:&lt;/strong&gt; 可以留空或根据需要填写 (如 &lt;code&gt;h2,http/1.1&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-4-3-Trojan-TCP-TLS&#34;&gt;&lt;a href=&#34;#3-4-3-Trojan-TCP-TLS&#34; class=&#34;headerlink&#34; title=&#34;3.4.3 Trojan + TCP + TLS&#34;&gt;&lt;/a&gt;3.4.3 Trojan + TCP + TLS&lt;/h4&gt;&lt;p&gt;Trojan 以其优秀的 HTTPS 伪装著称。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;备注 (Remark):&lt;/strong&gt; 例如 &lt;code&gt;Trojan-TCP-TLS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; 选择 &lt;code&gt;trojan&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监听IP (Listen IP):&lt;/strong&gt; 留空。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 必须是 &lt;code&gt;443&lt;/code&gt; 以获得最佳伪装效果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密码 (Password):&lt;/strong&gt; 设置一个强密码，客户端连接时需要使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; 选择 &lt;code&gt;tcp&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;TLS 设置:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;启用 TLS (Enable TLS):&lt;/strong&gt; &lt;em&gt;勾选&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域名 (Domain name):&lt;/strong&gt; 填写你拥有并已申请 SSL 证书的域名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书公钥文件路径 (Certificate File Path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;fullchain.pem&lt;/code&gt; 文件路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书私钥文件路径 (Key File Path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;privkey.pem&lt;/code&gt; 文件路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ALPN:&lt;/strong&gt; 建议填写 &lt;code&gt;h2,http/1.1&lt;/code&gt; 以更好地模拟 HTTPS 流量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fallback (回落):&lt;/strong&gt; 可以配置一个回落地址（如本地运行的 Web 服务器 &lt;code&gt;127.0.0.1:80&lt;/code&gt;），当非 Trojan 协议访问该端口时，流量会被转发到此地址，增强伪装性。x-ui 中可能有相应配置项。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-4-4-Shadowsocks-AEAD-Ciphers&#34;&gt;&lt;a href=&#34;#3-4-4-Shadowsocks-AEAD-Ciphers&#34; class=&#34;headerlink&#34; title=&#34;3.4.4 Shadowsocks (AEAD Ciphers)&#34;&gt;&lt;/a&gt;3.4.4 Shadowsocks (AEAD Ciphers)&lt;/h4&gt;&lt;p&gt;简单高效的选择。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;备注 (Remark):&lt;/strong&gt; 例如 &lt;code&gt;SS-AEAD&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; 选择 &lt;code&gt;shadowsocks&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监听IP (Listen IP):&lt;/strong&gt; 留空。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 选择一个未被占用的端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密码 (Password):&lt;/strong&gt; 设置一个强密码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密方式 (Encryption / Cipher):&lt;/strong&gt; 强烈推荐使用 AEAD 加密，如 &lt;code&gt;2022-blake3-aes-256-gcm&lt;/code&gt; (如果 x-ui 和客户端支持) 或 &lt;code&gt;aes-256-gcm&lt;/code&gt;, &lt;code&gt;chacha20-ietf-poly1305&lt;/code&gt; 。避免使用旧的非 AEAD 加密方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Network):&lt;/strong&gt; 可以选择 &lt;code&gt;tcp&lt;/code&gt; 或 &lt;code&gt;tcp,udp&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-4-5-WireGuard&#34;&gt;&lt;a href=&#34;#3-4-5-WireGuard&#34; class=&#34;headerlink&#34; title=&#34;3.4.5 WireGuard&#34;&gt;&lt;/a&gt;3.4.5 WireGuard&lt;/h4&gt;&lt;p&gt;3x-ui 支持 WireGuard 作为入站协议 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;备注 (Remark):&lt;/strong&gt; 例如 &lt;code&gt;WireGuard-VPN&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; 选择 &lt;code&gt;wireguard&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监听IP (Listen IP):&lt;/strong&gt; 留空。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; WireGuard 默认使用 UDP 协议，端口通常为 &lt;code&gt;51820&lt;/code&gt;，但可以自定义。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;私钥 (Private Key):&lt;/strong&gt; 服务器的 WireGuard 私钥。x-ui 可能会自动生成或提供生成按钮。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公钥 (Public Key):&lt;/strong&gt; 服务器的 WireGuard 公钥（由私钥派生）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP 地址 (Addresses):&lt;/strong&gt; 分配给 WireGuard 服务器接口的内部 IP 地址和子网掩码，例如 &lt;code&gt;10.0.8.1/24&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MTU:&lt;/strong&gt; 通常保持默认或根据网络情况调整。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS:&lt;/strong&gt; 可以指定推送给客户端的 DNS 服务器。&lt;/li&gt;
&lt;li&gt;对等端 (Peers) / 用户 (Clients):&lt;ul&gt;
&lt;li&gt;为每个客户端生成独立的密钥对（公钥和私钥）。&lt;/li&gt;
&lt;li&gt;在服务器端添加客户端的公钥。&lt;/li&gt;
&lt;li&gt;为客户端分配一个隧道内的 IP 地址（如 &lt;code&gt;10.0.8.2&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;配置 &lt;code&gt;AllowedIPs&lt;/code&gt;：对于客户端，通常设为 &lt;code&gt;0.0.0.0/0, ::/0&lt;/code&gt; 以路由所有流量通过 VPN。在服务器端，对应客户端的 &lt;code&gt;AllowedIPs&lt;/code&gt; 设为其分配的隧道 IP (如 &lt;code&gt;10.0.8.2/32&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;重要提示:&lt;/strong&gt; 上述 x-ui 面板中的具体选项名称可能因 3x-ui 版本略有不同。请以你实际使用的面板界面为准。配置完成后，务必点击“添加”或“保存”并根据提示重启 Xray 服务使配置生效。&lt;/p&gt;
&lt;h3 id=&#34;3-5-集成-Cloudflare-CDN-适用于-WebSocket-和-gRPC-节点&#34;&gt;&lt;a href=&#34;#3-5-集成-Cloudflare-CDN-适用于-WebSocket-和-gRPC-节点&#34; class=&#34;headerlink&#34; title=&#34;3.5 集成 Cloudflare CDN (适用于 WebSocket 和 gRPC 节点)&#34;&gt;&lt;/a&gt;3.5 集成 Cloudflare CDN (适用于 WebSocket 和 gRPC 节点)&lt;/h3&gt;&lt;p&gt;将 Cloudflare CDN 置于代理服务器之前，可以隐藏源服务器 IP、防御 DDoS 攻击，并可能为特定地区用户加速。这主要适用于基于 WebSocket 或 gRPC 的传输方式，因为它们能更好地兼容 HTTP/HTTPS 流量模式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare DNS 设置:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;登录 Cloudflare 账户，选择你的域名。&lt;/li&gt;
&lt;li&gt;进入 “DNS” 管理页面。&lt;/li&gt;
&lt;li&gt;添加一个 A 记录，将你的域名（或子域名，如 &lt;code&gt;proxy.yourdomain.com&lt;/code&gt;）指向你的 VPS IP 地址 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关键步骤 - SSL 证书申请期间:&lt;/strong&gt; 在申请 SSL 证书（无论是通过 x-ui 的 ACME 还是手动用 Certbot）时，必须确保此 DNS 记录的“代理状态”(Proxy status) 为“仅限 DNS”(DNS Only)，即云朵图标为灰色 。这是因为 Let’s Encrypt 等 CA 需要直接验证你的服务器 IP。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关键步骤 - 启用 CDN:&lt;/strong&gt; SSL 证书成功获取并配置到 x-ui 后，回到 Cloudflare DNS 设置页面，将该 A 记录的“代理状态”切换为“已代理”(Proxied)，即云朵图标变为橙色。这样流量才会经过 Cloudflare CDN 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare SSL/TLS 模式:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;在 Cloudflare 仪表盘的 “SSL/TLS” -&amp;gt; “概述” (Overview) 页面，将 SSL/TLS 加密模式设置为 &lt;strong&gt;“Full (Strict)”&lt;/strong&gt; (完全（严格）) 。这确保浏览器到 Cloudflare 以及 Cloudflare 到源服务器的连接都是严格加密和验证的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在 Cloudflare 网络设置中启用 WebSocket 和 gRPC:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;在 Cloudflare 仪表盘的 “网络” (Network) 页面：&lt;ul&gt;
&lt;li&gt;确保 “WebSockets” 开关已打开（通常默认开启）。&lt;/li&gt;
&lt;li&gt;如果使用 gRPC 传输，确保 “gRPC” 开关已打开 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC 要求:&lt;/strong&gt; 源服务器上的 gRPC 端点必须监听 443 端口，支持 TLS 和 HTTP/2，并通过 ALPN 广播 HTTP/2。请求的 &lt;code&gt;Content-Type&lt;/code&gt; 头部应为 &lt;code&gt;application/grpc&lt;/code&gt; 或 &lt;code&gt;application/grpc+&amp;lt;message_type&amp;gt;&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 配置 VLESS + WebSocket + TLS + CDN:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;在 x-ui 中添加入站：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; &lt;code&gt;vless&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 设置一个源服务器上的监听端口，例如 &lt;code&gt;8443&lt;/code&gt; (或其他非 443 端口，因为 443 由 Cloudflare 面向公网)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; 选择 &lt;code&gt;ws&lt;/code&gt; (WebSocket) 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路径 (Path):&lt;/strong&gt; 设置一个 WebSocket 路径，例如 &lt;code&gt;/myvlessws&lt;/code&gt;。这个路径需要隐蔽一些，不要使用过于常见的词汇。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Host (请求头):&lt;/strong&gt; 填写你在 Cloudflare DNS 中设置并开启代理的域名（如 &lt;code&gt;proxy.yourdomain.com&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;TLS 设置:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;启用 TLS (Enable TLS):&lt;/strong&gt; &lt;em&gt;勾选&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域名 (Domain name):&lt;/strong&gt; 填写你的域名（&lt;code&gt;proxy.yourdomain.com&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书公钥文件路径 (Certificate File Path):&lt;/strong&gt; 填写之前申请的 SSL 证书的 &lt;code&gt;fullchain.pem&lt;/code&gt; 路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书私钥文件路径 (Key File Path):&lt;/strong&gt; 填写 SSL 证书的 &lt;code&gt;privkey.pem&lt;/code&gt; 路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;客户端连接时，地址填 &lt;code&gt;proxy.yourdomain.com&lt;/code&gt;，端口填 &lt;code&gt;443&lt;/code&gt; (Cloudflare 的端口)，传输选 WebSocket，路径填 &lt;code&gt;/myvlessws&lt;/code&gt;，底层传输安全选 TLS，SNI/Host 填 &lt;code&gt;proxy.yourdomain.com&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 配置 VMess + WebSocket + TLS + CDN:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;配置方法与 VLESS+WS+TLS 类似 ：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; &lt;code&gt;vmess&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 源服务器监听端口，如 &lt;code&gt;8443&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; &lt;code&gt;ws&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路径 (Path):&lt;/strong&gt; 例如 &lt;code&gt;/myvmessws&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Host (请求头):&lt;/strong&gt; 你的 CDN 域名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS 设置:&lt;/strong&gt; 同上，使用你的域名和证书。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;客户端连接参数类似，注意协议选择 VMess 并填写 UUID 和 AlterID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 配置 Trojan + gRPC + TLS + CDN:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; &lt;code&gt;trojan&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 源服务器监听端口，如 &lt;code&gt;8443&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; &lt;code&gt;grpc&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC 服务名称 (serviceName / Service Name):&lt;/strong&gt; 设置一个服务名称，例如 &lt;code&gt;mytrojangrpc&lt;/code&gt;。客户端连接时需要匹配。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS 设置:&lt;/strong&gt; 同上，使用你的域名和证书。&lt;/li&gt;
&lt;li&gt;客户端连接时，地址填 CDN 域名，端口 &lt;code&gt;443&lt;/code&gt;，传输选 gRPC，服务名称填 &lt;code&gt;mytrojangrpc&lt;/code&gt;，底层传输安全选 TLS，SNI 填 CDN 域名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare gRPC 注意事项:&lt;/strong&gt; Cloudflare WAF 对 gRPC 内容的检查有限，主要在连接阶段进行头部检查 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 配置 VLESS + gRPC + TLS + CDN:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;配置方法与 Trojan+gRPC+TLS 类似：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协议 (Protocol):&lt;/strong&gt; &lt;code&gt;vless&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 源服务器监听端口，如 &lt;code&gt;8443&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输 (Transport / Network):&lt;/strong&gt; &lt;code&gt;grpc&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC 服务名称 (serviceName / Service Name):&lt;/strong&gt; 例如 &lt;code&gt;myvlessgrpc&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS 设置:&lt;/strong&gt; 同上。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;客户端连接参数类似。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 Cloudflare CDN 的主要好处是隐藏了源服务器的真实 IP 地址，这对于防止 IP 被直接攻击或封锁至关重要。此外，Cloudflare 的全球网络节点可以为地理位置较远的用户提供一定的访问速度优化（通过缓存静态内容和更优的路由，尽管对于动态代理流量，缓存效果有限）。同时，Cloudflare 也提供了基础的 DDoS 防护。然而，所有流量都经过 Cloudflare 网络，意味着 Cloudflare 有能力检查（在一定程度上，特别是对于未加密或解密后的流量）和记录这些流量，并且其自身也可能因为合规原因对特定类型的流量进行限制或阻断 。这是一个需要在便利性和潜在风险之间进行权衡的因素。&lt;/p&gt;
&lt;h3 id=&#34;3-6-使用-Cloudflare-Workers-作为代理层&#34;&gt;&lt;a href=&#34;#3-6-使用-Cloudflare-Workers-作为代理层&#34; class=&#34;headerlink&#34; title=&#34;3.6 使用 Cloudflare Workers 作为代理层&#34;&gt;&lt;/a&gt;3.6 使用 Cloudflare Workers 作为代理层&lt;/h3&gt;&lt;p&gt;Cloudflare Workers 允许在 Cloudflare 的边缘节点上运行 JavaScript (或其他编译到 WebAssembly 的语言) 代码，可以用来拦截和修改请求/响应，或将请求代理到后端服务。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基本原理:&lt;/strong&gt; 创建一个 Worker 脚本，该脚本接收来自客户端的请求，然后将这些请求转发到你的 Xray 源服务器。对于 WebSocket 流量，Worker 需要特殊处理以正确建立和维持双向连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Worker 脚本示例 (通用 WebSocket 代理):&lt;/p&gt;
&lt;p&gt;以下是一个非常基础的通用 WebSocket 代理 Worker 脚本的逻辑框架。请注意，直接代理任意 Xray 协议流量可能违反 Cloudflare 服务条款 ，且此脚本需要根据实际 Xray 配置（如路径、头部）进行调整。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-JavaScript&#34; data-language=&#34;JavaScript&#34;&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;//addEventListener(&#34;fetch&#34;, event =&amp;gt; {
//  event.respondWith(handleRequest(event.request))
//})
//
//async function handleRequest(request) {
//  const url = new URL(request.url);
//  const upgradeHeader = request.headers.get(&#39;Upgrade&#39;);
//
//  // 后端 Xray 服务器地址和端口，以及预期的 WebSocket 路径
//  const backendHost = &#39;your_vps_ip_or_hidden_domain&#39;; // 不应是 Cloudflare CDN 域名
//  const backendPort = your_xray_ws_listen_port; // Xray WS 入站监听的真实端口
//  const backendPath = &#39;/your_xray_ws_path&#39;; // Xray WS 入站配置的路径
//
//  // 构建后端 URL
//  let backendUrl = `wss://&amp;lt;span class=&#34;math-inline&#34;&amp;gt;\{backendHost\}\:&amp;lt;/span&amp;gt;{backendPort}${backendPath}`;
//  if (url.protocol === &#39;http:&#39;) {
//      backendUrl = `ws://&amp;lt;span class=&#34;math-inline&#34;&amp;gt;\{backendHost\}\:&amp;lt;/span&amp;gt;{backendPort}${backendPath}`;
//  }
//
//  if (upgradeHeader &amp;amp;&amp;amp; upgradeHeader.toLowerCase() === &#39;websocket&#39;) {
//    // 处理 WebSocket 升级请求
//    const [client, server] = Object.values(new WebSocketPair());
//    server.accept();
//
//    try {
//      const wsBackend = new WebSocket(backendUrl, request.headers); // 将原始请求头传给后端
//
//      wsBackend.addEventListener(&#39;open&#39;, () =&amp;gt; {
//        // 后端连接打开
//      });
//
//      wsBackend.addEventListener(&#39;message&#39;, event =&amp;gt; {
//        server.send(event.data); // 从后端收到消息，转发给客户端
//      });
//
//      wsBackend.addEventListener(&#39;close&#39;, event =&amp;gt; {
//        server.close(event.code, event.reason); // 后端关闭，关闭客户端连接
//      });
//
//      wsBackend.addEventListener(&#39;error&#39;, event =&amp;gt; {
//        server.close(1011, &#39;Backend WebSocket error&#39;); // 后端错误
//      });
//
//      server.addEventListener(&#39;message&#39;, event =&amp;gt; {
//        wsBackend.send(event.data); // 从客户端收到消息，转发给后端
//      });
//
//      server.addEventListener(&#39;close&#39;, event =&amp;gt; {
//        wsBackend.close(event.code, event.reason); // 客户端关闭，关闭后端连接
//      });
//
//      server.addEventListener(&#39;error&#39;, event =&amp;gt; {
//        wsBackend.close(1011, &#39;Client WebSocket error&#39;); // 客户端错误
//      });
//
//      return new Response(null, { status: 101, webSocket: client });
//    } catch (e) {
//      return new Response(&#39;WebSocket backend connection failed: &#39; + e.toString(), { status: 502 });
//    }
//  } else {
//    // 对于非 WebSocket 请求，可以直接转发或返回错误
//    // 如果 Xray 配置了 HTTP 回落，这里可以尝试转发 HTTP 请求
//    // url.hostname = backendHost; // 注意：这仅适用于 HTTP 代理，不适用于 Xray 协议本身
//    // url.port = backendPort.toString();
//    // return fetch(new Request(url, request));
//    return new Response(&#39;This Worker is for WebSocket proxying.&#39;, { status: 400 });
//  }
//}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意:&lt;/p&gt;
&lt;p&gt; 上述脚本是一个高度简化的示例，用于说明概念。实际用于 Xray 的 Worker 脚本可能需要更复杂的逻辑来处理特定的 Xray WebSocket 路径、头部信息（如 Host头部需要正确设置为 Xray 配置中的值）以及可能的认证。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keivanipchihagh/x-ui&lt;/code&gt; 仓库中可能包含更具体的 Worker 脚本 (scripts/worker.js)，建议参考其实现 。Cloudflare 官方文档也提供了 WebSocket 处理的示例 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部署和路由设置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Cloudflare 仪表盘创建 Worker，将上述脚本（或适配后的脚本）粘贴进去并部署 。&lt;/li&gt;
&lt;li&gt;为 Worker 配置一个路由，例如 &lt;code&gt;worker.yourdomain.com/&lt;/code&gt;，这样访问此路径的流量会由 Worker 处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Xray 入站配置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xray 的 WebSocket 入站配置应监听一个本地端口（或可被 Worker 访问的地址），其路径和 Host 设置需要与 Worker 脚本转发时的目标一致。TLS 可以在源服务器上配置，也可以由 Worker 到源服务器的连接处理（如果源服务器配置了 TLS）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优缺点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 灵活性高，可以自定义请求处理逻辑，实现更复杂的伪装。IP 地址由 Cloudflare Worker 提供。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点:&lt;/strong&gt; Worker 有执行时间、CPU 时间和内存限制。配置比 CDN 复杂。同样存在 Cloudflare 服务条款的适用问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cloudflare Workers 提供了一种比传统 CDN 更细致的流量控制和伪装能力。例如，Worker 可以根据请求的特定头部或路径，将流量路由到不同的后端 Xray 服务，甚至可以动态修改请求/响应内容以增强混淆。这种可编程性使得 Workers 成为一种强大的工具，但也要求用户具备一定的编程知识。然而，需要强调的是，滥用 Cloudflare 服务（包括 Workers）进行违反其服务条款的活动是被禁止的。&lt;/p&gt;
&lt;h3 id=&#34;3-7-使用-Cloudflare-Tunnel-Argo-Tunnel-代理-TCP-节点&#34;&gt;&lt;a href=&#34;#3-7-使用-Cloudflare-Tunnel-Argo-Tunnel-代理-TCP-节点&#34; class=&#34;headerlink&#34; title=&#34;3.7 使用 Cloudflare Tunnel (Argo Tunnel) 代理 TCP 节点&#34;&gt;&lt;/a&gt;3.7 使用 Cloudflare Tunnel (Argo Tunnel) 代理 TCP 节点&lt;/h3&gt;&lt;p&gt;Cloudflare Tunnel (以前称为 Argo Tunnel) 可以安全地将你的本地服务（包括运行在 VPS 上的 Xray 服务）暴露到互联网，而无需在防火墙上打开入站端口。它通过在你的服务器上运行一个轻量级守护进程 &lt;code&gt;cloudflared&lt;/code&gt;，该进程会与 Cloudflare 的边缘网络建立一个持久的、仅出站的加密连接。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基本原理:&lt;/strong&gt; &lt;code&gt;cloudflared&lt;/code&gt; 守护进程将本地 Xray 服务（如 VLESS+TCP、Trojan+TCP、Shadowsocks+TCP）的流量通过这个安全隧道发送到 Cloudflare 边缘，Cloudflare 再将公网用户的请求通过隧道转发给你的 Xray 服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装和配置 &lt;code&gt;cloudflared&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在你的 VPS 上下载并安装 &lt;code&gt;cloudflared&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;登录 &lt;code&gt;cloudflared&lt;/code&gt;：&lt;code&gt;cloudflared tunnel login&lt;/code&gt;，这会在浏览器中打开 Cloudflare 登录页面，授权后 &lt;code&gt;cloudflared&lt;/code&gt; 会下载一个证书文件。&lt;/li&gt;
&lt;li&gt;创建隧道：&lt;code&gt;cloudflared tunnel create &amp;lt;your_tunnel_name&amp;gt;&lt;/code&gt;。记下返回的隧道 UUID。&lt;/li&gt;
&lt;li&gt;为隧道创建 DNS 记录（指向公共主机名）：&lt;code&gt;cloudflared tunnel route dns &amp;lt;your_tunnel_name_or_UUID&amp;gt; &amp;lt;proxy.yourdomain.com&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置 &lt;code&gt;cloudflared&lt;/code&gt; 以暴露 TCP 服务:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建一个配置文件（通常是 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;~/.cloudflared/config.yml&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; 或在 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/etc/cloudflared/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; 目录），内容类似如下 ：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-YAML&#34; data-language=&#34;YAML&#34;&gt;&lt;code class=&#34;language-YAML&#34;&gt;tunnel: &amp;lt;your_tunnel_UUID&amp;gt; # 从 &#39;cloudflared tunnel create&#39; 命令获取
credentials-file: /root/.cloudflared/&amp;lt;your_tunnel_UUID&amp;gt;.json # 证书文件路径

ingress:
  - hostname: proxy.yourdomain.com # 你希望用户连接的公共域名
    service: tcp://localhost:&amp;lt;xray_listen_port&amp;gt; # Xray 服务监听的本地地址和端口
  - service: http_status:404 # 捕获所有其他未匹配的请求&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;&amp;lt;your_tunnel_UUID&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;proxy.yourdomain.com&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;xray_listen_port&amp;gt;&lt;/code&gt;替换为实际值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行隧道:&lt;/strong&gt; &lt;code&gt;cloudflared tunnel run &amp;lt;your_tunnel_name_or_UUID&amp;gt;&lt;/code&gt; 或者，将 &lt;code&gt;cloudflared&lt;/code&gt; 安装为系统服务以便开机自启：&lt;code&gt;sudo cloudflared service install&lt;/code&gt; (需要先有配置文件)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Xray 入站配置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xray 的 TCP 类型入站（如 VLESS+TCP, Trojan+TCP, Shadowsocks+TCP）应配置为监听 &lt;code&gt;localhost:&amp;lt;xray_listen_port&amp;gt;&lt;/code&gt;，与 &lt;code&gt;cloudflared&lt;/code&gt; 配置文件中的 &lt;code&gt;service&lt;/code&gt; 地址对应。&lt;/li&gt;
&lt;li&gt;由于 TLS 终结发生在 Cloudflare 边缘，Xray 源服务器上的这些 TCP 入站通常不需要再配置 TLS。客户端连接时，地址填写 &lt;code&gt;proxy.yourdomain.com&lt;/code&gt;，端口为 Cloudflare 支持的端口（如 443，Cloudflare 会处理 TLS）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优缺点与限制:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点:&lt;/strong&gt; 无需公网 IP 或开放防火墙端口即可安全暴露服务，IP 地址由 Cloudflare 提供。&lt;/li&gt;
&lt;li&gt;缺点:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gRPC 限制:&lt;/strong&gt; 通过公共主机名的 Cloudflare Tunnel 目前不支持 gRPC 流量 。gRPC 可以通过隧道的私网路由功能与 WARP 客户端结合使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP 限制:&lt;/strong&gt; 通过公共主机名代理任意 UDP 流量不是标准功能。UDP 通常需要结合 Cloudflare WARP 客户端和私网路由 。对于 WireGuard (UDP)，直接通过 Tunnel 的公共主机名暴露可能不可行或效果不佳。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能:&lt;/strong&gt; 相比直接连接或 CDN，Tunnel 增加了一个 &lt;code&gt;cloudflared&lt;/code&gt; 进程和到 Cloudflare 边缘的额外网络跃点，可能会引入一些延迟。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cloudflare Tunnel 为那些不适合通过 CDN（如原始 TCP 协议）或不希望直接暴露服务器 IP 的场景提供了一个有价值的解决方案。它特别适用于隐藏家庭网络或动态 IP 环境下的服务器。然而，用户必须清楚其对 gRPC 和 UDP 等协议在公共主机名模式下的限制。&lt;/p&gt;
&lt;h3 id=&#34;3-8-必备表格：Cloudflare-服务用于代理的对比&#34;&gt;&lt;a href=&#34;#3-8-必备表格：Cloudflare-服务用于代理的对比&#34; class=&#34;headerlink&#34; title=&#34;3.8 必备表格：Cloudflare 服务用于代理的对比&#34;&gt;&lt;/a&gt;3.8 必备表格：Cloudflare 服务用于代理的对比&lt;/h3&gt;&lt;p&gt;为了帮助用户根据自身需求选择最合适的 Cloudflare 服务来增强其 Xray 节点，下表对 Cloudflare CDN、Workers 和 Tunnel 的关键特性进行了对比：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Cloudflare CDN (Orange Cloud DNS)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Cloudflare Workers&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Cloudflare Tunnel (Public Hostname)&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主要优势&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;隐藏源 IP, DDoS 防护, 静态内容缓存, 广泛的 HTTP(S) 兼容性&lt;/td&gt;
&lt;td&gt;高度灵活, 边缘计算, 可自定义请求/响应逻辑, 动态路由, IP 来自 CF&lt;/td&gt;
&lt;td&gt;无需公网 IP/开放端口, 安全暴露本地服务, IP 来自 CF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;适用协议/传输&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;HTTP, HTTPS, WebSocket, gRPC (有限制)&lt;/td&gt;
&lt;td&gt;HTTP, HTTPS, WebSocket (可编程处理)&lt;/td&gt;
&lt;td&gt;TCP, HTTP, HTTPS (gRPC, UDP 在公共主机名模式下受限)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IP 隐藏&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;是 (源服务器 IP)&lt;/td&gt;
&lt;td&gt;是 (源服务器 IP, Worker 本身 IP 是 CF 的)&lt;/td&gt;
&lt;td&gt;是 (源服务器 IP)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TLS 处理&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;浏览器 &amp;lt;-&amp;gt; CF (CF 证书), CF &amp;lt;-&amp;gt; 源服务器 (源服务器证书, 需 Full Strict)&lt;/td&gt;
&lt;td&gt;可自定义 (浏览器 &amp;lt;-&amp;gt; Worker &amp;lt;-&amp;gt; 源)&lt;/td&gt;
&lt;td&gt;浏览器 &amp;lt;-&amp;gt; CF (CF 证书), Tunnel 内部加密, CF &amp;lt;-&amp;gt; 源 (通常无需 TLS)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;性能影响&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;取决于地理位置和缓存, 可能增加延迟, Argo 可优化&lt;/td&gt;
&lt;td&gt;Worker 执行有开销, 但边缘执行可减少延迟&lt;/td&gt;
&lt;td&gt;增加 &lt;code&gt;cloudflared&lt;/code&gt; 跃点, 可能有额外延迟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;配置复杂度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;较低 (DNS 切换)&lt;/td&gt;
&lt;td&gt;中到高 (需要编写和部署脚本)&lt;/td&gt;
&lt;td&gt;中等 (安装和配置 &lt;code&gt;cloudflared&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主要限制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;对非 HTTP(S) 协议支持不佳, 可能被 WAF/Bot 管理误判&lt;/td&gt;
&lt;td&gt;执行时间/资源限制, 服务条款约束&lt;/td&gt;
&lt;td&gt;gRPC/UDP 在公共主机名模式下支持不佳&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;选择考量:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你的 Xray 节点使用 &lt;strong&gt;WebSocket 或 gRPC&lt;/strong&gt; 传输，并且希望利用 CDN 的 IP 隐藏和 DDoS 防护，&lt;strong&gt;Cloudflare CDN&lt;/strong&gt; 是首选，配置也最简单。&lt;/li&gt;
&lt;li&gt;如果你需要更高级的流量伪装、自定义路由逻辑，或者希望在边缘处理一些逻辑（例如，根据特定条件选择后端），并且不介意编写代码，&lt;strong&gt;Cloudflare Workers&lt;/strong&gt; 提供了极大的灵活性。&lt;/li&gt;
&lt;li&gt;如果你的 Xray 节点使用 &lt;strong&gt;纯 TCP 协议&lt;/strong&gt; (如 VLESS/Trojan/SS over TCP)，或者你的服务器没有公网 IP / 不想开放入站端口，&lt;strong&gt;Cloudflare Tunnel&lt;/strong&gt; 是一个很好的选择，但要注意其对 gRPC 和 UDP 的限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第四部分：安全与优化&#34;&gt;&lt;a href=&#34;#第四部分：安全与优化&#34; class=&#34;headerlink&#34; title=&#34;第四部分：安全与优化&#34;&gt;&lt;/a&gt;第四部分：安全与优化&lt;/h2&gt;&lt;p&gt;搭建和使用科学上网节点时，安全性和性能优化是不可忽视的重要环节。&lt;/p&gt;
&lt;h3 id=&#34;4-1-VPS-服务器安全基础&#34;&gt;&lt;a href=&#34;#4-1-VPS-服务器安全基础&#34; class=&#34;headerlink&#34; title=&#34;4.1 VPS 服务器安全基础&#34;&gt;&lt;/a&gt;4.1 VPS 服务器安全基础&lt;/h3&gt;&lt;p&gt;保护承载 Xray 服务的 VPS 是首要任务。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;防火墙配置 (UFW/iptables):&lt;ul&gt;
&lt;li&gt;UFW (Uncomplicated Firewall) 是一个用户友好的 iptables 前端。启用 UFW 并配置规则可以有效控制服务器的网络访问 。&lt;/li&gt;
&lt;li&gt;基本操作:&lt;ul&gt;
&lt;li&gt;启用 UFW: &lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看状态: &lt;code&gt;sudo ufw status verbose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;允许特定端口: &lt;code&gt;sudo ufw allow &amp;lt;port&amp;gt;/&amp;lt;protocol&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拒绝特定端口: &lt;code&gt;sudo ufw deny &amp;lt;port&amp;gt;/&amp;lt;protocol&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;推荐规则 (详见文末表格):&lt;ul&gt;
&lt;li&gt;默认拒绝所有入站连接: &lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;默认允许所有出站连接: &lt;code&gt;sudo ufw default allow outgoing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;允许 SSH 连接（建议使用非标准端口，并限制来源 IP）: &lt;code&gt;sudo ufw allow from &amp;lt;your_trusted_IP&amp;gt; to any port &amp;lt;ssh_port&amp;gt; proto tcp&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;允许 x-ui 面板访问端口（强烈建议限制来源 IP）: &lt;code&gt;sudo ufw allow from &amp;lt;your_trusted_IP&amp;gt; to any port &amp;lt;xui_panel_port&amp;gt; proto tcp&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;允许代理服务端口（通常是 443/TCP 用于 TLS 节点，以及 WireGuard 的 UDP 端口）: &lt;code&gt;sudo ufw allow 443/tcp&lt;/code&gt;, &lt;code&gt;sudo ufw allow &amp;lt;wireguard_udp_port&amp;gt;/udp&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;如果使用 Certbot 的 HTTP-01 验证，需要临时允许 80/TCP: &lt;code&gt;sudo ufw allow 80/tcp&lt;/code&gt; (验证后可考虑移除或限制)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSH 加固:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;禁用 root 用户密码登录:&lt;/strong&gt; 编辑 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;，设置 &lt;code&gt;PermitRootLogin prohibit-password&lt;/code&gt; (或 &lt;code&gt;no&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用密钥对认证:&lt;/strong&gt; 推荐禁用密码认证 (&lt;code&gt;PasswordAuthentication no&lt;/code&gt;)，仅使用 SSH 密钥对登录 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更改默认 SSH 端口:&lt;/strong&gt; 将默认的 22 端口更改为一个不常用的高位端口，以减少自动扫描攻击 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;定期更新:&lt;ul&gt;
&lt;li&gt;保持操作系统和所有已安装软件包的最新状态，以修复已知的安全漏洞：&lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他安全措施:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fail2ban:&lt;/strong&gt; 安装并配置 Fail2ban 可以监控日志文件（如 SSH 登录失败、x-ui 面板登录尝试），并在检测到恶意行为（如暴力破解）时自动封禁来源 IP 。3x-ui 面板本身也集成了 IP 限制功能，需要安装 Fail2ban 配合使用 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁用不必要的服务:&lt;/strong&gt; 关闭服务器上所有不需要运行的网络服务，以减少攻击面。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采取多层次的安全措施至关重要。仅仅依赖 Cloudflare 的保护或一个强密码是不够的。VPS 自身的安全（防火墙、SSH加固、及时更新）、x-ui 面板的安全（强密码、HTTPS访问、访问IP限制）以及代理协议自身的安全性（如TLS、REALITY）共同构成了一个纵深防御体系。每一层都针对不同类型的威胁提供防护，从而整体上提升节点的安全性。&lt;/p&gt;
&lt;h3 id=&#34;4-2-Cloudflare-安全设置&#34;&gt;&lt;a href=&#34;#4-2-Cloudflare-安全设置&#34; class=&#34;headerlink&#34; title=&#34;4.2 Cloudflare 安全设置&#34;&gt;&lt;/a&gt;4.2 Cloudflare 安全设置&lt;/h3&gt;&lt;p&gt;Cloudflare 提供了多种安全功能，但在用于代理节点时，某些设置可能需要调整以避免对代理流量的干扰。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WAF 自定义规则 (Web Application Firewall):&lt;ul&gt;
&lt;li&gt;Cloudflare WAF 可能会将某些代理流量模式识别为可疑并进行拦截。如果遇到这种情况，可以尝试在 Cloudflare WAF 设置中创建自定义规则，针对代理节点的特定路径（如 WebSocket 路径）或来源（如果固定）选择“跳过”(Skip) WAF 的部分或全部分析模块 。&lt;/li&gt;
&lt;li&gt;例如，如果 WebSocket 路径是 &lt;code&gt;/secretpath&lt;/code&gt;，可以创建规则：&lt;code&gt;If URI Path equals /secretpath Then Skip (All WAF managed rules, Cloudflare OWASP Core Ruleset)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重要警示:&lt;/strong&gt; Cloudflare 的服务条款明确禁止未经授权使用其网络提供代理或 VPN 服务 68。虽然技术上可以通过 WAF 规则绕过检查，但这并不意味着这种用法符合服务条款。用户应自行承担相关风险。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;页面规则 (Page Rules) (主要用于 WebSocket 优化/绕过):&lt;ul&gt;
&lt;li&gt;对于 WebSocket 连接使用的特定路径，可以考虑设置页面规则 ：&lt;ul&gt;
&lt;li&gt;将“缓存级别”(Cache Level) 设置为“绕过”(Bypass)，因为代理流量通常是动态的，不应被缓存。&lt;/li&gt;
&lt;li&gt;在极端情况下，如果 Cloudflare 的安全级别过高导致连接问题，可以考虑将该路径的“安全级别”(Security Level) 设置为“基本关闭”(Essentially Off) 或“禁用安全性”(Disable Security)。但这样做会降低该路径的安全防护，务必谨慎使用，并尽可能缩小规则匹配范围。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确保 Cloudflare “网络” (Network) 设置中的 “WebSockets” 功能已开启（通常默认开启）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;机器人管理 (Bot Management) 注意事项:&lt;ul&gt;
&lt;li&gt;Cloudflare 的“机器人战斗模式”(Bot Fight Mode) 或“超级机器人战斗模式”(Super Bot Fight Mode) 可能会将代理客户端的连接行为归类为“可能是自动程序”并进行质询或阻止 。&lt;/li&gt;
&lt;li&gt;如果代理连接因此受阻，可能需要禁用机器人战斗模式，或者（如果可能且符合服务条款）创建 WAF 规则来跳过对特定代理主机名或路径的机器人检测。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSL/TLS 优化器 (SSL/TLS Recommender) 与自动 HTTPS 重写:&lt;ul&gt;
&lt;li&gt;这些功能通常是有益的，但务必确保最终的 SSL/TLS 加密模式保持在 “Full (Strict)” 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTTP/2 到源站 与 HTTP/3:&lt;ul&gt;
&lt;li&gt;在 Cloudflare “网络” 设置中启用 “HTTP/2 到源站” 通常是推荐的，特别是当源服务器（Xray）也支持 HTTP/2 时（例如使用 gRPC 传输）。HTTP/3 (QUIC) 也可以考虑启用，但要确保 Xray 和客户端都支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloudflare 的安全功能是一把双刃剑。它们在保护网站免受恶意攻击方面非常有效 7，但其某些启发式检测机制也可能将正常的代理流量误判为可疑活动，从而导致连接问题。因此，用户需要理解这些设置如何工作，并学会在 Cloudflare 仪表盘中进行细致调整，以便在获得 Cloudflare 保护的同时，确保代理服务的顺畅运行。这通常需要在安全性和可用性之间找到一个平衡点。&lt;/p&gt;
&lt;h3 id=&#34;4-3-进阶抗封锁技巧&#34;&gt;&lt;a href=&#34;#4-3-进阶抗封锁技巧&#34; class=&#34;headerlink&#34; title=&#34;4.3 进阶抗封锁技巧&#34;&gt;&lt;/a&gt;4.3 进阶抗封锁技巧&lt;/h3&gt;&lt;p&gt;随着审查技术的不断发展，单一的代理协议和配置可能不足以保证长期稳定。以下是一些进阶的抗封锁思路和技术：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;域名伪装 (Domain Fronting - 概念性):&lt;/strong&gt; 传统意义上的域名伪装（通过在 TLS ClientHello 中使用一个 SNI，而在 HTTP Host 头中使用另一个域名，并依赖 CDN 的路由行为）在很大程度上已被主流 CDN 提供商（包括 Cloudflare）限制。然而，Cloudflare Workers 可以在一定程度上实现类似效果：Worker 脚本可以接收来自一个“干净”域名的请求，然后根据内部逻辑（如特定路径或头部）将请求转发到实际的、可能被审查的后端代理服务器。这需要精心设计的 Worker 脚本和 Xray 配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用“干净”的 IP 地址和信誉良好的 VPS 提供商:&lt;/strong&gt; 某些 IP 地址段（例如来自大型、知名云服务商的 IP）可能受到更严格的审查或更容易被列入黑名单。选择一些较小众、信誉良好或专门针对此类应用的 VPS 提供商，并获取相对“干净”的 IP 地址，可能有助于提高节点的存活率 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP 地址轮换 (高级):&lt;/strong&gt; 这是一项更复杂的技术，通常涉及拥有多个 VPS 或使用支持 IP 轮换的服务。通过定期更换代理服务器的出口 IP 地址，可以降低单个 IP 因长时间暴露而被封锁的风险。&lt;/li&gt;
&lt;li&gt;模仿真实网站流量:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;真实的回落网站:&lt;/strong&gt; 对于 Trojan 或其他配置了回落 (Fallback) 功能的协议，确保回落指向一个真实、内容丰富且在目标审查区域内访问正常的网站。这个网站应该有合法的 TLS 证书。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket 路径与 Host:&lt;/strong&gt; 对于 WebSocket 类型的节点，其连接路径 (Path) 和 Host 头部应尽量模仿正常 Web 应用的 API 请求。避免使用过于简单或可识别的路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS 指纹伪装 (uTLS):&lt;/strong&gt; 许多审查系统会分析 TLS 握手过程中的客户端指纹（Client Hello），以识别可疑的非浏览器流量。Xray 核心及其客户端（如 Nekoray, V2RayNG, ShadowRocket 等）通常支持 uTLS 功能，允许客户端在发起 TLS 连接时模仿特定浏览器（如 Chrome, Firefox）或操作系统的 TLS 指纹 。在客户端配置中启用并选择合适的 uTLS 指纹，是增强伪装性的重要手段。对于 REALITY 协议，服务器端也会参与指纹的伪装。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免使用常见代理端口 (有限效果):&lt;/strong&gt; 虽然将代理服务运行在非标准端口（而不是常见的 80, 443, 1080 等）可能避开一些非常初级的端口扫描，但这对于能够进行深度包检测的审查系统来说几乎没有作用。对于基于 TLS 的代理协议（如 VLESS/VMess/Trojan + TLS/WS/gRPC/REALITY），使用标准的 HTTPS 端口 &lt;code&gt;443&lt;/code&gt; 通常是最佳选择，因为它最符合伪装成正常 HTTPS 流量的目的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流量分割与分流:&lt;/strong&gt; 不在所有流量上都使用代理。例如，可以使用 PAC 文件、浏览器扩展或客户端的路由规则，仅对需要访问受限资源的域名或 IP 地址启用代理，而国内或其他可直连的流量则直接访问。这不仅可以节省代理服务器的带宽，减少不必要的性能开销，还能降低代理服务器因大量非敏感流量通过而被注意到的风险。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络审查与反审查技术始终处于动态的“军备竞赛”之中。没有任何一种技术或配置可以保证永久有效。审查方会不断分析和封锁已知的协议特征和服务器 IP，而开发者和用户则会不断寻找新的协议、传输方式和伪装技巧来应对。因此，保持对新技术和封锁动态的关注，并准备好根据需要调整和更新自己的节点配置，是维持科学上网连接稳定的关键。&lt;/p&gt;
&lt;h3 id=&#34;4-4-性能优化与资源消耗考量&#34;&gt;&lt;a href=&#34;#4-4-性能优化与资源消耗考量&#34; class=&#34;headerlink&#34; title=&#34;4.4 性能优化与资源消耗考量&#34;&gt;&lt;/a&gt;4.4 性能优化与资源消耗考量&lt;/h3&gt;&lt;p&gt;节点的性能直接影响用户体验，而资源消耗则关系到 VPS 的成本和承载能力。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;协议选择对性能的影响:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VLESS vs VMess:&lt;/strong&gt; VLESS 由于其无内置加密和更简洁的头部设计，通常比 VMess 具有更低的延迟和更高的吞吐量，资源消耗也更少 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WireGuard:&lt;/strong&gt; 以其极高的速度和低资源占用著称，是性能优先场景下的优秀选择，但其基于 UDP，可能受网络环境影响 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shadowsocks:&lt;/strong&gt; 作为一种轻量级协议，性能表现良好，资源占用低 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trojan:&lt;/strong&gt; 性能接近原生 HTTPS，通常表现不错 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传输方式对性能的影响:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TCP:&lt;/strong&gt; 作为基础传输协议，稳定可靠，但纯 TCP 传输（即使套了 TLS）的特征相对容易被识别。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket (WS):&lt;/strong&gt; 为代理流量增加了额外的 HTTP 头部和 WebSocket 帧封装，会带来一定的性能开销。然而，它是通过 CDN 转发流量的常用方式。Xray 的一些配置（如 VLESS 的回落分流到 WS）据称性能优于传统的 Nginx 反代 WS 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC:&lt;/strong&gt; 基于 HTTP/2，支持多路复用，可以减少连接建立的开销，对移动端和需要频繁短连接的场景友好，性能通常优于 WebSocket。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XTLS:&lt;/strong&gt; 专门为 VLESS 和 Trojan 设计，通过减少 TLS 加密层级来优化性能，理论上可以达到接近或优于裸 TCP+TLS 的性能 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器硬件配置:&lt;/strong&gt; CPU 的核心数和主频、内存大小以及网络带宽都会直接影响 Xray 服务器能处理的并发连接数和总吞吐量。高负载情况下，性能瓶颈可能出现在 CPU（加解密和协议处理）或网络I/O上 47。虽然难以给出精确的 Xray 资源消耗数据，但可以参考类似代理软件（如 Envoy）的指标：每秒处理 1000 个请求（1KB负载）大约需要 0.2-0.5 vCPU 和 40-60MB 内存 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare 引入的延迟:&lt;/strong&gt; 使用 Cloudflare CDN、Workers 或 Tunnel 会在客户端和源服务器之间增加额外的网络跃点，这不可避免地会引入一定的延迟。Cloudflare 的 Argo Smart Routing (付费功能) 声称可以优化路由，减少延迟。对于 WebSocket 流量，Cloudflare 本身对连接的处理也可能影响性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keepalives (连接保持):&lt;/strong&gt; 对于长时间活动的连接，特别是 WebSocket，配置适当的 Keepalive 机制非常重要，可以防止连接因网络中间设备（如 NAT、防火墙）的超时而意外断开 。Xray 和客户端通常都有相关配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;启用 BBR 拥塞控制算法:&lt;/strong&gt; 在 VPS 服务器上启用 TCP BBR 拥塞控制算法，通常可以显著改善高延迟、有一定丢包率网络环境下的 TCP 连接吞吐量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内核参数优化:&lt;/strong&gt; 调整 Linux 内核参数，如最大文件描述符数 (&lt;code&gt;ulimit -n&lt;/code&gt;)、TCP 连接队列大小 (&lt;code&gt;net.core.somaxconn&lt;/code&gt;, &lt;code&gt;net.ipv4.tcp_max_syn_backlog&lt;/code&gt;) 等，在高并发场景下可能有助于提升性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;性能并非单一因素决定的，而是协议、传输方式、加密强度、服务器负载、网络路径（包括 Cloudflare 的参与）、客户端与服务器硬件，乃至操作系统内核调优等多种因素综合作用的结果。例如，VLESS+XTLS+REALITY 在直连情况下可能速度最快，但对于与服务器地理位置遥远的用户，VLESS+WS+TLS+CDN 由于 CDN 的边缘节点效应，尽管 WebSocket 自身有开销，却可能带来更好的实际访问体验。因此，优化是一个需要综合考虑并根据具体场景进行调整的过程。&lt;/p&gt;
&lt;h3 id=&#34;必备表格：推荐的-UFW-防火墙规则&#34;&gt;&lt;a href=&#34;#必备表格：推荐的-UFW-防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;必备表格：推荐的 UFW 防火墙规则&#34;&gt;&lt;/a&gt;必备表格：推荐的 UFW 防火墙规则&lt;/h3&gt;&lt;p&gt;以下表格提供了一组针对运行 x-ui 和 Xray 代理服务的 VPS 的推荐 UFW 防火墙规则。请根据你的实际端口配置进行调整。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;规则描述&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;UFW 命令 (示例)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;端口 (示例)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;协议&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;允许来自特定 IP 的 SSH 访问&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw allow from 1.2.3.4 to any port 2222 proto tcp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2222&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;将 &lt;code&gt;1.2.3.4&lt;/code&gt; 替换为你的可信管理 IP，&lt;code&gt;2222&lt;/code&gt; 替换为你的 SSH 端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;允许来自特定 IP 的 x-ui 面板访问&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw allow from 1.2.3.4 to any port 54321 proto tcp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;54321&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;将 &lt;code&gt;1.2.3.4&lt;/code&gt; 替换为你的可信管理 IP，&lt;code&gt;54321&lt;/code&gt; 替换为你的 x-ui 面板端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;允许 HTTPS/TLS 代理流量 (通用)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw allow 443/tcp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;用于 VLESS/VMess/Trojan 等协议的 TLS, WS+TLS, gRPC+TLS, REALITY。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;允许 HTTP 流量 (SSL 证书验证)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw allow 80/tcp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;主要用于 Let’s Encrypt HTTP-01 验证。验证完成后可考虑限制或移除此规则。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;允许 WireGuard 流量&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw allow 51820/udp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;51820&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;将 &lt;code&gt;51820&lt;/code&gt; 替换为你的 WireGuard 监听端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;允许 Xray 源服务器监听端口 (如果使用 CDN/Tunnel)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw allow 8443/tcp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8443&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;示例端口，用于 CDN/Tunnel 回源。应仅允许来自 Cloudflare IP 段的访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认拒绝所有其他入站连接&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;重要的安全基线。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认允许所有出站连接&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw default allow outgoing&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;允许服务器主动向外发起连接。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;启用 UFW&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;在所有规则配置完成后执行。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在执行 &lt;code&gt;sudo ufw enable&lt;/code&gt; 之前，务必确保已添加允许 SSH 访问的规则，否则可能导致无法远程连接服务器。&lt;/li&gt;
&lt;li&gt;对于通过 CDN 或 Tunnel 回源的端口（如上例中的 8443/TCP），更安全的做法是仅允许来自 Cloudflare IP 地址段的流量访问这些端口。Cloudflare 公布了其 IP 范围列表，可以用于配置更精细的防火墙规则。&lt;/li&gt;
&lt;li&gt;定期审查和更新防火墙规则，确保其符合当前的安全需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;防火墙是服务器安全的第一道防线，正确配置 UFW 对于保护你的 Xray 节点免受未经授权的访问和潜在攻击至关重要 54。上述规则提供了一个基础模板，用户应根据自己的具体服务端口和安全策略进行调整。&lt;/p&gt;
&lt;h2 id=&#34;第五部分：客户端配置与使用&#34;&gt;&lt;a href=&#34;#第五部分：客户端配置与使用&#34; class=&#34;headerlink&#34; title=&#34;第五部分：客户端配置与使用&#34;&gt;&lt;/a&gt;第五部分：客户端配置与使用&lt;/h2&gt;&lt;p&gt;成功搭建节点后，需要在客户端设备上进行相应配置才能连接和使用。&lt;/p&gt;
&lt;h3 id=&#34;5-1-主流客户端介绍&#34;&gt;&lt;a href=&#34;#5-1-主流客户端介绍&#34; class=&#34;headerlink&#34; title=&#34;5.1 主流客户端介绍&#34;&gt;&lt;/a&gt;5.1 主流客户端介绍&lt;/h3&gt;&lt;p&gt;市面上有众多支持 Xray 核心及其协议的客户端软件，覆盖各类操作系统平台。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨平台:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nekoray / Nekobox:&lt;/strong&gt; 支持 Windows, Linux, Android，并有非官方 macOS 版本。功能强大，支持 Shadowsocks (包括 SS-2022), VLESS, VMess, Trojan, XTLS-Reality 等多种协议和特性 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;V2RayNG:&lt;/strong&gt; 基于 Xray 核心，支持 Xray 的所有协议和功能，界面简洁，广受欢迎 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hiddify (FoXray Hiddify):&lt;/strong&gt; 提及与 3X-UI VLESS REALITY 配合使用，可能基于 FoXray 或类似核心 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SagerNet / Matsuri:&lt;/strong&gt; 同样是功能丰富的 Android 客户端。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iOS:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FoXray:&lt;/strong&gt; 基于 Xray 核心，支持 Shadowsocks, VLESS, Socks, VMess, XTLS, REALITY, Trojan 以及 TCP, HTTP/2, WebSocket, mKCP, gRPC, QUIC 等多种传输方式 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ShadowRocket (小火箭):&lt;/strong&gt; 付费应用，功能强大，支持 Shadowsocks (包括 SS-2022), VMess, VLESS, Trojan, TUIC, Hysteria, WireGuard, XTLS-Vision, uTLS 等多种协议和特性 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V2BOX:&lt;/strong&gt; 支持 Xray 核心的免费 iOS 客户端 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Streisand:&lt;/strong&gt; 提及与 3x-ui VLESS 配合使用 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quantumult X / Loon / Surge:&lt;/strong&gt; 均为功能强大的付费网络工具，支持多种代理协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;V2RayN:&lt;/strong&gt; 流行的 Windows 客户端，支持 Xray/V2Ray 核心，界面直观 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nekoray / Nekobox:&lt;/strong&gt; 如上所述，也支持 Windows。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Qv2ray:&lt;/strong&gt; (项目已停止维护，但仍有用户使用) 跨平台客户端，基于 Qt。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;macOS:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;V2RayX:&lt;/strong&gt; (项目可能更新较慢) 针对 macOS 的 V2Ray 客户端。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nekoray / Nekobox (非官方):&lt;/strong&gt; 如上所述。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V2BOX:&lt;/strong&gt; 如上所述，也支持 macOS 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ClashX / Clash for Windows (CFW) (macOS 版本):&lt;/strong&gt; 基于 Clash 核心的客户端，支持多种协议，通过配置文件进行管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nekoray / Nekobox:&lt;/strong&gt; 如上所述。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Qv2ray:&lt;/strong&gt; (项目已停止维护)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clash (命令行) / Clash Verge (图形界面):&lt;/strong&gt; 基于 Clash 核心。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WireGuard 客户端:&lt;ul&gt;
&lt;li&gt;WireGuard 官方为各主流平台（Windows, macOS, Linux, Android, iOS）均提供了客户端软件 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-2-各协议客户端配置示例&#34;&gt;&lt;a href=&#34;#5-2-各协议客户端配置示例&#34; class=&#34;headerlink&#34; title=&#34;5.2 各协议客户端配置示例&#34;&gt;&lt;/a&gt;5.2 各协议客户端配置示例&lt;/h3&gt;&lt;p&gt;从 x-ui 面板导出配置通常是最便捷的方式，支持通过分享链接、二维码或复制配置信息。如果需要手动配置，以下是一些关键参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通用参数:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地址 (Address/Server):&lt;/strong&gt; 填写你的服务器域名（如 &lt;code&gt;proxy.yourdomain.com&lt;/code&gt;，如果使用 CDN 或 Worker 域名）或服务器 IP 地址（如果直连）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口 (Port):&lt;/strong&gt; 填写服务器监听的端口。对于 CDN/Worker 后的 TLS 节点，通常是 &lt;code&gt;443&lt;/code&gt;。对于直连节点，填写 x-ui 中设置的监听端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户ID (ID/UUID):&lt;/strong&gt; 对应 VLESS/VMess 协议中 x-ui 生成的 UUID。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密码 (Password):&lt;/strong&gt; 对应 Trojan 或 Shadowsocks 协议中设置的密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VMess 特定参数:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;额外ID (AlterID):&lt;/strong&gt; 对应 x-ui 中设置的 AlterID。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密方式 (Security/Cipher):&lt;/strong&gt; 客户端选择的加密方式需与服务器端兼容，通常选 &lt;code&gt;auto&lt;/code&gt; 或服务器指定的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VLESS 特定参数:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流控 (Flow):&lt;/strong&gt; 如果服务器端 VLESS 配置了 &lt;code&gt;flow&lt;/code&gt; (如 &lt;code&gt;xtls-rprx-vision&lt;/code&gt;)，客户端需要相应配置。对于 REALITY，此项通常不直接配置，而是通过 REALITY 的特定参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TLS 相关参数 (适用于 VLESS/VMess/Trojan + TLS/XTLS/REALITY):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;传输层安全 (TLS/Security):&lt;/strong&gt; 选择 &lt;code&gt;tls&lt;/code&gt; 或 &lt;code&gt;xtls&lt;/code&gt; 或 &lt;code&gt;reality&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SNI (Server Name Indication) / Peer / Host:&lt;/strong&gt; 填写用于 TLS 握手的域名，通常是你的服务器域名或 CDN/Worker 域名。对于 REALITY，这里填写的是你伪装的目标网站域名 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;允许不安全连接 (Allow Insecure):&lt;/strong&gt; 通常应设为 &lt;code&gt;false&lt;/code&gt; (不勾选)，除非特殊调试目的且了解风险。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ALPN (Application-Layer Protocol Negotiation):&lt;/strong&gt; 客户端可以指定 ALPN，如 &lt;code&gt;h2,http/1.1&lt;/code&gt;，以更好地模拟浏览器行为。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书验证 (Skip Cert Verify):&lt;/strong&gt; 通常不应跳过证书验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WebSocket (WS) 特定参数 (适用于 VLESS/VMess/Trojan + WS):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;传输协议 (Network/Transport):&lt;/strong&gt; 选择 &lt;code&gt;ws&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路径 (Path):&lt;/strong&gt; 填写与 x-ui 中 WebSocket 配置一致的路径 (如 &lt;code&gt;/myvlessws&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Host (请求头):&lt;/strong&gt; 填写你的服务器域名或 CDN/Worker 域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;gRPC 特定参数 (适用于 VLESS/VMess/Trojan + gRPC):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;传输协议 (Network/Transport):&lt;/strong&gt; 选择 &lt;code&gt;grpc&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC 服务名称 (serviceName):&lt;/strong&gt; 填写与 x-ui 中 gRPC 配置一致的服务名称 (如 &lt;code&gt;mytrojangrpc&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式 (Mode):&lt;/strong&gt; &lt;code&gt;multi&lt;/code&gt; (多路复用) 模式通常性能更好。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REALITY 特定参数 (VLESS + REALITY):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;公钥 (PublicKey):&lt;/strong&gt; 填写服务器端 x-ui 生成的 X25519 公钥 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ShortID:&lt;/strong&gt; 填写服务器端配置的 ShortID (可以为空，如果服务器允许) 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SpiderX / Fingerprint:&lt;/strong&gt; 客户端通常会自动选择或允许用户选择一个 TLS 指纹 (uTLS) 来模仿，如 &lt;code&gt;chrome&lt;/code&gt; 或 &lt;code&gt;firefox&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shadowsocks 特定参数:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;加密方法 (Cipher/Method):&lt;/strong&gt; 选择与服务器端一致的 AEAD 加密方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WireGuard 特定参数:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;私钥 (PrivateKey):&lt;/strong&gt; 客户端的私钥。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地址 (Address):&lt;/strong&gt; 分配给客户端的隧道内 IP 地址 (如 &lt;code&gt;10.0.8.2/32&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS:&lt;/strong&gt; 可选，指定通过 VPN 使用的 DNS 服务器。&lt;/li&gt;
&lt;li&gt;[Peer] 部分:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;公钥 (PublicKey):&lt;/strong&gt; 服务器的 WireGuard 公钥。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预共享密钥 (PresharedKey):&lt;/strong&gt; 可选，用于增强安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端点 (Endpoint):&lt;/strong&gt; 服务器的公网 IP 地址和 WireGuard 监听端口 (如 &lt;code&gt;your_vps_ip:51820&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;允许的 IP (AllowedIPs):&lt;/strong&gt; 通常设为 &lt;code&gt;0.0.0.0/0, ::/0&lt;/code&gt;，表示所有流量都通过 VPN。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;许多现代客户端，特别是那些支持 Xray 核心的，都允许用户精细调整 TLS 握手行为，例如通过 uTLS 设置来模仿特定浏览器的 TLS 指纹 。这对于增强连接的隐蔽性，特别是在连接到使用 REALITY 或其他高级伪装技术的服务器时，非常重要。用户应在客户端设置中寻找类似“TLS 指纹”、“uTLS”、“Fingerprint”或“SpiderX”的选项，并选择一个常见浏览器的指纹（如 Chrome 或 Firefox），以使代理流量更难与普通网页浏览流量区分开来。&lt;/p&gt;
&lt;h2 id=&#34;结论与展望&#34;&gt;&lt;a href=&#34;#结论与展望&#34; class=&#34;headerlink&#34; title=&#34;结论与展望&#34;&gt;&lt;/a&gt;结论与展望&lt;/h2&gt;&lt;p&gt;本教程详细介绍了多种主流科学上网代理协议的原理、特性，并逐步指导了如何使用 x-ui (MHSanaei 3x-ui) 面板在 VPS 上搭建这些节点，以及如何结合 Cloudflare CDN、Workers 和 Tunnel 服务来增强节点的隐蔽性和可用性。同时，也涵盖了服务器安全、Cloudflare 安全配置、进阶抗封锁技巧、性能优化和客户端配置等关键方面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心结论包括：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;协议多样性与演进:&lt;/strong&gt; 从 Shadowsocks 的简洁高效，到 VMess 的安全灵活，再到 VLESS 的极致性能与 REALITY 的卓越伪装，以及 Trojan 的 HTTPS 模拟和 WireGuard 的现代高速，用户可以根据自身对安全性、性能、抗检测能力和配置复杂度的不同需求选择合适的协议。协议的演进体现了与审查技术持续对抗的趋势。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;x-ui 的便捷性:&lt;/strong&gt; x-ui 面板极大地简化了 Xray 节点的部署和管理，使得即便是初学者也能相对容易地配置和维护多种复杂的代理协议。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare 的双重角色:&lt;/strong&gt; Cloudflare 的 CDN、Workers 和 Tunnel 服务为代理节点提供了强大的 IP 隐藏、DDoS 防护和流量中转能力。然而，其安全机制也可能对代理流量造成干扰，需要用户仔细配置 WAF、页面规则和机器人管理等设置。同时，用户需注意 Cloudflare 的服务条款。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全是基础:&lt;/strong&gt; 无论是 VPS 服务器自身的安全加固（防火墙、SSH 安全、系统更新、Fail2ban），还是 x-ui 面板和代理协议的安全配置（强密码、TLS 加密、uTLS 指纹），都是确保节点稳定和用户数据安全不可或缺的环节。分层安全策略是抵御潜在风险的关键。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能与伪装的权衡:&lt;/strong&gt; 极致的性能（如 VLESS+XTLS）和极致的伪装（如 VLESS+REALITY 或 Trojan）往往需要更精细的配置。通过 CDN 或 Tunnel 虽然能隐藏 IP，但也可能引入额外延迟。用户需要在这些因素之间做出权衡。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客户端的重要性:&lt;/strong&gt; 选择功能全面、支持最新协议特性（如 uTLS）的客户端，并正确配置，对于发挥节点的全部潜力至关重要。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;未来展望：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网络审查技术和科学上网技术之间的博弈仍将持续。未来可能会出现更智能、更难被检测的审查手段，同时也会催生出更先进、更具适应性的代理协议和混淆技术。对于用户而言，持续学习、关注技术动态、灵活调整配置策略，将是长期维持稳定、安全科学上网能力的关键。&lt;/p&gt;
&lt;p&gt;希望本教程能为读者在理解和实践科学上网技术方面提供有价值的参考。请务必在遵守当地法律法规的前提下使用相关技术。&lt;/p&gt;
&lt;h2 id=&#34;附录&#34;&gt;&lt;a href=&#34;#附录&#34; class=&#34;headerlink&#34; title=&#34;附录&#34;&gt;&lt;/a&gt;附录&lt;/h2&gt;&lt;h3 id=&#34;常见问题解答-FAQ&#34;&gt;&lt;a href=&#34;#常见问题解答-FAQ&#34; class=&#34;headerlink&#34; title=&#34;常见问题解答 (FAQ)&#34;&gt;&lt;/a&gt;常见问题解答 (FAQ)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问：连接节点时遇到问题（如超时、无法连接）怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;答：&lt;/p&gt;
&lt;p&gt; 首先检查：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPS 服务器是否在线，x-ui 和 Xray 服务是否正常运行 (&lt;code&gt;systemctl status x-ui&lt;/code&gt;, &lt;code&gt;systemctl status xray&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;VPS 防火墙 (UFW) 是否允许了相应的代理端口和 x-ui 面板端口的入站连接。&lt;/li&gt;
&lt;li&gt;x-ui 面板中的入站配置是否正确（协议、端口、ID/密码、域名、证书路径、传输设置等）。&lt;/li&gt;
&lt;li&gt;客户端配置是否与服务器端完全一致。&lt;/li&gt;
&lt;li&gt;域名是否正确解析到 VPS IP（如果直连）或 Cloudflare IP（如果使用 CDN）。&lt;/li&gt;
&lt;li&gt;Cloudflare 相关设置：DNS 代理状态（橙色云朵）、SSL/TLS 模式（应为 Full Strict）、WAF 或机器人管理是否拦截了流量（查看 Cloudflare 事件日志）。&lt;/li&gt;
&lt;li&gt;服务器和客户端的时间是否同步。&lt;/li&gt;
&lt;li&gt;尝试更换客户端或网络环境测试。&lt;/li&gt;
&lt;li&gt;查看 x-ui 和 Xray 的日志（通过 x-ui 面板或服务器命令 &lt;code&gt;journalctl -u xray -f&lt;/code&gt;）获取错误信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问：如何更新 x-ui 面板和 Xray 核心？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;答：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更新 x-ui 面板 (MHSanaei/3x-ui):&lt;/strong&gt; 通常可以再次运行官方安装脚本 &lt;code&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)&lt;/code&gt;，脚本会自动检测已安装版本并进行升级 。也可以在 x-ui 命令行菜单中选择更新选项。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新 Xray 核心:&lt;/strong&gt; 3x-ui 面板通常会捆绑特定版本的 Xray 核心。一些 x-ui 分支可能在面板内提供一键更新 Xray 核心的功能。或者，可以从 Xray-core 的 GitHub Releases 页面下载最新的二进制文件，手动替换 VPS 上 x-ui 使用的 Xray 执行文件（通常位于 &lt;code&gt;/usr/local/x-ui/bin/xray-core&lt;/code&gt; 或类似路径，请先备份旧版）。替换后需要重启 Xray 服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问：我的 VPS IP 地址被封锁了怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;答：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更换 IP:&lt;/strong&gt; 联系 VPS 提供商更换 IP 地址（可能需要额外费用）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用 Cloudflare 隐藏 IP:&lt;/strong&gt; 如果之前是直连，可以尝试将节点配置为通过 Cloudflare CDN、Workers 或 Tunnel 接入，这样暴露给外界的是 Cloudflare 的 IP。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迁移服务器:&lt;/strong&gt; 将 x-ui 数据备份后，在新的 VPS 上重新部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问：Cloudflare 是否允许使用其网络进行代理？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答：&lt;/strong&gt; Cloudflare 的服务条款（ToS Section 2.8）通常禁止使用其网络（特别是免费计划）作为大规模、未经授权的代理或 VPN 服务出口 68。虽然技术上可以通过 CDN、Workers 或 Tunnel 搭建代理，但如果流量模式被 Cloudflare 识别为滥用，账户或相关域名可能会受到限制。用户应了解并自行承担此风险。使用 Cloudflare WARP 是其官方推荐的个人安全上网方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问：REALITY 和 XTLS 有什么区别？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答：&lt;/strong&gt; XTLS 是一种旨在减少 VLESS/Trojan 协议中 TLS 加密层级开销的技术，核心在于优化数据传输路径，提高性能。REALITY 则是一种更侧重于消除服务器端 TLS 指纹、增强抗检测能力的协议特性，它通过“借用”真实网站的 TLS 证书指纹来实现伪装。两者可以独立使用（VLESS+XTLS+TLS 或 VLESS+TCP+REALITY），也可以在某些配置下（如 VLESS over TCP with XTLS-Vision and REALITY）协同工作，但 REALITY 本身通常不与传统的 TLS 证书配置同时用于同一入站。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;相关资源链接&#34;&gt;&lt;a href=&#34;#相关资源链接&#34; class=&#34;headerlink&#34; title=&#34;相关资源链接&#34;&gt;&lt;/a&gt;相关资源链接&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Xray-core GitHub:&lt;/strong&gt;(&lt;a href=&#34;https://github.com/XTLS/Xray-core&#34;&gt;https://github.com/XTLS/Xray-core&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3x-ui (MHSanaei) GitHub:&lt;/strong&gt;(&lt;a href=&#34;https://github.com/MHSanaei/3x-ui&#34;&gt;https://github.com/MHSanaei/3x-ui&lt;/a&gt;) 6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloudflare 官方文档:&lt;/strong&gt; &lt;a href=&#34;https://developers.cloudflare.com/&#34;&gt;https://developers.cloudflare.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nekoray 客户端:&lt;/strong&gt;(&lt;a href=&#34;https://github.com/MatsuriDayo/nekoray&#34;&gt;https://github.com/MatsuriDayo/nekoray&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V2RayNG 客户端 (Android):&lt;/strong&gt; &lt;a href=&#34;https://github.com/2dust/v2rayNG&#34;&gt;https://github.com/2dust/v2rayNG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ShadowRocket (iOS):&lt;/strong&gt; App Store (付费应用)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FoXray (iOS):&lt;/strong&gt; App Store&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WireGuard 官方网站:&lt;/strong&gt; &lt;a href=&#34;https://www.wireguard.com/&#34;&gt;https://www.wireguard.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/05/31/sing-box-da-jian-jie-dian/</guid>
            <title>Sing-box 搭建您的专属科学上网节点实用指南</title>
            <link>https://0xdadream.github.io/2025/05/31/sing-box-da-jian-jie-dian/</link>
            <category>教程</category>
            <pubDate>Sat, 31 May 2025 12:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Sing-box-搭建您的专属“科学上网”节点实用指南&#34;&gt;&lt;a href=&#34;#Sing-box-搭建您的专属“科学上网”节点实用指南&#34; class=&#34;headerlink&#34; title=&#34;Sing-box 搭建您的专属“科学上网”节点实用指南&#34;&gt;&lt;/a&gt;Sing-box 搭建您的专属“科学上网”节点实用指南&lt;/h1&gt;&lt;h2 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;h3 id=&#34;Sing-box-简介：强大的通用代理平台&#34;&gt;&lt;a href=&#34;#Sing-box-简介：强大的通用代理平台&#34; class=&#34;headerlink&#34; title=&#34;Sing-box 简介：强大的通用代理平台&#34;&gt;&lt;/a&gt;Sing-box 简介：强大的通用代理平台&lt;/h3&gt;&lt;p&gt;Sing-box 是一款新兴且功能强大的通用代理平台，被广泛认为是 V2Ray 和 Xray 等成熟工具的有力替代品 。它凭借其卓越的性能、轻量化的设计、对多种代理协议的广泛支持、高度模块化的架构以及积极的社区开发，迅速获得了用户的青睐 。Sing-box 基于 Go 语言开发，并以开源形式发布，这不仅保证了其透明度和安全性，也促进了社区的共同发展和完善 。&lt;/p&gt;
&lt;h3 id=&#34;本教程目标&#34;&gt;&lt;a href=&#34;#本教程目标&#34; class=&#34;headerlink&#34; title=&#34;本教程目标&#34;&gt;&lt;/a&gt;本教程目标&lt;/h3&gt;&lt;p&gt;本教程旨在提供一个从零开始的详尽指南，帮助具备一定技术背景的用户在自己的服务器上成功安装和配置 sing-box，并部署多种当前流行且高效的代理协议。通过本教程，用户将能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择合适的服务器并完成 sing-box 的安装。&lt;/li&gt;
&lt;li&gt;理解 sing-box 的核心概念和配置文件结构。&lt;/li&gt;
&lt;li&gt;配置服务器防火墙，确保代理服务的正常运行。&lt;/li&gt;
&lt;li&gt;详细配置 VLESS (配合 Reality)、Trojan (配合 TLS)、Shadowsocks (2022新加密)、Hysteria2 和 TUIC 等主流代理协议。&lt;/li&gt;
&lt;li&gt;了解客户端的基本配置方法和主流客户端软件。&lt;/li&gt;
&lt;li&gt;初步接触如使用 CDN 隐藏服务器 IP、配置基本路由和故障转移等高级技巧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽管本教程力求详尽，但 sing-box 的功能远不止于此。鼓励用户在掌握基础后，进一步查阅其官方文档 ，探索更多高级定制功能，以满足个性化需求。&lt;/p&gt;
&lt;h2 id=&#34;第一章：理解与安装-Sing-box&#34;&gt;&lt;a href=&#34;#第一章：理解与安装-Sing-box&#34; class=&#34;headerlink&#34; title=&#34;第一章：理解与安装 Sing-box&#34;&gt;&lt;/a&gt;第一章：理解与安装 Sing-box&lt;/h2&gt;&lt;h3 id=&#34;1-1-Sing-box-核心概念：构建代理节点的基石&#34;&gt;&lt;a href=&#34;#1-1-Sing-box-核心概念：构建代理节点的基石&#34; class=&#34;headerlink&#34; title=&#34;1.1. Sing-box 核心概念：构建代理节点的基石&#34;&gt;&lt;/a&gt;1.1. Sing-box 核心概念：构建代理节点的基石&lt;/h3&gt;&lt;p&gt;理解 sing-box 的核心组件及其交互方式，是成功配置和高效使用该平台的基础。其模块化设计允许用户灵活组合不同的功能模块，以适应多样化的网络环境和需求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;入站连接 (Inbounds):&lt;/strong&gt; 入站连接负责处理从客户端设备（例如您的电脑或手机）传入 sing-box 服务器的连接请求。Sing-box 支持多种入站协议类型，常见的包括 Shadowsocks、Trojan、VLESS、VMess、Hysteria2、TUIC、Naive、ShadowTLS，以及用于创建虚拟网卡的 Tun 和用于透明代理的 Redirect 等 。用户可以根据客户端的支持情况和安全需求选择合适的入站协议。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;出站连接 (Outbounds):&lt;/strong&gt; 出站连接定义了 sing-box 服务器如何处理经过其的数据流，即如何将数据转发到目标互联网地址或其他代理服务器。常见的出站类型有 Direct（直接连接）、Block（阻止连接）、Shadowsocks、Trojan、VLESS、WireGuard、Hysteria2、TUIC，以及专门用于 DNS 查询的 DNS、用于节点选择的 Selector 和用于故障转移的 URLTest 等 。这种设计使得 sing-box 不仅能作为代理服务器，还能作为客户端连接其他代理，或实现复杂的代理链。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;路由 (Route):&lt;/strong&gt; 路由模块是 sing-box 实现精细化流量控制的核心。用户可以通过定义一系列路由规则，根据流量的目标地址（如 GeoIP 数据库判断的地理位置、Geosite 预设的网站域名集合）、域名、协议类型等多种条件，将特定的流量导向不同的出站连接 。例如，可以配置国内网站直连，国外网站通过代理访问，从而优化访问速度和资源利用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DNS 配置:&lt;/strong&gt; DNS（域名系统）在网络通信中扮演着将域名转换为 IP 地址的关键角色。Sing-box 内建了强大的 DNS 处理能力，允许用户配置自定义 DNS 服务器、设定 DNS 路由规则，并支持如 FakeIP（虚拟 IP）等高级功能，以防止 DNS 泄露，确保域名解析的准确性和安全性 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;配置文件 (&lt;code&gt;config.json&lt;/code&gt;):&lt;/strong&gt; Sing-box 的所有配置均通过一个 JSON 格式的文件进行管理，通常命名为 &lt;code&gt;config.json&lt;/code&gt; 。该文件包含了日志、DNS、入站、出站、路由等所有模块的配置信息。其顶层结构通常如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;log&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;dns&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;route&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;experimental&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;熟悉 JSON 语法并理解各配置项的含义对于手动配置 sing-box至关重要。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sing-box 的架构设计体现了高度的模块化，官方文档 在其配置结构中明确区分了入站、出站和路由等组件。这种设计带来了显著的灵活性，例如支持同时作为客户端和服务器运行 ，以及实现多协议负载均衡 。这意味着用户可以根据具体需求自由组合这些模块，构建从简单的个人代理到复杂的多跳转发网关等各种应用场景，这相较于一些功能固化的工具是一个显著的优势。&lt;/p&gt;
&lt;h3 id=&#34;1-2-选择您的服务器-VPS-：地理位置与操作系统考量&#34;&gt;&lt;a href=&#34;#1-2-选择您的服务器-VPS-：地理位置与操作系统考量&#34; class=&#34;headerlink&#34; title=&#34;1.2. 选择您的服务器 (VPS)：地理位置与操作系统考量&#34;&gt;&lt;/a&gt;1.2. 选择您的服务器 (VPS)：地理位置与操作系统考量&lt;/h3&gt;&lt;p&gt;选择一台合适的虚拟专用服务器（VPS）是搭建稳定高效代理服务的前提。以下是一些关键考量因素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地理位置:&lt;/strong&gt; 服务器的地理位置直接影响到您的访问速度和能否顺畅访问特定区域的内容。应选择距离用户较近且能提供良好国际网络连接的地区。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务商信誉:&lt;/strong&gt; 选择知名且信誉良好的 VPS 服务商，以确保服务的稳定性、可靠的技术支持和合理的资源分配。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源需求:&lt;/strong&gt; 根据预期的负载情况，选择合适的 CPU、内存（RAM）和带宽。对于个人使用，通常入门级配置即可满足需求，但如果用户较多或流量较大，则需相应提高配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作系统:&lt;/strong&gt; 强烈推荐选用 Linux 发行版，特别是 &lt;strong&gt;Ubuntu 或 Debian&lt;/strong&gt;。这两个发行版拥有庞大的用户社区、丰富的文档资源，并且 sing-box 官方提供了便捷的安装脚本和软件包支持 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绝大多数关于 sing-box 及类似代理工具的安装指南和社区讨论都集中在 Linux 平台 。这并非偶然，Linux 服务器以其经济高效、命令行环境的强大管理能力以及 &lt;code&gt;systemd&lt;/code&gt; 等标准化服务管理工具 1成为自建代理服务的首选。Sing-box 本身也对 Linux 提供了深度支持，包括一些依赖特定操作系统内核的功能（如 TUN 模式） 。因此，对于追求稳定、文档完善且易于维护的服务器端部署而言，选择 Ubuntu 或 Debian Linux 将是最直接且高效的路径。&lt;/p&gt;
&lt;h3 id=&#34;1-3-在您的服务器上安装-Sing-box-以-Ubuntu-Debian-为例&#34;&gt;&lt;a href=&#34;#1-3-在您的服务器上安装-Sing-box-以-Ubuntu-Debian-为例&#34; class=&#34;headerlink&#34; title=&#34;1.3. 在您的服务器上安装 Sing-box (以 Ubuntu/Debian 为例)&#34;&gt;&lt;/a&gt;1.3. 在您的服务器上安装 Sing-box (以 Ubuntu/Debian 为例)&lt;/h3&gt;&lt;p&gt;Sing-box 提供了多种安装方式，对于 Ubuntu/Debian 系统，推荐使用官方提供的安装脚本，操作简便快捷。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用官方通用安装脚本:&lt;/p&gt;
&lt;p&gt;通过以下命令下载并执行安装脚本，该脚本会自动检测系统并安装最新稳定版的 sing-box：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;curl -fsSL https://sing-box.app/install.sh | sudo bash&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果偏好专门为 Debian/Ubuntu 优化的脚本，可以使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;curl -fsSL https://sing-box.app/deb-install.sh | sudo bash&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装特定版本或 Beta 测试版:&lt;/p&gt;
&lt;p&gt;如果需要安装 Beta 版本以体验最新功能，或指定安装某一特定版本，可以在执行脚本时附加参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装最新 Beta 版：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;curl -fsSL https://sing-box.app/install.sh | sudo bash -s -- --beta&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装特定版本 (例如 1.8.0)：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;curl -fsSL https://sing-box.app/install.sh | sudo bash -s -- --version 1.8.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过 APT 软件源安装 (适用于 Debian/Ubuntu):&lt;/p&gt;
&lt;p&gt;对于希望通过系统包管理器管理 sing-box 的用户，可以添加 SagerNet 的官方 APT 软件源：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo mkdir -p /etc/apt/keyrings &amp;amp;&amp;amp; \
sudo curl -fsSL https://sing-box.app/gpg.key -o /etc/apt/keyrings/sagernet.asc &amp;amp;&amp;amp; \
sudo chmod a+r /etc/apt/keyrings/sagernet.asc &amp;amp;&amp;amp; \
echo &#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/sagernet.asc] https://deb.sagernet.org/ * *&#34; | \
sudo tee /etc/apt/sources.list.d/sagernet.list &amp;gt; /dev/null &amp;amp;&amp;amp; \
sudo apt-get update &amp;amp;&amp;amp; \
sudo apt-get install sing-box&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种方式便于后续的更新和维护。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他操作系统安装简介:&lt;/p&gt;
&lt;p&gt;尽管本教程主要关注 Linux 服务器，但 sing-box 的命令行版本也支持其他操作系统。例如，macOS 用户可以通过 Homebrew (brew install sing-box) 安装，Windows 用户可以使用 Scoop (scoop install sing-box) 或 Chocolatey (choco install sing-box) 进行安装 。这些主要适用于在本地计算机上使用 sing-box 命令行客户端的场景。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-4-Sing-box-核心命令行工具-CLI&#34;&gt;&lt;a href=&#34;#1-4-Sing-box-核心命令行工具-CLI&#34; class=&#34;headerlink&#34; title=&#34;1.4. Sing-box 核心命令行工具 (CLI)&#34;&gt;&lt;/a&gt;1.4. Sing-box 核心命令行工具 (CLI)&lt;/h3&gt;&lt;p&gt;掌握 sing-box 的命令行工具对于服务器管理、配置调试和自动化操作至关重要。以下是一些最常用的命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sing-box version&lt;/code&gt;: 显示已安装的 sing-box 版本信息，包括构建标签 (build tags) 。构建标签指明了编译时包含了哪些特性，例如 &lt;code&gt;with_reality_server&lt;/code&gt; 表示支持 Reality 协议，&lt;code&gt;with_quic&lt;/code&gt; 表示支持 QUIC 协议。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box run -c /etc/sing-box/config.json&lt;/code&gt;: 使用指定的配置文件启动 sing-box 服务 。默认情况下，sing-box 会查找 &lt;code&gt;/etc/sing-box/config.json&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box check -c /etc/sing-box/config.json&lt;/code&gt;: 校验配置文件的语法和基本逻辑是否正确，这是在启动或重启服务前非常重要的一步 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box format -w -c /etc/sing-box/config.json&lt;/code&gt;: 格式化（美化）JSON 配置文件，使其更易读。&lt;code&gt;-w&lt;/code&gt; 参数表示直接写入修改到原文件 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box generate uuid&lt;/code&gt;: 生成一个标准的 UUID (通用唯一识别码)，常用于 VLESS、VMess 等协议的用户ID配置 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box generate reality-keypair&lt;/code&gt;: 生成一对公私钥，专用于配置 VLESS Reality 协议 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通过 &lt;code&gt;systemd&lt;/code&gt; 管理服务 (若已安装为系统服务):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start sing-box&lt;/code&gt;: 启动服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl stop sing-box&lt;/code&gt;: 停止服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl restart sing-box&lt;/code&gt;: 重启服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable sing-box&lt;/code&gt;: 设置服务开机自启。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl status sing-box&lt;/code&gt;: 查看服务运行状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo journalctl -u sing-box -f --output cat&lt;/code&gt;: 实时查看服务日志（ &lt;code&gt;-f&lt;/code&gt; 表示 follow，&lt;code&gt;--output cat&lt;/code&gt; 以简化格式输出） 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sing-box 提供的一系列命令行工具，覆盖了从运行、配置管理到密钥生成的各个核心环节 。这些工具不仅是手动管理 sing-box 实例的基础，更是实现自动化部署、配置更新等高级操作的基石。例如，&lt;code&gt;generate uuid&lt;/code&gt; 和 &lt;code&gt;generate reality-keypair&lt;/code&gt; 等命令简化了需要特定加密材料的协议的配置过程。同时，通过 &lt;code&gt;systemctl&lt;/code&gt; 与 Linux 标准服务管理体系的集成，确保了 sing-box 服务的稳定可靠运行。因此，即使未来出现更多图形化管理界面，熟练运用这些命令行工具对于任何希望深度掌控和高效运维 sing-box 服务器的管理员来说，都是不可或缺的技能。&lt;/p&gt;
&lt;h3 id=&#34;1-5-config-json-文件结构解析-再探&#34;&gt;&lt;a href=&#34;#1-5-config-json-文件结构解析-再探&#34; class=&#34;headerlink&#34; title=&#34;1.5. config.json 文件结构解析 (再探)&#34;&gt;&lt;/a&gt;1.5. &lt;code&gt;config.json&lt;/code&gt; 文件结构解析 (再探)&lt;/h3&gt;&lt;p&gt;再次强调 &lt;code&gt;config.json&lt;/code&gt; 的核心地位及其主要构成部分，有助于用户在后续章节中更好地理解和修改配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;log&lt;/code&gt;&lt;/strong&gt;: 配置日志记录的级别（如 &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;）、输出位置（默认标准输出，可指定文件路径）以及是否添加时间戳等 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;dns&lt;/code&gt;&lt;/strong&gt;: 管理 DNS 解析行为，包括设置上游 DNS 服务器、DNS 策略（如 IPv4_only）、DNS 规则（如根据域名分流到不同 DNS 服务器）、FakeIP 等 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ntp&lt;/code&gt;&lt;/strong&gt;: 网络时间协议 (NTP) 配置，用于同步服务器时间，确保时间准确性，这对于某些依赖时间戳的加密协议和证书验证非常重要 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;inbounds&lt;/code&gt;&lt;/strong&gt;: 定义一个或多个入站连接处理器。每个入站配置指定了监听的 IP 地址、端口、协议类型（如 VLESS, Trojan）以及该协议所需的用户认证、TLS 等参数 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;outbounds&lt;/code&gt;&lt;/strong&gt;: 定义一个或多个出站连接处理器。每个出站配置指定了连接的目标服务器、端口、协议类型（如 &lt;code&gt;direct&lt;/code&gt; 直连, &lt;code&gt;block&lt;/code&gt; 阻止, 或具体的代理协议）以及相应的认证和传输参数 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;route&lt;/code&gt;&lt;/strong&gt;: 包含路由规则列表。这些规则决定了符合特定条件的入站流量应该被转发到哪个出站连接。规则可以基于域名、IP、地理位置、端口、进程名等多种条件 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/strong&gt;: 用于配置一些实验性功能，例如 Clash API 兼容接口，允许通过 Clash 兼容的控制面板管理 sing-box 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对这些主要部分的理解，将为后续针对不同协议的具体配置打下坚实基础。&lt;/p&gt;
&lt;h2 id=&#34;第二章：准备您的服务器环境&#34;&gt;&lt;a href=&#34;#第二章：准备您的服务器环境&#34; class=&#34;headerlink&#34; title=&#34;第二章：准备您的服务器环境&#34;&gt;&lt;/a&gt;第二章：准备您的服务器环境&lt;/h2&gt;&lt;p&gt;在正式配置 sing-box 代理协议之前，确保服务器环境的安全性与网络通畅性至关重要。&lt;/p&gt;
&lt;h3 id=&#34;2-1-基础服务器安全加固-简述&#34;&gt;&lt;a href=&#34;#2-1-基础服务器安全加固-简述&#34; class=&#34;headerlink&#34; title=&#34;2.1. 基础服务器安全加固 (简述)&#34;&gt;&lt;/a&gt;2.1. 基础服务器安全加固 (简述)&lt;/h3&gt;&lt;p&gt;一台暴露在公网的服务器需要基本的安全防护措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;系统更新:&lt;/p&gt;
&lt;p&gt; 始终保持操作系统及其软件包为最新版本，以修复已知的安全漏洞。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SSH 安全:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用密钥认证:&lt;/strong&gt; 强烈建议禁用密码登录，转而使用 SSH 密钥对进行认证，这能极大提高登录安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止 root 登录:&lt;/strong&gt; 修改 SSHD 配置 (&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;)，设置 &lt;code&gt;PermitRootLogin no&lt;/code&gt;，并使用普通用户登录后再通过 &lt;code&gt;sudo&lt;/code&gt; 执行特权命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(可选) 修改 SSH 默认端口:&lt;/strong&gt; 将 SSH 服务从默认的 22 端口迁移到其他非标准端口，可以在一定程度上减少自动化的扫描和爆破尝试，但这更多的是一种“安全靠隐蔽”的次要措施。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本教程不提供详尽的服务器安全指南，以上仅为最基础的建议。用户应根据自身情况参考更专业的安全文档进行加固。&lt;/p&gt;
&lt;h3 id=&#34;2-2-防火墙配置：为代理协议开放端口&#34;&gt;&lt;a href=&#34;#2-2-防火墙配置：为代理协议开放端口&#34; class=&#34;headerlink&#34; title=&#34;2.2. 防火墙配置：为代理协议开放端口&#34;&gt;&lt;/a&gt;2.2. 防火墙配置：为代理协议开放端口&lt;/h3&gt;&lt;p&gt;防火墙是服务器的第一道网络防线，它控制着哪些端口允许外部访问。您必须为计划使用的代理协议开放相应的服务器端口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 Ubuntu/Debian 上使用 UFW (Uncomplicated Firewall):&lt;/p&gt;
&lt;p&gt;UFW 是一个用户友好的防火墙管理工具。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 UFW (如果尚未安装):&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo apt install ufw&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置默认策略:&lt;/p&gt;
&lt;p&gt; 拒绝所有传入连接，允许所有传出连接。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo ufw default deny incoming
sudo ufw default allow outgoing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;允许 SSH 连接 (关键步骤):&lt;/p&gt;
&lt;p&gt; 在启用 UFW 之前，务必先允许 SSH 连接，否则您可能会失去对服务器的访问权限。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo ufw allow ssh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者，如果您修改了 SSH 端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo ufw allow &amp;lt;您的_SSH_端口&amp;gt;/tcp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为代理协议开放端口:&lt;/p&gt;
&lt;p&gt; 根据您选择的协议和配置的端口，使用以下命令开放 TCP 和/或 UDP 端口。例如，如果您计划在 8443 端口上运行一个 TCP 协议，在 9000-9005 端口范围运行一个 UDP 协议：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo ufw allow 8443/tcp
sudo ufw allow 9000:9005/udp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用 UFW:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo ufw enable&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;系统会提示操作可能中断现有 SSH 连接，确认即可。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看状态:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo ufw status verbose&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 CentOS/RHEL/Fedora (及部分 Debian/Ubuntu) 上使用 firewalld:&lt;/p&gt;
&lt;p&gt;firewalld 是另一款常用的动态防火墙管理工具。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看 &lt;code&gt;firewalld&lt;/code&gt; 状态:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo firewall-cmd --state&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;永久开放端口:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo firewall-cmd --permanent --add-port=&amp;lt;端口号&amp;gt;/tcp
sudo firewall-cmd --permanent --add-port=&amp;lt;端口号&amp;gt;/udp
sudo firewall-cmd --permanent --add-port=&amp;lt;起始端口&amp;gt;-&amp;lt;结束端口&amp;gt;/tcp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;永久开放服务 (例如 HTTPS，如果协议伪装在 443 端口):&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo firewall-cmd --permanent --add-service=https&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新加载 &lt;code&gt;firewalld&lt;/code&gt; 配置使其生效:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo firewall-cmd --reload&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看已开放的端口:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo firewall-cmd --list-ports&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;表 2.2.1: 常见代理协议及其默认/推荐端口&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;协议&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;默认/常用端口&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;TCP/UDP&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;备注&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;VLESS (Reality)&lt;/td&gt;
&lt;td&gt;443, 80, 其他自定义端口&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;常使用 443 端口伪装成 HTTPS。Reality 可灵活使用多种端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trojan (TLS)&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;通常使用 443 端口进行 TLS 加密通信。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shadowsocks&lt;/td&gt;
&lt;td&gt;用户自定义 (如 8388, 443)&lt;/td&gt;
&lt;td&gt;TCP/UDP&lt;/td&gt;
&lt;td&gt;无标准端口；443 端口可用于流量混淆。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hysteria2&lt;/td&gt;
&lt;td&gt;用户自定义&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;基于 QUIC，常使用高位端口或 443/udp。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TUIC&lt;/td&gt;
&lt;td&gt;用户自定义&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;基于 QUIC，常使用高位端口或 443/udp。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VMess&lt;/td&gt;
&lt;td&gt;用户自定义&lt;/td&gt;
&lt;td&gt;TCP/UDP&lt;/td&gt;
&lt;td&gt;无标准端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ShadowTLS&lt;/td&gt;
&lt;td&gt;443 (外层)&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;包装其他协议，外层连接通常在 443 端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NaiveProxy&lt;/td&gt;
&lt;td&gt;443, 80&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;模仿标准 Web 流量。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;无论是 UFW  还是 &lt;code&gt;firewalld&lt;/code&gt;，其默认策略通常是拒绝所有未经明确允许的入站连接。这是一种基础且重要的安全实践，旨在最小化服务器的潜在攻击面。因此，用户必须显式地为 SSH（远程管理）和计划运行的代理协议开放端口。忽略或错误配置防火墙，不仅可能导致代理服务无法访问，还可能使服务器暴露于不必要的安全风险之下。因此，防火墙的正确配置是保障代理节点正常运作和安全性的前提条件。&lt;/p&gt;
&lt;h2 id=&#34;第三章：在-Sing-box-中配置热门协议&#34;&gt;&lt;a href=&#34;#第三章：在-Sing-box-中配置热门协议&#34; class=&#34;headerlink&#34; title=&#34;第三章：在 Sing-box 中配置热门协议&#34;&gt;&lt;/a&gt;第三章：在 Sing-box 中配置热门协议&lt;/h2&gt;&lt;p&gt;本章节将详细介绍如何在 sing-box 中配置当前流行且在“科学上网”场景下表现优异的几种代理协议。每个协议的配置都将包含服务器端（入站）和客户端（出站）的 JSON 代码片段，并对关键字段进行解释。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;通用说明：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;每个协议小节都会简要介绍其特性、基于的传输方式（TCP/UDP）、加密和混淆技术，以及其在规避审查方面的有效性。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;所有配置示例均为 sing-box 的 JSON 格式，并附带注释说明。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;会提及配置该协议可能需要的前提条件，如域名、SSL 证书、生成的密钥对等。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-1-VLESS-配合-Reality-和-或-XTLS-Vision&#34;&gt;&lt;a href=&#34;#3-1-VLESS-配合-Reality-和-或-XTLS-Vision&#34; class=&#34;headerlink&#34; title=&#34;3.1. VLESS (配合 Reality 和/或 XTLS-Vision)&#34;&gt;&lt;/a&gt;3.1. VLESS (配合 Reality 和/或 XTLS-Vision)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;协议概述:&lt;/strong&gt; VLESS 以其高性能和灵活性著称。Reality 是一种先进的流量伪装技术，它使得代理服务器在未授权的探测者看来完全像一个真实的、普通的网站（例如 &lt;code&gt;www.microsoft.com&lt;/code&gt;），从而极大地增强了抗审查能力。XTLS-Vision 是一种流控模式，旨在进一步优化性能 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器 (入站) 配置 (VLESS + Reality):&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;tls&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;server_name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.actual.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 你的真实域名，用于申请证书 (如果使用 ACME)&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;reality&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;handshake&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;server&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;www.microsoft.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 伪装的目标网站域名&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;server_port&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;443&lt;/span&gt;
          &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;private_key&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;YOUR_REALITY_PRIVATE_KEY&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 使用 &#39;sing-box generate reality-keypair&#39; 生成&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;short_id&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 1到2个字节的十六进制字符串，例如 &#34;01&#34; 或 &#34;abcd&#34;&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;max_time_difference&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1m&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 允许客户端与服务器的最大时间差&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 如果不使用 Reality 自签名证书，而是为 your.actual.domain.com 申请真实证书，&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 则需要配置 ACME 或 certificate_path/key_path&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;acme&#34;: {&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;//   &#34;domain&#34;: &#34;your.actual.domain.com&#34;,&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;//   &#34;email&#34;: &#34;your-email@example.com&#34;&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// }&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uuid&lt;/code&gt;: 用户的唯一标识符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.server_name&lt;/code&gt;: 对于 Reality 而言，此处的 &lt;code&gt;server_name&lt;/code&gt; 是您希望 Reality “伪装”成的目标网站的域名，客户端连接时会使用这个 SNI。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reality.handshake.server&lt;/code&gt;: 实际发起 TLS 握手的目标服务器，通常是知名的大型网站，以增加伪装的真实性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reality.private_key&lt;/code&gt;: 通过 &lt;code&gt;sing-box generate reality-keypair&lt;/code&gt; 命令生成的私钥。公钥需要配置在客户端。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reality.short_id&lt;/code&gt;: 一个或多个短ID（1-2字节的十六进制字符串），客户端连接时需要匹配其中一个。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flow: &#34;xtls-rprx-vision&#34;&lt;/code&gt;: VLESS 的一种流处理模式，可提升性能 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;客户端 (出站) 配置 (VLESS + Reality):&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tls.server_name&lt;/code&gt;: 客户端在发起 TLS 握手时使用的 SNI，&lt;strong&gt;必须&lt;/strong&gt;与服务器端 &lt;code&gt;reality.handshake.server&lt;/code&gt; 字段中配置的域名完全一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.reality.public_key&lt;/code&gt;: 服务器端通过 &lt;code&gt;sing-box generate reality-keypair&lt;/code&gt; 生成的公钥。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.utls.fingerprint&lt;/code&gt;: 模拟特定浏览器的 TLS 指纹，例如 “chrome”, “firefox”, “safari” 等，这有助于使流量看起来更像普通浏览器发出的流量，从而进一步抵抗指纹识别 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reality 技术的出现，是针对日益复杂的网络审查中主动探测和基于 SNI 封锁的有效回应 。传统的代理协议，即使流量加密，其 TLS 握手特征或服务器行为也可能被主动探测识别。同时，审查系统也可能直接封锁指向可疑服务器 IP 的特定 SNI 请求。Reality 通过“借用”一个高信誉、大流量的知名网站（如 &lt;code&gt;www.microsoft.com&lt;/code&gt;）的 TLS 握手信息作为“外壳”，使得 sing-box 服务器在初始连接阶段的行为与该知名网站无法区分，从而有效规避主动探测。在这次“伪装”握手之后，真实的 VLESS 代理流量才通过这对由 &lt;code&gt;private_key&lt;/code&gt; 和 &lt;code&gt;public_key&lt;/code&gt; 保护的加密通道进行传输。这种机制使得 VLESS + Reality 组合在当前环境下拥有极高的隐蔽性和抗封锁能力，是其广受欢迎的主要原因。&lt;/p&gt;
&lt;h3 id=&#34;3-2-Trojan-配合-TLS，可选-WebSocket-传输&#34;&gt;&lt;a href=&#34;#3-2-Trojan-配合-TLS，可选-WebSocket-传输&#34; class=&#34;headerlink&#34; title=&#34;3.2. Trojan (配合 TLS，可选 WebSocket 传输)&#34;&gt;&lt;/a&gt;3.2. Trojan (配合 TLS，可选 WebSocket 传输)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;协议概述:&lt;/strong&gt; Trojan 协议通过模仿 HTTPS 流量的特征，使其在网络传输中难以被识别和区分。它通常需要配合一个真实的域名和有效的 SSL/TLS 证书使用。WebSocket (WS) 作为一种可选的传输层协议，可以将 Trojan 流量进一步封装在标准的 HTTP/HTTPS 连接中，这不仅增强了伪装性，还使得流量可以通过 CDN (内容分发网络) 进行中转，隐藏真实服务器 IP 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器 (入站) 配置 (Trojan + TLS):&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;tls&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;server_name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 你的域名&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 使用 ACME 自动申请和续签证书 (推荐)&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;acme&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;domain&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;email&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your-email@example.com&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 或者手动指定证书路径&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;certificate_path&#34;: &#34;/path/to/your/fullchain.pem&#34;,&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;key_path&#34;: &#34;/path/to/your/private.key&#34;&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;multiplex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 启用多路复用以提高性能&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;// 如果需要 WebSocket 传输 (例如配合 CDN)&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;// &#34;transport&#34;: {&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;//   &#34;type&#34;: &#34;ws&#34;,&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;//   &#34;path&#34;: &#34;/your-secret-websocket-path&#34; // 自定义 WebSocket 路径&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;// }&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;users.password&lt;/code&gt;: Trojan 协议的认证密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.server_name&lt;/code&gt;: 必须是您拥有的、并且 DNS 解析指向您服务器 IP 的域名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.acme&lt;/code&gt;: 推荐使用 ACME 自动管理 TLS 证书，sing-box 支持 Let’s Encrypt 等机构。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multiplex.enabled&lt;/code&gt;: 启用多路复用可以减少连接数，提高并发处理能力 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transport&lt;/code&gt; (可选): 如果配置为 &lt;code&gt;&#34;ws&#34;&lt;/code&gt;，则启用 WebSocket 传输。&lt;code&gt;path&lt;/code&gt; 是 WebSocket 的访问路径，应设置为一个不易被猜到的字符串。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;客户端 (出站) 配置 (Trojan + TLS):&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;29 (WebSocket 部分参考 39)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt;: 连接的服务器地址，推荐使用域名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.server_name&lt;/code&gt;: 客户端进行 TLS 握手时提供的 SNI，必须与服务器证书绑定的域名一致，否则会导致握手失败。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls.utls.fingerprint&lt;/code&gt;: 模拟特定浏览器的 TLS 客户端行为，增强伪装性 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transport.headers.Host&lt;/code&gt; (使用 WS 时): 当通过 CDN 或反向代理连接时，通常需要设置正确的 &lt;code&gt;Host&lt;/code&gt; 头，使其指向您的源服务器域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trojan 协议的核心设计理念在于其高度的 HTTPS 流量模拟能力 。配置中对 TLS 参数（如 &lt;code&gt;server_name&lt;/code&gt;、&lt;code&gt;certificate_path&lt;/code&gt;、&lt;code&gt;key_path&lt;/code&gt;）的强调，正是为了实现这种逼真的伪装 。一个与 &lt;code&gt;server_name&lt;/code&gt;（即您的域名）匹配的有效 TLS 证书，是构成可信 HTTPS 通信的基础。如果使用自签名证书或 SNI 不匹配，很容易被中间的网络设备识别为异常流量。将 Trojan 服务部署在标准的 HTTPS 端口 443 上，能进一步增强其隐蔽性。因此，选择 Trojan 协议的用户，必须准备好获取一个域名，并为该域名配置有效的 TLS 证书（可以通过 sing-box 内置的 ACME 功能自动申请，或手动配置）。若缺乏这些要素，Trojan 协议主要的伪装特性将大打折扣，其抗审查能力也会显著下降。&lt;/p&gt;
&lt;h3 id=&#34;3-3-Shadowsocks-重点关注-AEAD-2022-系列加密算法&#34;&gt;&lt;a href=&#34;#3-3-Shadowsocks-重点关注-AEAD-2022-系列加密算法&#34; class=&#34;headerlink&#34; title=&#34;3.3. Shadowsocks (重点关注 AEAD 2022 系列加密算法)&#34;&gt;&lt;/a&gt;3.3. Shadowsocks (重点关注 AEAD 2022 系列加密算法)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;协议概述:&lt;/strong&gt; Shadowsocks 是一种轻量级、广泛应用的代理协议。其 2022 系列的 AEAD (Authenticated Encryption with Associated Data) 加密算法，如 &lt;code&gt;2022-blake3-aes-128-gcm&lt;/code&gt;，因其在安全性和抗探测性方面的提升而被官方推荐使用 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器 (入站) 配置:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;: 选择一个 2022 系列的 AEAD 加密算法。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password&lt;/code&gt;: Shadowsocks 的连接密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multiplex.enabled&lt;/code&gt;: 启用多路复用。对于 Shadowsocks 而言，这不仅能提升性能，还能改善 UDP 流量的传输和隐蔽性 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;客户端 (出站) 配置:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sing-box 官方文档在介绍 Shadowsocks 时，&lt;em&gt;强烈建议&lt;/em&gt;开启多路复用功能来传输 UDP 流量，并指出“否则很容易受到被动检测” 。究其原因，传统的 Shadowsocks 实现（尤其是较早的加密方式或未启用多路复用的 UDP 传输）存在一些可被深度包检测（DPI）识别的流量特征 。多路复用技术（如 Shadowsocks 常用的 smux）允许在单个 TCP 连接上承载多个逻辑数据流，这不仅改变了流量模式，使其更难与使用连接池的常规网络流量区分开来，还为在 TCP 连接内隧道化 UDP 数据包提供了一种更为健壮和标准化的方式，这在许多受审查的网络环境中比直接转发原始 UDP 包更为可靠。因此，在 sing-box 中配置 Shadowsocks 时，用户应始终启用多路复用，特别是当需要可靠传输 UDP 流量（例如用于 QUIC 协议的应用、WebRTC 或在线游戏）时。忽视此建议将显著增加协议被探测和封锁的风险。&lt;/p&gt;
&lt;h3 id=&#34;3-4-Hysteria2-基于-QUIC，高性能&#34;&gt;&lt;a href=&#34;#3-4-Hysteria2-基于-QUIC，高性能&#34; class=&#34;headerlink&#34; title=&#34;3.4. Hysteria2 (基于 QUIC，高性能)&#34;&gt;&lt;/a&gt;3.4. Hysteria2 (基于 QUIC，高性能)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;协议概述:&lt;/strong&gt; Hysteria2 专为在不稳定和高丢包网络环境下提供高速传输而设计。它基于定制的 QUIC 协议，并采用名为 “Brutal” 的拥塞控制算法，力求在恶劣网络条件下榨干带宽。其流量特征旨在伪装成标准的 HTTP/3 流量 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器 (入站) 配置:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;tls&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;server_name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 你的域名&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 使用 ACME 自动申请证书&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;acme&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;domain&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;email&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your-email@example.com&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 或手动指定证书&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;certificate_path&#34;: &#34;/path/to/your/fullchain.pem&#34;,&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;key_path&#34;: &#34;/path/to/your/private.key&#34;&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;obfs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 可选的 QUIC 流量混淆&lt;/span&gt;
         &lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;salamander&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 目前仅支持 salamander&lt;/span&gt;
         &lt;span class=&#34;token property&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;YOUR_OBFS_PASSWORD&#34;&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;up_mbps&lt;/code&gt;, &lt;code&gt;down_mbps&lt;/code&gt;: 定义服务器的上下行带宽限制。客户端也需要配置相应的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;users.password&lt;/code&gt; (或顶层 &lt;code&gt;password&lt;/code&gt;): Hysteria2 的认证密码。注意 sing-box 不支持官方 Hysteria 客户端的 &lt;code&gt;username:password&lt;/code&gt; 组合作为 &lt;code&gt;userpass&lt;/code&gt; 的别名，需要直接填写组合后的密码 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls&lt;/code&gt;: Hysteria2 依赖 TLS 进行加密和认证，配置方式与 Trojan 类似，需要域名和证书。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;obfs&lt;/code&gt; (可选): Salamander 混淆器可以对 QUIC 流量进行额外处理，可能增加抗检测性，但也会带来性能开销 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;客户端 (出站) 配置:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hysteria2 的核心优势在于其基于 UDP (QUIC) 的特性以及独特的 “Brutal” 拥塞控制算法，这使其在网络质量较差、丢包率高的环境下仍能努力维持高吞吐量 。然而，这也可能成为其潜在的弱点。正如 sing-box 文档所警示的，“基于 UDP 的代理……实际上比基于 TCP 的代理具有更明显的特征” 。尽管 QUIC 对大部分头部信息进行了加密，但在某些严格审查的网络中，大量非标准端口的 UDP 通信本身就可能引起注意。此外，“Brutal”拥塞控制算法为了追求带宽最大化，其产生的流量模式可能与常规 Web 流量所使用的标准 TCP 拥塞控制算法（如 Cubic 或 BBR）有所不同，长期来看存在被指纹识别的风险。因此，用户在选择 Hysteria2 时，应权衡其在恶劣网络下的性能优势与这种潜在的可检测性。&lt;/p&gt;
&lt;h3 id=&#34;3-5-TUIC-基于-QUIC，低延迟&#34;&gt;&lt;a href=&#34;#3-5-TUIC-基于-QUIC，低延迟&#34; class=&#34;headerlink&#34; title=&#34;3.5. TUIC (基于 QUIC，低延迟)&#34;&gt;&lt;/a&gt;3.5. TUIC (基于 QUIC，低延迟)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;协议概述:&lt;/strong&gt; TUIC 是另一款基于 QUIC 的代理协议，其设计重点在于最小化连接握手延迟，并支持 0-RTT 连接建立。它也提供了高效的 UDP 代理能力 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器 (入站) 配置:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;congestion_control&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;bbr&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 拥塞控制算法，可选 &#34;cubic&#34;, &#34;new_reno&#34;, &#34;bbr&#34;&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;auth_timeout&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;3s&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 认证超时时间&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;heartbeat_interval&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;10s&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 心跳间隔 (sing-box v1.9+ 使用此字段名)&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;tls&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;server_name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;acme&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;domain&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your.domain.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;email&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your-email@example.com&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 或手动指定证书&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;certificate_path&#34;: &#34;/path/to/your/fullchain.pem&#34;,&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;key_path&#34;: &#34;/path/to/your/private.key&#34;&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;// &#34;zero_rtt_handshake&#34;: false // 服务端通常不建议开启 0-RTT，有安全风险&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(字段名 &lt;code&gt;heartbeat_interval&lt;/code&gt; 对应新版 sing-box，旧版可能为 &lt;code&gt;heartbeat&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关键解释:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;users&lt;/code&gt;: 包含 &lt;code&gt;uuid&lt;/code&gt; 和 &lt;code&gt;password&lt;/code&gt; 用于认证。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;congestion_control&lt;/code&gt;: 选择适合网络环境的 QUIC 拥塞控制算法。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls&lt;/code&gt;: 与 Hysteria2 类似，需要域名和证书。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zero_rtt_handshake&lt;/code&gt;: 服务端通常应保持禁用（默认或显式设置为 &lt;code&gt;false&lt;/code&gt;），以避免重放攻击的风险 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;客户端 (出站) 配置:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// QUIC 通常使用 h3 作为 ALPN&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;utls&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;enabled&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token property&#34;&gt;&#34;fingerprint&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;chrome&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// &#34;insecure&#34;: true, // 如果服务器使用自签名证书且了解风险&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TUIC 协议以其 0-RTT（零往返时间）握手能力作为提升连接速度、降低延迟的一大亮点 。0-RTT 允许客户端在第一个数据包中就携带应用数据，这通过复用先前连接中协商好的会话参数来实现。然而，正如 sing-box 官方入站配置文档所强调的，服务端启用 &lt;code&gt;zero_rtt_handshake&lt;/code&gt; 存在被重放攻击的风险，并引用了 Cloudflare 关于“克隆人攻击”的文章作为佐证 。这种攻击的原理是，如果攻击者捕获了包含 0-RTT 数据的初始数据包，他们可以将这些数据包重放给服务器。由于服务器在处理 0-RTT 数据时无法轻易判断其新鲜度，这可能导致数据被重复处理或引发其他安全问题。尽管 QUIC 协议自身包含一些针对 0-RTT 的重放缓解措施，但并非万无一失。因此，对于注重安全性的应用场景，普遍建议谨慎对待 0-RTT，或避免将其用于非幂等请求。这意味着，尽管 TUIC 的 0-RTT 特性对延迟敏感型应用很有吸引力，用户必须清醒认识到相关的安全风险。为最大化安全性，服务端通常应禁用 0-RTT，即便这会牺牲部分握手延迟的极致优化。客户端仍可尝试发起 0-RTT 连接，但服务器端是否接受应由用户在充分理解并接受潜在风险后决定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;表 3.1: 特色协议对比概览&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;特性/协议&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;VLESS (+Reality)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Trojan (+TLS/WSS)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Shadowsocks (2022)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Hysteria2&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;TUIC&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;基础协议&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;TCP (VLESS 本身传输层无关)&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;TCP (UDP via Mux)&lt;/td&gt;
&lt;td&gt;UDP (QUIC)&lt;/td&gt;
&lt;td&gt;UDP (QUIC)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主要混淆方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;TLS (Reality 伪装真实网站)&lt;/td&gt;
&lt;td&gt;TLS (模仿 HTTPS)&lt;/td&gt;
&lt;td&gt;加密流, AEAD 加密&lt;/td&gt;
&lt;td&gt;QUIC 加密 (伪装 HTTP/3)&lt;/td&gt;
&lt;td&gt;QUIC 加密&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;隐蔽性 (vs GFW)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;高 (Reality)&lt;/td&gt;
&lt;td&gt;高 (如果配置得当)&lt;/td&gt;
&lt;td&gt;中到高 (2022 + Mux)&lt;/td&gt;
&lt;td&gt;中 (UDP 可能被针对)&lt;/td&gt;
&lt;td&gt;中 (UDP 可能被针对)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;性能表现&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;良好至优秀&lt;/td&gt;
&lt;td&gt;良好&lt;/td&gt;
&lt;td&gt;良好&lt;/td&gt;
&lt;td&gt;优秀 (尤其在恶劣网络)&lt;/td&gt;
&lt;td&gt;优秀 (低延迟)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;配置复杂度&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;中 (Reality 增加步骤)&lt;/td&gt;
&lt;td&gt;中 (需域名/证书)&lt;/td&gt;
&lt;td&gt;低到中&lt;/td&gt;
&lt;td&gt;中&lt;/td&gt;
&lt;td&gt;中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;核心优势&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Reality 带来的高隐蔽性&lt;/td&gt;
&lt;td&gt;强大的 HTTPS 模仿能力&lt;/td&gt;
&lt;td&gt;简洁, 广泛支持&lt;/td&gt;
&lt;td&gt;恶劣网络下的高吞吐&lt;/td&gt;
&lt;td&gt;低握手延迟, 0-RTT 选项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主要劣势&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Reality 配置可能较复杂&lt;/td&gt;
&lt;td&gt;域名/证书管理&lt;/td&gt;
&lt;td&gt;旧版/不当配置易被检测&lt;/td&gt;
&lt;td&gt;UDP 封锁/限速, “明显特征” 30&lt;/td&gt;
&lt;td&gt;UDP 封锁/限速, 0-RTT 风险&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;第四章：配置您的客户端设备&#34;&gt;&lt;a href=&#34;#第四章：配置您的客户端设备&#34; class=&#34;headerlink&#34; title=&#34;第四章：配置您的客户端设备&#34;&gt;&lt;/a&gt;第四章：配置您的客户端设备&lt;/h2&gt;&lt;p&gt;成功搭建 sing-box 服务器后，下一步是在您的设备上配置客户端以连接并使用该服务。&lt;/p&gt;
&lt;h3 id=&#34;4-1-Sing-box-客户端通用配置原则&#34;&gt;&lt;a href=&#34;#4-1-Sing-box-客户端通用配置原则&#34; class=&#34;headerlink&#34; title=&#34;4.1. Sing-box 客户端通用配置原则&#34;&gt;&lt;/a&gt;4.1. Sing-box 客户端通用配置原则&lt;/h3&gt;&lt;p&gt;无论是使用 sing-box 命令行作为客户端，还是使用图形化客户端，其核心配置逻辑是相似的：客户端的 &lt;code&gt;outbounds&lt;/code&gt;（出站）设置必须与服务器端的 &lt;code&gt;inbounds&lt;/code&gt;（入站）设置相匹配。&lt;/p&gt;
&lt;p&gt;关键匹配参数包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务器地址 (server) 和端口 (server_port):&lt;/strong&gt; 客户端必须正确指向服务器的 IP 地址或域名，以及服务器上相应协议监听的端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户凭证 (UUID/password):&lt;/strong&gt; 对于需要认证的协议（如 VLESS, Trojan, Shadowsocks, Hysteria2, TUIC），客户端配置的 UUID 或密码必须与服务器端为该用户设定的凭证完全一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密方法 (method/security):&lt;/strong&gt; 客户端选择的加密算法必须是服务器端支持并为该用户启用的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传输设置 (transport):&lt;/strong&gt; 如果服务器端使用了特定的传输方式（如 WebSocket 的路径 &lt;code&gt;path&lt;/code&gt;，gRPC 的服务名 &lt;code&gt;serviceName&lt;/code&gt;），客户端必须进行相应的配置。&lt;/li&gt;
&lt;li&gt;TLS 设置 (tls):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SNI (Server Name Indication):&lt;/strong&gt; 对于使用 TLS 的协议，客户端配置的 &lt;code&gt;server_name&lt;/code&gt; (SNI) 通常需要与服务器证书的域名或 Reality/Trojan 等协议期望的 SNI 一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;证书验证:&lt;/strong&gt; 客户端默认会验证服务器证书的有效性。如果服务器使用自签名证书，客户端需要配置信任该证书或（在了解风险的前提下）设置为不安全连接 (&lt;code&gt;insecure: true&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reality/uTLS:&lt;/strong&gt; 如果服务器端配置了 Reality，客户端必须配置对应的 &lt;code&gt;public_key&lt;/code&gt; 和 &lt;code&gt;short_id&lt;/code&gt;。使用 &lt;code&gt;utls&lt;/code&gt; 模拟浏览器指纹可以增强伪装性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议类型 (type):&lt;/strong&gt; 客户端 &lt;code&gt;outbounds&lt;/code&gt; 中的 &lt;code&gt;type&lt;/code&gt; 字段必须与服务器端 &lt;code&gt;inbounds&lt;/code&gt; 中配置的协议类型相对应。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-2-使用-Sing-box-命令行作为客户端-适用于高级用户或连接其他服务器&#34;&gt;&lt;a href=&#34;#4-2-使用-Sing-box-命令行作为客户端-适用于高级用户或连接其他服务器&#34; class=&#34;headerlink&#34; title=&#34;4.2. 使用 Sing-box 命令行作为客户端 (适用于高级用户或连接其他服务器)&#34;&gt;&lt;/a&gt;4.2. 使用 Sing-box 命令行作为客户端 (适用于高级用户或连接其他服务器)&lt;/h3&gt;&lt;p&gt;对于高级用户，或者当您希望将一台设备（如另一台服务器或本地 Linux/macOS 机器）作为连接到主 sing-box 服务器的客户端时，可以直接使用 sing-box 命令行程序。&lt;/p&gt;
&lt;p&gt;以下是一个最小化的客户端 &lt;code&gt;config.json&lt;/code&gt; 示例，它包含日志、DNS、一个连接到 VLESS+Reality 服务器的出站，以及一个本地 SOCKS5 入站，允许本机其他应用程序通过此 sing-box 客户端进行代理：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;log&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;level&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;info&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 日志级别，可根据需要调整为 &#34;debug&#34; 获取更详细信息&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;dns&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;servers&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;final&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;dns-remote&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 默认所有 DNS 查询走 &#34;dns-remote&#34;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;strategy&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ipv4_only&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// DNS 解析策略，可按需选择&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;inbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;route&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;rules&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;&#34;outbound&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;direct&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;// { &#34;geosite&#34;: &#34;category-ads-all&#34;, &#34;outbound&#34;: &#34;block&#34; }&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;final&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;proxy&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 默认情况下，所有其他流量都通过名为 &#34;proxy&#34; 的出站&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;auto_detect_interface&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 自动检测出口网络接口，某些情况下需要&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将上述配置保存为 &lt;code&gt;client_config.json&lt;/code&gt;，然后通过 &lt;code&gt;sing-box run -c client_config.json&lt;/code&gt; 运行。之后，将需要代理的应用程序的 SOCKS5 代理设置为 &lt;code&gt;127.0.0.1:1080&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h3 id=&#34;4-3-主流图形化客户端-GUI-概览&#34;&gt;&lt;a href=&#34;#4-3-主流图形化客户端-GUI-概览&#34; class=&#34;headerlink&#34; title=&#34;4.3. 主流图形化客户端 (GUI) 概览&#34;&gt;&lt;/a&gt;4.3. 主流图形化客户端 (GUI) 概览&lt;/h3&gt;&lt;p&gt;对于不习惯命令行的用户，或者希望在日常设备上便捷使用代理，可以选择各种支持 sing-box 内核或其协议的图形化客户端。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;桌面端 (Windows/macOS/Linux):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GUI.for.SingBox (下一代 Clash Verge):&lt;/strong&gt; 这是一款专为 sing-box 设计的图形化配置和管理工具，支持通过 GUI 创建和调整配置，管理配置文件（Profiles），最终生成 sing-box 可用的 &lt;code&gt;config.json&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nekoray / NekoBox:&lt;/strong&gt; 广受欢迎的多协议客户端，支持 sing-box、Xray、Clash 等多种核心，界面友好，易于上手 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hiddify-Next:&lt;/strong&gt; 另一款支持多种协议和 sing-box 的第三方 GUI 客户端 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clash Verge:&lt;/strong&gt; 主要为 Clash 核心设计，但由于其配置范式与 sing-box 有相似之处，且社区活跃，部分衍生项目或新版本可能增强对 sing-box 的兼容性或提供类似体验 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;移动端:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Android:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sing-box for Android (官方):&lt;/strong&gt; 由 SagerNet 开发的官方 Android 客户端，功能全面，紧跟 sing-box 内核更新 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SagerNet:&lt;/strong&gt; 也是 SagerNet 开发的一款支持多种协议（包括 sing-box 协议）的客户端 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NekoBox for Android:&lt;/strong&gt; Nekoray 的 Android 版本，同样支持 sing-box 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iOS:&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sing-box for Apple (官方):&lt;/strong&gt; 官方 iOS 客户端，提供原生体验 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shadowrocket (“小火箭”):&lt;/strong&gt; 老牌且功能强大的 iOS 网络工具，支持包括 Trojan, VLESS, Shadowsocks, Hysteria2, TUIC 在内的多种 sing-box 兼容协议 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stash:&lt;/strong&gt; 另一款流行的 iOS 代理客户端，以其强大的规则引擎和 sing-box 协议支持闻名 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Egern:&lt;/strong&gt; 支持多种协议，包括 sing-box 的主流协议 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FoXray:&lt;/strong&gt; 也被推荐用于 iOS 设备，支持 VLESS 等协议 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大多数图形化客户端都支持通过订阅链接（机场服务商提供）自动更新节点信息和配置，或者允许用户手动导入 sing-box 的 JSON 配置文件、单个节点的分享链接或扫描二维码添加节点 。&lt;/p&gt;
&lt;p&gt;近年来，通用型图形化客户端的兴起极大地简化了用户在多协议环境下的使用体验。诸如 Nekoray、GUI.for.SingBox、Hiddify 以及移动端的官方 sing-box 应用、Shadowrocket、Stash 等客户端，其设计目标就是兼容多种代理核心（如 sing-box, Clash, Xray）或 sing-box 所支持的广泛协议集 。这种趋势的背后，是用户往往拥有运行不同协议的服务器，或者需要根据网络状况和特定需求灵活切换协议。为每种协议维护独立的客户端应用显然十分繁琐。通用客户端通过提供统一的用户界面，简化了配置管理（通常通过配置文件或订阅链接实现）和代理切换的流程。Sing-box 作为库或核心的能力 ，也为其被集成到这些第三方 GUI 客户端提供了便利。这意味着用户不再被束缚于单一协议的特定客户端，而是可以选择功能丰富、支持 sing-box 的图形化工具，从而更便捷地管理和使用其“科学上网”服务。&lt;/p&gt;
&lt;h2 id=&#34;第五章：增强您的配置-高级技巧&#34;&gt;&lt;a href=&#34;#第五章：增强您的配置-高级技巧&#34; class=&#34;headerlink&#34; title=&#34;第五章：增强您的配置 (高级技巧)&#34;&gt;&lt;/a&gt;第五章：增强您的配置 (高级技巧)&lt;/h2&gt;&lt;p&gt;在掌握了 sing-box 的基本安装和协议配置之后，可以进一步探索一些高级技巧，以增强代理服务的隐蔽性、稳定性和灵活性。&lt;/p&gt;
&lt;h3 id=&#34;5-1-使用-CDN-隐藏服务器-IP-例如-Cloudflare&#34;&gt;&lt;a href=&#34;#5-1-使用-CDN-隐藏服务器-IP-例如-Cloudflare&#34; class=&#34;headerlink&#34; title=&#34;5.1. 使用 CDN 隐藏服务器 IP (例如 Cloudflare)&#34;&gt;&lt;/a&gt;5.1. 使用 CDN 隐藏服务器 IP (例如 Cloudflare)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;核心概念:&lt;/strong&gt; 将代理服务器的流量通过内容分发网络 (CDN) 如 Cloudflare 进行中转，可以有效隐藏真实服务器的 IP 地址。这使得即使代理服务器的 IP 被直接探测或封锁，只要 CDN 节点可用，服务依然能够访问，从而提高了抗封锁能力 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;工作原理:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将您的域名解析指向 Cloudflare 的服务器（在 Cloudflare DNS 设置中开启橙色云朵代理）。&lt;/li&gt;
&lt;li&gt;Sing-box 服务器配置为监听来自 Cloudflare IP 段的流量。&lt;/li&gt;
&lt;li&gt;客户端连接您的域名（实际上是连接到离客户端最近的 Cloudflare 边缘节点）。&lt;/li&gt;
&lt;li&gt;Cloudflare 接收到流量后，再将其转发到您的源代理服务器。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;必要条件:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个您拥有的域名。&lt;/li&gt;
&lt;li&gt;一个 Cloudflare 账户（免费套餐通常已足够）。&lt;/li&gt;
&lt;li&gt;选择能够被 CDN 可靠代理的协议和传输方式。通常是基于 WebSocket (WS) 并通过 TLS 加密（通常在 443 端口）的协议，例如 Trojan + WS 或 VLESS + WS 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sing-box 配置示例 (客户端 Trojan + WS over CDN):&lt;/p&gt;
&lt;p&gt;服务器端需要配置相应的 Trojan + WebSocket 入站。客户端出站配置如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：这里的 &lt;code&gt;server&lt;/code&gt; 字段直接使用您的域名，因为 Cloudflare 会处理 IP 解析和转发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器端注意事项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器上的 sing-box 需配置为监听 WebSocket 流量，并使用与客户端一致的路径。&lt;/li&gt;
&lt;li&gt;在 Cloudflare 的 DNS 设置中，确保对应域名的代理状态（橙色云朵）已开启。&lt;/li&gt;
&lt;li&gt;Cloudflare 的 SSL/TLS 加密模式建议设置为“完全”或“完全（严格）”，以确保从客户端到 Cloudflare 以及从 Cloudflare 到源服务器的全程加密。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;益处:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;显著提高抵抗 IP 直接封锁的能力。&lt;/li&gt;
&lt;li&gt;CDN 的全球节点分布可能（但不一定）为部分用户带来访问延迟的改善（对于动态代理流量，CDN 缓存效果有限，但其路由优化仍有一定作用）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 CDN 置于代理服务器之前，相当于引入了一个广受信赖的中间层 。这种做法通常与 WebSocket 等能封装在标准 HTTP/HTTPS 请求中的传输协议配合使用。直接连接代理服务器 IP 的方式，一旦该 IP 地址被标记并封锁，服务即告中断。而 CDN 服务商（如 Cloudflare）拥有海量的 IP 地址资源，这些 IP 被大量合法网站共享。大规模封锁这些共享 IP 会造成巨大的“附带伤害”，审查机构对此通常较为谨慎。通过 CDN 传输的、使用 WebSocket 并以 TLS 加密的流量（尤其是在 443 端口），其外观与普通网站的 HTTPS 流量极为相似。CDN 在其边缘节点处理 TLS 握手，然后将流量（可能重新加密）转发至源服务器。这种方式不仅隐藏了真实服务器的 IP，还使得代理流量能够混入海量的、通过 CDN 的合法 HTTPS 流量之中，从而显著提升了抗审查的持久性。这对于在严格审查环境下维持代理服务的长期可用性是一项关键技术。&lt;/p&gt;
&lt;h3 id=&#34;5-2-Sing-box-基础路由：智能分流流量&#34;&gt;&lt;a href=&#34;#5-2-Sing-box-基础路由：智能分流流量&#34; class=&#34;headerlink&#34; title=&#34;5.2. Sing-box 基础路由：智能分流流量&#34;&gt;&lt;/a&gt;5.2. Sing-box 基础路由：智能分流流量&lt;/h3&gt;&lt;p&gt;Sing-box 强大的路由功能允许用户根据多种条件精细控制流量走向，实现国内外分流、广告屏蔽、特定服务加速等目的。路由配置在 &lt;code&gt;config.json&lt;/code&gt; 文件的 &lt;code&gt;route&lt;/code&gt; 块中定义 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;常用规则类型:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;域名匹配:&lt;/strong&gt; &lt;code&gt;domain&lt;/code&gt; (精确匹配), &lt;code&gt;domain_suffix&lt;/code&gt; (域名后缀匹配，如 &lt;code&gt;google.com&lt;/code&gt;), &lt;code&gt;domain_keyword&lt;/code&gt; (域名关键词匹配)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP 匹配:&lt;/strong&gt; &lt;code&gt;ip_cidr&lt;/code&gt; (IP 地址段匹配), &lt;code&gt;geoip&lt;/code&gt; (基于 IP 的地理位置，如 &lt;code&gt;geoip:cn&lt;/code&gt; 匹配中国大陆 IP) 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预设网站列表:&lt;/strong&gt; &lt;code&gt;geosite&lt;/code&gt; (匹配预定义的网站分类，如 &lt;code&gt;geosite:google&lt;/code&gt; 匹配谷歌相关服务) 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议类型:&lt;/strong&gt; &lt;code&gt;protocol&lt;/code&gt; (如 &lt;code&gt;dns&lt;/code&gt; 专门匹配 DNS 查询流量) 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;端口:&lt;/strong&gt; &lt;code&gt;port&lt;/code&gt; (匹配目标端口)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程名/包名 (客户端):&lt;/strong&gt; &lt;code&gt;process_name&lt;/code&gt; (Windows/Linux 进程名) 或 &lt;code&gt;package_name&lt;/code&gt; (Android 应用包名)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;简单分流示例 (国内直连，国外代理):&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;route&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;rules&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;final&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;proxy&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 所有未匹配上述规则的流量，默认通过名为 &#34;proxy&#34; 的出站 (即您的主代理出站)&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;auto_detect_interface&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 建议开启，自动检测网络接口&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;规则集 (&lt;code&gt;rule_set&lt;/code&gt;):&lt;/strong&gt; 为了方便管理大量的域名或 IP 列表，可以使用 &lt;code&gt;rule_set&lt;/code&gt; 功能，引用预先编译好的规则文件（通常是 &lt;code&gt;.srs&lt;/code&gt; 或 &lt;code&gt;.db&lt;/code&gt; 格式）。这些规则集可以从远程 URL 下载更新。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-3-实现故障转移与基础负载均衡-URLTest-和-Selector&#34;&gt;&lt;a href=&#34;#5-3-实现故障转移与基础负载均衡-URLTest-和-Selector&#34; class=&#34;headerlink&#34; title=&#34;5.3. 实现故障转移与基础负载均衡 (URLTest 和 Selector)&#34;&gt;&lt;/a&gt;5.3. 实现故障转移与基础负载均衡 (URLTest 和 Selector)&lt;/h3&gt;&lt;p&gt;为了提高代理连接的稳定性和可用性，sing-box 提供了 &lt;code&gt;URLTest&lt;/code&gt; 和 &lt;code&gt;Selector&lt;/code&gt; 两种特殊的出站类型。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;URLTest 出站 (自动选择最佳节点):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; &lt;code&gt;URLTest&lt;/code&gt; 会定期测试一组预定义的出站代理节点，并自动选择其中延迟最低（或最先成功响应）的节点作为当前使用的出站9。这主要用于实现故障自动切换 (failover) 和基于延迟的简单负载均衡。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关键字段:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;outbounds&lt;/code&gt;: 一个包含多个代理出站标签（tag）的列表，&lt;code&gt;URLTest&lt;/code&gt; 将对这些出站进行测试。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;: 用于测试的 URL，例如 &lt;code&gt;http://www.gstatic.com/generate_204&lt;/code&gt; (谷歌提供的用于测试网络连通性的 URL，返回 HTTP 204 No Content)。如果为空，sing-box 有默认测试地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interval&lt;/code&gt;: 测试间隔时间，例如 &lt;code&gt;&#34;5m&#34;&lt;/code&gt; 表示每 5 分钟测试一次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tolerance&lt;/code&gt;: 延迟容忍度（毫秒），用于判断节点是否可用或切换的阈值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;outbounds&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 参与测试的代理出站标签列表&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;url&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://www.gstatic.com/generate_204&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;interval&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;5m&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 每5分钟测试一次&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;tolerance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 延迟容忍度 100ms&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，在路由规则中（例如 route.final）使用 “auto-proxy-selector”作为出站。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Selector 出站 (手动选择节点):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; &lt;code&gt;Selector&lt;/code&gt; 允许用户从一个预定义的出站列表中手动选择一个当前使用的出站。这种选择通常通过外部 API (例如 sing-box 的 Clash API 兼容接口) 进行控制，图形化客户端常利用此功能提供节点切换界面 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关键字段:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;outbounds&lt;/code&gt;: 一个包含多个出站标签（可以是具体代理，也可以是 &lt;code&gt;direct&lt;/code&gt; 或其他 &lt;code&gt;URLTest&lt;/code&gt; 组）的列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt;: 默认选中的出站标签。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-JSON&#34; data-language=&#34;JSON&#34;&gt;&lt;code class=&#34;language-JSON&#34;&gt;{
  &#34;outbounds&#34;:, // 可供选择的出站列表
      &#34;default&#34;: &#34;proxy-vless&#34; // 默认选择 &#34;proxy-vless&#34;
    }
  ]
}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样，可以在路由规则中使用 “manual-proxy-selector”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;URLTest&lt;/code&gt; 和 &lt;code&gt;Selector&lt;/code&gt; 为 sing-box 提供了强大的流量管理能力。&lt;code&gt;URLTest&lt;/code&gt; 通过自动化的健康检查和延迟测试 ，确保了连接的韧性：当某个代理节点失效或表现不佳时，它能自动切换到其他可用节点，从而在无需用户干预的情况下维持“科学上网”的通畅。这对于故障转移至关重要。另一方面，&lt;code&gt;Selector&lt;/code&gt; 则赋予用户明确的控制权 ，允许用户根据特定需求（如访问特定区域的地理限制内容，或临时切换到直连）主动选择出口。Clash API 的支持使得图形化客户端能够方便地集成这种手动选择功能。实际应用中，一种常见的模式是将多个 &lt;code&gt;URLTest&lt;/code&gt; 分组（例如，一组美国服务器，一组日本服务器），然后使用一个 &lt;code&gt;Selector&lt;/code&gt; 在这些分组或单个优质代理之间进行选择。这种组合既满足了自动化故障恢复的需求，也兼顾了用户的主动偏好。&lt;/p&gt;
&lt;h2 id=&#34;第六章：故障排除与日常维护&#34;&gt;&lt;a href=&#34;#第六章：故障排除与日常维护&#34; class=&#34;headerlink&#34; title=&#34;第六章：故障排除与日常维护&#34;&gt;&lt;/a&gt;第六章：故障排除与日常维护&lt;/h2&gt;&lt;p&gt;即使配置无误，有时也可能遇到连接问题。了解如何排查故障和进行日常维护，是确保代理服务长期稳定运行的关键。&lt;/p&gt;
&lt;h3 id=&#34;6-1-“芝麻开门”：通过-Sing-box-日志寻找线索&#34;&gt;&lt;a href=&#34;#6-1-“芝麻开门”：通过-Sing-box-日志寻找线索&#34; class=&#34;headerlink&#34; title=&#34;6.1. “芝麻开门”：通过 Sing-box 日志寻找线索&#34;&gt;&lt;/a&gt;6.1. “芝麻开门”：通过 Sing-box 日志寻找线索&lt;/h3&gt;&lt;p&gt;日志是排查问题的第一手资料。当遇到连接失败、速度缓慢或其他异常行为时，首先应该查看 sing-box 的日志。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器端日志:&lt;/strong&gt; 如果 sing-box 作为系统服务运行 (通过 &lt;code&gt;systemd&lt;/code&gt; 管理)，可以使用以下命令查看实时日志：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo journalctl -u sing-box -f --output cat&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果直接通过 sing-box run 命令在前台运行，日志会直接输出到终端，或者根据 config.json 中 log.output 的设置输出到指定文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;客户端日志:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果使用 sing-box 命令行作为客户端，日志同样会输出到终端或配置文件中指定的位置。&lt;/li&gt;
&lt;li&gt;图形化客户端通常内置了日志查看器，方便用户查阅。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;关注日志中的关键信息:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;错误信息 (Error messages):&lt;/strong&gt; 明确指示问题的发生，如连接超时、认证失败、证书错误等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;警告信息 (Warning messages):&lt;/strong&gt; 可能提示潜在问题或配置不当。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;连接尝试与结果:&lt;/strong&gt; 可以看到客户端的连接请求、使用的协议、目标地址等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路由决策:&lt;/strong&gt; 对于复杂的路由配置，日志可以显示流量是如何根据规则被导向特定出站的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日志级别 (&lt;code&gt;log.level&lt;/code&gt;):&lt;/strong&gt; 在 &lt;code&gt;config.json&lt;/code&gt; 中，可以将 &lt;code&gt;log.level&lt;/code&gt; 设置为 &lt;code&gt;&#34;debug&#34;&lt;/code&gt; 甚至 &lt;code&gt;&#34;trace&#34;&lt;/code&gt; 以获取更详细的诊断信息，但在正常运行时建议使用 &lt;code&gt;&#34;info&#34;&lt;/code&gt; 或 &lt;code&gt;&#34;warn&#34;&lt;/code&gt; 以避免日志过于庞大 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-2-配置检查：使用-sing-box-check-进行预检&#34;&gt;&lt;a href=&#34;#6-2-配置检查：使用-sing-box-check-进行预检&#34; class=&#34;headerlink&#34; title=&#34;6.2. 配置检查：使用 sing-box check 进行预检&#34;&gt;&lt;/a&gt;6.2. 配置检查：使用 &lt;code&gt;sing-box check&lt;/code&gt; 进行预检&lt;/h3&gt;&lt;p&gt;在修改 &lt;code&gt;config.json&lt;/code&gt; 文件后，启动或重启 sing-box 服务之前，务必使用 &lt;code&gt;sing-box check&lt;/code&gt; 命令校验配置文件的有效性：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;sing-box check -c /path/to/your/config.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该命令会检查 JSON 语法是否正确、字段名和值是否符合 sing-box 的规范。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sing-box check&lt;/code&gt; 命令是配置管理流程中不可或缺的“预飞检查”环节 。JSON 格式对逗号、括号、引号等符号要求严格，而 sing-box 的配置项众多且可能存在嵌套，手动编辑时很容易出现笔误或使用了不正确的字段名。如果直接运行一个有错误的配置文件，可能导致 sing-box 服务启动失败、意外崩溃或行为异常。例如，某些 GitHub issue 中报告的崩溃问题，部分可能源于配置不当（提到的一个与 tun 配置相关的崩溃，如果涉及到需要 root 权限的资源访问，&lt;code&gt;check&lt;/code&gt; 命令在尝试校验时或许能提前发现权限问题或配置冲突）。因此，在每次修改配置文件后、重启服务前，执行 &lt;code&gt;sing-box check&lt;/code&gt;，可以及时发现并修正这些低级错误，从而节省大量的排错时间和避免不必要的服务中断。&lt;/p&gt;
&lt;h3 id=&#34;6-3-常见连接问题及其解决方案&#34;&gt;&lt;a href=&#34;#6-3-常见连接问题及其解决方案&#34; class=&#34;headerlink&#34; title=&#34;6.3. 常见连接问题及其解决方案&#34;&gt;&lt;/a&gt;6.3. 常见连接问题及其解决方案&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;防火墙阻挡端口:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 客户端无法连接到服务器的指定端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; 仔细检查服务器的防火墙规则 (UFW, firewalld)，确保已为 sing-box 使用的协议和端口正确开放了 TCP 和/或 UDP 流量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客户端配置错误:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 连接失败，日志提示认证错误、地址错误等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; 逐项核对客户端配置中的服务器地址、端口、用户ID (UUID)、密码、加密方法、传输参数（如 WebSocket 路径）、TLS SNI 等，确保与服务器端的入站配置完全一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS 相关错误 (适用于 VLESS, Trojan, Hysteria2, TUIC 等):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SNI 不匹配:&lt;/strong&gt; 客户端 &lt;code&gt;tls.server_name&lt;/code&gt; 与服务器证书或 Reality/Trojan 期望的 SNI 不符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器证书无效/过期:&lt;/strong&gt; 检查服务器证书状态，及时续签或修复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客户端无法验证服务器证书:&lt;/strong&gt; 如果服务器使用自签名证书，客户端需要导入该证书或（不推荐，但可用于测试）设置 &lt;code&gt;insecure: true&lt;/code&gt;。对于 Reality，确保客户端的 &lt;code&gt;tls.server_name&lt;/code&gt; 与服务器 &lt;code&gt;reality.handshake.server&lt;/code&gt; 一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS 解析问题:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 可以连接代理，但无法访问网站，或特定网站无法打开。&lt;/li&gt;
&lt;li&gt;排查:&lt;ul&gt;
&lt;li&gt;检查客户端和服务器 &lt;code&gt;dns&lt;/code&gt; 配置块。&lt;/li&gt;
&lt;li&gt;确保代理服务器自身能够正常解析外部域名（可在服务器上用 &lt;code&gt;ping&lt;/code&gt; 或 &lt;code&gt;nslookup&lt;/code&gt; 测试）。&lt;/li&gt;
&lt;li&gt;客户端 DNS 是否正确通过代理或指定 DNS 服务器解析，避免 DNS 泄露。&lt;/li&gt;
&lt;li&gt;因 IPv6 偏好设置导致的 DNS 解析问题，提示注意 DNS 策略配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reality 握手失败:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; VLESS+Reality 连接失败。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; 确认客户端的 &lt;code&gt;public_key&lt;/code&gt;、&lt;code&gt;short_id&lt;/code&gt; 与服务器端的 &lt;code&gt;private_key&lt;/code&gt;、&lt;code&gt;short_id&lt;/code&gt; 对应且正确。确认客户端 &lt;code&gt;tls.server_name&lt;/code&gt; 与服务器端 &lt;code&gt;reality.handshake.server&lt;/code&gt; 配置的域名一致。检查伪装的目标网站 (&lt;code&gt;reality.handshake.server&lt;/code&gt;) 是否可访问且其 TLS 证书有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络不可达 (“network is unreachable”):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 日志中出现此类错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; 服务器可能已宕机，服务器 IP 可能被 ISP 封锁，或者存在网络路由问题。检查服务器状态和网络连通性 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间同步问题:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 某些协议（特别是依赖 TLS 和证书的）连接失败。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; 确保客户端和服务器的时间基本同步。在服务器上配置并启用 NTP 服务（sing-box 配置中也有 &lt;code&gt;ntp&lt;/code&gt; 模块）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器资源耗尽:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 连接不稳定，速度极慢，服务频繁重启。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; 登录服务器检查 CPU、内存、带宽使用情况。如果资源不足，考虑升级 VPS 配置或优化 sing-box 配置（如限制并发连接数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sing-box 进程崩溃 (panic):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;症状:&lt;/strong&gt; 服务意外停止，日志中出现 &lt;code&gt;panic:&lt;/code&gt; 开头的错误信息和堆栈跟踪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排查:&lt;/strong&gt; &lt;code&gt;panic&lt;/code&gt; 通常指示程序内部错误（bug）、不兼容的配置、或严重的资源问题 24。仔细阅读 &lt;code&gt;panic&lt;/code&gt; 信息和相关的上下文日志。如果怀疑是 sing-box 的 bug，可以附上详细的日志、可复现的配置和操作步骤，到 sing-box 的 GitHub Issues 页面报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-4-保持更新：维护-Sing-box-及配置的有效性&#34;&gt;&lt;a href=&#34;#6-4-保持更新：维护-Sing-box-及配置的有效性&#34; class=&#34;headerlink&#34; title=&#34;6.4. 保持更新：维护 Sing-box 及配置的有效性&#34;&gt;&lt;/a&gt;6.4. 保持更新：维护 Sing-box 及配置的有效性&lt;/h3&gt;&lt;p&gt;网络审查技术和代理协议本身都在不断发展和演变。为了保持代理服务的有效性和安全性，需要进行持续的维护：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定期更新 Sing-box:&lt;/strong&gt; 关注 SagerNet/sing-box 的 GitHub Releases 页面，及时将 sing-box 程序更新到最新的稳定版本。新版本通常包含 bug 修复、性能优化、安全更新以及对新特性或协议的支持。可以通过重新运行安装脚本或使用系统的包管理器进行更新。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注社区动态:&lt;/strong&gt; 留意 sing-box 的 GitHub Issues 、官方文档更新以及相关的技术社区和论坛。这些渠道通常会讨论最新的审查手段、协议的有效性变化以及新的规避策略。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新路由规则集:&lt;/strong&gt; 如果在路由配置中使用了 GeoIP、Geosite 等远程规则集，应确保这些规则集能够定期更新，以保证分流的准确性。部分客户端或辅助工具可能提供自动更新规则集的功能 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;&lt;a href=&#34;#结论&#34; class=&#34;headerlink&#34; title=&#34;结论&#34;&gt;&lt;/a&gt;结论&lt;/h2&gt;&lt;p&gt;Sing-box 作为一个强大且灵活的通用代理平台，为用户提供了构建自定义“科学上网”节点的坚实基础。通过本教程的指引，用户应能掌握从服务器准备、sing-box 安装、核心协议配置到客户端设置的完整流程。无论是追求极致隐蔽性的 VLESS+Reality、模仿 HTTPS 的 Trojan，还是经典高效的 Shadowsocks，亦或是面向特定网络优化的 Hysteria2 和 TUIC，sing-box 都能提供良好的支持。&lt;/p&gt;
&lt;p&gt;然而，需要强调的是，网络审查与规避技术之间的博弈是一个持续动态的过程。今天有效的协议或配置，明天可能就会面临新的挑战。因此，保持学习的热情，关注技术前沿，并根据实际情况灵活调整策略，是确保长期顺畅访问互联网的关键。&lt;/p&gt;
&lt;p&gt;最后，请负责任地使用本教程提供的知识和工具，遵守当地法律法规，并将其用于促进信息自由交流和个人学习研究等正当目的。&lt;/p&gt;
&lt;h2 id=&#34;附录&#34;&gt;&lt;a href=&#34;#附录&#34; class=&#34;headerlink&#34; title=&#34;附录&#34;&gt;&lt;/a&gt;附录&lt;/h2&gt;&lt;h3 id=&#34;A-1-Sing-box-常用命令行-CLI-命令参考&#34;&gt;&lt;a href=&#34;#A-1-Sing-box-常用命令行-CLI-命令参考&#34; class=&#34;headerlink&#34; title=&#34;A.1. Sing-box 常用命令行 (CLI) 命令参考&#34;&gt;&lt;/a&gt;A.1. Sing-box 常用命令行 (CLI) 命令参考&lt;/h3&gt;&lt;p&gt;尽管 sing-box 的命令行参数和子命令的官方集中文档尚不完善，但通过分析其源码、社区讨论和实际使用，可以总结出以下常用命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;核心操作:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;sing-box run [options]
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;
  : 运行 sing-box 实例。

  - `-c, --config &amp;lt;path&amp;gt;`: 指定一个或多个配置文件路径（JSON 或 SJSON 格式）。可以指定目录，sing-box 会加载目录内所有 `.json` 文件 22。
  - `-D, --directory &amp;lt;path&amp;gt;`: 指定配置文件目录，与 `-c` 配合使用。
  - `--disable-color`: 禁用彩色日志输出。

- ```
  sing-box check [options]&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

: 检查配置文件的有效性。

- `-c, --config &amp;lt;path&amp;gt;`: 同 `run` 命令。
- `-D, --directory &amp;lt;path&amp;gt;`: 同 `run` 命令。
- `--format`: 检查后自动格式化配置文件。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;pre&gt;&lt;code&gt;sing-box format [options]
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;
  : 格式化（美化）配置文件。

  - `-c, --config &amp;lt;path&amp;gt;`: 指定输入配置文件。
  - `-D, --directory &amp;lt;path&amp;gt;`: 指定配置文件目录。
  - `-w, --write`: 将格式化后的内容写回原文件 5。
  - `-o, --output &amp;lt;path&amp;gt;`: 将格式化后的内容输出到指定文件。

- ```
  sing-box version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

: 显示版本信息，包括构建标签 。



- `-n, --name`: 只显示版本名称。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;密钥生成:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sing-box generate uuid&lt;/code&gt;: 生成一个 UUID 11。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box generate reality-keypair&lt;/code&gt;: 生成 Reality 公私钥对 11。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box generate rand &amp;lt;length&amp;gt;&lt;/code&gt;: 生成指定长度的随机字符串（可用于密码）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;其他 (可能存在或特定构建中包含):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sing-box geoip export &amp;lt;path&amp;gt;&lt;/code&gt;: 导出 GeoIP 数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box geosite export &amp;lt;path&amp;gt;&lt;/code&gt;: 导出 Geosite 数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box rule-set compile&lt;/code&gt;: 编译规则集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sing-box rule-set merge&lt;/code&gt;: 合并规则集。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通过 &lt;code&gt;systemd&lt;/code&gt; 进行服务管理 (Linux):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start sing-box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl stop sing-box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl restart sing-box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable sing-box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl disable sing-box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl status sing-box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo journalctl -u sing-box -f --output cat&lt;/code&gt; 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前关于 sing-box 命令行工具的详细信息较为分散，可见于 GitHub issue 讨论 24、博客文章 19、官方文档的特定子页面 5 以及 Go 语言的源代码文件 22。尚无一个统一、详尽的“man page”式参考手册。上述列表整合了目前已知的主要命令及其功能，对于习惯使用命令行的用户而言，这是一个实用的快速参考。最准确和完整的参数列表，理论上可以通过 &lt;code&gt;sing-box --help&lt;/code&gt; 或 &lt;code&gt;sing-box &amp;lt;subcommand&amp;gt; --help&lt;/code&gt; 获取，但具体输出内容未在本次研究资料中直接提供。&lt;/p&gt;
&lt;h3 id=&#34;A-2-关键术语解释&#34;&gt;&lt;a href=&#34;#A-2-关键术语解释&#34; class=&#34;headerlink&#34; title=&#34;A.2. 关键术语解释&#34;&gt;&lt;/a&gt;A.2. 关键术语解释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CDN (Content Delivery Network, 内容分发网络):&lt;/strong&gt; 一组分布在不同地理位置的服务器，用于缓存和加速网站内容的传递。在代理场景中，可用于隐藏源服务器 IP。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DPI (Deep Packet Inspection, 深度包检测):&lt;/strong&gt; 一种网络数据包过滤技术，通过检查数据包的内容来识别协议类型、应用或特定数据模式，常用于网络审查。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GFW (Great Firewall, 防火长城):&lt;/strong&gt; 指中国大陆用于互联网审查和内容过滤的一系列技术和行政手段的俗称。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GeoIP:&lt;/strong&gt; 基于 IP 地址确定其地理位置的技术或数据库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geosite:&lt;/strong&gt; 预定义的网站域名分类列表，常用于路由规则中对特定类型的网站进行分流。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inbound (入站):&lt;/strong&gt; Sing-box 中处理传入连接的配置模块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Outbound (出站):&lt;/strong&gt; Sing-box 中处理传出连接的配置模块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multiplexing (多路复用):&lt;/strong&gt; 在单个网络连接（通常是 TCP 连接）上承载多个独立的逻辑数据流的技术，可以提高连接效率和并发性能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;QUIC (Quick UDP Internet Connections):&lt;/strong&gt; 一种基于 UDP 的新型传输层网络协议，旨在提供比 TCP 更低的延迟和更好的拥塞控制，是 HTTP/3 的基础。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reality:&lt;/strong&gt; 一种 VLESS 协议的扩展，通过模拟真实网站的 TLS 握手来增强代理服务器的隐蔽性，抵抗主动探测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SNI (Server Name Indication):&lt;/strong&gt; TLS 协议的一个扩展，允许客户端在 TLS 握手初期就告知服务器其希望连接的域名，使得同一 IP 地址可以托管多个 HTTPS 网站。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS (Transport Layer Security, 传输层安全协议):&lt;/strong&gt; 用于在两个通信应用程序之间提供私密性和数据完整性的加密协议，是 HTTPS 的基础。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP (User Datagram Protocol, 用户数据报协议):&lt;/strong&gt; 一种无连接的传输层协议，提供快速但不可靠的数据传输。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UUID (Universally Unique Identifier, 通用唯一识别码):&lt;/strong&gt; 一个128位的数字，用于在计算机系统中唯一地标识信息。在代理协议中常用作用户ID。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket (WS):&lt;/strong&gt; 一种在单个 TCP 连接上进行全双工通信的协议，常用于 Web 应用。在代理中，可将流量封装在类似 HTTP 的连接中，便于穿透防火墙或通过 CDN。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XTLS-Vision:&lt;/strong&gt; VLESS 协议的一种流控模式，旨在减少加密开销，提高性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;A-3-进一步学习资源&#34;&gt;&lt;a href=&#34;#A-3-进一步学习资源&#34; class=&#34;headerlink&#34; title=&#34;A.3. 进一步学习资源&#34;&gt;&lt;/a&gt;A.3. 进一步学习资源&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sing-box 官方文档:&lt;/strong&gt; &lt;a href=&#34;https://sing-box.sagernet.org/&#34;&gt;https://sing-box.sagernet.org/&lt;/a&gt; 5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sing-box GitHub 仓库:&lt;/strong&gt;(&lt;a href=&#34;https://github.com/SagerNet/sing-box&#34;&gt;https://github.com/SagerNet/sing-box&lt;/a&gt;) 7&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GUI.for.SingBox (图形化客户端):&lt;/strong&gt;(&lt;a href=&#34;https://github.com/GUI-for-Cores/GUI.for.SingBox&#34;&gt;https://github.com/GUI-for-Cores/GUI.for.SingBox&lt;/a&gt;) 56&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nekoray / NekoBox (图形化客户端):&lt;/strong&gt;(&lt;a href=&#34;https://github.com/MatsuriDayo/nekoray&#34;&gt;https://github.com/MatsuriDayo/nekoray&lt;/a&gt;) (原版，新版可搜索 NekoBox)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hiddify-Next (图形化客户端):&lt;/strong&gt; &lt;a href=&#34;https://github.com/hiddify/hiddify-next&#34;&gt;https://github.com/hiddify/hiddify-next&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/</guid>
            <title>flask教程</title>
            <link>https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/</link>
            <category>教程</category>
            <category>python</category>
            <pubDate>Wed, 06 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;flask教程&#34;&gt;&lt;a href=&#34;#flask教程&#34; class=&#34;headerlink&#34; title=&#34;flask教程&#34;&gt;&lt;/a&gt;flask教程&lt;/h1&gt;&lt;h2 id=&#34;项目结构&#34;&gt;&lt;a href=&#34;#项目结构&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h2&gt;&lt;h3 id=&#34;中型&#34;&gt;&lt;a href=&#34;#中型&#34; class=&#34;headerlink&#34; title=&#34;中型&#34;&gt;&lt;/a&gt;中型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-dtd&#34; data-language=&#34;dtd&#34;&gt;&lt;code class=&#34;language-dtd&#34;&gt;my_flask_project/
├── app/                     # 核心应用文件夹
│   ├── __init__.py          # 应用初始化
│   ├── routes.py            # 路由定义
│   ├── models.py            # 数据模型（如需要）
│   ├── templates/           # HTML 模板
│   │   └── index.html
│   └── static/              # 静态文件
│       ├── css/
│       │   └── style.css
│       └── js/
│           └── script.js
├── config.py                # 配置文件
├── run.py                   # 启动文件
└── requirements.txt         # 依赖文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-init-py&#34;&gt;&lt;a href=&#34;#app-init-py&#34; class=&#34;headerlink&#34; title=&#34;app/__init__.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app/__init__.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在 &lt;code&gt;__init__.py&lt;/code&gt; 中创建并初始化 Flask 应用，加载配置，并从 &lt;code&gt;routes.py&lt;/code&gt; 注册路由。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_app&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;from_object&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;config.Config&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 加载配置&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;app_context&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# 导入并注册路由&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; routes
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; app&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;create_app&lt;/code&gt; 函数用于创建和配置应用实例。&lt;code&gt;app.app_context()&lt;/code&gt; 确保在应用上下文中导入路由。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;app-routes-py&#34;&gt;&lt;a href=&#34;#app-routes-py&#34; class=&#34;headerlink&#34; title=&#34;app/routes.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app/routes.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;定义项目的路由，所有路由相关的逻辑放在这个文件中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; current_app &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; app

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;app.route(&#39;/&#39;)&lt;/code&gt; 是根路径的路由，返回 &lt;code&gt;index.html&lt;/code&gt; 模板页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;app-models-py-（可选）&#34;&gt;&lt;a href=&#34;#app-models-py-（可选）&#34; class=&#34;headerlink&#34; title=&#34;app/models.py （可选）&#34;&gt;&lt;/a&gt;&lt;code&gt;app/models.py&lt;/code&gt; （可选）&lt;/h4&gt;&lt;p&gt;如果项目需要数据库模型，可以在此文件中定义。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_sqlalchemy &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; SQLAlchemy

db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SQLAlchemy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Model&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Column&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Integer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; primary_key&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Column&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nullable&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; unique&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;config-py&#34;&gt;&lt;a href=&#34;#config-py&#34; class=&#34;headerlink&#34; title=&#34;config.py&#34;&gt;&lt;/a&gt;&lt;code&gt;config.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;配置文件，用于管理全局配置（例如密钥、数据库 URI 等）。将敏感信息存储在环境变量中更安全。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    SECRET_KEY &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;environ&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;
    SQLALCHEMY_DATABASE_URI &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sqlite:///site.db&#39;&lt;/span&gt;
    SQLALCHEMY_TRACK_MODIFICATIONS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-templates-index-html&#34;&gt;&lt;a href=&#34;#app-templates-index-html&#34; class=&#34;headerlink&#34; title=&#34;app/templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;app/templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;HTML 模板文件示例。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Flask App&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;css/style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to My Flask App&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Hello, Flask with modular structure!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;js/script.js&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-static-css-style-css&#34;&gt;&lt;a href=&#34;#app-static-css-style-css&#34; class=&#34;headerlink&#34; title=&#34;app/static/css/style.css&#34;&gt;&lt;/a&gt;&lt;code&gt;app/static/css/style.css&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;简单的 CSS 文件，用于为页面增加样式。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* static/css/style.css */&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Arial&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sans-serif&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #f0f0f0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-static-js-script-js&#34;&gt;&lt;a href=&#34;#app-static-js-script-js&#34; class=&#34;headerlink&#34; title=&#34;app/static/js/script.js&#34;&gt;&lt;/a&gt;&lt;code&gt;app/static/js/script.js&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;简单的 JavaScript 文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// static/js/script.js&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome to My Flask App with modular structure!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-py&#34;&gt;&lt;a href=&#34;#run-py&#34; class=&#34;headerlink&#34; title=&#34;run.py&#34;&gt;&lt;/a&gt;&lt;code&gt;run.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;项目的启动文件，通过调用 &lt;code&gt;create_app&lt;/code&gt; 函数启动应用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; app &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; create_app

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; create_app&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;run.py&lt;/code&gt; 是整个项目的入口文件，使用 &lt;code&gt;app.run(debug=True)&lt;/code&gt; 启动应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;requirements-txt&#34;&gt;&lt;a href=&#34;#requirements-txt&#34; class=&#34;headerlink&#34; title=&#34;requirements.txt&#34;&gt;&lt;/a&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;包含项目依赖。&lt;/p&gt;
&lt;h3 id=&#34;大型&#34;&gt;&lt;a href=&#34;#大型&#34; class=&#34;headerlink&#34; title=&#34;大型&#34;&gt;&lt;/a&gt;大型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-dtd&#34; data-language=&#34;dtd&#34;&gt;&lt;code class=&#34;language-dtd&#34;&gt;my_flask_project/
├── app/
│   ├── __init__.py           # 初始化应用程序和配置
│   ├── routes.py             # 路由定义
│   ├── models.py             # 数据库模型定义
│   ├── templates/            # HTML 模板文件
│   │   └── base.html
│   ├── static/               # 静态文件（CSS、JS、图片等）
│   │   ├── css/
│   │   │   └── style.css
│   │   ├── js/
│   │   └── images/
│   └── blueprints/           # 各个功能模块的蓝图
│       ├── __init__.py
│       ├── user/             # 用户模块
│       │   ├── __init__.py
│       │   ├── routes.py
│       │   └── templates/
│       └── admin/            # 管理员模块
│           ├── __init__.py
│           ├── routes.py
│           └── templates/
├── migrations/               # 数据库迁移文件（使用 Flask-Migrate）
├── tests/                    # 测试代码
│   ├── __init__.py
│   └── test_app.py
├── config.py                 # 配置文件
├── manage.py                 # 启动、管理和迁移命令
└── requirements.txt          # 依赖包&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;**&lt;code&gt;app/&lt;/code&gt;**：主要应用程序文件夹，包含所有核心代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**&lt;code&gt;__init__.py&lt;/code&gt;**：初始化 Flask 应用、加载配置和注册蓝图。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;routes.py&lt;/code&gt;**：定义全局路由。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;models.py&lt;/code&gt;**：定义数据库模型。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;templates/&lt;/code&gt;**：存储 HTML 模板。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;static/&lt;/code&gt;**：存储静态文件，如 CSS、JavaScript 和图片。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;blueprints/&lt;/code&gt;**：存储不同功能模块的蓝图，每个模块可以有自己的 &lt;code&gt;routes.py&lt;/code&gt; 和 &lt;code&gt;templates/&lt;/code&gt; 文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&lt;code&gt;migrations/&lt;/code&gt;**：数据库迁移文件（如使用 Flask-Migrate 时生成）。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;tests/&lt;/code&gt;**：测试文件夹，用于单元测试或集成测试。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;config.py&lt;/code&gt;**：存储配置文件，如数据库连接和应用的全局设置。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;manage.py&lt;/code&gt;**：用于管理项目的文件，可添加自定义命令，如启动服务器、初始化数据库等。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;requirements.txt&lt;/code&gt;**：记录项目的所有依赖包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;路由&#34;&gt;&lt;a href=&#34;#路由&#34; class=&#34;headerlink&#34; title=&#34;路由&#34;&gt;&lt;/a&gt;路由&lt;/h2&gt;&lt;h3 id=&#34;1-基本路由&#34;&gt;&lt;a href=&#34;#1-基本路由&#34; class=&#34;headerlink&#34; title=&#34;1. 基本路由&#34;&gt;&lt;/a&gt;1. 基本路由&lt;/h3&gt;&lt;p&gt;最简单的路由是将一个 URL 映射到一个视图函数。可以使用 &lt;code&gt;@app.route()&lt;/code&gt; 装饰器来定义路由。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome to the homepage!&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/about&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;about&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is the about page.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@app.route(&#39;/&#39;)&lt;/code&gt;：当用户访问根路径（如 &lt;code&gt;http://localhost:5000/&lt;/code&gt;）时，执行 &lt;code&gt;home&lt;/code&gt; 函数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@app.route(&#39;/about&#39;)&lt;/code&gt;：访问 &lt;code&gt;/about&lt;/code&gt; 时，执行 &lt;code&gt;about&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-动态路由&#34;&gt;&lt;a href=&#34;#2-动态路由&#34; class=&#34;headerlink&#34; title=&#34;2. 动态路由&#34;&gt;&lt;/a&gt;2. 动态路由&lt;/h3&gt;&lt;p&gt;可以在路由中添加动态部分，用来接收 URL 中的参数。动态部分用尖括号 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 表示，Flask 会自动将 URL 中的值传递给视图函数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;/user/john&lt;/code&gt; 时，会输出 &lt;code&gt;Hello, john!&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; 是一个动态参数，视图函数 &lt;code&gt;show_user&lt;/code&gt; 将接收 &lt;code&gt;username&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;指定数据类型&#34;&gt;&lt;a href=&#34;#指定数据类型&#34; class=&#34;headerlink&#34; title=&#34;指定数据类型&#34;&gt;&lt;/a&gt;指定数据类型&lt;/h4&gt;&lt;p&gt;默认情况下，Flask 会将 URL 参数作为字符串处理。如果需要其他类型的数据，可以在尖括号内指定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/post/&amp;lt;int:post_id&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Post ID is &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;int:post_id&amp;gt;&lt;/code&gt; 指定了 &lt;code&gt;post_id&lt;/code&gt; 必须是整数，访问 &lt;code&gt;/post/5&lt;/code&gt; 会返回 &lt;code&gt;Post ID is 5&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;常用的数据类型有：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;int:variable&amp;gt;&lt;/code&gt;：整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;float:variable&amp;gt;&lt;/code&gt;：浮点数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;path:variable&amp;gt;&lt;/code&gt;：字符串（允许包含 &lt;code&gt;/&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-多种请求方法&#34;&gt;&lt;a href=&#34;#3-多种请求方法&#34; class=&#34;headerlink&#34; title=&#34;3. 多种请求方法&#34;&gt;&lt;/a&gt;3. 多种请求方法&lt;/h3&gt;&lt;p&gt;默认情况下，Flask 路由只响应 &lt;code&gt;GET&lt;/code&gt; 请求。如果需要处理其他 HTTP 方法（如 &lt;code&gt;POST&lt;/code&gt;、&lt;code&gt;PUT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt; 等），可以通过 &lt;code&gt;methods&lt;/code&gt; 参数指定。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Form submitted!&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please submit the form.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;methods=[&#39;GET&#39;, &#39;POST&#39;]&lt;/code&gt;：允许 &lt;code&gt;submit&lt;/code&gt; 路由响应 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;POST&lt;/code&gt; 请求。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;request.method&lt;/code&gt; 判断请求类型并做不同的处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-路由别名（URL-别名）&#34;&gt;&lt;a href=&#34;#4-路由别名（URL-别名）&#34; class=&#34;headerlink&#34; title=&#34;4. 路由别名（URL 别名）&#34;&gt;&lt;/a&gt;4. 路由别名（URL 别名）&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;url_for&lt;/code&gt; 函数生成路由的 URL，避免硬编码 URL。在视图函数上使用 &lt;code&gt;endpoint&lt;/code&gt; 参数，可以给路由一个别名，用于简化 &lt;code&gt;url_for&lt;/code&gt; 函数调用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; url_for

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/profile/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; endpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;User: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用 url_for 动态生成 URL&lt;/span&gt;
&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/redirect_to_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;redirect_to_profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;/redirect_to_profile&lt;/code&gt; 会重定向到 &lt;code&gt;/profile/john&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-重定向与错误处理&#34;&gt;&lt;a href=&#34;#5-重定向与错误处理&#34; class=&#34;headerlink&#34; title=&#34;5. 重定向与错误处理&#34;&gt;&lt;/a&gt;5. 重定向与错误处理&lt;/h3&gt;&lt;p&gt;可以通过 &lt;code&gt;redirect&lt;/code&gt; 实现重定向，或用 &lt;code&gt;abort&lt;/code&gt; 函数处理错误。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; abort

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/old-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;old_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 重定向到新的 URL&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;new_url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/new-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;new_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is the new URL.&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/secret&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    abort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;403&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回 403 错误&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;redirect(url_for(&#39;new_url&#39;))&lt;/code&gt;：将用户重定向到 &lt;code&gt;new_url&lt;/code&gt; 视图。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abort(403)&lt;/code&gt;：返回 403 错误页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-带查询参数的路由&#34;&gt;&lt;a href=&#34;#6-带查询参数的路由&#34; class=&#34;headerlink&#34; title=&#34;6. 带查询参数的路由&#34;&gt;&lt;/a&gt;6. 带查询参数的路由&lt;/h3&gt;&lt;p&gt;查询参数一般附加在 URL 的末尾，例如 &lt;code&gt;http://localhost:5000/search?query=flask&lt;/code&gt;。可以通过 &lt;code&gt;request.args&lt;/code&gt; 获取这些参数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; request

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/search&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;query&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Search results for: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;request.args.get(&#39;query&#39;)&lt;/code&gt;：获取查询参数 &lt;code&gt;query&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-路由分组（蓝图）&#34;&gt;&lt;a href=&#34;#7-路由分组（蓝图）&#34; class=&#34;headerlink&#34; title=&#34;7. 路由分组（蓝图）&#34;&gt;&lt;/a&gt;7. 路由分组（蓝图）&lt;/h3&gt;&lt;p&gt;如果应用较大，可以将路由划分为不同的模块（称为“蓝图”），以提高代码组织性。以下是一个简单的蓝图示例。&lt;/p&gt;
&lt;h4 id=&#34;创建蓝图文件-app-user-py：&#34;&gt;&lt;a href=&#34;#创建蓝图文件-app-user-py：&#34; class=&#34;headerlink&#34; title=&#34;创建蓝图文件 app/user.py：&#34;&gt;&lt;/a&gt;创建蓝图文件 &lt;code&gt;app/user.py&lt;/code&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Blueprint

user_bp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Blueprint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; __name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@user_bp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;User Profile for &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注册蓝图到应用中-app-init-py：&#34;&gt;&lt;a href=&#34;#注册蓝图到应用中-app-init-py：&#34; class=&#34;headerlink&#34; title=&#34;注册蓝图到应用中 app/__init__.py：&#34;&gt;&lt;/a&gt;注册蓝图到应用中 &lt;code&gt;app/__init__.py&lt;/code&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; user_bp

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_app&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;register_blueprint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user_bp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url_prefix&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 注册蓝图&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; app&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;url_prefix=&#39;/user&#39;&lt;/code&gt;：访问 &lt;code&gt;/user/&amp;lt;username&amp;gt;&lt;/code&gt; 时，会调用 &lt;code&gt;user_bp&lt;/code&gt; 蓝图中的 &lt;code&gt;profile&lt;/code&gt; 路由。&lt;/li&gt;
&lt;li&gt;蓝图让大型应用代码更清晰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-格式化&#34;&gt;&lt;a href=&#34;#8-格式化&#34; class=&#34;headerlink&#34; title=&#34;8. 格式化&#34;&gt;&lt;/a&gt;8. 格式化&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; jsonify

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Flask&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jsonify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-视图函数的装饰器&#34;&gt;&lt;a href=&#34;#9-视图函数的装饰器&#34; class=&#34;headerlink&#34; title=&#34;9.视图函数的装饰器&#34;&gt;&lt;/a&gt;9.视图函数的装饰器&lt;/h3&gt;&lt;p&gt;除了 @app.route，Flask 还支持其他装饰器，用于实现更复杂的功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**&lt;code&gt;@app.before_request&lt;/code&gt;**：在每个请求处理之前运行的函数。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;@app.after_request&lt;/code&gt;**：在每个请求处理之后运行的函数。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;@app.teardown_request&lt;/code&gt;**：在请求结束后运行的函数，用于清理工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例装饰器使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;before_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;before_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Before request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;after_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;after_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;After request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; response

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;teardown_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;teardown_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Teardown request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;完整示例&#34;&gt;&lt;a href=&#34;#完整示例&#34; class=&#34;headerlink&#34; title=&#34;完整示例&#34;&gt;&lt;/a&gt;完整示例&lt;/h3&gt;&lt;p&gt;以下是一个包含多种路由定义方式的完整示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url_for&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; abort&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; jsonify

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome to the homepage!&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/post/&amp;lt;int:post_id&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Post ID is &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Form submitted!&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please submit the form.&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/search&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;query&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Search results for: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Flask&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jsonify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/old-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;old_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;home&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/secret&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    abort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;403&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;Flask-模板渲染&#34;&gt;&lt;a href=&#34;#Flask-模板渲染&#34; class=&#34;headerlink&#34; title=&#34;Flask 模板渲染&#34;&gt;&lt;/a&gt;Flask 模板渲染&lt;/h2&gt;&lt;p&gt;在 Flask 中，模板渲染是生成动态 HTML 页面的一种方法。Flask 使用 Jinja2 模板引擎来帮助你在 HTML 中插入变量、控制结构（如条件判断、循环）等内容，以便动态生成页面。&lt;/p&gt;
&lt;h3 id=&#34;1-设置模板文件夹&#34;&gt;&lt;a href=&#34;#1-设置模板文件夹&#34; class=&#34;headerlink&#34; title=&#34;1. 设置模板文件夹&#34;&gt;&lt;/a&gt;1. 设置模板文件夹&lt;/h3&gt;&lt;p&gt;在 Flask 项目中，默认的模板文件夹是 &lt;code&gt;templates&lt;/code&gt;，建议将所有 HTML 模板文件放在这个文件夹中。Flask 会自动寻找并渲染该目录中的模板文件。&lt;/p&gt;
&lt;h3 id=&#34;2-创建基本-HTML-模板&#34;&gt;&lt;a href=&#34;#2-创建基本-HTML-模板&#34; class=&#34;headerlink&#34; title=&#34;2. 创建基本 HTML 模板&#34;&gt;&lt;/a&gt;2. 创建基本 HTML 模板&lt;/h3&gt;&lt;p&gt;假设我们在 &lt;code&gt;templates/index.html&lt;/code&gt; 中创建了一个基本的 HTML 模板文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- templates/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ title }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ heading }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ content }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在这个模板中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ title }}&lt;/code&gt;、&lt;code&gt;{{ heading }}&lt;/code&gt; 和 &lt;code&gt;{{ content }}&lt;/code&gt; 是变量占位符，在渲染模板时会被 Flask 替换成实际的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-渲染模板&#34;&gt;&lt;a href=&#34;#3-渲染模板&#34; class=&#34;headerlink&#34; title=&#34;3. 渲染模板&#34;&gt;&lt;/a&gt;3. 渲染模板&lt;/h3&gt;&lt;p&gt;在 Flask 中，可以使用 &lt;code&gt;render_template&lt;/code&gt; 函数来渲染 HTML 模板，并将变量传递给模板。下面是一个简单的视图函数，渲染上面的 &lt;code&gt;index.html&lt;/code&gt; 模板。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Home Page&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; heading&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome to My Website&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;This is the home page content.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;render_template(&#39;index.html&#39;, ...)&lt;/code&gt;：&lt;code&gt;render_template&lt;/code&gt; 函数会在 &lt;code&gt;templates&lt;/code&gt; 文件夹中找到 &lt;code&gt;index.html&lt;/code&gt; 文件，并将指定变量传入模板。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title=&#34;Home Page&#34;&lt;/code&gt;：将 &lt;code&gt;title&lt;/code&gt; 变量的值传入模板，模板中的 &lt;code&gt;{{ title }}&lt;/code&gt; 将被替换为 &lt;code&gt;Home Page&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-模板变量和控制结构&#34;&gt;&lt;a href=&#34;#4-模板变量和控制结构&#34; class=&#34;headerlink&#34; title=&#34;4. 模板变量和控制结构&#34;&gt;&lt;/a&gt;4. 模板变量和控制结构&lt;/h3&gt;&lt;p&gt;Jinja2 模板支持在 HTML 中使用变量、控制结构（条件、循环）等操作。&lt;/p&gt;
&lt;h4 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h4&gt;&lt;p&gt;使用双大括号 &lt;code&gt;{{ ... }}&lt;/code&gt; 在模板中插入变量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Hello, {{ name }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;条件语句&#34;&gt;&lt;a href=&#34;#条件语句&#34; class=&#34;headerlink&#34; title=&#34;条件语句&#34;&gt;&lt;/a&gt;条件语句&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;{% if ... %}` 和 `{% endif %}&lt;/code&gt; 添加条件逻辑：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% if user_is_logged_in %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome back, {{ username }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% else %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Please log in to access your account.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endif %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;循环&#34;&gt;&lt;a href=&#34;#循环&#34; class=&#34;headerlink&#34; title=&#34;循环&#34;&gt;&lt;/a&gt;循环&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;{% for ... in ... %}` 和 `{% endfor %}&lt;/code&gt; 添加循环：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% for item in items %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ item }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% endfor %}
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-继承与块&#34;&gt;&lt;a href=&#34;#5-继承与块&#34; class=&#34;headerlink&#34; title=&#34;5. 继承与块&#34;&gt;&lt;/a&gt;5. 继承与块&lt;/h3&gt;&lt;p&gt;Jinja2 支持模板继承，可以创建一个基础模板供其他模板继承。可以将公共结构（如导航栏、页脚等）放在基础模板中，然后在子模板中覆盖特定部分。&lt;/p&gt;
&lt;h4 id=&#34;基础模板-templates-base-html&#34;&gt;&lt;a href=&#34;#基础模板-templates-base-html&#34; class=&#34;headerlink&#34; title=&#34;基础模板 templates/base.html&#34;&gt;&lt;/a&gt;基础模板 &lt;code&gt;templates/base.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{% block title %}My Website{% endblock %}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;© 2024 My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{% block title %}` 和 `{% block content %}` 是块占位符，子模板可以覆盖这些内容。

#### 子模板 `templates/index.html`

&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% extends &#34;base.html&#34; %}

{% block title %}Home Page{% endblock %}

{% block content %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to the Home Page&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;This is some content specific to the home page.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endblock %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

- `{% extends &#34;base.html&#34; %}` 表示继承 `base.html` 模板。
- `{% block title %}Home Page{% endblock %}&lt;/code&gt;：覆盖了基础模板中的 &lt;code&gt;title&lt;/code&gt; 块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{% block content %}...{% endblock %}&lt;/code&gt;：覆盖了基础模板中的 &lt;code&gt;content&lt;/code&gt; 块。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-使用静态文件&#34;&gt;&lt;a href=&#34;#6-使用静态文件&#34; class=&#34;headerlink&#34; title=&#34;6. 使用静态文件&#34;&gt;&lt;/a&gt;6. 使用静态文件&lt;/h3&gt;&lt;p&gt;Flask 默认将静态文件放在 &lt;code&gt;static&lt;/code&gt; 文件夹中，例如 CSS、JavaScript 文件等。在模板中，可以通过 &lt;code&gt;url_for(&#39;static&#39;, filename=&#39;...&#39;)&lt;/code&gt; 生成静态文件的 URL。&lt;/p&gt;
&lt;p&gt;假设有一个 CSS 文件 &lt;code&gt;static/style.css&lt;/code&gt;，可以在模板中引入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 在 base.html 中引入 CSS 文件 --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-完整示例&#34;&gt;&lt;a href=&#34;#7-完整示例&#34; class=&#34;headerlink&#34; title=&#34;7. 完整示例&#34;&gt;&lt;/a&gt;7. 完整示例&lt;/h3&gt;&lt;p&gt;以下是包含基础模板、变量、循环、条件的完整 Flask 应用示例。&lt;/p&gt;
&lt;h4 id=&#34;项目结构-1&#34;&gt;&lt;a href=&#34;#项目结构-1&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-csharp&#34; data-language=&#34;csharp&#34;&gt;&lt;code class=&#34;language-csharp&#34;&gt;my_flask_app&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
├── app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py
├── templates&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
│   ├── &lt;span class=&#34;token keyword&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;html
│   ├── index&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;html
└── &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
    └── style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;css&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-py&#34;&gt;&lt;a href=&#34;#app-py&#34; class=&#34;headerlink&#34; title=&#34;app.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    items &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Item 1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Item 2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Item 3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    user_is_logged_in &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Home Page&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; items&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; user_is_logged_in&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_is_logged_in&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;John Doe&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-base-html&#34;&gt;&lt;a href=&#34;#templates-base-html&#34; class=&#34;headerlink&#34; title=&#34;templates/base.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/base.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{% block title %}My Website{% endblock %}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;© 2024 My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-index-html&#34;&gt;&lt;a href=&#34;#templates-index-html&#34; class=&#34;headerlink&#34; title=&#34;templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% extends &#34;base.html&#34; %}

{% block title %}Home Page{% endblock %}

{% block content %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to the Home Page&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% if user_is_logged_in %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome back, {{ username }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% else %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Please log in to access your account.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% endif %}

    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for item in items %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ item }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endblock %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;static-style-css&#34;&gt;&lt;a href=&#34;#static-style-css&#34; class=&#34;headerlink&#34; title=&#34;static/style.css&#34;&gt;&lt;/a&gt;&lt;code&gt;static/style.css&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* 示例样式 */&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Arial&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sans-serif&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #333&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #fff&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;footer&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #333&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #fff&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0.5em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;Flask-表单处理&#34;&gt;&lt;a href=&#34;#Flask-表单处理&#34; class=&#34;headerlink&#34; title=&#34;Flask 表单处理&#34;&gt;&lt;/a&gt;Flask 表单处理&lt;/h2&gt;&lt;p&gt;在 Flask 中，表单处理是一个常见的功能，它涉及接收用户输入、验证数据以及相应地进行处理。Flask 提供了 &lt;code&gt;Flask-WTF&lt;/code&gt; 扩展，使得表单的创建、验证和处理变得更加简单和强大。下面将详细介绍如何在 Flask 中处理表单，包括安装 Flask-WTF、创建表单、验证表单、显示表单错误和处理表单数据。&lt;/p&gt;
&lt;h3 id=&#34;1-安装-Flask-WTF&#34;&gt;&lt;a href=&#34;#1-安装-Flask-WTF&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Flask-WTF&#34;&gt;&lt;/a&gt;1. 安装 Flask-WTF&lt;/h3&gt;&lt;p&gt;在开始之前，你需要确保安装了 &lt;code&gt;Flask-WTF&lt;/code&gt;。可以通过 &lt;code&gt;pip&lt;/code&gt; 进行安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; Flask-WTF&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-创建-Flask-应用&#34;&gt;&lt;a href=&#34;#2-创建-Flask-应用&#34; class=&#34;headerlink&#34; title=&#34;2. 创建 Flask 应用&#34;&gt;&lt;/a&gt;2. 创建 Flask 应用&lt;/h3&gt;&lt;p&gt;创建一个简单的 Flask 应用并设置基本配置。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FlaskForm
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SubmitField
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validators &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DataRequired

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置安全密钥&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-创建表单类&#34;&gt;&lt;a href=&#34;#3-创建表单类&#34; class=&#34;headerlink&#34; title=&#34;3. 创建表单类&#34;&gt;&lt;/a&gt;3. 创建表单类&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Flask-WTF&lt;/code&gt; 创建表单类，定义所需的字段和验证规则。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StringField&lt;/code&gt;：表示一个文本输入字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DataRequired()&lt;/code&gt;：确保字段不为空。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-渲染表单&#34;&gt;&lt;a href=&#34;#4-渲染表单&#34; class=&#34;headerlink&#34; title=&#34;4. 渲染表单&#34;&gt;&lt;/a&gt;4. 渲染表单&lt;/h3&gt;&lt;p&gt;在视图函数中实例化表单并传递给模板。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 验证表单数据&lt;/span&gt;
        username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data  &lt;span class=&#34;token comment&#34;&gt;# 获取输入的用户名&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;validate_on_submit()&lt;/code&gt;：检查请求方法是否为 POST 并验证表单数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;form.username.data&lt;/code&gt;：访问用户输入的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-创建模板&#34;&gt;&lt;a href=&#34;#5-创建模板&#34; class=&#34;headerlink&#34; title=&#34;5. 创建模板&#34;&gt;&lt;/a&gt;5. 创建模板&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;templates&lt;/code&gt; 文件夹中创建一个模板 &lt;code&gt;index.html&lt;/code&gt;，用于显示表单。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- templates/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Flask Form Example&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Enter your username&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;POST&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {{ form.hidden_tag() }}  &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 防止 CSRF 攻击 --&amp;gt;&lt;/span&gt;
        {{ form.username.label }} {{ form.username(size=20) }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for error in form.username.errors %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[{{ error }}]&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
        {{ form.submit() }}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ form.hidden_tag() }}&lt;/code&gt;：生成隐藏的 CSRF 令牌，增强安全性。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;{% for error in form.username.errors %}&lt;/code&gt; 循环显示字段的验证错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-处理表单错误&#34;&gt;&lt;a href=&#34;#6-处理表单错误&#34; class=&#34;headerlink&#34; title=&#34;6. 处理表单错误&#34;&gt;&lt;/a&gt;6. 处理表单错误&lt;/h3&gt;&lt;p&gt;如果表单验证失败，Flask-WTF 会自动将错误信息存储在字段的 &lt;code&gt;errors&lt;/code&gt; 属性中。在模板中，可以通过条件判断显示相应的错误消息。&lt;/p&gt;
&lt;h3 id=&#34;7-完整示例-1&#34;&gt;&lt;a href=&#34;#7-完整示例-1&#34; class=&#34;headerlink&#34; title=&#34;7. 完整示例&#34;&gt;&lt;/a&gt;7. 完整示例&lt;/h3&gt;&lt;p&gt;以下是一个完整的 Flask 应用示例，展示了如何使用 Flask-WTF 处理表单。&lt;/p&gt;
&lt;h4 id=&#34;项目结构-2&#34;&gt;&lt;a href=&#34;#项目结构-2&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;my_flask_app/
├── app.py                   &lt;span class=&#34;token comment&#34;&gt;# Flask 应用主文件&lt;/span&gt;
└── templates/
    └── index.html          &lt;span class=&#34;token comment&#34;&gt;# 表单模板&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-py-1&#34;&gt;&lt;a href=&#34;#app-py-1&#34; class=&#34;headerlink&#34; title=&#34;app.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;码&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FlaskForm
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SubmitField
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validators &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DataRequired

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置安全密钥&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 验证表单数据&lt;/span&gt;
        username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data  &lt;span class=&#34;token comment&#34;&gt;# 获取输入的用户名&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-index-html-1&#34;&gt;&lt;a href=&#34;#templates-index-html-1&#34; class=&#34;headerlink&#34; title=&#34;templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Flask Form Example&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Enter your username&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;POST&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {{ form.hidden_tag() }}  &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 防止 CSRF 攻击 --&amp;gt;&lt;/span&gt;
        {{ form.username.label }} {{ form.username(size=20) }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for error in form.username.errors %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[{{ error }}]&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
        {{ form.submit() }}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-添加更多字段和验证器&#34;&gt;&lt;a href=&#34;#8-添加更多字段和验证器&#34; class=&#34;headerlink&#34; title=&#34;8. 添加更多字段和验证器&#34;&gt;&lt;/a&gt;8. 添加更多字段和验证器&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;WTForms&lt;/code&gt; 提供的多种字段类型和验证器来扩展表单功能。例如，可以添加 &lt;code&gt;EmailField&lt;/code&gt;、&lt;code&gt;PasswordField&lt;/code&gt;、&lt;code&gt;SelectField&lt;/code&gt; 等。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; EmailField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; PasswordField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SelectField

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ExtendedForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    email &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; EmailField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Email&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; PasswordField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SelectField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; choices&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;opt1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Option 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;opt2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Option 2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-处理文件上传&#34;&gt;&lt;a href=&#34;#9-处理文件上传&#34; class=&#34;headerlink&#34; title=&#34;9. 处理文件上传&#34;&gt;&lt;/a&gt;9. 处理文件上传&lt;/h3&gt;&lt;p&gt;Flask-WTF 也支持文件上传，可以使用 &lt;code&gt;FileField&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FileField

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;UploadForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; FileField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;File&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Upload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/upload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;upload_file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UploadForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data
        &lt;span class=&#34;token comment&#34;&gt;# 处理文件上传&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;File &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; uploaded successfully!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;upload.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-保护表单安全&#34;&gt;&lt;a href=&#34;#10-保护表单安全&#34; class=&#34;headerlink&#34; title=&#34;10. 保护表单安全&#34;&gt;&lt;/a&gt;10. 保护表单安全&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;SECRET_KEY&lt;/code&gt; 保护表单，防止 CSRF 攻击，确保所有表单都使用 &lt;code&gt;form.hidden_tag()&lt;/code&gt; 生成 CSRF 令牌。&lt;/p&gt;
&lt;h2 id=&#34;出现找不到渲染文件index-html&#34;&gt;&lt;a href=&#34;#出现找不到渲染文件index-html&#34; class=&#34;headerlink&#34; title=&#34;出现找不到渲染文件index.html&#34;&gt;&lt;/a&gt;出现找不到渲染文件index.html&lt;/h2&gt;&lt;p&gt;检查目录结构，添加这个template_folder=’app/templates’创建框架&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; template_folder&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;app/templates&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接点说python需要从你的路由所在路径找起， template_folder就是指定路径，加入你的路由在app文件夹下，不用指定路径就能直接找到，在外面，例如和app同级，就可以写路径为&lt;code&gt;.app/templates&lt;/code&gt;，记住最重要的是你的路由所在位置算起。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</guid>
            <title>以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台</title>
            <link>https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</link>
            <category>教程</category>
            <category>区块链</category>
            <pubDate>Wed, 16 Oct 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34;&gt;&lt;a href=&#34;#以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34; class=&#34;headerlink&#34; title=&#34;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&#34;&gt;&lt;/a&gt;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&lt;/h1&gt;&lt;h2 id=&#34;一、安装-DApp-开发环境&#34;&gt;&lt;a href=&#34;#一、安装-DApp-开发环境&#34; class=&#34;headerlink&#34; title=&#34;一、安装 DApp 开发环境&#34;&gt;&lt;/a&gt;一、安装 DApp 开发环境&lt;/h2&gt;&lt;h3 id=&#34;1-1-安装-Node-js&#34;&gt;&lt;a href=&#34;#1-1-安装-Node-js&#34; class=&#34;headerlink&#34; title=&#34;1.1 安装 Node.js&#34;&gt;&lt;/a&gt;1.1 安装 Node.js&lt;/h3&gt;&lt;p&gt;看我这篇&lt;a href=&#34;https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/&#34;&gt;node.js版本问题 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;
v22.0.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-2-安装-Geth&#34;&gt;&lt;a href=&#34;#1-2-安装-Geth&#34; class=&#34;headerlink&#34; title=&#34;1.2 安装 Geth&#34;&gt;&lt;/a&gt;1.2 安装 Geth&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://geth.ethereum.org/downloads&#34;&gt;Downloads | go-ethereum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载 64 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者 32 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Geth 安装程序,然后进行安装。 安装完毕后打开一个控制台,执行命令验证安装成功:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth version
Geth
Version: &lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;.3-stable &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-3-安装-solidity-编译器&#34;&gt;&lt;a href=&#34;#1-3-安装-solidity-编译器&#34; class=&#34;headerlink&#34; title=&#34;1.3 安装 solidity 编译器&#34;&gt;&lt;/a&gt;1.3 安装 solidity 编译器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; solc &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  安装完毕后,执行命令验证安装成功 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;solcjs &lt;span class=&#34;token parameter variable&#34;&gt;-V&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0.8&lt;/span&gt;.28+commit.7893614a.Emscripten.clang&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-4-安装-web3&#34;&gt;&lt;a href=&#34;#1-4-安装-web3&#34; class=&#34;headerlink&#34; title=&#34;1.4 安装 web3&#34;&gt;&lt;/a&gt;1.4 安装 web3&lt;/h3&gt;&lt;p&gt;Web3 的安装过程使用了 git,因此需要先安装 windows 版的 git 命令行&lt;a href=&#34;https://0xdadream.github.io/2024/08/09/git-shi-yong/&#34;&gt;git使用 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3 &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证，创建一个文件&lt;code&gt;index.js&lt;/code&gt;,写入以下内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;const &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; Web3 &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;web3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

console.log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Version:&#34;&lt;/span&gt;,Web3.version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; index.js
Version: &lt;span class=&#34;token number&#34;&gt;4.13&lt;/span&gt;.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-5-安装-truffle-框架&#34;&gt;&lt;a href=&#34;#1-5-安装-truffle-框架&#34; class=&#34;headerlink&#34; title=&#34;1.5 安装 truffle 框架&#34;&gt;&lt;/a&gt;1.5 安装 truffle 框架&lt;/h3&gt;&lt;p&gt; 执行以下命令安装 truffle 开发框架: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; truffle&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle.cmd version
Truffle v5.11.5 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core: &lt;span class=&#34;token number&#34;&gt;5.11&lt;/span&gt;.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-6-安装-webpack&#34;&gt;&lt;a href=&#34;#1-6-安装-webpack&#34; class=&#34;headerlink&#34; title=&#34;1.6 安装 webpack&#34;&gt;&lt;/a&gt;1.6 安装 webpack&lt;/h3&gt;&lt;p&gt;执行以下命令安装 webpack:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; webpack –g &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;webpack &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;
Usage: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;entries&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
Alternative usage to run commands: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;二、运行私链节点&#34;&gt;&lt;a href=&#34;#二、运行私链节点&#34; class=&#34;headerlink&#34; title=&#34;二、运行私链节点&#34;&gt;&lt;/a&gt;二、运行私链节点&lt;/h2&gt;&lt;h3 id=&#34;2-1-创世块配置&#34;&gt;&lt;a href=&#34;#2-1-创世块配置&#34; class=&#34;headerlink&#34; title=&#34;2.1 创世块配置&#34;&gt;&lt;/a&gt;2.1 创世块配置&lt;/h3&gt;&lt;p&gt;创建一个节点目录 node1,并在其中创建私链的创世块配置文件:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; node1
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; node1
notepad gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后编辑内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2100000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;300000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;f41c74c9ae680c1aa78f42e5647a62f353b7bdde&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;400000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config.chainId&lt;/code&gt;用来声明以太坊网络编号,选择一个大于 10 的数字即可。  &lt;code&gt;difficulty&lt;/code&gt; 用来声明挖矿难度,越小的值难度越低,也就能更快速地出块。&lt;/p&gt;
&lt;p&gt;完整版的 &lt;code&gt;gensis.json&lt;/code&gt; 如下所示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x400&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xffffffff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;// 可选填的参数&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;coinbase&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;extraData&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;nonce&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;mixhash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;parentHash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;430e986e0cca10a174baad96871ec9cb308c6d05&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;111111&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各个字段解释如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;必填&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;chainId&lt;/td&gt;
&lt;td&gt;自定义私链的网络ID，不同的网络ID无法互联通讯，以太坊公链ID 为1，我们设置为987以防止与网络中其他私链冲突。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;homesteadBlock&lt;/td&gt;
&lt;td&gt;是否为HomeStead版本的区块，设置为0表明是。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip155Block&lt;/td&gt;
&lt;td&gt;EIP155 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id5&#34;&gt;1]&lt;/a&gt; 是一个以太坊分叉提议，为了和以前的以太坊经典ETC 链条分叉而存在，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip158Block&lt;/td&gt;
&lt;td&gt;EIP158 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id6&#34;&gt;2]&lt;/a&gt; 是一个以太坊分叉提议，为了解决之前以太坊空账户造成效率低下的协议漏洞而分叉，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;difficulty&lt;/td&gt;
&lt;td&gt;设置当前区块难度，若难度过大挖矿就很慢，我们设置较小值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gasLimit&lt;/td&gt;
&lt;td&gt;单一区块最大 gas 消耗上限，用来限制能够打包进入块的交易数量与信息总和，我们在学习中可以设置为最大。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;选填&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coinbase&lt;/td&gt;
&lt;td&gt;打包该块的矿工的奖励地址，因为是创世块，可设为0地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extraData&lt;/td&gt;
&lt;td&gt;打包该块时矿工记录的笔记。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nonce&lt;/td&gt;
&lt;td&gt;打包该块时矿工挖矿所用到的Ethash输入参数nonce。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mixHash&lt;/td&gt;
&lt;td&gt;与nonce配合用于挖矿，创世区无前一个区块，可不填。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parentHash&lt;/td&gt;
&lt;td&gt;前一个区块头的哈希值，创世区块无前一个区块，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;打包该块的时间戳，符合Unix Timestamp标准，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alloc&lt;/td&gt;
&lt;td&gt;创世时各账户分配以太币的数量，不想分配则忽略。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-2-初始化私链节点&#34;&gt;&lt;a href=&#34;#2-2-初始化私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.2 初始化私链节点&#34;&gt;&lt;/a&gt;2.2 初始化私链节点&lt;/h3&gt;&lt;p&gt;执行 geth 的 init 命令初始化私链节点:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json

&lt;span class=&#34;token comment&#34;&gt;# Successfully wrote genesis state&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会在当前目录下创建 data 目录,用来保存区块数据及账户信息&lt;/p&gt;
&lt;p&gt;可以上述命令写到一个脚本 &lt;code&gt;init.cmd&lt;/code&gt; 里，文件内容如下:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在部署下一个节点时,就可以直接执行这个脚本进行初始化了。例如,在另一台机器上:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;init.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-启动私链节点&#34;&gt;&lt;a href=&#34;#2-3-启动私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.3 启动私链节点&#34;&gt;&lt;/a&gt;2.3 启动私链节点&lt;/h3&gt;&lt;p&gt;在我们现在的环境下，需要启动一个 Geth 节点来接入私链网络（实际上也是这个私链网络的唯一一个节点），负责在创世块后挖出第一个块。该节点也是我们与以太坊私链通信的节点服务器。下面我们来启动这样一个节点。同样,你可以用一个脚本 &lt;code&gt;console.cmd&lt;/code&gt; 来简化启动节点时的输入,文件内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geth启动时命令行参数解释如下表:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;–rpc&lt;/td&gt;
&lt;td&gt;开启JSON-RPC 服务，可供调用/调试访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcaddr&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcport&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–prccorsdomain&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC允许的域名访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcapi&lt;/td&gt;
&lt;td&gt;允许提供的RPC服务模块，在示例中选择了数个模块加载。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–nodiscover&lt;/td&gt;
&lt;td&gt;关闭自动发现节点，私有链开发时防止他人意外接入，可选择关闭该选项避免他人加入网络。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–maxpeers&lt;/td&gt;
&lt;td&gt;允许最大节点链接数目。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–networkid&lt;/td&gt;
&lt;td&gt;指定以太坊网络ID。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–port&lt;/td&gt;
&lt;td&gt;监听以太坊节点之间P2P消息的TCP/UDP端口，默认30303。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–mine&lt;/td&gt;
&lt;td&gt;节点启动挖矿功能，参与挖矿。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–minerthreads&lt;/td&gt;
&lt;td&gt;挖矿的多线程配置，例子中配置为1个线程。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–etherbase&lt;/td&gt;
&lt;td&gt;若启动挖矿功能，挖矿奖励的接受地址，例子中我们随便填了一个。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;console&lt;/td&gt;
&lt;td&gt;(可选) 启动后进入命令行模式，直接输入命令互动操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;输入回车，启动成功！此时控制台会输出一组日志信息并有欢迎信息&lt;/p&gt;
&lt;p&gt;以后启动节点,只要直接执行这个脚本即可:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;console.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入控制台&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth attach http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Geth-启动结果解释&#34;&gt;&lt;a href=&#34;#Geth-启动结果解释&#34; class=&#34;headerlink&#34; title=&#34;Geth 启动结果解释&#34;&gt;&lt;/a&gt;Geth 启动结果解释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据目录&lt;/strong&gt;：你指定了 &lt;code&gt;--datadir ./data&lt;/code&gt;，Geth 会将所有区块链数据和配置文件存储在该目录中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RPC 服务&lt;/strong&gt;：你启动了 HTTP-RPC 接口，监听地址为 &lt;code&gt;127.0.0.1&lt;/code&gt;，端口为 &lt;code&gt;8545&lt;/code&gt;。这意味着你可以通过 HTTP 方式与节点交互。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挖矿&lt;/strong&gt;：你启用了 &lt;code&gt;--mine&lt;/code&gt; 参数，使用一个线程（&lt;code&gt;--minerthreads 1&lt;/code&gt;）进行挖矿，挖矿奖励会发送到地址 &lt;code&gt;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止节点发现&lt;/strong&gt;：你启用了 &lt;code&gt;--nodiscover&lt;/code&gt; 参数，这意味着节点不会自动发现和连接其他节点（适用于私有链）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;后续如何使用这些配置&#34;&gt;&lt;a href=&#34;#后续如何使用这些配置&#34; class=&#34;headerlink&#34; title=&#34;后续如何使用这些配置&#34;&gt;&lt;/a&gt;后续如何使用这些配置&lt;/h4&gt;&lt;h5 id=&#34;进入控制台后：&#34;&gt;&lt;a href=&#34;#进入控制台后：&#34; class=&#34;headerlink&#34; title=&#34;进入控制台后：&#34;&gt;&lt;/a&gt;进入控制台后：&lt;/h5&gt;&lt;p&gt;你可以直接在 Geth 控制台中输入命令与节点交互。以下是一些常见的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看挖矿状态&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的挖矿算力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看当前区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示当前节点已同步的最新区块号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看账户余额&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示指定账户的余额。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;停止挖矿&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会停止挖矿进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;发送交易&lt;/strong&gt;： 你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;解锁账户&lt;/strong&gt;： 如果要发送交易，首先需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用-RPC-接口：&#34;&gt;&lt;a href=&#34;#使用-RPC-接口：&#34; class=&#34;headerlink&#34; title=&#34;使用 RPC 接口：&#34;&gt;&lt;/a&gt;使用 RPC 接口：&lt;/h5&gt;&lt;p&gt;你启动了 RPC 服务，这意味着你可以通过 HTTP 与节点交互，而不必进入控制台。可以使用 &lt;code&gt;curl&lt;/code&gt;、Web3.js、Python 等工具来与节点通信。下面是几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;curl&lt;/code&gt; 查看区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; POST &lt;span class=&#34;token parameter variable&#34;&gt;--data&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;{&#34;jsonrpc&#34;:&#34;2.0&#34;,&#34;method&#34;:&#34;eth_blockNumber&#34;,&#34;params&#34;:[],&#34;id&#34;:1}&#39;&lt;/span&gt; http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的区块高度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 Web3.js 与节点交互&lt;/strong&gt;： 你可以使用 Web3.js 编写一个简单的脚本来获取节点信息。例如，安装 Web3.js：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后使用以下 JavaScript 代码获取节点的区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-web-idl&#34; data-language=&#34;web-idl&#34;&gt;&lt;code class=&#34;language-web-idl&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;web3&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;new&lt;/span&gt; Web3&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:8545&#39;);&lt;/span&gt;

web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getBlockNumber&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;then&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;手动添加其他节点：&#34;&gt;&lt;a href=&#34;#手动添加其他节点：&#34; class=&#34;headerlink&#34; title=&#34;手动添加其他节点：&#34;&gt;&lt;/a&gt;手动添加其他节点：&lt;/h5&gt;&lt;p&gt;如果你想手动连接其他节点，可以使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://publickey@ip:port&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将允许你将其他节点加入到网络中。&lt;/p&gt;
&lt;h3 id=&#34;2-4-账户管理&#34;&gt;&lt;a href=&#34;#2-4-账户管理&#34; class=&#34;headerlink&#34; title=&#34;2.4 账户管理&#34;&gt;&lt;/a&gt;2.4 账户管理&lt;/h3&gt;&lt;h4 id=&#34;2-4-1-查看账户列表&#34;&gt;&lt;a href=&#34;#2-4-1-查看账户列表&#34; class=&#34;headerlink&#34; title=&#34;2.4.1 查看账户列表&#34;&gt;&lt;/a&gt;2.4.1 查看账户列表&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 eth 对象的 accounts 属性查看目前的账户列表:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.accounts  or personal.listAccounts
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-2-创建新账户&#34;&gt;&lt;a href=&#34;#2-4-2-创建新账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.2 创建新账户&#34;&gt;&lt;/a&gt;2.4.2 创建新账户&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 newAccount()方法创建一个新账户,参数为你自己选择的密码:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; personal.newAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;123456&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token string&#34;&gt;&#34;0x6e1d438b00d5bb865c4d842e9c02549709130147&#34;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出就是新创建的账户地址(公钥),你的输出不会和上面的示例相同。geth 会保存到数据目录下的 keystore 文件中。&lt;/p&gt;
&lt;h4 id=&#34;2-4-3-查询账户余额&#34;&gt;&lt;a href=&#34;#2-4-3-查询账户余额&#34; class=&#34;headerlink&#34; title=&#34;2.4.3 查询账户余额&#34;&gt;&lt;/a&gt;2.4.3 查询账户余额&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 getBalance()方法获取挃定账户的余额,参数为账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  或者直接输入账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0xd8bcf1324d566cbec5d3b67e6e14485b06a41d49&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;web3.fromWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 将wei换算成eth&lt;/span&gt;
web3.toWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-4-挖矿&#34;&gt;&lt;a href=&#34;#2-4-4-挖矿&#34; class=&#34;headerlink&#34; title=&#34;2.4.4 挖矿&#34;&gt;&lt;/a&gt;2.4.4 挖矿&lt;/h4&gt;&lt;p&gt;私有链不用其他节点也能挖矿&lt;/p&gt;
&lt;h5 id=&#34;1-启动和停止挖矿&#34;&gt;&lt;a href=&#34;#1-启动和停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;1. 启动和停止挖矿&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;启动和停止挖矿&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;启动挖矿&#34;&gt;&lt;a href=&#34;#启动挖矿&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h6&gt;&lt;p&gt;要开始挖矿，你可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;miner.start(threads)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;threads参数表示使用多少个线程进行挖矿。比如要用 1 个线程：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;停止挖矿&#34;&gt;&lt;a href=&#34;#停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;停止挖矿&#34;&gt;&lt;/a&gt;停止挖矿&lt;/h6&gt;&lt;p&gt;要停止挖矿，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-查看挖矿状态&#34;&gt;&lt;a href=&#34;#2-查看挖矿状态&#34; class=&#34;headerlink&#34; title=&#34;2. 查看挖矿状态&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查看挖矿状态&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看挖矿是否正在进行&#34;&gt;&lt;a href=&#34;#查看挖矿是否正在进行&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿是否正在进行&#34;&gt;&lt;/a&gt;查看挖矿是否正在进行&lt;/h6&gt;&lt;p&gt;你可以通过以下命令检查节点当前是否正在挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mining&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令返回 &lt;code&gt;true&lt;/code&gt; 表示节点正在挖矿，返回 &lt;code&gt;false&lt;/code&gt; 表示节点没有在挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看当前的哈希算力&#34;&gt;&lt;a href=&#34;#查看当前的哈希算力&#34; class=&#34;headerlink&#34; title=&#34;查看当前的哈希算力&#34;&gt;&lt;/a&gt;查看当前的哈希算力&lt;/h6&gt;&lt;p&gt;使用以下命令查看节点的哈希算力：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的数值表示每秒计算的哈希数，以 H/s（哈希每秒）为单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看矿工账户&#34;&gt;&lt;a href=&#34;#查看矿工账户&#34; class=&#34;headerlink&#34; title=&#34;查看矿工账户&#34;&gt;&lt;/a&gt;查看矿工账户&lt;/h6&gt;&lt;p&gt;使用以下命令查看当前挖矿收益的账户（即矿工地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;查看当前区块高度&#34;&gt;&lt;a href=&#34;#查看当前区块高度&#34; class=&#34;headerlink&#34; title=&#34;查看当前区块高度&#34;&gt;&lt;/a&gt;查看当前区块高度&lt;/h6&gt;&lt;p&gt;你可以通过以下命令查看节点同步到的最新区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-设置矿工账户&#34;&gt;&lt;a href=&#34;#3-设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;3. 设置矿工账户&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;设置矿工账户&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;在挖矿前，通常需要设置 &lt;code&gt;coinbase&lt;/code&gt;（即矿工账户地址），挖矿的奖励会发送到这个地址。你可以使用以下命令设置 &lt;code&gt;coinbase&lt;/code&gt;：&lt;/p&gt;
&lt;h6 id=&#34;设置矿工账户&#34;&gt;&lt;a href=&#34;#设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;设置矿工账户&#34;&gt;&lt;/a&gt;设置矿工账户&lt;/h6&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setEtherbase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令将指定的账户设置为矿工账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;4-挖矿奖励和账户&#34;&gt;&lt;a href=&#34;#4-挖矿奖励和账户&#34; class=&#34;headerlink&#34; title=&#34;4. 挖矿奖励和账户&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;挖矿奖励和账户&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看当前账户的余额&#34;&gt;&lt;a href=&#34;#查看当前账户的余额&#34; class=&#34;headerlink&#34; title=&#34;查看当前账户的余额&#34;&gt;&lt;/a&gt;查看当前账户的余额&lt;/h6&gt;&lt;p&gt;要查看矿工账户的余额，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;解锁矿工账户&#34;&gt;&lt;a href=&#34;#解锁矿工账户&#34; class=&#34;headerlink&#34; title=&#34;解锁矿工账户&#34;&gt;&lt;/a&gt;解锁矿工账户&lt;/h6&gt;&lt;p&gt;如果你希望自动将矿工奖励发送到某个账户，你可能需要解锁该账户，尤其是在你打算用这个账户发送交易时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; duration&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;duration&lt;/code&gt; 是账户解锁的时间，单位是秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;5-与挖矿相关的高级操作&#34;&gt;&lt;a href=&#34;#5-与挖矿相关的高级操作&#34; class=&#34;headerlink&#34; title=&#34;5. 与挖矿相关的高级操作&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;与挖矿相关的高级操作&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;设置挖矿目标难度&#34;&gt;&lt;a href=&#34;#设置挖矿目标难度&#34; class=&#34;headerlink&#34; title=&#34;设置挖矿目标难度&#34;&gt;&lt;/a&gt;设置挖矿目标难度&lt;/h6&gt;&lt;p&gt;在私有链上，你可以通过修改 &lt;code&gt;genesis.json&lt;/code&gt; 文件中的 &lt;code&gt;difficulty&lt;/code&gt; 值来控制挖矿难度。在 Geth 运行期间，无法直接修改目标难度。&lt;/p&gt;
&lt;h6 id=&#34;查看挖到的区块&#34;&gt;&lt;a href=&#34;#查看挖到的区块&#34; class=&#34;headerlink&#34; title=&#34;查看挖到的区块&#34;&gt;&lt;/a&gt;查看挖到的区块&lt;/h6&gt;&lt;p&gt;使用以下命令可以查看最新的区块信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;latest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;eth.getBlock()&lt;/code&gt; 返回的区块信息包含以下常见字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt;: 区块号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 区块的哈希值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parentHash&lt;/code&gt;: 父区块的哈希&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 区块中工作量证明的 nonce 值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miner&lt;/code&gt;: 挖出该区块的矿工地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 区块的挖矿难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;totalDifficulty&lt;/code&gt;: 该区块链上到当前区块为止的总难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: 区块大小（以字节为单位）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 该区块的 gas 上限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 该区块使用的 gas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt;: 区块的时间戳&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactions&lt;/code&gt;: 包含在该区块中的交易数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uncles&lt;/code&gt;: 包含该区块的叔块数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;自动挖矿新交易&#34;&gt;&lt;a href=&#34;#自动挖矿新交易&#34; class=&#34;headerlink&#34; title=&#34;自动挖矿新交易&#34;&gt;&lt;/a&gt;自动挖矿新交易&lt;/h6&gt;&lt;p&gt;Geth 提供一个选项可以在有新交易进入交易池时自动开始挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setAuto&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置为 &lt;code&gt;1&lt;/code&gt; 后，每当交易池中有新交易时，节点将自动开始挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;6-挖矿的调试工具&#34;&gt;&lt;a href=&#34;#6-挖矿的调试工具&#34; class=&#34;headerlink&#34; title=&#34;6. 挖矿的调试工具&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;挖矿的调试工具&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看交易池中的交易&#34;&gt;&lt;a href=&#34;#查看交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;查看交易池中的交易&#34;&gt;&lt;/a&gt;查看交易池中的交易&lt;/h6&gt;&lt;p&gt;如果你想查看待处理的交易，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的信息会告诉你有多少笔交易在交易池中等待执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看挖矿日志&#34;&gt;&lt;a href=&#34;#查看挖矿日志&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿日志&#34;&gt;&lt;/a&gt;查看挖矿日志&lt;/h6&gt;&lt;p&gt;挖矿日志可以帮助你跟踪挖矿状态和进度。在 Geth 启动时，你可以通过设置日志等级来查看挖矿详细信息。例如，使用 &lt;code&gt;--verbosity&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;geth &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;verbosity &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，挖矿时的日志会显示更多详细的挖矿信息。&lt;/p&gt;
&lt;h5 id=&#34;7-挖矿常见问题&#34;&gt;&lt;a href=&#34;#7-挖矿常见问题&#34; class=&#34;headerlink&#34; title=&#34;7. 挖矿常见问题&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;挖矿常见问题&lt;/strong&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;无法开始挖矿？&lt;/strong&gt; 如果你无法开始挖矿，可能是由于账户未解锁。确保你已解锁矿工账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;矿工奖励没有到账？&lt;/strong&gt; 矿工奖励发放需要时间，尤其是在主网上挖矿时，奖励只有在挖到的区块被确认后才能到账。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;8-挖矿命令汇总&#34;&gt;&lt;a href=&#34;#8-挖矿命令汇总&#34; class=&#34;headerlink&#34; title=&#34;8. 挖矿命令汇总&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;挖矿命令汇总&lt;/strong&gt;&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.start(threads)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启动挖矿，&lt;code&gt;threads&lt;/code&gt; 为使用的线程数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.stop()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;停止挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.hashrate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前的挖矿算力&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.mining&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看是否正在挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.setEtherbase(&#34;address&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(eth.coinbase)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看矿工账户的余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.blockNumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前区块高度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBlock(&#39;latest&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看最新的区块信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池中的待处理交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(eth.coinbase, &#34;password&#34;, 600)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;2-4-5-解锁账户&#34;&gt;&lt;a href=&#34;#2-4-5-解锁账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.5 解锁账户&#34;&gt;&lt;/a&gt;2.4.5 解锁账户&lt;/h4&gt;&lt;p&gt;在部署合约时需要一个解锁的账户。&lt;/p&gt;
&lt;p&gt;在 geth 控制台使用 &lt;code&gt;personal&lt;/code&gt; 对象的 &lt;code&gt;unlockAccount()&lt;/code&gt;  方法来解锁挃定的账户,参数为账户地址和账户密码(在创建账户时挃定的那个密码):  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.unlockAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;123456&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-5-交易&#34;&gt;&lt;a href=&#34;#2-5-交易&#34; class=&#34;headerlink&#34; title=&#34;2.5 交易&#34;&gt;&lt;/a&gt;2.5 交易&lt;/h3&gt;&lt;h4 id=&#34;1-发送交易&#34;&gt;&lt;a href=&#34;#1-发送交易&#34; class=&#34;headerlink&#34; title=&#34;1. 发送交易&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;使用-eth-sendTransaction-发送交易&#34;&gt;&lt;a href=&#34;#使用-eth-sendTransaction-发送交易&#34; class=&#34;headerlink&#34; title=&#34;使用 eth.sendTransaction 发送交易&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易&lt;/h5&gt;&lt;p&gt;发送交易时，你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 命令。示例如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户的地址，必须先解锁账户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的金额，单位是 wei（可以使用 &lt;code&gt;web3.toWei&lt;/code&gt; 转换成 ether）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: （可选）指定交易的 gas 上限，默认为 &lt;code&gt;21000&lt;/code&gt;，适用于普通转账。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: （可选）指定每单位 gas 的价格，默认为当前网络的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: （可选）包含用于合约调用的数据（智能合约交易时用到）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;解锁账户&#34;&gt;&lt;a href=&#34;#解锁账户&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;在发送交易前，如果账户被锁定，你需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;600&lt;/code&gt; 表示账户将保持解锁 600 秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-查询交易&#34;&gt;&lt;a href=&#34;#2-查询交易&#34; class=&#34;headerlink&#34; title=&#34;2. 查询交易&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查询交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易信息&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;/a&gt;根据交易哈希查询交易信息&lt;/h5&gt;&lt;p&gt;发送交易后，你可以使用交易哈希查询交易的详细信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将返回交易的详细信息，包括发送者、接收者、金额、gas 费用等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eth.getTransaction()&lt;/code&gt; 会返回一个包含该交易详细信息的对象，常见的字段包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 该交易所属区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 该交易所属区块的区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发起该交易的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易消耗的 gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 该交易的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 该交易的哈希值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易的数据字段，通常是合约调用时传递的数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送方账户的 nonce 值，表示该账户发起的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 交易接收者的地址，如果是合约创建交易则为 &lt;code&gt;null&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: 该交易在区块中的索引。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 该交易中发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;交易未打包&#34;&gt;&lt;a href=&#34;#交易未打包&#34; class=&#34;headerlink&#34; title=&#34;交易未打包&#34;&gt;&lt;/a&gt;交易未打包&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockHash&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 当交易尚未被打包时，&lt;code&gt;blockHash&lt;/code&gt; 的值为 &lt;code&gt;null&lt;/code&gt;，因为该交易还没有被包含在任何区块中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockNumber&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 同样，由于交易未被打包，&lt;code&gt;blockNumber&lt;/code&gt; 也会是 &lt;code&gt;null&lt;/code&gt;，表示该交易还未属于任何区块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 因为交易还没有被打包到区块，因此也没有在区块中的位置，&lt;code&gt;transactionIndex&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他字段&lt;/strong&gt; 其他交易的基本信息仍然可以被查询到，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者的地址（或者 &lt;code&gt;null&lt;/code&gt; 如果是合约创建交易）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易所消耗的 Gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: Gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送者账户的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易中包含的数据（如合约调用时的参数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易收据&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;/a&gt;根据交易哈希查询交易收据&lt;/h5&gt;&lt;p&gt;要查看交易是否成功被打包到区块中，可以使用以下命令查询交易收据：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionReceipt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回的交易收据包含以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 交易的执行状态，&lt;code&gt;1&lt;/code&gt; 表示成功，&lt;code&gt;0&lt;/code&gt; 表示失败。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 包含该交易的区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionHash&lt;/code&gt;: 交易哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 此交易消耗的 gas 量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;logs&lt;/code&gt;: 该交易的事件日志列表&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-创建自定义交易&#34;&gt;&lt;a href=&#34;#3-创建自定义交易&#34; class=&#34;headerlink&#34; title=&#34;3. 创建自定义交易&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;创建自定义交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 创建自定义交易，除了 &lt;code&gt;from&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 之外，还可以指定 &lt;code&gt;gas&lt;/code&gt;、&lt;code&gt;gasPrice&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 等字段：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSomeData&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 设置交易的 gas 限制，确保足够高。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 设置每单位 gas 的价格，单位是 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;自定义-gas-价格&#34;&gt;&lt;a href=&#34;#自定义-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;自定义 gas 价格&#34;&gt;&lt;/a&gt;自定义 gas 价格&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将设置一个较高的 gas 价格，以加快交易打包。&lt;/p&gt;
&lt;h4 id=&#34;4-离线签名交易&#34;&gt;&lt;a href=&#34;#4-离线签名交易&#34; class=&#34;headerlink&#34; title=&#34;4. 离线签名交易&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;离线签名交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在某些场景下，你可能希望在离线状态下生成交易并签名，然后再发送。以下是离线签名交易的步骤：&lt;/p&gt;
&lt;h5 id=&#34;构建未签名交易&#34;&gt;&lt;a href=&#34;#构建未签名交易&#34; class=&#34;headerlink&#34; title=&#34;构建未签名交易&#34;&gt;&lt;/a&gt;构建未签名交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; rawTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;nonce&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;gwei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ether&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;签名交易&#34;&gt;&lt;a href=&#34;#签名交易&#34; class=&#34;headerlink&#34; title=&#34;签名交易&#34;&gt;&lt;/a&gt;签名交易&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;eth.accounts.signTransaction&lt;/code&gt; 函数来签名交易：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; signedTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;accounts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;signTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rawTx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xPrivateKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送已签名交易&#34;&gt;&lt;a href=&#34;#发送已签名交易&#34; class=&#34;headerlink&#34; title=&#34;发送已签名交易&#34;&gt;&lt;/a&gt;发送已签名交易&lt;/h5&gt;&lt;p&gt;发送已签名的交易，可以使用 &lt;code&gt;eth.sendSignedTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendSignedTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;signedTx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rawTransaction&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;receipt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-批量发送交易&#34;&gt;&lt;a href=&#34;#5-批量发送交易&#34; class=&#34;headerlink&#34; title=&#34;5. 批量发送交易&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;批量发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果你需要一次发送多笔交易，你可以在脚本中批量调用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-检查账户余额&#34;&gt;&lt;a href=&#34;#6-检查账户余额&#34; class=&#34;headerlink&#34; title=&#34;6. 检查账户余额&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;检查账户余额&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以随时使用以下命令检查账户的余额：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回值为账户的余额，单位是 wei。如果你想以以太币（ether）显示，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-检查交易池中的交易&#34;&gt;&lt;a href=&#34;#7-检查交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;7. 检查交易池中的交易&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;检查交易池中的交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;交易被发送后，可能会在交易池中等待确认。你可以使用以下命令查看交易池中的状态：&lt;/p&gt;
&lt;h5 id=&#34;检查挂起的交易&#34;&gt;&lt;a href=&#34;#检查挂起的交易&#34; class=&#34;headerlink&#34; title=&#34;检查挂起的交易&#34;&gt;&lt;/a&gt;检查挂起的交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回交易池中的待处理和挂起的交易数量。&lt;/p&gt;
&lt;h5 id=&#34;查看具体的挂起交易&#34;&gt;&lt;a href=&#34;#查看具体的挂起交易&#34; class=&#34;headerlink&#34; title=&#34;查看具体的挂起交易&#34;&gt;&lt;/a&gt;查看具体的挂起交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inspect&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示详细的待处理和挂起交易的信息。&lt;/p&gt;
&lt;h4 id=&#34;8-检查当前的-gas-价格&#34;&gt;&lt;a href=&#34;#8-检查当前的-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;8. 检查当前的 gas 价格&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;检查当前的 gas 价格&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用以下命令来获取当前网络建议的 gas 价格：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gasPrice&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的值是以 wei 为单位的当前 gas 价格。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9-监听区块和交易事件&#34;&gt;&lt;a href=&#34;#9-监听区块和交易事件&#34; class=&#34;headerlink&#34; title=&#34;9. 监听区块和交易事件&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;监听区块和交易事件&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以通过监听事件来实时监控交易状态。例如，当新区块生成时，可以收到通知：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;newBlockHeaders&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;error&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;connected&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;subscriptionId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;subscriptionId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;blockHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blockHeader&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-交易命令汇总&#34;&gt;&lt;a href=&#34;#10-交易命令汇总&#34; class=&#34;headerlink&#34; title=&#34;10. 交易命令汇总&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;交易命令汇总&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendTransaction({...})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送普通或自定义交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁账户以便发送交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransaction(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易详情&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransactionReceipt(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易收据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(&#34;0xAddress&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查询账户余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.gasPrice&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取当前的 gas 价格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.accounts.signTransaction({...}, &#34;privateKey&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;离线签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendSignedTransaction(&#34;signedTx&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送已签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-6-私链多个节点连接的详细命令&#34;&gt;&lt;a href=&#34;#2-6-私链多个节点连接的详细命令&#34; class=&#34;headerlink&#34; title=&#34;2.6 私链多个节点连接的详细命令&#34;&gt;&lt;/a&gt;2.6 私链多个节点连接的详细命令&lt;/h3&gt;&lt;p&gt;在以太坊私链中，多个节点可以通过网络连接形成一个共识网络。在这种情况下，节点之间需要能够发现彼此，并保持同步。以下是详细的步骤和命令，用于设置并连接多个 Geth 节点到同一个私链网络。&lt;/p&gt;
&lt;h4 id=&#34;1-准备工作&#34;&gt;&lt;a href=&#34;#1-准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 准备工作&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;准备工作&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建-genesis-json-文件&#34;&gt;&lt;a href=&#34;#创建-genesis-json-文件&#34; class=&#34;headerlink&#34; title=&#34;创建 genesis.json 文件&#34;&gt;&lt;/a&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件&lt;/h5&gt;&lt;p&gt;在私链中，所有节点需要共享同一个创世区块 (&lt;code&gt;genesis block&lt;/code&gt;)。首先，创建一个 &lt;code&gt;genesis.json&lt;/code&gt; 文件，它定义了私链的创世区块和区块链的初始配置。&lt;/p&gt;
&lt;p&gt;以下是一个示例 &lt;code&gt;genesis.json&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;eip150Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;byzantiumBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;constantinopleBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;petersburgBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1000000000000000000000&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chainId&lt;/code&gt;: 为私链设置一个独特的网络 ID（不同于主网和测试网）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 设置初始挖矿难度，数值越低，挖矿越容易。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 设置每个区块的 gas 上限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alloc&lt;/code&gt;: 为指定账户分配初始余额。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-初始化-Geth-节点&#34;&gt;&lt;a href=&#34;#2-初始化-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;2. 初始化 Geth 节点&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;初始化 Geth 节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;每个节点在第一次启动时都需要初始化私链。假设你已经有了 Geth，并将数据目录设置为 &lt;code&gt;./data&lt;/code&gt;，可以使用以下命令初始化节点：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data init genesis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init genesis.json&lt;/code&gt;: 使用 &lt;code&gt;genesis.json&lt;/code&gt; 文件初始化链。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个私链节点都需要运行此命令。&lt;/p&gt;
&lt;h4 id=&#34;3-启动节点&#34;&gt;&lt;a href=&#34;#3-启动节点&#34; class=&#34;headerlink&#34; title=&#34;3. 启动节点&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;启动节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;使用以下命令启动每个节点，并确保每个节点都指定相同的 &lt;code&gt;--networkid&lt;/code&gt; 和使用 &lt;code&gt;--port&lt;/code&gt; 参数设置不同的端口。&lt;/p&gt;
&lt;h5 id=&#34;启动第一个节点（节点A）&#34;&gt;&lt;a href=&#34;#启动第一个节点（节点A）&#34; class=&#34;headerlink&#34; title=&#34;启动第一个节点（节点A）&#34;&gt;&lt;/a&gt;启动第一个节点（节点A）&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--networkid 987&lt;/code&gt;: 设置网络 ID，与 &lt;code&gt;genesis.json&lt;/code&gt; 中的 &lt;code&gt;chainId&lt;/code&gt; 保持一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30303&lt;/code&gt;: 设置 P2P 连接的监听端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--nodiscover&lt;/code&gt;: 禁用节点发现功能（如果你想手动连接节点）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http&lt;/code&gt;: 启用 HTTP-RPC 服务，便于远程访问节点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console&lt;/code&gt;: 启动 Geth 控制台以便执行命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;启动第二个节点（节点B）&#34;&gt;&lt;a href=&#34;#启动第二个节点（节点B）&#34; class=&#34;headerlink&#34; title=&#34;启动第二个节点（节点B）&#34;&gt;&lt;/a&gt;启动第二个节点（节点B）&lt;/h5&gt;&lt;p&gt;节点B可以在另一台机器上，也可以是本机上的另一个实例，只需要不同的数据目录和端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./node2data&lt;/code&gt;: 为节点B设置不同的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30304&lt;/code&gt;: 节点B的 P2P 端口必须与节点A不同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http.port 8546&lt;/code&gt;: HTTP-RPC 服务端口与节点A不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-手动连接节点&#34;&gt;&lt;a href=&#34;#4-手动连接节点&#34; class=&#34;headerlink&#34; title=&#34;4. 手动连接节点&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;手动连接节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;因为 &lt;code&gt;--nodiscover&lt;/code&gt; 禁用了自动发现，必须手动连接节点。&lt;/p&gt;
&lt;h5 id=&#34;获取节点的-enode-信息&#34;&gt;&lt;a href=&#34;#获取节点的-enode-信息&#34; class=&#34;headerlink&#34; title=&#34;获取节点的 enode 信息&#34;&gt;&lt;/a&gt;获取节点的 &lt;code&gt;enode&lt;/code&gt; 信息&lt;/h5&gt;&lt;p&gt;在节点A的控制台中，输入以下命令获取节点A的 &lt;code&gt;enode&lt;/code&gt; 地址：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nodeInfo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;enode&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出类似于：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-perl&#34; data-language=&#34;perl&#34;&gt;&lt;code class=&#34;language-perl&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303?discport=0&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个地址是节点A的唯一标识，后面的 &lt;code&gt;@127.0.0.1:30303&lt;/code&gt; 表示节点A运行的 IP 和端口。&lt;/p&gt;
&lt;h5 id=&#34;连接节点B到节点A&#34;&gt;&lt;a href=&#34;#连接节点B到节点A&#34; class=&#34;headerlink&#34; title=&#34;连接节点B到节点A&#34;&gt;&lt;/a&gt;连接节点B到节点A&lt;/h5&gt;&lt;p&gt;在节点B的控制台中，使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令连接到节点A：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/code&gt; 替换为节点A的 &lt;code&gt;enode&lt;/code&gt; 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;验证节点是否连接&#34;&gt;&lt;a href=&#34;#验证节点是否连接&#34; class=&#34;headerlink&#34; title=&#34;验证节点是否连接&#34;&gt;&lt;/a&gt;验证节点是否连接&lt;/h5&gt;&lt;p&gt;在任何一个节点的控制台中，使用以下命令检查当前连接的对等节点数量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果节点成功连接，该命令将返回大于 &lt;code&gt;0&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你还可以使用以下命令查看当前的连接节点列表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-同步和挖矿&#34;&gt;&lt;a href=&#34;#5-同步和挖矿&#34; class=&#34;headerlink&#34; title=&#34;5. 同步和挖矿&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;同步和挖矿&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在节点A或节点B中，可以启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用 1 个线程进行挖矿&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;挖到的区块会自动同步到其他节点。你可以通过以下命令查看区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-账户和交易管理&#34;&gt;&lt;a href=&#34;#6-账户和交易管理&#34; class=&#34;headerlink&#34; title=&#34;6. 账户和交易管理&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;账户和交易管理&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建新账户&#34;&gt;&lt;a href=&#34;#创建新账户&#34; class=&#34;headerlink&#34; title=&#34;创建新账户&#34;&gt;&lt;/a&gt;创建新账户&lt;/h5&gt;&lt;p&gt;在 Geth 控制台中，你可以为每个节点创建新账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;解锁账户-1&#34;&gt;&lt;a href=&#34;#解锁账户-1&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;发送交易前需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送交易&#34;&gt;&lt;a href=&#34;#发送交易&#34; class=&#34;headerlink&#34; title=&#34;发送交易&#34;&gt;&lt;/a&gt;发送交易&lt;/h5&gt;&lt;p&gt;在节点之间发送交易，可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 转账金额，单位为 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-设置启动脚本&#34;&gt;&lt;a href=&#34;#7-设置启动脚本&#34; class=&#34;headerlink&#34; title=&#34;7. 设置启动脚本&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;设置启动脚本&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;为了方便，你可以将节点启动命令放入 &lt;code&gt;.bat&lt;/code&gt; 或 &lt;code&gt;.cmd&lt;/code&gt; 文件中，在 Windows 上直接双击执行。例如，创建一个 &lt;code&gt;start_nodeA.bat&lt;/code&gt; 文件，内容为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后创建 &lt;code&gt;start_nodeB.bat&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-多节点连接的总结步骤&#34;&gt;&lt;a href=&#34;#8-多节点连接的总结步骤&#34; class=&#34;headerlink&#34; title=&#34;8. 多节点连接的总结步骤&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;多节点连接的总结步骤&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件，并初始化所有节点。&lt;/li&gt;
&lt;li&gt;启动每个节点，确保使用相同的 &lt;code&gt;networkid&lt;/code&gt; 和不同的 &lt;code&gt;port&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 手动连接节点，确保它们可以互相通信。&lt;/li&gt;
&lt;li&gt;启动挖矿，并通过 &lt;code&gt;miner.start()&lt;/code&gt; 命令进行区块生成。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.peers&lt;/code&gt; 和 &lt;code&gt;net.peerCount&lt;/code&gt; 查看连接状态。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这些步骤，你可以在私链上搭建多个节点的网络，节点之间可以互相同步区块、挖矿和发送交易。&lt;/p&gt;
&lt;h2 id=&#34;三、构建示例项目&#34;&gt;&lt;a href=&#34;#三、构建示例项目&#34; class=&#34;headerlink&#34; title=&#34;三、构建示例项目&#34;&gt;&lt;/a&gt;三、构建示例项目&lt;/h2&gt;&lt;h3 id=&#34;创建-Truffle-项目&#34;&gt;&lt;a href=&#34;#创建-Truffle-项目&#34; class=&#34;headerlink&#34; title=&#34;创建 Truffle 项目&#34;&gt;&lt;/a&gt;创建 Truffle 项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&#34;创建项目目录：&#34;&gt;&lt;a href=&#34;#创建项目目录：&#34; class=&#34;headerlink&#34; title=&#34;创建项目目录：&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建项目目录&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; my-dapp
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my-dapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&#34;初始化-Truffle-项目：&#34;&gt;&lt;a href=&#34;#初始化-Truffle-项目：&#34; class=&#34;headerlink&#34; title=&#34;初始化 Truffle 项目：&#34;&gt;&lt;/a&gt;&lt;strong&gt;初始化 Truffle 项目&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle init or truffle.cmd unbox webpack &lt;span class=&#34;token comment&#34;&gt;#后者用 webpack 模版初始化项目骨架结构&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装项目依赖的 NPM 包 ，执行以下命令安装 npm 包:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; app
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;修改-Truffle-配置&#34;&gt;&lt;a href=&#34;#修改-Truffle-配置&#34; class=&#34;headerlink&#34; title=&#34;修改 Truffle 配置&#34;&gt;&lt;/a&gt;修改 Truffle 配置&lt;/h3&gt;&lt;p&gt;在项目根目录下找到 &lt;code&gt;truffle-config.js&lt;/code&gt; 文件，并修改如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;development&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;network_id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 匹配任何网络 ID&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3000000&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 设置最大 gas 限制&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;compilers&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;solc&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0.8.0&#34;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 指定 Solidity 编译器版本&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写智能合约&#34;&gt;&lt;a href=&#34;#编写智能合约&#34; class=&#34;headerlink&#34; title=&#34;编写智能合约&#34;&gt;&lt;/a&gt;编写智能合约&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;contracts&lt;/code&gt; 目录下创建一个新的合约文件，例如 &lt;code&gt;MyContract.sol&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-solidity&#34; data-language=&#34;solidity&#34;&gt;&lt;code class=&#34;language-solidity&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// SPDX-License-Identifier: MIT&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;token version number&#34;&gt;0.8.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyContract&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; message&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建迁移文件&#34;&gt;&lt;a href=&#34;#创建迁移文件&#34; class=&#34;headerlink&#34; title=&#34;创建迁移文件&#34;&gt;&lt;/a&gt;创建迁移文件&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;migrations&lt;/code&gt; 目录下创建一个新的迁移文件，例如 &lt;code&gt;2_deploy_my_contract.js&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-默认迁移行为&#34;&gt;&lt;a href=&#34;#1-默认迁移行为&#34; class=&#34;headerlink&#34; title=&#34;1. 默认迁移行为&#34;&gt;&lt;/a&gt;1. 默认迁移行为&lt;/h4&gt;&lt;p&gt;当你运行以下命令时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Truffle 会按照 &lt;code&gt;migrations&lt;/code&gt; 目录中脚本的顺序自动部署所有合约。每个脚本的文件名通常以数字开头，以确定部署顺序。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1_initial_migration.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-部署特定合约&#34;&gt;&lt;a href=&#34;#2-部署特定合约&#34; class=&#34;headerlink&#34; title=&#34;2. 部署特定合约&#34;&gt;&lt;/a&gt;2. 部署特定合约&lt;/h4&gt;&lt;p&gt;如果你只想部署特定的合约，可以按照以下步骤进行：&lt;/p&gt;
&lt;h5 id=&#34;2-1-创建特定迁移文件&#34;&gt;&lt;a href=&#34;#2-1-创建特定迁移文件&#34; class=&#34;headerlink&#34; title=&#34;2.1 创建特定迁移文件&#34;&gt;&lt;/a&gt;2.1 创建特定迁移文件&lt;/h5&gt;&lt;p&gt;你可以在 &lt;code&gt;migrations&lt;/code&gt; 目录中创建新的迁移文件，只包含要部署的合约。例如，假设你只想部署 &lt;code&gt;MyContract&lt;/code&gt; 合约，你可以创建一个新的迁移文件，例如 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-2-使用-f-参数&#34;&gt;&lt;a href=&#34;#2-2-使用-f-参数&#34; class=&#34;headerlink&#34; title=&#34;2.2 使用 --f 参数&#34;&gt;&lt;/a&gt;2.2 使用 &lt;code&gt;--f&lt;/code&gt; 参数&lt;/h5&gt;&lt;p&gt;如果你想只运行特定的迁移文件，可以使用 &lt;code&gt;--f&lt;/code&gt; 参数（&lt;code&gt;--f&lt;/code&gt; 后接文件的序号）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--f&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将只运行 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt; 文件中的迁移脚本。&lt;/p&gt;
&lt;h4 id=&#34;3-回滚并重新部署&#34;&gt;&lt;a href=&#34;#3-回滚并重新部署&#34; class=&#34;headerlink&#34; title=&#34;3. 回滚并重新部署&#34;&gt;&lt;/a&gt;3. 回滚并重新部署&lt;/h4&gt;&lt;p&gt;如果你需要重新部署某个合约，可以使用 &lt;code&gt;--reset&lt;/code&gt; 参数，这将重新运行所有的迁移：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--reset&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果只想回滚到某个特定迁移并重新部署，你可以使用 &lt;code&gt;--to&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--to&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回滚到并重新部署到第二个迁移（&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;）为止的所有迁移。&lt;/p&gt;
&lt;h4 id=&#34;4-部署的选择性控制&#34;&gt;&lt;a href=&#34;#4-部署的选择性控制&#34; class=&#34;headerlink&#34; title=&#34;4. 部署的选择性控制&#34;&gt;&lt;/a&gt;4. 部署的选择性控制&lt;/h4&gt;&lt;p&gt;如果你的合约之间存在依赖关系（例如，一个合约依赖于另一个合约），你应该确保按照适当的顺序部署。可以在迁移脚本中引用之前已经部署的合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractA&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instanceA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContractA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;token comment&#34;&gt;// 部署时传递 MyContractA 的地址&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractB&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; instanceA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;address&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编译合约&#34;&gt;&lt;a href=&#34;#编译合约&#34; class=&#34;headerlink&#34; title=&#34;编译合约&#34;&gt;&lt;/a&gt;编译合约&lt;/h3&gt;&lt;p&gt;在部署合约之前，您需要确保智能合约已被编译。您可以通过以下命令来编译合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle compile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;自动编译与部署&#34;&gt;&lt;a href=&#34;#自动编译与部署&#34; class=&#34;headerlink&#34; title=&#34;自动编译与部署&#34;&gt;&lt;/a&gt;自动编译与部署&lt;/h4&gt;&lt;p&gt;在执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时，Truffle 会自动检查合约是否已经编译。如果合约文件有更改或未编译，Truffle 会自动执行编译。因此，在以下情况下，您可以不手动执行编译命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合约未编译&lt;/strong&gt;：当您修改了合约后，执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时会自动编译。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合约已经是最新&lt;/strong&gt;：如果合约未更改并且已经编译，则可以直接执行迁移命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;如何确认编译状态&#34;&gt;&lt;a href=&#34;#如何确认编译状态&#34; class=&#34;headerlink&#34; title=&#34;如何确认编译状态&#34;&gt;&lt;/a&gt;如何确认编译状态&lt;/h4&gt;&lt;p&gt;如果您不确定合约是否已经编译，可以检查 &lt;code&gt;build/contracts&lt;/code&gt; 目录。编译后，该目录下应该会生成合约的 JSON 文件（包含字节码和 ABI）。例如，&lt;code&gt;MyContract.json&lt;/code&gt; 文件中应该有相关信息。&lt;/p&gt;
&lt;p&gt;如果您希望在每次部署时都重新编译合约，可以在 &lt;code&gt;migrate&lt;/code&gt; 命令中使用 &lt;code&gt;--compile-all&lt;/code&gt; 参数，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate --compile-all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将强制 Truffle 重新编译所有合约。&lt;/p&gt;
&lt;h3 id=&#34;启动-Geth-节点&#34;&gt;&lt;a href=&#34;#启动-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;启动 Geth 节点&#34;&gt;&lt;/a&gt;启动 Geth 节点&lt;/h3&gt;&lt;p&gt;在 Geth 的命令行窗口中，启动您的节点，使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8545&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;解锁账户-2&#34;&gt;&lt;a href=&#34;#解锁账户-2&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，解锁您的账户（假设 &lt;code&gt;user1&lt;/code&gt; 是您的账户地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your_password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果已经正确地解锁了账户,你会看到部署过程停止在某个状态&lt;/p&gt;
&lt;p&gt;这是因为 truffle 在等待部署交易提交,但是我们在私链中还没有启动挖矿。  现在切换回 geth 终端窗口,查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
pending:1,  
queued:0  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有一个挂起的交易&lt;/p&gt;
&lt;h3 id=&#34;启动挖矿-1&#34;&gt;&lt;a href=&#34;#启动挖矿-1&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;稍等小会儿,再查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  pending:0,  queued:0  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;交易已经成功提交了&lt;/p&gt;
&lt;h3 id=&#34;部署合约&#34;&gt;&lt;a href=&#34;#部署合约&#34; class=&#34;headerlink&#34; title=&#34;部署合约&#34;&gt;&lt;/a&gt;部署合约&lt;/h3&gt;&lt;p&gt;在项目目录中，使用以下命令部署合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;检查部署结果&#34;&gt;&lt;a href=&#34;#检查部署结果&#34; class=&#34;headerlink&#34; title=&#34;检查部署结果&#34;&gt;&lt;/a&gt;检查部署结果&lt;/h3&gt;&lt;p&gt;部署完成后，您可以查看终端输出中的合约地址和交易哈希，确认合约是否成功部署。&lt;/p&gt;
&lt;h3 id=&#34;与合约交互&#34;&gt;&lt;a href=&#34;#与合约交互&#34; class=&#34;headerlink&#34; title=&#34;与合约交互&#34;&gt;&lt;/a&gt;与合约交互&lt;/h3&gt;&lt;p&gt;在合约部署后，您可以使用 Truffle 控制台与合约进行交互：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动 Truffle 控制台：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle console &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在控制台中，获取合约实例并与其交互：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContract&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; currentMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出当前消息&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;New Message&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 更新消息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; updatedMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;updatedMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出更新后的消息&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;启动-DApp&#34;&gt;&lt;a href=&#34;#启动-DApp&#34; class=&#34;headerlink&#34; title=&#34;启动 DApp&#34;&gt;&lt;/a&gt;启动 DApp&lt;/h3&gt;&lt;p&gt;执行以下命令来启动 DApp:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run dev  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器里访问 &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080&lt;/a&gt; 即可&lt;/p&gt;
&lt;p&gt;如果你希望从别的机器也可以访问你的 DApp 应用,修改一下 &lt;code&gt;package.json&lt;/code&gt;:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
	scripts:&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    	&lt;span class=&#34;token string&#34;&gt;&#34;dev&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;webpack-dev-server –-host 0.0.0.0&#34;&lt;/span&gt; 
    	&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;四、命令详解&#34;&gt;&lt;a href=&#34;#四、命令详解&#34; class=&#34;headerlink&#34; title=&#34;四、命令详解&#34;&gt;&lt;/a&gt;四、命令详解&lt;/h2&gt;&lt;h3 id=&#34;1-Geth-命令行选项&#34;&gt;&lt;a href=&#34;#1-Geth-命令行选项&#34; class=&#34;headerlink&#34; title=&#34;1. Geth 命令行选项&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Geth 命令行选项&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在启动 Geth 时使用的，用来配置节点行为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–datadir&lt;/strong&gt;：指定数据目录，所有区块链和配置数据将保存在此目录中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–networkid&lt;/strong&gt;：选择要加入的网络 ID，避免连接到错误的链。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–port&lt;/strong&gt;：指定节点的P2P通信端口（默认是 30303）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–nodiscover&lt;/strong&gt;：禁用节点自动发现，防止自动连接其他节点（常用于私有网络）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–maxpeers&lt;/strong&gt;：设置最多连接的节点数（默认 25）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–mine&lt;/strong&gt;：启动节点时立即开始挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–minerthreads&lt;/strong&gt;：设置挖矿使用的线程数量（默认为 1）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–etherbase&lt;/strong&gt;：指定挖矿奖励接收的以太坊地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; 0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpc&lt;/strong&gt;：启用 HTTP-RPC 接口，允许通过 HTTP 与节点交互。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcaddr&lt;/strong&gt;：指定 HTTP-RPC 接口监听的地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcport&lt;/strong&gt;：指定 HTTP-RPC 端口。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpccorsdomain&lt;/strong&gt;：指定允许通过 CORS（跨域资源共享）访问的域，通常设置为 &lt;code&gt;*&lt;/code&gt; 允许所有域。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcapi&lt;/strong&gt;：指定允许通过 RPC 接口调用的 API 模块（例如 &lt;code&gt;eth&lt;/code&gt;, &lt;code&gt;net&lt;/code&gt;, &lt;code&gt;web3&lt;/code&gt;）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–syncmode&lt;/strong&gt;：设置节点的同步模式，常用的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fast&lt;/code&gt;（默认，快速同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;（完全同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;light&lt;/code&gt;（轻节点，只下载区块头）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--syncmode&lt;/span&gt; fast&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–ipcdisable&lt;/strong&gt;：禁用 Geth 的 IPC-RPC 通信接口（默认启用 IPC）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--ipcdisable&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-Geth-控制台命令&#34;&gt;&lt;a href=&#34;#2-Geth-控制台命令&#34; class=&#34;headerlink&#34; title=&#34;2. Geth 控制台命令&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;Geth 控制台命令&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在 Geth 启动并进入控制台时使用的，或者通过 &lt;code&gt;geth attach&lt;/code&gt; 来附加到已运行的节点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.syncing&lt;/strong&gt;：查看节点是否在同步，并返回同步状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syncing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.blockNumber&lt;/strong&gt;：获取当前节点的区块高度。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBlock(blockNumber)**：查看某个区块的信息（例如查看最新区块）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBalance(address)**：查看某个地址的余额。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.start(threads)**：启动挖矿，并指定使用的线程数（例如 1 个线程）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.stop()**：停止挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.newAccount(password)**：创建新账户，并设置密码。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.unlockAccount(address, password)**：解锁指定账户，允许在一段时间内使用账户进行交易。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;admin.peers&lt;/strong&gt;：查看当前连接的节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**admin.addPeer(enodeURL)**：手动添加一个节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;net.peerCount&lt;/strong&gt;：查看连接的节点数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;txpool.status&lt;/strong&gt;：查看交易池的状态，包含等待和挂起的交易数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**debug.verbosity(level)**：设置日志的详细程度（0 为最少，5 为最多）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;debug&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;verbosity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**web3.sha3(string)**：计算字符串的 Keccak-256 哈希。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sha3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.sendTransaction({from: sender, to: receiver, value: amount})**：发送交易（注意单位为 Wei）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xReceiverAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些命令涵盖了Geth在日常使用中的常见需求，包括节点管理、账户管理、挖矿、网络连接、交易等。你可以根据自己的需求组合使用。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/</guid>
            <title>文件名含义</title>
            <link>https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/</link>
            <category>教程</category>
            <pubDate>Thu, 10 Oct 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;文件名含义&#34;&gt;&lt;a href=&#34;#文件名含义&#34; class=&#34;headerlink&#34; title=&#34;文件名含义&#34;&gt;&lt;/a&gt;文件名含义&lt;/h1&gt;&lt;h3 id=&#34;1-版本号&#34;&gt;&lt;a href=&#34;#1-版本号&#34; class=&#34;headerlink&#34; title=&#34;1. 版本号&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;版本号&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件名通常包含软件的版本号，用来表示该版本相对于其他版本的更新程度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：软件版本为1.0.0，版本号通常采用三段式：&lt;code&gt;主版本号.次版本号.修订号&lt;/code&gt;。主版本号表示重大更新，次版本号表示功能增加，修订号表示小的修复。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-操作系统（OS）标识&#34;&gt;&lt;a href=&#34;#2-操作系统（OS）标识&#34; class=&#34;headerlink&#34; title=&#34;2. 操作系统（OS）标识&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;操作系统（OS）标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中通常会有一个标识符，用于指定该安装文件适用于哪个操作系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;win&lt;/code&gt;：Windows 系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mac&lt;/code&gt; 或 &lt;code&gt;osx&lt;/code&gt;：Mac OS 系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linux&lt;/code&gt;：Linux 系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该软件适用于64位的Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-位数或架构&#34;&gt;&lt;a href=&#34;#3-位数或架构&#34; class=&#34;headerlink&#34; title=&#34;3. 位数或架构&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;位数或架构&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件通常会注明是为32位（x86）还是64位（x64）系统架构设计的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x86&lt;/code&gt; 或 &lt;code&gt;32&lt;/code&gt;：适用于32位系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x64&lt;/code&gt; 或 &lt;code&gt;64&lt;/code&gt;：适用于64位系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_x64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：软件适用于64位架构的系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-安装文件类型&#34;&gt;&lt;a href=&#34;#4-安装文件类型&#34; class=&#34;headerlink&#34; title=&#34;4. 安装文件类型&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;安装文件类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件扩展名（如&lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.msi&lt;/code&gt;, &lt;code&gt;.deb&lt;/code&gt;, &lt;code&gt;.rpm&lt;/code&gt;）表示安装文件的类型和其安装方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见扩展名：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.exe&lt;/code&gt;：Windows 可执行文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.msi&lt;/code&gt;：Windows 安装包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.deb&lt;/code&gt;：Debian 或 Ubuntu 的安装包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.rpm&lt;/code&gt;：Red Hat 或 CentOS 的安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_amd64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该软件是为64位系统的Debian或Ubuntu环境提供的安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-压缩格式&#34;&gt;&lt;a href=&#34;#5-压缩格式&#34; class=&#34;headerlink&#34; title=&#34;5. 压缩格式&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;压缩格式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些安装文件是以压缩包的形式发布的，文件名中会包含压缩格式的标识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见扩展名：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.zip&lt;/code&gt;：ZIP 压缩格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.tar.gz&lt;/code&gt;：Gzip压缩的Tar包（常用于Linux）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.7z&lt;/code&gt;：7-Zip压缩格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_linux.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是为Linux系统提供的安装包，并以Gzip格式压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-预发布-稳定版标识&#34;&gt;&lt;a href=&#34;#6-预发布-稳定版标识&#34; class=&#34;headerlink&#34; title=&#34;6. 预发布/稳定版标识&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;预发布/稳定版标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含有关该版本是否为稳定版或预发布版本的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beta&lt;/code&gt;：测试版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt;：早期开发版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rc&lt;/code&gt;：发布候选版（Release Candidate）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stable&lt;/code&gt;：稳定版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_beta.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是软件的测试版。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-特殊用途标识&#34;&gt;&lt;a href=&#34;#7-特殊用途标识&#34; class=&#34;headerlink&#34; title=&#34;7. 特殊用途标识&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;特殊用途标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些文件名中可能还包含表示特定用途的标识符，例如为开发者准备的工具包、文档文件等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sdk&lt;/code&gt;：软件开发工具包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;：文档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lite&lt;/code&gt;：精简版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;：完整版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_sdk_win64.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是用于Windows 64位系统的软件开发工具包，并以ZIP格式压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-语言或区域标识&#34;&gt;&lt;a href=&#34;#8-语言或区域标识&#34; class=&#34;headerlink&#34; title=&#34;8. 语言或区域标识&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;语言或区域标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件可能还会包含语言或区域的代码，表示该软件适用于特定语言版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;en&lt;/code&gt;：英语&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt; 或 &lt;code&gt;zh&lt;/code&gt;：中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fr&lt;/code&gt;：法语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_zh-cn.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是面向中国大陆的中文版本，适用于64位的Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-发行渠道或发行模式&#34;&gt;&lt;a href=&#34;#9-发行渠道或发行模式&#34; class=&#34;headerlink&#34; title=&#34;9. 发行渠道或发行模式&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;发行渠道或发行模式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会标明软件的发行渠道或模式，帮助用户了解该软件是通过何种方式发布的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offline&lt;/code&gt; 或 &lt;code&gt;standalone&lt;/code&gt;：离线安装包，不需要网络连接即可安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt; 或 &lt;code&gt;online&lt;/code&gt;：在线安装器，下载时体积小，安装过程中需要联网下载额外文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;portable&lt;/code&gt;：便携版，通常无需安装，可直接运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_offline.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：适用于64位Windows系统的离线安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-安全标识或加密&#34;&gt;&lt;a href=&#34;#10-安全标识或加密&#34; class=&#34;headerlink&#34; title=&#34;10. 安全标识或加密&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;安全标识或加密&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件可能在名称中包含与安全相关的标识符，通常用于表示该文件的来源可信或包含特定的安全加密方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;signed&lt;/code&gt;：已签名的安装文件，确保文件未被篡改&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;：指文件的哈希值（如SHA256），用户可用来验证文件完整性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_signed.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件已经过数字签名验证，确保文件的来源安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;11-支持的硬件平台&#34;&gt;&lt;a href=&#34;#11-支持的硬件平台&#34; class=&#34;headerlink&#34; title=&#34;11. 支持的硬件平台&#34;&gt;&lt;/a&gt;11. &lt;strong&gt;支持的硬件平台&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;一些安装文件会标明其支持的硬件平台，特别是在跨平台软件或硬件驱动程序中，这一点很常见。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arm&lt;/code&gt; 或 &lt;code&gt;arm64&lt;/code&gt;：适用于基于ARM架构的设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intel&lt;/code&gt; 或 &lt;code&gt;x86_64&lt;/code&gt;：适用于基于Intel或AMD x86_64架构的设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nvidia&lt;/code&gt;：适用于NVIDIA显卡驱动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;amd&lt;/code&gt;：适用于AMD显卡驱动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_arm64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该安装包适用于基于ARM64架构的设备，通常在移动设备或某些低功耗的服务器上使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-地域和市场&#34;&gt;&lt;a href=&#34;#12-地域和市场&#34; class=&#34;headerlink&#34; title=&#34;12. 地域和市场&#34;&gt;&lt;/a&gt;12. &lt;strong&gt;地域和市场&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件名会指出该软件是为特定国家或地区的市场发布的，特别是在带有本地化内容或法规限制的软件中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;：美国市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eu&lt;/code&gt;：欧洲市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt;：中国市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jp&lt;/code&gt;：日本市场&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_cn.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是适用于中国市场的Windows 64位版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;13-多语言支持&#34;&gt;&lt;a href=&#34;#13-多语言支持&#34; class=&#34;headerlink&#34; title=&#34;13. 多语言支持&#34;&gt;&lt;/a&gt;13. &lt;strong&gt;多语言支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含软件的语言支持类型，表示是否为多语言版本或仅支持特定语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ml&lt;/code&gt; 或 &lt;code&gt;multi&lt;/code&gt;：多语言版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;en&lt;/code&gt;：仅支持英语&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zh-cn&lt;/code&gt;：简体中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;es&lt;/code&gt;：西班牙语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_multi.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该安装文件支持多种语言，用户可以在安装时选择语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;14-开发版本类型&#34;&gt;&lt;a href=&#34;#14-开发版本类型&#34; class=&#34;headerlink&#34; title=&#34;14. 开发版本类型&#34;&gt;&lt;/a&gt;14. &lt;strong&gt;开发版本类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;开发者在发布未完成的测试版软件时，文件名中可能包含不同类型的开发版本标识符。这些标识符有助于区分不同的开发阶段。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dev&lt;/code&gt;：开发版，通常是未完成的版本，用于开发者内部测试&lt;/li&gt;
&lt;li&gt;&lt;code&gt;snapshot&lt;/code&gt;：快照版，是开发过程中某个时间点的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;：每晚构建版，指每天自动生成的开发版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_snapshot_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是开发过程中的快照版本，可能不稳定或包含实验性功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;15-安装模式&#34;&gt;&lt;a href=&#34;#15-安装模式&#34; class=&#34;headerlink&#34; title=&#34;15. 安装模式&#34;&gt;&lt;/a&gt;15. &lt;strong&gt;安装模式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含不同的安装模式，特别是在支持用户自定义安装或选择不同模块的安装包中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;：完整安装包，包含所有功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lite&lt;/code&gt; 或 &lt;code&gt;min&lt;/code&gt;：轻量或精简版，包含最少的功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;custom&lt;/code&gt;：用户可以自定义选择安装哪些功能模块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_lite.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的精简版，适用于64位Windows系统，可能省去了一些不常用的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;16-分发类型&#34;&gt;&lt;a href=&#34;#16-分发类型&#34; class=&#34;headerlink&#34; title=&#34;16. 分发类型&#34;&gt;&lt;/a&gt;16. &lt;strong&gt;分发类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件会根据分发渠道或协议进行分类，特别是开源软件或商业软件中，这些标识符帮助用户了解软件的使用条款或发布方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;community&lt;/code&gt;：社区版，通常是免费或开源版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; 或 &lt;code&gt;pro&lt;/code&gt;：企业版或专业版，通常包含高级功能，面向商业用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trial&lt;/code&gt;：试用版，提供一定期限的免费使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_enterprise_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是面向企业用户的专业版安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;17-补丁版本和维护版本&#34;&gt;&lt;a href=&#34;#17-补丁版本和维护版本&#34; class=&#34;headerlink&#34; title=&#34;17. 补丁版本和维护版本&#34;&gt;&lt;/a&gt;17. &lt;strong&gt;补丁版本和维护版本&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些文件名会包含补丁（patch）或维护（maintenance）版本信息，表示该文件是在原版基础上进行修复、改进或安全更新的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;patch&lt;/code&gt; 或 &lt;code&gt;hotfix&lt;/code&gt;：补丁版，修复特定问题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sp1&lt;/code&gt;, &lt;code&gt;sp2&lt;/code&gt; 等：服务包版本（Service Pack），通常是对多个问题的修复合集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt;：更新版本，提供功能改进或错误修复&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_sp1_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件1.0.0版本的第一个服务包，适用于64位Windows系统，包含问题修复和改进。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;18-兼容性标识&#34;&gt;&lt;a href=&#34;#18-兼容性标识&#34; class=&#34;headerlink&#34; title=&#34;18. 兼容性标识&#34;&gt;&lt;/a&gt;18. &lt;strong&gt;兼容性标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件会注明与其他软件或硬件的兼容性信息，特别是在驱动程序或插件的安装包中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;compatible&lt;/code&gt;：表示与特定系统或硬件兼容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;legacy&lt;/code&gt;：遗留版本，支持旧版本系统或硬件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;universal&lt;/code&gt;：通用版，适用于多个平台&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_legacy.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于旧版本Windows系统或旧硬件的安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;19-试用期或限制&#34;&gt;&lt;a href=&#34;#19-试用期或限制&#34; class=&#34;headerlink&#34; title=&#34;19. 试用期或限制&#34;&gt;&lt;/a&gt;19. &lt;strong&gt;试用期或限制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些商业软件的试用版会在文件名中包含试用期或功能限制的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;trial30&lt;/code&gt; 或 &lt;code&gt;trial60&lt;/code&gt;：表示该版本有30天或60天的试用期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;limited&lt;/code&gt;：有限制版，可能功能或时间受限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;demo&lt;/code&gt;：演示版，通常只包含部分功能或限制使用时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_trial30_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是带有30天试用期的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;20-多合一安装包&#34;&gt;&lt;a href=&#34;#20-多合一安装包&#34; class=&#34;headerlink&#34; title=&#34;20. 多合一安装包&#34;&gt;&lt;/a&gt;20. &lt;strong&gt;多合一安装包&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些软件提供“多合一”安装包，允许用户在一个安装文件中选择不同的安装选项或版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;all-in-one&lt;/code&gt;：多合一安装包，包含多个版本或功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;combo&lt;/code&gt;：组合安装包，通常包含主程序和附加组件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_all-in-one_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是一个多合一安装包，适用于64位Windows系统，可能包含多个模块或功能供选择安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;21-源代码和构建信息&#34;&gt;&lt;a href=&#34;#21-源代码和构建信息&#34; class=&#34;headerlink&#34; title=&#34;21. 源代码和构建信息&#34;&gt;&lt;/a&gt;21. &lt;strong&gt;源代码和构建信息&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些开源软件的安装文件名中可能包含源代码的相关信息，供开发者自行构建或定制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt;：源代码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build&lt;/code&gt;：构建版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bin&lt;/code&gt;：二进制文件，已编译可直接运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_src.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的源代码包，以Gzip压缩的Tar格式发布，适用于开发者。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-安装程序或压缩包&#34;&gt;&lt;a href=&#34;#22-安装程序或压缩包&#34; class=&#34;headerlink&#34; title=&#34;22. 安装程序或压缩包&#34;&gt;&lt;/a&gt;22. &lt;strong&gt;安装程序或压缩包&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中还可能指明软件是通过安装程序直接安装，还是提供压缩包供手动解压和安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;installer&lt;/code&gt;：安装程序，通常是带有图形化或命令行界面的安装文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;portable&lt;/code&gt;：便携版，无需安装，解压后即可运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;archive&lt;/code&gt;：压缩包，通常需要手动解压后安装或运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_portable_win64.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于64位Windows系统的便携版软件，用户无需安装，解压后即可使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-企业或个人版&#34;&gt;&lt;a href=&#34;#23-企业或个人版&#34; class=&#34;headerlink&#34; title=&#34;23. 企业或个人版&#34;&gt;&lt;/a&gt;23. &lt;strong&gt;企业或个人版&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件文件名中可能明确区分企业版和个人版，以帮助用户选择合适的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; 或 &lt;code&gt;business&lt;/code&gt;：企业版，面向商业用户，通常包含更多管理或安全功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;personal&lt;/code&gt;：个人版，面向普通用户，功能较简化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home&lt;/code&gt;：家庭版，适合家庭用户使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_enterprise_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于企业用户的64位Windows系统版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;24-特定用途的子版本&#34;&gt;&lt;a href=&#34;#24-特定用途的子版本&#34; class=&#34;headerlink&#34; title=&#34;24. 特定用途的子版本&#34;&gt;&lt;/a&gt;24. &lt;strong&gt;特定用途的子版本&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;软件可能根据不同用途或功能模块发布子版本，文件名中会包含对应的模块标识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt;：服务器版，适用于服务器环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client&lt;/code&gt;：客户端版，适用于普通用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gui&lt;/code&gt;：图形用户界面版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cli&lt;/code&gt;：命令行版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_server_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的服务器版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;25-云服务或集成&#34;&gt;&lt;a href=&#34;#25-云服务或集成&#34; class=&#34;headerlink&#34; title=&#34;25. 云服务或集成&#34;&gt;&lt;/a&gt;25. &lt;strong&gt;云服务或集成&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着云计算的普及，某些安装包可能包含云端服务集成的信息，帮助用户了解该软件是否与云服务兼容或包含云功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cloud&lt;/code&gt;：与云服务集成，或为云环境设计的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;saas&lt;/code&gt;：软件即服务（Software as a Service）版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hybrid&lt;/code&gt;：混合云，支持本地和云服务的集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_cloud_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持云服务集成的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;26-模块化安装&#34;&gt;&lt;a href=&#34;#26-模块化安装&#34; class=&#34;headerlink&#34; title=&#34;26. 模块化安装&#34;&gt;&lt;/a&gt;26. &lt;strong&gt;模块化安装&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件会根据不同的功能模块或插件来区分不同的安装包，文件名中通常会有相应模块的标识符。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;core&lt;/code&gt;：核心模块，必需的主功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugin&lt;/code&gt;：插件模块，扩展功能或第三方插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addon&lt;/code&gt;：附加功能模块，通常用于增强主功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extension&lt;/code&gt;：扩展功能，常用于浏览器或IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_core_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的核心模块，适用于64位Windows系统，可能不包括其他可选功能或插件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;27-操作系统版本兼容性&#34;&gt;&lt;a href=&#34;#27-操作系统版本兼容性&#34; class=&#34;headerlink&#34; title=&#34;27. 操作系统版本兼容性&#34;&gt;&lt;/a&gt;27. &lt;strong&gt;操作系统版本兼容性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中可能会包含针对特定操作系统版本的标识，特别是当某些软件只能在某些系统版本上运行时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xp&lt;/code&gt;, &lt;code&gt;vista&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;8&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;11&lt;/code&gt;：表示适用于特定版本的Windows操作系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ubuntu18.04&lt;/code&gt;, &lt;code&gt;ubuntu20.04&lt;/code&gt;：表示适用于特定版本的Ubuntu系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;macos10.15&lt;/code&gt;, &lt;code&gt;macos11&lt;/code&gt;：表示适用于特定版本的macOS系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win10_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于Windows 10系统的64位安装文件，可能不兼容其他Windows版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;28-国际化和本地化&#34;&gt;&lt;a href=&#34;#28-国际化和本地化&#34; class=&#34;headerlink&#34; title=&#34;28. 国际化和本地化&#34;&gt;&lt;/a&gt;28. &lt;strong&gt;国际化和本地化&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;软件发布时，可能会根据不同国家和地区进行本地化调整，文件名中会包含国际化的标识符，以帮助用户选择适合自己语言和地区的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;intl&lt;/code&gt;：国际化版本，支持多种语言和地区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;：美国地区版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;zh-cn&lt;/code&gt;：中国简体中文版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;de&lt;/code&gt;：德国版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jp&lt;/code&gt;：日本版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_zh-cn_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是简体中文版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;29-编译器或运行时兼容&#34;&gt;&lt;a href=&#34;#29-编译器或运行时兼容&#34; class=&#34;headerlink&#34; title=&#34;29. 编译器或运行时兼容&#34;&gt;&lt;/a&gt;29. &lt;strong&gt;编译器或运行时兼容&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于开发工具或软件开发包（SDK），安装文件名可能会包含与特定编译器或运行时环境的兼容性信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt;：GNU编译器（通常用于Linux）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msvc&lt;/code&gt;：Microsoft Visual C++ 编译器（Windows）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jdk&lt;/code&gt;：Java开发工具包（JDK）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dotnet&lt;/code&gt;：.NET运行时环境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_gcc_linux64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是用GCC编译的版本，适用于64位Linux系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;30-虚拟机或容器支持&#34;&gt;&lt;a href=&#34;#30-虚拟机或容器支持&#34; class=&#34;headerlink&#34; title=&#34;30. 虚拟机或容器支持&#34;&gt;&lt;/a&gt;30. &lt;strong&gt;虚拟机或容器支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件可能包含与虚拟化或容器化环境兼容的信息，特别是在需要虚拟机镜像或容器映像的情况下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vm&lt;/code&gt;：虚拟机镜像（如VirtualBox、VMware）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker&lt;/code&gt;：Docker容器映像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant&lt;/code&gt;：Vagrant虚拟机镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_docker_image.tar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是Docker的容器镜像文件，通常用于容器化部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;31-加密和安全机制&#34;&gt;&lt;a href=&#34;#31-加密和安全机制&#34; class=&#34;headerlink&#34; title=&#34;31. 加密和安全机制&#34;&gt;&lt;/a&gt;31. &lt;strong&gt;加密和安全机制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件安装文件中会包含加密或安全机制的信息，特别是针对高度敏感的应用程序或企业环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encrypted&lt;/code&gt;：表示安装包已加密，需特定密钥或密码才能解压或安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fips&lt;/code&gt;：符合FIPS（Federal Information Processing Standards）标准，适用于政府或安全要求较高的环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hsm&lt;/code&gt;：硬件安全模块（Hardware Security Module）兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_fips_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是符合FIPS标准的版本，适用于需要高安全性的64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;32-数据库或数据存储支持&#34;&gt;&lt;a href=&#34;#32-数据库或数据存储支持&#34; class=&#34;headerlink&#34; title=&#34;32. 数据库或数据存储支持&#34;&gt;&lt;/a&gt;32. &lt;strong&gt;数据库或数据存储支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件文件名会指出其支持的数据库或数据存储解决方案，特别是在涉及数据库管理工具或与特定数据库整合的应用中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql&lt;/code&gt;：支持MySQL数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pgsql&lt;/code&gt;：支持PostgreSQL数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongodb&lt;/code&gt;：支持MongoDB数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redis&lt;/code&gt;：支持Redis数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_mysql_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持MySQL数据库的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;33-API或协议支持&#34;&gt;&lt;a href=&#34;#33-API或协议支持&#34; class=&#34;headerlink&#34; title=&#34;33. API或协议支持&#34;&gt;&lt;/a&gt;33. &lt;strong&gt;API或协议支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件名中有时会提到软件支持的API或协议，特别是当软件依赖特定的网络协议或服务接口时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;：支持REST API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grpc&lt;/code&gt;：支持gRPC协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;soap&lt;/code&gt;：支持SOAP协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http2&lt;/code&gt;：支持HTTP/2协议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_rest_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持REST API的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;34-虚拟现实（VR）或增强现实（AR）支持&#34;&gt;&lt;a href=&#34;#34-虚拟现实（VR）或增强现实（AR）支持&#34; class=&#34;headerlink&#34; title=&#34;34. 虚拟现实（VR）或增强现实（AR）支持&#34;&gt;&lt;/a&gt;34. &lt;strong&gt;虚拟现实（VR）或增强现实（AR）支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着虚拟现实和增强现实技术的应用，一些安装文件可能包含与VR或AR兼容的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vr&lt;/code&gt;：虚拟现实支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ar&lt;/code&gt;：增强现实支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xr&lt;/code&gt;：扩展现实（Extended Reality），包括VR和AR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_vr_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持虚拟现实的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;35-物联网（IoT）支持&#34;&gt;&lt;a href=&#34;#35-物联网（IoT）支持&#34; class=&#34;headerlink&#34; title=&#34;35. 物联网（IoT）支持&#34;&gt;&lt;/a&gt;35. &lt;strong&gt;物联网（IoT）支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着物联网技术的普及，一些软件的安装文件名可能包含物联网相关的支持信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iot&lt;/code&gt;：物联网支持，适用于物联网设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;edge&lt;/code&gt;：边缘计算设备支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mqtt&lt;/code&gt;：支持MQTT协议（常用于物联网）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_iot_linux64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持物联网功能的版本，适用于64位Linux系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;36-大数据平台兼容&#34;&gt;&lt;a href=&#34;#36-大数据平台兼容&#34; class=&#34;headerlink&#34; title=&#34;36. 大数据平台兼容&#34;&gt;&lt;/a&gt;36. &lt;strong&gt;大数据平台兼容&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于与大数据平台集成的软件，文件名中可能会包含特定平台的支持信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hadoop&lt;/code&gt;：支持Hadoop平台&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spark&lt;/code&gt;：支持Apache Spark&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hive&lt;/code&gt;：支持Apache Hive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka&lt;/code&gt;：支持Apache Kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_hadoop_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持Hadoop平台的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</guid>
            <title>SDKMAN教程</title>
            <link>https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</link>
            <category>教程</category>
            <pubDate>Thu, 15 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SDKMAN教程&#34;&gt;&lt;a href=&#34;#SDKMAN教程&#34; class=&#34;headerlink&#34; title=&#34;SDKMAN教程&#34;&gt;&lt;/a&gt;SDKMAN教程&lt;/h1&gt;&lt;h3 id=&#34;1-安装-Git-Bash&#34;&gt;&lt;a href=&#34;#1-安装-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Git Bash&#34;&gt;&lt;/a&gt;1. 安装 Git Bash&lt;/h3&gt;&lt;p&gt;首先，确保你已经安装了 Git Bash。如果还没有，可以从 &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 下载并安装。&lt;/p&gt;
&lt;h3 id=&#34;2-使用-Git-Bash-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#2-使用-Git-Bash-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Git Bash 安装 SDKMAN!&#34;&gt;&lt;/a&gt;2. 使用 Git Bash 安装 SDKMAN!&lt;/h3&gt;&lt;h4 id=&#34;步骤-1-打开-Git-Bash&#34;&gt;&lt;a href=&#34;#步骤-1-打开-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 打开 Git Bash&#34;&gt;&lt;/a&gt;步骤 1: 打开 Git Bash&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在 Windows 上，右键点击桌面或文件夹空白处，选择 &lt;code&gt;Git Bash Here&lt;/code&gt;，打开 Git Bash 终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;步骤-2-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#步骤-2-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 安装 SDKMAN!&#34;&gt;&lt;/a&gt;步骤 2: 安装 SDKMAN!&lt;/h4&gt;&lt;p&gt;在 Git Bash 中执行以下命令来安装 SDKMAN!：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https://get.sdkman.io&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装完成后，执行以下命令加载 SDKMAN!：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/bin/sdkman-init.sh&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-3-验证安装&#34;&gt;&lt;a href=&#34;#步骤-3-验证安装&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 验证安装&#34;&gt;&lt;/a&gt;步骤 3: 验证安装&lt;/h4&gt;&lt;p&gt;输入以下命令，确认 SDKMAN! 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-使用-SDKMAN-安装-Java&#34;&gt;&lt;a href=&#34;#3-使用-SDKMAN-安装-Java&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 SDKMAN! 安装 Java&#34;&gt;&lt;/a&gt;3. 使用 SDKMAN! 安装 Java&lt;/h3&gt;&lt;h4 id=&#34;列出所有可安装版本&#34;&gt;&lt;a href=&#34;#列出所有可安装版本&#34; class=&#34;headerlink&#34; title=&#34;列出所有可安装版本&#34;&gt;&lt;/a&gt;列出所有可安装版本&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk list &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;安装-Java-版本&#34;&gt;&lt;a href=&#34;#安装-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;安装 Java 版本&#34;&gt;&lt;/a&gt;安装 Java 版本&lt;/h4&gt;&lt;p&gt;你可以使用 SDKMAN! 安装你需要的 Java 版本，例如 Java 17：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;设置默认-Java-版本&#34;&gt;&lt;a href=&#34;#设置默认-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;设置默认 Java 版本&#34;&gt;&lt;/a&gt;设置默认 Java 版本&lt;/h4&gt;&lt;p&gt;安装完成后，将 Java 17 设置为默认版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk default &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-配置系统环境变量（全局可用）&#34;&gt;&lt;a href=&#34;#4-配置系统环境变量（全局可用）&#34; class=&#34;headerlink&#34; title=&#34;4. 配置系统环境变量（全局可用）&#34;&gt;&lt;/a&gt;4. 配置系统环境变量（全局可用）&lt;/h3&gt;&lt;p&gt;为了让其他 Shell（如 PowerShell、CMD）也能使用 SDKMAN! 安装的 Java，需要将 Java 的路径添加到系统环境变量中。&lt;/p&gt;
&lt;h4 id=&#34;步骤-1-查找-Java-安装路径&#34;&gt;&lt;a href=&#34;#步骤-1-查找-Java-安装路径&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 查找 Java 安装路径&#34;&gt;&lt;/a&gt;步骤 1: 查找 Java 安装路径&lt;/h4&gt;&lt;p&gt;首先，找到 SDKMAN! 安装的 Java 版本路径。一般位于 &lt;code&gt;$HOME/.sdkman/candidates/java/current/bin&lt;/code&gt;，具体路径可以通过以下命令在 Git Bash 中查看：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/candidates/java/current/bin&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会输出类似于以下的路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/c/Users/YourUsername/.sdkman/candidates/java/current/bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-2-打开系统环境变量设置&#34;&gt;&lt;a href=&#34;#步骤-2-打开系统环境变量设置&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 打开系统环境变量设置&#34;&gt;&lt;/a&gt;步骤 2: 打开系统环境变量设置&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;右键点击 “此电脑” 或 “计算机”，选择 “属性”。&lt;/li&gt;
&lt;li&gt;在左侧点击 “高级系统设置”。&lt;/li&gt;
&lt;li&gt;在弹出的窗口中，点击 “环境变量” 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;步骤-3-添加-Java-路径到系统-PATH&#34;&gt;&lt;a href=&#34;#步骤-3-添加-Java-路径到系统-PATH&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 添加 Java 路径到系统 PATH&#34;&gt;&lt;/a&gt;步骤 3: 添加 Java 路径到系统 &lt;code&gt;PATH&lt;/code&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在系统变量下，找到 &lt;code&gt;Path&lt;/code&gt; 变量并点击 “编辑”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “新建”，并添加以下路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Users&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;YourUsername&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;.sdkman&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;candidates&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;current&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “确定” 关闭所有窗口。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-验证配置&#34;&gt;&lt;a href=&#34;#5-验证配置&#34; class=&#34;headerlink&#34; title=&#34;5. 验证配置&#34;&gt;&lt;/a&gt;5. 验证配置&lt;/h3&gt;&lt;p&gt;关闭所有打开的终端，然后重新打开 CMD、PowerShell 或其他终端，输入以下命令，确认 Java 版本是否正确配置：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果看到安装的 Java 版本信息，说明配置成功。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</guid>
            <title>使用cloudflare的R2创建图床</title>
            <link>https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</link>
            <category>教程</category>
            <pubDate>Sat, 27 Jul 2024 15:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;a href=&#34;#使用cloudflare的R2创建图床&#34; class=&#34;headerlink&#34; title=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;/a&gt;使用cloudflare的R2创建图床&lt;/h1&gt;&lt;h2 id=&#34;创建存储桶&#34;&gt;&lt;a href=&#34;#创建存储桶&#34; class=&#34;headerlink&#34; title=&#34;创建存储桶&#34;&gt;&lt;/a&gt;创建存储桶&lt;/h2&gt;&lt;p&gt;首先有一个cloudflare账号并且成功开通R2服务&lt;/p&gt;
&lt;p&gt;依次点击R2-&amp;gt;创建存储桶&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/8c361d6ac6f76ad87da98ce758a4261a.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入创建的桶，点击设置，下滑点击连接到域，example.com为你在cloudflare上托管的域名，会自动添加记录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e02d80f0f528eb474a327a3ee2aac1cc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;等待初始化成功就可以上传图片了并通过url访问了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/592642fec58d64822ca9dd28855095c9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传图片后点进去就能看到url&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/33de127f3053a3537919fae0a5b35c61.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装PicGo&#34;&gt;&lt;a href=&#34;#安装PicGo&#34; class=&#34;headerlink&#34; title=&#34;安装PicGo&#34;&gt;&lt;/a&gt;安装PicGo&lt;/h2&gt;&lt;p&gt;这个用于管理图片上传和浏览&lt;/p&gt;
&lt;p&gt;github仓库地址&lt;a href=&#34;https://github.com/Molunerfinn/PicGo&#34;&gt;Releases · Molunerfinn/PicGo (github.com)&lt;/a&gt;下载安装&lt;/p&gt;
&lt;p&gt;要先下载node.js环境，看往期文章&lt;/p&gt;
&lt;p&gt;完成后打开软件进入插件搜索&lt;code&gt;S3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/9db03c02e835473d6d06852a17c625b4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置picgo&lt;/p&gt;
&lt;p&gt;先创建API令牌&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/658d705739daffbba58141c804c382d5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后像这样设置，创建完成记得保存密钥&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3532bc2477a125fef6ac1db367b602d0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;保存密钥后关闭&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5d17e288bc348b17904a78a2b0d48ae0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开软件，+号添加配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/22d21e489a73ad311ebd53ec422faee8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3ca6c26f83e255df9dce765281e8a034.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到这个S3API&lt;/p&gt;
&lt;p&gt;如下填写&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e2d3e9e11a19b0a3e1e2c6a7538ee923.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/2b5992966ed9d88fe80c8f1b8d242fac.png&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/03/msys2-jiao-cheng/</guid>
            <title>MSYS2教程</title>
            <link>https://0xdadream.github.io/2024/07/03/msys2-jiao-cheng/</link>
            <category>教程</category>
            <category>环境</category>
            <pubDate>Wed, 03 Jul 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;MSYS2教程&#34;&gt;&lt;a href=&#34;#MSYS2教程&#34; class=&#34;headerlink&#34; title=&#34;MSYS2教程&#34;&gt;&lt;/a&gt;MSYS2教程&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&#34;一、安装-MSYS2&#34;&gt;&lt;a href=&#34;#一、安装-MSYS2&#34; class=&#34;headerlink&#34; title=&#34;一、安装 MSYS2&#34;&gt;&lt;/a&gt;&lt;strong&gt;一、安装 MSYS2&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载 MSYS2 安装程序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 MSYS2 官方网站：&lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2 官网&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;下载适合你的系统的 MSYS2 安装程序（通常是 64 位版本）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装 MSYS2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行下载的安装程序。&lt;/li&gt;
&lt;li&gt;按照提示完成安装，建议将 MSYS2 安装到 &lt;code&gt;C:\msys64&lt;/code&gt; 等不包含空格或特殊字符的路径。&lt;/li&gt;
&lt;li&gt;安装完成后，点击 &lt;strong&gt;Finish&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;初始化 MSYS2 环境&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装完成后运行 &lt;code&gt;C:\msys64\msys2.exe&lt;/code&gt; 启动 MSYS2 环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新核心库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Syu&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果提示需要关闭终端，关闭后重新打开 MSYS2 终端并继续更新：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Su&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;二、将-MSYS2-添加到终端&#34;&gt;&lt;a href=&#34;#二、将-MSYS2-添加到终端&#34; class=&#34;headerlink&#34; title=&#34;二、将 MSYS2 添加到终端&#34;&gt;&lt;/a&gt;&lt;strong&gt;二、将 MSYS2 添加到终端&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;为 Windows Terminal 添加配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;运行 Windows Terminal 后，按照下面步骤新增 Msys2 shell&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击标题栏右边的向下指示符，选择 &lt;code&gt;Settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;左边侧栏，下边，点击 &lt;code&gt;Add a new profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;选择一个已经存在的 shell，点击 &lt;code&gt;Duplicate&lt;/code&gt;，即基于原存 shell 创建新 shell&lt;/li&gt;
&lt;li&gt;主要设置项&lt;ul&gt;
&lt;li&gt;Name: 如 &lt;code&gt;MSYS / MSYS2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Command line: &lt;code&gt;C:/msys64/msys2_shell.cmd -defterm -here -no-start -use-full-path -msys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Starting directory: &lt;code&gt;C:/msys64/home/%USERNAME%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Icon: &lt;code&gt;C:/msys64/msys2.ico&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;Save&lt;/code&gt; 保存&lt;/li&gt;
&lt;li&gt;要添加minge64，直接修改最后-msys为-ming64，其他同理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;为 VS Code 配置终端&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开 VS Code，按 &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; 打开命令面板，选择 “Preferences: Open Settings (JSON)”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token property&#34;&gt;&#34;terminal.integrated.profiles.windows&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;MSYS2&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;path&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;C:/msys64/msys2_shell.cmd&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;args&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-defterm, -here, -no-start, -use-full-path, -msys&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token property&#34;&gt;&#34;terminal.integrated.defaultProfile.windows&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;MSYS2&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;全局访问 MSYS2&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果希望从 CMD、PowerShell 等终端中也能使用 MSYS2 工具，确保 &lt;code&gt;C:\msys64\usr\bin&lt;/code&gt;被添加到系统环境变量 Path中：&lt;ul&gt;
&lt;li&gt;右键 &lt;strong&gt;此电脑&lt;/strong&gt; &amp;gt; &lt;strong&gt;属性&lt;/strong&gt; &amp;gt; &lt;strong&gt;高级系统设置&lt;/strong&gt; &amp;gt; &lt;strong&gt;环境变量&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在“系统变量”中找到 Path，点击“编辑”，添加：&lt;code&gt;C:\msys64\usr\bin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;保存后，重启终端即可在任意终端中访问 MSYS2 工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;三、MSYS2-基础操作&#34;&gt;&lt;a href=&#34;#三、MSYS2-基础操作&#34; class=&#34;headerlink&#34; title=&#34;三、MSYS2 基础操作&#34;&gt;&lt;/a&gt;&lt;strong&gt;三、MSYS2 基础操作&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;MSYS2 提供三个核心环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MSYS&lt;/strong&gt;：适用于开发 Windows 工具。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MINGW32&lt;/strong&gt;：用于 32 位 Windows 应用程序开发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MINGW64&lt;/strong&gt;：用于 64 位 Windows 应用程序开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;常见命令&#34;&gt;&lt;a href=&#34;#常见命令&#34; class=&#34;headerlink&#34; title=&#34;常见命令&#34;&gt;&lt;/a&gt;&lt;strong&gt;常见命令&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;切换到 MSYS 环境&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;msys2_shell.cmd &lt;span class=&#34;token parameter variable&#34;&gt;-msys&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;切换到 64 位 MINGW 环境&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;msys2_shell.cmd &lt;span class=&#34;token parameter variable&#34;&gt;-mingw64&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;切换到 32 位 MINGW 环境&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;msys2_shell.cmd &lt;span class=&#34;token parameter variable&#34;&gt;-mingw32&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;四、MSYS2-包管理&#34;&gt;&lt;a href=&#34;#四、MSYS2-包管理&#34; class=&#34;headerlink&#34; title=&#34;四、MSYS2 包管理&#34;&gt;&lt;/a&gt;&lt;strong&gt;四、MSYS2 包管理&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;MSYS2 使用 &lt;code&gt;pacman&lt;/code&gt; 包管理器来管理软件包。常用命令如下：&lt;/p&gt;
&lt;h4 id=&#34;1-更新系统&#34;&gt;&lt;a href=&#34;#1-更新系统&#34; class=&#34;headerlink&#34; title=&#34;1. 更新系统&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 更新系统&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;更新软件包数据库并升级所有包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Syu&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-搜索包&#34;&gt;&lt;a href=&#34;#2-搜索包&#34; class=&#34;headerlink&#34; title=&#34;2. 搜索包&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 搜索包&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;搜索某个软件包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Ss&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;包名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如，搜索 &lt;code&gt;gcc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Ss&lt;/span&gt; gcc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-安装包&#34;&gt;&lt;a href=&#34;#3-安装包&#34; class=&#34;headerlink&#34; title=&#34;3. 安装包&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 安装包&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;安装某个软件包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-S&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;包名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如，安装 &lt;code&gt;gcc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-S&lt;/span&gt; mingw-w64-x86_64-gcc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-卸载包&#34;&gt;&lt;a href=&#34;#4-卸载包&#34; class=&#34;headerlink&#34; title=&#34;4. 卸载包&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 卸载包&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;卸载某个软件包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;包名&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如，卸载 &lt;code&gt;gcc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; mingw-w64-x86_64-gcc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-查看已安装包&#34;&gt;&lt;a href=&#34;#5-查看已安装包&#34; class=&#34;headerlink&#34; title=&#34;5. 查看已安装包&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 查看已安装包&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;查看已安装的软件包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Q&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-清理缓存&#34;&gt;&lt;a href=&#34;#6-清理缓存&#34; class=&#34;headerlink&#34; title=&#34;6. 清理缓存&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 清理缓存&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;清理过时的缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Sc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;7-升级或者降级本地文件安装的包&#34;&gt;&lt;a href=&#34;#7-升级或者降级本地文件安装的包&#34; class=&#34;headerlink&#34; title=&#34;7. 升级或者降级本地文件安装的包&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;升级或者降级本地文件安装的包&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果存储库中没有合适的旧版本，您可以通过以下方式获取旧版本：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问 MSYS2 包存储库&lt;a href=&#34;https://repo.msys2.org/%E3%80%82&#34;&gt;https://repo.msys2.org/。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;搜索 &lt;code&gt;openssl&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;找到适合的版本（例如 1.1.x）。&lt;/li&gt;
&lt;li&gt;下载 &lt;code&gt;.pkg.tar.zst&lt;/code&gt; 文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-U&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;文件路径&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从本地文件安装或升级软件包。&lt;br&gt;例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-U&lt;/span&gt; /path/to/package.pkg.tar.zst&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找不到版本，可以去官方网站找，下载压缩包，解压进入目录执行(使用mingw64环境)&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./config &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/mingw64
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-查看依赖链&#34;&gt;&lt;a href=&#34;#8-查看依赖链&#34; class=&#34;headerlink&#34; title=&#34;8. 查看依赖链&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;查看依赖链&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;查看哪些软件包依赖于 &lt;code&gt;mingw-w64-x86_64-openssl&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pactree &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; mingw-w64-x86_64-openssl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;9-强制卸载&#34;&gt;&lt;a href=&#34;#9-强制卸载&#34; class=&#34;headerlink&#34; title=&#34;9. 强制卸载&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;强制卸载&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;您可以强制删除 &lt;code&gt;mingw-w64-x86_64-openssl&lt;/code&gt; 及其依赖软件，但请注意，这可能会导致其他软件无法正常工作。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Rdd&lt;/span&gt; mingw-w64-x86_64-openssl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-卸载相关依赖&#34;&gt;&lt;a href=&#34;#10-卸载相关依赖&#34; class=&#34;headerlink&#34; title=&#34;10. 卸载相关依赖&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;卸载相关依赖&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;卸载所有依赖软件（如 &lt;code&gt;mingw-w64-x86_64-python&lt;/code&gt;）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-Rns&lt;/span&gt; mingw-w64-x86_64-python&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;五、安装开发工具示例&#34;&gt;&lt;a href=&#34;#五、安装开发工具示例&#34; class=&#34;headerlink&#34; title=&#34;五、安装开发工具示例&#34;&gt;&lt;/a&gt;&lt;strong&gt;五、安装开发工具示例&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;安装-GCC-编译器&#34;&gt;&lt;a href=&#34;#安装-GCC-编译器&#34; class=&#34;headerlink&#34; title=&#34;安装 GCC 编译器&#34;&gt;&lt;/a&gt;&lt;strong&gt;安装 GCC 编译器&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 GCC：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-S&lt;/span&gt; mingw-w64-x86_64-gcc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;gcc --version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你希望在 CMD 或 PowerShell 中直接使用 GCC：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开系统的环境变量设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将以下路径添加到用户或系统的 Path中：&lt;code&gt;C:\msys64\mingw64\bin&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存后，打开 CMD 或 PowerShell，运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;安装-Python&#34;&gt;&lt;a href=&#34;#安装-Python&#34; class=&#34;headerlink&#34; title=&#34;安装 Python&#34;&gt;&lt;/a&gt;&lt;strong&gt;安装 Python&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 Python：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-S&lt;/span&gt; mingw-w64-x86_64-python&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;python &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;安装-Node-js&#34;&gt;&lt;a href=&#34;#安装-Node-js&#34; class=&#34;headerlink&#34; title=&#34;安装 Node.js&#34;&gt;&lt;/a&gt;&lt;strong&gt;安装 Node.js&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 Node.js：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-S&lt;/span&gt; mingw-w64-x86_64-nodejs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
