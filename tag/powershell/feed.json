{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"powershell\" tag",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2025/02/15/conda-zai-powershell7.5-zhi-xing-chu-xian-wen-ti/",
            "url": "https://0xdadream.github.io/2025/02/15/conda-zai-powershell7.5-zhi-xing-chu-xian-wen-ti/",
            "title": "conda在powershell7.5执行出现问题",
            "date_published": "2025-02-15T04:25:00.000Z",
            "content_html": "<h1 id=\"conda在powershell7-5执行出现问题\"><a href=\"#conda在powershell7-5执行出现问题\" class=\"headerlink\" title=\"conda在powershell7.5执行出现问题\"></a>conda在powershell7.5执行出现问题</h1><h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>执行命令结果如下，不能达到预期</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda\nusage: conda-script.py <span class=\"token punctuation\">[</span>-h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-v<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>--no-plugins<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-V<span class=\"token punctuation\">]</span> COMMAND <span class=\"token punctuation\">..</span>.\nconda-script.py: error: argument COMMAND: invalid choice: <span class=\"token string\">''</span> <span class=\"token punctuation\">(</span>choose from <span class=\"token string\">'activate'</span>, <span class=\"token string\">'clean'</span>, <span class=\"token string\">'commands'</span>, <span class=\"token string\">'compare'</span>, <span class=\"token string\">'config'</span>, <span class=\"token string\">'create'</span>, <span class=\"token string\">'deactivate'</span>, <span class=\"token string\">'env'</span>, <span class=\"token string\">'export'</span>, <span class=\"token string\">'info'</span>, <span class=\"token string\">'init'</span>, <span class=\"token string\">'install'</span>, <span class=\"token string\">'list'</span>, <span class=\"token string\">'notices'</span>, <span class=\"token string\">'package'</span>, <span class=\"token string\">'build'</span>, <span class=\"token string\">'content-trust'</span>, <span class=\"token string\">'convert'</span>, <span class=\"token string\">'debug'</span>, <span class=\"token string\">'develop'</span>, <span class=\"token string\">'doctor'</span>, <span class=\"token string\">'index'</span>, <span class=\"token string\">'inspect'</span>, <span class=\"token string\">'metapackage'</span>, <span class=\"token string\">'render'</span>, <span class=\"token string\">'repoquery'</span>, <span class=\"token string\">'skeleton'</span>, <span class=\"token string\">'pack'</span>, <span class=\"token string\">'repo'</span>, <span class=\"token string\">'token'</span>, <span class=\"token string\">'server'</span>, <span class=\"token string\">'remove'</span>, <span class=\"token string\">'uninstall'</span>, <span class=\"token string\">'rename'</span>, <span class=\"token string\">'run'</span>, <span class=\"token string\">'search'</span>, <span class=\"token string\">'update'</span>, <span class=\"token string\">'upgrade'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>升级版本后引起的问题，具体等修复</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>powershell版本降级，到<a href=\"https://github.com/PowerShell/PowerShell/releases/tag/v7.4.7\">Release v7.4.7 Release of PowerShell · PowerShell/PowerShell</a>下载msi文件，安装老版本，7.5无所谓删不删，若要删除建议先备份”C:\\Users\\xxx\\Documents\\PowerShell”目录下的文件，这是所有配置文件，微软商店下载的powershell和github安装的powershell共用这个配置文件</p>\n<h3 id=\"最新\"><a href=\"#最新\" class=\"headerlink\" title=\"最新\"></a>最新</h3><p>更新conda版本，执行命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># update to latest</span>\nconda update <span class=\"token parameter variable\">-n</span> base conda\n\n<span class=\"token comment\"># or update to explicit version</span>\nconda <span class=\"token function\">install</span> <span class=\"token parameter variable\">-n</span> base <span class=\"token assign-left variable\">conda</span><span class=\"token operator\">=</span><span class=\"token number\">25.1</span>.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://github.com/PowerShell/PowerShell/issues/24942\">标题： PowerShell 7.5.0 中的 Conda 环境激活问题 ·问题 #24942 ·PowerShell/PowerShell</a></p>\n<p><a href=\"https://github.com/PowerShell/PowerShell/issues/24869\">Conda does not run as expected on PowerShell 7.5.0 · Issue #24869 · PowerShell/PowerShell</a></p>\n<p><a href=\"https://github.com/conda/conda/issues/14292\">在 Powershell 7.5 预览版 4 上，在“conda activate base”之后，“Env：_CE_CONDA”和“Env：_CE_M”再次出现。·问题 #14292 ·conda/康达</a></p>\n",
            "tags": [
                "conda",
                "powershell"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/12/21/geng-gai-windows-powershell-de-zhi-xing-ce-lue/",
            "url": "https://0xdadream.github.io/2024/12/21/geng-gai-windows-powershell-de-zhi-xing-ce-lue/",
            "title": "更改 Windows PowerShell 的执行策略",
            "date_published": "2024-12-21T04:25:00.000Z",
            "content_html": "<h1 id=\"更改-Windows-PowerShell-的执行策略\"><a href=\"#更改-Windows-PowerShell-的执行策略\" class=\"headerlink\" title=\"更改 Windows PowerShell 的执行策略\"></a>更改 Windows PowerShell 的执行策略</h1><h3 id=\"1-打开-PowerShell-以管理员身份运行\"><a href=\"#1-打开-PowerShell-以管理员身份运行\" class=\"headerlink\" title=\"1. 打开 PowerShell 以管理员身份运行\"></a>1. 打开 PowerShell 以管理员身份运行</h3><p>首先，您需要以管理员身份运行 PowerShell：</p>\n<ul>\n<li>按 <code>Win + X</code> 并选择“Windows PowerShell (管理员)”。</li>\n<li>如果您使用的是较新的 Windows 版本，也可以搜索“PowerShell”，右键点击并选择“以管理员身份运行”。</li>\n</ul>\n<h3 id=\"2-检查当前执行策略\"><a href=\"#2-检查当前执行策略\" class=\"headerlink\" title=\"2. 检查当前执行策略\"></a>2. 检查当前执行策略</h3><p>在更改执行策略之前，您可以查看当前的执行策略设置，执行以下命令：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-ExecutionPolicy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>该命令将返回当前的执行策略，可能的输出包括：</p>\n<ul>\n<li><code>Restricted</code>（默认策略，不允许执行任何脚本）</li>\n<li><code>RemoteSigned</code>（本地脚本可以运行，下载的脚本需要签名）</li>\n<li><code>Unrestricted</code>（允许所有脚本运行）</li>\n<li><code>ByPass</code>（完全忽略执行策略）</li>\n</ul>\n<h3 id=\"3-修改执行策略\"><a href=\"#3-修改执行策略\" class=\"headerlink\" title=\"3. 修改执行策略\"></a>3. 修改执行策略</h3><p>要更改执行策略，可以使用 <code>Set-ExecutionPolicy</code> 命令。例如，您可以将执行策略更改为 <code>RemoteSigned</code>，这样可以运行本地脚本并允许下载的签名脚本运行：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set-ExecutionPolicy</span> RemoteSigned<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果您希望设置为不限制脚本执行，可以使用 <code>Unrestricted</code>：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set-ExecutionPolicy</span> Unrestricted<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者，如果您希望脚本完全不受限制（但存在安全风险），可以使用 <code>Bypass</code>：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set-ExecutionPolicy</span> Bypass<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"4-确认更改\"><a href=\"#4-确认更改\" class=\"headerlink\" title=\"4. 确认更改\"></a>4. 确认更改</h3><p>更改执行策略后，系统会要求您确认。输入 <code>Y</code> 进行确认并按回车。</p>\n<h3 id=\"5-检查执行策略更改是否生效\"><a href=\"#5-检查执行策略更改是否生效\" class=\"headerlink\" title=\"5. 检查执行策略更改是否生效\"></a>5. 检查执行策略更改是否生效</h3><p>再次执行以下命令来确保策略已更新：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-ExecutionPolicy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"6-了解不同的执行策略\"><a href=\"#6-了解不同的执行策略\" class=\"headerlink\" title=\"6. 了解不同的执行策略\"></a>6. 了解不同的执行策略</h3><ul>\n<li><code>Restricted</code>：不允许运行任何脚本（这是默认设置）。</li>\n<li><code>RemoteSigned</code>：允许本地脚本运行，但从互联网下载的脚本需要有效的签名才能运行。</li>\n<li><code>Unrestricted</code>：允许所有脚本运行，但会在运行下载的脚本时给出警告。</li>\n<li><code>Bypass</code>：完全忽略执行策略（适用于临时需求，但有安全隐患）。</li>\n<li><code>AllSigned</code>：要求所有脚本必须由可信的发布者签名，适用于更严格的安全要求。</li>\n</ul>\n<h3 id=\"7-恢复默认执行策略\"><a href=\"#7-恢复默认执行策略\" class=\"headerlink\" title=\"7. 恢复默认执行策略\"></a>7. 恢复默认执行策略</h3><p>如果您希望恢复默认的执行策略，只需执行：</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set-ExecutionPolicy</span> Restricted<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>",
            "tags": [
                "windows",
                "powershell"
            ]
        }
    ]
}