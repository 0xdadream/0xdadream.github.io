{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"tools\" tag",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2025/01/17/linux-she-zhi-matplotlib-zhong-wen-zi-ti/",
            "url": "https://0xdadream.github.io/2025/01/17/linux-she-zhi-matplotlib-zhong-wen-zi-ti/",
            "title": "linux设置matplotlib中文字体",
            "date_published": "2025-01-17T04:25:00.000Z",
            "content_html": "<h1 id=\"linux设置matplotlib中文字体\"><a href=\"#linux设置matplotlib中文字体\" class=\"headerlink\" title=\"linux设置matplotlib中文字体\"></a>linux设置matplotlib中文字体</h1><p>在Linux上设置Matplotlib使用中文字体的步骤如下：</p>\n<h3 id=\"步骤-1-安装中文字体\"><a href=\"#步骤-1-安装中文字体\" class=\"headerlink\" title=\"步骤 1: 安装中文字体\"></a>步骤 1: 安装中文字体</h3><p>去<a href=\"https://github.com/StellarCN/scp_zh/blob/master/fonts/SimHei.ttf\">scp_zh/fonts/SimHei.ttf at master · StellarCN/scp_zh</a>下载中文字体</p>\n<h4 id=\"安装SimHei字体\"><a href=\"#安装SimHei字体\" class=\"headerlink\" title=\"安装SimHei字体\"></a>安装SimHei字体</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">import matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport pandas as pd\n\n# 设置中文字体\nrcParams['font.sans-serif'] = ['SimHei']  # 或者使用 'Microsoft YaHei'\nrcParams['axes.unicode_minus'] = False  # 解决负号显示问题\n\n# 示例数据\ndata = {'日期': ['2024-01-01', '2024-01-02', '2024-01-03'],\n        '销售额': [150, 200, 250]}\ndf = pd.DataFrame(data)\n\n# 绘制图表\nplt.plot(df['日期'], df['销售额'])\nplt.title('销售额趋势')\nplt.xlabel('日期')\nplt.ylabel('销售额')\nplt.xticks(rotation=45)\nplt.show()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行命令找到配置目录</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib\nmatplotlib<span class=\"token punctuation\">.</span>matplotlib_fname<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># xxx/matplotlib/matplotlibrc</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修改文件<code>matplotlibrc</code>，找到<code>font.sans-serif: DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif, SimHei</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim matplotlibrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>SimHei</code>就是我添加的中文字体</p>\n<p>删除缓存</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~/.cache/matplotlib\n<span class=\"token function\">rm</span> * <span class=\"token parameter variable\">-r</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"步骤-2-配置Matplotlib使用中文字体\"><a href=\"#步骤-2-配置Matplotlib使用中文字体\" class=\"headerlink\" title=\"步骤 2: 配置Matplotlib使用中文字体\"></a>步骤 2: 配置Matplotlib使用中文字体</h3><p>测试代码</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">from</span> matplotlib <span class=\"token keyword\">import</span> rcParams\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># 设置中文字体</span>\nrcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'font.sans-serif'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'SimHei'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 或者使用 'Microsoft YaHei'</span>\nrcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'axes.unicode_minus'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># 解决负号显示问题</span>\n\n<span class=\"token comment\"># 示例数据</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'日期'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'2024-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2024-01-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2024-01-03'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'销售额'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制图表</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'日期'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'销售额'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'销售额趋势'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'日期'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'销售额'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span>rotation<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2025/01/12/pandas-shi-yong/",
            "url": "https://0xdadream.github.io/2025/01/12/pandas-shi-yong/",
            "title": "pandas使用",
            "date_published": "2025-01-12T04:25:00.000Z",
            "content_html": "<h1 id=\"pandas使用\"><a href=\"#pandas使用\" class=\"headerlink\" title=\"pandas使用\"></a>pandas使用</h1><p><strong>教程框架：</strong></p>\n<ol>\n<li><strong>Pandas 简介与安装</strong><ul>\n<li>什么是 pandas？</li>\n<li>为什么使用 pandas？</li>\n<li>如何安装 pandas？</li>\n</ul>\n</li>\n<li><strong>Pandas 数据结构：Series</strong><ul>\n<li>Series 的创建</li>\n<li>Series 的索引与切片</li>\n<li>Series 的基本操作（算术、逻辑、函数应用）</li>\n<li>Series 的常用属性和方法</li>\n</ul>\n</li>\n<li><strong>Pandas 数据结构：DataFrame</strong><ul>\n<li>DataFrame 的创建</li>\n<li>DataFrame 的索引与选择数据</li>\n<li>DataFrame 的基本操作<ul>\n<li>添加、删除列</li>\n<li>修改数据</li>\n<li>排序</li>\n</ul>\n</li>\n<li>DataFrame 的常用属性和方法</li>\n<li>数据清洗</li>\n</ul>\n</li>\n<li><strong>Pandas 数据操作</strong><ul>\n<li>数据分组 (GroupBy)</li>\n<li>数据聚合 (Aggregation)</li>\n<li>数据合并 (Merge, Join)</li>\n<li>数据连接 (Concat)</li>\n<li>数据透视表 (Pivot Table)</li>\n</ul>\n</li>\n<li><strong>Pandas 文件读写</strong><ul>\n<li>读取 CSV 文件</li>\n<li>读取 Excel 文件</li>\n<li>读取其他类型文件</li>\n<li>写入文件</li>\n</ul>\n</li>\n<li><strong>Pandas 时间序列数据处理</strong><ul>\n<li>时间戳 (Timestamp)</li>\n<li>时间范围 (Date Range)</li>\n<li>时间重采样 (Resampling)</li>\n</ul>\n</li>\n<li><strong>Pandas 高级应用</strong><ul>\n<li>apply 和 applymap 函数</li>\n<li>窗口函数</li>\n<li>数据可视化</li>\n</ul>\n</li>\n<li><strong>总结与进阶</strong><ul>\n<li>常用技巧</li>\n<li>学习资源</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-Pandas-简介与安装\"><a href=\"#1-Pandas-简介与安装\" class=\"headerlink\" title=\"1. Pandas 简介与安装\"></a><strong>1. Pandas 简介与安装</strong></h3><p><strong>1.1 什么是 pandas？</strong></p>\n<p>Pandas 是一个强大的 Python 数据分析库，它提供了高效的数据结构和数据分析工具。Pandas 的核心是两种数据结构：Series 和 DataFrame，它们使得数据处理变得简单快捷。</p>\n<ul>\n<li><strong>Series:</strong> 一维的、带标签的数组，类似于带索引的列表。</li>\n<li><strong>DataFrame:</strong> 二维的、表格型的数据结构，可以看作是 Series 的容器。</li>\n</ul>\n<p><strong>1.2 为什么使用 pandas？</strong></p>\n<ul>\n<li><strong>数据处理能力强:</strong> Pandas 提供了各种数据操作功能，如数据清洗、转换、切片、聚合、合并等。</li>\n<li><strong>高效的数据结构:</strong> Series 和 DataFrame 的设计使得数据操作和分析速度快。</li>\n<li><strong>与 NumPy 集成:</strong> Pandas 基于 NumPy 构建，可以无缝地与 NumPy 数组进行交互。</li>\n<li><strong>文件读写方便:</strong> Pandas 可以轻松读取和写入各种格式的文件，如 CSV、Excel、JSON、SQL 等。</li>\n<li><strong>数据可视化支持:</strong> Pandas 可以与 Matplotlib 等可视化库结合，方便进行数据可视化。</li>\n<li><strong>易用性:</strong> Pandas 的 API 设计简洁易懂，上手快。</li>\n</ul>\n<p><strong>1.3 如何安装 pandas？</strong></p>\n<p>推荐使用 pip 来安装 pandas：</p>\n<pre class=\"line-numbers language-Bash\" data-language=\"Bash\"><code class=\"language-Bash\">pip install pandas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果你使用的是 Anaconda，pandas 通常会预装，如果没有，也可以用 conda 安装：</p>\n<pre class=\"line-numbers language-Bash\" data-language=\"Bash\"><code class=\"language-Bash\">conda install pandas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>安装验证:</strong></p>\n<p>打开你的 Python 解释器或 Jupyter Notebook，输入以下代码：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>__version__<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>如果正确打印出 pandas 的版本号，就说明安装成功了。</p>\n<hr>\n<h3 id=\"2-Pandas-数据结构：Series\"><a href=\"#2-Pandas-数据结构：Series\" class=\"headerlink\" title=\"2. Pandas 数据结构：Series\"></a><strong>2. Pandas 数据结构：Series</strong></h3><p><strong>2.1 Series 的创建</strong></p>\n<p>Series 是一种一维的、带有标签（索引）的数据结构。它可以存储各种数据类型，如整数、浮点数、字符串、布尔值等。</p>\n<p><strong>2.1.1 从列表创建 Series</strong></p>\n<p>最简单的创建方式是从 Python 的列表创建：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">]</span>\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0</span>    <span class=\"token number\">10</span>\n<span class=\"token number\">1</span>    <span class=\"token number\">20</span>\n<span class=\"token number\">2</span>    <span class=\"token number\">30</span>\n<span class=\"token number\">3</span>    <span class=\"token number\">40</span>\n<span class=\"token number\">4</span>    <span class=\"token number\">50</span>\ndtype: int64\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'pandas.core.series.Series'</span><span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>默认情况下，Series 会自动创建从 0 开始的整数索引。</li>\n<li>dtype: int64 表示数据类型是 64 位整数。</li>\n</ul>\n<p><strong>2.1.2 从 NumPy 数组创建 Series</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\narr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0</span>    <span class=\"token number\">1.1</span>\n<span class=\"token number\">1</span>    <span class=\"token number\">2.2</span>\n<span class=\"token number\">2</span>    <span class=\"token number\">3.3</span>\n<span class=\"token number\">3</span>    <span class=\"token number\">4.4</span>\n<span class=\"token number\">4</span>    <span class=\"token number\">5.5</span>\ndtype: float64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>dtype: float64 表示数据类型是 64 位浮点数。</li>\n</ul>\n<p><strong>2.1.3 从字典创建 Series</strong></p>\n<p>字典的键会成为 Series 的索引，值会成为 Series 的数据：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">}</span>\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">a    <span class=\"token number\">100</span>\nb    <span class=\"token number\">200</span>\nc    <span class=\"token number\">300</span>\ndtype: int64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.1.4 自定义索引</strong></p>\n<p>可以在创建 Series 时指定索引：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>\nindex <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">]</span>\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>index<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">x    <span class=\"token number\">10</span>\ny    <span class=\"token number\">20</span>\nz    <span class=\"token number\">30</span>\ndtype: int64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.2 Series 的索引与切片</strong></p>\n<p>类似于列表和字典，可以使用索引来访问 Series 的元素。</p>\n<p><strong>2.2.1 通过位置索引访问</strong></p>\n<p>使用默认的整数索引：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出 10</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 b    20</span>\n             <span class=\"token comment\">#      c    30</span>\n             <span class=\"token comment\">#      dtype: int64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.2.2 通过自定义索引访问</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出 10</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 b    20</span>\n                <span class=\"token comment\">#      c    30</span>\n                <span class=\"token comment\">#      d    40</span>\n                <span class=\"token comment\">#      dtype: int64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.3 Series 的基本操作</strong></p>\n<p><strong>2.3.1 算术运算</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ns1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ns2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">+</span> s2<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 加法</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">*</span> s2<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 乘法</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s2 <span class=\"token operator\">/</span> s1<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 除法</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Series 会按照索引对齐进行计算。</p>\n<p><strong>2.3.2 逻辑运算</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 布尔值 Series</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>s <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 选择大于20的元素</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.3.3 函数应用</strong></p>\n<p>可以使用 apply() 方法将函数应用于 Series 的每个元素：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>square<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.4 Series 的常用属性和方法</strong></p>\n<ul>\n<li>values: 返回 Series 的值，以 NumPy 数组的形式。</li>\n<li>index: 返回 Series 的索引。</li>\n<li>dtype: 返回 Series 的数据类型。</li>\n<li>size: 返回 Series 的元素个数。</li>\n<li>unique(): 返回 Series 中唯一的值。</li>\n<li>value_counts(): 返回每个值出现的次数。</li>\n<li>head(n): 返回前 n 个元素。</li>\n<li>tail(n): 返回后 n 个元素。</li>\n<li>sort_values(): 对 Series 的值进行排序。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ns <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span>      <span class=\"token comment\"># 输出 [10 20 10 30 20]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 输出 RangeIndex(start=0, stop=5, step=1)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 输出 int64</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>        <span class=\"token comment\"># 输出 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 输出 [10 20 30]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#输出 10    2</span>\n                         <span class=\"token comment\">#  20    2</span>\n                         <span class=\"token comment\">#  30    1</span>\n                         <span class=\"token comment\"># dtype: int64</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 输出 0    10</span>\n                         <span class=\"token comment\">#      1    20</span>\n                         <span class=\"token comment\">#      dtype: int64</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 0    10</span>\n                       <span class=\"token comment\">#      2    10</span>\n                       <span class=\"token comment\">#      1    20</span>\n                       <span class=\"token comment\">#      4    20</span>\n                       <span class=\"token comment\">#      3    30</span>\n                       <span class=\"token comment\">#      dtype: int64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"3-Pandas-数据结构：DataFrame\"><a href=\"#3-Pandas-数据结构：DataFrame\" class=\"headerlink\" title=\"3. Pandas 数据结构：DataFrame\"></a><strong>3. Pandas 数据结构：DataFrame</strong></h3><p><strong>3.1 DataFrame 的创建</strong></p>\n<p>DataFrame 是一个二维的表格型数据结构，可以看作是 Series 的容器。它由行和列组成，每一列可以是不同的数据类型。</p>\n<p><strong>3.1.1 从字典创建 DataFrame</strong></p>\n<p>字典的键会成为 DataFrame 的列名，值会成为 DataFrame 的列数据：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">name  age      city\n<span class=\"token number\">0</span>    Alice   <span class=\"token number\">25</span>  New York\n<span class=\"token number\">1</span>      Bob   <span class=\"token number\">30</span>    London\n<span class=\"token number\">2</span>  Charlie   <span class=\"token number\">28</span>     Paris<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.1.2 从列表创建 DataFrame</strong></p>\n<p>可以使用列表的列表或 NumPy 数组创建 DataFrame，需要指定列名：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'New York'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'city'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">name  age      city\n<span class=\"token number\">0</span>    Alice   <span class=\"token number\">25</span>  New York\n<span class=\"token number\">1</span>      Bob   <span class=\"token number\">30</span>    London\n<span class=\"token number\">2</span>  Charlie   <span class=\"token number\">28</span>     Paris<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.1.3 从 Series 创建 DataFrame</strong></p>\n<p>可以将多个 Series 组合成一个 DataFrame：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\nname <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nage <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncity <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> age<span class=\"token punctuation\">,</span> <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> city<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">name  age      city\n<span class=\"token number\">0</span>    Alice   <span class=\"token number\">25</span>  New York\n<span class=\"token number\">1</span>      Bob   <span class=\"token number\">30</span>    London\n<span class=\"token number\">2</span>  Charlie   <span class=\"token number\">28</span>     Paris<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.2 DataFrame 的索引与选择数据</strong></p>\n<p><strong>3.2.1 选择列</strong></p>\n<p>可以使用列名来选择 DataFrame 的一列或多列：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 选择 'name' 列</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 选择 'name' 和 'age' 列</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.2.2 选择行</strong></p>\n<p>可以使用 loc 和 iloc 来选择行：</p>\n<ul>\n<li>loc：通过行标签（索引）选择行。</li>\n<li>iloc：通过行位置（整数索引）选择行。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 通过标签选择 Alice 这行，按标签</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 通过位置选择 第一行，按位置</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 选择前两行所有列</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 通过标签选择 Alice 到 Bob 行的所有列</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.2.3 选择特定元素</strong></p>\n<p>可以使用行和列的标签或位置来选择特定的元素：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 选择第 0 行 'name' 列的元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 选择第 0 行 第 0 列的元素</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.3 DataFrame 的基本操作</strong></p>\n<p><strong>3.3.1 添加列</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Female'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 添加 'gender' 列</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.3.2 删除列</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Female'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 删除 'gender' 列，axis=1 表示列</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.3.3 修改数据</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">26</span> <span class=\"token comment\"># 修改第 0 行 'age' 列的值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.3.4 排序</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 按 'age' 列降序排序</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>3.4 DataFrame 的常用属性和方法</strong></p>\n<ul>\n<li>shape: 返回 DataFrame 的形状（行数，列数）。</li>\n<li>index: 返回 DataFrame 的行索引。</li>\n<li>columns: 返回 DataFrame 的列索引。</li>\n<li>dtypes: 返回 DataFrame 每列的数据类型。</li>\n<li>head(n): 返回 DataFrame 的前 n 行。</li>\n<li>tail(n): 返回 DataFrame 的后 n 行。</li>\n<li>info(): 显示 DataFrame 的基本信息，包括列名，数据类型，非空值数量等。</li>\n<li>describe(): 返回 DataFrame 的统计摘要。</li>\n<li>dropna(): 删除包含缺失值的行或列。</li>\n<li>fillna(): 填充缺失值。</li>\n</ul>\n<p><strong>3.5 数据清洗</strong></p>\n<p>数据清洗是数据分析中重要的一步，包括处理缺失值、重复值等。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paris'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Unknown'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 检测缺失值</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 删除包含缺失值的行</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 删除重复行</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 用平均值填充年龄缺失值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"4-Pandas-数据操作\"><a href=\"#4-Pandas-数据操作\" class=\"headerlink\" title=\"4. Pandas 数据操作\"></a><strong>4. Pandas 数据操作</strong></h3><p><strong>4.1 数据分组 (GroupBy)</strong></p>\n<p>groupby() 方法允许你根据一个或多个列的值将 DataFrame 分组，然后可以对每个组进行聚合操作。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'category'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\ngrouped <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'category'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>grouped<span class=\"token punctuation\">.</span>groups<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 查看分组情况</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>grouped<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对每个分组求和</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>grouped<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对每个分组求平均值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>4.2 数据聚合 (Aggregation)</strong></p>\n<p>聚合操作是对分组后的数据进行汇总计算，如求和、平均值、最大值、最小值等。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'category'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ngrouped <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'category'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>grouped<span class=\"token punctuation\">.</span>agg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mean'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'max'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'min'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 同时执行多个聚合函数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>grouped<span class=\"token punctuation\">.</span>agg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 对指定列执行不同的聚合函数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>4.3 数据合并 (Merge, Join)</strong></p>\n<p>merge() 方法用于将两个 DataFrame 根据共同的列合并在一起，类似于 SQL 的 JOIN 操作。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndf1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'key'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'value1'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ndf2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'key'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'value2'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'原始数据'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================='</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 内连接(inner join)</span>\nmerged_inner <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inner join:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>merged_inner<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================='</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 左连接(left join)</span>\nmerged_left <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left join:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>merged_left<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================='</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 右连接(right join)</span>\nmerged_right <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right join:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>merged_right<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================='</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 外连接(outer join)</span>\nmerged_outer <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">'outer'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"outer join:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>merged_outer<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>4.4 数据连接 (Concat)</strong></p>\n<p>concat() 方法用于将两个或多个 DataFrame 沿着指定的轴连接在一起。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndf1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ndf2 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"原始数据:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================='</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 垂直连接(默认axis=0)</span>\nconcatenated_vertical <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ignore_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"垂直连接:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>concatenated_vertical<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'======================='</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 水平连接(axis=1)</span>\nconcatenated_horizontal <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"水平连接:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>concatenated_horizontal<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>4.5 数据透视表 (Pivot Table)</strong></p>\n<p>pivot_table() 方法用于创建数据透视表，可以根据指定的列对数据进行重塑和汇总。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'2023-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2023-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2023-01-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2023-01-02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2023-01-03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2023-01-03'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'product'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'sales'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\npivot_df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>pivot_table<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span><span class=\"token string\">'sales'</span><span class=\"token punctuation\">,</span> aggfunc<span class=\"token operator\">=</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">,</span> fill_value<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pivot_df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"5-Pandas-文件读写\"><a href=\"#5-Pandas-文件读写\" class=\"headerlink\" title=\"5. Pandas 文件读写\"></a><strong>5. Pandas 文件读写</strong></h3><p>Pandas 提供了强大的文件读写功能，可以方便地处理各种数据文件。</p>\n<p><strong>5.1 读取 CSV 文件</strong></p>\n<p>CSV (Comma Separated Values) 是一种常见的文本文件格式，用于存储表格数据。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># 读取 CSV 文件</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data.csv'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 指定分隔符，如果不是逗号，使用 sep 参数</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data.txt'</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读取指定列</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data.csv'</span><span class=\"token punctuation\">,</span> usecols<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>5.2 读取 Excel 文件</strong></p>\n<p>Pandas 可以直接读取 Excel 文件（.xls 和 .xlsx）。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># 读取 Excel 文件</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'data.xlsx'</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读取指定 sheet</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'data.xlsx'</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet2'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读取指定列</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'data.xlsx'</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">,</span> usecols<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>5.3 读取其他类型文件</strong></p>\n<p>Pandas 还支持读取其他类型的文件，例如：</p>\n<ul>\n<li><strong>JSON</strong>: pd.read_json()</li>\n<li><strong>HTML</strong>: pd.read_html()</li>\n<li><strong>SQL</strong>: pd.read_sql()</li>\n</ul>\n<p><strong>5.4 写入文件</strong></p>\n<p>可以将 DataFrame 写入到不同的文件格式。</p>\n<p><strong>5.4.1 写入 CSV 文件</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 写入 CSV 文件</span>\ndf<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'output.csv'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># index=False 表示不写入行索引</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>5.4.2 写入 Excel 文件</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 写入 Excel 文件</span>\ndf<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'output.xlsx'</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>5.4.3 写入其他类型文件</strong></p>\n<ul>\n<li><strong>JSON</strong>: df.to_json()</li>\n<li><strong>HTML</strong>: df.to_html()</li>\n<li><strong>SQL</strong>: df.to_sql()</li>\n</ul>\n<hr>\n<h3 id=\"6-Pandas-时间序列数据处理\"><a href=\"#6-Pandas-时间序列数据处理\" class=\"headerlink\" title=\"6. Pandas 时间序列数据处理\"></a><strong>6. Pandas 时间序列数据处理</strong></h3><p>Pandas 提供了强大的时间序列数据处理能力，可以方便地分析和处理时间序列数据。</p>\n<p><strong>6.1 时间戳 (Timestamp)</strong></p>\n<p>时间戳是表示特定时间点的对象。Pandas 可以使用 pd.Timestamp 创建时间戳。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># 创建时间戳</span>\nts <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Timestamp<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-26 12:30:00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 从字符串创建时间戳</span>\nts <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-26'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>6.2 时间范围 (Date Range)</strong></p>\n<p>pd.date_range() 方法可以创建指定时间范围内的一系列时间戳。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># 创建时间范围</span>\ndate_range <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-01'</span><span class=\"token punctuation\">,</span> periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>date_range<span class=\"token punctuation\">)</span>\n\ndate_range <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2023-10-10'</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>date_range<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>periods: 时间戳的数量。</li>\n<li>freq: 时间间隔，如 ‘D’ (天), ‘W’ (周), ‘M’ (月), ‘H’ (小时), ‘T’ (分钟), ‘S’ (秒) 等。</li>\n</ul>\n<p><strong>6.3 时间序列索引</strong></p>\n<p>可以将时间序列数据作为 DataFrame 或 Series 的索引，方便时间序列数据的分析。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 创建时间序列索引</span>\ndate_range <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-01'</span><span class=\"token punctuation\">,</span> periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nts <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>date_range<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 使用时间序列索引选择数据</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">[</span><span class=\"token string\">'2023-10-03'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">[</span><span class=\"token string\">'2023-10-01'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'2023-10-05'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>6.4 时间重采样 (Resampling)</strong></p>\n<p>resample() 方法可以对时间序列数据进行重采样，例如，将数据从天转换为周或月。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndate_range <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-01'</span><span class=\"token punctuation\">,</span> periods<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\nts <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>date_range<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 将日数据重采样为周数据</span>\nweekly_ts <span class=\"token operator\">=</span> ts<span class=\"token punctuation\">.</span>resample<span class=\"token punctuation\">(</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>weekly_ts<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 将日数据重采样为月数据</span>\nmonthly_ts <span class=\"token operator\">=</span> ts<span class=\"token punctuation\">.</span>resample<span class=\"token punctuation\">(</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>monthly_ts<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>.mean()：计算重采样后的平均值。</li>\n<li>.sum()：计算重采样后的总和。</li>\n<li>.min()：计算重采样后的最小值。</li>\n<li>.max()：计算重采样后的最大值。</li>\n<li>.first()：计算重采样后的第一个值。</li>\n<li>.last()：计算重采样后的最后一个值。</li>\n</ul>\n<p><strong>6.5 时间序列常用方法</strong></p>\n<ul>\n<li>shift()：移动时间序列数据。</li>\n<li>diff()：计算时间序列数据的差分。</li>\n<li>asfreq()：转换为指定频率。</li>\n<li>rolling()：计算滑动窗口统计量。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndate_range <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span><span class=\"token string\">'2023-10-01'</span><span class=\"token punctuation\">,</span> periods<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> freq<span class=\"token operator\">=</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\nts <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>date_range<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">.</span>shift<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 向下移动两个时间单位</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">.</span>diff<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 计算一阶差分</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">.</span>asfreq<span class=\"token punctuation\">(</span><span class=\"token string\">'H'</span><span class=\"token punctuation\">,</span> fill_value<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#转换为小时频率</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">.</span>rolling<span class=\"token punctuation\">(</span>window<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 计算窗口为 3 的移动平均</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"7-Pandas-高级应用\"><a href=\"#7-Pandas-高级应用\" class=\"headerlink\" title=\"7. Pandas 高级应用\"></a><strong>7. Pandas 高级应用</strong></h3><p><strong>7.1.1 apply() 函数</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 对 Series 应用函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>square<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 对 DataFrame 的行或列应用函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">row_sum</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> row<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>row_sum<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对每一行应用求和操作</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>row_sum<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对每一列应用求和操作</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>7.1.2 applymap() 函数</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 对 DataFrame 的每个元素应用函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_one</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>applymap<span class=\"token punctuation\">(</span>add_one<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>7.2 窗口函数</strong></p>\n<p>窗口函数可以对数据窗口进行计算，例如移动平均、滚动求和等。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 移动平均</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'rolling_mean'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rolling<span class=\"token punctuation\">(</span>window<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 累加</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'cumsum'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 窗口最大值</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'rolling_max'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rolling<span class=\"token punctuation\">(</span>window<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 窗口最小值</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'rolling_min'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rolling<span class=\"token punctuation\">(</span>window<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>7.3 数据可视化</strong></p>\n<p>Pandas 可以与 Matplotlib 等可视化库结合，方便进行数据可视化。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制折线图</span>\ndf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Random Data Visualization'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Index'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Value'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制直方图</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>hist<span class=\"token punctuation\">(</span>bins<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Hist Data Visualization'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Value'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Frequency'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制散点图</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Scatter Data Visualization'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'X'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Y'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制箱线图</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>box<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Box Data Visualization'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Value'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制饼图</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span>\nlabels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">]</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>labels<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>pie<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> autopct<span class=\"token operator\">=</span><span class=\"token string\">'%.2f'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Pie Chart Data Visualization'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"8-总结与进阶\"><a href=\"#8-总结与进阶\" class=\"headerlink\" title=\"8. 总结与进阶\"></a><strong>8. 总结与进阶</strong></h3><p><strong>8.1 常用技巧</strong></p>\n<p>在实际使用 pandas 时，以下一些技巧可能会很有帮助：</p>\n<ul>\n<li><p><strong>链式操作：</strong> 可以将多个操作链接在一起，提高代码的可读性：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data.csv'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'city'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>使用 query() 方法：</strong> 可以用更简洁的语法进行数据筛选：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span><span class=\"token string\">'age &gt; 30 and city == \"New York\"'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>使用 isin() 方法：</strong> 可以检查 Series 或 DataFrame 中的元素是否在给定的列表中：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">]</span>\n    df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'city'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span>cities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>使用 assign() 方法：</strong> 可以添加新的列，同时保留原始 DataFrame：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">(</span>age_plus_ten <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>使用 pipe() 方法：</strong> 可以将 DataFrame 传递给一系列函数：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">clean_data</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> df<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_age</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> df<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">(</span>age_plus_ten <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\ndf<span class=\"token punctuation\">.</span>pipe<span class=\"token punctuation\">(</span>clean_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pipe<span class=\"token punctuation\">(</span>add_age<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<p><strong>8.2 学习资源</strong></p>\n<ul>\n<li><strong>官方文档：</strong> <a href=\"https://www.google.com/url?sa=E&amp;q=https://pandas.pydata.org/docs/\">pandas documentation</a><ul>\n<li>这是学习 pandas 最权威的资源，包含了所有函数、方法的详细说明和示例。</li>\n</ul>\n</li>\n<li><strong>在线教程：</strong><ul>\n<li><a href=\"https://www.google.com/url?sa=E&amp;q=https://pandas.pydata.org/docs/user_guide/10min.html\">10 Minutes to pandas</a>: 一个快速上手 pandas 的教程。</li>\n<li><a href=\"https://www.google.com/url?sa=E&amp;q=https://pandas.pydata.org/pandas-docs/stable/user_guide/cookbook.html\">Pandas Cookbook</a>: 包含各种常见的数据处理问题的解决方案。</li>\n</ul>\n</li>\n<li><strong>书籍：</strong><ul>\n<li>“Python for Data Analysis” by Wes McKinney： pandas 的作者写的书，是学习 pandas 的经典之作。</li>\n</ul>\n</li>\n<li><strong>实践项目：</strong><ul>\n<li>可以尝试一些 Kaggle 上的数据分析项目，将 pandas 应用到实际问题中。</li>\n</ul>\n</li>\n<li><strong>社区：</strong><ul>\n<li>Stack Overflow：在遇到问题时，可以在 Stack Overflow 上搜索或提问。</li>\n<li>GitHub：pandas 也是一个开源项目，可以在 GitHub 上查看源代码，参与贡献。</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2025/01/10/liang-tai-dian-nao-shi-yong-github-pycharm-tong-bu-kai-fa/",
            "url": "https://0xdadream.github.io/2025/01/10/liang-tai-dian-nao-shi-yong-github-pycharm-tong-bu-kai-fa/",
            "title": "两台电脑使用github+pycharm同步开发",
            "date_published": "2025-01-10T04:25:00.000Z",
            "content_html": "<h1 id=\"两台电脑使用github-pycharm同步开发\"><a href=\"#两台电脑使用github-pycharm同步开发\" class=\"headerlink\" title=\"两台电脑使用github+pycharm同步开发\"></a>两台电脑使用github+pycharm同步开发</h1><p>本文介绍如何在两台电脑之间通过 GitHub 和 PyCharm 实现项目的同步开发。</p>\n<hr>\n<h3 id=\"一、准备工作\"><a href=\"#一、准备工作\" class=\"headerlink\" title=\"一、准备工作\"></a><strong>一、准备工作</strong></h3><h4 id=\"1-在两台电脑上安装必要工具\"><a href=\"#1-在两台电脑上安装必要工具\" class=\"headerlink\" title=\"1. 在两台电脑上安装必要工具\"></a><strong>1. 在两台电脑上安装必要工具</strong></h4><ul>\n<li><strong>Git</strong>：下载并安装 <a href=\"https://git-scm.com/\">Git</a>。</li>\n<li><strong>PyCharm</strong>：下载并安装 <a href=\"https://www.jetbrains.com/pycharm/\">PyCharm</a>。</li>\n<li><strong>GitHub 账号</strong>：确保已经注册并拥有 GitHub 账号。</li>\n</ul>\n<h4 id=\"2-配置-Git-环境\"><a href=\"#2-配置-Git-环境\" class=\"headerlink\" title=\"2. 配置 Git 环境\"></a><strong>2. 配置 Git 环境</strong></h4><p>在两台电脑上分别配置 Git：</p>\n<ol>\n<li><p><strong>设置用户名和邮箱</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"你的用户名\"</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"你的邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>生成 SSH 密钥</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen <span class=\"token parameter variable\">-t</span> ed25519 <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"你的邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li><p>按提示生成密钥（存储在 <code>~/.ssh/id_ed25519</code>）。</p>\n</li>\n<li><p>使用以下命令查看并复制公钥内容：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> ~/.ssh/id_ed25519.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>登录 GitHub，进入 <strong>Settings &gt; SSH and GPG keys</strong>，点击 <strong>New SSH key</strong>，将公钥粘贴并保存。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>测试连接</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果返回：</p>\n<pre class=\"line-numbers language-vbnet\" data-language=\"vbnet\"><code class=\"language-vbnet\">Hi <span class=\"token operator\">&lt;</span>你的用户名<span class=\"token operator\">&gt;</span><span class=\"token comment\">! You've successfully authenticated, but GitHub does not provide shell access.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>表示配置成功。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"二、创建远程仓库并上传项目\"><a href=\"#二、创建远程仓库并上传项目\" class=\"headerlink\" title=\"二、创建远程仓库并上传项目\"></a><strong>二、创建远程仓库并上传项目</strong></h3><h4 id=\"1-创建远程仓库\"><a href=\"#1-创建远程仓库\" class=\"headerlink\" title=\"1. 创建远程仓库\"></a><strong>1. 创建远程仓库</strong></h4><ol>\n<li>登录 GitHub，点击右上角的 <strong>+</strong> &gt; <strong>New repository</strong>。</li>\n<li>填写仓库名称（例如 <code>my_project</code>），选择 <strong>Public</strong> 或 <strong>Private</strong>，然后点击 <strong>Create repository</strong>。</li>\n</ol>\n<h4 id=\"2-将本地项目上传到远程仓库\"><a href=\"#2-将本地项目上传到远程仓库\" class=\"headerlink\" title=\"2. 将本地项目上传到远程仓库\"></a><strong>2. 将本地项目上传到远程仓库</strong></h4><p>在已存在的项目目录中初始化 Git，并推送到远程仓库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /path/to/your/project\n<span class=\"token function\">git</span> init  <span class=\"token comment\"># 初始化</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>  <span class=\"token comment\"># 提交所有文件到暂存区</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Initial commit\"</span>  <span class=\"token comment\"># 提交到当前分支</span>\n<span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-M</span> main <span class=\"token comment\"># 将当前分支重命名为main，github默认分支为main</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:<span class=\"token operator\">&lt;</span>你的用户名<span class=\"token operator\">&gt;</span>/my_project.git  <span class=\"token comment\"># 绑定远程仓库</span>\n<span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin main <span class=\"token comment\"># 将 main 分支推送到远程仓库，并建立本地与远程分支的关联，添加 -u 参数后，本地的 main 分支会与远程的 main 分支关联起来。这样，后续执行 git pull 或 git push 时，不需要再指定分支名称</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"三、在两台电脑上同步项目\"><a href=\"#三、在两台电脑上同步项目\" class=\"headerlink\" title=\"三、在两台电脑上同步项目\"></a><strong>三、在两台电脑上同步项目</strong></h3><h4 id=\"电脑-A-操作\"><a href=\"#电脑-A-操作\" class=\"headerlink\" title=\"电脑 A 操作\"></a><strong>电脑 A 操作</strong></h4><ol>\n<li><p><strong>克隆远程仓库</strong>： 如果电脑 A 尚未有项目代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:<span class=\"token operator\">&lt;</span>你的用户名<span class=\"token operator\">&gt;</span>/my_project.git\n<span class=\"token builtin class-name\">cd</span> my_project<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果电脑 A 已有代码并已推送到远程仓库，则跳过此步骤。</p>\n</li>\n<li><p><strong>用 PyCharm 打开项目</strong>：</p>\n<ul>\n<li>打开 PyCharm，点击 <strong>File &gt; Open</strong>，选择项目目录。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"电脑-B-操作\"><a href=\"#电脑-B-操作\" class=\"headerlink\" title=\"电脑 B 操作\"></a><strong>电脑 B 操作</strong></h4><ol>\n<li><p><strong>克隆远程仓库</strong>： 在电脑 B 的终端中运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:<span class=\"token operator\">&lt;</span>你的用户名<span class=\"token operator\">&gt;</span>/my_project.git\n<span class=\"token builtin class-name\">cd</span> my_project<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>用 PyCharm 打开项目</strong>：</p>\n<ul>\n<li>打开 PyCharm，点击 <strong>File &gt; Open</strong>，选择项目目录。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"四、日常开发流程\"><a href=\"#四、日常开发流程\" class=\"headerlink\" title=\"四、日常开发流程\"></a><strong>四、日常开发流程</strong></h3><h4 id=\"1-在电脑-A-或-B-上修改代码\"><a href=\"#1-在电脑-A-或-B-上修改代码\" class=\"headerlink\" title=\"1. 在电脑 A 或 B 上修改代码\"></a><strong>1. 在电脑 A 或 B 上修改代码</strong></h4><ol>\n<li><p>使用 PyCharm 编辑代码。</p>\n</li>\n<li><p>在终端或 PyCharm 的 Git 工具窗口中提交更改：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"描述本次更改的内容\"</span>\n<span class=\"token function\">git</span> push<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"2-在另一台电脑同步代码\"><a href=\"#2-在另一台电脑同步代码\" class=\"headerlink\" title=\"2. 在另一台电脑同步代码\"></a><strong>2. 在另一台电脑同步代码</strong></h4><p>在另一台电脑上拉取最新代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后继续开发。</p>\n<hr>\n<h3 id=\"五、解决冲突\"><a href=\"#五、解决冲突\" class=\"headerlink\" title=\"五、解决冲突\"></a><strong>五、解决冲突</strong></h3><p>如果两台电脑同时修改了同一个文件并提交，可能会出现冲突。解决方法如下：</p>\n<ol>\n<li><p><strong>拉取代码时提示冲突</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>Git 会提示冲突的文件。</p>\n</li>\n<li><p><strong>手动解决冲突</strong>： 打开冲突文件，按照以下格式解决冲突：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n你的修改\n=======\n另一台电脑的修改\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; commit-hash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修改为期望的代码并保存。</p>\n</li>\n<li><p><strong>标记冲突已解决并提交</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"解决冲突\"</span>\n<span class=\"token function\">git</span> push<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<hr>\n<h3 id=\"六、PyCharm-中内置-Git-工具的使用\"><a href=\"#六、PyCharm-中内置-Git-工具的使用\" class=\"headerlink\" title=\"六、PyCharm 中内置 Git 工具的使用\"></a><strong>六、PyCharm 中内置 Git 工具的使用</strong></h3><ol>\n<li><strong>提交代码</strong>：<ul>\n<li>在 PyCharm 界面右上角，点击 <strong>Commit</strong>。</li>\n<li>勾选修改的文件，填写提交信息，然后点击 <strong>Commit</strong> 或 <strong>Commit and Push</strong>。</li>\n</ul>\n</li>\n<li><strong>拉取代码</strong>：<ul>\n<li>点击 <strong>Git &gt; Pull</strong>，选择远程分支，点击 <strong>OK</strong>。</li>\n</ul>\n</li>\n<li><strong>查看分支和日志</strong>：<ul>\n<li>点击 <strong>Git &gt; Log</strong>，查看提交历史和分支结构。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"七、注意事项\"><a href=\"#七、注意事项\" class=\"headerlink\" title=\"七、注意事项\"></a><strong>七、注意事项</strong></h3><ol>\n<li><strong>保持代码同步</strong>：每次在另一台电脑开发前，先执行 <code>git pull</code> 拉取最新代码。</li>\n<li><strong>频繁提交</strong>：尽量将每次修改后的小更新提交到远程仓库，避免产生冲突。</li>\n<li><strong>多人协作时注意分支管理</strong>：可以为不同功能创建分支，完成后再合并到主分支。</li>\n</ol>\n<h3 id=\"八、分支管理\"><a href=\"#八、分支管理\" class=\"headerlink\" title=\"八、分支管理\"></a><strong>八、分支管理</strong></h3><p>当开发新功能或进行实验时，可以使用分支来避免影响主分支。</p>\n<h4 id=\"1-创建和切换分支\"><a href=\"#1-创建和切换分支\" class=\"headerlink\" title=\"1. 创建和切换分支\"></a><strong>1. 创建和切换分支</strong></h4><ul>\n<li><p>创建新分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>切换到新分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或直接创建并切换：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"2-合并分支\"><a href=\"#2-合并分支\" class=\"headerlink\" title=\"2. 合并分支\"></a><strong>2. 合并分支</strong></h4><ul>\n<li><p>切换到主分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>合并新功能分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> merge feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"3-删除分支\"><a href=\"#3-删除分支\" class=\"headerlink\" title=\"3. 删除分支\"></a><strong>3. 删除分支</strong></h4><ul>\n<li><p>删除本地分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-d</span> feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>删除远程分支：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token parameter variable\">--delete</span> feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<hr>\n<h3 id=\"九、处理多人协作的冲突\"><a href=\"#九、处理多人协作的冲突\" class=\"headerlink\" title=\"九、处理多人协作的冲突\"></a><strong>九、处理多人协作的冲突</strong></h3><p>如果你在两台电脑之外，还与其他人协作开发，可以通过以下方式优化工作流。</p>\n<h4 id=\"1-定期拉取最新代码\"><a href=\"#1-定期拉取最新代码\" class=\"headerlink\" title=\"1. 定期拉取最新代码\"></a><strong>1. 定期拉取最新代码</strong></h4><p>在本地开发前，确保代码是最新的：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-使用-rebase-整理提交历史\"><a href=\"#2-使用-rebase-整理提交历史\" class=\"headerlink\" title=\"2. 使用 rebase 整理提交历史\"></a><strong>2. 使用 <code>rebase</code> 整理提交历史</strong></h4><p>在同步远程分支时，你可以选择 <code>rebase</code> 方式，使提交历史更加整洁：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull <span class=\"token parameter variable\">--rebase</span> origin main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"3-使用标签管理版本\"><a href=\"#3-使用标签管理版本\" class=\"headerlink\" title=\"3. 使用标签管理版本\"></a><strong>3. 使用标签管理版本</strong></h4><p>当一个功能开发完成后，可以添加一个标签：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag <span class=\"token parameter variable\">-a</span> v1.0 <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Version 1.0 release\"</span>\n<span class=\"token function\">git</span> push origin v1.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"十、PyCharm-的一些高级-Git-功能\"><a href=\"#十、PyCharm-的一些高级-Git-功能\" class=\"headerlink\" title=\"十、PyCharm 的一些高级 Git 功能\"></a><strong>十、PyCharm 的一些高级 Git 功能</strong></h3><h4 id=\"1-可视化查看分支\"><a href=\"#1-可视化查看分支\" class=\"headerlink\" title=\"1. 可视化查看分支\"></a><strong>1. 可视化查看分支</strong></h4><ul>\n<li>在 PyCharm 界面右下角，点击 <strong>Git 分支名称</strong>，可以查看和切换分支。</li>\n<li>打开 <strong>Git &gt; Log</strong>，可以看到分支结构图和提交历史。</li>\n</ul>\n<h4 id=\"2-解决冲突\"><a href=\"#2-解决冲突\" class=\"headerlink\" title=\"2. 解决冲突\"></a><strong>2. 解决冲突</strong></h4><p>当拉取代码遇到冲突时，PyCharm 提供了图形化工具：</p>\n<ol>\n<li>点击 <strong>Merge Conflicts</strong> 提示框。</li>\n<li>使用 PyCharm 的三栏界面，直观地合并冲突。</li>\n<li>合并完成后，保存并提交。</li>\n</ol>\n<h4 id=\"3-使用变基（Rebase）\"><a href=\"#3-使用变基（Rebase）\" class=\"headerlink\" title=\"3. 使用变基（Rebase）\"></a><strong>3. 使用变基（Rebase）</strong></h4><ul>\n<li>在 PyCharm 中，选择 <strong>VCS &gt; Git &gt; Rebase</strong>，可以直观地重新整理提交。</li>\n</ul>\n<hr>\n<h3 id=\"十一、优化开发体验\"><a href=\"#十一、优化开发体验\" class=\"headerlink\" title=\"十一、优化开发体验\"></a><strong>十一、优化开发体验</strong></h3><h4 id=\"1-配置-gitignore\"><a href=\"#1-配置-gitignore\" class=\"headerlink\" title=\"1. 配置 .gitignore\"></a><strong>1. 配置 <code>.gitignore</code></strong></h4><p>避免将不必要的文件推送到远程仓库。比如 Python 项目常用的 <code>.gitignore</code> 文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">__pycache__/\n*.pyc\n*.pyo\n*.log\n.idea/\n.vscode/\n.DS_Store<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将 <code>.gitignore</code> 文件添加到项目根目录，然后提交：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> .gitignore\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Add .gitignore\"</span>\n<span class=\"token function\">git</span> push<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-提高拉取速度\"><a href=\"#2-提高拉取速度\" class=\"headerlink\" title=\"2. 提高拉取速度\"></a><strong>2. 提高拉取速度</strong></h4><p>如果仓库较大，可以通过浅克隆（仅克隆最近的提交历史）加快速度：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">--depth</span> <span class=\"token number\">1</span> git@github.com:<span class=\"token operator\">&lt;</span>你的用户名<span class=\"token operator\">&gt;</span>/my_project.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"3-使用-SSH-配置多个远程地址\"><a href=\"#3-使用-SSH-配置多个远程地址\" class=\"headerlink\" title=\"3. 使用 SSH 配置多个远程地址\"></a><strong>3. 使用 SSH 配置多个远程地址</strong></h4><p>如果有多个远程仓库，可以配置多个 <code>remote</code> 地址：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> backup git@github.com:<span class=\"token operator\">&lt;</span>你的用户名<span class=\"token operator\">&gt;</span>/my_project_backup.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"十二、代码评审（Code-Review）和协作工具\"><a href=\"#十二、代码评审（Code-Review）和协作工具\" class=\"headerlink\" title=\"十二、代码评审（Code Review）和协作工具\"></a><strong>十二、代码评审（Code Review）和协作工具</strong></h3><p>如果需要团队协作，可以用 GitHub 的 Pull Request 功能：</p>\n<ol>\n<li><p>创建一个新分支进行开发。</p>\n</li>\n<li><p>推送分支到远程：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin feature-branch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>在 GitHub 上发起 **Pull Request (PR)**，让团队成员进行代码审查。</p>\n</li>\n<li><p>审查通过后，合并分支。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"十三、备份与恢复操作\"><a href=\"#十三、备份与恢复操作\" class=\"headerlink\" title=\"十三、备份与恢复操作\"></a><strong>十三、备份与恢复操作</strong></h3><h4 id=\"1-创建仓库副本（Fork）\"><a href=\"#1-创建仓库副本（Fork）\" class=\"headerlink\" title=\"1. 创建仓库副本（Fork）\"></a><strong>1. 创建仓库副本（Fork）</strong></h4><ul>\n<li>如果你想备份项目或创建自己的分支，可以直接在 GitHub 上点击 <strong>Fork</strong>。</li>\n</ul>\n<h4 id=\"2-恢复代码\"><a href=\"#2-恢复代码\" class=\"headerlink\" title=\"2. 恢复代码\"></a><strong>2. 恢复代码</strong></h4><ul>\n<li><p>如果需要回滚到某次提交：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> <span class=\"token operator\">&lt;</span>commit-id<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看历史提交记录：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<hr>\n<h3 id=\"十四、自动化工作流\"><a href=\"#十四、自动化工作流\" class=\"headerlink\" title=\"十四、自动化工作流\"></a><strong>十四、自动化工作流</strong></h3><h4 id=\"1-使用-GitHub-Actions-自动化任务\"><a href=\"#1-使用-GitHub-Actions-自动化任务\" class=\"headerlink\" title=\"1. 使用 GitHub Actions 自动化任务\"></a><strong>1. 使用 GitHub Actions 自动化任务</strong></h4><p>你可以在 GitHub 上配置 <strong>GitHub Actions</strong>，实现以下功能：</p>\n<ul>\n<li>自动运行测试代码。</li>\n<li>部署代码到服务器。</li>\n</ul>\n<p>示例 <code>.github/workflows/main.yml</code> 文件：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CI/CD Pipeline\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout code\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Python\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>python@v4\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">python-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.8'</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> pip install <span class=\"token punctuation\">-</span>r requirements.txt\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run tests\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> pytest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-使用-PyCharm-的任务管理\"><a href=\"#2-使用-PyCharm-的任务管理\" class=\"headerlink\" title=\"2. 使用 PyCharm 的任务管理\"></a><strong>2. 使用 PyCharm 的任务管理</strong></h4><ul>\n<li>在 PyCharm 中配置 <strong>Tasks &amp; Contexts</strong>，跟踪开发任务和环境状态。</li>\n</ul>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/12/13/parsec-jiao-cheng/",
            "url": "https://0xdadream.github.io/2024/12/13/parsec-jiao-cheng/",
            "title": "parsec教程",
            "date_published": "2024-12-13T04:25:00.000Z",
            "content_html": "<h1 id=\"parsec教程\"><a href=\"#parsec教程\" class=\"headerlink\" title=\"parsec教程\"></a>parsec教程</h1><h2 id=\"修改代理\"><a href=\"#修改代理\" class=\"headerlink\" title=\"修改代理\"></a>修改代理</h2><p>找到文件<code>C:\\Users\\用户名\\AppData\\Roaming\\Parsec\\config.josn</code>，修改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token string\">\"app_proxy\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"value\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>,\n<span class=\"token string\">\"app_proxy_address\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"value\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"127.0.0.1\"</span>\n<span class=\"token punctuation\">}</span>,\n<span class=\"token string\">\"app_proxy_port\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"value\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">10808</span>\n<span class=\"token punctuation\">}</span>,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>参照你的代理端口修改</p>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/12/11/pycharm-kuai-jie-jian/",
            "url": "https://0xdadream.github.io/2024/12/11/pycharm-kuai-jie-jian/",
            "title": "pycharm快捷键",
            "date_published": "2024-12-11T04:25:00.000Z",
            "content_html": "<h1 id=\"pycharm快捷键\"><a href=\"#pycharm快捷键\" class=\"headerlink\" title=\"pycharm快捷键\"></a>pycharm快捷键</h1><p>pycharm快捷键</p>\n<p>以下是 PyCharm 在 Windows 上高效开发常用的快捷键列表，按照功能分类：</p>\n<hr>\n<h3 id=\"文件与项目管理\"><a href=\"#文件与项目管理\" class=\"headerlink\" title=\"文件与项目管理\"></a><strong>文件与项目管理</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>打开文件/最近文件</td>\n<td><code>Ctrl + E</code></td>\n</tr>\n<tr>\n<td>查找文件</td>\n<td><code>Ctrl + Shift + N</code></td>\n</tr>\n<tr>\n<td>切换到项目视图</td>\n<td><code>Alt + 1</code></td>\n</tr>\n<tr>\n<td>显示/隐藏工具窗口</td>\n<td><code>Alt + #[1-9]</code></td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"代码导航\"><a href=\"#代码导航\" class=\"headerlink\" title=\"代码导航\"></a><strong>代码导航</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>跳转到声明/定义</td>\n<td><code>Ctrl + B</code> 或 <code>Ctrl + 鼠标左键</code></td>\n</tr>\n<tr>\n<td>返回到上一个位置</td>\n<td><code>Ctrl + Alt + 左箭头</code></td>\n</tr>\n<tr>\n<td>前进到下一个位置</td>\n<td><code>Ctrl + Alt + 右箭头</code></td>\n</tr>\n<tr>\n<td>快速导航到符号（类、方法等）</td>\n<td><code>Ctrl + Shift + Alt + N</code></td>\n</tr>\n<tr>\n<td>显示方法列表</td>\n<td><code>Ctrl + F12</code></td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"代码编辑\"><a href=\"#代码编辑\" class=\"headerlink\" title=\"代码编辑\"></a><strong>代码编辑</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>格式化代码</td>\n<td><code>Ctrl + Alt + L</code></td>\n</tr>\n<tr>\n<td>智能补全（代码补全）</td>\n<td><code>Ctrl + 空格</code></td>\n</tr>\n<tr>\n<td>自动导入</td>\n<td><code>Alt + Enter</code></td>\n</tr>\n<tr>\n<td>多光标选择</td>\n<td><code>Alt + 鼠标左键</code> 或 <code>Ctrl + Alt + Shift + J</code></td>\n</tr>\n<tr>\n<td>快速重构（重命名、提取变量等）</td>\n<td><code>Shift + F6</code></td>\n</tr>\n<tr>\n<td>注释/取消注释行代码</td>\n<td><code>Ctrl + /</code></td>\n</tr>\n<tr>\n<td>注释/取消注释块代码</td>\n<td><code>Ctrl + Shift + /</code></td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"运行与调试\"><a href=\"#运行与调试\" class=\"headerlink\" title=\"运行与调试\"></a><strong>运行与调试</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>运行当前文件</td>\n<td><code>Shift + F10</code></td>\n</tr>\n<tr>\n<td>调试当前文件</td>\n<td><code>Shift + F9</code></td>\n</tr>\n<tr>\n<td>添加断点</td>\n<td><code>Ctrl + F8</code></td>\n</tr>\n<tr>\n<td>步入（Step Into）</td>\n<td><code>F7</code></td>\n</tr>\n<tr>\n<td>步过（Step Over）</td>\n<td><code>F8</code></td>\n</tr>\n<tr>\n<td>跳出（Step Out）</td>\n<td><code>Shift + F8</code></td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"搜索与替换\"><a href=\"#搜索与替换\" class=\"headerlink\" title=\"搜索与替换\"></a><strong>搜索与替换</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>全局搜索</td>\n<td><code>Ctrl + Shift + F</code></td>\n</tr>\n<tr>\n<td>替换</td>\n<td><code>Ctrl + R</code></td>\n</tr>\n<tr>\n<td>在文件中搜索</td>\n<td><code>Ctrl + F</code></td>\n</tr>\n<tr>\n<td>查找下一个</td>\n<td><code>F3</code></td>\n</tr>\n<tr>\n<td>查找上一个</td>\n<td><code>Shift + F3</code></td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"版本控制\"><a href=\"#版本控制\" class=\"headerlink\" title=\"版本控制\"></a><strong>版本控制</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>查看版本历史（当前文件）</td>\n<td><code>Ctrl + Shift + A</code> 然后输入 <code>File History</code></td>\n</tr>\n<tr>\n<td>提交变更</td>\n<td><code>Ctrl + K</code></td>\n</tr>\n<tr>\n<td>更新项目</td>\n<td><code>Ctrl + T</code></td>\n</tr>\n<tr>\n<td>显示版本控制窗口</td>\n<td><code>Alt + 9</code></td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"通用快捷键\"><a href=\"#通用快捷键\" class=\"headerlink\" title=\"通用快捷键\"></a><strong>通用快捷键</strong></h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>搜索动作（如功能、设置等）</td>\n<td><code>Ctrl + Shift + A</code></td>\n</tr>\n<tr>\n<td>打开设置</td>\n<td><code>Ctrl + Alt + S</code></td>\n</tr>\n<tr>\n<td>切换全屏模式</td>\n<td><code>Ctrl + Shift + F11</code></td>\n</tr>\n<tr>\n<td>显示代码提示信息</td>\n<td><code>Ctrl + Q</code></td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/12/01/wsl-he-windows-hu-xiang-fang-wen/",
            "url": "https://0xdadream.github.io/2024/12/01/wsl-he-windows-hu-xiang-fang-wen/",
            "title": "WSL 与 Windows 互相访问教程",
            "date_published": "2024-12-01T04:25:00.000Z",
            "content_html": "<h1 id=\"WSL-与-Windows-互相访问教程\"><a href=\"#WSL-与-Windows-互相访问教程\" class=\"headerlink\" title=\"WSL 与 Windows 互相访问教程\"></a><strong>WSL 与 Windows 互相访问教程</strong></h1><p>以下教程将介绍如何在 WSL 和 Windows 系统之间互相访问文件并实现无缝交互。</p>\n<hr>\n<h2 id=\"一、Windows-访问-WSL-文件\"><a href=\"#一、Windows-访问-WSL-文件\" class=\"headerlink\" title=\"一、Windows 访问 WSL 文件\"></a><strong>一、Windows 访问 WSL 文件</strong></h2><h3 id=\"方法-1：通过网络路径访问\"><a href=\"#方法-1：通过网络路径访问\" class=\"headerlink\" title=\"方法 1：通过网络路径访问\"></a><strong>方法 1：通过网络路径访问</strong></h3><p>WSL 文件系统挂载在 Windows 网络路径 <code>\\\\wsl$</code> 下，可以直接访问。</p>\n<ol>\n<li><p><strong>打开文件资源管理器或命令行：</strong> 在地址栏或命令行输入以下路径：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>wsl$<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>发行版名称<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">\\</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>wsl$<span class=\"token punctuation\">\\</span>Ubuntu<span class=\"token punctuation\">\\</span>home<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>直接访问 WSL 文件：</strong></p>\n<ul>\n<li><p>文件资源管理器中可以像操作普通文件夹一样管理文件。</p>\n</li>\n<li><p>在命令行中可以使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>wsl$<span class=\"token punctuation\">\\</span>Ubuntu<span class=\"token punctuation\">\\</span>home<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>\n<span class=\"token function\">dir</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p><strong>优点：</strong></p>\n<ul>\n<li>直接访问，无需额外配置。</li>\n<li>文件路径自动挂载，无权限问题。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"方法-2：通过挂载路径访问\"><a href=\"#方法-2：通过挂载路径访问\" class=\"headerlink\" title=\"方法 2：通过挂载路径访问\"></a><strong>方法 2：通过挂载路径访问</strong></h3><p>WSL 的文件系统实际上存储在 Windows 用户目录下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">\\</span>AppData<span class=\"token punctuation\">\\</span>Local<span class=\"token punctuation\">\\</span>Packages<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>WSL发行版ID<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">\\</span>LocalState<span class=\"token punctuation\">\\</span>rootfs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"操作步骤：\"><a href=\"#操作步骤：\" class=\"headerlink\" title=\"操作步骤：\"></a><strong>操作步骤：</strong></h4><ol>\n<li><p><strong>定位路径：</strong> 打开资源管理器，导航到上述路径。</p>\n</li>\n<li><p><strong>通过命令行访问：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"C:\\Users\\&lt;用户名&gt;\\AppData\\Local\\Packages\\&lt;发行版ID&gt;\\LocalState<span class=\"token entity\" title=\"\\r\">\\r</span>ootfs\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<p><strong>注意：</strong></p>\n<ul>\n<li><strong>不要直接修改</strong> <code>LocalState</code> 下的文件，可能导致 WSL 文件系统损坏。</li>\n<li>尽量使用 <code>\\\\wsl$</code> 路径，安全可靠。</li>\n</ul>\n<hr>\n<h3 id=\"方法-3：通过-WSL-挂载目录\"><a href=\"#方法-3：通过-WSL-挂载目录\" class=\"headerlink\" title=\"方法 3：通过 WSL 挂载目录\"></a><strong>方法 3：通过 WSL 挂载目录</strong></h3><p>WSL 可以直接挂载 Windows 文件系统，访问路径为 <code>/mnt/&lt;盘符&gt;</code>。</p>\n<ol>\n<li><p>在 WSL 中访问：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Documents<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>常见操作：</p>\n<ul>\n<li><p>列出文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Documents<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>复制文件到 WSL：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Documents/文件.txt ~/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"二、WSL-访问-Windows-文件\"><a href=\"#二、WSL-访问-Windows-文件\" class=\"headerlink\" title=\"二、WSL 访问 Windows 文件\"></a><strong>二、WSL 访问 Windows 文件</strong></h2><h3 id=\"默认挂载的文件路径\"><a href=\"#默认挂载的文件路径\" class=\"headerlink\" title=\"默认挂载的文件路径\"></a><strong>默认挂载的文件路径</strong></h3><p>WSL 会自动挂载 Windows 的文件系统，所有分区挂载在 <code>/mnt/&lt;盘符&gt;</code> 下。例如：</p>\n<ul>\n<li><code>C:\\</code> 对应 <code>/mnt/c</code></li>\n<li><code>D:\\</code> 对应 <code>/mnt/d</code></li>\n</ul>\n<ol>\n<li><p><strong>列出 Windows 文件：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Documents<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>复制文件到 WSL：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Documents/文件.txt ~/wsl目录/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>移动文件到 Windows：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> ~/wsl目录/文件.txt /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Desktop/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<hr>\n<h2 id=\"三、实现-WSL-和-Windows-共享目录\"><a href=\"#三、实现-WSL-和-Windows-共享目录\" class=\"headerlink\" title=\"三、实现 WSL 和 Windows 共享目录\"></a><strong>三、实现 WSL 和 Windows 共享目录</strong></h2><h3 id=\"方法-1：在-WSL-中创建软链接\"><a href=\"#方法-1：在-WSL-中创建软链接\" class=\"headerlink\" title=\"方法 1：在 WSL 中创建软链接\"></a><strong>方法 1：在 WSL 中创建软链接</strong></h3><p>如果频繁需要访问某些 Windows 目录，可以通过软链接简化路径。</p>\n<ol>\n<li><p><strong>创建链接：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Documents ~/windows-documents<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>访问链接：</strong> 直接进入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~/windows-documents<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"方法-2：共享-WSL-的目录给-Windows\"><a href=\"#方法-2：共享-WSL-的目录给-Windows\" class=\"headerlink\" title=\"方法 2：共享 WSL 的目录给 Windows\"></a><strong>方法 2：共享 WSL 的目录给 Windows</strong></h3><p>可以通过设置 WSL 中的目录，让 Windows 使用 <code>\\\\wsl$</code> 访问。</p>\n<ol>\n<li><p><strong>在 WSL 中创建目录：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ~/shared-folder<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>在 Windows 中访问：</strong> 打开资源管理器，导航到：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>wsl$<span class=\"token punctuation\">\\</span>Ubuntu<span class=\"token punctuation\">\\</span>home<span class=\"token punctuation\">\\</span><span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">\\</span>shared-folder<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<hr>\n<h2 id=\"四、在-WSL-和-Windows-间传输文件\"><a href=\"#四、在-WSL-和-Windows-间传输文件\" class=\"headerlink\" title=\"四、在 WSL 和 Windows 间传输文件\"></a><strong>四、在 WSL 和 Windows 间传输文件</strong></h2><h3 id=\"方法-1：直接复制文件\"><a href=\"#方法-1：直接复制文件\" class=\"headerlink\" title=\"方法 1：直接复制文件\"></a><strong>方法 1：直接复制文件</strong></h3><p>可以使用 <code>cp</code> 或 <code>mv</code> 命令实现文件复制或移动。</p>\n<h4 id=\"从-WSL-复制文件到-Windows：\"><a href=\"#从-WSL-复制文件到-Windows：\" class=\"headerlink\" title=\"从 WSL 复制文件到 Windows：\"></a><strong>从 WSL 复制文件到 Windows：</strong></h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> ~/文件.txt /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Desktop/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"从-Windows-复制文件到-WSL：\"><a href=\"#从-Windows-复制文件到-WSL：\" class=\"headerlink\" title=\"从 Windows 复制文件到 WSL：\"></a><strong>从 Windows 复制文件到 WSL：</strong></h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /mnt/c/Users/<span class=\"token operator\">&lt;</span>用户名<span class=\"token operator\">&gt;</span>/Desktop/文件.txt ~/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h3 id=\"方法-2：使用-explorer-exe-打开-WSL-文件夹\"><a href=\"#方法-2：使用-explorer-exe-打开-WSL-文件夹\" class=\"headerlink\" title=\"方法 2：使用 explorer.exe 打开 WSL 文件夹\"></a><strong>方法 2：使用 <code>explorer.exe</code> 打开 WSL 文件夹</strong></h3><p>在 WSL 中可以直接使用 Windows 的资源管理器访问当前目录：</p>\n<ol>\n<li><p>在 WSL 终端中输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">explorer.exe <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>Windows 文件资源管理器会打开 WSL 当前路径。</p>\n</li>\n</ol>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/28/latex-jiao-cheng/",
            "url": "https://0xdadream.github.io/2024/11/28/latex-jiao-cheng/",
            "title": "latex教程",
            "date_published": "2024-11-28T13:25:00.000Z",
            "content_html": "<h1 id=\"latex教程\"><a href=\"#latex教程\" class=\"headerlink\" title=\"latex教程\"></a>latex教程</h1><p>latex教程</p>\n<p>参考网站：</p>\n<p><a href=\"https://zilutian.github.io/latex-tutorial-chinese/\">LaTeX 教程</a></p>\n<p><a href=\"https://www.latexstudio.net/LearnLaTeX/basic/01.html\">LaTeX 基础 | LaTeX 知识库</a></p>\n<p><a href=\"https://www.latexlive.com/\">在线LaTeX公式编辑器-编辑器</a></p>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/27/typora-shu-xue-fu-hao/",
            "url": "https://0xdadream.github.io/2024/11/27/typora-shu-xue-fu-hao/",
            "title": "typora数学符号",
            "date_published": "2024-11-26T16:25:00.000Z",
            "content_html": "<h1 id=\"typora数学符号\"><a href=\"#typora数学符号\" class=\"headerlink\" title=\"typora数学符号\"></a>typora数学符号</h1><p>Typora 是一个支持 LaTeX 数学公式的优秀 Markdown 编辑器，可以直接编写数学公式并实时渲染。以下是如何在 Typora 中使用数学公式的详细指南：</p>\n<hr>\n<h2 id=\"1-启用数学公式支持\"><a href=\"#1-启用数学公式支持\" class=\"headerlink\" title=\"1. 启用数学公式支持\"></a>1. <strong>启用数学公式支持</strong></h2><p>默认情况下，Typora 支持 LaTeX 格式的数学公式，无需额外设置。如果未生效，请确保已启用数学渲染：</p>\n<ol>\n<li>打开 Typora。</li>\n<li>点击顶部菜单栏的 <strong>File &gt; Preferences（设置）</strong>。</li>\n<li>在设置中，选择 <strong>Markdown</strong> 选项卡。</li>\n<li>确保勾选了 <strong>Enable MathJax</strong> 或 <strong>Enable Katex</strong>，以支持数学公式渲染。</li>\n</ol>\n<hr>\n<h2 id=\"2-数学公式语法\"><a href=\"#2-数学公式语法\" class=\"headerlink\" title=\"2. 数学公式语法\"></a>2. <strong>数学公式语法</strong></h2><h3 id=\"2-1-行内公式\"><a href=\"#2-1-行内公式\" class=\"headerlink\" title=\"2.1 行内公式\"></a>2.1 行内公式</h3><p>在段落中插入公式，使用单个 <code>$</code> 包裹公式内容：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">行内公式示例：$E = mc^2$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>渲染效果： 行内公式示例：$E = mc^2$</p>\n<hr>\n<h3 id=\"2-2-独立公式\"><a href=\"#2-2-独立公式\" class=\"headerlink\" title=\"2.2 独立公式\"></a>2.2 独立公式</h3><p>单独显示的数学公式，使用双 <code>$</code> 或 <code>$$</code> 包裹公式内容：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">独立公式示例：\n$$\n\\int_a^b f(x)dx = F(b) - F(a)\n$$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>渲染效果：<br>$$<br>\\int_a^b f(x)dx = F(b) - F(a)<br>$$</p>\n<hr>\n<h2 id=\"3-复杂数学公式\"><a href=\"#3-复杂数学公式\" class=\"headerlink\" title=\"3. 复杂数学公式\"></a>3. <strong>复杂数学公式</strong></h2><h3 id=\"示例-1：矩阵\"><a href=\"#示例-1：矩阵\" class=\"headerlink\" title=\"示例 1：矩阵\"></a>示例 1：矩阵</h3><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">矩阵：\n$$\n\\mathbf{A} = \\begin{bmatrix}\n1 &amp; 2 &amp; 3 \\\\\n4 &amp; 5 &amp; 6 \\\\\n7 &amp; 8 &amp; 9\n\\end{bmatrix}\n$$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>渲染效果：<br>$$<br>\\mathbf{A} = \\begin{bmatrix}<br>1 &amp; 2 &amp; 3 \\<br>4 &amp; 5 &amp; 6 \\<br>7 &amp; 8 &amp; 9<br>\\end{bmatrix}<br>$$</p>\n<hr>\n<h3 id=\"示例-2：分数和开方\"><a href=\"#示例-2：分数和开方\" class=\"headerlink\" title=\"示例 2：分数和开方\"></a>示例 2：分数和开方</h3><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">分数与开方：\n$$\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n$$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>渲染效果：<br>$$<br>x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}<br>$$</p>\n<hr>\n<h3 id=\"示例-3：求和与极限\"><a href=\"#示例-3：求和与极限\" class=\"headerlink\" title=\"示例 3：求和与极限\"></a>示例 3：求和与极限</h3><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">求和与极限：\n$$\n\\sum_{i=1}^n i = \\frac{n(n+1)}{2}, \\quad \\lim_{x \\to \\infty} \\frac{1}{x} = 0\n$$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>渲染效果：<br>$$<br>\\sum_{i=1}^n i = \\frac{n(n+1)}{2}, \\quad \\lim_{x \\to \\infty} \\frac{1}{x} = 0<br>$$</p>\n<hr>\n<h3 id=\"示例-4：多行公式对齐\"><a href=\"#示例-4：多行公式对齐\" class=\"headerlink\" title=\"示例 4：多行公式对齐\"></a>示例 4：多行公式对齐</h3><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">多行公式对齐：\n$$\n\\begin{aligned}\ny &amp;= mx + b \\\\\nf(x) &amp;= x^2 + 2x + 1\n\\end{aligned}\n$$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>渲染效果：<br>$$<br>\\begin{aligned}<br>y &amp;= mx + b \\<br>f(x) &amp;= x^2 + 2x + 1<br>\\end{aligned}<br>$$</p>\n<hr>\n<h2 id=\"4-快捷键\"><a href=\"#4-快捷键\" class=\"headerlink\" title=\"4. 快捷键\"></a>4. <strong>快捷键</strong></h2><ul>\n<li>使用 <strong><code>Ctrl + T</code></strong> 或 <strong><code>Command + T</code></strong> 可以快速切换公式预览。</li>\n<li>如果希望查看公式源代码，按下 <strong><code>Ctrl + /</code></strong> 或 **<code>Command + /</code>**。</li>\n</ul>\n<hr>\n<p>在 Typora 中，如果需要数学公式与文字紧密排列在一起，可以使用 <strong>行内公式</strong> 格式。具体方法如下：</p>\n<p>偏好设置-&gt;markdown-&gt;勾选内联公式</p>\n<hr>\n<h2 id=\"1-使用-实现行内公式\"><a href=\"#1-使用-实现行内公式\" class=\"headerlink\" title=\"1. 使用 $...$ 实现行内公式\"></a><strong>1. 使用 <code>$...$</code> 实现行内公式</strong></h2><p>行内公式会随着文字的排版而排列，可以直接插入到文字之间。例如：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">爱因斯坦的质能方程为 $E=mc^2$，这是能量和质量关系的基础公式。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"渲染效果：\"><a href=\"#渲染效果：\" class=\"headerlink\" title=\"渲染效果：\"></a>渲染效果：</h3><p>爱因斯坦的质能方程为 $E=mc^2$，这是能量和质量关系的基础公式。</p>\n<hr>\n<h2 id=\"2-注意空格与对齐问题\"><a href=\"#2-注意空格与对齐问题\" class=\"headerlink\" title=\"2. 注意空格与对齐问题\"></a><strong>2. 注意空格与对齐问题</strong></h2><h3 id=\"示例-1：在公式与文字之间增加适当的空格\"><a href=\"#示例-1：在公式与文字之间增加适当的空格\" class=\"headerlink\" title=\"示例 1：在公式与文字之间增加适当的空格\"></a>示例 1：在公式与文字之间增加适当的空格</h3><p>当公式两侧紧挨中文字符时，可能需要手动添加空格，以确保渲染结果美观：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">质量 $m$ 和能量 $E$ 之间的关系为 $E = mc^2$。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"渲染效果：-1\"><a href=\"#渲染效果：-1\" class=\"headerlink\" title=\"渲染效果：\"></a>渲染效果：</h3><p>质量 $m$ 和能量 $E$ 之间的关系为 $E = mc^2$。</p>\n<hr>\n<h3 id=\"示例-2：纯英文情况下，公式无需额外空格\"><a href=\"#示例-2：纯英文情况下，公式无需额外空格\" class=\"headerlink\" title=\"示例 2：纯英文情况下，公式无需额外空格\"></a>示例 2：纯英文情况下，公式无需额外空格</h3><p>在纯英文环境中，公式通常与文字自然对齐，无需调整：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">The equation $E=mc^2$ explains the relationship between energy and mass.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"渲染效果：-2\"><a href=\"#渲染效果：-2\" class=\"headerlink\" title=\"渲染效果：\"></a>渲染效果：</h3><p>The equation $E=mc^2$ explains the relationship between energy and mass.</p>\n<hr>\n<h2 id=\"3-混合行内和块级公式\"><a href=\"#3-混合行内和块级公式\" class=\"headerlink\" title=\"3. 混合行内和块级公式\"></a><strong>3. 混合行内和块级公式</strong></h2><p>如果需要同时包含行内和块级公式，可以灵活使用：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">爱因斯坦提出了著名的公式 $E = mc^2$，用于描述能量和质量的关系。\n\n更详细的表达形式为：\n$$\nE = \\int_a^b f(x) dx\n$$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"渲染效果：-3\"><a href=\"#渲染效果：-3\" class=\"headerlink\" title=\"渲染效果：\"></a>渲染效果：</h3><p>爱因斯坦提出了著名的公式 $E = mc^2$，用于描述能量和质量的关系。</p>\n<p>更详细的表达形式为：<br>$$<br>E = \\int_a^b f(x) dx<br>$$</p>\n<hr>\n<h2 id=\"4-Typora-自动调整换行\"><a href=\"#4-Typora-自动调整换行\" class=\"headerlink\" title=\"4. Typora 自动调整换行\"></a><strong>4. Typora 自动调整换行</strong></h2><p>如果文字较多且公式插入后自动换行，可以通过调整文字排版来控制公式位置。例如：</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">为了进一步验证公式 $E=mc^2$ 的正确性，我们需要对其进行理论推导，涉及到积分与导数等高等数学内容。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"渲染效果：-4\"><a href=\"#渲染效果：-4\" class=\"headerlink\" title=\"渲染效果：\"></a>渲染效果：</h3><p>为了进一步验证公式 $E=mc^2$ 的正确性，我们需要对其进行理论推导，涉及到积分与导数等高等数学内容。</p>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/25/xi-la-zi-mu/",
            "url": "https://0xdadream.github.io/2024/11/25/xi-la-zi-mu/",
            "title": "希腊字母",
            "date_published": "2024-11-25T11:25:00.000Z",
            "content_html": "<h1 id=\"希腊字母\"><a href=\"#希腊字母\" class=\"headerlink\" title=\"希腊字母\"></a>希腊字母</h1><p>以下是数学和科学中常用的 <strong>希腊字母</strong> 及其用途的对照表，包括大写和小写形式：</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th><strong>字母</strong></th>\n<th><strong>名称</strong></th>\n<th><strong>发音（英文）</strong></th>\n<th><strong>数学与科学用途</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>Αα</td>\n<td>Alpha</td>\n<td>ˈælfə</td>\n<td>表示角度、系数、角速度等</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Ββ</td>\n<td>Beta</td>\n<td>ˈbeɪtə 或 ˈbiːtə</td>\n<td>表示系数、β辐射、概率密度函数中的参数等</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Γγ</td>\n<td>Gamma</td>\n<td>ˈɡæmə</td>\n<td>表示伽马函数、光谱系数、第三角速度等</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Δδ</td>\n<td>Delta</td>\n<td>ˈdɛltə</td>\n<td>表示变化量、偏导数（小写 δ）、有限差分等</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Εε</td>\n<td>Epsilon</td>\n<td>ˈɛpsɪlɒn</td>\n<td>表示小量、误差、介电常数等</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Ζζ</td>\n<td>Zeta</td>\n<td>ˈzeɪtə</td>\n<td>表示黎曼ζ函数、阻尼系数等</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Ηη</td>\n<td>Eta</td>\n<td>ˈiːtə 或 ˈeɪtə</td>\n<td>表示效率、黏滞系数等</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Θθ</td>\n<td>Theta</td>\n<td>ˈθeɪtə</td>\n<td>表示角度、温度、周期等</td>\n</tr>\n<tr>\n<td>9</td>\n<td>Ιι</td>\n<td>Iota</td>\n<td>aɪˈoʊtə</td>\n<td>很少用于数学，通常表示极小值</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Κκ</td>\n<td>Kappa</td>\n<td>ˈkæpə</td>\n<td>表示曲率、波数、热导率等</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Λλ</td>\n<td>Lambda</td>\n<td>ˈlæmdə</td>\n<td>表示波长、特征值、线性密度等</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Μμ</td>\n<td>Mu</td>\n<td>mjuː</td>\n<td>表示摩擦系数、磁导率、平均值等</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Νν</td>\n<td>Nu</td>\n<td>njuː</td>\n<td>表示频率、泊松比等</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Ξξ</td>\n<td>Xi</td>\n<td>zaɪ 或 ksiː</td>\n<td>表示随机变量、配分函数等</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Οο</td>\n<td>Omicron</td>\n<td>ˈɒmɪkrɒn</td>\n<td>很少用于数学与科学</td>\n</tr>\n<tr>\n<td>16</td>\n<td>Ππ</td>\n<td>Pi</td>\n<td>paɪ</td>\n<td>表示圆周率（π\\piπ）、乘积符号（∏\\prod∏）等</td>\n</tr>\n<tr>\n<td>17</td>\n<td>Ρρ</td>\n<td>Rho</td>\n<td>roʊ</td>\n<td>表示密度、电阻率等</td>\n</tr>\n<tr>\n<td>18</td>\n<td>Σσ/ς</td>\n<td>Sigma</td>\n<td>ˈsɪɡmə</td>\n<td>表示求和符号（∑\\sum∑）、标准差等</td>\n</tr>\n<tr>\n<td>19</td>\n<td>Ττ</td>\n<td>Tau</td>\n<td>taʊ</td>\n<td>表示时间常数、剪切应力等</td>\n</tr>\n<tr>\n<td>20</td>\n<td>Υυ</td>\n<td>Upsilon</td>\n<td>ˈʌpsɪlɒn 或 ˈjuːpsɪlɒn</td>\n<td>很少用于数学，偶用于表示介质传播系数</td>\n</tr>\n<tr>\n<td>21</td>\n<td>Φφ</td>\n<td>Phi</td>\n<td>faɪ 或 fiː</td>\n<td>表示黄金比例、角度、磁通量等</td>\n</tr>\n<tr>\n<td>22</td>\n<td>Χχ</td>\n<td>Chi</td>\n<td>kaɪ</td>\n<td>表示卡方分布、特征函数等</td>\n</tr>\n<tr>\n<td>23</td>\n<td>Ψψ</td>\n<td>Psi</td>\n<td>saɪ</td>\n<td>表示波函数、状态函数等</td>\n</tr>\n<tr>\n<td>24</td>\n<td>Ωω</td>\n<td>Omega</td>\n<td>ˈoʊmɪɡə 或 oʊˈmeɪɡə</td>\n<td>表示欧姆（电阻单位）、角速度、复数平面中的极限等</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/23/vim-bian-ji-qi/",
            "url": "https://0xdadream.github.io/2024/11/23/vim-bian-ji-qi/",
            "title": "Vim 编辑器详细教程",
            "date_published": "2024-11-23T15:25:00.000Z",
            "content_html": "<h1 id=\"Vim-编辑器详细教程\"><a href=\"#Vim-编辑器详细教程\" class=\"headerlink\" title=\"Vim 编辑器详细教程\"></a>Vim 编辑器详细教程</h1><p>Vim 是一个强大的文本编辑器，以其高效的编辑能力和强大的功能著称，特别适合程序员和文字处理工作者。以下是一个详细的 Vim 教程，从基础操作到高级用法。</p>\n<hr>\n<h2 id=\"1-Vim-基础操作\"><a href=\"#1-Vim-基础操作\" class=\"headerlink\" title=\"1. Vim 基础操作\"></a>1. <strong>Vim 基础操作</strong></h2><h3 id=\"1-1-Vim-的三种模式\"><a href=\"#1-1-Vim-的三种模式\" class=\"headerlink\" title=\"1.1 Vim 的三种模式\"></a>1.1 Vim 的三种模式</h3><ul>\n<li><strong>正常模式</strong>（Normal Mode）：默认进入的模式，用于浏览、操作和执行命令。</li>\n<li><strong>插入模式</strong>（Insert Mode）：用于编辑文本，按 <code>i</code> 进入。</li>\n<li><strong>命令模式</strong>（Command Mode）：执行文件操作或配置命令，按 <code>:</code> 进入。</li>\n<li>ESC：三种模式切换。</li>\n</ul>\n<h3 id=\"1-2-启动和退出-Vim\"><a href=\"#1-2-启动和退出-Vim\" class=\"headerlink\" title=\"1.2 启动和退出 Vim\"></a>1.2 启动和退出 Vim</h3><ul>\n<li><p>启动 Vim：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> 文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>退出 Vim：</p>\n<ul>\n<li>保存并退出：<code>:</code> → 输入 <code>wq</code> → 按 <code>Enter</code></li>\n<li>强制退出（不保存）：<code>:</code> → 输入 <code>q!</code> → 按 <code>Enter</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"2-Vim-基本移动命令\"><a href=\"#2-Vim-基本移动命令\" class=\"headerlink\" title=\"2. Vim 基本移动命令\"></a>2. <strong>Vim 基本移动命令</strong></h2><ul>\n<li>按键快速移动：<ul>\n<li><code>h</code>：向左移动一个字符</li>\n<li><code>l</code>：向右移动一个字符</li>\n<li><code>j</code>：向下移动一行</li>\n<li><code>k</code>：向上移动一行</li>\n</ul>\n</li>\n<li>按单词移动：<ul>\n<li><code>w</code>：跳到下一个单词开头</li>\n<li><code>e</code>：跳到当前或下一个单词末尾</li>\n<li><code>b</code>：跳到当前或前一个单词开头</li>\n</ul>\n</li>\n<li>按行快速移动：<ul>\n<li><code>0</code>：跳到行首</li>\n<li><code>^</code>：跳到行首的第一个非空字符</li>\n<li><code>$</code>：跳到行尾</li>\n</ul>\n</li>\n<li>按页移动：<ul>\n<li><code>Ctrl-d</code>：向下滚动半屏</li>\n<li><code>Ctrl-u</code>：向上滚动半屏</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"3-文本编辑操作\"><a href=\"#3-文本编辑操作\" class=\"headerlink\" title=\"3. 文本编辑操作\"></a>3. <strong>文本编辑操作</strong></h2><h3 id=\"3-1-插入文本\"><a href=\"#3-1-插入文本\" class=\"headerlink\" title=\"3.1 插入文本\"></a>3.1 插入文本</h3><ul>\n<li><code>i</code>：在光标前插入</li>\n<li><code>I</code>：在行首插入</li>\n<li><code>a</code>：在光标后插入</li>\n<li><code>A</code>：在行尾插入</li>\n<li><code>o</code>：在当前行下插入新行</li>\n<li><code>O</code>：在当前行上插入新行</li>\n</ul>\n<h3 id=\"3-2-删除文本\"><a href=\"#3-2-删除文本\" class=\"headerlink\" title=\"3.2 删除文本\"></a>3.2 删除文本</h3><ul>\n<li><code>x</code>：删除光标处字符</li>\n<li><code>dw</code>：删除当前单词</li>\n<li><code>dd</code>：删除当前行</li>\n<li><code>d$</code>：删除光标到行尾</li>\n<li><code>d0</code>：删除光标到行首</li>\n</ul>\n<h3 id=\"3-3-复制与粘贴\"><a href=\"#3-3-复制与粘贴\" class=\"headerlink\" title=\"3.3 复制与粘贴\"></a>3.3 复制与粘贴</h3><ul>\n<li><code>yy</code>：复制当前行</li>\n<li><code>y$</code>：复制光标到行尾</li>\n<li><code>p</code>：粘贴到光标后</li>\n<li><code>P</code>：粘贴到光标前</li>\n</ul>\n<h3 id=\"3-4-替换文本\"><a href=\"#3-4-替换文本\" class=\"headerlink\" title=\"3.4 替换文本\"></a>3.4 替换文本</h3><ul>\n<li><code>r</code>：替换当前字符</li>\n<li><code>R</code>：进入替换模式</li>\n<li><code>cw</code>：替换当前单词</li>\n<li><code>C</code>：替换光标到行尾内容</li>\n</ul>\n<hr>\n<h2 id=\"4-搜索与替换\"><a href=\"#4-搜索与替换\" class=\"headerlink\" title=\"4. 搜索与替换\"></a>4. <strong>搜索与替换</strong></h2><h3 id=\"4-1-搜索\"><a href=\"#4-1-搜索\" class=\"headerlink\" title=\"4.1 搜索\"></a>4.1 搜索</h3><ul>\n<li><code>/关键词</code>：向下搜索</li>\n<li><code>?关键词</code>：向上搜索</li>\n<li><code>n</code>：跳到下一个匹配</li>\n<li><code>N</code>：跳到上一个匹配</li>\n</ul>\n<h3 id=\"4-2-替换\"><a href=\"#4-2-替换\" class=\"headerlink\" title=\"4.2 替换\"></a>4.2 替换</h3><ul>\n<li>单次替换：<code>:%s/旧文本/新文本/g</code></li>\n<li>确认替换：<code>:%s/旧文本/新文本/gc</code></li>\n</ul>\n<hr>\n<h2 id=\"5-多文件与多窗口\"><a href=\"#5-多文件与多窗口\" class=\"headerlink\" title=\"5. 多文件与多窗口\"></a>5. <strong>多文件与多窗口</strong></h2><h3 id=\"5-1-分屏操作\"><a href=\"#5-1-分屏操作\" class=\"headerlink\" title=\"5.1 分屏操作\"></a>5.1 分屏操作</h3><ul>\n<li><code>:sp 文件名</code>：水平分屏</li>\n<li><code>:vsp 文件名</code>：垂直分屏</li>\n<li><code>Ctrl-w</code> + <code>方向键</code>：切换窗口</li>\n</ul>\n<h3 id=\"5-2-标签页\"><a href=\"#5-2-标签页\" class=\"headerlink\" title=\"5.2 标签页\"></a>5.2 标签页</h3><ul>\n<li><code>:tabnew 文件名</code>：打开新标签页</li>\n<li><code>:tabn</code>：切换到下一个标签页</li>\n<li><code>:tabp</code>：切换到上一个标签页</li>\n</ul>\n<hr>\n<h2 id=\"6-Vim-配置\"><a href=\"#6-Vim-配置\" class=\"headerlink\" title=\"6. Vim 配置\"></a>6. <strong>Vim 配置</strong></h2><h3 id=\"6-1-创建配置文件\"><a href=\"#6-1-创建配置文件\" class=\"headerlink\" title=\"6.1 创建配置文件\"></a>6.1 创建配置文件</h3><p>Vim 配置文件路径：</p>\n<ul>\n<li>Linux: <code>~/.vimrc</code></li>\n<li>Windows: <code>C:\\Users\\&lt;用户名&gt;\\_vimrc</code></li>\n</ul>\n<h3 id=\"6-2-常用配置\"><a href=\"#6-2-常用配置\" class=\"headerlink\" title=\"6.2 常用配置\"></a>6.2 常用配置</h3><pre class=\"line-numbers language-vim\" data-language=\"vim\"><code class=\"language-vim\"><span class=\"token keyword\">set</span> <span class=\"token keyword\">number</span>           <span class=\"token comment\">\" 显示行号</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">tabstop</span><span class=\"token operator\">=</span><span class=\"token number\">4</span>        <span class=\"token comment\">\" 设置 Tab 宽度为 4</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">shiftwidth</span><span class=\"token operator\">=</span><span class=\"token number\">4</span>     <span class=\"token comment\">\" 自动缩进宽度为 4</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">expandtab</span>        <span class=\"token comment\">\" 将 Tab 转为空格</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">autoindent</span>       <span class=\"token comment\">\" 自动缩进</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">hlsearch</span>         <span class=\"token comment\">\" 高亮搜索结果</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">incsearch</span>        <span class=\"token comment\">\" 实时搜索</span>\n<span class=\"token builtin\">syntax</span> <span class=\"token keyword\">on</span>            <span class=\"token comment\">\" 开启语法高亮</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"7-高级功能\"><a href=\"#7-高级功能\" class=\"headerlink\" title=\"7. 高级功能\"></a>7. <strong>高级功能</strong></h2><h3 id=\"7-1-宏录制\"><a href=\"#7-1-宏录制\" class=\"headerlink\" title=\"7.1 宏录制\"></a>7.1 宏录制</h3><ul>\n<li>开始录制：按 <code>q</code> → 输入一个字母（如 <code>a</code>）</li>\n<li>执行操作（如插入文本或删除行）</li>\n<li>结束录制：再次按 <code>q</code></li>\n<li>播放宏：<code>@a</code></li>\n</ul>\n<h3 id=\"7-2-快速跳转\"><a href=\"#7-2-快速跳转\" class=\"headerlink\" title=\"7.2 快速跳转\"></a>7.2 快速跳转</h3><ul>\n<li><code>Ctrl-o</code>：返回上一个光标位置</li>\n<li><code>Ctrl-i</code>：前进到下一个光标位置</li>\n</ul>\n<hr>\n<h2 id=\"8-学习资源\"><a href=\"#8-学习资源\" class=\"headerlink\" title=\"8. 学习资源\"></a>8. <strong>学习资源</strong></h2><ul>\n<li>官方文档：<code>:help</code></li>\n<li>在线教程：<a href=\"https://vim-adventures.com/\">Vim Adventures</a></li>\n</ul>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/",
            "url": "https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/",
            "title": "zotero 7安装以及使用",
            "date_published": "2024-09-28T13:25:00.000Z",
            "content_html": "<h1 id=\"zotero-7安装以及使用\"><a href=\"#zotero-7安装以及使用\" class=\"headerlink\" title=\"zotero 7安装以及使用\"></a>zotero 7安装以及使用</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><strong>访问官网</strong>：<ul>\n<li>打开浏览器，访问 <a href=\"https://www.zotero.org/\">Zotero官网</a>。</li>\n</ul>\n</li>\n<li><strong>下载 Zotero</strong>：<ul>\n<li>点击页面上的“Download”按钮。</li>\n<li>根据你的操作系统选择相应的版本（Windows、macOS、Linux）。</li>\n</ul>\n</li>\n<li><strong>安装 Zotero</strong>：<ul>\n<li>Windows：<ul>\n<li>下载完成后，双击下载的 <code>.exe</code> 文件。</li>\n<li>按照提示进行安装，完成后在开始菜单中找到Zotero。</li>\n</ul>\n</li>\n<li>macOS：<ul>\n<li>下载 <code>.dmg</code> 文件后，双击打开。</li>\n<li>将Zotero图标拖动到“应用程序”文件夹中。</li>\n</ul>\n</li>\n<li>Linux：<ul>\n<li>根据你的发行版选择合适的安装方式（如使用包管理器或手动解压）。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"设置同步\"><a href=\"#设置同步\" class=\"headerlink\" title=\"设置同步\"></a>设置同步</h2><p><strong>创建 Zotero 账户</strong>：</p>\n<ul>\n<li>如果还没有账户，访问 <a href=\"https://www.zotero.org/\">Zotero官网</a> 并点击“注册”以创建一个新账户。填写所需信息并确认电子邮件。</li>\n</ul>\n<p><strong>进入首选项</strong>：</p>\n<ul>\n<li>点击菜单栏中的“编辑”（Windows）或“Zotero”（macOS）。</li>\n<li>选择“设置”以打开设置窗口。</li>\n</ul>\n<p><strong>设置同步</strong>：</p>\n<ul>\n<li>在设置窗口中，选择“同步”选项卡。</li>\n<li>在“账户”部分，输入你的 Zotero 账户邮箱和密码。</li>\n<li>点击“验证”以确保信息正确。</li>\n</ul>\n<p><strong>启用同步</strong>：</p>\n<ul>\n<li>勾选“自动同步”选项。这将允许 Zotero 在你添加或修改文献时自动进行同步。</li>\n</ul>\n<p><strong>手动同步</strong>：</p>\n<ul>\n<li>在 Zotero 界面的右上角，有一个绿色的同步图标（两个旋转的箭头）。点击它可以手动触发同步。</li>\n</ul>\n<h2 id=\"设置同步到坚果云\"><a href=\"#设置同步到坚果云\" class=\"headerlink\" title=\"设置同步到坚果云\"></a>设置同步到坚果云</h2><ul>\n<li>首先在坚果云里为Zotero设置应用密码，在坚果云官网登录你的坚果云账号后打开【账户信息】</li>\n</ul>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%BD%91%E9%A1%B5%E7%AB%AF%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF.png\" alt=\"账户信息\"></p>\n<ul>\n<li>选择【安全选项】-【添加应用密码】-输入名称-【生成密码】，这个密码就是后面会在zoteor里需要输入的专门的应用密码。</li>\n</ul>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%89%E5%85%A8%E9%80%89%E9%A1%B9-1.png\" alt=\"安全选项\"></p>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%94%9F%E6%88%90%E5%AF%86%E7%A0%81.png\" alt=\"密码\"></p>\n<p><img src=\"https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%8C%E6%88%90%E5%AF%86%E7%A0%81.png\" alt=\"img\"></p>\n<ul>\n<li>打开Zotero，选择【工具】-【首选项】</li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg\" alt=\"QQ截图20170601102448\"></a></p>\n<ul>\n<li>打开【同步】，<strong>Zotero同步服务器</strong>里登录的是你的Zotero账号和密码，在下面的<strong>文件同步</strong>里选择使用【WebDav】</li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg\" alt=\"QQ截图20170601102548\"></a></p>\n<ul>\n<li>在这里填写你的坚果云的服务器地址：<a href=\"https://dav.jianguoyun.com/dav/%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D%E6%98%AF%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%AF%86%E7%A0%81%E6%98%AF%E4%B8%80%E5%BC%80%E5%A7%8B%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%EF%BC%88%E9%9D%9E%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%EF%BC%89%EF%BC%8C%E8%AE%BE%E7%BD%AE%E5%A5%BD%E5%90%8E%E9%80%89%E6%8B%A9ok%E5%8D%B3%E5%8F%AF%E3%80%82\">https://dav.jianguoyun.com/dav/，用户名是坚果云账号，密码是一开始设置的应用密码（非坚果云账号登录密码），设置好后选择ok即可。</a></li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg\" alt=\"QQ截图20170601103235\"></a></p>\n<ul>\n<li>回到首页，点击右边的绿色的圈就可以同步更新，如果是第一次设置，会提示在坚果云里自动创建一个名叫：zotero的文件夹，用于存放同步更新的文件。</li>\n</ul>\n<p><a href=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg\"><img src=\"http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg\" alt=\"QQ截图20170601141516\"></a></p>\n<h2 id=\"插件安装推荐\"><a href=\"#插件安装推荐\" class=\"headerlink\" title=\"插件安装推荐\"></a>插件安装推荐</h2><h3 id=\"zotero-style\"><a href=\"#zotero-style\" class=\"headerlink\" title=\"zotero-style\"></a>zotero-style</h3><p><a href=\"https://github.com/MuiseDestiny/zotero-style\">MuiseDestiny/zotero-style: Ethereal Style for Zotero (github.com)</a>这是一个多彩的插件，用于增强 Zotero 的界面功能</p>\n<h3 id=\"zotero-pdf-translate\"><a href=\"#zotero-pdf-translate\" class=\"headerlink\" title=\"zotero-pdf-translate\"></a>zotero-pdf-translate</h3><p><a href=\"https://github.com/windingwind/zotero-pdf-translate\">windingwind/zotero-pdf-translate: Translate PDF, EPub, webpage, metadata, annotations, notes to the target language. Support 20+ translate services. (github.com)</a>深度适配 Zotero 阅读器的翻译插件</p>\n<h3 id=\"jasminum\"><a href=\"#jasminum\" class=\"headerlink\" title=\"jasminum\"></a>jasminum</h3><p><a href=\"https://github.com/l0o0/jasminum\">l0o0/jasminum: A Zotero add-on to retrive CNKI meta data. 一个简单的Zotero 插件，用于识别中文元数据 (github.com)</a>这个插件用来增强 Zotero 对中文文献的支持能力，包括自动更新中文 translators、根据中文文献名检索其元数据等。</p>\n<h3 id=\"绿青蛙\"><a href=\"#绿青蛙\" class=\"headerlink\" title=\"绿青蛙\"></a>绿青蛙</h3><p><a href=\"https://github.com/redleafnew/zotero-updateifsE\">redleafnew/zotero-updateifsE: Green Frog https://github.com/redleafnew/zotero-updateifs 的easyScholar数据版。更新影响因子，其他一系列工具，详见Readme</a>easyScholar数据版，显示更多期刊信息，详细使用见链接</p>\n<h2 id=\"android下载\"><a href=\"#android下载\" class=\"headerlink\" title=\"android下载\"></a>android下载</h2><p><a href=\"https://zotero.cn.uptodown.com/android/download\">下载Zotero 1.0.0-102针对于Android | Uptodown.com</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://zotero-chinese.com/user-guide/\">Zotero 百科全书 | Zotero 中文社区 (zotero-chinese.com)</a></p>\n<p><a href=\"https://help.jianguoyun.com/?p=3168\">如何在Zotero中设置webdav连接到坚果云？ | 坚果云帮助中心 (jianguoyun.com)</a></p>\n",
            "tags": [
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/07/27/powershell-ti-quan/",
            "url": "https://0xdadream.github.io/2024/07/27/powershell-ti-quan/",
            "title": "powershell提权",
            "date_published": "2024-07-27T02:25:00.000Z",
            "content_html": "<h1 id=\"powershell提权\"><a href=\"#powershell提权\" class=\"headerlink\" title=\"powershell提权\"></a>powershell提权</h1><p>安装gsudo</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">winget <span class=\"token function\">install</span> gerardog.gsudo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><a href=\"https://gerardog.github.io/gsudo/docs/install\">How to Install | gsudo Documentation (gerardog.github.io)</a></p>\n",
            "tags": [
                "windows",
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/20/npm-jian-jie/",
            "url": "https://0xdadream.github.io/2024/01/20/npm-jian-jie/",
            "title": "NPM简介",
            "date_published": "2024-01-20T01:15:00.000Z",
            "content_html": "<h1 id=\"NPM简介\"><a href=\"#NPM简介\" class=\"headerlink\" title=\"NPM简介\"></a>NPM简介</h1><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题</p>\n<h2 id=\"NPM命令\"><a href=\"#NPM命令\" class=\"headerlink\" title=\"NPM命令\"></a>NPM命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> 模块名 <span class=\"token parameter variable\">-g</span>  <span class=\"token comment\">#全局安装，相当于加了一个环境变量，能全局调用</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> 模块名 <span class=\"token comment\">#普通安装，一般安装在当前文件夹</span>\n\n<span class=\"token function\">npm</span> list <span class=\"token parameter variable\">-g</span> <span class=\"token comment\">#列出已安装全局模块</span>\n<span class=\"token function\">npm</span> list\n\n<span class=\"token function\">npm</span> list 模块 <span class=\"token comment\">#显示模块版本号</span>\n\n<span class=\"token function\">npm</span> uninstall 模块名 <span class=\"token parameter variable\">-g</span>  <span class=\"token comment\">#全局卸载</span>\n<span class=\"token function\">npm</span> uninstall 模块名 <span class=\"token comment\">#普通卸载</span>\n\n<span class=\"token function\">npm</span> search 关键字 <span class=\"token comment\">#搜索模块</span>\n\n<span class=\"token function\">npm</span> view 模块名 versions  <span class=\"token comment\">#列出该模块所有版本</span>\n\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> 模块名@版本号 <span class=\"token comment\">#安装具体版本，一般只能安装一个版本</span>\n\n<span class=\"token function\">npm</span> cache clean <span class=\"token parameter variable\">--force</span> <span class=\"token comment\">#安装后出现问题，可以运行清理缓存，这会清除全局安装</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/",
            "url": "https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/",
            "title": "node.js版本问题",
            "date_published": "2024-01-20T00:11:00.000Z",
            "content_html": "<h1 id=\"node-js版本问题\"><a href=\"#node-js版本问题\" class=\"headerlink\" title=\"node.js版本问题\"></a>node.js版本问题</h1><p>起因是我想给node.js版本降级，卸载了新版，安装旧版后发现npm仍然是最新版本</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>安装nvm(<a href=\"https://github.com/coreybutler/nvm-windows\">coreybutler/nvm-windows: A node.js version management utility for Windows. Ironically written in Go. (github.com)</a>)，这是一款管理node.js版本的工具</p>\n<h2 id=\"安装流程\"><a href=\"#安装流程\" class=\"headerlink\" title=\"安装流程\"></a>安装流程</h2><p>进入github选择nvm-setup下载，然后傻瓜式安装</p>\n<h2 id=\"部分命令\"><a href=\"#部分命令\" class=\"headerlink\" title=\"部分命令\"></a>部分命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvm  <span class=\"token comment\">#查看命令面板</span>\nnvm <span class=\"token function\">ls</span> available <span class=\"token comment\">#列出可用的最新的部分node.js版本</span>\nnvm <span class=\"token function\">install</span> 版本号 <span class=\"token comment\"># 安装想要的版本</span>\nnvm uninstall 版本号 <span class=\"token comment\"># 卸载想要的版本</span>\nnvm list <span class=\"token comment\">#列出已经安装的版本</span>\nnvm use 版本号 <span class=\"token comment\">#启用版本</span>\n<span class=\"token function\">node</span> <span class=\"token parameter variable\">-v</span> <span class=\"token comment\">#查看版本号</span>\n<span class=\"token function\">npm</span> <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "tools"
            ]
        }
    ]
}