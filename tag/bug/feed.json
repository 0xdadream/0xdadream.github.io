{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"bug\" tag",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2024/11/25/modulenotfounderror-no-module-named-crypto.cipher/",
            "url": "https://0xdadream.github.io/2024/11/25/modulenotfounderror-no-module-named-crypto.cipher/",
            "title": "Python报错ModuleNotFoundError:No-module-named-Crypto.Cipher",
            "date_published": "2024-11-25T01:25:00.000Z",
            "content_html": "<h1 id=\"Python报错ModuleNotFoundError-No-module-named-‘Crypto-Cipher’\"><a href=\"#Python报错ModuleNotFoundError-No-module-named-‘Crypto-Cipher’\" class=\"headerlink\" title=\"Python报错ModuleNotFoundError: No module named ‘Crypto.Cipher’\"></a>Python报错ModuleNotFoundError: No module named ‘Crypto.Cipher’</h1><p>这个报错通常是因为 Python 中的 <code>Crypto.Cipher</code> 模块不可用，可能是没有正确安装相关库或者使用了错误的模块路径。</p>\n<p>在 Python 中，如果要使用加密相关功能，可以安装并使用 <strong>PyCryptodome</strong>，这是一个常用的加密库。</p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><h4 id=\"1-安装-pycryptodome\"><a href=\"#1-安装-pycryptodome\" class=\"headerlink\" title=\"1. 安装 pycryptodome\"></a>1. 安装 <code>pycryptodome</code></h4><p>运行以下命令来安装正确的库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> pycryptodome<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-检查安装版本是否正确\"><a href=\"#2-检查安装版本是否正确\" class=\"headerlink\" title=\"2. 检查安装版本是否正确\"></a>2. 检查安装版本是否正确</h4><p>确保安装成功，并查看库版本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip show pycryptodome<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出应类似于：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Name: pycryptodome\nVersion: <span class=\"token number\">3</span>.x.x\nLocation: /path/to/python/site-packages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-如果问题仍存在\"><a href=\"#3-如果问题仍存在\" class=\"headerlink\" title=\"3. 如果问题仍存在\"></a>3. 如果问题仍存在</h4><ul>\n<li><p>环境问题：确认是否安装在正确的 Python 环境中。你可以通过以下命令检查：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">which</span> python\n<span class=\"token function\">which</span> pip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>模块冲突：如果已经安装了一个名为 crypto的库（旧版本或其他库），可能会导致冲突。尝试卸载：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip uninstall crypto<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h4><p>以下是一个使用 <code>PyCryptodome</code> 的简单示例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Random <span class=\"token keyword\">import</span> get_random_bytes\n\n<span class=\"token comment\"># 生成随机密钥</span>\nkey <span class=\"token operator\">=</span> get_random_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\ncipher <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_EAX<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 加密数据</span>\nplaintext <span class=\"token operator\">=</span> <span class=\"token string\">b'This is a secret message.'</span>\nnonce <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>nonce\nciphertext<span class=\"token punctuation\">,</span> tag <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>encrypt_and_digest<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ciphertext:\"</span><span class=\"token punctuation\">,</span> ciphertext<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/11/20/linux-bian-yi-charm-ku/",
            "url": "https://0xdadream.github.io/2024/11/20/linux-bian-yi-charm-ku/",
            "title": "linux编译charm库",
            "date_published": "2024-11-20T01:25:00.000Z",
            "content_html": "<h1 id=\"linux编译charm库\"><a href=\"#linux编译charm库\" class=\"headerlink\" title=\"linux编译charm库\"></a>linux编译charm库</h1><p>在 Windows 的 Linux 子系统 (WSL) 中使用 Ubuntu 编译安装 Charm 库的步骤如下：</p>\n<hr>\n<h3 id=\"基于-WSL-的-Charm-库安装教程\"><a href=\"#基于-WSL-的-Charm-库安装教程\" class=\"headerlink\" title=\"基于 WSL 的 Charm 库安装教程\"></a><strong>基于 WSL 的 Charm 库安装教程</strong></h3><h4 id=\"1-更新系统并安装依赖\"><a href=\"#1-更新系统并安装依赖\" class=\"headerlink\" title=\"1. 更新系统并安装依赖\"></a><strong>1. 更新系统并安装依赖</strong></h4><p>应用商店下载linux后执行<code>wsl --update</code></p>\n<p>在 WSL Ubuntu 中，运行以下命令安装必要的编译工具和库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade <span class=\"token parameter variable\">-y</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> build-essential python3 python3-dev python3-pip python3-setuptools <span class=\"token punctuation\">\\</span>\n                     libgmp-dev libssl-dev swig libpbc-dev <span class=\"token function\">git</span> <span class=\"token function\">wget</span> gcc <span class=\"token function\">make</span> m4 flex bison<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的库可以一个一个单独安装，没有就去找源码安装，下面报安装错也能再安装，这里ubuntu版本最好不要太高，openssl我的是3.0.2没问题，gmp最高，openssl，python一般会自带，python我的是python3.10</p>\n<hr>\n<h4 id=\"2-安装-PBC-库\"><a href=\"#2-安装-PBC-库\" class=\"headerlink\" title=\"2. 安装 PBC 库\"></a><strong>2. 安装 PBC 库</strong></h4><p>PBC 是 Charm 的核心依赖之一，需要手动编译安装。</p>\n<ol>\n<li><p><strong>下载源码：</strong></p>\n<p><a href=\"https://crypto.stanford.edu/pbc/download.html\">PBC Library - Pairing-Based Cryptography - Downloads</a>下载第一个</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> pbc-0.5.14.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>编译和安装：</strong></p>\n<p>进入解压的目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./configure\n<span class=\"token function\">make</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"/usr/local/lib\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> /etc/ld.so.conf.d/libpbc.conf\n<span class=\"token function\">sudo</span> ldconfig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<hr>\n<h4 id=\"3-下载并安装-Charm-库\"><a href=\"#3-下载并安装-Charm-库\" class=\"headerlink\" title=\"3. 下载并安装 Charm 库\"></a><strong>3. 下载并安装 Charm 库</strong></h4><ol>\n<li><p><strong>下载源码：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/JHUISI/charm.git\n<span class=\"token builtin class-name\">cd</span> charm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>配置安装路径：</strong></p>\n<p>执行 <code>configure.sh</code> 脚本，指定 GMP 和 PBC 的安装路径：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./configure.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>编译和安装：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">make</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>import charm</code>判断安装是否成功</p>\n</li>\n</ol>\n<hr>\n<p>报错就看报错信息，可以参考官方<a href=\"https://jhuisi.github.io/charm/install_source.html\">Platform Install Manual — Charm-Crypto 0.50 documentation</a></p>\n",
            "tags": [
                "linux",
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/10/03/windows-xian-shi-yi-chang/",
            "url": "https://0xdadream.github.io/2024/10/03/windows-xian-shi-yi-chang/",
            "title": "windows显示异常",
            "date_published": "2024-10-03T01:25:00.000Z",
            "content_html": "<h1 id=\"windows显示异常\"><a href=\"#windows显示异常\" class=\"headerlink\" title=\"windows显示异常\"></a>windows显示异常</h1><p>windows中显示不完整，或者遮挡等不正常显示时，如下修改</p>\n<p>进入软件的exe执行文件，右键-&gt;属性-&gt;兼容性-&gt;更改所有用户的设置-&gt;更改高DPI设置-&gt;高DPI缩放替代-&gt;勾选替代高DPI的缩放行为指定系统，从上到下依次尝试</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/10/2c720759e87891d9b603f00411555832.png\"></p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/",
            "url": "https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/",
            "title": "windows安装软件时中文乱码",
            "date_published": "2024-09-21T01:25:00.000Z",
            "content_html": "<h1 id=\"windows安装软件时中文乱码\"><a href=\"#windows安装软件时中文乱码\" class=\"headerlink\" title=\"windows安装软件时中文乱码\"></a>windows安装软件时中文乱码</h1><p>启动控制面板，将查看方式调整为 “大图标”。点击 “区域”&gt;“管理”&gt;“更改系统区域设置”，确认 “当前系统区域设置” 为中文 (简体，中国)，如果下方的复选框为勾选状态，请取消勾选。如果未勾选，请将复选框勾选。</p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/07/27/ming-ling-xing-shu-ru-python-tiao-zhuan-wei-ruan-shang-dian/",
            "url": "https://0xdadream.github.io/2024/07/27/ming-ling-xing-shu-ru-python-tiao-zhuan-wei-ruan-shang-dian/",
            "title": "命令行输入python跳转微软商店",
            "date_published": "2024-07-27T01:25:00.000Z",
            "content_html": "<h1 id=\"命令行输入python跳转微软商店\"><a href=\"#命令行输入python跳转微软商店\" class=\"headerlink\" title=\"命令行输入python跳转微软商店\"></a>命令行输入python跳转微软商店</h1><p>删除环境变量</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/644f05c4b54d27b5796941ad33aea87a.png\"></p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/07/03/centos8-guan-fang-yuan-shi-xiao/",
            "url": "https://0xdadream.github.io/2024/07/03/centos8-guan-fang-yuan-shi-xiao/",
            "title": "centos8官方源失效",
            "date_published": "2024-07-03T01:25:00.000Z",
            "content_html": "<h1 id=\"centos8官方源失效\"><a href=\"#centos8官方源失效\" class=\"headerlink\" title=\"centos8官方源失效\"></a>centos8官方源失效</h1><p>当你运行yum的下载命令时有如下报错</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">CentOS Stream <span class=\"token number\">8</span> - AppStream                                                                           \nErrors during downloading metadata <span class=\"token keyword\">for</span> repository <span class=\"token string\">'appstream'</span><span class=\"token builtin class-name\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这表明官方源已经失效，只能更换源，这里更换国内的阿里镜像源，当然在这之前你可以试试ping各类网站，试试是不是自己网络问题</p>\n<h2 id=\"更换源\"><a href=\"#更换源\" class=\"headerlink\" title=\"更换源\"></a>更换源</h2><h3 id=\"重置-yum配置\"><a href=\"#重置-yum配置\" class=\"headerlink\" title=\"重置 yum配置\"></a>重置 yum配置</h3><p>如果之前进行了许多更改，可能需要重置yum配置以确保没有配置错误。</p>\n<h4 id=\"备份并重新创建-yum-配置文件\"><a href=\"#备份并重新创建-yum-配置文件\" class=\"headerlink\" title=\"备份并重新创建 yum 配置文件\"></a>备份并重新创建 yum 配置文件</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> /etc/yum.repos.d /etc/yum.repos.d.bak\n<span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /etc/yum.repos.d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"下载阿里源\"><a href=\"#下载阿里源\" class=\"headerlink\" title=\"下载阿里源\"></a>下载阿里源</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>若是本地网络，下载再上传</p>\n<h4 id=\"清理-yum-缓存并重建缓存\"><a href=\"#清理-yum-缓存并重建缓存\" class=\"headerlink\" title=\"清理 yum 缓存并重建缓存\"></a>清理 yum 缓存并重建缓存</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum clean all\n<span class=\"token function\">sudo</span> yum makecache<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"添加一个非官方源（国外）\"><a href=\"#添加一个非官方源（国外）\" class=\"headerlink\" title=\"添加一个非官方源（国外）\"></a>添加一个非官方源（国外）</h2><h3 id=\"在-CentOS-8-x-上安装-EPEL-存储库\"><a href=\"#在-CentOS-8-x-上安装-EPEL-存储库\" class=\"headerlink\" title=\"在 CentOS 8.x 上安装 EPEL 存储库\"></a>在 CentOS 8.x 上安装 EPEL 存储库</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-i</span>  <span class=\"token comment\">#切换到root</span>\nyum search epel  <span class=\"token comment\">#搜索</span>\nyum <span class=\"token function\">install</span> epel-release <span class=\"token comment\"># 安装</span>\nyum config-manager --set-enabled epel <span class=\"token comment\">#启用 EPEL 存储库</span>\nyum config-manager --set-enabled PowerTools \nyum update <span class=\"token comment\">#更新源</span>\nyum repolist <span class=\"token comment\">#查看已安装的库</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"使用-EPEL-存储库\"><a href=\"#使用-EPEL-存储库\" class=\"headerlink\" title=\"使用 EPEL 存储库\"></a>使用 EPEL 存储库</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo yum --disablerepo=\"*\" --enablerepo=\"epel\" list available | grep 'package'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>**<code>yum</code>**： 这是 CentOS 和 RHEL 系统上用于管理软件包的命令行工具</p>\n<p>**<code>--disablerepo=\"\\*\"</code>**： 这个选项禁用所有配置的存储库，<code>*</code> 是一个通配符，表示所有存储库都将被禁用</p>\n<p>**<code>--enablerepo=\"epel\"</code>**： 这个选项仅启用 EPEL 存储库，这样可以确保命令只查询并显示 EPEL 存储库中的软件包</p>\n<p>**<code>list available</code>**： 这个子命令列出所有可用的软件包，它会显示在启用的存储库中可供安装的软件包列表</p>\n<p>**<code>grep 'package'</code>**：匹配包名</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">--enablerepo</span><span class=\"token operator\">=</span><span class=\"token string\">\"epel\"</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>package<span class=\"token operator\">&gt;</span> <span class=\"token comment\"># 从 EPEL 存储库安装软件包</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"安装并启用-REMI-存储库\"><a href=\"#安装并启用-REMI-存储库\" class=\"headerlink\" title=\"安装并启用 REMI 存储库\"></a>安装并启用 REMI 存储库</h2><p>在终端中执行以下命令，在 CentOS 8上安装 REMI 存储库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> https://rpms.remirepo.net/enterprise/remi-release-8.rpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>检查已启用的存储库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum repolist<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>您可以安装 yum-config-manager，这将帮助您从命令行快速启用和禁用存储库，前面config-manager报错就可以安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> dnf-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>运行时启用存储库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">--enablerepo</span><span class=\"token operator\">=</span>remi <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>package<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://help.aliyun.com/zh/ecs/user-guide/change-centos-8-repository-addresses\">CentOS 8 EOL如何切换源？_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com)</a></p>\n<p><a href=\"https://www.cyberciti.biz/faq/how-to-enable-and-install-epel-repo-on-centos-8-x/\">如何在 CentOS 8 上启用和安装 EPEL Repo - nixCraft (cyberciti.biz)</a></p>\n<p><a href=\"https://computingforgeeks.com/how-to-install-epel-repository-on-rhel-8-centos-8/\">如何在 RHEL 8 或 CentOS 8 上安装 EPEL 存储库 |ComputingForGeeks的</a></p>\n<p><a href=\"https://computingforgeeks.com/install-and-enable-remi-repository-on-centos-rhel/\">在 CentOS 8 上安装并启用 REMI 存储库 |RHEL 8 |ComputingForGeeks的</a></p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/05/26/php-luan-ma/",
            "url": "https://0xdadream.github.io/2021/05/26/php-luan-ma/",
            "title": "php乱码解决方法",
            "date_published": "2021-05-26T01:25:00.000Z",
            "content_html": "<h2 id=\"php乱码\"><a href=\"#php乱码\" class=\"headerlink\" title=\"php乱码\"></a>php乱码</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>head后，tilte前添加</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>Content-Type<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text/html; charset=utf-8<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h3><p>开头添加</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-Type: text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/04/21/guan-yu-hexo-cha-ru-tu-pian/",
            "url": "https://0xdadream.github.io/2021/04/21/guan-yu-hexo-cha-ru-tu-pian/",
            "title": "关于hexo插入图片",
            "date_published": "2021-04-21T01:25:00.000Z",
            "content_html": "<h1 id=\"hexo-博文中图片部署\"><a href=\"#hexo-博文中图片部署\" class=\"headerlink\" title=\"hexo 博文中图片部署\"></a>hexo 博文中图片部署</h1><p>在<code>source</code>下创建一个<code>images</code>目录，存放图片</p>\n<p>引用方式</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">/</span>images<span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>也可以为每条博文分别创建</p>\n<p>在_post目录下创建一个与md同名的文件夹放图片</p>\n<p>应用方式</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>注意这里是<code>\\</code>,windows下是<code>/</code></p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/04/05/wu-li-ji-ssh-lian-jie-bu-shang-xu-ni-ji/",
            "url": "https://0xdadream.github.io/2021/04/05/wu-li-ji-ssh-lian-jie-bu-shang-xu-ni-ji/",
            "title": "物理机ssh连接不上虚拟机",
            "date_published": "2021-04-05T01:25:00.000Z",
            "content_html": "<p>保证虚拟机连得上网，比如能ping百度</p>\n<p>最简单办法</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/c13697ce72d3a25c8d78f723ca0d5f1b.png\"></p>\n<p>点击更改设置获取管理员权限</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/fc61b4184c6a596e2026963a05aaf817.png\"></p>\n<p>然后还原</p>\n<p><img src=\"https://images.dadream.eu.org/images/2024/07/ebeaf20ada19997f7f2f11ca0a48a249.png\"></p>\n",
            "tags": [
                "bug"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/03/21/ssh-ju-jue-lian-jie/",
            "url": "https://0xdadream.github.io/2021/03/21/ssh-ju-jue-lian-jie/",
            "title": "ssh拒绝连接",
            "date_published": "2021-03-21T01:25:00.000Z",
            "content_html": "<ol>\n<li>sudo vi /etc/ssh/sshd_config  将PermitRootLogin修改为yes</li>\n<li>sudo /etc/init.d/ssh restart重启动了sshd服务</li>\n</ol>\n",
            "tags": [
                "bug"
            ]
        }
    ]
}