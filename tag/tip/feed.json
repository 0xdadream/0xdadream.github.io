{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"tip\" tag",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2024/06/23/hexo-qian-yi/",
            "url": "https://0xdadream.github.io/2024/06/23/hexo-qian-yi/",
            "title": "hexo迁移",
            "date_published": "2024-06-22T20:11:00.000Z",
            "content_html": "<h1 id=\"hexo迁移\"><a href=\"#hexo迁移\" class=\"headerlink\" title=\"hexo迁移\"></a>hexo迁移</h1><h2 id=\"直接更换电脑\"><a href=\"#直接更换电脑\" class=\"headerlink\" title=\"直接更换电脑\"></a>直接更换电脑</h2><h3 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h3><p>安装git和node，自行搜索安装，node推荐安装在github上的nvm，方便切换版本</p>\n<h3 id=\"本机与github建立连接\"><a href=\"#本机与github建立连接\" class=\"headerlink\" title=\"本机与github建立连接\"></a>本机与github建立连接</h3><p>设置git配置信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"你的GitHub用户名\"</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"你的GitHub注册邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>生成ssh密钥文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"你的GitHub注册邮箱\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后连续三次回车</p>\n<p><code>c/Users/youuser/.ssh/id_rsa.pub</code>里面的内容即是双方通信的密钥</p>\n<p>将密钥复制到github-&gt;右上角头像-&gt;settings-&gt;SSH and GPG keys，保存</p>\n<p>本机测试连接</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><p>创建一个文件夹用于存放博客文件，cd 进入该目录，执行命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo-cli <span class=\"token comment\">#安装hexo</span>\n<span class=\"token function\">npm</span> update hexo <span class=\"token parameter variable\">-g</span> <span class=\"token comment\">#升级hexo</span>\nhexo init  --no-install <span class=\"token comment\">#初始化blog，需要先创建一个博客主文件夹，在文件夹里执行，就是上面创建的，或者</span>\nhexo init blog<span class=\"token punctuation\">(</span>文件夹名<span class=\"token punctuation\">)</span> --no-install <span class=\"token comment\">#--no-install是阻止项目克隆下来后，自动安装依赖，不使用会自动安装最新版本hexo，具体自己影响实测</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo@5.4.0 <span class=\"token comment\">#安装想要的hexo版本，我的这个主题这个版本合适</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><p>旧电脑在博客主目录执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> list <span class=\"token comment\"># 查看安装过的插件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>新电脑执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token comment\">#安装包名字，不加版本默认最新 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"移植文件\"><a href=\"#移植文件\" class=\"headerlink\" title=\"移植文件\"></a>移植文件</h3><p>将<code>source</code> <code>themes</code> <code>_config.yml</code>从旧电脑复制过来</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo g <span class=\"token comment\">#生成静态文件</span>\nhexo s <span class=\"token comment\">#测试网页</span>\nhexo d <span class=\"token comment\">#没问题部署</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/28/v2rayn-lu-you-gui-ze/",
            "url": "https://0xdadream.github.io/2024/01/28/v2rayn-lu-you-gui-ze/",
            "title": "v2rayn路由规则",
            "date_published": "2024-01-28T15:41:00.000Z",
            "content_html": "<h1 id=\"v2rayn路由规则\"><a href=\"#v2rayn路由规则\" class=\"headerlink\" title=\"v2rayn路由规则\"></a>v2rayn路由规则</h1><p>大体可以看这篇文章<a href=\"https://www.v2fly.org/config/routing.html\">Routing 路由 | V2Fly.org</a></p>\n<p>本次测试所用版本为6.33</p>\n<p>设置-&gt;路由设置-&gt;启用高级功能-&gt;高级功能-&gt;添加规则集-&gt;(随便写个别名)添加规则</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">proxy  <span class=\"token comment\"># 代理的domain和IP</span>\ndirect <span class=\"token comment\"># 直连的</span>\nblock <span class=\"token comment\"># 阻塞的，一般为屏蔽广告IP</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>假如我想代理一些domain和IP，选择proxy，端口不写应该就是全部，写法</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">80</span>\n<span class=\"token number\">1</span>-1234<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>enabled启用，勾选保存时Domain，IP，进程名自动排序</p>\n<p>domain写法</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">domain:完整域名\nkeyword:域名关键字\nregexp:正则表达式\nfull:完全匹配字符串\ngeosite:域名集 <span class=\"token comment\"># 官方网站查看</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><a href=\"https://github.com/Loyalsoldier/v2ray-rules-dat\">Loyalsoldier/v2ray-rules-dat: 🦄 🎃 👻 V2Ray 路由规则文件加强版，可代替 V2Ray 官方 geoip.dat 和 geosite.dat，兼容 Shadowsocks-windows、Xray-core、Trojan-Go、leaf 和 hysteria。Enhanced edition of V2Ray rules dat files, compatible with Xray-core, Shadowsocks-windows, Trojan-Go, leaf and hysteria. (github.com)</a></p>\n<p>IP写法</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">geoip:IP集 <span class=\"token comment\"># 官方网站查看</span>\n单个IP\nIP段,如:192.166.23.22/23<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/28/x-ui-mian-ban-bu-shu-jie-dian-tao-cf/",
            "url": "https://0xdadream.github.io/2024/01/28/x-ui-mian-ban-bu-shu-jie-dian-tao-cf/",
            "title": "x-ui面板部署代理+套CF",
            "date_published": "2024-01-28T15:41:00.000Z",
            "content_html": "<h1 id=\"x-ui面板部署代理-套CF\"><a href=\"#x-ui面板部署代理-套CF\" class=\"headerlink\" title=\"x-ui面板部署代理+套CF\"></a>x-ui面板部署代理+套CF</h1><p>项目链接<a href=\"https://github.com/vaxilu/x-ui\">vaxilu/x-ui: 支持多协议多用户的 xray 面板 (github.com)</a></p>\n<h2 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. 准备工作</h2><p>确定防火墙是否关闭，或者手动开放端口，不能不能登录面板</p>\n<p>更新系统依赖</p>\n<p>Ubuntu：<code>apt update -y</code>    centos  ：<code>yum update -y</code></p>\n<h2 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2. 安装\"></a>2. 安装</h2><p>执行命令运行脚本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-Ls</span> https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装/更新完成后需要强制修改端口与账户密码——输入<code>y</code>按照提示输出信息</p>\n<p>完成后进入网址<code>主机IP:你输入的端口号</code>，输入账号密码</p>\n<p>进入主页面，选择面板设置，更改面板url根路径，更改后重启，再次进入时使用地址<code>主机IP:你输入的端口号/更改的根路径</code>，其他根据自身更改</p>\n<h2 id=\"3-SSL证书申请\"><a href=\"#3-SSL证书申请\" class=\"headerlink\" title=\"3. SSL证书申请\"></a>3. SSL证书申请</h2><p>输入<code>x-ui</code>进入面板管理，选择16回车</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">******使用说明******\n该脚本将使用Acme脚本申请证书,使用时需保证:\n<span class=\"token number\">1</span>.知晓Cloudflare 注册邮箱\n<span class=\"token number\">2</span>.知晓Cloudflare Global API Key\n<span class=\"token number\">3</span>.域名已通过Cloudflare进行解析到当前服务器\n<span class=\"token number\">4</span>.该脚本申请证书默认安装路径为/root/cert目录<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>准备好这些东西，cloudflare直接邮箱注册<a href=\"https://cloudflare.com/%EF%BC%8CAPI\">https://cloudflare.com/，API</a> KEY</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307054345145.png\" alt=\"image-20240307054345145\"></p>\n<p>之后依次输入</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307054521404.png\" alt=\"image-20240307054521404\"></p>\n<p>注意输入的域名为你解析到CF上的域名，不是A记录的域名，如下图1的位置</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307055228662.png\" alt=\"image-20240307055228662\"></p>\n<p>之后进入面板设置</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307055410275.png\" alt=\"image-20240307055410275\"></p>\n<p>将<code>/root/cert/xxx</code>填入框中，上面是cer，下面是key，之后进入cloudflare，改成这样，打开上面图2标记的小云朵，这样流量就被cf代理了</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307055729883.png\" alt=\"image-20240307055729883\"></p>\n<h2 id=\"4-创建代理\"><a href=\"#4-创建代理\" class=\"headerlink\" title=\"4. 创建代理\"></a>4. 创建代理</h2><p>接上面标记的那张图，将你的主机IP解析到这个域名的A记录下，名称随意填写，相当于得到了一个三级域名——<code>名称.域名</code>，例如<code>test.example.com</code></p>\n<p>进入x-ui 面板入站列表-添加入站</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307060728590.png\" alt=\"image-20240307060728590\"></p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307060941380.png\" alt=\"image-20240307060941380\"></p>\n<p>这里的域名就是你自己解析到的域名，名称+域名，添加，分享二维码就可以使用了</p>\n<h2 id=\"5-套CF优选IP\"><a href=\"#5-套CF优选IP\" class=\"headerlink\" title=\"5. 套CF优选IP\"></a>5. 套CF优选IP</h2><p><a href=\"https://github.com/badafans/better-cloudflare-ip\">badafans/better-cloudflare-ip: 查找适合自己当前网络环境的优选cloudflare anycast IP (github.com)</a></p>\n<p><a href=\"https://github.com/XIU2/CloudflareSpeedTest\">XIU2/CloudflareSpeedTest: 🌩「自选优选 IP」测试 Cloudflare CDN 延迟和速度，获取最快 IP ！当然也支持其他 CDN / 网站 IP ~ (github.com)</a></p>\n<p>两款工具</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307061731515.png\" alt=\"image-20240307061731515\"></p>\n<p>将优选得到的地址填写上去，将原来的地址写到伪装域名，需要优选443这个端口的地址</p>\n<h2 id=\"6-其他类型的代理\"><a href=\"#6-其他类型的代理\" class=\"headerlink\" title=\"6.其他类型的代理\"></a>6.其他类型的代理</h2><p>上面也可以不用443端口，这要添加一条规则</p>\n<p><img src=\"/x-ui%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2%E8%8A%82%E7%82%B9+%E5%A5%97CF%5Cimage-20240307062711360.png\" alt=\"image-20240307062711360\"></p>\n<p>然后就可以优选443的地址，端口改写443</p>\n<p>也能直接使用其他的端口，下面就不需要打开tls</p>\n<p>也可以网络直接选择tcp，选择reality，这种是直连，要看你的服务器网络质量</p>\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/20/ssh-lian-jie-bao-cuo/",
            "url": "https://0xdadream.github.io/2024/01/20/ssh-lian-jie-bao-cuo/",
            "title": "SSH连接报错",
            "date_published": "2024-01-20T03:37:00.000Z",
            "content_html": "<h1 id=\"SSH连接报错\"><a href=\"#SSH连接报错\" class=\"headerlink\" title=\"SSH连接报错\"></a>SSH连接报错</h1><p>当时git提交时出现连接失败等提示，试一试命令<code>ssh -T git@github.com</code>，若报错如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh: connect to <span class=\"token function\">host</span> github.com port <span class=\"token number\">22</span>: Connection timed out<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>则试一试<code>ssh -T -p 443 git@ssh.github.com</code>，若成功则修改<code>~/.ssh/config</code>文件，添加</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Host github.com\nHostname ssh.github.com\nPort <span class=\"token number\">443</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>再次<code>ssh -T git@github.com</code>成功，则可以进行提交，这是由于22端口处于某种原因出现了问题，之后仍然可以修改为原配置。</p>\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/20/shi-yong-zhu-ti-matery-jiang-ji-hexo-ban-ben/",
            "url": "https://0xdadream.github.io/2024/01/20/shi-yong-zhu-ti-matery-jiang-ji-hexo-ban-ben/",
            "title": "使用主题matery而降级hexo版本",
            "date_published": "2024-01-20T01:41:00.000Z",
            "content_html": "<h1 id=\"使用主题matery而降级hexo版本\"><a href=\"#使用主题matery而降级hexo版本\" class=\"headerlink\" title=\"使用主题matery而降级hexo版本\"></a>使用主题matery而降级hexo版本</h1><p>遇到问题按时间顺序</p>\n<ul>\n<li><p>升级hexo到7.0.0后代码块显示异常</p>\n<p>考虑hexo切换版本和升级matery版本，matery更新到创作者最新版本，hexo降级出现问题</p>\n</li>\n<li><p>hexo降级失败，因为node.js版本过高</p>\n<p>降级node.js版本，使用工具nvm管理node.js版本，我使用的node.js版本为16….</p>\n</li>\n<li><p>hexo降级的具体过程</p>\n<p>先删除原博客文件夹，或者改名，依次执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">-g</span> <span class=\"token comment\">#安装hexo大框架，用来初始化，这里全局安装是为了后面初始化使用hexo</span>\n\nhexo init  --no-install <span class=\"token comment\">#初始化blog，需要先创建一个博客主文件夹，在文件夹里执行，或者</span>\nhexo init blog<span class=\"token punctuation\">(</span>文件夹名<span class=\"token punctuation\">)</span> --no-install <span class=\"token comment\">#--no-install是阻止项目克隆下来后，自动安装依赖，不使用会自动安装最新版本hexo，具体自己影响实测</span>\n\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo@5.4.0 <span class=\"token comment\">#安装想要的hexo版本，我的这个主题这个版本合适</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>hexo s后代码仍然异常</p>\n<p>修改主目录_config.yml中的代码为</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">highlight:\n  enable: <span class=\"token boolean\">false</span>\n  line_number: <span class=\"token boolean\">true</span>\n  auto_detect: <span class=\"token boolean\">false</span>\n  tab_replace: <span class=\"token string\">''</span>\n  wrap: <span class=\"token boolean\">true</span>\n  hljs: <span class=\"token boolean\">false</span>\nprismjs:\n  enable: <span class=\"token boolean\">true</span>\n  preprocess: <span class=\"token boolean\">true</span>\n  line_number: <span class=\"token boolean\">true</span>\n  tab_replace: <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>hexo s再次执行可见已经正常，再安装以前安装的插件</p>\n</li>\n</ul>\n<p>注：因为主题版本更新，我直接全删了重建的，不删修改版本的可以先卸载原来的组件如hexo，主目录下的_config.yml有点不同，需要自己注意。</p>\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/20/npm-jian-jie/",
            "url": "https://0xdadream.github.io/2024/01/20/npm-jian-jie/",
            "title": "NPM简介",
            "date_published": "2024-01-20T01:15:00.000Z",
            "content_html": "<h1 id=\"NPM简介\"><a href=\"#NPM简介\" class=\"headerlink\" title=\"NPM简介\"></a>NPM简介</h1><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题</p>\n<h2 id=\"NPM命令\"><a href=\"#NPM命令\" class=\"headerlink\" title=\"NPM命令\"></a>NPM命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> 模块名 <span class=\"token parameter variable\">-g</span>  <span class=\"token comment\">#全局安装，相当于加了一个环境变量，能全局调用</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> 模块名 <span class=\"token comment\">#普通安装，一般安装在当前文件夹</span>\n\n<span class=\"token function\">npm</span> list <span class=\"token parameter variable\">-g</span> <span class=\"token comment\">#列出已安装全局模块</span>\n<span class=\"token function\">npm</span> list\n\n<span class=\"token function\">npm</span> list 模块 <span class=\"token comment\">#显示模块版本号</span>\n\n<span class=\"token function\">npm</span> uninstall 模块名 <span class=\"token parameter variable\">-g</span>  <span class=\"token comment\">#全局卸载</span>\n<span class=\"token function\">npm</span> uninstall 模块名 <span class=\"token comment\">#普通卸载</span>\n\n<span class=\"token function\">npm</span> search 关键字 <span class=\"token comment\">#搜索模块</span>\n\n<span class=\"token function\">npm</span> view 模块名 versions  <span class=\"token comment\">#列出该模块所有版本</span>\n\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> 模块名@版本号 <span class=\"token comment\">#安装具体版本，一般只能安装一个版本</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/",
            "url": "https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/",
            "title": "node.js版本问题",
            "date_published": "2024-01-20T00:11:00.000Z",
            "content_html": "<h1 id=\"node-js版本问题\"><a href=\"#node-js版本问题\" class=\"headerlink\" title=\"node.js版本问题\"></a>node.js版本问题</h1><p>起因是我想给node.js版本降级，卸载了新版，安装旧版后发现npm仍然是最新版本</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>安装nvm(<a href=\"https://github.com/coreybutler/nvm-windows\">coreybutler/nvm-windows: A node.js version management utility for Windows. Ironically written in Go. (github.com)</a>)，这是一款管理node.js版本的工具</p>\n<h2 id=\"安装流程\"><a href=\"#安装流程\" class=\"headerlink\" title=\"安装流程\"></a>安装流程</h2><p>进入github选择nvm-setup下载，然后傻瓜式安装</p>\n<h2 id=\"部分命令\"><a href=\"#部分命令\" class=\"headerlink\" title=\"部分命令\"></a>部分命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nvm  <span class=\"token comment\">#查看命令面板</span>\nnvm <span class=\"token function\">ls</span> available <span class=\"token comment\">#列出可用的最新的部分node.js版本</span>\nnvm <span class=\"token function\">install</span> 版本号 <span class=\"token comment\"># 安装想要的版本</span>\nnvm uninstall 版本号 <span class=\"token comment\"># 卸载想要的版本</span>\nnvm list <span class=\"token comment\">#列出已经安装的版本</span>\nnvm use 版本号 <span class=\"token comment\">#启用版本</span>\n<span class=\"token function\">node</span> <span class=\"token parameter variable\">-v</span> <span class=\"token comment\">#查看版本号</span>\n<span class=\"token function\">npm</span> <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "tools"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/01/14/hexo-sheng-ji/",
            "url": "https://0xdadream.github.io/2024/01/14/hexo-sheng-ji/",
            "title": "hexo升级及升级后的问题",
            "date_published": "2024-01-13T20:11:00.000Z",
            "content_html": "<h1 id=\"hexo升级及升级后的问题\"><a href=\"#hexo升级及升级后的问题\" class=\"headerlink\" title=\"hexo升级及升级后的问题\"></a>hexo升级及升级后的问题</h1><h2 id=\"hexo升级\"><a href=\"#hexo升级\" class=\"headerlink\" title=\"hexo升级\"></a>hexo升级</h2><p>首先升级node.js，去官网下载最新安装包，接着执行以下命令升级hexo</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> npm-check-updates <span class=\"token comment\"># 安装更新工具</span>\nncu <span class=\"token comment\"># 检查npm软件包更新，需在项目根目录下执行</span>\nncu <span class=\"token parameter variable\">-u</span> <span class=\"token comment\"># 更新package.json配置</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token comment\"># 安装package.json配置的版本</span>\nhexo version <span class=\"token comment\"># 更新后检查hexo版本</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"升级后的问题\"><a href=\"#升级后的问题\" class=\"headerlink\" title=\"升级后的问题\"></a>升级后的问题</h2><p>升级后执行hexo d部署提交时报错</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">at ChildProcess.<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span>D:<span class=\"token punctuation\">\\</span>blog<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>_hexo-util@1.9.0@hexo-util<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>spawn.js:51:21<span class=\"token punctuation\">)</span>\n    at ChildProcess.emit <span class=\"token punctuation\">(</span>events.js:310:20<span class=\"token punctuation\">)</span>\n    at ChildProcess.cp.emit <span class=\"token punctuation\">(</span>D:<span class=\"token punctuation\">\\</span>blog<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>_cross-spawn@7.0.2@cross-spawn<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>enoent.js:34:29<span class=\"token punctuation\">)</span>\n    at Process.ChildProcess._handle.onexit <span class=\"token punctuation\">(</span>internal/child_process.js:275:12<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这时候你需要执行<code>ssh -T git@github.com</code>测试是否连接正常，若失败报错</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED<span class=\"token operator\">!</span>     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY<span class=\"token operator\">!</span> Someone could be\neavesdropping on you right now <span class=\"token punctuation\">(</span>man-in-the-middle attack<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span> It is also\npossible that a <span class=\"token function\">host</span> key has just been changed. The fingerprint <span class=\"token keyword\">for</span> the RSA\nkey sent by the remote <span class=\"token function\">host</span> is <span class=\"token punctuation\">[</span>truncated<span class=\"token punctuation\">]</span>. Please contact your system\nadministrator. Add correct <span class=\"token function\">host</span> key <span class=\"token keyword\">in</span> /home/username/.ssh/known_hosts to\nget rid of this message. Offending RSA key <span class=\"token keyword\">in</span>\n/home/username/.ssh/known_hosts:24 Password authentication is disabled to\navoid man-in-the-middle attacks. Keyboard-interactive authentication is\ndisabled to avoid man-in-the-middle attacks. Agent forwarding is disabled to\navoid man-in-the-middle attacks.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>则先去github重新绑定秘钥（如果原来的掉了），步骤和安装是一样，然后去<code>c/Users/youuser/.ssh</code>下删除<code>c:\\users\\username\\.ssh\\known_hosts</code>这个文件，重新执行<code>ssh -T git@github.com</code>，选择yes，连接成功，再进行hexo d提交。</p>\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2023/05/15/stable-diffusion-bu-shu-zai-ubuntu/",
            "url": "https://0xdadream.github.io/2023/05/15/stable-diffusion-bu-shu-zai-ubuntu/",
            "title": "stable-diffusion部署在centos",
            "date_published": "2023-05-14T20:11:00.000Z",
            "content_html": "<h1 id=\"stable-diffusion部署在centos\"><a href=\"#stable-diffusion部署在centos\" class=\"headerlink\" title=\"stable-diffusion部署在centos\"></a>stable-diffusion部署在centos</h1><h2 id=\"安装python环境\"><a href=\"#安装python环境\" class=\"headerlink\" title=\"安装python环境\"></a>安装python环境</h2><p>版本推荐python3.10.6</p>\n<h2 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h2><p>sudo apt install git </p>\n<h2 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h2><p>到普通用户目录执行<code>git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</code>把项目下载</p>\n<p>执行./webui.sh下载依赖最后启动</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>先安装pytorch</p>\n<p>launch.py</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">找到torch_command = os.environ.get('TORCH_COMMAND', \"pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117\")，并修改\n\n修改后：torch_command = os.environ.get('TORCH_COMMAND', \"pip install torch==1.13.1 torchvision==0.14.1\") <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">ln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python3 <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python\nln <span class=\"token operator\">-</span>s <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>pip3 <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>pip\n<span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token constant\">AUTOMATIC1111</span><span class=\"token operator\">/</span>stable<span class=\"token operator\">-</span>diffusion<span class=\"token operator\">-</span>webui<span class=\"token punctuation\">.</span>git\n<span class=\"token constant\">COMMANDLINE_ARGS</span><span class=\"token operator\">=</span><span class=\"token operator\">--</span>skip<span class=\"token operator\">-</span>torch<span class=\"token operator\">-</span>cuda<span class=\"token operator\">-</span>test <span class=\"token operator\">--</span>precision full <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>half <span class=\"token operator\">--</span>lowvram<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>weibu.py中将shared.demo.launch()第一行</p>\n<p>改为share=True</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install -r requirements.txt\npip install -r requirements_versions.txt\npip install basicsr\npip install facexlib\n\npip install -r requirements.txt\npython setup.py develop\n\n# If you want to enhance the background (non-face) regions with Real-ESRGAN,\n# you also need to install the realesrgan package\npip install realesrgan\n\n--skip-torch-cuda-test --upcast-sampling --use-cpu interrogate\n./webui.sh --listen --no-half<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">add-apt-repository ppa:deadsnakes/ppa\napt update\napt install python3.10<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Failed to build these modules: _ctypes\nyum install libffi-devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ./configure --prefix=/usr/local/python3 --enable-optimizations\n$ make\n$ make install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install -y xz-devel\npip install backports.lzma\nyum install mesa-libGL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">/home/hero/stable-diffusion-webui/venv/bin/python3 -m pip install --upgrade torchvision==0.2.2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl status firewalld\nsystemctl stop firewalld\nyum install -y iptables-services\nsystemctl start iptables\nsystemctl status iptables\ncp -a /etc/sysconfig/iptables /etc/sysconfig/iptables.bak\niptables -I INPUT -p tcp --dport 7860 -m state --state NEW -j ACCEPT\niptables-save &gt; /etc/sysconfig/iptables\nsystemctl enable iptables.service\nsystemctl enable iptables.service\nsystemctl reboot\nnetstat -tulpen\niptables -L\niptables -A INPUT -p tcp --dport 7860 -j ACCEPT\niptables -A OUTPUT -p tcp --sport 7860 -j ACCEPT\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">~/stable-diffusion-webui/webui.sh --listen<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vi /etc/sysconfig/iptables<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2023/03/23/python-diao-yong-datetime.now-ti-shi-wei-zhao-dao-mo-kuai/",
            "url": "https://0xdadream.github.io/2023/03/23/python-diao-yong-datetime.now-ti-shi-wei-zhao-dao-mo-kuai/",
            "title": "python调用datetime.now()提示未找到模块",
            "date_published": "2023-03-22T20:11:00.000Z",
            "content_html": "<h1 id=\"python调用datetime-now-提示未找到模块\"><a href=\"#python调用datetime-now-提示未找到模块\" class=\"headerlink\" title=\"python调用datetime.now()提示未找到模块\"></a>python调用datetime.now()提示未找到模块</h1><p>首先确定导入了模块<code>from datetime import datetime</code></p>\n<p>如果还是报错，那么可能存在一个<code>datetime.py</code>的文件覆盖了原模块</p>\n<p>可以直接使用<code>datetime.datetime.now()</code>来调用，或者将那个<code>datetime.py</code>改名</p>\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2023/03/23/jia-gu-wen-yun-chong-zhi-shi-li/",
            "url": "https://0xdadream.github.io/2023/03/23/jia-gu-wen-yun-chong-zhi-shi-li/",
            "title": "甲骨文云重置实例",
            "date_published": "2023-03-22T20:11:00.000Z",
            "content_html": "<h1 id=\"甲骨文云重置实例\"><a href=\"#甲骨文云重置实例\" class=\"headerlink\" title=\"甲骨文云重置实例\"></a>甲骨文云重置实例</h1><p>来自<a href=\"https://v2rayssr.com/oracle-centos.html\">https://v2rayssr.com/oracle-centos.html</a></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>1、甲骨文（oracle）机器一台（始终免费），若是没有，请看下面博文链接：</p>\n<ul>\n<li><a href=\"https://v2rayssr.com/oracle.html\">始终免费的VPS！油管8K视频秒开，颠覆你对免费资源的看法。Oracle（甲骨文）免费云服务器注册指南及故障解决！</a></li>\n<li><a href=\"https://v2rayssr.com/oracle-arm.html\">始终免费的 4核 24G内存 的VPS！甲骨文 (oracle) 抢/刷 ARM 实例！一键脚本部署开ARM机器！</a></li>\n</ul>\n<p>2、SSH 连接工具（<a href=\"https://v2rayssr.com/go?url=https://www.hostbuf.com/t/988.html\">FinalShell</a>），VNC 连接工具（<a href=\"https://v2rayssr.com/go?url=https://www.realvnc.com/en/connect/download/viewer/\">VNC® Viewer</a>）</p>\n<p>3、域名一个做好解析，开启 CDN（小云朵），毕竟是建站的</p>\n<h2 id=\"视频教程演示\"><a href=\"#视频教程演示\" class=\"headerlink\" title=\"视频教程演示\"></a>视频教程演示</h2><p><a href=\"https://v2rayssr.com/go?url=https://youtu.be/grebA_WHGXY\"><img src=\"https://v2rayssr.com/wp-content/uploads/2022/07/12232323.png\" alt=\"img\"></a></p>\n<h2 id=\"甲骨文-VPS-安装-CentOS-8\"><a href=\"#甲骨文-VPS-安装-CentOS-8\" class=\"headerlink\" title=\"甲骨文 VPS 安装 CentOS 8\"></a>甲骨文 VPS 安装 CentOS 8</h2><blockquote>\n<p><strong>友情提示：</strong></p>\n<p>下面为 ARM 机器安装演示</p>\n</blockquote>\n<h3 id=\"VPS-设置\"><a href=\"#VPS-设置\" class=\"headerlink\" title=\"VPS 设置\"></a>VPS 设置</h3><p>SSH 连接 VPS，并进入 boot 文件夹，下载 Netboot 启动文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">apt update -y\napt install wget -y\ncd /boot/efi/EFI\nwget https://boot.netboot.xyz/ipxe/netboot.xyz-arm64.efi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>若你是重装系统，请执行下面命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum update -y\nyum install wget -y\ncd /boot/efi/EFI\nwget https://boot.netboot.xyz/ipxe/netboot.xyz-arm64.efi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"甲骨文控制台设置\"><a href=\"#甲骨文控制台设置\" class=\"headerlink\" title=\"甲骨文控制台设置\"></a>甲骨文控制台设置</h3><p>进入甲骨文控制台，点击实例详情，在左边找到 “控制台连接” ，启动 Cloud Shell 连接</p>\n<h3 id=\"设置-Netboot-引导启动\"><a href=\"#设置-Netboot-引导启动\" class=\"headerlink\" title=\"设置 Netboot 引导启动\"></a>设置 Netboot 引导启动</h3><p>重启 VPS ，并在 Cloud Shell 里面不停按键盘 ESC 键，进入 BIOS ，如图所示</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/112.jpg\" alt=\"img\"></p>\n<p>选择 Boot Maintenance Manager —— Boot Frome File ，</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/133.jpg\" alt=\"img\"></p>\n<p>选择 <code>netboot.xyz-arm64.efi</code>，点击回车，进行引导！</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/1233.jpg\" alt=\"img\"></p>\n<p>在引导的界面，我们选择 <code>Linux Network Installs (arm64)</code></p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/1212.jpg\" alt=\"img\"></p>\n<p>选择你需要安装的系统，选择错误，可以按 ESC 返回上级菜单，我们选择 <code>CentOS</code> —— <code>CentOS 8.0 Stream</code>，点击回车，再次选择 <code>CentOS 8-stream text based installer</code></p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/2323.jpg\" alt=\"img\"></p>\n<p>开始引导安装了以后，我们在 Cloud Shell 里面会看到如下图：</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/232323.jpg\" alt=\"img\"></p>\n<p>我们选择 1，使用 VNC 可视化进行安装</p>\n<p>设置 VNC 的密码（一定只是6 – 8个字符），确认密码</p>\n<h3 id=\"VNC-连接-VPS\"><a href=\"#VNC-连接-VPS\" class=\"headerlink\" title=\"VNC 连接 VPS\"></a>VNC 连接 VPS</h3><p>现在我们就可以通过 VNC 工具来连接我们的甲骨文 ARM 机器，并进行安装了。</p>\n<p>VNC® Viewer 软件连接地址：<code>VPSIP:1</code> ，输入密码以后，你大致就连接成功了</p>\n<h3 id=\"安装-CentOS-8\"><a href=\"#安装-CentOS-8\" class=\"headerlink\" title=\"安装 CentOS 8\"></a>安装 CentOS 8</h3><p>安装的过程很简单，若是有不明白的地方，请观看 <a href=\"https://v2rayssr.com/go?url=https://youtu.be/grebA_WHGXY\"><strong>视频教程</strong></a></p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/3434.jpg\" alt=\"img\"></p>\n<p>安装完成以后，我们就直接可以从 SSH 工具，登录我们的 <code>CentOS 8-stream</code> 了</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/444.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>友情提醒：可以更改 VPS 主机名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hostnamectl set-hostname host.aaa.com --transienthostnamectl set-hostname host.aaa.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</blockquote>\n<h3 id=\"安装宝塔面板\"><a href=\"#安装宝塔面板\" class=\"headerlink\" title=\"安装宝塔面板\"></a>安装宝塔面板</h3><p>安装宝塔面板，相关的插件，设置网站！</p>\n<p>在安装宝塔面板的过程中，或许有下图的错误提示，看着很吓人：</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/55.jpg\" alt=\"img\"></p>\n<p>其实，这个只是 <code>pip</code> 的版本太低，我们根据提示命令更新下就好了！</p>\n<p>在宝塔面板里面，推荐安装如下运行环境：（LNMP – 编译安装）因为下面版本我安装并没有出错。</p>\n<p><img src=\"https://v2rayssr.com/wp-content/themes/b2/Assets/fontend/images/default-img.jpg\" alt=\"img\"></p>\n<p>编译安装时间有点长，但是更稳定可靠，大家耐心等待，下面是我等待的时间：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">安装[opcache-74]【已完成】耗时12秒安装[exif-74]【已完成】耗时19秒安装[imagemagick-74]【已完成】耗时38秒安装[redis-74]【已完成】耗时74秒安装[fileinfo-74]【已完成】耗时30秒安装[php-7.4]【已完成】耗时179秒安装[mysql-5.7]【已完成】耗时991秒安装[nginx-1.20]【已完成】耗时376秒<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>完成以后，看见监控栏的几项参数，瞬间觉得，哇！甲骨文 YYDS！</p>\n<p><img src=\"https://v2rayssr.com/wp-content/themes/b2/Assets/fontend/images/default-img.jpg\" alt=\"img\"></p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/343434.jpg\" alt=\"img\"></p>\n<p>设置好了 WordPress 以后，我们来看一下 WordPress 的站点健康检测：</p>\n<p><img src=\"https://v2rayssr.com/wp-content/uploads/2022/06/3423.jpg\" alt=\"img\"></p>\n",
            "tags": [
                "tip"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2023/03/08/linux-dao-shou-shi-xu-yao-an-zhuang/",
            "url": "https://0xdadream.github.io/2023/03/08/linux-dao-shou-shi-xu-yao-an-zhuang/",
            "title": "linux到手时需要安装",
            "date_published": "2023-03-07T20:11:00.000Z",
            "content_html": "<h1 id=\"linux到手时需要安装\"><a href=\"#linux到手时需要安装\" class=\"headerlink\" title=\"linux到手时需要安装\"></a>linux到手时需要安装</h1><h2 id=\"安装的依赖\"><a href=\"#安装的依赖\" class=\"headerlink\" title=\"安装的依赖\"></a>安装的依赖</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "linux"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2023/03/04/json.decoder.jsondecodeerror/",
            "url": "https://0xdadream.github.io/2023/03/04/json.decoder.jsondecodeerror/",
            "title": "json.decoder.JSONDecodeError",
            "date_published": "2023-03-03T20:11:00.000Z",
            "content_html": "<h1 id=\"json-decoder-JSONDecodeError\"><a href=\"#json-decoder-JSONDecodeError\" class=\"headerlink\" title=\"json.decoder.JSONDecodeError\"></a>json.decoder.JSONDecodeError</h1><p>我是安装<code>stable diffusion</code>出现的错误</p>\n<p>大致截图</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> File <span class=\"token string\">\"G:<span class=\"token entity\" title=\"\\r\">\\r</span>uanjian\\stable-diffusion-webui-master<span class=\"token entity\" title=\"\\0\">\\0</span>xdadream\\lib\\site-packages<span class=\"token entity\" title=\"\\t\">\\t</span>ransformers<span class=\"token entity\" title=\"\\t\">\\t</span>okenization_utils_base.py\"</span>, line <span class=\"token number\">1956</span>, <span class=\"token keyword\">in</span> _from_pretrained\n    tokenizer <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">(</span>*init_inputs, **init_kwargs<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"G:<span class=\"token entity\" title=\"\\r\">\\r</span>uanjian\\stable-diffusion-webui-master<span class=\"token entity\" title=\"\\0\">\\0</span>xdadream\\lib\\site-packages<span class=\"token entity\" title=\"\\t\">\\t</span>ransformers\\models<span class=\"token entity\" title=\"\\c\">\\c</span>lip<span class=\"token entity\" title=\"\\t\">\\t</span>okenization_clip.py\"</span>, line <span class=\"token number\">323</span>, <span class=\"token keyword\">in</span> __init__\n    self.encoder <span class=\"token operator\">=</span> json.load<span class=\"token punctuation\">(</span>vocab_handle<span class=\"token punctuation\">)</span>\n …………\njson.decoder.JSONDecodeError: Unterminated string starting at: line <span class=\"token number\">1</span> <span class=\"token function\">column</span> <span class=\"token number\">11370</span> <span class=\"token punctuation\">(</span>char <span class=\"token number\">11369</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>问题出在这<code>json.load(vocab_handle)</code></p>\n<p>找到这个文件存放目录<code>C:\\Users\\xxx\\.cache\\huggingface\\hub\\models--openai--clip-vit-large-patch14\\blobs\\xxxx</code>，把下面东西全删除</p>\n<p><a href=\"https://huggingface.co/openai/clip-vit-base-patch32/resolve/main/vocab.json%EF%BC%8C%E4%B8%8B%E8%BD%BD%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%E6%94%BE%E5%9C%A8%E7%9B%AE%E5%BD%95%E4%B8%8B%EF%BC%8C%E9%87%8D%E6%96%B0%E6%89%A7%E8%A1%8Cbat%E6%96%87%E4%BB%B6%E5%B0%B1%E6%88%90%E5%8A%9F%E4%BA%86\">https://huggingface.co/openai/clip-vit-base-patch32/resolve/main/vocab.json，下载这个文件放在目录下，重新执行bat文件就成功了</a></p>\n<p>这个问题是因为文件出现了破损</p>\n",
            "tags": [
                "tip",
                "windows"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/24/cobalt-strike-an-zhuang-he-po-jie/",
            "url": "https://0xdadream.github.io/2022/05/24/cobalt-strike-an-zhuang-he-po-jie/",
            "title": "Cobalt Strike安装和破解",
            "date_published": "2022-05-24T11:11:00.000Z",
            "content_html": "<h1 id=\"Cobalt-Strike安装和破解\"><a href=\"#Cobalt-Strike安装和破解\" class=\"headerlink\" title=\"Cobalt Strike安装和破解\"></a>Cobalt Strike安装和破解</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先CS分客户端和服务端，服务端我选择架设在kali中，客户端在windows11</p>\n<p>首先必须有Java环境，kali内置Java环境，windows自行查找</p>\n<h3 id=\"CS下载\"><a href=\"#CS下载\" class=\"headerlink\" title=\"CS下载\"></a>CS下载</h3><p>地址</p>\n<p>验证版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">certutil <span class=\"token parameter variable\">-hashfile</span> cobaltstrike.jar SHA256<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"破解-汉化\"><a href=\"#破解-汉化\" class=\"headerlink\" title=\"破解+汉化\"></a>破解+汉化</h2><p>下载CSAgent<a href=\"https://github.com/Twi1ight/CSAgent\">Twi1ight/CSAgent: CobaltStrike 4.x通用白嫖及汉化加载器 (github.com)</a></p>\n<p>将文件解压到与CS相同的目录下</p>\n<p>替换cobaltstrike、teamserver、agscript、c2lint、cobaltstrike.bat文件中的解密key，目前内置的key为4.4版本</p>\n<p>各个版本的官方解密key：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">4.0</span> 1be5be52c6255c33558e8a1cb667cb06\n<span class=\"token number\">4.1</span> 80e32a742060b884419ba0c171c9aa76\n<span class=\"token number\">4.2</span> b20d487addd4713418f2d5a3ae02a7a0\n<span class=\"token number\">4.3</span> 3a4425490f389aeec312bdd758ad2b99\n<span class=\"token number\">4.4</span> 5e98194a01c6b48fa582a6a9fcbb92d6<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>接下就能正常使用了</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"kali启动服务端\"><a href=\"#kali启动服务端\" class=\"headerlink\" title=\"kali启动服务端\"></a>kali启动服务端</h3><p>在存放文件的主目录打开终端</p>\n<p>运行命令，当然你要先保证<code>teamserver</code>文件有执行权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./teamserver kali_IP password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>password为你想设置的连接密码，待会客户端连接会使用</p>\n<h3 id=\"kali里启动客户端\"><a href=\"#kali里启动客户端\" class=\"headerlink\" title=\"kali里启动客户端\"></a>kali里启动客户端</h3><p>可以同时在kali运行</p>\n<p>可以运行命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">java</span> <span class=\"token parameter variable\">-XX:ParallelGCThreads</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">-XX:+AggressiveHeap</span> <span class=\"token parameter variable\">-XX:+UseParallelGC</span> <span class=\"token parameter variable\">-javaagent:CSAgent.jar</span><span class=\"token operator\">=</span>5e98194a01c6b48fa582a6a9fcbb92d6 <span class=\"token parameter variable\">-Duser.language</span><span class=\"token operator\">=</span>en <span class=\"token parameter variable\">-jar</span> cobaltstrike.jar<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>为方便可以写入sh文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> clients.sh\n<span class=\"token comment\">#复制进入</span>\n<span class=\"token function\">java</span> <span class=\"token parameter variable\">-XX:ParallelGCThreads</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token parameter variable\">-XX:+AggressiveHeap</span> <span class=\"token parameter variable\">-XX:+UseParallelGC</span> <span class=\"token parameter variable\">-javaagent:CSAgent.jar</span><span class=\"token operator\">=</span>5e98194a01c6b48fa582a6a9fcbb92d6 <span class=\"token parameter variable\">-Duser.language</span><span class=\"token operator\">=</span>en <span class=\"token parameter variable\">-jar</span> cobaltstrike.jar\n<span class=\"token function\">chmod</span> <span class=\"token number\">777</span> clients.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"windows中运行客户端\"><a href=\"#windows中运行客户端\" class=\"headerlink\" title=\"windows中运行客户端\"></a>windows中运行客户端</h3><p>执行运行cobaltstrike.bat</p>\n<p>若想隐藏弹框，创建cobaltstrike.vbs的内容为</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">CreateObject<span class=\"token punctuation\">(</span><span class=\"token string\">\"WScript.Shell\"</span><span class=\"token punctuation\">)</span>.Run <span class=\"token string\">\"java -XX:ParallelGCThreads=4 -XX:+AggressiveHeap -XX:+UseParallelGC -javaagent:CSAgent.jar=5e98194a01c6b48fa582a6a9fcbb92d6 -jar cobaltstrike.jar\"</span>,0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "安装"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/20/win7-bu-neng-an-zhuang-vm-tools/",
            "url": "https://0xdadream.github.io/2022/05/20/win7-bu-neng-an-zhuang-vm-tools/",
            "title": "win7中安装vm-tools时Windows 无法验证此驱动程序软件的发布者",
            "date_published": "2022-05-20T14:11:00.000Z",
            "content_html": "<h1 id=\"win7中安装vm-tools时Windows-无法验证此驱动程序软件的发布者\"><a href=\"#win7中安装vm-tools时Windows-无法验证此驱动程序软件的发布者\" class=\"headerlink\" title=\"win7中安装vm-tools时Windows 无法验证此驱动程序软件的发布者\"></a>win7中安装vm-tools时Windows 无法验证此驱动程序软件的发布者</h1><p>下载补丁安装<a href=\"https://www.catalog.update.microsoft.com/Search.aspx?q=kb4474419\">Microsoft Update Catalog</a></p>\n",
            "tags": [
                "tip",
                "windows"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/17/archlinux-she-zhi-zhong-wen/",
            "url": "https://0xdadream.github.io/2022/05/17/archlinux-she-zhi-zhong-wen/",
            "title": "archlinux设置中文",
            "date_published": "2022-05-16T20:11:00.000Z",
            "content_html": "<h1 id=\"archlinux设置中文\"><a href=\"#archlinux设置中文\" class=\"headerlink\" title=\"archlinux设置中文\"></a>archlinux设置中文</h1><p>执行<code>vim /etc/locale.gen</code>将下面字符前的#去掉</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">zh_CN.GB18030 GB18030\nzh_CN.UTF-8 UTF-8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>locale -a</code>查看当前可用locale</p>\n<p><code>vim /etc/locale.conf</code>添加<code>LANG=zh_CN.UTF-8</code>，这不是必须的，会导致乱码</p>\n<p>这样做会好些</p>\n<p>添加</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>zh_CN.UTF-8\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANGUAGE</span></span><span class=\"token operator\">=</span>zh_CN:en_US<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>到下面3个文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.bashrc：每次使用终端时会应用此处的设置\n.xinitrc：每次使用 startx 或 SLiM 来启动 X 窗口系统时会应用此处的设置\n.xprofile：每次使用 GDM 等显示管理器时会应用此处的设置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>安装字体</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> wqy-zenhei<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>最后添加如下到上述三个文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>zh_CN.UTF8\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANGUAGE</span></span><span class=\"token operator\">=</span>zh_CN:en_US\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">XMODIFIERS</span></span><span class=\"token operator\">=</span>@im<span class=\"token operator\">=</span>WQY\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">GTK_IM_MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">\"wqy\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">QT_IM_MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">\"wqy\"</span>\nwqy <span class=\"token parameter variable\">-d</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "linux"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/17/linux-she-zhi-root-mi-ma/",
            "url": "https://0xdadream.github.io/2022/05/17/linux-she-zhi-root-mi-ma/",
            "title": "linux设置root密码",
            "date_published": "2022-05-16T20:11:00.000Z",
            "content_html": "<h1 id=\"linux设置root密码\"><a href=\"#linux设置root密码\" class=\"headerlink\" title=\"linux设置root密码\"></a>linux设置root密码</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-i</span>\n<span class=\"token function\">passwd</span>\n<span class=\"token comment\">#输入你的密码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "linux"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/17/linux-kai-qi-ssh/",
            "url": "https://0xdadream.github.io/2022/05/17/linux-kai-qi-ssh/",
            "title": "linux开启ssh",
            "date_published": "2022-05-16T19:11:00.000Z",
            "content_html": "<h1 id=\"linux开启ssh\"><a href=\"#linux开启ssh\" class=\"headerlink\" title=\"linux开启ssh\"></a>linux开启ssh</h1><h2 id=\"kali\"><a href=\"#kali\" class=\"headerlink\" title=\"kali\"></a>kali</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/ssh/sshd_config\n\n<span class=\"token comment\">#修改</span>\n<span class=\"token comment\">#PermitRootLogin prohibit-password   改为 PermitRootLogin yes</span>\n<span class=\"token comment\">#PasswordAuthentication yes  改为   PasswordAuthentication yes</span>\n\n<span class=\"token comment\">#Esc-&gt;:-&gt;wq保存</span>\n\n<span class=\"token comment\">#启动</span>\n/etc/init.d/ssh start \nor\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> <span class=\"token function\">ssh</span> start\n\n<span class=\"token comment\">#开机启动</span>\nupdate-rc.d <span class=\"token function\">ssh</span> <span class=\"token builtin class-name\">enable</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> openssh-server\n\n<span class=\"token comment\">#启动</span>\n/etc/init.d/ssh start<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "linux"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/17/ubuntu22.04lts-bu-neng-yun-xing-appimage/",
            "url": "https://0xdadream.github.io/2022/05/17/ubuntu22.04lts-bu-neng-yun-xing-appimage/",
            "title": "ubuntu22.04LTS不能运行Appimage",
            "date_published": "2022-05-16T18:11:00.000Z",
            "content_html": "<h1 id=\"ubuntu22-04LTS不能运行Appimage\"><a href=\"#ubuntu22-04LTS不能运行Appimage\" class=\"headerlink\" title=\"ubuntu22.04LTS不能运行Appimage\"></a>ubuntu22.04LTS不能运行Appimage</h1><h2 id=\"先换个源\"><a href=\"#先换个源\" class=\"headerlink\" title=\"先换个源\"></a>先换个源</h2><p>执行<code>vim /etc/apt/sources.list</code></p>\n<p>将下面内容任选一个加入</p>\n<p>阿里</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>中科大</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>网易</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deb http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"先切换到root，也可以直接像下面使用sudo\"><a href=\"#先切换到root，也可以直接像下面使用sudo\" class=\"headerlink\" title=\"先切换到root，也可以直接像下面使用sudo\"></a>先切换到root，也可以直接像下面使用sudo</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-i</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"安装libfuse库\"><a href=\"#安装libfuse库\" class=\"headerlink\" title=\"安装libfuse库\"></a>安装libfuse库</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> libfuse2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n",
            "tags": [
                "tip",
                "linux"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/12/ubuntu-xu-ni-ji-jin-ru-initramfs-mo-shi/",
            "url": "https://0xdadream.github.io/2022/05/12/ubuntu-xu-ni-ji-jin-ru-initramfs-mo-shi/",
            "title": "ubuntu虚拟机进入initramfs模式",
            "date_published": "2022-05-11T18:11:00.000Z",
            "content_html": "<h1 id=\"ubuntu虚拟机进入initramfs模式\"><a href=\"#ubuntu虚拟机进入initramfs模式\" class=\"headerlink\" title=\"ubuntu虚拟机进入initramfs模式\"></a>ubuntu虚拟机进入initramfs模式</h1><p>可能是某个分区的出现了问题</p>\n<p>查看你的命令行，查看是否有如<code>/dev/sda5分区</code>信息</p>\n<p>如果有，执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fsck</span> <span class=\"token parameter variable\">-y</span> /dev/sda5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后重启，其他分区也相同</p>\n",
            "tags": [
                "tip",
                "linux"
            ]
        }
    ]
}