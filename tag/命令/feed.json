{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"命令\" tag",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/",
            "url": "https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/",
            "title": "软链接和硬链接",
            "date_published": "2024-08-10T02:25:00.000Z",
            "content_html": "<h1 id=\"软链接和硬链接\"><a href=\"#软链接和硬链接\" class=\"headerlink\" title=\"软链接和硬链接\"></a>软链接和硬链接</h1><p>在Linux和Unix系统中，<strong>软链接</strong>（符号链接，symbolic link，简称<code>symlink</code>）和<strong>硬链接</strong>（hard link）是两种用于指向文件或目录的方式。它们有不同的用途和行为。</p>\n<h2 id=\"1-软链接（Symbolic-Link）\"><a href=\"#1-软链接（Symbolic-Link）\" class=\"headerlink\" title=\"1. 软链接（Symbolic Link）\"></a>1. 软链接（Symbolic Link）</h2><p>软链接类似于Windows中的快捷方式，它是一个指向另一个文件或目录的指针。创建软链接后，这个链接文件本身并不包含目标文件的数据，而是包含目标文件的路径。</p>\n<h4 id=\"特性：\"><a href=\"#特性：\" class=\"headerlink\" title=\"特性：\"></a>特性：</h4><ul>\n<li><strong>指向目标文件的路径</strong>：软链接文件仅存储目标文件的路径，而不是文件内容。</li>\n<li><strong>跨文件系统</strong>：软链接可以指向不同文件系统中的文件或目录。</li>\n<li><strong>链断裂问题</strong>：如果目标文件被删除或移动，软链接将失效，成为“断链”。</li>\n<li><strong>文件大小</strong>：软链接的大小是指向目标文件路径的长度。</li>\n</ul>\n<h4 id=\"创建软链接\"><a href=\"#创建软链接\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h4><p>要创建一个软链接，你可以使用<code>ln -s</code>命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /path/to/target /path/to/symlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /home/user/original_file.txt /home/user/shortcut_to_file.txt <span class=\"token comment\"># 也可以是目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将创建一个名为<code>shortcut_to_file.txt</code>的软链接，指向<code>/home/user/original_file.txt</code>。</p>\n<h4 id=\"查看软链接\"><a href=\"#查看软链接\" class=\"headerlink\" title=\"查看软链接\"></a>查看软链接</h4><p>使用<code>ls -l</code>命令可以查看软链接的详细信息。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /path/to/symlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /home/user/shortcut_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lrwxrwxrwx <span class=\"token number\">1</span> user user <span class=\"token number\">21</span> Aug <span class=\"token number\">12</span> <span class=\"token number\">12</span>:00 /home/user/shortcut_to_file.txt -<span class=\"token operator\">&gt;</span> /home/user/original_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>l</code>表示这是一个软链接，箭头<code>-&gt;</code>后面是目标路径。</p>\n<h4 id=\"删除软链接\"><a href=\"#删除软链接\" class=\"headerlink\" title=\"删除软链接\"></a>删除软链接</h4><p>使用<code>rm</code>命令删除软链接。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /path/to/symlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /home/user/shortcut_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将删除软链接，但不会影响目标文件。</p>\n<h2 id=\"2-硬链接（Hard-Link）\"><a href=\"#2-硬链接（Hard-Link）\" class=\"headerlink\" title=\"2. 硬链接（Hard Link）\"></a>2. 硬链接（Hard Link）</h2><p>硬链接是文件系统中的一个目录条目，它指向文件的实际数据块。与软链接不同，硬链接不是指向路径，而是指向数据块。因此，硬链接和原始文件共享相同的数据块。</p>\n<h4 id=\"特性：-1\"><a href=\"#特性：-1\" class=\"headerlink\" title=\"特性：\"></a>特性：</h4><ul>\n<li><strong>指向数据块</strong>：硬链接指向文件的实际数据块，而不是路径。</li>\n<li><strong>共享文件数据</strong>：硬链接和原始文件共享相同的数据块，因此它们内容完全相同，且修改一个文件内容会同时更新硬链接的内容。</li>\n<li><strong>不可跨文件系统</strong>：硬链接必须在同一文件系统内。</li>\n<li><strong>删除影响</strong>：删除一个硬链接不会影响文件的实际数据，只有当所有指向数据块的硬链接都删除后，文件的数据才会被删除。</li>\n</ul>\n<h4 id=\"创建硬链接\"><a href=\"#创建硬链接\" class=\"headerlink\" title=\"创建硬链接\"></a>创建硬链接</h4><p>要创建一个硬链接，你可以使用<code>ln</code>命令（不带<code>-s</code>选项）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> /path/to/target /path/to/hardlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> /home/user/original_file.txt /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将创建一个名为<code>hardlink_to_file.txt</code>的硬链接，指向<code>/home/user/original_file.txt</code>的数据块。</p>\n<h4 id=\"查看硬链接\"><a href=\"#查看硬链接\" class=\"headerlink\" title=\"查看硬链接\"></a>查看硬链接</h4><p>使用<code>ls -li</code>命令可以查看文件的inode号，硬链接共享相同的inode号。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-li</span> /path/to/target /path/to/hardlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-li</span> /home/user/original_file.txt /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>输出示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1234567</span> -rw-r--r-- <span class=\"token number\">2</span> user user <span class=\"token number\">1024</span> Aug <span class=\"token number\">12</span> <span class=\"token number\">12</span>:00 /home/user/original_file.txt\n<span class=\"token number\">1234567</span> -rw-r--r-- <span class=\"token number\">2</span> user user <span class=\"token number\">1024</span> Aug <span class=\"token number\">12</span> <span class=\"token number\">12</span>:00 /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>两个文件共享相同的inode号（<code>1234567</code>），说明它们是硬链接。</p>\n<h4 id=\"删除硬链接\"><a href=\"#删除硬链接\" class=\"headerlink\" title=\"删除硬链接\"></a>删除硬链接</h4><p>使用<code>rm</code>命令删除硬链接。删除硬链接不会删除文件数据，只有当所有硬链接都被删除后，文件数据才会被删除。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /path/to/hardlink<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /home/user/hardlink_to_file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这将删除硬链接，但<code>/home/user/original_file.txt</code>仍然存在，文件数据依然可用。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ul>\n<li><strong>软链接</strong>：适合用作快捷方式和指向目录。使用软链接时，请确保目标文件存在，或会造成“断链”。</li>\n<li><strong>硬链接</strong>：适用于同一文件系统内共享文件数据，不能链接到目录（通常情况下）。硬链接不可跨文件系统。</li>\n</ul>\n<h2 id=\"进阶操作\"><a href=\"#进阶操作\" class=\"headerlink\" title=\"进阶操作\"></a>进阶操作</h2><ul>\n<li><p><strong>查看所有链接</strong>：使用<code>find</code>命令查找所有指向某个目标的软链接或硬链接。</p>\n<p><strong>示例</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /path/to/directory <span class=\"token parameter variable\">-type</span> l <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"link_name\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个命令会查找所有名为<code>link_name</code>的软链接。</p>\n</li>\n</ul>\n",
            "tags": [
                "命令"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2024/08/03/shell/",
            "url": "https://0xdadream.github.io/2024/08/03/shell/",
            "title": "shell",
            "date_published": "2024-08-03T01:25:00.000Z",
            "content_html": "<h1 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h1><p>Shell 是一种用于与操作系统进行交互的命令行界面。常见的 Shell 有 Bash（Bourne Again Shell）、Zsh、Ksh、以及 Windows 上的 PowerShell。Shell 不仅可以用于执行单个命令，还可以编写脚本来自动化任务。以下是一些基本的 Shell 命令和脚本编写的示例。</p>\n<h2 id=\"基本-Shell-命令\"><a href=\"#基本-Shell-命令\" class=\"headerlink\" title=\"基本 Shell 命令\"></a>基本 Shell 命令</h2><h3 id=\"文件和目录操作\"><a href=\"#文件和目录操作\" class=\"headerlink\" title=\"文件和目录操作\"></a>文件和目录操作</h3><ul>\n<li><p><strong>ls</strong>：列出目录内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span>\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span>  <span class=\"token comment\"># 显示详细信息</span>\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span>  <span class=\"token comment\"># 显示所有文件，包括隐藏文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>cd</strong>：更改目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /path/to/directory\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>  <span class=\"token comment\"># 返回上一级目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>pwd</strong>：显示当前工作目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">pwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>mkdir</strong>：创建目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> new_directory<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>rm</strong>：删除文件或目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> filename\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> directory  <span class=\"token comment\"># 删除目录及其内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>cp</strong>：复制文件或目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> source_file destination\n<span class=\"token function\">cp</span> <span class=\"token parameter variable\">-r</span> source_directory destination  <span class=\"token comment\"># 复制目录及其内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>mv</strong>：移动或重命名文件或目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> old_name new_name\n<span class=\"token function\">mv</span> <span class=\"token function\">file</span> /path/to/destination<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"文件查看和编辑\"><a href=\"#文件查看和编辑\" class=\"headerlink\" title=\"文件查看和编辑\"></a>文件查看和编辑</h3><ul>\n<li><p><strong>cat</strong>：查看文件内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>less</strong>：分页查看文件内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">less</span> filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>head</strong>：查看文件开头部分</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">head</span> filename\n<span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span> filename  <span class=\"token comment\"># 查看前 10 行</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>tail</strong>：查看文件末尾部分</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> filename\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span> filename  <span class=\"token comment\"># 查看后 10 行</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>nano</strong>、<strong>vi</strong>、<strong>vim</strong>：文本编辑器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">nano</span> filename\n<span class=\"token function\">vi</span> filename\n<span class=\"token function\">vim</span> filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"系统信息和管理\"><a href=\"#系统信息和管理\" class=\"headerlink\" title=\"系统信息和管理\"></a>系统信息和管理</h3><ul>\n<li><p><strong>echo</strong>：打印消息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>whoami</strong>：显示当前用户</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">whoami</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>top</strong>：实时显示系统性能信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">top</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>ps</strong>：显示当前进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span>\n<span class=\"token function\">ps</span> aux  <span class=\"token comment\"># 显示所有进程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>kill</strong>：终止进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">kill</span> PID\n<span class=\"token function\">kill</span> <span class=\"token parameter variable\">-9</span> PID  <span class=\"token comment\"># 强制终止进程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>chmod</strong>：更改文件权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">755</span> filename\n<span class=\"token function\">chmod</span> +x filename  <span class=\"token comment\"># 使文件可执行</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p><strong>chown</strong>：更改文件所有者</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> user:group filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"网络相关\"><a href=\"#网络相关\" class=\"headerlink\" title=\"网络相关\"></a>网络相关</h3><ul>\n<li><p><strong>ping</strong>：测试网络连通性</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ping</span> example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>curl</strong>：发送网络请求</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p><strong>wget</strong>：下载文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://example.com/file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"管道和重定向\"><a href=\"#管道和重定向\" class=\"headerlink\" title=\"管道和重定向\"></a>管道和重定向</h3><ul>\n<li><p>**|**：管道，将一个命令的输出作为另一个命令的输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"pattern\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**&gt;**：重定向输出到文件（覆盖）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span> <span class=\"token operator\">&gt;</span> file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**&gt;&gt;**：重定向输出到文件（追加）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, World!\"</span> <span class=\"token operator\">&gt;&gt;</span> file.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>**&lt;**：重定向输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">command</span> <span class=\"token operator\">&lt;</span> inputfile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><ul>\n<li><p>设置变量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">MY_VAR</span><span class=\"token operator\">=</span><span class=\"token string\">\"Hello, World!\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>使用变量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$MY_VAR</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"Shell-脚本\"><a href=\"#Shell-脚本\" class=\"headerlink\" title=\"Shell 脚本\"></a>Shell 脚本</h2><p>Shell 脚本是一组 Shell 命令的集合，通常用于自动化任务。以下是一个简单的 Shell 脚本示例：</p>\n<h3 id=\"创建脚本文件\"><a href=\"#创建脚本文件\" class=\"headerlink\" title=\"创建脚本文件\"></a>创建脚本文件</h3><p>使用你喜欢的文本编辑器创建一个脚本文件，例如 <code>myscript.sh</code>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">nano</span> myscript.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"编写脚本\"><a href=\"#编写脚本\" class=\"headerlink\" title=\"编写脚本\"></a>编写脚本</h3><p>在脚本文件中编写以下内容：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># 打印消息</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"This is a simple shell script.\"</span>\n\n<span class=\"token comment\"># 设置变量</span>\n<span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Alice\"</span>\n\n<span class=\"token comment\"># 使用变量</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, <span class=\"token variable\">$NAME</span>!\"</span>\n\n<span class=\"token comment\"># 条件语句</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$NAME</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Alice\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Welcome, Alice!\"</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You are not Alice.\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># 循环</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Number: <span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 函数</span>\n<span class=\"token function-name function\">my_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"This is a function.\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 调用函数</span>\nmy_function<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"运行脚本\"><a href=\"#运行脚本\" class=\"headerlink\" title=\"运行脚本\"></a>运行脚本</h3><p>首先使脚本可执行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x myscript.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后运行脚本：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./myscript.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>",
            "tags": [
                "命令"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/05/24/linux-zhong-echo-xie-ru-wen-jian/",
            "url": "https://0xdadream.github.io/2022/05/24/linux-zhong-echo-xie-ru-wen-jian/",
            "title": "linux中echo写入文件",
            "date_published": "2022-05-23T20:11:00.000Z",
            "content_html": "<h1 id=\"linux中echo写入文件\"><a href=\"#linux中echo写入文件\" class=\"headerlink\" title=\"linux中echo写入文件\"></a>linux中echo写入文件</h1><h2 id=\"覆盖文件内容\"><a href=\"#覆盖文件内容\" class=\"headerlink\" title=\"覆盖文件内容\"></a>覆盖文件内容</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test\"</span> <span class=\"token operator\">&gt;</span> test.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"追加文件内容\"><a href=\"#追加文件内容\" class=\"headerlink\" title=\"追加文件内容\"></a>追加文件内容</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test\"</span> <span class=\"token operator\">&gt;&gt;</span> test.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>后面会自动加/n</p>\n",
            "tags": [
                "linux",
                "命令"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2022/02/08/windows-zhong-netstat-ming-ling/",
            "url": "https://0xdadream.github.io/2022/02/08/windows-zhong-netstat-ming-ling/",
            "title": "windows中netstat命令",
            "date_published": "2022-02-07T18:11:00.000Z",
            "content_html": "<h1 id=\"windows中netstat命令\"><a href=\"#windows中netstat命令\" class=\"headerlink\" title=\"windows中netstat命令\"></a>windows中netstat命令</h1><h2 id=\"netstat-查看Linux中网络系统状态信息\"><a href=\"#netstat-查看Linux中网络系统状态信息\" class=\"headerlink\" title=\"netstat-查看Linux中网络系统状态信息\"></a>netstat-查看Linux中网络系统状态信息</h2><p><code>NETSTAT [-a] [-b] [-e] [-f] [-i] [-n] [-o] [-p proto] [-r] [-s] [-t] [-x] [-y] [interval]</code></p>\n<p>选项</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token parameter variable\">-a</span> 显示所有连接和监听端口\n<span class=\"token parameter variable\">-b</span> 显示创建每个连接所涉及的可执行文件或监听端口。在某些情况下，众所周知的可执行文件宿主多个独立的组件，在这些情况下创建连接所涉及的组件序列或显示监听端口。在这种情况下，可执行文件名称在底部的 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> 中，顶部是它调用的组件，以此类推，直到达到 TCP/IP\n<span class=\"token parameter variable\">-e</span> 显示以太网统计信息，这可以与 <span class=\"token parameter variable\">-s</span> 结合使用选项\n<span class=\"token parameter variable\">-f</span> 显示外国的完全限定域名<span class=\"token punctuation\">(</span>FQDN<span class=\"token punctuation\">)</span>地址\n<span class=\"token parameter variable\">-i</span> 显示 TCP 连接在其当前状态下花费的时间\n<span class=\"token parameter variable\">-n</span> 以数字形式显示地址和端口号\n<span class=\"token parameter variable\">-o</span> 显示与每个连接关联的拥有进程 ID\n<span class=\"token parameter variable\">-p</span> proto 显示由 proto 指定的协议的连接；原型可以是以下任何一种：TCP、UDP、TCPv6 或 UDPv6。如果与 <span class=\"token parameter variable\">-s</span> 一起使用显示每个协议统计信息的选项，proto 可以是以下任何一种：IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 或 UDPv6\n<span class=\"token parameter variable\">-q</span> 显示所有连接、监听端口和绑定非侦听 TCP 端口。绑定的非侦听端口可能会也可能不会与活动连接相关联\n<span class=\"token parameter variable\">-r</span> 显示路由表\n<span class=\"token parameter variable\">-s</span> 显示每个协议的统计信息。默认情况下，统计信息是针对 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 显示；-p 选项可用于指定默认值的子集\n<span class=\"token parameter variable\">-t</span> 显示当前连接卸载状态\n<span class=\"token parameter variable\">-x</span> 显示 NetworkDirect 连接、侦听器和共享端点\n<span class=\"token parameter variable\">-y</span> 显示所有连接的 TCP 连接模板不能与其他选项结合使用\ninterval 重新显示选定的统计信息，暂停间隔秒每个显示器之间。按 CTRL+C 停止重新显示统计数据。如果省略，netstat 将打印当前配置信息一次<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>常用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-ano</span> <span class=\"token comment\"># 显示所有连接和监听端口和ID号</span>\n<span class=\"token function\">netstat</span> -ano<span class=\"token operator\">|</span><span class=\"token function\">grep</span> yourfind grep也可以是findstr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>Proto\tLocal Address\tForeign Address\tState\tPID<br>协议\t 本地地址\t\t\t远程地址\t\t\t\t状态\t进程号</p>\n<p>State分为<br>LISTEN  ：监听状态<br>ESTABLISHED ：已建立联机<br>TIME_WAIT ：等待联机</p>\n",
            "tags": [
                "windows",
                "命令"
            ]
        }
    ]
}