<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://0xdadream.github.io</id>
    <title>逐梦</title>
    <link href="https://0xdadream.github.io" />
    <updated>2024-11-10T01:25:00.000Z</updated>
    <category term="tip" />
    <category term="re" />
    <category term="工具" />
    <category term="安装" />
    <category term="Java" />
    <category term="linux" />
    <category term="教程" />
    <category term="web" />
    <category term="wp" />
    <category term="攻防世界" />
    <category term="windows" />
    <category term="BUUCTF" />
    <category term="server" />
    <category term="环境" />
    <category term="bug" />
    <category term="sql" />
    <category term="代码审计" />
    <category term="漏洞复现" />
    <category term="tips" />
    <category term="python" />
    <category term="git" />
    <category term="java" />
    <category term="命令" />
    <category term="学习" />
    <category term="tools" />
    <category term="文件上传" />
    <category term="php" />
    <category term="区块链" />
    <category term="汇编" />
    <category term="i春秋" />
    <entry>
        <id>https://0xdadream.github.io/2024/11/10/linux-fang-huo-qiang-gui-ze/</id>
        <title>linux防火墙规则</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/11/10/linux-fang-huo-qiang-gui-ze/"/>
        <content type="html">&lt;h1 id=&#34;linux防火墙规则&#34;&gt;&lt;a href=&#34;#linux防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;linux防火墙规则&#34;&gt;&lt;/a&gt;linux防火墙规则&lt;/h1&gt;&lt;h2 id=&#34;iptables&#34;&gt;&lt;a href=&#34;#iptables&#34; class=&#34;headerlink&#34; title=&#34;iptables&#34;&gt;&lt;/a&gt;iptables&lt;/h2&gt;&lt;h4 id=&#34;1-查看当前防火墙规则&#34;&gt;&lt;a href=&#34;#1-查看当前防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;1. 查看当前防火墙规则&#34;&gt;&lt;/a&gt;1. 查看当前防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;使用 iptables 查看规则：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将列出所有的链和规则。&lt;code&gt;-L&lt;/code&gt; 参数代表列出（List）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看详细信息：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-v&lt;/code&gt; 参数代表详细（Verbose），&lt;code&gt;-n&lt;/code&gt; 参数代表不解析服务名称（Numeric）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看特定链的规则：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-配置防火墙规则&#34;&gt;&lt;a href=&#34;#2-配置防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;2. 配置防火墙规则&#34;&gt;&lt;/a&gt;2. 配置防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;添加规则允许 SSH：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; tcp &lt;span class=&#34;token parameter variable&#34;&gt;--dport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令将添加一条规则到 &lt;code&gt;INPUT&lt;/code&gt; 链，允许所有进入的 TCP 流量到达端口 22（SSH）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加规则拒绝特定 IP：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.100 &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; DROP&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令将拒绝来自 IP 地址 &lt;code&gt;192.168.1.100&lt;/code&gt; 的所有流量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加规则允许来自特定 IP 的 HTTP 访问：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; tcp &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.1.101 &lt;span class=&#34;token parameter variable&#34;&gt;--dport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;添加规则允许已建立的连接：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; INPUT &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; state &lt;span class=&#34;token parameter variable&#34;&gt;--state&lt;/span&gt; ESTABLISHED,RELATED &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;添加规则允许出站流量：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt; OUTPUT &lt;span class=&#34;token parameter variable&#34;&gt;-j&lt;/span&gt; ACCEPT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-删除防火墙规则&#34;&gt;&lt;a href=&#34;#3-删除防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;3. 删除防火墙规则&#34;&gt;&lt;/a&gt;3. 删除防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;删除特定规则：&lt;/strong&gt; 要删除规则，你需要知道规则的编号。使用 &lt;code&gt;-L --line-numbers&lt;/code&gt; 查看规则编号：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; --line-numbers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后删除规则，例如删除编号为 3 的规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-D&lt;/span&gt; INPUT &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-保存防火墙规则&#34;&gt;&lt;a href=&#34;#4-保存防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;4. 保存防火墙规则&#34;&gt;&lt;/a&gt;4. 保存防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;保存 iptables 规则：&lt;/strong&gt; 在 Debian/Ubuntu 上，你可以使用 &lt;code&gt;iptables-persistent&lt;/code&gt; 包来保存规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; iptables-persistent&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 CentOS/RHEL 上，你可以使用 &lt;code&gt;service&lt;/code&gt; 或 &lt;code&gt;systemctl&lt;/code&gt; 命令来保存规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt; iptables save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl save iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-恢复防火墙规则&#34;&gt;&lt;a href=&#34;#5-恢复防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;5. 恢复防火墙规则&#34;&gt;&lt;/a&gt;5. 恢复防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;在系统启动时恢复 iptables 规则：&lt;/strong&gt; 在 Debian/Ubuntu 上，安装 &lt;code&gt;iptables-persistent&lt;/code&gt; 后，规则会自动在启动时恢复。在 CentOS/RHEL 上，你需要手动保存规则，并在 &lt;code&gt;/etc/rc.d/rc.local&lt;/code&gt; 或使用 &lt;code&gt;systemctl&lt;/code&gt; 配置启动脚本中添加恢复规则的命令。&lt;/p&gt;
&lt;h4 id=&#34;6-重置防火墙规则&#34;&gt;&lt;a href=&#34;#6-重置防火墙规则&#34; class=&#34;headerlink&#34; title=&#34;6. 重置防火墙规则&#34;&gt;&lt;/a&gt;6. 重置防火墙规则&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;重置 iptables 到默认设置：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-F&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; nat &lt;span class=&#34;token parameter variable&#34;&gt;-F&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; iptables &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; nat &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-F&lt;/code&gt; 代表清空规则，&lt;code&gt;-X&lt;/code&gt; 代表清空用户自定义链。&lt;/p&gt;
&lt;h4 id=&#34;7-防火墙规则的持久化&#34;&gt;&lt;a href=&#34;#7-防火墙规则的持久化&#34; class=&#34;headerlink&#34; title=&#34;7. 防火墙规则的持久化&#34;&gt;&lt;/a&gt;7. 防火墙规则的持久化&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Ubuntu/Debian：&lt;/strong&gt; 安装 &lt;code&gt;iptables-persistent&lt;/code&gt; 包后，它会在 &lt;code&gt;/etc/iptables/rules.v4&lt;/code&gt; 文件中保存规则。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CentOS/RHEL：&lt;/strong&gt; 你可以使用 &lt;code&gt;iptables-services&lt;/code&gt; 包来管理 iptables 的持久化：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; iptables-services
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; iptables
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt; iptables save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-查看和管理系统服务&#34;&gt;&lt;a href=&#34;#8-查看和管理系统服务&#34; class=&#34;headerlink&#34; title=&#34;8. 查看和管理系统服务&#34;&gt;&lt;/a&gt;8. 查看和管理系统服务&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;查看所有服务：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl list-units &lt;span class=&#34;token parameter variable&#34;&gt;--type&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;service&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;启动/停止服务：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl start iptables
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl stop iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;设置服务开机启动：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;禁用服务开机启动：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl disable iptables&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上是 Linux 防火墙规则的完整指南，包括查看、配置、删除、保存、恢复和重置防火墙规则等操作。请根据你的具体需求和 Linux 发行版进行相应的操作。&lt;/p&gt;
&lt;h4 id=&#34;9-关闭或强制删除防火墙&#34;&gt;&lt;a href=&#34;#9-关闭或强制删除防火墙&#34; class=&#34;headerlink&#34; title=&#34;9. 关闭或强制删除防火墙&#34;&gt;&lt;/a&gt;9. 关闭或强制删除防火墙&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; purge netfilter-persistent &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reboot&lt;/span&gt;
或 &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /etc/iptables &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reboot&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;firewalld&#34;&gt;&lt;a href=&#34;#firewalld&#34; class=&#34;headerlink&#34; title=&#34;firewalld&#34;&gt;&lt;/a&gt;firewalld&lt;/h2&gt;&lt;h4 id=&#34;1-Firewalld-简介&#34;&gt;&lt;a href=&#34;#1-Firewalld-简介&#34; class=&#34;headerlink&#34; title=&#34;1. Firewalld 简介&#34;&gt;&lt;/a&gt;1. Firewalld 简介&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Firewalld&lt;/code&gt; 是一个动态防火墙管理工具，它提供了基于区域（zone）和服务（service）的简化配置界面，使得管理防火墙规则更加容易。它支持动态更新防火墙规则，可以在运行时添加、删除、修改规则，而不需要重新加载整个防火墙配置。&lt;/p&gt;
&lt;h4 id=&#34;2-服务的启动、停止和状态查看&#34;&gt;&lt;a href=&#34;#2-服务的启动、停止和状态查看&#34; class=&#34;headerlink&#34; title=&#34;2. 服务的启动、停止和状态查看&#34;&gt;&lt;/a&gt;2. 服务的启动、停止和状态查看&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动防火墙：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl start firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;停止防火墙：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl stop firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置防火墙开机启动：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用防火墙开机启动：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl disable firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看防火墙状态：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl status firewalld
&lt;span class=&#34;token comment&#34;&gt;# 或者&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--state&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-查看和设置默认区域&#34;&gt;&lt;a href=&#34;#3-查看和设置默认区域&#34; class=&#34;headerlink&#34; title=&#34;3. 查看和设置默认区域&#34;&gt;&lt;/a&gt;3. 查看和设置默认区域&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看默认区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-default-zone&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看所有可用的区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-zones&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看当前活动区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-active-zones&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置默认区域：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --set-default-zone&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;your_zone&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中your_zone是你想要设置的默认区域的名称，比如public、internal、dmz等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-使用-firewall-cmd-命令行工具进行规则配置&#34;&gt;&lt;a href=&#34;#4-使用-firewall-cmd-命令行工具进行规则配置&#34; class=&#34;headerlink&#34; title=&#34;4. 使用 firewall-cmd 命令行工具进行规则配置&#34;&gt;&lt;/a&gt;4. 使用 firewall-cmd 命令行工具进行规则配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加规则开放端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;public --add-port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;/tcp &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加规则允许服务：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;public --add-service&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;http &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除规则：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;public --remove-service&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;http &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-重新加载防火墙配置&#34;&gt;&lt;a href=&#34;#5-重新加载防火墙配置&#34; class=&#34;headerlink&#34; title=&#34;5. 重新加载防火墙配置&#34;&gt;&lt;/a&gt;5. 重新加载防火墙配置&lt;/h4&gt;&lt;p&gt;为了使永久配置生效，需要重新加载 &lt;code&gt;firewalld&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--reload&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-查询已开放的端口、已允许的服务&#34;&gt;&lt;a href=&#34;#6-查询已开放的端口、已允许的服务&#34; class=&#34;headerlink&#34; title=&#34;6. 查询已开放的端口、已允许的服务&#34;&gt;&lt;/a&gt;6. 查询已开放的端口、已允许的服务&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查询特定区域支持的所有特性：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zone_name --list-all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中，zone_name是你要查询的区域的名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询特定区域支持的所有服务：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zone_name --list-services&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询特定区域开放的端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zone_name --list-ports&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-绑定接口到特定区域&#34;&gt;&lt;a href=&#34;#7-绑定接口到特定区域&#34; class=&#34;headerlink&#34; title=&#34;7. 绑定接口到特定区域&#34;&gt;&lt;/a&gt;7. 绑定接口到特定区域&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;永久更改接口的区域绑定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--zone&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;home --add-interface&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;eth0 &lt;span class=&#34;token parameter variable&#34;&gt;--permanent&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了使永久更改生效，需要重新加载firewalld&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd &lt;span class=&#34;token parameter variable&#34;&gt;--reload&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次验证更改：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; firewall-cmd --get-active-zones&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="linux" />
        <updated>2024-11-10T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/</id>
        <title>flask教程</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/11/06/flask-jiao-cheng/"/>
        <content type="html">&lt;h1 id=&#34;flask教程&#34;&gt;&lt;a href=&#34;#flask教程&#34; class=&#34;headerlink&#34; title=&#34;flask教程&#34;&gt;&lt;/a&gt;flask教程&lt;/h1&gt;&lt;h2 id=&#34;项目结构&#34;&gt;&lt;a href=&#34;#项目结构&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h2&gt;&lt;h3 id=&#34;中型&#34;&gt;&lt;a href=&#34;#中型&#34; class=&#34;headerlink&#34; title=&#34;中型&#34;&gt;&lt;/a&gt;中型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-dtd&#34; data-language=&#34;dtd&#34;&gt;&lt;code class=&#34;language-dtd&#34;&gt;my_flask_project/
├── app/                     # 核心应用文件夹
│   ├── __init__.py          # 应用初始化
│   ├── routes.py            # 路由定义
│   ├── models.py            # 数据模型（如需要）
│   ├── templates/           # HTML 模板
│   │   └── index.html
│   └── static/              # 静态文件
│       ├── css/
│       │   └── style.css
│       └── js/
│           └── script.js
├── config.py                # 配置文件
├── run.py                   # 启动文件
└── requirements.txt         # 依赖文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-init-py&#34;&gt;&lt;a href=&#34;#app-init-py&#34; class=&#34;headerlink&#34; title=&#34;app/__init__.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app/__init__.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在 &lt;code&gt;__init__.py&lt;/code&gt; 中创建并初始化 Flask 应用，加载配置，并从 &lt;code&gt;routes.py&lt;/code&gt; 注册路由。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_app&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;from_object&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;config.Config&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 加载配置&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;app_context&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# 导入并注册路由&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; routes
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; app&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;create_app&lt;/code&gt; 函数用于创建和配置应用实例。&lt;code&gt;app.app_context()&lt;/code&gt; 确保在应用上下文中导入路由。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;app-routes-py&#34;&gt;&lt;a href=&#34;#app-routes-py&#34; class=&#34;headerlink&#34; title=&#34;app/routes.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app/routes.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;定义项目的路由，所有路由相关的逻辑放在这个文件中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; current_app &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; app

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;app.route(&#39;/&#39;)&lt;/code&gt; 是根路径的路由，返回 &lt;code&gt;index.html&lt;/code&gt; 模板页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;app-models-py-（可选）&#34;&gt;&lt;a href=&#34;#app-models-py-（可选）&#34; class=&#34;headerlink&#34; title=&#34;app/models.py （可选）&#34;&gt;&lt;/a&gt;&lt;code&gt;app/models.py&lt;/code&gt; （可选）&lt;/h4&gt;&lt;p&gt;如果项目需要数据库模型，可以在此文件中定义。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_sqlalchemy &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; SQLAlchemy

db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SQLAlchemy&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Model&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Column&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Integer&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; primary_key&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Column&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nullable&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; unique&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;config-py&#34;&gt;&lt;a href=&#34;#config-py&#34; class=&#34;headerlink&#34; title=&#34;config.py&#34;&gt;&lt;/a&gt;&lt;code&gt;config.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;配置文件，用于管理全局配置（例如密钥、数据库 URI 等）。将敏感信息存储在环境变量中更安全。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; os

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    SECRET_KEY &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;environ&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;
    SQLALCHEMY_DATABASE_URI &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sqlite:///site.db&#39;&lt;/span&gt;
    SQLALCHEMY_TRACK_MODIFICATIONS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-templates-index-html&#34;&gt;&lt;a href=&#34;#app-templates-index-html&#34; class=&#34;headerlink&#34; title=&#34;app/templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;app/templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;HTML 模板文件示例。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Flask App&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;css/style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to My Flask App&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Hello, Flask with modular structure!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;js/script.js&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-static-css-style-css&#34;&gt;&lt;a href=&#34;#app-static-css-style-css&#34; class=&#34;headerlink&#34; title=&#34;app/static/css/style.css&#34;&gt;&lt;/a&gt;&lt;code&gt;app/static/css/style.css&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;简单的 CSS 文件，用于为页面增加样式。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* static/css/style.css */&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Arial&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sans-serif&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #f0f0f0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-static-js-script-js&#34;&gt;&lt;a href=&#34;#app-static-js-script-js&#34; class=&#34;headerlink&#34; title=&#34;app/static/js/script.js&#34;&gt;&lt;/a&gt;&lt;code&gt;app/static/js/script.js&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;简单的 JavaScript 文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// static/js/script.js&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome to My Flask App with modular structure!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-py&#34;&gt;&lt;a href=&#34;#run-py&#34; class=&#34;headerlink&#34; title=&#34;run.py&#34;&gt;&lt;/a&gt;&lt;code&gt;run.py&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;项目的启动文件，通过调用 &lt;code&gt;create_app&lt;/code&gt; 函数启动应用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; app &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; create_app

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; create_app&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;code&gt;run.py&lt;/code&gt; 是整个项目的入口文件，使用 &lt;code&gt;app.run(debug=True)&lt;/code&gt; 启动应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;requirements-txt&#34;&gt;&lt;a href=&#34;#requirements-txt&#34; class=&#34;headerlink&#34; title=&#34;requirements.txt&#34;&gt;&lt;/a&gt;&lt;code&gt;requirements.txt&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;包含项目依赖。&lt;/p&gt;
&lt;h3 id=&#34;大型&#34;&gt;&lt;a href=&#34;#大型&#34; class=&#34;headerlink&#34; title=&#34;大型&#34;&gt;&lt;/a&gt;大型&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-dtd&#34; data-language=&#34;dtd&#34;&gt;&lt;code class=&#34;language-dtd&#34;&gt;my_flask_project/
├── app/
│   ├── __init__.py           # 初始化应用程序和配置
│   ├── routes.py             # 路由定义
│   ├── models.py             # 数据库模型定义
│   ├── templates/            # HTML 模板文件
│   │   └── base.html
│   ├── static/               # 静态文件（CSS、JS、图片等）
│   │   ├── css/
│   │   │   └── style.css
│   │   ├── js/
│   │   └── images/
│   └── blueprints/           # 各个功能模块的蓝图
│       ├── __init__.py
│       ├── user/             # 用户模块
│       │   ├── __init__.py
│       │   ├── routes.py
│       │   └── templates/
│       └── admin/            # 管理员模块
│           ├── __init__.py
│           ├── routes.py
│           └── templates/
├── migrations/               # 数据库迁移文件（使用 Flask-Migrate）
├── tests/                    # 测试代码
│   ├── __init__.py
│   └── test_app.py
├── config.py                 # 配置文件
├── manage.py                 # 启动、管理和迁移命令
└── requirements.txt          # 依赖包&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;**&lt;code&gt;app/&lt;/code&gt;**：主要应用程序文件夹，包含所有核心代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**&lt;code&gt;__init__.py&lt;/code&gt;**：初始化 Flask 应用、加载配置和注册蓝图。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;routes.py&lt;/code&gt;**：定义全局路由。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;models.py&lt;/code&gt;**：定义数据库模型。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;templates/&lt;/code&gt;**：存储 HTML 模板。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;static/&lt;/code&gt;**：存储静态文件，如 CSS、JavaScript 和图片。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;blueprints/&lt;/code&gt;**：存储不同功能模块的蓝图，每个模块可以有自己的 &lt;code&gt;routes.py&lt;/code&gt; 和 &lt;code&gt;templates/&lt;/code&gt; 文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&lt;code&gt;migrations/&lt;/code&gt;**：数据库迁移文件（如使用 Flask-Migrate 时生成）。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;tests/&lt;/code&gt;**：测试文件夹，用于单元测试或集成测试。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;config.py&lt;/code&gt;**：存储配置文件，如数据库连接和应用的全局设置。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;manage.py&lt;/code&gt;**：用于管理项目的文件，可添加自定义命令，如启动服务器、初始化数据库等。&lt;/p&gt;
&lt;p&gt;**&lt;code&gt;requirements.txt&lt;/code&gt;**：记录项目的所有依赖包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;路由&#34;&gt;&lt;a href=&#34;#路由&#34; class=&#34;headerlink&#34; title=&#34;路由&#34;&gt;&lt;/a&gt;路由&lt;/h2&gt;&lt;h3 id=&#34;1-基本路由&#34;&gt;&lt;a href=&#34;#1-基本路由&#34; class=&#34;headerlink&#34; title=&#34;1. 基本路由&#34;&gt;&lt;/a&gt;1. 基本路由&lt;/h3&gt;&lt;p&gt;最简单的路由是将一个 URL 映射到一个视图函数。可以使用 &lt;code&gt;@app.route()&lt;/code&gt; 装饰器来定义路由。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome to the homepage!&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/about&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;about&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is the about page.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@app.route(&#39;/&#39;)&lt;/code&gt;：当用户访问根路径（如 &lt;code&gt;http://localhost:5000/&lt;/code&gt;）时，执行 &lt;code&gt;home&lt;/code&gt; 函数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@app.route(&#39;/about&#39;)&lt;/code&gt;：访问 &lt;code&gt;/about&lt;/code&gt; 时，执行 &lt;code&gt;about&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-动态路由&#34;&gt;&lt;a href=&#34;#2-动态路由&#34; class=&#34;headerlink&#34; title=&#34;2. 动态路由&#34;&gt;&lt;/a&gt;2. 动态路由&lt;/h3&gt;&lt;p&gt;可以在路由中添加动态部分，用来接收 URL 中的参数。动态部分用尖括号 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 表示，Flask 会自动将 URL 中的值传递给视图函数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;/user/john&lt;/code&gt; 时，会输出 &lt;code&gt;Hello, john!&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; 是一个动态参数，视图函数 &lt;code&gt;show_user&lt;/code&gt; 将接收 &lt;code&gt;username&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;指定数据类型&#34;&gt;&lt;a href=&#34;#指定数据类型&#34; class=&#34;headerlink&#34; title=&#34;指定数据类型&#34;&gt;&lt;/a&gt;指定数据类型&lt;/h4&gt;&lt;p&gt;默认情况下，Flask 会将 URL 参数作为字符串处理。如果需要其他类型的数据，可以在尖括号内指定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/post/&amp;lt;int:post_id&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Post ID is &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;int:post_id&amp;gt;&lt;/code&gt; 指定了 &lt;code&gt;post_id&lt;/code&gt; 必须是整数，访问 &lt;code&gt;/post/5&lt;/code&gt; 会返回 &lt;code&gt;Post ID is 5&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;常用的数据类型有：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;int:variable&amp;gt;&lt;/code&gt;：整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;float:variable&amp;gt;&lt;/code&gt;：浮点数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;path:variable&amp;gt;&lt;/code&gt;：字符串（允许包含 &lt;code&gt;/&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-多种请求方法&#34;&gt;&lt;a href=&#34;#3-多种请求方法&#34; class=&#34;headerlink&#34; title=&#34;3. 多种请求方法&#34;&gt;&lt;/a&gt;3. 多种请求方法&lt;/h3&gt;&lt;p&gt;默认情况下，Flask 路由只响应 &lt;code&gt;GET&lt;/code&gt; 请求。如果需要处理其他 HTTP 方法（如 &lt;code&gt;POST&lt;/code&gt;、&lt;code&gt;PUT&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt; 等），可以通过 &lt;code&gt;methods&lt;/code&gt; 参数指定。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Form submitted!&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please submit the form.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;methods=[&#39;GET&#39;, &#39;POST&#39;]&lt;/code&gt;：允许 &lt;code&gt;submit&lt;/code&gt; 路由响应 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;POST&lt;/code&gt; 请求。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;request.method&lt;/code&gt; 判断请求类型并做不同的处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-路由别名（URL-别名）&#34;&gt;&lt;a href=&#34;#4-路由别名（URL-别名）&#34; class=&#34;headerlink&#34; title=&#34;4. 路由别名（URL 别名）&#34;&gt;&lt;/a&gt;4. 路由别名（URL 别名）&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;url_for&lt;/code&gt; 函数生成路由的 URL，避免硬编码 URL。在视图函数上使用 &lt;code&gt;endpoint&lt;/code&gt; 参数，可以给路由一个别名，用于简化 &lt;code&gt;url_for&lt;/code&gt; 函数调用。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; url_for

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/profile/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; endpoint&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;User: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用 url_for 动态生成 URL&lt;/span&gt;
&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/redirect_to_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;redirect_to_profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user_profile&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;/redirect_to_profile&lt;/code&gt; 会重定向到 &lt;code&gt;/profile/john&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-重定向与错误处理&#34;&gt;&lt;a href=&#34;#5-重定向与错误处理&#34; class=&#34;headerlink&#34; title=&#34;5. 重定向与错误处理&#34;&gt;&lt;/a&gt;5. 重定向与错误处理&lt;/h3&gt;&lt;p&gt;可以通过 &lt;code&gt;redirect&lt;/code&gt; 实现重定向，或用 &lt;code&gt;abort&lt;/code&gt; 函数处理错误。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; abort

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/old-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;old_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 重定向到新的 URL&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;new_url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/new-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;new_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is the new URL.&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/secret&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    abort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;403&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回 403 错误&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;redirect(url_for(&#39;new_url&#39;))&lt;/code&gt;：将用户重定向到 &lt;code&gt;new_url&lt;/code&gt; 视图。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abort(403)&lt;/code&gt;：返回 403 错误页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-带查询参数的路由&#34;&gt;&lt;a href=&#34;#6-带查询参数的路由&#34; class=&#34;headerlink&#34; title=&#34;6. 带查询参数的路由&#34;&gt;&lt;/a&gt;6. 带查询参数的路由&lt;/h3&gt;&lt;p&gt;查询参数一般附加在 URL 的末尾，例如 &lt;code&gt;http://localhost:5000/search?query=flask&lt;/code&gt;。可以通过 &lt;code&gt;request.args&lt;/code&gt; 获取这些参数。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; request

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/search&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;query&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Search results for: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;request.args.get(&#39;query&#39;)&lt;/code&gt;：获取查询参数 &lt;code&gt;query&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-路由分组（蓝图）&#34;&gt;&lt;a href=&#34;#7-路由分组（蓝图）&#34; class=&#34;headerlink&#34; title=&#34;7. 路由分组（蓝图）&#34;&gt;&lt;/a&gt;7. 路由分组（蓝图）&lt;/h3&gt;&lt;p&gt;如果应用较大，可以将路由划分为不同的模块（称为“蓝图”），以提高代码组织性。以下是一个简单的蓝图示例。&lt;/p&gt;
&lt;h4 id=&#34;创建蓝图文件-app-user-py：&#34;&gt;&lt;a href=&#34;#创建蓝图文件-app-user-py：&#34; class=&#34;headerlink&#34; title=&#34;创建蓝图文件 app/user.py：&#34;&gt;&lt;/a&gt;创建蓝图文件 &lt;code&gt;app/user.py&lt;/code&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Blueprint

user_bp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Blueprint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; __name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@user_bp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;User Profile for &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;注册蓝图到应用中-app-init-py：&#34;&gt;&lt;a href=&#34;#注册蓝图到应用中-app-init-py：&#34; class=&#34;headerlink&#34; title=&#34;注册蓝图到应用中 app/__init__.py：&#34;&gt;&lt;/a&gt;注册蓝图到应用中 &lt;code&gt;app/__init__.py&lt;/code&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; user_bp

&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_app&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;register_blueprint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user_bp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url_prefix&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 注册蓝图&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; app&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;url_prefix=&#39;/user&#39;&lt;/code&gt;：访问 &lt;code&gt;/user/&amp;lt;username&amp;gt;&lt;/code&gt; 时，会调用 &lt;code&gt;user_bp&lt;/code&gt; 蓝图中的 &lt;code&gt;profile&lt;/code&gt; 路由。&lt;/li&gt;
&lt;li&gt;蓝图让大型应用代码更清晰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-格式化&#34;&gt;&lt;a href=&#34;#8-格式化&#34; class=&#34;headerlink&#34; title=&#34;8. 格式化&#34;&gt;&lt;/a&gt;8. 格式化&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; jsonify

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Flask&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jsonify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-视图函数的装饰器&#34;&gt;&lt;a href=&#34;#9-视图函数的装饰器&#34; class=&#34;headerlink&#34; title=&#34;9.视图函数的装饰器&#34;&gt;&lt;/a&gt;9.视图函数的装饰器&lt;/h3&gt;&lt;p&gt;除了 @app.route，Flask 还支持其他装饰器，用于实现更复杂的功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**&lt;code&gt;@app.before_request&lt;/code&gt;**：在每个请求处理之前运行的函数。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;@app.after_request&lt;/code&gt;**：在每个请求处理之后运行的函数。&lt;/li&gt;
&lt;li&gt;**&lt;code&gt;@app.teardown_request&lt;/code&gt;**：在请求结束后运行的函数，用于清理工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例装饰器使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;before_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;before_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Before request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;after_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;after_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;After request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; response

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;teardown_request&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;teardown_request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Teardown request&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;完整示例&#34;&gt;&lt;a href=&#34;#完整示例&#34; class=&#34;headerlink&#34; title=&#34;完整示例&#34;&gt;&lt;/a&gt;完整示例&lt;/h3&gt;&lt;p&gt;以下是一个包含多种路由定义方式的完整示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; url_for&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; abort&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; jsonify

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome to the homepage!&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/user/&amp;lt;username&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/post/&amp;lt;int:post_id&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;show_post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Post ID is &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;post_id&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;method &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Form submitted!&#34;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please submit the form.&#34;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/search&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    query &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;args&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;query&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;Search results for: &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/json&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Flask&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;version&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; jsonify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/old-url&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;old_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url_for&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;home&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/secret&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;secret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    abort&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;403&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;Flask-模板渲染&#34;&gt;&lt;a href=&#34;#Flask-模板渲染&#34; class=&#34;headerlink&#34; title=&#34;Flask 模板渲染&#34;&gt;&lt;/a&gt;Flask 模板渲染&lt;/h2&gt;&lt;p&gt;在 Flask 中，模板渲染是生成动态 HTML 页面的一种方法。Flask 使用 Jinja2 模板引擎来帮助你在 HTML 中插入变量、控制结构（如条件判断、循环）等内容，以便动态生成页面。&lt;/p&gt;
&lt;h3 id=&#34;1-设置模板文件夹&#34;&gt;&lt;a href=&#34;#1-设置模板文件夹&#34; class=&#34;headerlink&#34; title=&#34;1. 设置模板文件夹&#34;&gt;&lt;/a&gt;1. 设置模板文件夹&lt;/h3&gt;&lt;p&gt;在 Flask 项目中，默认的模板文件夹是 &lt;code&gt;templates&lt;/code&gt;，建议将所有 HTML 模板文件放在这个文件夹中。Flask 会自动寻找并渲染该目录中的模板文件。&lt;/p&gt;
&lt;h3 id=&#34;2-创建基本-HTML-模板&#34;&gt;&lt;a href=&#34;#2-创建基本-HTML-模板&#34; class=&#34;headerlink&#34; title=&#34;2. 创建基本 HTML 模板&#34;&gt;&lt;/a&gt;2. 创建基本 HTML 模板&lt;/h3&gt;&lt;p&gt;假设我们在 &lt;code&gt;templates/index.html&lt;/code&gt; 中创建了一个基本的 HTML 模板文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- templates/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ title }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ heading }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ content }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在这个模板中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ title }}&lt;/code&gt;、&lt;code&gt;{{ heading }}&lt;/code&gt; 和 &lt;code&gt;{{ content }}&lt;/code&gt; 是变量占位符，在渲染模板时会被 Flask 替换成实际的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-渲染模板&#34;&gt;&lt;a href=&#34;#3-渲染模板&#34; class=&#34;headerlink&#34; title=&#34;3. 渲染模板&#34;&gt;&lt;/a&gt;3. 渲染模板&lt;/h3&gt;&lt;p&gt;在 Flask 中，可以使用 &lt;code&gt;render_template&lt;/code&gt; 函数来渲染 HTML 模板，并将变量传递给模板。下面是一个简单的视图函数，渲染上面的 &lt;code&gt;index.html&lt;/code&gt; 模板。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Home Page&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; heading&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Welcome to My Website&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;This is the home page content.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;render_template(&#39;index.html&#39;, ...)&lt;/code&gt;：&lt;code&gt;render_template&lt;/code&gt; 函数会在 &lt;code&gt;templates&lt;/code&gt; 文件夹中找到 &lt;code&gt;index.html&lt;/code&gt; 文件，并将指定变量传入模板。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title=&#34;Home Page&#34;&lt;/code&gt;：将 &lt;code&gt;title&lt;/code&gt; 变量的值传入模板，模板中的 &lt;code&gt;{{ title }}&lt;/code&gt; 将被替换为 &lt;code&gt;Home Page&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-模板变量和控制结构&#34;&gt;&lt;a href=&#34;#4-模板变量和控制结构&#34; class=&#34;headerlink&#34; title=&#34;4. 模板变量和控制结构&#34;&gt;&lt;/a&gt;4. 模板变量和控制结构&lt;/h3&gt;&lt;p&gt;Jinja2 模板支持在 HTML 中使用变量、控制结构（条件、循环）等操作。&lt;/p&gt;
&lt;h4 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h4&gt;&lt;p&gt;使用双大括号 &lt;code&gt;{{ ... }}&lt;/code&gt; 在模板中插入变量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Hello, {{ name }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;条件语句&#34;&gt;&lt;a href=&#34;#条件语句&#34; class=&#34;headerlink&#34; title=&#34;条件语句&#34;&gt;&lt;/a&gt;条件语句&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;{% if ... %}` 和 `{% endif %}&lt;/code&gt; 添加条件逻辑：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% if user_is_logged_in %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome back, {{ username }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% else %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Please log in to access your account.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endif %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;循环&#34;&gt;&lt;a href=&#34;#循环&#34; class=&#34;headerlink&#34; title=&#34;循环&#34;&gt;&lt;/a&gt;循环&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;{% for ... in ... %}` 和 `{% endfor %}&lt;/code&gt; 添加循环：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% for item in items %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ item }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% endfor %}
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-继承与块&#34;&gt;&lt;a href=&#34;#5-继承与块&#34; class=&#34;headerlink&#34; title=&#34;5. 继承与块&#34;&gt;&lt;/a&gt;5. 继承与块&lt;/h3&gt;&lt;p&gt;Jinja2 支持模板继承，可以创建一个基础模板供其他模板继承。可以将公共结构（如导航栏、页脚等）放在基础模板中，然后在子模板中覆盖特定部分。&lt;/p&gt;
&lt;h4 id=&#34;基础模板-templates-base-html&#34;&gt;&lt;a href=&#34;#基础模板-templates-base-html&#34; class=&#34;headerlink&#34; title=&#34;基础模板 templates/base.html&#34;&gt;&lt;/a&gt;基础模板 &lt;code&gt;templates/base.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{% block title %}My Website{% endblock %}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;© 2024 My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{% block title %}` 和 `{% block content %}` 是块占位符，子模板可以覆盖这些内容。

#### 子模板 `templates/index.html`

&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% extends &#34;base.html&#34; %}

{% block title %}Home Page{% endblock %}

{% block content %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to the Home Page&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;This is some content specific to the home page.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endblock %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

- `{% extends &#34;base.html&#34; %}` 表示继承 `base.html` 模板。
- `{% block title %}Home Page{% endblock %}&lt;/code&gt;：覆盖了基础模板中的 &lt;code&gt;title&lt;/code&gt; 块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{% block content %}...{% endblock %}&lt;/code&gt;：覆盖了基础模板中的 &lt;code&gt;content&lt;/code&gt; 块。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-使用静态文件&#34;&gt;&lt;a href=&#34;#6-使用静态文件&#34; class=&#34;headerlink&#34; title=&#34;6. 使用静态文件&#34;&gt;&lt;/a&gt;6. 使用静态文件&lt;/h3&gt;&lt;p&gt;Flask 默认将静态文件放在 &lt;code&gt;static&lt;/code&gt; 文件夹中，例如 CSS、JavaScript 文件等。在模板中，可以通过 &lt;code&gt;url_for(&#39;static&#39;, filename=&#39;...&#39;)&lt;/code&gt; 生成静态文件的 URL。&lt;/p&gt;
&lt;p&gt;假设有一个 CSS 文件 &lt;code&gt;static/style.css&lt;/code&gt;，可以在模板中引入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 在 base.html 中引入 CSS 文件 --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-完整示例&#34;&gt;&lt;a href=&#34;#7-完整示例&#34; class=&#34;headerlink&#34; title=&#34;7. 完整示例&#34;&gt;&lt;/a&gt;7. 完整示例&lt;/h3&gt;&lt;p&gt;以下是包含基础模板、变量、循环、条件的完整 Flask 应用示例。&lt;/p&gt;
&lt;h4 id=&#34;项目结构-1&#34;&gt;&lt;a href=&#34;#项目结构-1&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-csharp&#34; data-language=&#34;csharp&#34;&gt;&lt;code class=&#34;language-csharp&#34;&gt;my_flask_app&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
├── app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py
├── templates&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
│   ├── &lt;span class=&#34;token keyword&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;html
│   ├── index&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;html
└── &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;
    └── style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;css&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-py&#34;&gt;&lt;a href=&#34;#app-py&#34; class=&#34;headerlink&#34; title=&#34;app.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    items &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Item 1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Item 2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Item 3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    user_is_logged_in &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; title&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Home Page&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; items&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; user_is_logged_in&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;user_is_logged_in&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; username&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;John Doe&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-base-html&#34;&gt;&lt;a href=&#34;#templates-base-html&#34; class=&#34;headerlink&#34; title=&#34;templates/base.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/base.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{% block title %}My Website{% endblock %}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;© 2024 My Website&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-index-html&#34;&gt;&lt;a href=&#34;#templates-index-html&#34; class=&#34;headerlink&#34; title=&#34;templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;{% extends &#34;base.html&#34; %}

{% block title %}Home Page{% endblock %}

{% block content %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome to the Home Page&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% if user_is_logged_in %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Welcome back, {{ username }}!&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% else %}
        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Please log in to access your account.&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    {% endif %}

    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for item in items %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{ item }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
{% endblock %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;static-style-css&#34;&gt;&lt;a href=&#34;#static-style-css&#34; class=&#34;headerlink&#34; title=&#34;static/style.css&#34;&gt;&lt;/a&gt;&lt;code&gt;static/style.css&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-css&#34; data-language=&#34;css&#34;&gt;&lt;code class=&#34;language-css&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;/* 示例样式 */&lt;/span&gt;
&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Arial&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sans-serif&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #333&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #fff&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token selector&#34;&gt;footer&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #333&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #fff&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0.5em&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;Flask-表单处理&#34;&gt;&lt;a href=&#34;#Flask-表单处理&#34; class=&#34;headerlink&#34; title=&#34;Flask 表单处理&#34;&gt;&lt;/a&gt;Flask 表单处理&lt;/h2&gt;&lt;p&gt;在 Flask 中，表单处理是一个常见的功能，它涉及接收用户输入、验证数据以及相应地进行处理。Flask 提供了 &lt;code&gt;Flask-WTF&lt;/code&gt; 扩展，使得表单的创建、验证和处理变得更加简单和强大。下面将详细介绍如何在 Flask 中处理表单，包括安装 Flask-WTF、创建表单、验证表单、显示表单错误和处理表单数据。&lt;/p&gt;
&lt;h3 id=&#34;1-安装-Flask-WTF&#34;&gt;&lt;a href=&#34;#1-安装-Flask-WTF&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Flask-WTF&#34;&gt;&lt;/a&gt;1. 安装 Flask-WTF&lt;/h3&gt;&lt;p&gt;在开始之前，你需要确保安装了 &lt;code&gt;Flask-WTF&lt;/code&gt;。可以通过 &lt;code&gt;pip&lt;/code&gt; 进行安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; Flask-WTF&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-创建-Flask-应用&#34;&gt;&lt;a href=&#34;#2-创建-Flask-应用&#34; class=&#34;headerlink&#34; title=&#34;2. 创建 Flask 应用&#34;&gt;&lt;/a&gt;2. 创建 Flask 应用&lt;/h3&gt;&lt;p&gt;创建一个简单的 Flask 应用并设置基本配置。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FlaskForm
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SubmitField
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validators &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DataRequired

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置安全密钥&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-创建表单类&#34;&gt;&lt;a href=&#34;#3-创建表单类&#34; class=&#34;headerlink&#34; title=&#34;3. 创建表单类&#34;&gt;&lt;/a&gt;3. 创建表单类&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;Flask-WTF&lt;/code&gt; 创建表单类，定义所需的字段和验证规则。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StringField&lt;/code&gt;：表示一个文本输入字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DataRequired()&lt;/code&gt;：确保字段不为空。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-渲染表单&#34;&gt;&lt;a href=&#34;#4-渲染表单&#34; class=&#34;headerlink&#34; title=&#34;4. 渲染表单&#34;&gt;&lt;/a&gt;4. 渲染表单&lt;/h3&gt;&lt;p&gt;在视图函数中实例化表单并传递给模板。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 验证表单数据&lt;/span&gt;
        username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data  &lt;span class=&#34;token comment&#34;&gt;# 获取输入的用户名&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;validate_on_submit()&lt;/code&gt;：检查请求方法是否为 POST 并验证表单数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;form.username.data&lt;/code&gt;：访问用户输入的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-创建模板&#34;&gt;&lt;a href=&#34;#5-创建模板&#34; class=&#34;headerlink&#34; title=&#34;5. 创建模板&#34;&gt;&lt;/a&gt;5. 创建模板&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;templates&lt;/code&gt; 文件夹中创建一个模板 &lt;code&gt;index.html&lt;/code&gt;，用于显示表单。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- templates/index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Flask Form Example&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Enter your username&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;POST&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {{ form.hidden_tag() }}  &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 防止 CSRF 攻击 --&amp;gt;&lt;/span&gt;
        {{ form.username.label }} {{ form.username(size=20) }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for error in form.username.errors %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[{{ error }}]&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
        {{ form.submit() }}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ form.hidden_tag() }}&lt;/code&gt;：生成隐藏的 CSRF 令牌，增强安全性。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;{% for error in form.username.errors %}&lt;/code&gt; 循环显示字段的验证错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-处理表单错误&#34;&gt;&lt;a href=&#34;#6-处理表单错误&#34; class=&#34;headerlink&#34; title=&#34;6. 处理表单错误&#34;&gt;&lt;/a&gt;6. 处理表单错误&lt;/h3&gt;&lt;p&gt;如果表单验证失败，Flask-WTF 会自动将错误信息存储在字段的 &lt;code&gt;errors&lt;/code&gt; 属性中。在模板中，可以通过条件判断显示相应的错误消息。&lt;/p&gt;
&lt;h3 id=&#34;7-完整示例-1&#34;&gt;&lt;a href=&#34;#7-完整示例-1&#34; class=&#34;headerlink&#34; title=&#34;7. 完整示例&#34;&gt;&lt;/a&gt;7. 完整示例&lt;/h3&gt;&lt;p&gt;以下是一个完整的 Flask 应用示例，展示了如何使用 Flask-WTF 处理表单。&lt;/p&gt;
&lt;h4 id=&#34;项目结构-2&#34;&gt;&lt;a href=&#34;#项目结构-2&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;my_flask_app/
├── app.py                   &lt;span class=&#34;token comment&#34;&gt;# Flask 应用主文件&lt;/span&gt;
└── templates/
    └── index.html          &lt;span class=&#34;token comment&#34;&gt;# 表单模板&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;app-py-1&#34;&gt;&lt;a href=&#34;#app-py-1&#34; class=&#34;headerlink&#34; title=&#34;app.py&#34;&gt;&lt;/a&gt;&lt;code&gt;app.py&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;码&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_template
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; flask_wtf &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FlaskForm
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SubmitField
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validators &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DataRequired

app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__name__&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;SECRET_KEY&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;your_secret_key&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置安全密钥&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 验证表单数据&lt;/span&gt;
        username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data  &lt;span class=&#34;token comment&#34;&gt;# 获取输入的用户名&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;Hello, &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;username&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;templates-index-html-1&#34;&gt;&lt;a href=&#34;#templates-index-html-1&#34; class=&#34;headerlink&#34; title=&#34;templates/index.html&#34;&gt;&lt;/a&gt;&lt;code&gt;templates/index.html&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Flask Form Example&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Enter your username&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;POST&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {{ form.hidden_tag() }}  &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 防止 CSRF 攻击 --&amp;gt;&lt;/span&gt;
        {{ form.username.label }} {{ form.username(size=20) }}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% for error in form.username.errors %}
            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;[{{ error }}]&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        {% endfor %}
        {{ form.submit() }}
    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-添加更多字段和验证器&#34;&gt;&lt;a href=&#34;#8-添加更多字段和验证器&#34; class=&#34;headerlink&#34; title=&#34;8. 添加更多字段和验证器&#34;&gt;&lt;/a&gt;8. 添加更多字段和验证器&lt;/h3&gt;&lt;p&gt;可以使用 &lt;code&gt;WTForms&lt;/code&gt; 提供的多种字段类型和验证器来扩展表单功能。例如，可以添加 &lt;code&gt;EmailField&lt;/code&gt;、&lt;code&gt;PasswordField&lt;/code&gt;、&lt;code&gt;SelectField&lt;/code&gt; 等。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; EmailField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; PasswordField&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SelectField

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ExtendedForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; StringField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Username&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    email &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; EmailField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Email&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; PasswordField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Password&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; validators&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;DataRequired&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SelectField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Options&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; choices&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;opt1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Option 1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;opt2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Option 2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Submit&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-处理文件上传&#34;&gt;&lt;a href=&#34;#9-处理文件上传&#34; class=&#34;headerlink&#34; title=&#34;9. 处理文件上传&#34;&gt;&lt;/a&gt;9. 处理文件上传&lt;/h3&gt;&lt;p&gt;Flask-WTF 也支持文件上传，可以使用 &lt;code&gt;FileField&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; wtforms &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; FileField

&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;UploadForm&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;FlaskForm&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; FileField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;File&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    submit &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; SubmitField&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Upload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;token decorator annotation punctuation&#34;&gt;@app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/upload&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; methods&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;upload_file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    form &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; UploadForm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;validate_on_submit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; form&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data
        &lt;span class=&#34;token comment&#34;&gt;# 处理文件上传&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;File &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; uploaded successfully!&#39;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render_template&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;upload.html&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; form&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;form&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-保护表单安全&#34;&gt;&lt;a href=&#34;#10-保护表单安全&#34; class=&#34;headerlink&#34; title=&#34;10. 保护表单安全&#34;&gt;&lt;/a&gt;10. 保护表单安全&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;SECRET_KEY&lt;/code&gt; 保护表单，防止 CSRF 攻击，确保所有表单都使用 &lt;code&gt;form.hidden_tag()&lt;/code&gt; 生成 CSRF 令牌。&lt;/p&gt;
</content>
        <category term="教程" />
        <category term="python" />
        <updated>2024-11-06T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/11/03/pip-huan-yuan/</id>
        <title>pip换源</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/11/03/pip-huan-yuan/"/>
        <content type="html">&lt;h1 id=&#34;pip换源&#34;&gt;&lt;a href=&#34;#pip换源&#34; class=&#34;headerlink&#34; title=&#34;pip换源&#34;&gt;&lt;/a&gt;pip换源&lt;/h1&gt;&lt;h3 id=&#34;1-临时换源&#34;&gt;&lt;a href=&#34;#1-临时换源&#34; class=&#34;headerlink&#34; title=&#34;1. 临时换源&#34;&gt;&lt;/a&gt;1. 临时换源&lt;/h3&gt;&lt;p&gt;临时换源是在安装某个包时指定使用特定的源，而不改变全局配置。例如，使用清华大学源安装一个包的命令如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; package_name &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中&lt;code&gt;package_name&lt;/code&gt;是您要安装的包的名称。&lt;/p&gt;
&lt;h3 id=&#34;2-永久换源&#34;&gt;&lt;a href=&#34;#2-永久换源&#34; class=&#34;headerlink&#34; title=&#34;2. 永久换源&#34;&gt;&lt;/a&gt;2. 永久换源&lt;/h3&gt;&lt;p&gt;永久换源是通过修改pip的配置文件来实现的，这样每次使用pip时都会默认使用指定的源。&lt;/p&gt;
&lt;h4 id=&#34;2-1-找到pip配置文件的位置&#34;&gt;&lt;a href=&#34;#2-1-找到pip配置文件的位置&#34; class=&#34;headerlink&#34; title=&#34;2.1 找到pip配置文件的位置&#34;&gt;&lt;/a&gt;2.1 找到pip配置文件的位置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unix/Linux/MacOS&lt;/strong&gt;: &lt;code&gt;~/.pip/pip.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\pip\pip.ini&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果配置文件不存在，可以手动创建。&lt;/p&gt;
&lt;h4 id=&#34;2-2-编辑pip配置文件&#34;&gt;&lt;a href=&#34;#2-2-编辑pip配置文件&#34; class=&#34;headerlink&#34; title=&#34;2.2 编辑pip配置文件&#34;&gt;&lt;/a&gt;2.2 编辑pip配置文件&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Unix/Linux/MacOS: 打开或创建&lt;code&gt;~/.pip/pip.conf&lt;/code&gt;文件，并添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-text&#34; data-language=&#34;text&#34;&gt;&lt;code class=&#34;language-text&#34;&gt;[global]
index-url = https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windows: 打开或创建&lt;code&gt;%APPDATA%\pip\pip.ini&lt;/code&gt;文件，并添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-text&#34; data-language=&#34;text&#34;&gt;&lt;code class=&#34;language-text&#34;&gt;[global]
index-url = https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中&lt;code&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code&gt;可以替换为您选择的其他源的URL。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-3-命令&#34;&gt;&lt;a href=&#34;#2-3-命令&#34; class=&#34;headerlink&#34; title=&#34;2.3 命令&#34;&gt;&lt;/a&gt;2.3 命令&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 清华源&lt;/span&gt;
pip config &lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; global.index-url https://pypi.tuna.tsinghua.edu.cn/simple&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-重置镜像源&#34;&gt;&lt;a href=&#34;#3-重置镜像源&#34; class=&#34;headerlink&#34; title=&#34;3. 重置镜像源&#34;&gt;&lt;/a&gt;3. 重置镜像源&lt;/h3&gt;&lt;p&gt;如果您需要重置镜像源到默认的PyPI官方源，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip config &lt;span class=&#34;token builtin class-name&#34;&gt;unset&lt;/span&gt; global.index-url&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将全局设置的镜像源删除，恢复到默认设置。&lt;/p&gt;
&lt;h3 id=&#34;4-验证和测试&#34;&gt;&lt;a href=&#34;#4-验证和测试&#34; class=&#34;headerlink&#34; title=&#34;4. 验证和测试&#34;&gt;&lt;/a&gt;4. 验证和测试&lt;/h3&gt;&lt;p&gt;您可以通过以下命令检查当前pip配置的源：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip config list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后尝试安装一个包来测试配置是否生效。&lt;/p&gt;
&lt;h3 id=&#34;5-国内常用源地址&#34;&gt;&lt;a href=&#34;#5-国内常用源地址&#34; class=&#34;headerlink&#34; title=&#34;5. 国内常用源地址&#34;&gt;&lt;/a&gt;5. 国内常用源地址&lt;/h3&gt;&lt;p&gt;以下是一些国内常用的pip源地址，供您选择使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清华大学源：&lt;code&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;阿里云源：&lt;code&gt;https://mirrors.aliyun.com/pypi/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;豆瓣源：&lt;code&gt;https://pypi.douban.com/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;中国科学技术大学源：&lt;code&gt;https://pypi.mirrors.ustc.edu.cn/simple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;腾讯云源：&lt;code&gt;https://mirrors.cloud.tencent.com/pypi/simple&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在pip镜像升级报警，只需要添加信任源即可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;临时换源处理&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; beautifulsoup4 --trusted-host mirrors.aliyun.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更换默认源配置&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;install&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
trusted-host&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;pypi.douban.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="tips" />
        <updated>2024-11-03T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/</id>
        <title>以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/10/16/yi-tai-fang-dapp-kai-fa-geth-si-lian-huan-jing-da-jian-windows-ping-tai/"/>
        <content type="html">&lt;h1 id=&#34;以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34;&gt;&lt;a href=&#34;#以太坊-DApp-开发-Geth-私链环境搭建-Windows-平台&#34; class=&#34;headerlink&#34; title=&#34;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&#34;&gt;&lt;/a&gt;以太坊 DApp 开发-Geth 私链环境搭建-Windows 平台&lt;/h1&gt;&lt;h2 id=&#34;一、安装-DApp-开发环境&#34;&gt;&lt;a href=&#34;#一、安装-DApp-开发环境&#34; class=&#34;headerlink&#34; title=&#34;一、安装 DApp 开发环境&#34;&gt;&lt;/a&gt;一、安装 DApp 开发环境&lt;/h2&gt;&lt;h3 id=&#34;1-1-安装-Node-js&#34;&gt;&lt;a href=&#34;#1-1-安装-Node-js&#34; class=&#34;headerlink&#34; title=&#34;1.1 安装 Node.js&#34;&gt;&lt;/a&gt;1.1 安装 Node.js&lt;/h3&gt;&lt;p&gt;看我这篇&lt;a href=&#34;https://0xdadream.github.io/2024/01/20/node.js-ban-ben-wen-ti/&#34;&gt;node.js版本问题 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;
v22.0.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-2-安装-Geth&#34;&gt;&lt;a href=&#34;#1-2-安装-Geth&#34; class=&#34;headerlink&#34; title=&#34;1.2 安装 Geth&#34;&gt;&lt;/a&gt;1.2 安装 Geth&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://geth.ethereum.org/downloads&#34;&gt;Downloads | go-ethereum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载 64 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-amd64-1.8.3-329ac18e.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者 32 位&lt;a href=&#34;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&#34;&gt;https://gethstore.blob.core.windows.net/builds/geth-windows-386-1.8.3-329ac18e.exe&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Geth 安装程序,然后进行安装。 安装完毕后打开一个控制台,执行命令验证安装成功:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth version
Geth
Version: &lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;.3-stable &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-3-安装-solidity-编译器&#34;&gt;&lt;a href=&#34;#1-3-安装-solidity-编译器&#34; class=&#34;headerlink&#34; title=&#34;1.3 安装 solidity 编译器&#34;&gt;&lt;/a&gt;1.3 安装 solidity 编译器&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; solc &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  安装完毕后,执行命令验证安装成功 &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;solcjs &lt;span class=&#34;token parameter variable&#34;&gt;-V&lt;/span&gt;
&lt;span class=&#34;token number&#34;&gt;0.8&lt;/span&gt;.28+commit.7893614a.Emscripten.clang&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-4-安装-web3&#34;&gt;&lt;a href=&#34;#1-4-安装-web3&#34; class=&#34;headerlink&#34; title=&#34;1.4 安装 web3&#34;&gt;&lt;/a&gt;1.4 安装 web3&lt;/h3&gt;&lt;p&gt;Web3 的安装过程使用了 git,因此需要先安装 windows 版的 git 命令行&lt;a href=&#34;https://0xdadream.github.io/2024/08/09/git-shi-yong/&#34;&gt;git使用 | 逐梦 (0xdadream.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3 &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证，创建一个文件&lt;code&gt;index.js&lt;/code&gt;,写入以下内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;const &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; Web3 &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;web3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

console.log&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Version:&#34;&lt;/span&gt;,Web3.version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;node&lt;/span&gt; index.js
Version: &lt;span class=&#34;token number&#34;&gt;4.13&lt;/span&gt;.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-5-安装-truffle-框架&#34;&gt;&lt;a href=&#34;#1-5-安装-truffle-框架&#34; class=&#34;headerlink&#34; title=&#34;1.5 安装 truffle 框架&#34;&gt;&lt;/a&gt;1.5 安装 truffle 框架&lt;/h3&gt;&lt;p&gt; 执行以下命令安装 truffle 开发框架: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; truffle&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle.cmd version
Truffle v5.11.5 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;core: &lt;span class=&#34;token number&#34;&gt;5.11&lt;/span&gt;.5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-6-安装-webpack&#34;&gt;&lt;a href=&#34;#1-6-安装-webpack&#34; class=&#34;headerlink&#34; title=&#34;1.6 安装 webpack&#34;&gt;&lt;/a&gt;1.6 安装 webpack&lt;/h3&gt;&lt;p&gt;执行以下命令安装 webpack:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; webpack –g &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证安装  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;webpack &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;
Usage: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;entries&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
Alternative usage to run commands: webpack &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;二、运行私链节点&#34;&gt;&lt;a href=&#34;#二、运行私链节点&#34; class=&#34;headerlink&#34; title=&#34;二、运行私链节点&#34;&gt;&lt;/a&gt;二、运行私链节点&lt;/h2&gt;&lt;h3 id=&#34;2-1-创世块配置&#34;&gt;&lt;a href=&#34;#2-1-创世块配置&#34; class=&#34;headerlink&#34; title=&#34;2.1 创世块配置&#34;&gt;&lt;/a&gt;2.1 创世块配置&lt;/h3&gt;&lt;p&gt;创建一个节点目录 node1,并在其中创建私链的创世块配置文件:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; node1
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; node1
notepad gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后编辑内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2100000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;300000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token property&#34;&gt;&#34;f41c74c9ae680c1aa78f42e5647a62f353b7bdde&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;400000&#34;&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config.chainId&lt;/code&gt;用来声明以太坊网络编号,选择一个大于 10 的数字即可。  &lt;code&gt;difficulty&lt;/code&gt; 用来声明挖矿难度,越小的值难度越低,也就能更快速地出块。&lt;/p&gt;
&lt;p&gt;完整版的 &lt;code&gt;gensis.json&lt;/code&gt; 如下所示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x400&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xffffffff&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token comment&#34;&gt;// 可选填的参数&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;coinbase&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;extraData&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;nonce&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;mixhash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;parentHash&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x0000000000000000000000000000000000000000000000000000000000000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x00&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;430e986e0cca10a174baad96871ec9cb308c6d05&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;111111&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各个字段解释如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;必填&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;chainId&lt;/td&gt;
&lt;td&gt;自定义私链的网络ID，不同的网络ID无法互联通讯，以太坊公链ID 为1，我们设置为987以防止与网络中其他私链冲突。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;homesteadBlock&lt;/td&gt;
&lt;td&gt;是否为HomeStead版本的区块，设置为0表明是。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip155Block&lt;/td&gt;
&lt;td&gt;EIP155 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id5&#34;&gt;1]&lt;/a&gt; 是一个以太坊分叉提议，为了和以前的以太坊经典ETC 链条分叉而存在，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eip158Block&lt;/td&gt;
&lt;td&gt;EIP158 [&lt;a href=&#34;https://ethbook.abyteahead.com/ch5/build.html#id6&#34;&gt;2]&lt;/a&gt; 是一个以太坊分叉提议，为了解决之前以太坊空账户造成效率低下的协议漏洞而分叉，我们私链不需要它，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;difficulty&lt;/td&gt;
&lt;td&gt;设置当前区块难度，若难度过大挖矿就很慢，我们设置较小值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gasLimit&lt;/td&gt;
&lt;td&gt;单一区块最大 gas 消耗上限，用来限制能够打包进入块的交易数量与信息总和，我们在学习中可以设置为最大。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;选填&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coinbase&lt;/td&gt;
&lt;td&gt;打包该块的矿工的奖励地址，因为是创世块，可设为0地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extraData&lt;/td&gt;
&lt;td&gt;打包该块时矿工记录的笔记。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nonce&lt;/td&gt;
&lt;td&gt;打包该块时矿工挖矿所用到的Ethash输入参数nonce。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mixHash&lt;/td&gt;
&lt;td&gt;与nonce配合用于挖矿，创世区无前一个区块，可不填。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parentHash&lt;/td&gt;
&lt;td&gt;前一个区块头的哈希值，创世区块无前一个区块，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;打包该块的时间戳，符合Unix Timestamp标准，设为0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alloc&lt;/td&gt;
&lt;td&gt;创世时各账户分配以太币的数量，不想分配则忽略。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-2-初始化私链节点&#34;&gt;&lt;a href=&#34;#2-2-初始化私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.2 初始化私链节点&#34;&gt;&lt;/a&gt;2.2 初始化私链节点&lt;/h3&gt;&lt;p&gt;执行 geth 的 init 命令初始化私链节点:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json

&lt;span class=&#34;token comment&#34;&gt;# Successfully wrote genesis state&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会在当前目录下创建 data 目录,用来保存区块数据及账户信息&lt;/p&gt;
&lt;p&gt;可以上述命令写到一个脚本 &lt;code&gt;init.cmd&lt;/code&gt; 里，文件内容如下:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; .&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;data init gensis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在部署下一个节点时,就可以直接执行这个脚本进行初始化了。例如,在另一台机器上:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;init.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-启动私链节点&#34;&gt;&lt;a href=&#34;#2-3-启动私链节点&#34; class=&#34;headerlink&#34; title=&#34;2.3 启动私链节点&#34;&gt;&lt;/a&gt;2.3 启动私链节点&lt;/h3&gt;&lt;p&gt;在我们现在的环境下，需要启动一个 Geth 节点来接入私链网络（实际上也是这个私链网络的唯一一个节点），负责在创世块后挖出第一个块。该节点也是我们与以太坊私链通信的节点服务器。下面我们来启动这样一个节点。同样,你可以用一个脚本 &lt;code&gt;console.cmd&lt;/code&gt; 来简化启动节点时的输入,文件内容如下:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1 &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; ^
&lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geth启动时命令行参数解释如下表:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;–rpc&lt;/td&gt;
&lt;td&gt;开启JSON-RPC 服务，可供调用/调试访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcaddr&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcport&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC的端口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–prccorsdomain&lt;/td&gt;
&lt;td&gt;本地监听JSON-RPC允许的域名访问。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–rpcapi&lt;/td&gt;
&lt;td&gt;允许提供的RPC服务模块，在示例中选择了数个模块加载。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–nodiscover&lt;/td&gt;
&lt;td&gt;关闭自动发现节点，私有链开发时防止他人意外接入，可选择关闭该选项避免他人加入网络。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–maxpeers&lt;/td&gt;
&lt;td&gt;允许最大节点链接数目。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–networkid&lt;/td&gt;
&lt;td&gt;指定以太坊网络ID。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–port&lt;/td&gt;
&lt;td&gt;监听以太坊节点之间P2P消息的TCP/UDP端口，默认30303。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–mine&lt;/td&gt;
&lt;td&gt;节点启动挖矿功能，参与挖矿。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–minerthreads&lt;/td&gt;
&lt;td&gt;挖矿的多线程配置，例子中配置为1个线程。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–etherbase&lt;/td&gt;
&lt;td&gt;若启动挖矿功能，挖矿奖励的接受地址，例子中我们随便填了一个。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;console&lt;/td&gt;
&lt;td&gt;(可选) 启动后进入命令行模式，直接输入命令互动操作。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;输入回车，启动成功！此时控制台会输出一组日志信息并有欢迎信息&lt;/p&gt;
&lt;p&gt;以后启动节点,只要直接执行这个脚本即可:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;console.cmd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入控制台&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth attach http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Geth-启动结果解释&#34;&gt;&lt;a href=&#34;#Geth-启动结果解释&#34; class=&#34;headerlink&#34; title=&#34;Geth 启动结果解释&#34;&gt;&lt;/a&gt;Geth 启动结果解释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据目录&lt;/strong&gt;：你指定了 &lt;code&gt;--datadir ./data&lt;/code&gt;，Geth 会将所有区块链数据和配置文件存储在该目录中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RPC 服务&lt;/strong&gt;：你启动了 HTTP-RPC 接口，监听地址为 &lt;code&gt;127.0.0.1&lt;/code&gt;，端口为 &lt;code&gt;8545&lt;/code&gt;。这意味着你可以通过 HTTP 方式与节点交互。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;挖矿&lt;/strong&gt;：你启用了 &lt;code&gt;--mine&lt;/code&gt; 参数，使用一个线程（&lt;code&gt;--minerthreads 1&lt;/code&gt;）进行挖矿，挖矿奖励会发送到地址 &lt;code&gt;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止节点发现&lt;/strong&gt;：你启用了 &lt;code&gt;--nodiscover&lt;/code&gt; 参数，这意味着节点不会自动发现和连接其他节点（适用于私有链）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;后续如何使用这些配置&#34;&gt;&lt;a href=&#34;#后续如何使用这些配置&#34; class=&#34;headerlink&#34; title=&#34;后续如何使用这些配置&#34;&gt;&lt;/a&gt;后续如何使用这些配置&lt;/h4&gt;&lt;h5 id=&#34;进入控制台后：&#34;&gt;&lt;a href=&#34;#进入控制台后：&#34; class=&#34;headerlink&#34; title=&#34;进入控制台后：&#34;&gt;&lt;/a&gt;进入控制台后：&lt;/h5&gt;&lt;p&gt;你可以直接在 Geth 控制台中输入命令与节点交互。以下是一些常见的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看挖矿状态&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的挖矿算力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看当前区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示当前节点已同步的最新区块号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看账户余额&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示指定账户的余额。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;停止挖矿&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会停止挖矿进程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;发送交易&lt;/strong&gt;： 你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;解锁账户&lt;/strong&gt;： 如果要发送交易，首先需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用-RPC-接口：&#34;&gt;&lt;a href=&#34;#使用-RPC-接口：&#34; class=&#34;headerlink&#34; title=&#34;使用 RPC 接口：&#34;&gt;&lt;/a&gt;使用 RPC 接口：&lt;/h5&gt;&lt;p&gt;你启动了 RPC 服务，这意味着你可以通过 HTTP 与节点交互，而不必进入控制台。可以使用 &lt;code&gt;curl&lt;/code&gt;、Web3.js、Python 等工具来与节点通信。下面是几个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;curl&lt;/code&gt; 查看区块高度&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; POST &lt;span class=&#34;token parameter variable&#34;&gt;--data&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;{&#34;jsonrpc&#34;:&#34;2.0&#34;,&#34;method&#34;:&#34;eth_blockNumber&#34;,&#34;params&#34;:[],&#34;id&#34;:1}&#39;&lt;/span&gt; http://127.0.0.1:8545&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回当前的区块高度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用 Web3.js 与节点交互&lt;/strong&gt;： 你可以使用 Web3.js 编写一个简单的脚本来获取节点信息。例如，安装 Web3.js：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; web3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后使用以下 JavaScript 代码获取节点的区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-web-idl&#34; data-language=&#34;web-idl&#34;&gt;&lt;code class=&#34;language-web-idl&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;web3&#39;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;web3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;new&lt;/span&gt; Web3&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#39;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//127.0.0.1:8545&#39;);&lt;/span&gt;

web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getBlockNumber&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;then&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;手动添加其他节点：&#34;&gt;&lt;a href=&#34;#手动添加其他节点：&#34; class=&#34;headerlink&#34; title=&#34;手动添加其他节点：&#34;&gt;&lt;/a&gt;手动添加其他节点：&lt;/h5&gt;&lt;p&gt;如果你想手动连接其他节点，可以使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://publickey@ip:port&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将允许你将其他节点加入到网络中。&lt;/p&gt;
&lt;h3 id=&#34;2-4-账户管理&#34;&gt;&lt;a href=&#34;#2-4-账户管理&#34; class=&#34;headerlink&#34; title=&#34;2.4 账户管理&#34;&gt;&lt;/a&gt;2.4 账户管理&lt;/h3&gt;&lt;h4 id=&#34;2-4-1-查看账户列表&#34;&gt;&lt;a href=&#34;#2-4-1-查看账户列表&#34; class=&#34;headerlink&#34; title=&#34;2.4.1 查看账户列表&#34;&gt;&lt;/a&gt;2.4.1 查看账户列表&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 eth 对象的 accounts 属性查看目前的账户列表:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.accounts  or personal.listAccounts
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-2-创建新账户&#34;&gt;&lt;a href=&#34;#2-4-2-创建新账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.2 创建新账户&#34;&gt;&lt;/a&gt;2.4.2 创建新账户&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 newAccount()方法创建一个新账户,参数为你自己选择的密码:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; personal.newAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;123456&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token string&#34;&gt;&#34;0x6e1d438b00d5bb865c4d842e9c02549709130147&#34;&lt;/span&gt; &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出就是新创建的账户地址(公钥),你的输出不会和上面的示例相同。geth 会保存到数据目录下的 keystore 文件中。&lt;/p&gt;
&lt;h4 id=&#34;2-4-3-查询账户余额&#34;&gt;&lt;a href=&#34;#2-4-3-查询账户余额&#34; class=&#34;headerlink&#34; title=&#34;2.4.3 查询账户余额&#34;&gt;&lt;/a&gt;2.4.3 查询账户余额&lt;/h4&gt;&lt;p&gt;在 geth 控制台,使用 personal 对象的 getBalance()方法获取挃定账户的余额,参数为账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  或者直接输入账户地址:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;0xd8bcf1324d566cbec5d3b67e6e14485b06a41d49&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;web3.fromWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.getBalance&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 将wei换算成eth&lt;/span&gt;
web3.toWei&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-4-挖矿&#34;&gt;&lt;a href=&#34;#2-4-4-挖矿&#34; class=&#34;headerlink&#34; title=&#34;2.4.4 挖矿&#34;&gt;&lt;/a&gt;2.4.4 挖矿&lt;/h4&gt;&lt;p&gt;私有链不用其他节点也能挖矿&lt;/p&gt;
&lt;h5 id=&#34;1-启动和停止挖矿&#34;&gt;&lt;a href=&#34;#1-启动和停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;1. 启动和停止挖矿&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;启动和停止挖矿&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;启动挖矿&#34;&gt;&lt;a href=&#34;#启动挖矿&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h6&gt;&lt;p&gt;要开始挖矿，你可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;miner.start(threads)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;threads参数表示使用多少个线程进行挖矿。比如要用 1 个线程：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;停止挖矿&#34;&gt;&lt;a href=&#34;#停止挖矿&#34; class=&#34;headerlink&#34; title=&#34;停止挖矿&#34;&gt;&lt;/a&gt;停止挖矿&lt;/h6&gt;&lt;p&gt;要停止挖矿，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-查看挖矿状态&#34;&gt;&lt;a href=&#34;#2-查看挖矿状态&#34; class=&#34;headerlink&#34; title=&#34;2. 查看挖矿状态&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查看挖矿状态&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看挖矿是否正在进行&#34;&gt;&lt;a href=&#34;#查看挖矿是否正在进行&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿是否正在进行&#34;&gt;&lt;/a&gt;查看挖矿是否正在进行&lt;/h6&gt;&lt;p&gt;你可以通过以下命令检查节点当前是否正在挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mining&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令返回 &lt;code&gt;true&lt;/code&gt; 表示节点正在挖矿，返回 &lt;code&gt;false&lt;/code&gt; 表示节点没有在挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看当前的哈希算力&#34;&gt;&lt;a href=&#34;#查看当前的哈希算力&#34; class=&#34;headerlink&#34; title=&#34;查看当前的哈希算力&#34;&gt;&lt;/a&gt;查看当前的哈希算力&lt;/h6&gt;&lt;p&gt;使用以下命令查看节点的哈希算力：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hashrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的数值表示每秒计算的哈希数，以 H/s（哈希每秒）为单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看矿工账户&#34;&gt;&lt;a href=&#34;#查看矿工账户&#34; class=&#34;headerlink&#34; title=&#34;查看矿工账户&#34;&gt;&lt;/a&gt;查看矿工账户&lt;/h6&gt;&lt;p&gt;使用以下命令查看当前挖矿收益的账户（即矿工地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;查看当前区块高度&#34;&gt;&lt;a href=&#34;#查看当前区块高度&#34; class=&#34;headerlink&#34; title=&#34;查看当前区块高度&#34;&gt;&lt;/a&gt;查看当前区块高度&lt;/h6&gt;&lt;p&gt;你可以通过以下命令查看节点同步到的最新区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-设置矿工账户&#34;&gt;&lt;a href=&#34;#3-设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;3. 设置矿工账户&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;设置矿工账户&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;在挖矿前，通常需要设置 &lt;code&gt;coinbase&lt;/code&gt;（即矿工账户地址），挖矿的奖励会发送到这个地址。你可以使用以下命令设置 &lt;code&gt;coinbase&lt;/code&gt;：&lt;/p&gt;
&lt;h6 id=&#34;设置矿工账户&#34;&gt;&lt;a href=&#34;#设置矿工账户&#34; class=&#34;headerlink&#34; title=&#34;设置矿工账户&#34;&gt;&lt;/a&gt;设置矿工账户&lt;/h6&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setEtherbase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这个命令将指定的账户设置为矿工账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;4-挖矿奖励和账户&#34;&gt;&lt;a href=&#34;#4-挖矿奖励和账户&#34; class=&#34;headerlink&#34; title=&#34;4. 挖矿奖励和账户&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;挖矿奖励和账户&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看当前账户的余额&#34;&gt;&lt;a href=&#34;#查看当前账户的余额&#34; class=&#34;headerlink&#34; title=&#34;查看当前账户的余额&#34;&gt;&lt;/a&gt;查看当前账户的余额&lt;/h6&gt;&lt;p&gt;要查看矿工账户的余额，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;解锁矿工账户&#34;&gt;&lt;a href=&#34;#解锁矿工账户&#34; class=&#34;headerlink&#34; title=&#34;解锁矿工账户&#34;&gt;&lt;/a&gt;解锁矿工账户&lt;/h6&gt;&lt;p&gt;如果你希望自动将矿工奖励发送到某个账户，你可能需要解锁该账户，尤其是在你打算用这个账户发送交易时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; duration&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;duration&lt;/code&gt; 是账户解锁的时间，单位是秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;5-与挖矿相关的高级操作&#34;&gt;&lt;a href=&#34;#5-与挖矿相关的高级操作&#34; class=&#34;headerlink&#34; title=&#34;5. 与挖矿相关的高级操作&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;与挖矿相关的高级操作&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;设置挖矿目标难度&#34;&gt;&lt;a href=&#34;#设置挖矿目标难度&#34; class=&#34;headerlink&#34; title=&#34;设置挖矿目标难度&#34;&gt;&lt;/a&gt;设置挖矿目标难度&lt;/h6&gt;&lt;p&gt;在私有链上，你可以通过修改 &lt;code&gt;genesis.json&lt;/code&gt; 文件中的 &lt;code&gt;difficulty&lt;/code&gt; 值来控制挖矿难度。在 Geth 运行期间，无法直接修改目标难度。&lt;/p&gt;
&lt;h6 id=&#34;查看挖到的区块&#34;&gt;&lt;a href=&#34;#查看挖到的区块&#34; class=&#34;headerlink&#34; title=&#34;查看挖到的区块&#34;&gt;&lt;/a&gt;查看挖到的区块&lt;/h6&gt;&lt;p&gt;使用以下命令可以查看最新的区块信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;latest&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;eth.getBlock()&lt;/code&gt; 返回的区块信息包含以下常见字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt;: 区块号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 区块的哈希值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parentHash&lt;/code&gt;: 父区块的哈希&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 区块中工作量证明的 nonce 值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miner&lt;/code&gt;: 挖出该区块的矿工地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 区块的挖矿难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;totalDifficulty&lt;/code&gt;: 该区块链上到当前区块为止的总难度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: 区块大小（以字节为单位）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 该区块的 gas 上限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 该区块使用的 gas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt;: 区块的时间戳&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactions&lt;/code&gt;: 包含在该区块中的交易数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uncles&lt;/code&gt;: 包含该区块的叔块数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;自动挖矿新交易&#34;&gt;&lt;a href=&#34;#自动挖矿新交易&#34; class=&#34;headerlink&#34; title=&#34;自动挖矿新交易&#34;&gt;&lt;/a&gt;自动挖矿新交易&lt;/h6&gt;&lt;p&gt;Geth 提供一个选项可以在有新交易进入交易池时自动开始挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setAuto&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置为 &lt;code&gt;1&lt;/code&gt; 后，每当交易池中有新交易时，节点将自动开始挖矿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;6-挖矿的调试工具&#34;&gt;&lt;a href=&#34;#6-挖矿的调试工具&#34; class=&#34;headerlink&#34; title=&#34;6. 挖矿的调试工具&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;挖矿的调试工具&lt;/strong&gt;&lt;/h5&gt;&lt;h6 id=&#34;查看交易池中的交易&#34;&gt;&lt;a href=&#34;#查看交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;查看交易池中的交易&#34;&gt;&lt;/a&gt;查看交易池中的交易&lt;/h6&gt;&lt;p&gt;如果你想查看待处理的交易，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的信息会告诉你有多少笔交易在交易池中等待执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;查看挖矿日志&#34;&gt;&lt;a href=&#34;#查看挖矿日志&#34; class=&#34;headerlink&#34; title=&#34;查看挖矿日志&#34;&gt;&lt;/a&gt;查看挖矿日志&lt;/h6&gt;&lt;p&gt;挖矿日志可以帮助你跟踪挖矿状态和进度。在 Geth 启动时，你可以通过设置日志等级来查看挖矿详细信息。例如，使用 &lt;code&gt;--verbosity&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;geth &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;verbosity &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，挖矿时的日志会显示更多详细的挖矿信息。&lt;/p&gt;
&lt;h5 id=&#34;7-挖矿常见问题&#34;&gt;&lt;a href=&#34;#7-挖矿常见问题&#34; class=&#34;headerlink&#34; title=&#34;7. 挖矿常见问题&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;挖矿常见问题&lt;/strong&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;无法开始挖矿？&lt;/strong&gt; 如果你无法开始挖矿，可能是由于账户未解锁。确保你已解锁矿工账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;coinbase&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;yourpassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;矿工奖励没有到账？&lt;/strong&gt; 矿工奖励发放需要时间，尤其是在主网上挖矿时，奖励只有在挖到的区块被确认后才能到账。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;8-挖矿命令汇总&#34;&gt;&lt;a href=&#34;#8-挖矿命令汇总&#34; class=&#34;headerlink&#34; title=&#34;8. 挖矿命令汇总&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;挖矿命令汇总&lt;/strong&gt;&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.start(threads)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启动挖矿，&lt;code&gt;threads&lt;/code&gt; 为使用的线程数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.stop()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;停止挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.hashrate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前的挖矿算力&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.mining&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看是否正在挖矿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;miner.setEtherbase(&#34;address&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(eth.coinbase)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看矿工账户的余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.blockNumber&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看当前区块高度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBlock(&#39;latest&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看最新的区块信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池中的待处理交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(eth.coinbase, &#34;password&#34;, 600)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁矿工账户&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h4 id=&#34;2-4-5-解锁账户&#34;&gt;&lt;a href=&#34;#2-4-5-解锁账户&#34; class=&#34;headerlink&#34; title=&#34;2.4.5 解锁账户&#34;&gt;&lt;/a&gt;2.4.5 解锁账户&lt;/h4&gt;&lt;p&gt;在部署合约时需要一个解锁的账户。&lt;/p&gt;
&lt;p&gt;在 geth 控制台使用 &lt;code&gt;personal&lt;/code&gt; 对象的 &lt;code&gt;unlockAccount()&lt;/code&gt;  方法来解锁挃定的账户,参数为账户地址和账户密码(在创建账户时挃定的那个密码):  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; eth.unlockAccount&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth.accounts&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;123456&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  
&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-5-交易&#34;&gt;&lt;a href=&#34;#2-5-交易&#34; class=&#34;headerlink&#34; title=&#34;2.5 交易&#34;&gt;&lt;/a&gt;2.5 交易&lt;/h3&gt;&lt;h4 id=&#34;1-发送交易&#34;&gt;&lt;a href=&#34;#1-发送交易&#34; class=&#34;headerlink&#34; title=&#34;1. 发送交易&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;使用-eth-sendTransaction-发送交易&#34;&gt;&lt;a href=&#34;#使用-eth-sendTransaction-发送交易&#34; class=&#34;headerlink&#34; title=&#34;使用 eth.sendTransaction 发送交易&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 发送交易&lt;/h5&gt;&lt;p&gt;发送交易时，你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 命令。示例如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户的地址，必须先解锁账户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的金额，单位是 wei（可以使用 &lt;code&gt;web3.toWei&lt;/code&gt; 转换成 ether）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: （可选）指定交易的 gas 上限，默认为 &lt;code&gt;21000&lt;/code&gt;，适用于普通转账。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: （可选）指定每单位 gas 的价格，默认为当前网络的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: （可选）包含用于合约调用的数据（智能合约交易时用到）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;解锁账户&#34;&gt;&lt;a href=&#34;#解锁账户&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;在发送交易前，如果账户被锁定，你需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;600&lt;/code&gt; 表示账户将保持解锁 600 秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-查询交易&#34;&gt;&lt;a href=&#34;#2-查询交易&#34; class=&#34;headerlink&#34; title=&#34;2. 查询交易&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;查询交易&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易信息&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易信息&#34;&gt;&lt;/a&gt;根据交易哈希查询交易信息&lt;/h5&gt;&lt;p&gt;发送交易后，你可以使用交易哈希查询交易的详细信息：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将返回交易的详细信息，包括发送者、接收者、金额、gas 费用等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eth.getTransaction()&lt;/code&gt; 会返回一个包含该交易详细信息的对象，常见的字段包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 该交易所属区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 该交易所属区块的区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发起该交易的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易消耗的 gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 该交易的 gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;: 该交易的哈希值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易的数据字段，通常是合约调用时传递的数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送方账户的 nonce 值，表示该账户发起的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 交易接收者的地址，如果是合约创建交易则为 &lt;code&gt;null&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: 该交易在区块中的索引。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 该交易中发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;交易未打包&#34;&gt;&lt;a href=&#34;#交易未打包&#34; class=&#34;headerlink&#34; title=&#34;交易未打包&#34;&gt;&lt;/a&gt;交易未打包&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockHash&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 当交易尚未被打包时，&lt;code&gt;blockHash&lt;/code&gt; 的值为 &lt;code&gt;null&lt;/code&gt;，因为该交易还没有被包含在任何区块中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;blockNumber&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 同样，由于交易未被打包，&lt;code&gt;blockNumber&lt;/code&gt; 也会是 &lt;code&gt;null&lt;/code&gt;，表示该交易还未属于任何区块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;transactionIndex&lt;/code&gt;: &lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; 因为交易还没有被打包到区块，因此也没有在区块中的位置，&lt;code&gt;transactionIndex&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他字段&lt;/strong&gt; 其他交易的基本信息仍然可以被查询到，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者的地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者的地址（或者 &lt;code&gt;null&lt;/code&gt; 如果是合约创建交易）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 发送的以太币数量（以 wei 为单位）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 该交易所消耗的 Gas 限额。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: Gas 价格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce&lt;/code&gt;: 发送者账户的交易计数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt;: 交易中包含的数据（如合约调用时的参数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;a href=&#34;#根据交易哈希查询交易收据&#34; class=&#34;headerlink&#34; title=&#34;根据交易哈希查询交易收据&#34;&gt;&lt;/a&gt;根据交易哈希查询交易收据&lt;/h5&gt;&lt;p&gt;要查看交易是否成功被打包到区块中，可以使用以下命令查询交易收据：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionReceipt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xTransactionHash&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;返回的交易收据包含以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 交易的执行状态，&lt;code&gt;1&lt;/code&gt; 表示成功，&lt;code&gt;0&lt;/code&gt; 表示失败。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockHash&lt;/code&gt;: 包含该交易的区块的哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blockNumber&lt;/code&gt;: 区块号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transactionHash&lt;/code&gt;: 交易哈希。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasUsed&lt;/code&gt;: 此交易消耗的 gas 量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;logs&lt;/code&gt;: 该交易的事件日志列表&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-创建自定义交易&#34;&gt;&lt;a href=&#34;#3-创建自定义交易&#34; class=&#34;headerlink&#34; title=&#34;3. 创建自定义交易&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;创建自定义交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt; 创建自定义交易，除了 &lt;code&gt;from&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 之外，还可以指定 &lt;code&gt;gas&lt;/code&gt;、&lt;code&gt;gasPrice&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 等字段：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSomeData&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gas&lt;/code&gt;: 设置交易的 gas 限制，确保足够高。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasPrice&lt;/code&gt;: 设置每单位 gas 的价格，单位是 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;自定义-gas-价格&#34;&gt;&lt;a href=&#34;#自定义-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;自定义 gas 价格&#34;&gt;&lt;/a&gt;自定义 gas 价格&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gwei&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将设置一个较高的 gas 价格，以加快交易打包。&lt;/p&gt;
&lt;h4 id=&#34;4-离线签名交易&#34;&gt;&lt;a href=&#34;#4-离线签名交易&#34; class=&#34;headerlink&#34; title=&#34;4. 离线签名交易&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;离线签名交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在某些场景下，你可能希望在离线状态下生成交易并签名，然后再发送。以下是离线签名交易的步骤：&lt;/p&gt;
&lt;h5 id=&#34;构建未签名交易&#34;&gt;&lt;a href=&#34;#构建未签名交易&#34; class=&#34;headerlink&#34; title=&#34;构建未签名交易&#34;&gt;&lt;/a&gt;构建未签名交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; rawTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;nonce&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTransactionCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasPrice&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;20&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;gwei&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;gasLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;21000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toHex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ether&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;签名交易&#34;&gt;&lt;a href=&#34;#签名交易&#34; class=&#34;headerlink&#34; title=&#34;签名交易&#34;&gt;&lt;/a&gt;签名交易&lt;/h5&gt;&lt;p&gt;使用 &lt;code&gt;eth.accounts.signTransaction&lt;/code&gt; 函数来签名交易：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; signedTx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;accounts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;signTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rawTx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xPrivateKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送已签名交易&#34;&gt;&lt;a href=&#34;#发送已签名交易&#34; class=&#34;headerlink&#34; title=&#34;发送已签名交易&#34;&gt;&lt;/a&gt;发送已签名交易&lt;/h5&gt;&lt;p&gt;发送已签名的交易，可以使用 &lt;code&gt;eth.sendSignedTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendSignedTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;signedTx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;rawTransaction&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;receipt&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-批量发送交易&#34;&gt;&lt;a href=&#34;#5-批量发送交易&#34; class=&#34;headerlink&#34; title=&#34;5. 批量发送交易&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;批量发送交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果你需要一次发送多笔交易，你可以在脚本中批量调用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;6-检查账户余额&#34;&gt;&lt;a href=&#34;#6-检查账户余额&#34; class=&#34;headerlink&#34; title=&#34;6. 检查账户余额&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;检查账户余额&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以随时使用以下命令检查账户的余额：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回值为账户的余额，单位是 wei。如果你想以以太币（ether）显示，可以使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-检查交易池中的交易&#34;&gt;&lt;a href=&#34;#7-检查交易池中的交易&#34; class=&#34;headerlink&#34; title=&#34;7. 检查交易池中的交易&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;检查交易池中的交易&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;交易被发送后，可能会在交易池中等待确认。你可以使用以下命令查看交易池中的状态：&lt;/p&gt;
&lt;h5 id=&#34;检查挂起的交易&#34;&gt;&lt;a href=&#34;#检查挂起的交易&#34; class=&#34;headerlink&#34; title=&#34;检查挂起的交易&#34;&gt;&lt;/a&gt;检查挂起的交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会返回交易池中的待处理和挂起的交易数量。&lt;/p&gt;
&lt;h5 id=&#34;查看具体的挂起交易&#34;&gt;&lt;a href=&#34;#查看具体的挂起交易&#34; class=&#34;headerlink&#34; title=&#34;查看具体的挂起交易&#34;&gt;&lt;/a&gt;查看具体的挂起交易&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inspect&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示详细的待处理和挂起交易的信息。&lt;/p&gt;
&lt;h4 id=&#34;8-检查当前的-gas-价格&#34;&gt;&lt;a href=&#34;#8-检查当前的-gas-价格&#34; class=&#34;headerlink&#34; title=&#34;8. 检查当前的 gas 价格&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;检查当前的 gas 价格&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以使用以下命令来获取当前网络建议的 gas 价格：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gasPrice&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;返回的值是以 wei 为单位的当前 gas 价格。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9-监听区块和交易事件&#34;&gt;&lt;a href=&#34;#9-监听区块和交易事件&#34; class=&#34;headerlink&#34; title=&#34;9. 监听区块和交易事件&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;监听区块和交易事件&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;你可以通过监听事件来实时监控交易状态。例如，当新区块生成时，可以收到通知：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;newBlockHeaders&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;error&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;connected&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;subscriptionId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;subscriptionId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;blockHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blockHeader&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-交易命令汇总&#34;&gt;&lt;a href=&#34;#10-交易命令汇总&#34; class=&#34;headerlink&#34; title=&#34;10. 交易命令汇总&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;交易命令汇总&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendTransaction({...})&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送普通或自定义交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;personal.unlockAccount(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;解锁账户以便发送交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransaction(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易详情&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getTransactionReceipt(&#34;txHash&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据哈希查询交易收据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.getBalance(&#34;0xAddress&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查询账户余额&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;txpool.status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看交易池的状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.gasPrice&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取当前的 gas 价格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.accounts.signTransaction({...}, &#34;privateKey&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;离线签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eth.sendSignedTransaction(&#34;signedTx&#34;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;发送已签名交易&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-6-私链多个节点连接的详细命令&#34;&gt;&lt;a href=&#34;#2-6-私链多个节点连接的详细命令&#34; class=&#34;headerlink&#34; title=&#34;2.6 私链多个节点连接的详细命令&#34;&gt;&lt;/a&gt;2.6 私链多个节点连接的详细命令&lt;/h3&gt;&lt;p&gt;在以太坊私链中，多个节点可以通过网络连接形成一个共识网络。在这种情况下，节点之间需要能够发现彼此，并保持同步。以下是详细的步骤和命令，用于设置并连接多个 Geth 节点到同一个私链网络。&lt;/p&gt;
&lt;h4 id=&#34;1-准备工作&#34;&gt;&lt;a href=&#34;#1-准备工作&#34; class=&#34;headerlink&#34; title=&#34;1. 准备工作&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;准备工作&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建-genesis-json-文件&#34;&gt;&lt;a href=&#34;#创建-genesis-json-文件&#34; class=&#34;headerlink&#34; title=&#34;创建 genesis.json 文件&#34;&gt;&lt;/a&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件&lt;/h5&gt;&lt;p&gt;在私链中，所有节点需要共享同一个创世区块 (&lt;code&gt;genesis block&lt;/code&gt;)。首先，创建一个 &lt;code&gt;genesis.json&lt;/code&gt; 文件，它定义了私链的创世区块和区块链的初始配置。&lt;/p&gt;
&lt;p&gt;以下是一个示例 &lt;code&gt;genesis.json&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-json&#34; data-language=&#34;json&#34;&gt;&lt;code class=&#34;language-json&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;config&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;chainId&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;homesteadBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 
    &lt;span class=&#34;token property&#34;&gt;&#34;eip150Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip155Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;eip158Block&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;byzantiumBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;constantinopleBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;petersburgBlock&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;difficulty&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;200000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;gasLimit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8000000&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token property&#34;&gt;&#34;alloc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token property&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;&#34;balance&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1000000000000000000000&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chainId&lt;/code&gt;: 为私链设置一个独特的网络 ID（不同于主网和测试网）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difficulty&lt;/code&gt;: 设置初始挖矿难度，数值越低，挖矿越容易。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gasLimit&lt;/code&gt;: 设置每个区块的 gas 上限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alloc&lt;/code&gt;: 为指定账户分配初始余额。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-初始化-Geth-节点&#34;&gt;&lt;a href=&#34;#2-初始化-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;2. 初始化 Geth 节点&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;初始化 Geth 节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;每个节点在第一次启动时都需要初始化私链。假设你已经有了 Geth，并将数据目录设置为 &lt;code&gt;./data&lt;/code&gt;，可以使用以下命令初始化节点：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data init genesis.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init genesis.json&lt;/code&gt;: 使用 &lt;code&gt;genesis.json&lt;/code&gt; 文件初始化链。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个私链节点都需要运行此命令。&lt;/p&gt;
&lt;h4 id=&#34;3-启动节点&#34;&gt;&lt;a href=&#34;#3-启动节点&#34; class=&#34;headerlink&#34; title=&#34;3. 启动节点&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;启动节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;使用以下命令启动每个节点，并确保每个节点都指定相同的 &lt;code&gt;--networkid&lt;/code&gt; 和使用 &lt;code&gt;--port&lt;/code&gt; 参数设置不同的端口。&lt;/p&gt;
&lt;h5 id=&#34;启动第一个节点（节点A）&#34;&gt;&lt;a href=&#34;#启动第一个节点（节点A）&#34; class=&#34;headerlink&#34; title=&#34;启动第一个节点（节点A）&#34;&gt;&lt;/a&gt;启动第一个节点（节点A）&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./data&lt;/code&gt;: 指定节点的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--networkid 987&lt;/code&gt;: 设置网络 ID，与 &lt;code&gt;genesis.json&lt;/code&gt; 中的 &lt;code&gt;chainId&lt;/code&gt; 保持一致。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30303&lt;/code&gt;: 设置 P2P 连接的监听端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--nodiscover&lt;/code&gt;: 禁用节点发现功能（如果你想手动连接节点）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http&lt;/code&gt;: 启用 HTTP-RPC 服务，便于远程访问节点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console&lt;/code&gt;: 启动 Geth 控制台以便执行命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;启动第二个节点（节点B）&#34;&gt;&lt;a href=&#34;#启动第二个节点（节点B）&#34; class=&#34;headerlink&#34; title=&#34;启动第二个节点（节点B）&#34;&gt;&lt;/a&gt;启动第二个节点（节点B）&lt;/h5&gt;&lt;p&gt;节点B可以在另一台机器上，也可以是本机上的另一个实例，只需要不同的数据目录和端口：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--datadir ./node2data&lt;/code&gt;: 为节点B设置不同的数据目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port 30304&lt;/code&gt;: 节点B的 P2P 端口必须与节点A不同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--http.port 8546&lt;/code&gt;: HTTP-RPC 服务端口与节点A不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-手动连接节点&#34;&gt;&lt;a href=&#34;#4-手动连接节点&#34; class=&#34;headerlink&#34; title=&#34;4. 手动连接节点&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;手动连接节点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;因为 &lt;code&gt;--nodiscover&lt;/code&gt; 禁用了自动发现，必须手动连接节点。&lt;/p&gt;
&lt;h5 id=&#34;获取节点的-enode-信息&#34;&gt;&lt;a href=&#34;#获取节点的-enode-信息&#34; class=&#34;headerlink&#34; title=&#34;获取节点的 enode 信息&#34;&gt;&lt;/a&gt;获取节点的 &lt;code&gt;enode&lt;/code&gt; 信息&lt;/h5&gt;&lt;p&gt;在节点A的控制台中，输入以下命令获取节点A的 &lt;code&gt;enode&lt;/code&gt; 地址：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nodeInfo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;enode&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出类似于：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-perl&#34; data-language=&#34;perl&#34;&gt;&lt;code class=&#34;language-perl&#34;&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303?discport=0&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个地址是节点A的唯一标识，后面的 &lt;code&gt;@127.0.0.1:30303&lt;/code&gt; 表示节点A运行的 IP 和端口。&lt;/p&gt;
&lt;h5 id=&#34;连接节点B到节点A&#34;&gt;&lt;a href=&#34;#连接节点B到节点A&#34; class=&#34;headerlink&#34; title=&#34;连接节点B到节点A&#34;&gt;&lt;/a&gt;连接节点B到节点A&lt;/h5&gt;&lt;p&gt;在节点B的控制台中，使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 命令连接到节点A：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;&#34;enode://1234567890abcdef@127.0.0.1:30303&#34;&lt;/code&gt; 替换为节点A的 &lt;code&gt;enode&lt;/code&gt; 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;验证节点是否连接&#34;&gt;&lt;a href=&#34;#验证节点是否连接&#34; class=&#34;headerlink&#34; title=&#34;验证节点是否连接&#34;&gt;&lt;/a&gt;验证节点是否连接&lt;/h5&gt;&lt;p&gt;在任何一个节点的控制台中，使用以下命令检查当前连接的对等节点数量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果节点成功连接，该命令将返回大于 &lt;code&gt;0&lt;/code&gt; 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你还可以使用以下命令查看当前的连接节点列表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-同步和挖矿&#34;&gt;&lt;a href=&#34;#5-同步和挖矿&#34; class=&#34;headerlink&#34; title=&#34;5. 同步和挖矿&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;同步和挖矿&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在节点A或节点B中，可以启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用 1 个线程进行挖矿&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;挖到的区块会自动同步到其他节点。你可以通过以下命令查看区块高度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-账户和交易管理&#34;&gt;&lt;a href=&#34;#6-账户和交易管理&#34; class=&#34;headerlink&#34; title=&#34;6. 账户和交易管理&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;账户和交易管理&lt;/strong&gt;&lt;/h4&gt;&lt;h5 id=&#34;创建新账户&#34;&gt;&lt;a href=&#34;#创建新账户&#34; class=&#34;headerlink&#34; title=&#34;创建新账户&#34;&gt;&lt;/a&gt;创建新账户&lt;/h5&gt;&lt;p&gt;在 Geth 控制台中，你可以为每个节点创建新账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;code class=&#34;language-java&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;解锁账户-1&#34;&gt;&lt;a href=&#34;#解锁账户-1&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h5&gt;&lt;p&gt;发送交易前需要解锁账户：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAccountAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;发送交易&#34;&gt;&lt;a href=&#34;#发送交易&#34; class=&#34;headerlink&#34; title=&#34;发送交易&#34;&gt;&lt;/a&gt;发送交易&lt;/h5&gt;&lt;p&gt;在节点之间发送交易，可以使用 &lt;code&gt;eth.sendTransaction&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xSenderAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xRecipientAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: 发送者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: 接收者账户地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: 转账金额，单位为 wei。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-设置启动脚本&#34;&gt;&lt;a href=&#34;#7-设置启动脚本&#34; class=&#34;headerlink&#34; title=&#34;7. 设置启动脚本&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;设置启动脚本&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;为了方便，你可以将节点启动命令放入 &lt;code&gt;.bat&lt;/code&gt; 或 &lt;code&gt;.cmd&lt;/code&gt; 文件中，在 Windows 上直接双击执行。例如，创建一个 &lt;code&gt;start_nodeA.bat&lt;/code&gt; 文件，内容为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后创建 &lt;code&gt;start_nodeB.bat&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./node2data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30304&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.addr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8546&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.corsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--http.api&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin&#34;&lt;/span&gt; console&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-多节点连接的总结步骤&#34;&gt;&lt;a href=&#34;#8-多节点连接的总结步骤&#34; class=&#34;headerlink&#34; title=&#34;8. 多节点连接的总结步骤&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;多节点连接的总结步骤&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;创建 &lt;code&gt;genesis.json&lt;/code&gt; 文件，并初始化所有节点。&lt;/li&gt;
&lt;li&gt;启动每个节点，确保使用相同的 &lt;code&gt;networkid&lt;/code&gt; 和不同的 &lt;code&gt;port&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.addPeer&lt;/code&gt; 手动连接节点，确保它们可以互相通信。&lt;/li&gt;
&lt;li&gt;启动挖矿，并通过 &lt;code&gt;miner.start()&lt;/code&gt; 命令进行区块生成。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;admin.peers&lt;/code&gt; 和 &lt;code&gt;net.peerCount&lt;/code&gt; 查看连接状态。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这些步骤，你可以在私链上搭建多个节点的网络，节点之间可以互相同步区块、挖矿和发送交易。&lt;/p&gt;
&lt;h2 id=&#34;三、构建示例项目&#34;&gt;&lt;a href=&#34;#三、构建示例项目&#34; class=&#34;headerlink&#34; title=&#34;三、构建示例项目&#34;&gt;&lt;/a&gt;三、构建示例项目&lt;/h2&gt;&lt;h3 id=&#34;创建-Truffle-项目&#34;&gt;&lt;a href=&#34;#创建-Truffle-项目&#34; class=&#34;headerlink&#34; title=&#34;创建 Truffle 项目&#34;&gt;&lt;/a&gt;创建 Truffle 项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&#34;创建项目目录：&#34;&gt;&lt;a href=&#34;#创建项目目录：&#34; class=&#34;headerlink&#34; title=&#34;创建项目目录：&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建项目目录&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; my-dapp
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my-dapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&#34;初始化-Truffle-项目：&#34;&gt;&lt;a href=&#34;#初始化-Truffle-项目：&#34; class=&#34;headerlink&#34; title=&#34;初始化 Truffle 项目：&#34;&gt;&lt;/a&gt;&lt;strong&gt;初始化 Truffle 项目&lt;/strong&gt;：&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle init or truffle.cmd unbox webpack &lt;span class=&#34;token comment&#34;&gt;#后者用 webpack 模版初始化项目骨架结构&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装项目依赖的 NPM 包 ，执行以下命令安装 npm 包:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; app
&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;修改-Truffle-配置&#34;&gt;&lt;a href=&#34;#修改-Truffle-配置&#34; class=&#34;headerlink&#34; title=&#34;修改 Truffle 配置&#34;&gt;&lt;/a&gt;修改 Truffle 配置&lt;/h3&gt;&lt;p&gt;在项目根目录下找到 &lt;code&gt;truffle-config.js&lt;/code&gt; 文件，并修改如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;development&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 根据实际情况设置&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;network_id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 匹配任何网络 ID&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3000000&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 设置最大 gas 限制&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;compilers&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;solc&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token literal-property property&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0.8.0&#34;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 指定 Solidity 编译器版本&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写智能合约&#34;&gt;&lt;a href=&#34;#编写智能合约&#34; class=&#34;headerlink&#34; title=&#34;编写智能合约&#34;&gt;&lt;/a&gt;编写智能合约&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;contracts&lt;/code&gt; 目录下创建一个新的合约文件，例如 &lt;code&gt;MyContract.sol&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-solidity&#34; data-language=&#34;solidity&#34;&gt;&lt;code class=&#34;language-solidity&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// SPDX-License-Identifier: MIT&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;pragma&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;solidity&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;token version number&#34;&gt;0.8.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyContract&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; message&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; initialMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;memory&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMessage&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建迁移文件&#34;&gt;&lt;a href=&#34;#创建迁移文件&#34; class=&#34;headerlink&#34; title=&#34;创建迁移文件&#34;&gt;&lt;/a&gt;创建迁移文件&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;migrations&lt;/code&gt; 目录下创建一个新的迁移文件，例如 &lt;code&gt;2_deploy_my_contract.js&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-默认迁移行为&#34;&gt;&lt;a href=&#34;#1-默认迁移行为&#34; class=&#34;headerlink&#34; title=&#34;1. 默认迁移行为&#34;&gt;&lt;/a&gt;1. 默认迁移行为&lt;/h4&gt;&lt;p&gt;当你运行以下命令时：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Truffle 会按照 &lt;code&gt;migrations&lt;/code&gt; 目录中脚本的顺序自动部署所有合约。每个脚本的文件名通常以数字开头，以确定部署顺序。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1_initial_migration.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-部署特定合约&#34;&gt;&lt;a href=&#34;#2-部署特定合约&#34; class=&#34;headerlink&#34; title=&#34;2. 部署特定合约&#34;&gt;&lt;/a&gt;2. 部署特定合约&lt;/h4&gt;&lt;p&gt;如果你只想部署特定的合约，可以按照以下步骤进行：&lt;/p&gt;
&lt;h5 id=&#34;2-1-创建特定迁移文件&#34;&gt;&lt;a href=&#34;#2-1-创建特定迁移文件&#34; class=&#34;headerlink&#34; title=&#34;2.1 创建特定迁移文件&#34;&gt;&lt;/a&gt;2.1 创建特定迁移文件&lt;/h5&gt;&lt;p&gt;你可以在 &lt;code&gt;migrations&lt;/code&gt; 目录中创建新的迁移文件，只包含要部署的合约。例如，假设你只想部署 &lt;code&gt;MyContract&lt;/code&gt; 合约，你可以创建一个新的迁移文件，例如 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContract &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContract&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContract&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-2-使用-f-参数&#34;&gt;&lt;a href=&#34;#2-2-使用-f-参数&#34; class=&#34;headerlink&#34; title=&#34;2.2 使用 --f 参数&#34;&gt;&lt;/a&gt;2.2 使用 &lt;code&gt;--f&lt;/code&gt; 参数&lt;/h5&gt;&lt;p&gt;如果你想只运行特定的迁移文件，可以使用 &lt;code&gt;--f&lt;/code&gt; 参数（&lt;code&gt;--f&lt;/code&gt; 后接文件的序号）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--f&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将只运行 &lt;code&gt;3_deploy_my_contract.js&lt;/code&gt; 文件中的迁移脚本。&lt;/p&gt;
&lt;h4 id=&#34;3-回滚并重新部署&#34;&gt;&lt;a href=&#34;#3-回滚并重新部署&#34; class=&#34;headerlink&#34; title=&#34;3. 回滚并重新部署&#34;&gt;&lt;/a&gt;3. 回滚并重新部署&lt;/h4&gt;&lt;p&gt;如果你需要重新部署某个合约，可以使用 &lt;code&gt;--reset&lt;/code&gt; 参数，这将重新运行所有的迁移：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--reset&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果只想回滚到某个特定迁移并重新部署，你可以使用 &lt;code&gt;--to&lt;/code&gt; 参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--to&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回滚到并重新部署到第二个迁移（&lt;code&gt;2_deploy_contracts.js&lt;/code&gt;）为止的所有迁移。&lt;/p&gt;
&lt;h4 id=&#34;4-部署的选择性控制&#34;&gt;&lt;a href=&#34;#4-部署的选择性控制&#34; class=&#34;headerlink&#34; title=&#34;4. 部署的选择性控制&#34;&gt;&lt;/a&gt;4. 部署的选择性控制&lt;/h4&gt;&lt;p&gt;如果你的合约之间存在依赖关系（例如，一个合约依赖于另一个合约），你应该确保按照适当的顺序部署。可以在迁移脚本中引用之前已经部署的合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; MyContractB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; artifacts&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MyContractB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;deployer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractA&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instanceA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContractA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;token comment&#34;&gt;// 部署时传递 MyContractA 的地址&lt;/span&gt;
  &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; deployer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;MyContractB&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; instanceA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;address&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编译合约&#34;&gt;&lt;a href=&#34;#编译合约&#34; class=&#34;headerlink&#34; title=&#34;编译合约&#34;&gt;&lt;/a&gt;编译合约&lt;/h3&gt;&lt;p&gt;在部署合约之前，您需要确保智能合约已被编译。您可以通过以下命令来编译合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle compile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;自动编译与部署&#34;&gt;&lt;a href=&#34;#自动编译与部署&#34; class=&#34;headerlink&#34; title=&#34;自动编译与部署&#34;&gt;&lt;/a&gt;自动编译与部署&lt;/h4&gt;&lt;p&gt;在执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时，Truffle 会自动检查合约是否已经编译。如果合约文件有更改或未编译，Truffle 会自动执行编译。因此，在以下情况下，您可以不手动执行编译命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;合约未编译&lt;/strong&gt;：当您修改了合约后，执行 &lt;code&gt;truffle migrate&lt;/code&gt; 时会自动编译。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合约已经是最新&lt;/strong&gt;：如果合约未更改并且已经编译，则可以直接执行迁移命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;如何确认编译状态&#34;&gt;&lt;a href=&#34;#如何确认编译状态&#34; class=&#34;headerlink&#34; title=&#34;如何确认编译状态&#34;&gt;&lt;/a&gt;如何确认编译状态&lt;/h4&gt;&lt;p&gt;如果您不确定合约是否已经编译，可以检查 &lt;code&gt;build/contracts&lt;/code&gt; 目录。编译后，该目录下应该会生成合约的 JSON 文件（包含字节码和 ABI）。例如，&lt;code&gt;MyContract.json&lt;/code&gt; 文件中应该有相关信息。&lt;/p&gt;
&lt;p&gt;如果您希望在每次部署时都重新编译合约，可以在 &lt;code&gt;migrate&lt;/code&gt; 命令中使用 &lt;code&gt;--compile-all&lt;/code&gt; 参数，如下所示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate --compile-all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将强制 Truffle 重新编译所有合约。&lt;/p&gt;
&lt;h3 id=&#34;启动-Geth-节点&#34;&gt;&lt;a href=&#34;#启动-Geth-节点&#34; class=&#34;headerlink&#34; title=&#34;启动 Geth 节点&#34;&gt;&lt;/a&gt;启动 Geth 节点&lt;/h3&gt;&lt;p&gt;在 Geth 的命令行窗口中，启动您的节点，使用以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8545&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3,personal,admin,shh,txpool,debug,miner&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;解锁账户-2&#34;&gt;&lt;a href=&#34;#解锁账户-2&#34; class=&#34;headerlink&#34; title=&#34;解锁账户&#34;&gt;&lt;/a&gt;解锁账户&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，解锁您的账户（假设 &lt;code&gt;user1&lt;/code&gt; 是您的账户地址）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;your_password&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果已经正确地解锁了账户,你会看到部署过程停止在某个状态&lt;/p&gt;
&lt;p&gt;这是因为 truffle 在等待部署交易提交,但是我们在私链中还没有启动挖矿。  现在切换回 geth 终端窗口,查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
pending:1,  
queued:0  
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有一个挂起的交易&lt;/p&gt;
&lt;h3 id=&#34;启动挖矿-1&#34;&gt;&lt;a href=&#34;#启动挖矿-1&#34; class=&#34;headerlink&#34; title=&#34;启动挖矿&#34;&gt;&lt;/a&gt;启动挖矿&lt;/h3&gt;&lt;p&gt;在 Geth 控制台中，启动挖矿：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;稍等小会儿,再查看交易池的状态:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;txpool.status  
&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  pending:0,  queued:0  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;交易已经成功提交了&lt;/p&gt;
&lt;h3 id=&#34;部署合约&#34;&gt;&lt;a href=&#34;#部署合约&#34; class=&#34;headerlink&#34; title=&#34;部署合约&#34;&gt;&lt;/a&gt;部署合约&lt;/h3&gt;&lt;p&gt;在项目目录中，使用以下命令部署合约：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle migrate &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;检查部署结果&#34;&gt;&lt;a href=&#34;#检查部署结果&#34; class=&#34;headerlink&#34; title=&#34;检查部署结果&#34;&gt;&lt;/a&gt;检查部署结果&lt;/h3&gt;&lt;p&gt;部署完成后，您可以查看终端输出中的合约地址和交易哈希，确认合约是否成功部署。&lt;/p&gt;
&lt;h3 id=&#34;与合约交互&#34;&gt;&lt;a href=&#34;#与合约交互&#34; class=&#34;headerlink&#34; title=&#34;与合约交互&#34;&gt;&lt;/a&gt;与合约交互&lt;/h3&gt;&lt;p&gt;在合约部署后，您可以使用 Truffle 控制台与合约进行交互：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动 Truffle 控制台：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;truffle console &lt;span class=&#34;token parameter variable&#34;&gt;--network&lt;/span&gt; development&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在控制台中，获取合约实例并与其交互：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; instance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; MyContract&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deployed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; currentMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出当前消息&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setMessage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;New Message&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 更新消息&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; updatedMessage &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; instance&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;updatedMessage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 输出更新后的消息&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;启动-DApp&#34;&gt;&lt;a href=&#34;#启动-DApp&#34; class=&#34;headerlink&#34; title=&#34;启动 DApp&#34;&gt;&lt;/a&gt;启动 DApp&lt;/h3&gt;&lt;p&gt;执行以下命令来启动 DApp:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run dev  &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器里访问 &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080&lt;/a&gt; 即可&lt;/p&gt;
&lt;p&gt;如果你希望从别的机器也可以访问你的 DApp 应用,修改一下 &lt;code&gt;package.json&lt;/code&gt;:  &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;  
	scripts:&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    	&lt;span class=&#34;token string&#34;&gt;&#34;dev&#34;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;webpack-dev-server –-host 0.0.0.0&#34;&lt;/span&gt; 
    	&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;  
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;四、命令详解&#34;&gt;&lt;a href=&#34;#四、命令详解&#34; class=&#34;headerlink&#34; title=&#34;四、命令详解&#34;&gt;&lt;/a&gt;四、命令详解&lt;/h2&gt;&lt;h3 id=&#34;1-Geth-命令行选项&#34;&gt;&lt;a href=&#34;#1-Geth-命令行选项&#34; class=&#34;headerlink&#34; title=&#34;1. Geth 命令行选项&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Geth 命令行选项&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在启动 Geth 时使用的，用来配置节点行为。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–datadir&lt;/strong&gt;：指定数据目录，所有区块链和配置数据将保存在此目录中。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--datadir&lt;/span&gt; ./data&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–networkid&lt;/strong&gt;：选择要加入的网络 ID，避免连接到错误的链。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--networkid&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;987&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–port&lt;/strong&gt;：指定节点的P2P通信端口（默认是 30303）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--port&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30303&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–nodiscover&lt;/strong&gt;：禁用节点自动发现，防止自动连接其他节点（常用于私有网络）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--nodiscover&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–maxpeers&lt;/strong&gt;：设置最多连接的节点数（默认 25）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--maxpeers&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–mine&lt;/strong&gt;：启动节点时立即开始挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--mine&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–minerthreads&lt;/strong&gt;：设置挖矿使用的线程数量（默认为 1）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--minerthreads&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–etherbase&lt;/strong&gt;：指定挖矿奖励接收的以太坊地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--etherbase&lt;/span&gt; 0x7df9a875a174b3bc565e6424a0050ebc1b2d1d82&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpc&lt;/strong&gt;：启用 HTTP-RPC 接口，允许通过 HTTP 与节点交互。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcaddr&lt;/strong&gt;：指定 HTTP-RPC 接口监听的地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcaddr&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcport&lt;/strong&gt;：指定 HTTP-RPC 端口。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcport&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8545&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpccorsdomain&lt;/strong&gt;：指定允许通过 CORS（跨域资源共享）访问的域，通常设置为 &lt;code&gt;*&lt;/code&gt; 允许所有域。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpccorsdomain&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–rpcapi&lt;/strong&gt;：指定允许通过 RPC 接口调用的 API 模块（例如 &lt;code&gt;eth&lt;/code&gt;, &lt;code&gt;net&lt;/code&gt;, &lt;code&gt;web3&lt;/code&gt;）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--rpcapi&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eth,net,web3&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–syncmode&lt;/strong&gt;：设置节点的同步模式，常用的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fast&lt;/code&gt;（默认，快速同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;（完全同步）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;light&lt;/code&gt;（轻节点，只下载区块头）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--syncmode&lt;/span&gt; fast&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;–ipcdisable&lt;/strong&gt;：禁用 Geth 的 IPC-RPC 通信接口（默认启用 IPC）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;geth &lt;span class=&#34;token parameter variable&#34;&gt;--ipcdisable&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-Geth-控制台命令&#34;&gt;&lt;a href=&#34;#2-Geth-控制台命令&#34; class=&#34;headerlink&#34; title=&#34;2. Geth 控制台命令&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;Geth 控制台命令&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这些命令是在 Geth 启动并进入控制台时使用的，或者通过 &lt;code&gt;geth attach&lt;/code&gt; 来附加到已运行的节点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.syncing&lt;/strong&gt;：查看节点是否在同步，并返回同步状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;syncing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;eth.blockNumber&lt;/strong&gt;：获取当前节点的区块高度。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBlock(blockNumber)**：查看某个区块的信息（例如查看最新区块）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blockNumber&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.getBalance(address)**：查看某个地址的余额。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBalance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.start(threads)**：启动挖矿，并指定使用的线程数（例如 1 个线程）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**miner.stop()**：停止挖矿。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;miner&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.newAccount(password)**：创建新账户，并设置密码。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**personal.unlockAccount(address, password)**：解锁指定账户，允许在一段时间内使用账户进行交易。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;personal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlockAccount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddressHere&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;YourPassword&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;admin.peers&lt;/strong&gt;：查看当前连接的节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peers&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**admin.addPeer(enodeURL)**：手动添加一个节点。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;admin&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPeer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;enode://...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;net.peerCount&lt;/strong&gt;：查看连接的节点数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;peerCount&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;txpool.status&lt;/strong&gt;：查看交易池的状态，包含等待和挂起的交易数量。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;txpool&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**debug.verbosity(level)**：设置日志的详细程度（0 为最少，5 为最多）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;debug&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;verbosity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**web3.sha3(string)**：计算字符串的 Keccak-256 哈希。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sha3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**eth.sendTransaction({from: sender, to: receiver, value: amount})**：发送交易（注意单位为 Wei）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;eth&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xYourAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;0xReceiverAddress&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; web3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toWei&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ether&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些命令涵盖了Geth在日常使用中的常见需求，包括节点管理、账户管理、挖矿、网络连接、交易等。你可以根据自己的需求组合使用。&lt;/p&gt;
</content>
        <category term="教程" />
        <category term="区块链" />
        <updated>2024-10-16T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/10/10/devc-an-zhuang-wai-bu-ku/</id>
        <title>dev c++安装外部库</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/10/10/devc-an-zhuang-wai-bu-ku/"/>
        <content type="html">&lt;h1 id=&#34;dev-c-安装外部库&#34;&gt;&lt;a href=&#34;#dev-c-安装外部库&#34; class=&#34;headerlink&#34; title=&#34;dev c++安装外部库&#34;&gt;&lt;/a&gt;dev c++安装外部库&lt;/h1&gt;&lt;p&gt;先去下载一个外部库压缩包，例如&lt;a href=&#34;https://github.com/libtom/libtommath/releases&#34;&gt;Releases · libtom/libtommath (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;得到一个压缩包不要解压，打开DEV C++ -&amp;gt;工具-&amp;gt;package manager-&amp;gt;install(找到你刚才的安装包)-&amp;gt;安装完毕&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/10/0e5f63951c3d9755f2eea6eb081bdb95.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/10/2899d25fe20c9db160235fe901c1c0a6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后工具-&amp;gt;编译选项-&amp;gt;目录-&amp;gt;c++包含文件，如下添加路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/10/314916c6d40c34b86c64b15e2e154f13.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/10/e5f4530cae912a78f07d34d84c3fd954.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击右下角文件目录图样选择路径，路径如图在dev c++安装目录下找刚才安装的库，然后添加，确定&lt;/p&gt;
</content>
        <category term="tips" />
        <updated>2024-10-10T07:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/</id>
        <title>文件名含义</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/10/10/wen-jian-ming-han-yi/"/>
        <content type="html">&lt;h1 id=&#34;文件名含义&#34;&gt;&lt;a href=&#34;#文件名含义&#34; class=&#34;headerlink&#34; title=&#34;文件名含义&#34;&gt;&lt;/a&gt;文件名含义&lt;/h1&gt;&lt;h3 id=&#34;1-版本号&#34;&gt;&lt;a href=&#34;#1-版本号&#34; class=&#34;headerlink&#34; title=&#34;1. 版本号&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;版本号&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件名通常包含软件的版本号，用来表示该版本相对于其他版本的更新程度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：软件版本为1.0.0，版本号通常采用三段式：&lt;code&gt;主版本号.次版本号.修订号&lt;/code&gt;。主版本号表示重大更新，次版本号表示功能增加，修订号表示小的修复。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-操作系统（OS）标识&#34;&gt;&lt;a href=&#34;#2-操作系统（OS）标识&#34; class=&#34;headerlink&#34; title=&#34;2. 操作系统（OS）标识&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;操作系统（OS）标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中通常会有一个标识符，用于指定该安装文件适用于哪个操作系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;win&lt;/code&gt;：Windows 系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mac&lt;/code&gt; 或 &lt;code&gt;osx&lt;/code&gt;：Mac OS 系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linux&lt;/code&gt;：Linux 系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该软件适用于64位的Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-位数或架构&#34;&gt;&lt;a href=&#34;#3-位数或架构&#34; class=&#34;headerlink&#34; title=&#34;3. 位数或架构&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;位数或架构&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件通常会注明是为32位（x86）还是64位（x64）系统架构设计的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x86&lt;/code&gt; 或 &lt;code&gt;32&lt;/code&gt;：适用于32位系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x64&lt;/code&gt; 或 &lt;code&gt;64&lt;/code&gt;：适用于64位系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_x64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：软件适用于64位架构的系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-安装文件类型&#34;&gt;&lt;a href=&#34;#4-安装文件类型&#34; class=&#34;headerlink&#34; title=&#34;4. 安装文件类型&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;安装文件类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件扩展名（如&lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.msi&lt;/code&gt;, &lt;code&gt;.deb&lt;/code&gt;, &lt;code&gt;.rpm&lt;/code&gt;）表示安装文件的类型和其安装方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见扩展名：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.exe&lt;/code&gt;：Windows 可执行文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.msi&lt;/code&gt;：Windows 安装包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.deb&lt;/code&gt;：Debian 或 Ubuntu 的安装包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.rpm&lt;/code&gt;：Red Hat 或 CentOS 的安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_amd64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该软件是为64位系统的Debian或Ubuntu环境提供的安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-压缩格式&#34;&gt;&lt;a href=&#34;#5-压缩格式&#34; class=&#34;headerlink&#34; title=&#34;5. 压缩格式&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;压缩格式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些安装文件是以压缩包的形式发布的，文件名中会包含压缩格式的标识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见扩展名：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.zip&lt;/code&gt;：ZIP 压缩格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.tar.gz&lt;/code&gt;：Gzip压缩的Tar包（常用于Linux）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.7z&lt;/code&gt;：7-Zip压缩格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_linux.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是为Linux系统提供的安装包，并以Gzip格式压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-预发布-稳定版标识&#34;&gt;&lt;a href=&#34;#6-预发布-稳定版标识&#34; class=&#34;headerlink&#34; title=&#34;6. 预发布/稳定版标识&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;预发布/稳定版标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含有关该版本是否为稳定版或预发布版本的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beta&lt;/code&gt;：测试版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alpha&lt;/code&gt;：早期开发版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rc&lt;/code&gt;：发布候选版（Release Candidate）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stable&lt;/code&gt;：稳定版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_beta.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是软件的测试版。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-特殊用途标识&#34;&gt;&lt;a href=&#34;#7-特殊用途标识&#34; class=&#34;headerlink&#34; title=&#34;7. 特殊用途标识&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;特殊用途标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些文件名中可能还包含表示特定用途的标识符，例如为开发者准备的工具包、文档文件等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sdk&lt;/code&gt;：软件开发工具包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;：文档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lite&lt;/code&gt;：精简版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;：完整版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_sdk_win64.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是用于Windows 64位系统的软件开发工具包，并以ZIP格式压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-语言或区域标识&#34;&gt;&lt;a href=&#34;#8-语言或区域标识&#34; class=&#34;headerlink&#34; title=&#34;8. 语言或区域标识&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;语言或区域标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件可能还会包含语言或区域的代码，表示该软件适用于特定语言版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;en&lt;/code&gt;：英语&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt; 或 &lt;code&gt;zh&lt;/code&gt;：中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fr&lt;/code&gt;：法语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_zh-cn.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是面向中国大陆的中文版本，适用于64位的Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-发行渠道或发行模式&#34;&gt;&lt;a href=&#34;#9-发行渠道或发行模式&#34; class=&#34;headerlink&#34; title=&#34;9. 发行渠道或发行模式&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;发行渠道或发行模式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会标明软件的发行渠道或模式，帮助用户了解该软件是通过何种方式发布的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offline&lt;/code&gt; 或 &lt;code&gt;standalone&lt;/code&gt;：离线安装包，不需要网络连接即可安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt; 或 &lt;code&gt;online&lt;/code&gt;：在线安装器，下载时体积小，安装过程中需要联网下载额外文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;portable&lt;/code&gt;：便携版，通常无需安装，可直接运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_offline.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：适用于64位Windows系统的离线安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-安全标识或加密&#34;&gt;&lt;a href=&#34;#10-安全标识或加密&#34; class=&#34;headerlink&#34; title=&#34;10. 安全标识或加密&#34;&gt;&lt;/a&gt;10. &lt;strong&gt;安全标识或加密&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件可能在名称中包含与安全相关的标识符，通常用于表示该文件的来源可信或包含特定的安全加密方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;signed&lt;/code&gt;：已签名的安装文件，确保文件未被篡改&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;：指文件的哈希值（如SHA256），用户可用来验证文件完整性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_signed.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件已经过数字签名验证，确保文件的来源安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;11-支持的硬件平台&#34;&gt;&lt;a href=&#34;#11-支持的硬件平台&#34; class=&#34;headerlink&#34; title=&#34;11. 支持的硬件平台&#34;&gt;&lt;/a&gt;11. &lt;strong&gt;支持的硬件平台&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;一些安装文件会标明其支持的硬件平台，特别是在跨平台软件或硬件驱动程序中，这一点很常见。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arm&lt;/code&gt; 或 &lt;code&gt;arm64&lt;/code&gt;：适用于基于ARM架构的设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intel&lt;/code&gt; 或 &lt;code&gt;x86_64&lt;/code&gt;：适用于基于Intel或AMD x86_64架构的设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nvidia&lt;/code&gt;：适用于NVIDIA显卡驱动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;amd&lt;/code&gt;：适用于AMD显卡驱动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_arm64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该安装包适用于基于ARM64架构的设备，通常在移动设备或某些低功耗的服务器上使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-地域和市场&#34;&gt;&lt;a href=&#34;#12-地域和市场&#34; class=&#34;headerlink&#34; title=&#34;12. 地域和市场&#34;&gt;&lt;/a&gt;12. &lt;strong&gt;地域和市场&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件名会指出该软件是为特定国家或地区的市场发布的，特别是在带有本地化内容或法规限制的软件中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;：美国市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eu&lt;/code&gt;：欧洲市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt;：中国市场&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jp&lt;/code&gt;：日本市场&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_cn.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是适用于中国市场的Windows 64位版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;13-多语言支持&#34;&gt;&lt;a href=&#34;#13-多语言支持&#34; class=&#34;headerlink&#34; title=&#34;13. 多语言支持&#34;&gt;&lt;/a&gt;13. &lt;strong&gt;多语言支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含软件的语言支持类型，表示是否为多语言版本或仅支持特定语言。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ml&lt;/code&gt; 或 &lt;code&gt;multi&lt;/code&gt;：多语言版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;en&lt;/code&gt;：仅支持英语&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zh-cn&lt;/code&gt;：简体中文&lt;/li&gt;
&lt;li&gt;&lt;code&gt;es&lt;/code&gt;：西班牙语&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_multi.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该安装文件支持多种语言，用户可以在安装时选择语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;14-开发版本类型&#34;&gt;&lt;a href=&#34;#14-开发版本类型&#34; class=&#34;headerlink&#34; title=&#34;14. 开发版本类型&#34;&gt;&lt;/a&gt;14. &lt;strong&gt;开发版本类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;开发者在发布未完成的测试版软件时，文件名中可能包含不同类型的开发版本标识符。这些标识符有助于区分不同的开发阶段。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dev&lt;/code&gt;：开发版，通常是未完成的版本，用于开发者内部测试&lt;/li&gt;
&lt;li&gt;&lt;code&gt;snapshot&lt;/code&gt;：快照版，是开发过程中某个时间点的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nightly&lt;/code&gt;：每晚构建版，指每天自动生成的开发版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_snapshot_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：该文件是开发过程中的快照版本，可能不稳定或包含实验性功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;15-安装模式&#34;&gt;&lt;a href=&#34;#15-安装模式&#34; class=&#34;headerlink&#34; title=&#34;15. 安装模式&#34;&gt;&lt;/a&gt;15. &lt;strong&gt;安装模式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中有时会包含不同的安装模式，特别是在支持用户自定义安装或选择不同模块的安装包中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;full&lt;/code&gt;：完整安装包，包含所有功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lite&lt;/code&gt; 或 &lt;code&gt;min&lt;/code&gt;：轻量或精简版，包含最少的功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;custom&lt;/code&gt;：用户可以自定义选择安装哪些功能模块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_lite.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的精简版，适用于64位Windows系统，可能省去了一些不常用的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;16-分发类型&#34;&gt;&lt;a href=&#34;#16-分发类型&#34; class=&#34;headerlink&#34; title=&#34;16. 分发类型&#34;&gt;&lt;/a&gt;16. &lt;strong&gt;分发类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件会根据分发渠道或协议进行分类，特别是开源软件或商业软件中，这些标识符帮助用户了解软件的使用条款或发布方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;community&lt;/code&gt;：社区版，通常是免费或开源版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; 或 &lt;code&gt;pro&lt;/code&gt;：企业版或专业版，通常包含高级功能，面向商业用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trial&lt;/code&gt;：试用版，提供一定期限的免费使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_enterprise_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是面向企业用户的专业版安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;17-补丁版本和维护版本&#34;&gt;&lt;a href=&#34;#17-补丁版本和维护版本&#34; class=&#34;headerlink&#34; title=&#34;17. 补丁版本和维护版本&#34;&gt;&lt;/a&gt;17. &lt;strong&gt;补丁版本和维护版本&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些文件名会包含补丁（patch）或维护（maintenance）版本信息，表示该文件是在原版基础上进行修复、改进或安全更新的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;patch&lt;/code&gt; 或 &lt;code&gt;hotfix&lt;/code&gt;：补丁版，修复特定问题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sp1&lt;/code&gt;, &lt;code&gt;sp2&lt;/code&gt; 等：服务包版本（Service Pack），通常是对多个问题的修复合集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt;：更新版本，提供功能改进或错误修复&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_sp1_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件1.0.0版本的第一个服务包，适用于64位Windows系统，包含问题修复和改进。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;18-兼容性标识&#34;&gt;&lt;a href=&#34;#18-兼容性标识&#34; class=&#34;headerlink&#34; title=&#34;18. 兼容性标识&#34;&gt;&lt;/a&gt;18. &lt;strong&gt;兼容性标识&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些安装文件会注明与其他软件或硬件的兼容性信息，特别是在驱动程序或插件的安装包中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;compatible&lt;/code&gt;：表示与特定系统或硬件兼容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;legacy&lt;/code&gt;：遗留版本，支持旧版本系统或硬件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;universal&lt;/code&gt;：通用版，适用于多个平台&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win64_legacy.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于旧版本Windows系统或旧硬件的安装包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;19-试用期或限制&#34;&gt;&lt;a href=&#34;#19-试用期或限制&#34; class=&#34;headerlink&#34; title=&#34;19. 试用期或限制&#34;&gt;&lt;/a&gt;19. &lt;strong&gt;试用期或限制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些商业软件的试用版会在文件名中包含试用期或功能限制的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;trial30&lt;/code&gt; 或 &lt;code&gt;trial60&lt;/code&gt;：表示该版本有30天或60天的试用期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;limited&lt;/code&gt;：有限制版，可能功能或时间受限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;demo&lt;/code&gt;：演示版，通常只包含部分功能或限制使用时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_trial30_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是带有30天试用期的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;20-多合一安装包&#34;&gt;&lt;a href=&#34;#20-多合一安装包&#34; class=&#34;headerlink&#34; title=&#34;20. 多合一安装包&#34;&gt;&lt;/a&gt;20. &lt;strong&gt;多合一安装包&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;有些软件提供“多合一”安装包，允许用户在一个安装文件中选择不同的安装选项或版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;all-in-one&lt;/code&gt;：多合一安装包，包含多个版本或功能模块&lt;/li&gt;
&lt;li&gt;&lt;code&gt;combo&lt;/code&gt;：组合安装包，通常包含主程序和附加组件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_all-in-one_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是一个多合一安装包，适用于64位Windows系统，可能包含多个模块或功能供选择安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;21-源代码和构建信息&#34;&gt;&lt;a href=&#34;#21-源代码和构建信息&#34; class=&#34;headerlink&#34; title=&#34;21. 源代码和构建信息&#34;&gt;&lt;/a&gt;21. &lt;strong&gt;源代码和构建信息&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些开源软件的安装文件名中可能包含源代码的相关信息，供开发者自行构建或定制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; 或 &lt;code&gt;source&lt;/code&gt;：源代码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build&lt;/code&gt;：构建版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bin&lt;/code&gt;：二进制文件，已编译可直接运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_src.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的源代码包，以Gzip压缩的Tar格式发布，适用于开发者。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-安装程序或压缩包&#34;&gt;&lt;a href=&#34;#22-安装程序或压缩包&#34; class=&#34;headerlink&#34; title=&#34;22. 安装程序或压缩包&#34;&gt;&lt;/a&gt;22. &lt;strong&gt;安装程序或压缩包&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中还可能指明软件是通过安装程序直接安装，还是提供压缩包供手动解压和安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;installer&lt;/code&gt;：安装程序，通常是带有图形化或命令行界面的安装文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;portable&lt;/code&gt;：便携版，无需安装，解压后即可运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;archive&lt;/code&gt;：压缩包，通常需要手动解压后安装或运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_portable_win64.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于64位Windows系统的便携版软件，用户无需安装，解压后即可使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-企业或个人版&#34;&gt;&lt;a href=&#34;#23-企业或个人版&#34; class=&#34;headerlink&#34; title=&#34;23. 企业或个人版&#34;&gt;&lt;/a&gt;23. &lt;strong&gt;企业或个人版&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件文件名中可能明确区分企业版和个人版，以帮助用户选择合适的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; 或 &lt;code&gt;business&lt;/code&gt;：企业版，面向商业用户，通常包含更多管理或安全功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;personal&lt;/code&gt;：个人版，面向普通用户，功能较简化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home&lt;/code&gt;：家庭版，适合家庭用户使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_enterprise_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于企业用户的64位Windows系统版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;24-特定用途的子版本&#34;&gt;&lt;a href=&#34;#24-特定用途的子版本&#34; class=&#34;headerlink&#34; title=&#34;24. 特定用途的子版本&#34;&gt;&lt;/a&gt;24. &lt;strong&gt;特定用途的子版本&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;软件可能根据不同用途或功能模块发布子版本，文件名中会包含对应的模块标识。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt;：服务器版，适用于服务器环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client&lt;/code&gt;：客户端版，适用于普通用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gui&lt;/code&gt;：图形用户界面版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cli&lt;/code&gt;：命令行版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_server_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的服务器版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;25-云服务或集成&#34;&gt;&lt;a href=&#34;#25-云服务或集成&#34; class=&#34;headerlink&#34; title=&#34;25. 云服务或集成&#34;&gt;&lt;/a&gt;25. &lt;strong&gt;云服务或集成&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着云计算的普及，某些安装包可能包含云端服务集成的信息，帮助用户了解该软件是否与云服务兼容或包含云功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cloud&lt;/code&gt;：与云服务集成，或为云环境设计的版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;saas&lt;/code&gt;：软件即服务（Software as a Service）版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hybrid&lt;/code&gt;：混合云，支持本地和云服务的集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_cloud_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持云服务集成的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;26-模块化安装&#34;&gt;&lt;a href=&#34;#26-模块化安装&#34; class=&#34;headerlink&#34; title=&#34;26. 模块化安装&#34;&gt;&lt;/a&gt;26. &lt;strong&gt;模块化安装&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件会根据不同的功能模块或插件来区分不同的安装包，文件名中通常会有相应模块的标识符。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;core&lt;/code&gt;：核心模块，必需的主功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugin&lt;/code&gt;：插件模块，扩展功能或第三方插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addon&lt;/code&gt;：附加功能模块，通常用于增强主功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extension&lt;/code&gt;：扩展功能，常用于浏览器或IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_core_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是软件的核心模块，适用于64位Windows系统，可能不包括其他可选功能或插件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;27-操作系统版本兼容性&#34;&gt;&lt;a href=&#34;#27-操作系统版本兼容性&#34; class=&#34;headerlink&#34; title=&#34;27. 操作系统版本兼容性&#34;&gt;&lt;/a&gt;27. &lt;strong&gt;操作系统版本兼容性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;文件名中可能会包含针对特定操作系统版本的标识，特别是当某些软件只能在某些系统版本上运行时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xp&lt;/code&gt;, &lt;code&gt;vista&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;8&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;11&lt;/code&gt;：表示适用于特定版本的Windows操作系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ubuntu18.04&lt;/code&gt;, &lt;code&gt;ubuntu20.04&lt;/code&gt;：表示适用于特定版本的Ubuntu系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;macos10.15&lt;/code&gt;, &lt;code&gt;macos11&lt;/code&gt;：表示适用于特定版本的macOS系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_win10_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是适用于Windows 10系统的64位安装文件，可能不兼容其他Windows版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;28-国际化和本地化&#34;&gt;&lt;a href=&#34;#28-国际化和本地化&#34; class=&#34;headerlink&#34; title=&#34;28. 国际化和本地化&#34;&gt;&lt;/a&gt;28. &lt;strong&gt;国际化和本地化&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;软件发布时，可能会根据不同国家和地区进行本地化调整，文件名中会包含国际化的标识符，以帮助用户选择适合自己语言和地区的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;intl&lt;/code&gt;：国际化版本，支持多种语言和地区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;us&lt;/code&gt;：美国地区版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cn&lt;/code&gt;, &lt;code&gt;zh-cn&lt;/code&gt;：中国简体中文版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;de&lt;/code&gt;：德国版&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jp&lt;/code&gt;：日本版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_zh-cn_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是简体中文版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;29-编译器或运行时兼容&#34;&gt;&lt;a href=&#34;#29-编译器或运行时兼容&#34; class=&#34;headerlink&#34; title=&#34;29. 编译器或运行时兼容&#34;&gt;&lt;/a&gt;29. &lt;strong&gt;编译器或运行时兼容&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于开发工具或软件开发包（SDK），安装文件名可能会包含与特定编译器或运行时环境的兼容性信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt;：GNU编译器（通常用于Linux）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msvc&lt;/code&gt;：Microsoft Visual C++ 编译器（Windows）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jdk&lt;/code&gt;：Java开发工具包（JDK）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dotnet&lt;/code&gt;：.NET运行时环境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_gcc_linux64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是用GCC编译的版本，适用于64位Linux系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;30-虚拟机或容器支持&#34;&gt;&lt;a href=&#34;#30-虚拟机或容器支持&#34; class=&#34;headerlink&#34; title=&#34;30. 虚拟机或容器支持&#34;&gt;&lt;/a&gt;30. &lt;strong&gt;虚拟机或容器支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件可能包含与虚拟化或容器化环境兼容的信息，特别是在需要虚拟机镜像或容器映像的情况下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vm&lt;/code&gt;：虚拟机镜像（如VirtualBox、VMware）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker&lt;/code&gt;：Docker容器映像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vagrant&lt;/code&gt;：Vagrant虚拟机镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_docker_image.tar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是Docker的容器镜像文件，通常用于容器化部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;31-加密和安全机制&#34;&gt;&lt;a href=&#34;#31-加密和安全机制&#34; class=&#34;headerlink&#34; title=&#34;31. 加密和安全机制&#34;&gt;&lt;/a&gt;31. &lt;strong&gt;加密和安全机制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件安装文件中会包含加密或安全机制的信息，特别是针对高度敏感的应用程序或企业环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encrypted&lt;/code&gt;：表示安装包已加密，需特定密钥或密码才能解压或安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fips&lt;/code&gt;：符合FIPS（Federal Information Processing Standards）标准，适用于政府或安全要求较高的环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hsm&lt;/code&gt;：硬件安全模块（Hardware Security Module）兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_fips_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是符合FIPS标准的版本，适用于需要高安全性的64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;32-数据库或数据存储支持&#34;&gt;&lt;a href=&#34;#32-数据库或数据存储支持&#34; class=&#34;headerlink&#34; title=&#34;32. 数据库或数据存储支持&#34;&gt;&lt;/a&gt;32. &lt;strong&gt;数据库或数据存储支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;某些软件文件名会指出其支持的数据库或数据存储解决方案，特别是在涉及数据库管理工具或与特定数据库整合的应用中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql&lt;/code&gt;：支持MySQL数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pgsql&lt;/code&gt;：支持PostgreSQL数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongodb&lt;/code&gt;：支持MongoDB数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redis&lt;/code&gt;：支持Redis数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_mysql_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持MySQL数据库的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;33-API或协议支持&#34;&gt;&lt;a href=&#34;#33-API或协议支持&#34; class=&#34;headerlink&#34; title=&#34;33. API或协议支持&#34;&gt;&lt;/a&gt;33. &lt;strong&gt;API或协议支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装文件名中有时会提到软件支持的API或协议，特别是当软件依赖特定的网络协议或服务接口时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;：支持REST API&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grpc&lt;/code&gt;：支持gRPC协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;soap&lt;/code&gt;：支持SOAP协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http2&lt;/code&gt;：支持HTTP/2协议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_rest_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持REST API的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;34-虚拟现实（VR）或增强现实（AR）支持&#34;&gt;&lt;a href=&#34;#34-虚拟现实（VR）或增强现实（AR）支持&#34; class=&#34;headerlink&#34; title=&#34;34. 虚拟现实（VR）或增强现实（AR）支持&#34;&gt;&lt;/a&gt;34. &lt;strong&gt;虚拟现实（VR）或增强现实（AR）支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着虚拟现实和增强现实技术的应用，一些安装文件可能包含与VR或AR兼容的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vr&lt;/code&gt;：虚拟现实支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ar&lt;/code&gt;：增强现实支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xr&lt;/code&gt;：扩展现实（Extended Reality），包括VR和AR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_vr_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持虚拟现实的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;35-物联网（IoT）支持&#34;&gt;&lt;a href=&#34;#35-物联网（IoT）支持&#34; class=&#34;headerlink&#34; title=&#34;35. 物联网（IoT）支持&#34;&gt;&lt;/a&gt;35. &lt;strong&gt;物联网（IoT）支持&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;随着物联网技术的普及，一些软件的安装文件名可能包含物联网相关的支持信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iot&lt;/code&gt;：物联网支持，适用于物联网设备&lt;/li&gt;
&lt;li&gt;&lt;code&gt;edge&lt;/code&gt;：边缘计算设备支持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mqtt&lt;/code&gt;：支持MQTT协议（常用于物联网）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_iot_linux64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持物联网功能的版本，适用于64位Linux系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;36-大数据平台兼容&#34;&gt;&lt;a href=&#34;#36-大数据平台兼容&#34; class=&#34;headerlink&#34; title=&#34;36. 大数据平台兼容&#34;&gt;&lt;/a&gt;36. &lt;strong&gt;大数据平台兼容&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于与大数据平台集成的软件，文件名中可能会包含特定平台的支持信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见标识符：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hadoop&lt;/code&gt;：支持Hadoop平台&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spark&lt;/code&gt;：支持Apache Spark&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hive&lt;/code&gt;：支持Apache Hive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka&lt;/code&gt;：支持Apache Kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;code&gt;software_1.0.0_hadoop_win64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;含义&lt;/strong&gt;：这是支持Hadoop平台的版本，适用于64位Windows系统。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="教程" />
        <updated>2024-10-10T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/10/03/windows-xian-shi-yi-chang/</id>
        <title>windows显示异常</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/10/03/windows-xian-shi-yi-chang/"/>
        <content type="html">&lt;h1 id=&#34;windows显示异常&#34;&gt;&lt;a href=&#34;#windows显示异常&#34; class=&#34;headerlink&#34; title=&#34;windows显示异常&#34;&gt;&lt;/a&gt;windows显示异常&lt;/h1&gt;&lt;p&gt;windows中显示不完整，或者遮挡等不正常显示时，如下修改&lt;/p&gt;
&lt;p&gt;进入软件的exe执行文件，右键-&amp;gt;属性-&amp;gt;兼容性-&amp;gt;更改所有用户的设置-&amp;gt;更改高DPI设置-&amp;gt;高DPI缩放替代-&amp;gt;勾选替代高DPI的缩放行为指定系统，从上到下依次尝试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/10/2c720759e87891d9b603f00411555832.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="bug" />
        <updated>2024-10-03T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/</id>
        <title>zotero 7安装以及使用</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/09/28/zotero-7-an-zhuang-yi-ji-shi-yong/"/>
        <content type="html">&lt;h1 id=&#34;zotero-7安装以及使用&#34;&gt;&lt;a href=&#34;#zotero-7安装以及使用&#34; class=&#34;headerlink&#34; title=&#34;zotero 7安装以及使用&#34;&gt;&lt;/a&gt;zotero 7安装以及使用&lt;/h1&gt;&lt;h2 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;访问官网&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;打开浏览器，访问 &lt;a href=&#34;https://www.zotero.org/&#34;&gt;Zotero官网&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下载 Zotero&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;点击页面上的“Download”按钮。&lt;/li&gt;
&lt;li&gt;根据你的操作系统选择相应的版本（Windows、macOS、Linux）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装 Zotero&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;Windows：&lt;ul&gt;
&lt;li&gt;下载完成后，双击下载的 &lt;code&gt;.exe&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;按照提示进行安装，完成后在开始菜单中找到Zotero。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;macOS：&lt;ul&gt;
&lt;li&gt;下载 &lt;code&gt;.dmg&lt;/code&gt; 文件后，双击打开。&lt;/li&gt;
&lt;li&gt;将Zotero图标拖动到“应用程序”文件夹中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux：&lt;ul&gt;
&lt;li&gt;根据你的发行版选择合适的安装方式（如使用包管理器或手动解压）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;设置同步&#34;&gt;&lt;a href=&#34;#设置同步&#34; class=&#34;headerlink&#34; title=&#34;设置同步&#34;&gt;&lt;/a&gt;设置同步&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创建 Zotero 账户&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果还没有账户，访问 &lt;a href=&#34;https://www.zotero.org/&#34;&gt;Zotero官网&lt;/a&gt; 并点击“注册”以创建一个新账户。填写所需信息并确认电子邮件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进入首选项&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击菜单栏中的“编辑”（Windows）或“Zotero”（macOS）。&lt;/li&gt;
&lt;li&gt;选择“设置”以打开设置窗口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;设置同步&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在设置窗口中，选择“同步”选项卡。&lt;/li&gt;
&lt;li&gt;在“账户”部分，输入你的 Zotero 账户邮箱和密码。&lt;/li&gt;
&lt;li&gt;点击“验证”以确保信息正确。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;启用同步&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;勾选“自动同步”选项。这将允许 Zotero 在你添加或修改文献时自动进行同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;手动同步&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Zotero 界面的右上角，有一个绿色的同步图标（两个旋转的箭头）。点击它可以手动触发同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设置同步到坚果云&#34;&gt;&lt;a href=&#34;#设置同步到坚果云&#34; class=&#34;headerlink&#34; title=&#34;设置同步到坚果云&#34;&gt;&lt;/a&gt;设置同步到坚果云&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先在坚果云里为Zotero设置应用密码，在坚果云官网登录你的坚果云账号后打开【账户信息】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%BD%91%E9%A1%B5%E7%AB%AF%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF.png&#34; alt=&#34;账户信息&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择【安全选项】-【添加应用密码】-输入名称-【生成密码】，这个密码就是后面会在zoteor里需要输入的专门的应用密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%89%E5%85%A8%E9%80%89%E9%A1%B9-1.png&#34; alt=&#34;安全选项&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E7%94%9F%E6%88%90%E5%AF%86%E7%A0%81.png&#34; alt=&#34;密码&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://help.jianguoyun.com/wp-content/uploads/2017/06/%E5%AE%8C%E6%88%90%E5%AF%86%E7%A0%81.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开Zotero，选择【工具】-【首选项】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102448.jpg&#34; alt=&#34;QQ截图20170601102448&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开【同步】，&lt;strong&gt;Zotero同步服务器&lt;/strong&gt;里登录的是你的Zotero账号和密码，在下面的&lt;strong&gt;文件同步&lt;/strong&gt;里选择使用【WebDav】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601102548.jpg&#34; alt=&#34;QQ截图20170601102548&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在这里填写你的坚果云的服务器地址：&lt;a href=&#34;https://dav.jianguoyun.com/dav/%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D%E6%98%AF%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%AF%86%E7%A0%81%E6%98%AF%E4%B8%80%E5%BC%80%E5%A7%8B%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%EF%BC%88%E9%9D%9E%E5%9D%9A%E6%9E%9C%E4%BA%91%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%EF%BC%89%EF%BC%8C%E8%AE%BE%E7%BD%AE%E5%A5%BD%E5%90%8E%E9%80%89%E6%8B%A9ok%E5%8D%B3%E5%8F%AF%E3%80%82&#34;&gt;https://dav.jianguoyun.com/dav/，用户名是坚果云账号，密码是一开始设置的应用密码（非坚果云账号登录密码），设置好后选择ok即可。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601103235.jpg&#34; alt=&#34;QQ截图20170601103235&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回到首页，点击右边的绿色的圈就可以同步更新，如果是第一次设置，会提示在坚果云里自动创建一个名叫：zotero的文件夹，用于存放同步更新的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg&#34;&gt;&lt;img src=&#34;http://help.jianguoyun.com/wp-content/uploads/2017/06/QQ%E6%88%AA%E5%9B%BE20170601141516.jpg&#34; alt=&#34;QQ截图20170601141516&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;插件安装推荐&#34;&gt;&lt;a href=&#34;#插件安装推荐&#34; class=&#34;headerlink&#34; title=&#34;插件安装推荐&#34;&gt;&lt;/a&gt;插件安装推荐&lt;/h2&gt;&lt;h3 id=&#34;zotero-style&#34;&gt;&lt;a href=&#34;#zotero-style&#34; class=&#34;headerlink&#34; title=&#34;zotero-style&#34;&gt;&lt;/a&gt;zotero-style&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/MuiseDestiny/zotero-style&#34;&gt;MuiseDestiny/zotero-style: Ethereal Style for Zotero (github.com)&lt;/a&gt;这是一个多彩的插件，用于增强 Zotero 的界面功能&lt;/p&gt;
&lt;h3 id=&#34;zotero-pdf-translate&#34;&gt;&lt;a href=&#34;#zotero-pdf-translate&#34; class=&#34;headerlink&#34; title=&#34;zotero-pdf-translate&#34;&gt;&lt;/a&gt;zotero-pdf-translate&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/windingwind/zotero-pdf-translate&#34;&gt;windingwind/zotero-pdf-translate: Translate PDF, EPub, webpage, metadata, annotations, notes to the target language. Support 20+ translate services. (github.com)&lt;/a&gt;深度适配 Zotero 阅读器的翻译插件&lt;/p&gt;
&lt;h3 id=&#34;jasminum&#34;&gt;&lt;a href=&#34;#jasminum&#34; class=&#34;headerlink&#34; title=&#34;jasminum&#34;&gt;&lt;/a&gt;jasminum&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/l0o0/jasminum&#34;&gt;l0o0/jasminum: A Zotero add-on to retrive CNKI meta data. 一个简单的Zotero 插件，用于识别中文元数据 (github.com)&lt;/a&gt;这个插件用来增强 Zotero 对中文文献的支持能力，包括自动更新中文 translators、根据中文文献名检索其元数据等。&lt;/p&gt;
&lt;h3 id=&#34;绿青蛙&#34;&gt;&lt;a href=&#34;#绿青蛙&#34; class=&#34;headerlink&#34; title=&#34;绿青蛙&#34;&gt;&lt;/a&gt;绿青蛙&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/redleafnew/zotero-updateifsE&#34;&gt;redleafnew/zotero-updateifsE: Green Frog https://github.com/redleafnew/zotero-updateifs 的easyScholar数据版。更新影响因子，其他一系列工具，详见Readme&lt;/a&gt;easyScholar数据版，显示更多期刊信息，详细使用见链接&lt;/p&gt;
&lt;h2 id=&#34;android下载&#34;&gt;&lt;a href=&#34;#android下载&#34; class=&#34;headerlink&#34; title=&#34;android下载&#34;&gt;&lt;/a&gt;android下载&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://zotero.cn.uptodown.com/android/download&#34;&gt;下载Zotero 1.0.0-102针对于Android | Uptodown.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://zotero-chinese.com/user-guide/&#34;&gt;Zotero 百科全书 | Zotero 中文社区 (zotero-chinese.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://help.jianguoyun.com/?p=3168&#34;&gt;如何在Zotero中设置webdav连接到坚果云？ | 坚果云帮助中心 (jianguoyun.com)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="tools" />
        <updated>2024-09-28T13:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/09/28/word-cha-ru-ye-ma-bu-bao-gua-feng-mian-mu-lu/</id>
        <title>word插入页码不包括封面目录</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/09/28/word-cha-ru-ye-ma-bu-bao-gua-feng-mian-mu-lu/"/>
        <content type="html">&lt;h1 id=&#34;word插入页码不包括封面目录&#34;&gt;&lt;a href=&#34;#word插入页码不包括封面目录&#34; class=&#34;headerlink&#34; title=&#34;word插入页码不包括封面目录&#34;&gt;&lt;/a&gt;word插入页码不包括封面目录&lt;/h1&gt;&lt;p&gt;依次点击布局-&amp;gt;分隔符-&amp;gt;下一页&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/a0b6e41e8d3413096926bdd4b12714b8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后插入-&amp;gt;页码-&amp;gt;顶或底-&amp;gt;随便一模版（插入时最后为正文首页）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/79a5d330c3b43502e3abeba5cab7c086.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后点击链接到前一页关闭它&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/24470b6e67ffdebaf3afad9d80eb854e.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后设置页码格式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/a9d2b79c6d838f63ac4cbdffcf59bacc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，然后更新目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/09/b7693230771f988cd378852cd8d09011.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="tips" />
        <updated>2024-09-28T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/</id>
        <title>windows安装软件时中文乱码</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/09/21/windows-an-zhuang-ruan-jian-shi-zhong-wen-luan-ma/"/>
        <content type="html">&lt;h1 id=&#34;windows安装软件时中文乱码&#34;&gt;&lt;a href=&#34;#windows安装软件时中文乱码&#34; class=&#34;headerlink&#34; title=&#34;windows安装软件时中文乱码&#34;&gt;&lt;/a&gt;windows安装软件时中文乱码&lt;/h1&gt;&lt;p&gt;启动控制面板，将查看方式调整为 “大图标”。点击 “区域”&amp;gt;“管理”&amp;gt;“更改系统区域设置”，确认 “当前系统区域设置” 为中文 (简体，中国)，如果下方的复选框为勾选状态，请取消勾选。如果未勾选，请将复选框勾选。&lt;/p&gt;
</content>
        <category term="bug" />
        <updated>2024-09-21T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/18/finalshell-gai-zi-ti/</id>
        <title>finalshell改字体</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/18/finalshell-gai-zi-ti/"/>
        <content type="html">&lt;h1 id=&#34;finalshell改字体&#34;&gt;&lt;a href=&#34;#finalshell改字体&#34; class=&#34;headerlink&#34; title=&#34;finalshell改字体&#34;&gt;&lt;/a&gt;finalshell改字体&lt;/h1&gt;&lt;p&gt;右上角点击选项-&amp;gt;弹出对话框选择字体，点击就可修改了&lt;/p&gt;
</content>
        <category term="tips" />
        <updated>2024-08-18T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/</id>
        <title>SDKMAN教程</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/15/sdkman-jiao-cheng/"/>
        <content type="html">&lt;h1 id=&#34;SDKMAN教程&#34;&gt;&lt;a href=&#34;#SDKMAN教程&#34; class=&#34;headerlink&#34; title=&#34;SDKMAN教程&#34;&gt;&lt;/a&gt;SDKMAN教程&lt;/h1&gt;&lt;h3 id=&#34;1-安装-Git-Bash&#34;&gt;&lt;a href=&#34;#1-安装-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Git Bash&#34;&gt;&lt;/a&gt;1. 安装 Git Bash&lt;/h3&gt;&lt;p&gt;首先，确保你已经安装了 Git Bash。如果还没有，可以从 &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 下载并安装。&lt;/p&gt;
&lt;h3 id=&#34;2-使用-Git-Bash-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#2-使用-Git-Bash-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Git Bash 安装 SDKMAN!&#34;&gt;&lt;/a&gt;2. 使用 Git Bash 安装 SDKMAN!&lt;/h3&gt;&lt;h4 id=&#34;步骤-1-打开-Git-Bash&#34;&gt;&lt;a href=&#34;#步骤-1-打开-Git-Bash&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 打开 Git Bash&#34;&gt;&lt;/a&gt;步骤 1: 打开 Git Bash&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在 Windows 上，右键点击桌面或文件夹空白处，选择 &lt;code&gt;Git Bash Here&lt;/code&gt;，打开 Git Bash 终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;步骤-2-安装-SDKMAN&#34;&gt;&lt;a href=&#34;#步骤-2-安装-SDKMAN&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 安装 SDKMAN!&#34;&gt;&lt;/a&gt;步骤 2: 安装 SDKMAN!&lt;/h4&gt;&lt;p&gt;在 Git Bash 中执行以下命令来安装 SDKMAN!：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https://get.sdkman.io&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装完成后，执行以下命令加载 SDKMAN!：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/bin/sdkman-init.sh&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-3-验证安装&#34;&gt;&lt;a href=&#34;#步骤-3-验证安装&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 验证安装&#34;&gt;&lt;/a&gt;步骤 3: 验证安装&lt;/h4&gt;&lt;p&gt;输入以下命令，确认 SDKMAN! 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk version&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-使用-SDKMAN-安装-Java&#34;&gt;&lt;a href=&#34;#3-使用-SDKMAN-安装-Java&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 SDKMAN! 安装 Java&#34;&gt;&lt;/a&gt;3. 使用 SDKMAN! 安装 Java&lt;/h3&gt;&lt;h4 id=&#34;安装-Java-版本&#34;&gt;&lt;a href=&#34;#安装-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;安装 Java 版本&#34;&gt;&lt;/a&gt;安装 Java 版本&lt;/h4&gt;&lt;p&gt;你可以使用 SDKMAN! 安装你需要的 Java 版本，例如 Java 17：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;设置默认-Java-版本&#34;&gt;&lt;a href=&#34;#设置默认-Java-版本&#34; class=&#34;headerlink&#34; title=&#34;设置默认 Java 版本&#34;&gt;&lt;/a&gt;设置默认 Java 版本&lt;/h4&gt;&lt;p&gt;安装完成后，将 Java 17 设置为默认版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sdk default &lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;17.0&lt;/span&gt;.0-tem&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-配置系统环境变量（全局可用）&#34;&gt;&lt;a href=&#34;#4-配置系统环境变量（全局可用）&#34; class=&#34;headerlink&#34; title=&#34;4. 配置系统环境变量（全局可用）&#34;&gt;&lt;/a&gt;4. 配置系统环境变量（全局可用）&lt;/h3&gt;&lt;p&gt;为了让其他 Shell（如 PowerShell、CMD）也能使用 SDKMAN! 安装的 Java，需要将 Java 的路径添加到系统环境变量中。&lt;/p&gt;
&lt;h4 id=&#34;步骤-1-查找-Java-安装路径&#34;&gt;&lt;a href=&#34;#步骤-1-查找-Java-安装路径&#34; class=&#34;headerlink&#34; title=&#34;步骤 1: 查找 Java 安装路径&#34;&gt;&lt;/a&gt;步骤 1: 查找 Java 安装路径&lt;/h4&gt;&lt;p&gt;首先，找到 SDKMAN! 安装的 Java 版本路径。一般位于 &lt;code&gt;$HOME/.sdkman/candidates/java/current/bin&lt;/code&gt;，具体路径可以通过以下命令在 Git Bash 中查看：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/.sdkman/candidates/java/current/bin&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会输出类似于以下的路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/c/Users/YourUsername/.sdkman/candidates/java/current/bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;步骤-2-打开系统环境变量设置&#34;&gt;&lt;a href=&#34;#步骤-2-打开系统环境变量设置&#34; class=&#34;headerlink&#34; title=&#34;步骤 2: 打开系统环境变量设置&#34;&gt;&lt;/a&gt;步骤 2: 打开系统环境变量设置&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;右键点击 “此电脑” 或 “计算机”，选择 “属性”。&lt;/li&gt;
&lt;li&gt;在左侧点击 “高级系统设置”。&lt;/li&gt;
&lt;li&gt;在弹出的窗口中，点击 “环境变量” 按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;步骤-3-添加-Java-路径到系统-PATH&#34;&gt;&lt;a href=&#34;#步骤-3-添加-Java-路径到系统-PATH&#34; class=&#34;headerlink&#34; title=&#34;步骤 3: 添加 Java 路径到系统 PATH&#34;&gt;&lt;/a&gt;步骤 3: 添加 Java 路径到系统 &lt;code&gt;PATH&lt;/code&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在系统变量下，找到 &lt;code&gt;Path&lt;/code&gt; 变量并点击 “编辑”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “新建”，并添加以下路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;Users&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;YourUsername&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;.sdkman&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;candidates&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;current&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “确定” 关闭所有窗口。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-验证配置&#34;&gt;&lt;a href=&#34;#5-验证配置&#34; class=&#34;headerlink&#34; title=&#34;5. 验证配置&#34;&gt;&lt;/a&gt;5. 验证配置&lt;/h3&gt;&lt;p&gt;关闭所有打开的终端，然后重新打开 CMD、PowerShell 或其他终端，输入以下命令，确认 Java 版本是否正确配置：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果看到安装的 Java 版本信息，说明配置成功。&lt;/p&gt;
</content>
        <category term="教程" />
        <updated>2024-08-15T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/15/java-ban-ben/</id>
        <title>Java版本</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/15/java-ban-ben/"/>
        <content type="html">&lt;h1 id=&#34;Java版本&#34;&gt;&lt;a href=&#34;#Java版本&#34; class=&#34;headerlink&#34; title=&#34;Java版本&#34;&gt;&lt;/a&gt;Java版本&lt;/h1&gt;&lt;p&gt;理解 Java 的版本号、JDK（Java Development Kit），以及相关的概念。下面是对这些概念的详细解释，以及它们之间的区别和作用。&lt;/p&gt;
&lt;h2 id=&#34;1-Java-版本号&#34;&gt;&lt;a href=&#34;#1-Java-版本号&#34; class=&#34;headerlink&#34; title=&#34;1. Java 版本号&#34;&gt;&lt;/a&gt;1. Java 版本号&lt;/h2&gt;&lt;p&gt;Java 版本号标识了 Java 语言和平台的特定版本，每个版本都引入了新的特性、改进和修复。Java 版本号的格式通常是 **&lt;code&gt;&amp;lt;主版本&amp;gt;.&amp;lt;次版本&amp;gt;.&amp;lt;更新版本&amp;gt;&lt;/code&gt;**。&lt;/p&gt;
&lt;h4 id=&#34;版本号的构成&#34;&gt;&lt;a href=&#34;#版本号的构成&#34; class=&#34;headerlink&#34; title=&#34;版本号的构成&#34;&gt;&lt;/a&gt;版本号的构成&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;标识大的版本更新。主版本通常代表语言、平台或 API 级别的重大变化。例如，Java 8、Java 11、Java 17 等都是主版本。&lt;/li&gt;
&lt;li&gt;Java 版本号从 1.x 系列（如 1.0、1.2、1.4、1.5）过渡到直接使用主版本号（如 8、11、17），1.5 对应的是 Java 5。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;次版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;次版本通常是更细粒度的更新，可能引入一些小的特性、性能改进或者 API 变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;更新版本通常是针对安全性和漏洞修复的补丁版本。例如，Java 11.0.2 代表 Java 11 的第二次更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-JDK（Java-Development-Kit）&#34;&gt;&lt;a href=&#34;#2-JDK（Java-Development-Kit）&#34; class=&#34;headerlink&#34; title=&#34;2. JDK（Java Development Kit）&#34;&gt;&lt;/a&gt;2. JDK（Java Development Kit）&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JDK&lt;/strong&gt; 是开发 Java 应用程序的工具包，它包含了一系列工具、库和编译器，用于开发、编译、调试和运行 Java 应用程序。JDK 是 Java 的核心组件之一，也是每个 Java 开发者必须安装的工具。&lt;/p&gt;
&lt;h4 id=&#34;JDK-的主要组成部分&#34;&gt;&lt;a href=&#34;#JDK-的主要组成部分&#34; class=&#34;headerlink&#34; title=&#34;JDK 的主要组成部分&#34;&gt;&lt;/a&gt;JDK 的主要组成部分&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 编译器 (&lt;code&gt;javac&lt;/code&gt;)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;编译 Java 源代码（&lt;code&gt;.java&lt;/code&gt; 文件）为字节码（&lt;code&gt;.class&lt;/code&gt; 文件）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 虚拟机 (&lt;code&gt;java&lt;/code&gt;)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;执行编译后的字节码，使得 Java 应用程序可以跨平台运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标准类库&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;包含 Java API 提供的标准类库，如集合框架、I/O 操作、网络编程等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发工具&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;包括调试工具（&lt;code&gt;jdb&lt;/code&gt;）、文档生成工具（&lt;code&gt;javadoc&lt;/code&gt;）、打包工具（&lt;code&gt;jar&lt;/code&gt;）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-JDK-与-JRE-的区别&#34;&gt;&lt;a href=&#34;#3-JDK-与-JRE-的区别&#34; class=&#34;headerlink&#34; title=&#34;3. JDK 与 JRE 的区别&#34;&gt;&lt;/a&gt;3. JDK 与 JRE 的区别&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JRE&lt;/strong&gt;（Java Runtime Environment）是 Java 运行环境，它是 JDK 的一个子集，包含 JVM 和标准类库，用于运行 Java 应用程序，但不包括编译器和开发工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JDK&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;包含 JRE，用于开发和运行 Java 应用程序。&lt;/li&gt;
&lt;li&gt;适用于开发者。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JRE&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;仅用于运行 Java 应用程序。&lt;/li&gt;
&lt;li&gt;适用于最终用户或运行环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-Java-SE-Java-EE-Java-ME-的区别&#34;&gt;&lt;a href=&#34;#4-Java-SE-Java-EE-Java-ME-的区别&#34; class=&#34;headerlink&#34; title=&#34;4. Java SE, Java EE, Java ME 的区别&#34;&gt;&lt;/a&gt;4. Java SE, Java EE, Java ME 的区别&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java SE (Standard Edition)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Java 标准版，包含了开发常规桌面和服务器应用程序所需的基础功能。大多数 Java 开发者都使用 Java SE。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java EE (Enterprise Edition)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Java 企业版，基于 Java SE，添加了用于开发大规模分布式企业应用的额外功能，如 Web 服务、企业 JavaBeans (EJB)、Servlets、JSP 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java ME (Micro Edition)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Java 微型版，专为嵌入式设备、移动设备和小型设备设计，包含适应这些设备的特定功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5-版本区别与用途&#34;&gt;&lt;a href=&#34;#5-版本区别与用途&#34; class=&#34;headerlink&#34; title=&#34;5. 版本区别与用途&#34;&gt;&lt;/a&gt;5. 版本区别与用途&lt;/h2&gt;&lt;p&gt;每个 Java 版本都会引入新的特性和改进，因此理解不同版本的区别对选择合适的开发环境非常重要。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 8 (LTS)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;被广泛使用的 LTS 版本，引入了 Lambda 表达式、Stream API、默认方法等关键特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 11 (LTS)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;继 Java 8 之后的另一个 LTS 版本，引入了新的 HTTP Client API、局部变量类型推断 (&lt;code&gt;var&lt;/code&gt;) 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 17 (LTS)&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;最新的 LTS 版本，包含了大量的新特性和改进，如封闭类、增强的 Switch 表达式等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非 LTS 版本&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;这些版本在发布后的短期内得到支持，主要用于引入和测试新特性。如 Java 9、10、12、13 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-常见的-JDK-实现及其特点&#34;&gt;&lt;a href=&#34;#6-常见的-JDK-实现及其特点&#34; class=&#34;headerlink&#34; title=&#34;6. 常见的 JDK 实现及其特点&#34;&gt;&lt;/a&gt;6. 常见的 JDK 实现及其特点&lt;/h2&gt;&lt;h3 id=&#34;1-Oracle-JDK&#34;&gt;&lt;a href=&#34;#1-Oracle-JDK&#34; class=&#34;headerlink&#34; title=&#34;1. Oracle JDK&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;Oracle JDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Oracle JDK&lt;/strong&gt; 是 Oracle 公司官方发布的 Java 开发工具包，是 Java SE（Standard Edition）的参考实现。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;商业版（从 JDK 11 开始），需要商业许可证用于生产环境，但开发和测试用途免费。&lt;/li&gt;
&lt;li&gt;定期更新和安全修补。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;LTS（长期支持）版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;非 LTS 版本：12、13、14、15、16、18、19 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-OpenJDK&#34;&gt;&lt;a href=&#34;#2-OpenJDK&#34; class=&#34;headerlink&#34; title=&#34;2. OpenJDK&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;OpenJDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenJDK&lt;/strong&gt; 是一个开源的 JDK 实现，由 Oracle 和其他社区成员共同维护，是 Oracle JDK 的基础。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;开源且免费使用。&lt;/li&gt;
&lt;li&gt;与 Oracle JDK 基本相同，但可能缺少一些商业特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;和 Oracle JDK 同步的版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供最新的非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-Adoptium-Eclipse-Temurin&#34;&gt;&lt;a href=&#34;#3-Adoptium-Eclipse-Temurin&#34; class=&#34;headerlink&#34; title=&#34;3. Adoptium (Eclipse Temurin)&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;Adoptium (Eclipse Temurin)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Adoptium&lt;/strong&gt; 前身为 AdoptOpenJDK，现在由 Eclipse 基金会管理。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;社区驱动的开源 JDK 发行版。&lt;/li&gt;
&lt;li&gt;提供高质量的二进制构建，适用于不同平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-Amazon-Corretto&#34;&gt;&lt;a href=&#34;#4-Amazon-Corretto&#34; class=&#34;headerlink&#34; title=&#34;4. Amazon Corretto&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;Amazon Corretto&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Amazon Corretto&lt;/strong&gt; 是由亚马逊发布的免费、开源的 JDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;亚马逊维护，包含长时间的支持和性能改进。&lt;/li&gt;
&lt;li&gt;完全兼容 OpenJDK。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;提供 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-Azul-Zulu&#34;&gt;&lt;a href=&#34;#5-Azul-Zulu&#34; class=&#34;headerlink&#34; title=&#34;5. Azul Zulu&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;Azul Zulu&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Azul Zulu&lt;/strong&gt; 是由 Azul 公司发布的一个商业支持的 OpenJDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;商业支持，适用于企业环境。&lt;/li&gt;
&lt;li&gt;提供与不同平台兼容的版本，包括 Windows、Linux、macOS 和嵌入式系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-GraalVM&#34;&gt;&lt;a href=&#34;#6-GraalVM&#34; class=&#34;headerlink&#34; title=&#34;6. GraalVM&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;GraalVM&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GraalVM&lt;/strong&gt; 是 Oracle 提供的一个高性能、可扩展的 Java 虚拟机，它也是一个多语言开发环境。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;支持多语言运行时，包括 Java、JavaScript、Python、Ruby 等。&lt;/li&gt;
&lt;li&gt;提供本机映像生成（Native Image）功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;基于 OpenJDK 构建，版本与 OpenJDK 保持一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-Red-Hat-OpenJDK&#34;&gt;&lt;a href=&#34;#7-Red-Hat-OpenJDK&#34; class=&#34;headerlink&#34; title=&#34;7. Red Hat OpenJDK&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;Red Hat OpenJDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Red Hat OpenJDK&lt;/strong&gt; 是由 Red Hat 提供的 OpenJDK 构建，主要针对企业级应用。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;提供商业支持和长期支持。&lt;/li&gt;
&lt;li&gt;常用于 Red Hat Enterprise Linux（RHEL）环境中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-SAP-Machine&#34;&gt;&lt;a href=&#34;#8-SAP-Machine&#34; class=&#34;headerlink&#34; title=&#34;8. SAP Machine&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;SAP Machine&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SAP Machine&lt;/strong&gt; 是 SAP 发布的 OpenJDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;用于 SAP 产品和客户的支持环境。&lt;/li&gt;
&lt;li&gt;完全开源，兼容 OpenJDK。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-Liberica-JDK&#34;&gt;&lt;a href=&#34;#9-Liberica-JDK&#34; class=&#34;headerlink&#34; title=&#34;9. Liberica JDK&#34;&gt;&lt;/a&gt;9. &lt;strong&gt;Liberica JDK&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Liberica JDK&lt;/strong&gt; 是由 BellSoft 发布的 OpenJDK 发行版。&lt;/li&gt;
&lt;li&gt;特点:&lt;ul&gt;
&lt;li&gt;提供全功能 JDK，包括完整的 JavaFX 支持。&lt;/li&gt;
&lt;li&gt;提供不同平台和操作系统的兼容版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;版本:&lt;ul&gt;
&lt;li&gt;支持 LTS 版本：8、11、17 等。&lt;/li&gt;
&lt;li&gt;提供非 LTS 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-SDK-Software-Development-Kit&#34;&gt;&lt;a href=&#34;#7-SDK-Software-Development-Kit&#34; class=&#34;headerlink&#34; title=&#34;7. SDK (Software Development Kit)&#34;&gt;&lt;/a&gt;7. SDK (Software Development Kit)&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;SDK&lt;/strong&gt; 是软件开发工具包（Software Development Kit）的缩写。它通常包括了一组开发工具、库、示例代码、文档和其他资源，帮助开发者构建应用程序。对于 JVM 生态系统中的 SDK，最常见的例子是 Java 开发工具包（&lt;strong&gt;JDK&lt;/strong&gt;，Java Development Kit）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK: JDK 是 Java 的官方 SDK，包含了开发 Java 应用程序所需的所有工具和库。JDK 中主要包括：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 编译器（javac）&lt;/strong&gt;: 用于将 Java 源代码编译成字节码（.class 文件）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 运行时环境（JRE）&lt;/strong&gt;: 包含 JVM 和标准 Java 类库，负责运行 Java 应用程序。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他工具&lt;/strong&gt;: 如 &lt;code&gt;javadoc&lt;/code&gt;（生成文档的工具）、&lt;code&gt;jdb&lt;/code&gt;（Java 调试器）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了 JDK，其他 JVM 语言（如 Scala、Kotlin）也有自己的 SDK，这些 SDK 提供了用于编译、运行和调试这些语言的工具。&lt;/p&gt;
&lt;h2 id=&#34;8-JVM-工具&#34;&gt;&lt;a href=&#34;#8-JVM-工具&#34; class=&#34;headerlink&#34; title=&#34;8. JVM 工具&#34;&gt;&lt;/a&gt;8. JVM 工具&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JVM 工具&lt;/strong&gt; 是指那些用于开发、管理和优化基于 JVM 的应用程序的工具。这些工具帮助开发者在 JVM 上构建和管理应用程序，包括编译、运行、调试、打包、依赖管理等方面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;JVM&lt;/strong&gt; 是 Java 程序的运行环境。Java 代码在编译器的帮助下转化为字节码，这些字节码由 JVM 来执行。JVM 为不同的操作系统提供了统一的运行环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java 程序跨平台性的实现依赖于 JVM。Java 编译器将源代码编译成与平台无关的字节码，JVM 则负责在不同平台上将字节码解释成机器码并执行。因此，只要平台有适配的 JVM，Java 程序就可以在上面运行，无需修改代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虽然 JVM 是为 Java 设计的，但由于它的通用性，其他语言（如 Scala、Kotlin、Groovy 等）也可以编译为 JVM 字节码，并在 JVM 上运行。因此，JVM 并不局限于 Java 语言，它已经发展为支持多种语言的强大平台。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Java" />
        <updated>2024-08-14T18:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/12/windows-chuang-jian-wen-jian/</id>
        <title>windows创建文件</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/12/windows-chuang-jian-wen-jian/"/>
        <content type="html">&lt;h1 id=&#34;windows创建文件&#34;&gt;&lt;a href=&#34;#windows创建文件&#34; class=&#34;headerlink&#34; title=&#34;windows创建文件&#34;&gt;&lt;/a&gt;windows创建文件&lt;/h1&gt;&lt;h3 id=&#34;1-使用-echo-命令&#34;&gt;&lt;a href=&#34;#1-使用-echo-命令&#34; class=&#34;headerlink&#34; title=&#34;1. 使用 echo 命令&#34;&gt;&lt;/a&gt;1. 使用 &lt;code&gt;echo&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;echo&lt;/code&gt; 命令将内容写入一个新的文件中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;echo 文件内容 &amp;gt; 文件名.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果文件已经存在，这个命令会覆盖原来的内容。&lt;/p&gt;
&lt;h3 id=&#34;2-使用-type-nul-命令&#34;&gt;&lt;a href=&#34;#2-使用-type-nul-命令&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 type nul 命令&#34;&gt;&lt;/a&gt;2. 使用 &lt;code&gt;type nul&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;这个命令可以创建一个空文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;type nul &amp;gt; 文件名.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-使用-copy-con-命令&#34;&gt;&lt;a href=&#34;#3-使用-copy-con-命令&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 copy con 命令&#34;&gt;&lt;/a&gt;3. 使用 &lt;code&gt;copy con&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;&lt;code&gt;copy con&lt;/code&gt; 可以创建文件并直接输入内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;copy con 文件名.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入完内容后，按 &lt;code&gt;Ctrl + Z&lt;/code&gt; 然后回车保存并退出。&lt;/p&gt;
&lt;h3 id=&#34;4-使用-fsutil-命令&#34;&gt;&lt;a href=&#34;#4-使用-fsutil-命令&#34; class=&#34;headerlink&#34; title=&#34;4. 使用 fsutil 命令&#34;&gt;&lt;/a&gt;4. 使用 &lt;code&gt;fsutil&lt;/code&gt; 命令&lt;/h3&gt;&lt;p&gt;&lt;code&gt;fsutil&lt;/code&gt; 可以创建指定大小的文件（以字节为单位）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;fsutil file createnew 文件名.txt 文件大小（以字节为单位）&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-使用-PowerShell-的-New-Item-cmdlet&#34;&gt;&lt;a href=&#34;#5-使用-PowerShell-的-New-Item-cmdlet&#34; class=&#34;headerlink&#34; title=&#34;5. 使用 PowerShell 的 New-Item cmdlet&#34;&gt;&lt;/a&gt;5. 使用 PowerShell 的 &lt;code&gt;New-Item&lt;/code&gt; cmdlet&lt;/h3&gt;&lt;p&gt;在PowerShell中，你可以使用 &lt;code&gt;New-Item&lt;/code&gt; 来创建文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;New-Item -Path .\文件名.txt -ItemType File&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="windows" />
        <updated>2024-08-11T19:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/</id>
        <title>conda安装及使用</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/12/conda-an-zhuang-ji-shi-yong/"/>
        <content type="html">&lt;h1 id=&#34;conda安装及使用&#34;&gt;&lt;a href=&#34;#conda安装及使用&#34; class=&#34;headerlink&#34; title=&#34;conda安装及使用&#34;&gt;&lt;/a&gt;conda安装及使用&lt;/h1&gt;&lt;h3 id=&#34;Conda-的安装&#34;&gt;&lt;a href=&#34;#Conda-的安装&#34; class=&#34;headerlink&#34; title=&#34;Conda 的安装&#34;&gt;&lt;/a&gt;Conda 的安装&lt;/h3&gt;&lt;h4 id=&#34;1-使用-Anaconda-安装&#34;&gt;&lt;a href=&#34;#1-使用-Anaconda-安装&#34; class=&#34;headerlink&#34; title=&#34;1. 使用 Anaconda 安装&#34;&gt;&lt;/a&gt;1. 使用 Anaconda 安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Anaconda&lt;/strong&gt; 是一个包含了 Python 和众多常用库（如 NumPy、Pandas、SciPy、Jupyter Notebook 等）的数据科学平台。它自带 &lt;code&gt;conda&lt;/code&gt;，适合需要完整数据科学工具包的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-使用-Miniconda-安装&#34;&gt;&lt;a href=&#34;#2-使用-Miniconda-安装&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 Miniconda 安装&#34;&gt;&lt;/a&gt;2. 使用 Miniconda 安装&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Miniconda&lt;/strong&gt; 是一个轻量级安装包，只包含 &lt;code&gt;conda&lt;/code&gt; 和 Python，适合那些希望灵活选择并安装所需包的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;安装步骤：&#34;&gt;&lt;a href=&#34;#安装步骤：&#34; class=&#34;headerlink&#34; title=&#34;安装步骤：&#34;&gt;&lt;/a&gt;安装步骤：&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载 Miniconda 安装程序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问 Miniconda 下载页面。&lt;/li&gt;
&lt;li&gt;选择适合你操作系统的版本（Windows、macOS、Linux）并下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装 Miniconda&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;：双击下载的 &lt;code&gt;.exe&lt;/code&gt; 文件并按照提示安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;macOS/Linux&lt;/p&gt;
&lt;p&gt;：在终端中运行下载的 .sh文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt; Miniconda3-latest-MacOSX-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt; Miniconda3-latest-Linux-x86_64.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加环境变量&lt;/p&gt;
&lt;p&gt;如果你在安装时未勾选添加 &lt;code&gt;conda&lt;/code&gt; 到 &lt;code&gt;PATH&lt;/code&gt; 环境变量，或者想手动添加，可以按照以下步骤进行：&lt;/p&gt;
&lt;h4 id=&#34;Windows&#34;&gt;&lt;a href=&#34;#Windows&#34; class=&#34;headerlink&#34; title=&#34;Windows&#34;&gt;&lt;/a&gt;Windows&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;打开环境变量设置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;右键点击“此电脑”或“我的电脑”，选择“属性”。&lt;/li&gt;
&lt;li&gt;点击“高级系统设置”。&lt;/li&gt;
&lt;li&gt;在“系统属性”窗口中，点击“环境变量”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编辑 &lt;code&gt;PATH&lt;/code&gt; 变量：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在“系统变量”或“用户变量”部分，找到并选中 &lt;code&gt;Path&lt;/code&gt; 变量，点击“编辑”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击“新建”，添加 Anaconda 或 Miniconda 的安装路径。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;&lt;span class=&#34;token target symbol&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;\Users\YourUsername\Anaconda3
&lt;span class=&#34;token target symbol&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;\Users\YourUsername\Anaconda3\Scripts
&lt;span class=&#34;token target symbol&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;\Users\YourUsername\Anaconda3\Library\bin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存并退出设置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证配置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开命令提示符，运行 conda验证是否可用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;macOS-和-Linux&#34;&gt;&lt;a href=&#34;#macOS-和-Linux&#34; class=&#34;headerlink&#34; title=&#34;macOS 和 Linux&#34;&gt;&lt;/a&gt;macOS 和 Linux&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编辑 Shell 配置文件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开终端，编辑你的 shell 配置文件（如 &lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.zshrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt; 等）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加以下行到文件末尾：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$HOME&lt;/span&gt;/miniconda3/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果安装的是 Anaconda，将路径替换为 Anaconda 的安装路径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;刷新配置文件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;保存文件后，运行以下命令使更改生效：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.bashrc  &lt;span class=&#34;token comment&#34;&gt;# 或者 `source ~/.zshrc`，具体取决于你使用的 shell&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证配置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在终端运行 conda 验证是否可用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;初始化 conda&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装完成后，运行以下命令初始化 conda：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda init&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重新启动终端，以确保初始化生效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;Conda-的使用&#34;&gt;&lt;a href=&#34;#Conda-的使用&#34; class=&#34;headerlink&#34; title=&#34;Conda 的使用&#34;&gt;&lt;/a&gt;Conda 的使用&lt;/h3&gt;&lt;h4 id=&#34;1-验证安装&#34;&gt;&lt;a href=&#34;#1-验证安装&#34; class=&#34;headerlink&#34; title=&#34;1. 验证安装&#34;&gt;&lt;/a&gt;1. 验证安装&lt;/h4&gt;&lt;p&gt;在终端或命令提示符中运行以下命令，查看 conda 是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你应该看到类似 &lt;code&gt;conda 4.x.x&lt;/code&gt; 的输出，表明 conda 已成功安装。&lt;/p&gt;
&lt;h4 id=&#34;2-更新-Conda&#34;&gt;&lt;a href=&#34;#2-更新-Conda&#34; class=&#34;headerlink&#34; title=&#34;2. 更新 Conda&#34;&gt;&lt;/a&gt;2. 更新 Conda&lt;/h4&gt;&lt;p&gt;安装后，建议将 conda 更新到最新版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda update conda&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-创建新环境&#34;&gt;&lt;a href=&#34;#3-创建新环境&#34; class=&#34;headerlink&#34; title=&#34;3. 创建新环境&#34;&gt;&lt;/a&gt;3. 创建新环境&lt;/h4&gt;&lt;p&gt;使用以下命令创建一个新的 Python 环境（例如 &lt;code&gt;myenv&lt;/code&gt;），并指定 Python 版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda create &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; myenv &lt;span class=&#34;token assign-left variable&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3.9&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为 &lt;code&gt;myenv&lt;/code&gt; 的新环境并安装 Python 3.9。&lt;/p&gt;
&lt;h4 id=&#34;4-激活环境&#34;&gt;&lt;a href=&#34;#4-激活环境&#34; class=&#34;headerlink&#34; title=&#34;4. 激活环境&#34;&gt;&lt;/a&gt;4. 激活环境&lt;/h4&gt;&lt;p&gt;创建环境后，使用以下命令激活它：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda activate myenv&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;激活环境后，命令提示符前缀将会显示当前激活的环境名称。&lt;/p&gt;
&lt;h4 id=&#34;5-安装包&#34;&gt;&lt;a href=&#34;#5-安装包&#34; class=&#34;headerlink&#34; title=&#34;5. 安装包&#34;&gt;&lt;/a&gt;5. 安装包&lt;/h4&gt;&lt;p&gt;在激活的环境中，使用以下命令安装所需包（例如 NumPy）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Conda 会自动处理包的依赖关系，并为你安装所有必要的依赖。&lt;/p&gt;
&lt;h4 id=&#34;6-列出已安装的包&#34;&gt;&lt;a href=&#34;#6-列出已安装的包&#34; class=&#34;headerlink&#34; title=&#34;6. 列出已安装的包&#34;&gt;&lt;/a&gt;6. 列出已安装的包&lt;/h4&gt;&lt;p&gt;使用以下命令查看当前环境中已安装的所有包：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;7-更新包&#34;&gt;&lt;a href=&#34;#7-更新包&#34; class=&#34;headerlink&#34; title=&#34;7. 更新包&#34;&gt;&lt;/a&gt;7. 更新包&lt;/h4&gt;&lt;p&gt;使用以下命令更新特定包（例如 NumPy）到最新版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda update numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;8-删除包&#34;&gt;&lt;a href=&#34;#8-删除包&#34; class=&#34;headerlink&#34; title=&#34;8. 删除包&#34;&gt;&lt;/a&gt;8. 删除包&lt;/h4&gt;&lt;p&gt;若不再需要某个包，可以使用以下命令将其删除：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda remove numpy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;9-列出所有环境&#34;&gt;&lt;a href=&#34;#9-列出所有环境&#34; class=&#34;headerlink&#34; title=&#34;9. 列出所有环境&#34;&gt;&lt;/a&gt;9. 列出所有环境&lt;/h4&gt;&lt;p&gt;使用以下命令查看你创建的所有环境：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;conda &lt;span class=&#34;token function&#34;&gt;env&lt;/span&gt; list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-删除环境&#34;&gt;&lt;a href=&#34;#10-删除环境&#34; class=&#34;headerlink&#34; title=&#34;10. 删除环境&#34;&gt;&lt;/a&gt;10. 删除环境&lt;/h4&gt;&lt;p&gt;若不再需要某个环境，可以使用以下命令删除它：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;bconda remove &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; myenv &lt;span class=&#34;token parameter variable&#34;&gt;--all&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;11-添加pycharm可执行文件&#34;&gt;&lt;a href=&#34;#11-添加pycharm可执行文件&#34; class=&#34;headerlink&#34; title=&#34;11.添加pycharm可执行文件&#34;&gt;&lt;/a&gt;11.添加pycharm可执行文件&lt;/h4&gt;&lt;p&gt;在设置/首选项窗口中，选择左侧的 &lt;code&gt;Project: 你的项目名&lt;/code&gt; &amp;gt; &lt;code&gt;Python Interpreter（解释器）&lt;/code&gt;，在Python Interpreter页面，点击右侧的添加解释器，选择 添加本地解释器，在弹出的窗口中，选择 &lt;code&gt;Conda Environment&lt;/code&gt;，可执行文件若为空，复制&lt;code&gt;conda\condabin\conda.bat&lt;/code&gt;文件的目录到框里就，在加载&lt;/p&gt;
</content>
        <category term="环境" />
        <updated>2024-08-11T17:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/</id>
        <title>软链接和硬链接</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/"/>
        <content type="html">&lt;h1 id=&#34;软链接和硬链接&#34;&gt;&lt;a href=&#34;#软链接和硬链接&#34; class=&#34;headerlink&#34; title=&#34;软链接和硬链接&#34;&gt;&lt;/a&gt;软链接和硬链接&lt;/h1&gt;&lt;p&gt;在Linux和Unix系统中，&lt;strong&gt;软链接&lt;/strong&gt;（符号链接，symbolic link，简称&lt;code&gt;symlink&lt;/code&gt;）和&lt;strong&gt;硬链接&lt;/strong&gt;（hard link）是两种用于指向文件或目录的方式。它们有不同的用途和行为。&lt;/p&gt;
&lt;h2 id=&#34;1-软链接（Symbolic-Link）&#34;&gt;&lt;a href=&#34;#1-软链接（Symbolic-Link）&#34; class=&#34;headerlink&#34; title=&#34;1. 软链接（Symbolic Link）&#34;&gt;&lt;/a&gt;1. 软链接（Symbolic Link）&lt;/h2&gt;&lt;p&gt;软链接类似于Windows中的快捷方式，它是一个指向另一个文件或目录的指针。创建软链接后，这个链接文件本身并不包含目标文件的数据，而是包含目标文件的路径。&lt;/p&gt;
&lt;h4 id=&#34;特性：&#34;&gt;&lt;a href=&#34;#特性：&#34; class=&#34;headerlink&#34; title=&#34;特性：&#34;&gt;&lt;/a&gt;特性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指向目标文件的路径&lt;/strong&gt;：软链接文件仅存储目标文件的路径，而不是文件内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨文件系统&lt;/strong&gt;：软链接可以指向不同文件系统中的文件或目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;链断裂问题&lt;/strong&gt;：如果目标文件被删除或移动，软链接将失效，成为“断链”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件大小&lt;/strong&gt;：软链接的大小是指向目标文件路径的长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建软链接&#34;&gt;&lt;a href=&#34;#创建软链接&#34; class=&#34;headerlink&#34; title=&#34;创建软链接&#34;&gt;&lt;/a&gt;创建软链接&lt;/h4&gt;&lt;p&gt;要创建一个软链接，你可以使用&lt;code&gt;ln -s&lt;/code&gt;命令。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /path/to/target /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /home/user/original_file.txt /home/user/shortcut_to_file.txt &lt;span class=&#34;token comment&#34;&gt;# 也可以是目录&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为&lt;code&gt;shortcut_to_file.txt&lt;/code&gt;的软链接，指向&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;查看软链接&#34;&gt;&lt;a href=&#34;#查看软链接&#34; class=&#34;headerlink&#34; title=&#34;查看软链接&#34;&gt;&lt;/a&gt;查看软链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;ls -l&lt;/code&gt;命令可以查看软链接的详细信息。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; /home/user/shortcut_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;lrwxrwxrwx &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/shortcut_to_file.txt -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; /home/user/original_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;l&lt;/code&gt;表示这是一个软链接，箭头&lt;code&gt;-&amp;gt;&lt;/code&gt;后面是目标路径。&lt;/p&gt;
&lt;h4 id=&#34;删除软链接&#34;&gt;&lt;a href=&#34;#删除软链接&#34; class=&#34;headerlink&#34; title=&#34;删除软链接&#34;&gt;&lt;/a&gt;删除软链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;rm&lt;/code&gt;命令删除软链接。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /home/user/shortcut_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除软链接，但不会影响目标文件。&lt;/p&gt;
&lt;h2 id=&#34;2-硬链接（Hard-Link）&#34;&gt;&lt;a href=&#34;#2-硬链接（Hard-Link）&#34; class=&#34;headerlink&#34; title=&#34;2. 硬链接（Hard Link）&#34;&gt;&lt;/a&gt;2. 硬链接（Hard Link）&lt;/h2&gt;&lt;p&gt;硬链接是文件系统中的一个目录条目，它指向文件的实际数据块。与软链接不同，硬链接不是指向路径，而是指向数据块。因此，硬链接和原始文件共享相同的数据块。&lt;/p&gt;
&lt;h4 id=&#34;特性：-1&#34;&gt;&lt;a href=&#34;#特性：-1&#34; class=&#34;headerlink&#34; title=&#34;特性：&#34;&gt;&lt;/a&gt;特性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指向数据块&lt;/strong&gt;：硬链接指向文件的实际数据块，而不是路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享文件数据&lt;/strong&gt;：硬链接和原始文件共享相同的数据块，因此它们内容完全相同，且修改一个文件内容会同时更新硬链接的内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不可跨文件系统&lt;/strong&gt;：硬链接必须在同一文件系统内。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除影响&lt;/strong&gt;：删除一个硬链接不会影响文件的实际数据，只有当所有指向数据块的硬链接都删除后，文件的数据才会被删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建硬链接&#34;&gt;&lt;a href=&#34;#创建硬链接&#34; class=&#34;headerlink&#34; title=&#34;创建硬链接&#34;&gt;&lt;/a&gt;创建硬链接&lt;/h4&gt;&lt;p&gt;要创建一个硬链接，你可以使用&lt;code&gt;ln&lt;/code&gt;命令（不带&lt;code&gt;-s&lt;/code&gt;选项）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; /path/to/target /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; /home/user/original_file.txt /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为&lt;code&gt;hardlink_to_file.txt&lt;/code&gt;的硬链接，指向&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;的数据块。&lt;/p&gt;
&lt;h4 id=&#34;查看硬链接&#34;&gt;&lt;a href=&#34;#查看硬链接&#34; class=&#34;headerlink&#34; title=&#34;查看硬链接&#34;&gt;&lt;/a&gt;查看硬链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;ls -li&lt;/code&gt;命令可以查看文件的inode号，硬链接共享相同的inode号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-li&lt;/span&gt; /path/to/target /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-li&lt;/span&gt; /home/user/original_file.txt /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1234567&lt;/span&gt; -rw-r--r-- &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/original_file.txt
&lt;span class=&#34;token number&#34;&gt;1234567&lt;/span&gt; -rw-r--r-- &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;两个文件共享相同的inode号（&lt;code&gt;1234567&lt;/code&gt;），说明它们是硬链接。&lt;/p&gt;
&lt;h4 id=&#34;删除硬链接&#34;&gt;&lt;a href=&#34;#删除硬链接&#34; class=&#34;headerlink&#34; title=&#34;删除硬链接&#34;&gt;&lt;/a&gt;删除硬链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;rm&lt;/code&gt;命令删除硬链接。删除硬链接不会删除文件数据，只有当所有硬链接都被删除后，文件数据才会被删除。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除硬链接，但&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;仍然存在，文件数据依然可用。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;软链接&lt;/strong&gt;：适合用作快捷方式和指向目录。使用软链接时，请确保目标文件存在，或会造成“断链”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬链接&lt;/strong&gt;：适用于同一文件系统内共享文件数据，不能链接到目录（通常情况下）。硬链接不可跨文件系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;进阶操作&#34;&gt;&lt;a href=&#34;#进阶操作&#34; class=&#34;headerlink&#34; title=&#34;进阶操作&#34;&gt;&lt;/a&gt;进阶操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看所有链接&lt;/strong&gt;：使用&lt;code&gt;find&lt;/code&gt;命令查找所有指向某个目标的软链接或硬链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /path/to/directory &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; l &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;link_name&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令会查找所有名为&lt;code&gt;link_name&lt;/code&gt;的软链接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="命令" />
        <updated>2024-08-10T02:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/09/git-shi-yong/</id>
        <title>git使用</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/09/git-shi-yong/"/>
        <content type="html">&lt;h1 id=&#34;git使用&#34;&gt;&lt;a href=&#34;#git使用&#34; class=&#34;headerlink&#34; title=&#34;git使用&#34;&gt;&lt;/a&gt;git使用&lt;/h1&gt;&lt;h3 id=&#34;1-安装-Git&#34;&gt;&lt;a href=&#34;#1-安装-Git&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 Git&#34;&gt;&lt;/a&gt;1. 安装 Git&lt;/h3&gt;&lt;h4 id=&#34;Windows&#34;&gt;&lt;a href=&#34;#Windows&#34; class=&#34;headerlink&#34; title=&#34;Windows&#34;&gt;&lt;/a&gt;Windows&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;从 &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git 官方网站&lt;/a&gt; 下载 Git 安装程序。&lt;/li&gt;
&lt;li&gt;双击安装程序并按照提示完成安装。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;Linux&#34;&gt;&lt;a href=&#34;#Linux&#34; class=&#34;headerlink&#34; title=&#34;Linux&#34;&gt;&lt;/a&gt;Linux&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用包管理器安装 Git（以 Ubuntu 为例）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-配置-Git&#34;&gt;&lt;a href=&#34;#2-配置-Git&#34; class=&#34;headerlink&#34; title=&#34;2. 配置 Git&#34;&gt;&lt;/a&gt;2. 配置 Git&lt;/h3&gt;&lt;p&gt;安装完成后，配置用户名和邮箱：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; config &lt;span class=&#34;token parameter variable&#34;&gt;--global&lt;/span&gt; user.name &lt;span class=&#34;token string&#34;&gt;&#34;你的名字&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; config &lt;span class=&#34;token parameter variable&#34;&gt;--global&lt;/span&gt; user.email &lt;span class=&#34;token string&#34;&gt;&#34;你的邮箱&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-创建-SSH-Key&#34;&gt;&lt;a href=&#34;#3-创建-SSH-Key&#34; class=&#34;headerlink&#34; title=&#34;3. 创建 SSH Key&#34;&gt;&lt;/a&gt;3. 创建 SSH Key&lt;/h3&gt;&lt;p&gt;如果需要使用 SSH 方式连接 GitHub，生成 SSH key 并添加到 GitHub。&lt;/p&gt;
&lt;h4 id=&#34;生成-SSH-Key&#34;&gt;&lt;a href=&#34;#生成-SSH-Key&#34; class=&#34;headerlink&#34; title=&#34;生成 SSH Key&#34;&gt;&lt;/a&gt;生成 SSH Key&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;ssh-keygen -t rsa -C &#34;你的邮箱&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按提示操作，默认保存位置即可。生成完成后，使用以下命令查看公钥：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; ~/.ssh/id_rsa.pub&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;添加-SSH-Key-到-GitHub&#34;&gt;&lt;a href=&#34;#添加-SSH-Key-到-GitHub&#34; class=&#34;headerlink&#34; title=&#34;添加 SSH Key 到 GitHub&#34;&gt;&lt;/a&gt;添加 SSH Key 到 GitHub&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;登录 GitHub，进入 &lt;a href=&#34;https://github.com/settings/keys&#34;&gt;SSH and GPG keys&lt;/a&gt; 页面。&lt;/li&gt;
&lt;li&gt;点击 “New SSH key”，粘贴上一步生成的公钥内容，点击 “Add SSH key”。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-创建-Git-仓库&#34;&gt;&lt;a href=&#34;#4-创建-Git-仓库&#34; class=&#34;headerlink&#34; title=&#34;4. 创建 Git 仓库&#34;&gt;&lt;/a&gt;4. 创建 Git 仓库&lt;/h3&gt;&lt;h4 id=&#34;本地仓库&#34;&gt;&lt;a href=&#34;#本地仓库&#34; class=&#34;headerlink&#34; title=&#34;本地仓库&#34;&gt;&lt;/a&gt;本地仓库&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建一个新的目录并进入：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; my_project
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; my_project&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初始化 Git 仓库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; init&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;远程仓库&#34;&gt;&lt;a href=&#34;#远程仓库&#34; class=&#34;headerlink&#34; title=&#34;远程仓库&#34;&gt;&lt;/a&gt;远程仓库&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;登录 GitHub，点击右上角 “+”，选择 “New repository”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;填写仓库名和描述，点击 “Create repository”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 文件用于告诉 Git 哪些文件或目录不应该被添加到版本控制中。它在 Git 项目中非常重要，特别是当你的项目包含一些不需要共享的文件，如编译后的二进制文件、临时文件、或包含敏感信息的配置文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 文件通常放在项目的根目录下，但你也可以在子目录中添加 &lt;code&gt;.gitignore&lt;/code&gt; 文件，作用范围仅限于该目录及其子目录。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 文件的语法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;忽略特定文件或目录&lt;/strong&gt;：在 &lt;code&gt;.gitignore&lt;/code&gt; 中直接写上文件名或目录名。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 忽略文件&lt;/span&gt;
secret.txt

&lt;span class=&#34;token comment&#34;&gt;# 忽略目录&lt;/span&gt;
/logs/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通配符&lt;/strong&gt;：使用 &lt;code&gt;*&lt;/code&gt; 代表任意字符，&lt;code&gt;?&lt;/code&gt; 代表单个字符，&lt;code&gt;[abc]&lt;/code&gt; 代表匹配集合中的任意一个字符。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 忽略所有 .log 文件&lt;/span&gt;
*.log

&lt;span class=&#34;token comment&#34;&gt;# 忽略以 &#34;temp&#34; 开头的文件&lt;/span&gt;
temp*

&lt;span class=&#34;token comment&#34;&gt;# 忽略名为 &#34;backup&#34; 或 &#34;bak&#34; 的文件&lt;/span&gt;
*.&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;bB&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;aA&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;kK&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;排除规则&lt;/strong&gt;：以 &lt;code&gt;!&lt;/code&gt; 开头的行用于排除某些文件或目录，这些文件即使符合前面的忽略规则也不会被忽略。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 忽略所有 .log 文件，但不忽略 important.log&lt;/span&gt;
*.log
&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;important.log&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;指定路径&lt;/strong&gt;：使用斜杠 &lt;code&gt;/&lt;/code&gt; 来表示目录路径。以斜杠开头表示从根目录开始匹配。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 只忽略根目录下的 &#34;config.json&#34;，不忽略其他目录中的 &#34;config.json&#34;&lt;/span&gt;
/config.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-关联本地仓库与远程仓库&#34;&gt;&lt;a href=&#34;#5-关联本地仓库与远程仓库&#34; class=&#34;headerlink&#34; title=&#34;5. 关联本地仓库与远程仓库&#34;&gt;&lt;/a&gt;5. 关联本地仓库与远程仓库&lt;/h3&gt;&lt;p&gt;在本地仓库中，执行以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; origin git@github.com:你的用户名/仓库名.git&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;git remote add&lt;/code&gt; 是一个 Git 命令，用于向你的本地仓库添加一个远程仓库。一个远程仓库是一个托管在某个服务器上的 Git 仓库，你可以将本地的更改推送到远程仓库，也可以从远程仓库拉取更新。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;origin&lt;/code&gt; 是这个远程仓库的名字。你可以把它理解为远程仓库的一个别名，便于你以后引用这个远程仓库。在大多数情况下，&lt;code&gt;origin&lt;/code&gt; 是默认的名字，用于指向你克隆的或第一次关联的远程仓库。&lt;/p&gt;
&lt;p&gt;通过执行这条命令，你告诉 Git：**这个本地仓库的远程仓库是位于 GitHub 上的 &lt;code&gt;git@github.com:你的用户名/仓库名.git&lt;/code&gt; 这个位置，并且将它命名为 &lt;code&gt;origin&lt;/code&gt;**。&lt;/p&gt;
&lt;p&gt;之后，你可以使用类似 &lt;code&gt;git push origin master&lt;/code&gt; 的命令将本地的代码推送到 GitHub 上的远程仓库，或者使用 &lt;code&gt;git pull origin master&lt;/code&gt; 从 GitHub 上拉取更新。&lt;/p&gt;
&lt;h3 id=&#34;6-基本-Git-操作&#34;&gt;&lt;a href=&#34;#6-基本-Git-操作&#34; class=&#34;headerlink&#34; title=&#34;6. 基本 Git 操作&#34;&gt;&lt;/a&gt;6. 基本 Git 操作&lt;/h3&gt;&lt;h4 id=&#34;添加文件并提交&#34;&gt;&lt;a href=&#34;#添加文件并提交&#34; class=&#34;headerlink&#34; title=&#34;添加文件并提交&#34;&gt;&lt;/a&gt;添加文件并提交&lt;/h4&gt;&lt;p&gt;提交前的工作目录是工作区（文件操作的区域）&lt;/p&gt;
&lt;p&gt;添加文件到暂存区：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令用于将指定的文件添加到 Git 的暂存区（Stage）。暂存区是一个临时区域，你可以在其中暂时存放那些你准备提交到仓库的更改。文件在添加到暂存区之前，可以进行修改，而这些修改不会立即提交到仓库中。&lt;/p&gt;
&lt;p&gt;或添加所有文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提交到本地仓库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;提交信息&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这条命令用于将暂存区中的所有内容提交到本地 Git 仓库，并为此次提交添加一条消息。&lt;code&gt;-m &#34;提交信息&#34;&lt;/code&gt; 选项允许你在命令行中直接输入一条提交信息，而不需要进入编辑器。&lt;/p&gt;
&lt;h4 id=&#34;查看暂存区的文件&#34;&gt;&lt;a href=&#34;#查看暂存区的文件&#34; class=&#34;headerlink&#34; title=&#34;查看暂存区的文件&#34;&gt;&lt;/a&gt;查看暂存区的文件&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git status&lt;/code&gt; 命令会显示工作区和暂存区的状态，包括哪些文件被修改但尚未添加到暂存区，以及哪些文件已经被添加到暂存区。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; status&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出中，暂存区中的文件会显示在 &lt;code&gt;Changes to be committed&lt;/code&gt; 部分。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Changes to be committed:
  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;use &lt;span class=&#34;token string&#34;&gt;&#34;git restore --staged &amp;lt;file&amp;gt;...&#34;&lt;/span&gt; to unstage&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        modified:   index.html
        new file:   style.css&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这意味着 &lt;code&gt;index.html&lt;/code&gt; 文件已被修改并添加到暂存区，而 &lt;code&gt;style.css&lt;/code&gt; 是一个新文件，也已经被添加到暂存区。&lt;/p&gt;
&lt;h4 id=&#34;使用-git-diff-cached-查看暂存区的更改&#34;&gt;&lt;a href=&#34;#使用-git-diff-cached-查看暂存区的更改&#34; class=&#34;headerlink&#34; title=&#34;使用 git diff --cached 查看暂存区的更改&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git diff --cached&lt;/code&gt; 查看暂存区的更改&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git diff --cached&lt;/code&gt; 命令会显示暂存区中的更改细节。这个命令的输出与 &lt;code&gt;git diff&lt;/code&gt; 类似，但只显示暂存区中的内容，而不包括工作区中尚未添加到暂存区的修改。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--cached&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者你也可以使用 &lt;code&gt;git diff --staged&lt;/code&gt;，效果是一样的。&lt;/p&gt;
&lt;p&gt;这个命令将显示具体的代码差异，即哪些行被修改、添加或删除。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--git&lt;/span&gt; a/index.html b/index.html
index 83b2d7e&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;e39a4ff &lt;span class=&#34;token number&#34;&gt;100644&lt;/span&gt;
--- a/index.html
+++ b/index.html
@@ -12,7 +12,7 @@
   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;My Website&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/title&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/head&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
-  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, World&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;
+  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;Welcome to My Website&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/h&lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;1&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/body&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;/html&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;从-Git-暂存区移除文件&#34;&gt;&lt;a href=&#34;#从-Git-暂存区移除文件&#34; class=&#34;headerlink&#34; title=&#34;从 Git 暂存区移除文件&#34;&gt;&lt;/a&gt;从 Git 暂存区移除文件&lt;/h4&gt;&lt;h5 id=&#34;使用-git-restore-staged&#34;&gt;&lt;a href=&#34;#使用-git-restore-staged&#34; class=&#34;headerlink&#34; title=&#34;使用 git restore --staged&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git restore --staged&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;用于将文件从暂存区移除，并恢复到工作区的状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; restore &lt;span class=&#34;token parameter variable&#34;&gt;--staged&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;使用-git-reset&#34;&gt;&lt;a href=&#34;#使用-git-reset&#34; class=&#34;headerlink&#34; title=&#34;使用 git reset&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git reset&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;用于回滚或取消更改。使用 &lt;code&gt;git reset&lt;/code&gt; 也可以将文件从暂存区移除。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;移除所有文件&#34;&gt;&lt;a href=&#34;#移除所有文件&#34; class=&#34;headerlink&#34; title=&#34;移除所有文件&#34;&gt;&lt;/a&gt;移除所有文件&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把暂存区中的所有文件全部移除，同时保留它们在工作区中的修改。&lt;/p&gt;
&lt;h4 id=&#34;恢复工作区文件&#34;&gt;&lt;a href=&#34;#恢复工作区文件&#34; class=&#34;headerlink&#34; title=&#34;恢复工作区文件&#34;&gt;&lt;/a&gt;恢复工作区文件&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout -- test.txt
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token comment&#34;&gt;# 直接还原为最新版本&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;是用于丢弃工作区中对 &lt;code&gt;txt&lt;/code&gt; 文件的所有未提交更改的命令。具体来说，它将 &lt;code&gt;txt&lt;/code&gt; 文件恢复到最后一次提交时的状态。&lt;/p&gt;
&lt;h4 id=&#34;版本回退&#34;&gt;&lt;a href=&#34;#版本回退&#34; class=&#34;headerlink&#34; title=&#34;版本回退&#34;&gt;&lt;/a&gt;版本回退&lt;/h4&gt;&lt;h5 id=&#34;使用-git-reset-回退版本&#34;&gt;&lt;a href=&#34;#使用-git-reset-回退版本&#34; class=&#34;headerlink&#34; title=&#34;使用 git reset 回退版本&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git reset&lt;/code&gt; 回退版本&lt;/h5&gt;&lt;p&gt;&lt;code&gt;git reset&lt;/code&gt; 用于回退到某个特定的提交，并且可以选择性地影响暂存区和工作区。&lt;/p&gt;
&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--soft&lt;/code&gt;：仅移动 &lt;code&gt;HEAD&lt;/code&gt;，不影响暂存区和工作区。回退后的所有更改都保留在暂存区中。（HEAD为当前版本）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--mixed&lt;/code&gt;（默认选项）：移动 &lt;code&gt;HEAD&lt;/code&gt;，并重置暂存区，但保留工作区的更改。回退后的更改仍在工作区，但不在暂存区。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--hard&lt;/code&gt;：移动 &lt;code&gt;HEAD&lt;/code&gt;，同时重置暂存区和工作区。回退后的所有更改都被删除，不可恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假设你想回退到特定的提交 &lt;code&gt;abc123&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;软回退：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--soft&lt;/span&gt; abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把当前分支指针（&lt;code&gt;HEAD&lt;/code&gt;）移到 &lt;code&gt;abc123&lt;/code&gt;，但保持工作区和暂存区的所有更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;混合回退：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--mixed&lt;/span&gt; abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回退到 &lt;code&gt;abc123&lt;/code&gt;，并将暂存区重置为该提交的状态，但保留工作区的更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;硬回退：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将回退到 &lt;code&gt;abc123&lt;/code&gt;，并删除所有在 &lt;code&gt;abc123&lt;/code&gt; 之后的更改。这个操作不可逆，因此使用前请务必确认。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;使用-git-revert-进行安全回退&#34;&gt;&lt;a href=&#34;#使用-git-revert-进行安全回退&#34; class=&#34;headerlink&#34; title=&#34;使用 git revert 进行安全回退&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git revert&lt;/code&gt; 进行安全回退&lt;/h5&gt;&lt;p&gt;&lt;code&gt;git revert&lt;/code&gt; 用于生成一个新的提交，该提交会撤销指定的历史提交，而不会改变项目的提交历史。&lt;code&gt;git revert&lt;/code&gt; 是一种“安全”的回退方式，因为它保留了所有历史记录。&lt;/p&gt;
&lt;p&gt;假设你想撤销提交 &lt;code&gt;abc123&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; revert abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将生成一个新的提交，它的作用是撤销 &lt;code&gt;abc123&lt;/code&gt; 所做的更改，而不会影响 &lt;code&gt;abc123&lt;/code&gt; 之前或之后的其他提交。&lt;/p&gt;
&lt;h5 id=&#34;使用-git-checkout-回退到特定提交（仅查看）&#34;&gt;&lt;a href=&#34;#使用-git-checkout-回退到特定提交（仅查看）&#34; class=&#34;headerlink&#34; title=&#34;使用 git checkout 回退到特定提交（仅查看）&#34;&gt;&lt;/a&gt;使用 &lt;code&gt;git checkout&lt;/code&gt; 回退到特定提交（仅查看）&lt;/h5&gt;&lt;p&gt;&lt;code&gt;git checkout&lt;/code&gt; 主要用于切换分支或查看特定提交。你可以暂时回退到某个提交，但不修改当前分支的状态。&lt;/p&gt;
&lt;p&gt;假设你想查看 &lt;code&gt;abc123&lt;/code&gt; 提交的状态。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout abc123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把工作区和暂存区切换到 &lt;code&gt;abc123&lt;/code&gt; 提交的状态，但不会更改当前分支的指针。如果你想回到最新的状态，可以使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（假设你在 &lt;code&gt;master&lt;/code&gt; 分支上）&lt;/p&gt;
&lt;h5 id=&#34;如何找到提交的哈希值&#34;&gt;&lt;a href=&#34;#如何找到提交的哈希值&#34; class=&#34;headerlink&#34; title=&#34;如何找到提交的哈希值&#34;&gt;&lt;/a&gt;如何找到提交的哈希值&lt;/h5&gt;&lt;p&gt;在执行版本回退前，你需要知道要回退到的提交的哈希值（类似 &lt;code&gt;abc123&lt;/code&gt;）。可以使用以下命令查看提交历史：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log &lt;span class=&#34;token parameter variable&#34;&gt;--pretty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;oneline &lt;span class=&#34;token comment&#34;&gt;# 显示一行&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; HEAD^ &lt;span class=&#34;token comment&#34;&gt;# 回退上一个版本&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; HEAD^^ &lt;span class=&#34;token comment&#34;&gt;# 同理&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; reset &lt;span class=&#34;token parameter variable&#34;&gt;--hard&lt;/span&gt; HEAD~10&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将显示所有提交的日志，包括提交哈希、作者、日期和提交信息。&lt;/p&gt;
&lt;h4 id=&#34;删除文件&#34;&gt;&lt;a href=&#34;#删除文件&#34; class=&#34;headerlink&#34; title=&#34;删除文件&#34;&gt;&lt;/a&gt;删除文件&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git rm &amp;lt;file&amp;gt;&lt;/code&gt;和&lt;code&gt;git add&amp;lt;file&amp;gt;&lt;/code&gt;效果是一样的&lt;/p&gt;
&lt;h4 id=&#34;推送到远程仓库&#34;&gt;&lt;a href=&#34;#推送到远程仓库&#34; class=&#34;headerlink&#34; title=&#34;推送到远程仓库&#34;&gt;&lt;/a&gt;推送到远程仓库&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin master
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#查看远程库信息&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; remote &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; origin &lt;span class=&#34;token comment&#34;&gt;# 删除关联&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;克隆远程仓库&#34;&gt;&lt;a href=&#34;#克隆远程仓库&#34; class=&#34;headerlink&#34; title=&#34;克隆远程仓库&#34;&gt;&lt;/a&gt;克隆远程仓库&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone git@github.com:你的用户名/仓库名.git&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;拉取更新&#34;&gt;&lt;a href=&#34;#拉取更新&#34; class=&#34;headerlink&#34; title=&#34;拉取更新&#34;&gt;&lt;/a&gt;拉取更新&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; pull origin master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Git标签&#34;&gt;&lt;a href=&#34;#Git标签&#34; class=&#34;headerlink&#34; title=&#34;Git标签&#34;&gt;&lt;/a&gt;Git标签&lt;/h4&gt;&lt;p&gt;给某个提交打标签（通常用于发布版本）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; tag &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; v1.0 &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;版本1.0&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;推送标签到远程仓库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin &lt;span class=&#34;token parameter variable&#34;&gt;--tags&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-分支管理&#34;&gt;&lt;a href=&#34;#7-分支管理&#34; class=&#34;headerlink&#34; title=&#34;7. 分支管理&#34;&gt;&lt;/a&gt;7. 分支管理&lt;/h3&gt;&lt;h4 id=&#34;1-创建分支&#34;&gt;&lt;a href=&#34;#1-创建分支&#34; class=&#34;headerlink&#34; title=&#34;1. 创建分支&#34;&gt;&lt;/a&gt;1. 创建分支&lt;/h4&gt;&lt;p&gt;要创建一个新的分支，使用 &lt;code&gt;git branch&lt;/code&gt; 命令。新分支会基于你当前所在的分支创建。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会创建一个名为 &lt;code&gt;feature/new-feature&lt;/code&gt; 的新分支，但不会切换到该分支。&lt;/p&gt;
&lt;h4 id=&#34;2-切换分支&#34;&gt;&lt;a href=&#34;#2-切换分支&#34; class=&#34;headerlink&#34; title=&#34;2. 切换分支&#34;&gt;&lt;/a&gt;2. 切换分支&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;git checkout&lt;/code&gt; 或 &lt;code&gt;git switch&lt;/code&gt; 来切换到其他分支。在 Git 2.23 之后，Git 引入了 &lt;code&gt;git switch&lt;/code&gt;，它专门用于切换分支，更加直观和安全。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; switch feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将切换到 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支，并更新工作区和暂存区以匹配该分支的状态。&lt;/p&gt;
&lt;h4 id=&#34;3-创建并切换到新分支&#34;&gt;&lt;a href=&#34;#3-创建并切换到新分支&#34; class=&#34;headerlink&#34; title=&#34;3. 创建并切换到新分支&#34;&gt;&lt;/a&gt;3. 创建并切换到新分支&lt;/h4&gt;&lt;p&gt;可以使用 &lt;code&gt;git checkout -b&lt;/code&gt; 或 &lt;code&gt;git switch -c&lt;/code&gt; 在创建新分支的同时切换到该分支。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token parameter variable&#34;&gt;-b&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; switch &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支并立即切换到该分支。&lt;/p&gt;
&lt;h4 id=&#34;4-查看分支&#34;&gt;&lt;a href=&#34;#4-查看分支&#34; class=&#34;headerlink&#34; title=&#34;4. 查看分支&#34;&gt;&lt;/a&gt;4. 查看分支&lt;/h4&gt;&lt;p&gt;要查看所有分支，可以使用 &lt;code&gt;git branch&lt;/code&gt; 命令。当前所在的分支会以 &lt;code&gt;*&lt;/code&gt; 标记。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;  develop
* feature/new-feature
  master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这表明你当前在 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支上。&lt;/p&gt;
&lt;h4 id=&#34;5-合并分支&#34;&gt;&lt;a href=&#34;#5-合并分支&#34; class=&#34;headerlink&#34; title=&#34;5. 合并分支&#34;&gt;&lt;/a&gt;5. 合并分支&lt;/h4&gt;&lt;p&gt;当你完成了在某个分支上的工作并希望将其合并回主分支（例如 &lt;code&gt;master&lt;/code&gt; 或 &lt;code&gt;develop&lt;/code&gt;），你可以使用 &lt;code&gt;git merge&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;合并分支的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;切换到目标分支（通常是 master 或 develop）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合并工作分支&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; merge feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将把 &lt;code&gt;feature/new-feature&lt;/code&gt;分支的更改合并到 &lt;code&gt;master&lt;/code&gt;分支中。如果没有冲突，Git 会自动完成合并。如果有冲突，需要手动解决后再完成合并。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;6-处理合并冲突&#34;&gt;&lt;a href=&#34;#6-处理合并冲突&#34; class=&#34;headerlink&#34; title=&#34;6. 处理合并冲突&#34;&gt;&lt;/a&gt;6. 处理合并冲突&lt;/h4&gt;&lt;p&gt;当 Git 无法自动合并两个分支时，会提示合并冲突。此时，需要手动编辑冲突的文件，解决冲突后再继续合并。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开冲突文件，找到冲突标记：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-diff&#34; data-language=&#34;diff&#34;&gt;&lt;code class=&#34;language-diff&#34;&gt;&lt;span class=&#34;token deleted-arrow deleted&#34;&gt;&lt;span class=&#34;token prefix deleted&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token line&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
&lt;/span&gt;&lt;/span&gt;当前分支的代码
=======
被合并分支的代码
&lt;span class=&#34;token inserted-arrow inserted&#34;&gt;&lt;span class=&#34;token prefix inserted&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token line&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; feature/new-feature&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;手动解决冲突&lt;/strong&gt;，编辑文件使其符合预期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标记冲突为已解决并提交：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; 冲突文件
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;7-删除分支&#34;&gt;&lt;a href=&#34;#7-删除分支&#34; class=&#34;headerlink&#34; title=&#34;7. 删除分支&#34;&gt;&lt;/a&gt;7. 删除分支&lt;/h4&gt;&lt;p&gt;当一个分支的工作完成且不再需要时，可以将其删除。&lt;/p&gt;
&lt;p&gt;删除本地分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果分支尚未合并，Git 会阻止删除，以防丢失更改。要强制删除，可以使用 &lt;code&gt;-D&lt;/code&gt; 选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch &lt;span class=&#34;token parameter variable&#34;&gt;-D&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除远程分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin &lt;span class=&#34;token parameter variable&#34;&gt;--delete&lt;/span&gt; feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除远程仓库中的 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支。&lt;/p&gt;
&lt;h4 id=&#34;8-远程分支&#34;&gt;&lt;a href=&#34;#8-远程分支&#34; class=&#34;headerlink&#34; title=&#34;8. 远程分支&#34;&gt;&lt;/a&gt;8. 远程分支&lt;/h4&gt;&lt;p&gt;远程分支是托管在远程仓库中的分支，例如 GitHub、GitLab 上的分支。通常，当你推送分支到远程仓库时，该分支会自动在远程仓库中创建。&lt;/p&gt;
&lt;p&gt;查看远程分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将列出所有远程分支。&lt;/p&gt;
&lt;p&gt;推送本地分支到远程：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将 &lt;code&gt;feature/new-feature&lt;/code&gt; 分支推送到远程仓库的 &lt;code&gt;origin&lt;/code&gt;（默认远程名称）上。&lt;/p&gt;
&lt;h4 id=&#34;9-跟踪远程分支&#34;&gt;&lt;a href=&#34;#9-跟踪远程分支&#34; class=&#34;headerlink&#34; title=&#34;9. 跟踪远程分支&#34;&gt;&lt;/a&gt;9. 跟踪远程分支&lt;/h4&gt;&lt;p&gt;你可以将本地分支与远程分支关联，使推送和拉取更方便。&lt;/p&gt;
&lt;p&gt;创建跟踪分支：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; checkout &lt;span class=&#34;token parameter variable&#34;&gt;-b&lt;/span&gt; feature/new-feature origin/feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者，如果分支已经存在：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; branch --set-upstream-to&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;origin/feature/new-feature&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;10-更新远程分支&#34;&gt;&lt;a href=&#34;#10-更新远程分支&#34; class=&#34;headerlink&#34; title=&#34;10. 更新远程分支&#34;&gt;&lt;/a&gt;10. 更新远程分支&lt;/h4&gt;&lt;p&gt;要同步本地仓库与远程仓库的状态，使用 &lt;code&gt;git fetch&lt;/code&gt; 或 &lt;code&gt;git pull&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;拉取更新并合并：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; pull origin master&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将从远程 &lt;code&gt;master&lt;/code&gt; 分支拉取最新的更改并合并到当前分支。&lt;/p&gt;
&lt;p&gt;仅获取更新（不合并）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; fetch origin&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将更新本地的远程分支信息，但不合并更改。&lt;/p&gt;
&lt;h3 id=&#34;8-存储进度&#34;&gt;&lt;a href=&#34;#8-存储进度&#34; class=&#34;headerlink&#34; title=&#34;8.存储进度&#34;&gt;&lt;/a&gt;8.存储进度&lt;/h3&gt;&lt;p&gt;&lt;code&gt;git stash&lt;/code&gt; 允许你将当前的工作进度（包括工作区和暂存区的更改）暂时存储起来，以便可以在一个干净的工作区中进行其他操作。之后，你可以随时恢复这些存储的更改。&lt;/p&gt;
&lt;h4 id=&#34;1-基本命令：git-stash&#34;&gt;&lt;a href=&#34;#1-基本命令：git-stash&#34; class=&#34;headerlink&#34; title=&#34;1. 基本命令：git stash&#34;&gt;&lt;/a&gt;1. 基本命令：&lt;code&gt;git stash&lt;/code&gt;&lt;/h4&gt;&lt;h5 id=&#34;1-1-存储当前工作区和暂存区的更改&#34;&gt;&lt;a href=&#34;#1-1-存储当前工作区和暂存区的更改&#34; class=&#34;headerlink&#34; title=&#34;1.1 存储当前工作区和暂存区的更改&#34;&gt;&lt;/a&gt;1.1 存储当前工作区和暂存区的更改&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将当前分支的工作区和暂存区的所有更改存储起来，工作区将恢复到最后一次提交时的状态。存储的更改会被放入一个“栈”中，供以后恢复使用。&lt;/p&gt;
&lt;h5 id=&#34;1-2-存储时添加描述信息&#34;&gt;&lt;a href=&#34;#1-2-存储时添加描述信息&#34; class=&#34;headerlink&#34; title=&#34;1.2 存储时添加描述信息&#34;&gt;&lt;/a&gt;1.2 存储时添加描述信息&lt;/h5&gt;&lt;p&gt;你可以为存储的更改添加描述信息，以便更容易区分多个存储。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash save &lt;span class=&#34;token string&#34;&gt;&#34;描述信息&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-查看存储：git-stash-list&#34;&gt;&lt;a href=&#34;#2-查看存储：git-stash-list&#34; class=&#34;headerlink&#34; title=&#34;2. 查看存储：git stash list&#34;&gt;&lt;/a&gt;2. 查看存储：&lt;code&gt;git stash list&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会列出所有的存储记录，每一条记录都有唯一的索引和描述信息。输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;stash@&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;: WIP on master: 5d1e76a 修复首页布局
stash@&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;: WIP on master: 2a7b8d9 添加新功能&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;stash@{0}&lt;/code&gt; 是最顶部的存储记录，&lt;code&gt;stash@{1}&lt;/code&gt; 是次存储记录，依此类推。&lt;/p&gt;
&lt;h4 id=&#34;3-恢复存储：git-stash-pop-和-git-stash-apply&#34;&gt;&lt;a href=&#34;#3-恢复存储：git-stash-pop-和-git-stash-apply&#34; class=&#34;headerlink&#34; title=&#34;3. 恢复存储：git stash pop 和 git stash apply&#34;&gt;&lt;/a&gt;3. 恢复存储：&lt;code&gt;git stash pop&lt;/code&gt; 和 &lt;code&gt;git stash apply&lt;/code&gt;&lt;/h4&gt;&lt;h5 id=&#34;3-1-git-stash-pop&#34;&gt;&lt;a href=&#34;#3-1-git-stash-pop&#34; class=&#34;headerlink&#34; title=&#34;3.1 git stash pop&#34;&gt;&lt;/a&gt;3.1 &lt;code&gt;git stash pop&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash pop&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将最近存储的更改恢复到工作区和暂存区，并将该存储记录从列表中删除。如果有冲突，Git 会提示手动解决冲突。&lt;/p&gt;
&lt;h5 id=&#34;3-2-git-stash-apply&#34;&gt;&lt;a href=&#34;#3-2-git-stash-apply&#34; class=&#34;headerlink&#34; title=&#34;3.2 git stash apply&#34;&gt;&lt;/a&gt;3.2 &lt;code&gt;git stash apply&lt;/code&gt;&lt;/h5&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash apply&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将最近的存储恢复到工作区和暂存区，但不会删除该存储记录。如果你需要多次应用存储，使用 &lt;code&gt;apply&lt;/code&gt; 比 &lt;code&gt;pop&lt;/code&gt; 更合适。&lt;/p&gt;
&lt;h4 id=&#34;3-3-恢复特定存储&#34;&gt;&lt;a href=&#34;#3-3-恢复特定存储&#34; class=&#34;headerlink&#34; title=&#34;3.3 恢复特定存储&#34;&gt;&lt;/a&gt;3.3 恢复特定存储&lt;/h4&gt;&lt;p&gt;如果有多个存储记录，你可以指定恢复某个特定的存储。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; stash apply stash@&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会恢复索引为 &lt;code&gt;stash@{1}&lt;/code&gt; 的存储，并保留存储记录。&lt;/p&gt;
&lt;h3 id=&#34;9-常见的Git-Hooks&#34;&gt;&lt;a href=&#34;#9-常见的Git-Hooks&#34; class=&#34;headerlink&#34; title=&#34;9.常见的Git Hooks&#34;&gt;&lt;/a&gt;9.常见的Git Hooks&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pre-commit&lt;/strong&gt;：在&lt;code&gt;git commit&lt;/code&gt;命令执行之前触发。可以用来执行代码风格检查或静态分析，防止不合格的代码提交。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commit-msg&lt;/strong&gt;：在提交信息编辑完成后触发。用于检查提交信息是否符合团队规范（如强制使用特定格式）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;post-commit&lt;/strong&gt;：在提交完成后触发。可以用于执行通知或部署任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例：自动检查代码风格&#34;&gt;&lt;a href=&#34;#示例：自动检查代码风格&#34; class=&#34;headerlink&#34; title=&#34;示例：自动检查代码风格&#34;&gt;&lt;/a&gt;示例：自动检查代码风格&lt;/h4&gt;&lt;p&gt;假设你使用&lt;code&gt;pre-commit&lt;/code&gt;钩子来检查Python代码的风格是否符合PEP8标准。以下是一个简单的脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--cached&lt;/span&gt; --name-only --diff-filter&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ACM &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\.py$&#39;&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-z&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$files&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token assign-left variable&#34;&gt;unformatted&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;pycodestyle $files&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-z&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$unformatted&lt;/span&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Python代码风格检查失败:&#34;&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;$unformatted&lt;/span&gt;&#34;&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token builtin class-name&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将这个脚本保存为&lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;并赋予可执行权限：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x .git/hooks/pre-commit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="git" />
        <updated>2024-08-09T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/08/03/shell/</id>
        <title>shell</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/08/03/shell/"/>
        <content type="html">&lt;h1 id=&#34;shell&#34;&gt;&lt;a href=&#34;#shell&#34; class=&#34;headerlink&#34; title=&#34;shell&#34;&gt;&lt;/a&gt;shell&lt;/h1&gt;&lt;p&gt;Shell 是一种用于与操作系统进行交互的命令行界面。常见的 Shell 有 Bash（Bourne Again Shell）、Zsh、Ksh、以及 Windows 上的 PowerShell。Shell 不仅可以用于执行单个命令，还可以编写脚本来自动化任务。以下是一些基本的 Shell 命令和脚本编写的示例。&lt;/p&gt;
&lt;h2 id=&#34;基本-Shell-命令&#34;&gt;&lt;a href=&#34;#基本-Shell-命令&#34; class=&#34;headerlink&#34; title=&#34;基本 Shell 命令&#34;&gt;&lt;/a&gt;基本 Shell 命令&lt;/h2&gt;&lt;h3 id=&#34;文件和目录操作&#34;&gt;&lt;a href=&#34;#文件和目录操作&#34; class=&#34;headerlink&#34; title=&#34;文件和目录操作&#34;&gt;&lt;/a&gt;文件和目录操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ls&lt;/strong&gt;：列出目录内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 显示详细信息&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 显示所有文件，包括隐藏文件&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cd&lt;/strong&gt;：更改目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /path/to/directory
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回上一级目录&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;pwd&lt;/strong&gt;：显示当前工作目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;pwd&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mkdir&lt;/strong&gt;：创建目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; new_directory&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;rm&lt;/strong&gt;：删除文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; directory  &lt;span class=&#34;token comment&#34;&gt;# 删除目录及其内容&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cp&lt;/strong&gt;：复制文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; source_file destination
&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; source_directory destination  &lt;span class=&#34;token comment&#34;&gt;# 复制目录及其内容&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mv&lt;/strong&gt;：移动或重命名文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; old_name new_name
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; /path/to/destination&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件查看和编辑&#34;&gt;&lt;a href=&#34;#文件查看和编辑&#34; class=&#34;headerlink&#34; title=&#34;文件查看和编辑&#34;&gt;&lt;/a&gt;文件查看和编辑&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cat&lt;/strong&gt;：查看文件内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;less&lt;/strong&gt;：分页查看文件内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;less&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;head&lt;/strong&gt;：查看文件开头部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; filename  &lt;span class=&#34;token comment&#34;&gt;# 查看前 10 行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;tail&lt;/strong&gt;：查看文件末尾部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; filename  &lt;span class=&#34;token comment&#34;&gt;# 查看后 10 行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;nano&lt;/strong&gt;、&lt;strong&gt;vi&lt;/strong&gt;、&lt;strong&gt;vim&lt;/strong&gt;：文本编辑器&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;系统信息和管理&#34;&gt;&lt;a href=&#34;#系统信息和管理&#34; class=&#34;headerlink&#34; title=&#34;系统信息和管理&#34;&gt;&lt;/a&gt;系统信息和管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;echo&lt;/strong&gt;：打印消息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;whoami&lt;/strong&gt;：显示当前用户&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;whoami&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;top&lt;/strong&gt;：实时显示系统性能信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ps&lt;/strong&gt;：显示当前进程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; aux  &lt;span class=&#34;token comment&#34;&gt;# 显示所有进程&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;kill&lt;/strong&gt;：终止进程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; PID
&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-9&lt;/span&gt; PID  &lt;span class=&#34;token comment&#34;&gt;# 强制终止进程&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chmod&lt;/strong&gt;：更改文件权限&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x filename  &lt;span class=&#34;token comment&#34;&gt;# 使文件可执行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chown&lt;/strong&gt;：更改文件所有者&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; user:group filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络相关&#34;&gt;&lt;a href=&#34;#网络相关&#34; class=&#34;headerlink&#34; title=&#34;网络相关&#34;&gt;&lt;/a&gt;网络相关&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ping&lt;/strong&gt;：测试网络连通性&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ping&lt;/span&gt; example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;curl&lt;/strong&gt;：发送网络请求&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;wget&lt;/strong&gt;：下载文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; http://example.com/file&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;管道和重定向&#34;&gt;&lt;a href=&#34;#管道和重定向&#34; class=&#34;headerlink&#34; title=&#34;管道和重定向&#34;&gt;&lt;/a&gt;管道和重定向&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;**|**：管道，将一个命令的输出作为另一个命令的输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pattern&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;gt;**：重定向输出到文件（覆盖）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;gt;&amp;gt;**：重定向输出到文件（追加）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;lt;**：重定向输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; inputfile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设置变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;MY_VAR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$MY_VAR&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Shell-脚本&#34;&gt;&lt;a href=&#34;#Shell-脚本&#34; class=&#34;headerlink&#34; title=&#34;Shell 脚本&#34;&gt;&lt;/a&gt;Shell 脚本&lt;/h2&gt;&lt;p&gt;Shell 脚本是一组 Shell 命令的集合，通常用于自动化任务。以下是一个简单的 Shell 脚本示例：&lt;/p&gt;
&lt;h3 id=&#34;创建脚本文件&#34;&gt;&lt;a href=&#34;#创建脚本文件&#34; class=&#34;headerlink&#34; title=&#34;创建脚本文件&#34;&gt;&lt;/a&gt;创建脚本文件&lt;/h3&gt;&lt;p&gt;使用你喜欢的文本编辑器创建一个脚本文件，例如 &lt;code&gt;myscript.sh&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写脚本&#34;&gt;&lt;a href=&#34;#编写脚本&#34; class=&#34;headerlink&#34; title=&#34;编写脚本&#34;&gt;&lt;/a&gt;编写脚本&lt;/h3&gt;&lt;p&gt;在脚本文件中编写以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 打印消息&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is a simple shell script.&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 设置变量&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;NAME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Alice&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用变量&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, &lt;span class=&#34;token variable&#34;&gt;$NAME&lt;/span&gt;!&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 条件语句&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$NAME&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Alice&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome, Alice!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;You are not Alice.&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 循环&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Number: &lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 函数&lt;/span&gt;
&lt;span class=&#34;token function-name function&#34;&gt;my_function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is a function.&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 调用函数&lt;/span&gt;
my_function&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运行脚本&#34;&gt;&lt;a href=&#34;#运行脚本&#34; class=&#34;headerlink&#34; title=&#34;运行脚本&#34;&gt;&lt;/a&gt;运行脚本&lt;/h3&gt;&lt;p&gt;首先使脚本可执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后运行脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="命令" />
        <updated>2024-08-03T01:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/</id>
        <title>使用cloudflare的R2创建图床</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/07/27/shi-yong-cloudflare-de-r2-chuang-jian-tu-chuang/"/>
        <content type="html">&lt;h1 id=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;a href=&#34;#使用cloudflare的R2创建图床&#34; class=&#34;headerlink&#34; title=&#34;使用cloudflare的R2创建图床&#34;&gt;&lt;/a&gt;使用cloudflare的R2创建图床&lt;/h1&gt;&lt;h2 id=&#34;创建存储桶&#34;&gt;&lt;a href=&#34;#创建存储桶&#34; class=&#34;headerlink&#34; title=&#34;创建存储桶&#34;&gt;&lt;/a&gt;创建存储桶&lt;/h2&gt;&lt;p&gt;首先有一个cloudflare账号并且成功开通R2服务&lt;/p&gt;
&lt;p&gt;依次点击R2-&amp;gt;创建存储桶&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/8c361d6ac6f76ad87da98ce758a4261a.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入创建的桶，点击设置，下滑点击连接到域，example.com为你在cloudflare上托管的域名，会自动添加记录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e02d80f0f528eb474a327a3ee2aac1cc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;等待初始化成功就可以上传图片了并通过url访问了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/592642fec58d64822ca9dd28855095c9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上传图片后点进去就能看到url&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/33de127f3053a3537919fae0a5b35c61.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装PicGo&#34;&gt;&lt;a href=&#34;#安装PicGo&#34; class=&#34;headerlink&#34; title=&#34;安装PicGo&#34;&gt;&lt;/a&gt;安装PicGo&lt;/h2&gt;&lt;p&gt;这个用于管理图片上传和浏览&lt;/p&gt;
&lt;p&gt;github仓库地址&lt;a href=&#34;https://github.com/Molunerfinn/PicGo&#34;&gt;Releases · Molunerfinn/PicGo (github.com)&lt;/a&gt;下载安装&lt;/p&gt;
&lt;p&gt;要先下载node.js环境，看往期文章&lt;/p&gt;
&lt;p&gt;完成后打开软件进入插件搜索&lt;code&gt;S3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/9db03c02e835473d6d06852a17c625b4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;配置picgo&lt;/p&gt;
&lt;p&gt;先创建API令牌&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/658d705739daffbba58141c804c382d5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后像这样设置，创建完成记得保存密钥&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3532bc2477a125fef6ac1db367b602d0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;保存密钥后关闭&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/5d17e288bc348b17904a78a2b0d48ae0.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开软件，+号添加配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/22d21e489a73ad311ebd53ec422faee8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/3ca6c26f83e255df9dce765281e8a034.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到这个S3API&lt;/p&gt;
&lt;p&gt;如下填写&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/e2d3e9e11a19b0a3e1e2c6a7538ee923.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://images.dadream.eu.org/images/2024/07/2b5992966ed9d88fe80c8f1b8d242fac.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="教程" />
        <updated>2024-07-27T07:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://0xdadream.github.io/2024/07/27/powershell-ti-quan/</id>
        <title>powershell提权</title>
        <link rel="alternate" href="https://0xdadream.github.io/2024/07/27/powershell-ti-quan/"/>
        <content type="html">&lt;h1 id=&#34;powershell提权&#34;&gt;&lt;a href=&#34;#powershell提权&#34; class=&#34;headerlink&#34; title=&#34;powershell提权&#34;&gt;&lt;/a&gt;powershell提权&lt;/h1&gt;&lt;p&gt;安装gsudo&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;winget &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; gerardog.gsudo&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gerardog.github.io/gsudo/docs/install&#34;&gt;How to Install | gsudo Documentation (gerardog.github.io)&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="windows" />
        <category term="tools" />
        <updated>2024-07-27T02:25:00.000Z</updated>
    </entry>
</feed>
