{
    "version": "https://jsonfeed.org/version/1",
    "title": "逐梦 • All posts by \"语言\" category",
    "description": "Welcome to my blog",
    "home_page_url": "https://0xdadream.github.io",
    "items": [
        {
            "id": "https://0xdadream.github.io/2021/10/10/python-study/",
            "url": "https://0xdadream.github.io/2021/10/10/python-study/",
            "title": "python学习",
            "date_published": "2021-10-09T18:11:00.000Z",
            "content_html": "<h1 id=\"python学习\"><a href=\"#python学习\" class=\"headerlink\" title=\"python学习\"></a>python学习</h1><h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><h3 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h3><ol>\n<li>首字母必须是字母或者下划线<code>_</code></li>\n<li>其他部分由字母、数字、下划线组成</li>\n<li>大小写敏感</li>\n<li>python3 可中文也可非ASCII标识符</li>\n</ol>\n<h3 id=\"python保留字\"><a href=\"#python保留字\" class=\"headerlink\" title=\"python保留字\"></a>python保留字</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> keyword\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>keyword<span class=\"token punctuation\">.</span>kwlist<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token string\">'False'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'None'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'True'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'and'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'as'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'assert'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'async'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'await'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'break'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'continue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'def'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'del'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'elif'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'else'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'except'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'finally'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'for'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'from'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'global'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'if'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'import'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'in'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lambda'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nonlocal'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'not'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'or'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pass'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'raise'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'return'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'try'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'while'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'with'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yield'</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>python中<code>'</code>和<code>\"</code>一样</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#单行注释\n\n'''\n多行注释\n'''\n\n\"\"\"\n多行注释\n\"\"\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"缩进\"><a href=\"#缩进\" class=\"headerlink\" title=\"缩进\"></a>缩进</h3><p>python不使用大括号，使用缩进对齐</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> expression <span class=\"token punctuation\">:</span>\n    XXX\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n    XXX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"多行连接\"><a href=\"#多行连接\" class=\"headerlink\" title=\"多行连接\"></a>多行连接</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> \\\n\t <span class=\"token number\">2</span> <span class=\"token operator\">+</span> \\\n    <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#6</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数字类型\"><a href=\"#数字类型\" class=\"headerlink\" title=\"数字类型\"></a>数字类型</h3><p>python中数字有四种类型：整数、布尔型、浮点数和复数</p>\n<h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><ol>\n<li>python中单引号、双引号使用完全相同</li>\n<li>转义字符<code>\\</code></li>\n<li><code>r'test\\ntest'</code>，<code>r</code>可以使<code>\\n</code>不转义</li>\n<li><code>\"this \" \"is \" \"string\"</code>输出<code>this is string</code></li>\n<li><code>+</code>运算符连接字符，<code>*</code>运算符重复字符</li>\n<li>检索从左到右从0开始，从右到左从-1开始</li>\n<li>一个字符就是一个长度为1的字符串</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">\"this \"</span> <span class=\"token string\">\"is \"</span> <span class=\"token string\">\"string\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is string</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is stringthis is string</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var <span class=\"token operator\">+</span> <span class=\"token string\">'111'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is string111</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssss\\nsssss'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ssss</span>\n<span class=\"token comment\"># sssss</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"ssss\\nssss\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ssss\\nssss</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is string</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is string</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is strin</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ti ssrn</span>\n<span class=\"token triple-quoted-string string\">'''\nthis is string\nthis is stringthis is string\nthis is string111\nssss\nsssss\nssss\\nssss\nthis is string\nthis is string\nthis is strin\nti ssrn\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"一行多条语句\"><a href=\"#一行多条语句\" class=\"headerlink\" title=\"一行多条语句\"></a>一行多条语句</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">;</span> x <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">;</span> sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\ntest\n\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"多个语句组成代码组\"><a href=\"#多个语句组成代码组\" class=\"headerlink\" title=\"多个语句组成代码组\"></a>多个语句组成代码组</h3><p>首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> expression <span class=\"token punctuation\">:</span> \n   suite\n<span class=\"token keyword\">elif</span> expression <span class=\"token punctuation\">:</span> \n   suite \n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span> \n   suite<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token comment\"># 换行输出</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'---------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 不换行输出</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以空格分隔</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\ntest\n1\n---------\ntest 1 \n\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导入模块\"><a href=\"#导入模块\" class=\"headerlink\" title=\"导入模块\"></a>导入模块</h3><p>在 python 用 <strong>import</strong> 或者 <strong>from…import</strong> 来导入相应的模块</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> sys <span class=\"token keyword\">import</span> argv<span class=\"token punctuation\">,</span>path<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><p>python的变量就是对象</p>\n<p>python变量直接赋值，不需要声明</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span>\nc <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"多个变量赋值\"><a href=\"#多个变量赋值\" class=\"headerlink\" title=\"多个变量赋值\"></a>多个变量赋值</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span>c <span class=\"token operator\">=</span><span class=\"token number\">1</span>\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"不可变数据\"><a href=\"#不可变数据\" class=\"headerlink\" title=\"不可变数据\"></a>不可变数据</h3><h4 id=\"Number-数字\"><a href=\"#Number-数字\" class=\"headerlink\" title=\"Number(数字)\"></a>Number(数字)</h4><p>支持int、float、bool、complex（复数）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">3j</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n&lt;class 'int'&gt; &lt;class 'float'&gt; &lt;class 'bool'&gt; &lt;class 'complex'&gt;\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>type()</code>函数查询变量的类型</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">111</span>\n<span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nTrue\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>isinstance(x,x)</code>对比对象类型</p>\n<ul>\n<li><code>type()</code>不会认为子类是一种父类类型</li>\n<li><code>isinstance()</code>会认为子类是一种父类类型</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> A<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> A<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n<span class=\"token triple-quoted-string string\">'''\nTrue\nTrue\nTrue\nFalse\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"bool值处理\"><a href=\"#bool值处理\" class=\"headerlink\" title=\"bool值处理\"></a>bool值处理</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">issubclass</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1</span>\nvar1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var1 <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\nvar2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var2 <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n<span class=\"token triple-quoted-string string\">'''\nTrue\nTrue\nTrue\n2\n1\nFalse\nFalse\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除对象\"><a href=\"#删除对象\" class=\"headerlink\" title=\"删除对象\"></a>删除对象</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">del</span> a\n<span class=\"token keyword\">del</span> var1<span class=\"token punctuation\">,</span>var2\n\n<span class=\"token triple-quoted-string string\">'''\n再次print会报错\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"数值运算\"><a href=\"#数值运算\" class=\"headerlink\" title=\"数值运算\"></a>数值运算</h5><ol>\n<li>除法<code>/</code>返回一个浮点数，<code>//</code>返回一个整数</li>\n<li><code>*</code>乘法，<code>**</code>乘方</li>\n<li><code>%</code>取余</li>\n<li>混合运算时整型转换为浮点型</li>\n<li>复数使用<code>complex(a,b)</code>表示<code>a+bj</code></li>\n</ol>\n<h4 id=\"String-字符串\"><a href=\"#String-字符串\" class=\"headerlink\" title=\"String(字符串)\"></a>String(字符串)</h4><h5 id=\"字符串截取格式\"><a href=\"#字符串截取格式\" class=\"headerlink\" title=\"字符串截取格式\"></a>字符串截取格式</h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">变量名<span class=\"token punctuation\">[</span>头下标<span class=\"token punctuation\">:</span>尾下标<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>从前面索引  0 1 2 3 4 ……</p>\n<p>从后面索引  -1 -2 -3 -4 -5 ……</p>\n<p>从前面截取 :1 2 3 4:</p>\n<p>从后面截取 :-4 -3 -2 -1:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># t</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有字符</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第一个到倒数第二个</span>\n<span class=\"token comment\"># tes</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token comment\"># 输出第三个到第四个</span>\n<span class=\"token comment\"># st</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># testtest</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span> <span class=\"token operator\">+</span> <span class=\"token string\">'re'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># testre</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># t t</span>\n<span class=\"token triple-quoted-string string\">'''\ntest\nt\ntest\ntes\nst\ntesttest\ntestre\nt t\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>python字符串不能改变，诸如<code>str[n]='?'</code>的赋值会报错</p>\n<h4 id=\"Tuple-元组\"><a href=\"#Tuple-元组\" class=\"headerlink\" title=\"Tuple(元组)\"></a>Tuple(元组)</h4><ol>\n<li>元组元素不能更改</li>\n<li>元组写在小括号内，以<code>,</code>分隔</li>\n<li>各元素类型可以不同</li>\n<li>元组的索引切片操作与string一样</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">tuple</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dou'</span><span class=\"token punctuation\">)</span>\ntuple2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test2'</span><span class=\"token punctuation\">)</span>\ntuple3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 单个元素后面加逗号</span>\ntuple4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空元组</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuple4<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ()</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuple3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1,)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第一个元素</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第二个到第三个元素</span>\n<span class=\"token comment\"># (1.2, 'test')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有元素</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有元素</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第三个及前面的所有</span>\n<span class=\"token comment\"># (1, 1.2, 'test')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou', 1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span> <span class=\"token operator\">+</span> tuple2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou', 1, 'test2')</span>\n<span class=\"token triple-quoted-string string\">'''\n()\n(1, 1.2, 'test', 'dou')\n(1,)\n1\n(1.2, 'test')\n(1, 1.2, 'test', 'dou')\n(1, 1.2, 'test', 'dou')\n(1, 1.2, 'test')\n(1, 1.2, 'test', 'dou', 1, 1.2, 'test', 'dou')\n(1, 1.2, 'test', 'dou', 1, 'test2')\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"可变数据\"><a href=\"#可变数据\" class=\"headerlink\" title=\"可变数据\"></a>可变数据</h3><h4 id=\"List-列表\"><a href=\"#List-列表\" class=\"headerlink\" title=\"List(列表)\"></a>List(列表)</h4><ol>\n<li>索引截取方式与元组相同</li>\n<li>截取后成为一个新列表</li>\n<li>元素在打方括号中，以逗号分隔</li>\n<li>列表的元素可改变</li>\n<li>元素可以是元组</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">]</span>\nlist2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出完整列表</span>\n<span class=\"token comment\"># ['test', 1, 1.2, 999]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出列表第一个元素</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 从第二个开始输出到第三个元素</span>\n<span class=\"token comment\"># [1, 1.2]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出从第三个元素开始的所有元素</span>\n<span class=\"token comment\"># [1.2, 999]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list2 <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出两次列表</span>\n<span class=\"token comment\"># [1, 'test', 1, 'test']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span> <span class=\"token operator\">+</span> list2<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接列表</span>\n<span class=\"token comment\"># ['test', 1, 1.2, 999, 1, 'test']</span>\nlist3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 3, 4, 5]</span>\nlist3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>  <span class=\"token comment\"># 修改第一元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['test', 2, 3, 4, 5]</span>\nlist3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 修改第三个到第四元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['test', 2, 22, 33, 5]</span>\nlist4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 3, 4, 5]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 第一个-1表示从最后一个开始</span>\n<span class=\"token comment\"># 中间为空表示移动到列表末,最后一个-1为步长,-表示逆向</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [4, 3, 2]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [5]</span>\n<span class=\"token triple-quoted-string string\">'''\n['test', 1, 1.2, 999]\ntest\n[1, 1.2]\n[1.2, 999]\n[1, 'test', 1, 'test']\n['test', 1, 1.2, 999, 1, 'test']\n[1, 2, 3, 4, 5]\n['test', 2, 3, 4, 5]\n['test', 2, 22, 33, 5]\n[1, 2, 3, 4, 5]\n[5, 4, 3, 2, 1]\n[4, 3, 2]\n[5]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Set-集合\"><a href=\"#Set-集合\" class=\"headerlink\" title=\"Set(集合)\"></a>Set(集合)</h4><p>创建格式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">parame <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value1<span class=\"token punctuation\">,</span> value2<span class=\"token punctuation\">,</span> ……<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">or</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建一个空集合</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">sites <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sites<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出集合，重复的元素被自动去掉</span>\n<span class=\"token comment\"># {1, '123', 'test'}</span>\n<span class=\"token comment\"># 成员测试</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'test'</span> <span class=\"token keyword\">in</span> sites<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test 在集合中'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test 不在集合中'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># set可以进行集合运算</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abracadabra'</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alacazam'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 的差集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 的并集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 的交集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 中不同时存在的元素</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{1, '123', 'test'}\ntest 在集合中\n{'a', 'b', 'r', 'c', 'd'}\n{'b', 'd', 'r'}\n{'a', 'm', 'r', 'b', 'c', 'd', 'l', 'z'}\n{'c', 'a'}\n{'d', 'l', 'r', 'm', 'z', 'b'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Dictionary-字典\"><a href=\"#Dictionary-字典\" class=\"headerlink\" title=\"Dictionary(字典)\"></a>Dictionary(字典)</h4><ol>\n<li>字典是无序的，依靠键值对来存取</li>\n<li>字典用<code>{}</code>标识， <code>键(key) : 值(value)</code></li>\n<li><code>key</code>不可变，并且是唯一的</li>\n<li>使用<code>{}</code>创建空字典</li>\n</ol>\n<p>创建字典</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\"># 空字典</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {2: 'test', 'test': 1}</span>\ndict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'dddd'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'test': 1, 1: 'dddd'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出2,test的值</span>\n<span class=\"token comment\"># test 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有键名</span>\n<span class=\"token comment\"># dict_keys(['test', 1])</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有键值</span>\n<span class=\"token comment\"># dict_values([1, 'dddd'])</span>\n<span class=\"token triple-quoted-string string\">'''\n{2: 'test', 'test': 1}\n{'test': 1, 1: 'dddd'}\ntest 1\ndict_keys(['test', 1])\ndict_values([1, 'dddd'])\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据类型转换\"><a href=\"#数据类型转换\" class=\"headerlink\" title=\"数据类型转换\"></a>数据类型转换</h3><h5 id=\"class-int-x-base-10\"><a href=\"#class-int-x-base-10\" class=\"headerlink\" title=\"class int(x, base=10)\"></a><code>class int(x, base=10)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># x为数值型时,不写base,直接取整,x为str时,base为转换前的进制</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">11.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n3\n-11\n18\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-float-x\"><a href=\"#class-float-x\" class=\"headerlink\" title=\"class float([x])\"></a><code>class float([x])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将整数和字符串转换成浮点数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">11.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n1.0\n-11.2\n12.0\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-complex-real-imag\"><a href=\"#class-complex-real-imag\" class=\"headerlink\" title=\"class complex([real[, imag]])\"></a><code>class complex([real[, imag]])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 创建一个复数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">2j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1+3j'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n(1+0j)\n(1+2j)\n(1+3j)\n(1+2j)\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-str-object\"><a href=\"#class-str-object\" class=\"headerlink\" title=\"class str(object='')\"></a><code>class str(object='')</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将对象转化为适于人阅读的形式</span>\ns <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"repr-object\"><a href=\"#repr-object\" class=\"headerlink\" title=\"repr(object)\"></a><code>repr(object)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将对象转化为供解释器读取的形式</span>\n\ndad <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>dad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n'test'\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"eval-expression-globals-locals\"><a href=\"#eval-expression-globals-locals\" class=\"headerlink\" title=\"eval(expression[, globals[, locals]])\"></a><code>eval(expression[, globals[, locals]])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 用来执行一个字符串表达式，并返回表达式的值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pow(2,2)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2 * 2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n4\n4\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"tuple-iterable\"><a href=\"#tuple-iterable\" class=\"headerlink\" title=\"tuple( iterable )\"></a><code>tuple( iterable )</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将可迭代系列（如列表）转换为元组</span>\n<span class=\"token comment\"># tuple() 可以将字符串，列表，字典，集合转化为元组</span>\nlist1<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'34'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'56'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'78'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ('12', '34', '56', '78')</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"list-seq\"><a href=\"#list-seq\" class=\"headerlink\" title=\"list( seq )\"></a><code>list( seq )</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 用于将元组或字符串转换为列表</span>\naTuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">)</span>\nlist1 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>aTuple<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"列表元素 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [123, 'Google', 'Runoob', 'Taobao']</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span>\nlist2<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"列表元素 : \"</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表元素 :  ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-set-iterable\"><a href=\"#class-set-iterable\" class=\"headerlink\" title=\"class set([iterable])\"></a><code>class set([iterable])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># set() 函数创建一个无序不重复元素集</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-dict-kwarg\"><a href=\"#class-dict-kwarg\" class=\"headerlink\" title=\"class dict(**kwarg)\"></a><code>class dict(**kwarg)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\nclass dict(**kwarg)\nclass dict(mapping, **kwarg)\nclass dict(iterable, **kwarg)\n创建一个字典\n'''</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> t<span class=\"token operator\">=</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 传入关键字</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 映射函数方式来构造字典</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 可迭代对象方式来构造字典</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-frozenset-iterable\"><a href=\"#class-frozenset-iterable\" class=\"headerlink\" title=\"class frozenset([iterable])\"></a><code>class frozenset([iterable])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 返回一个冻结的集合，冻结后集合不能再添加或删除任何元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">frozenset</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"chr-i\"><a href=\"#chr-i\" class=\"headerlink\" title=\"chr(i)\"></a><code>chr(i)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 返回值是当前整数对应的 ASCII 字符</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#0</span>\n<span class=\"token comment\">#0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"ord-c\"><a href=\"#ord-c\" class=\"headerlink\" title=\"ord(c)\"></a><code>ord(c)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 返回对应的 ASCII 数值，或者 Unicode 数值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#97</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"hex-x\"><a href=\"#hex-x\" class=\"headerlink\" title=\"hex(x)\"></a><code>hex(x)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将10进制整数转换成16进制，以字符串形式表示</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#0x14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"oct-x\"><a href=\"#oct-x\" class=\"headerlink\" title=\"oct(x)\"></a><code>oct(x)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将一个整数转换成 8 进制字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">oct</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#0o12</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"注释-1\"><a href=\"#注释-1\" class=\"headerlink\" title=\"注释\"></a>注释</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 单行注释</span>\n\n<span class=\"token triple-quoted-string string\">'''\n多行注释\n'''</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n多行注释\n\"\"\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 7</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 12</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1.3333333333333333</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">%</span> b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">**</span> b  <span class=\"token comment\"># 乘方</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 64</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">//</span> b  <span class=\"token comment\"># 取整除</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\n\n<span class=\"token triple-quoted-string string\">'''\nc 的值为： 7\nc 的值为： 1\nc 的值为： 12\nc 的值为： 1.3333333333333333\nc 的值为： 1\nc 的值为： 64\nc 的值为： 2\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 不等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 不等于 b</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 不等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 不等于 b</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 小于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 大于等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 大于等于 b</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 大于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 小于等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 大于 b</span>\n<span class=\"token comment\"># 修改变量 a 和 b 的值</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 小于等于 b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 大于  b\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 小于等于 b</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">&gt;=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b 大于等于 a\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b 小于 a\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># b 大于等于 a    </span>\n<span class=\"token triple-quoted-string string\">'''\na 不等于 b\na 不等于 b\na 大于等于 b\na 大于 b\na 小于等于 b\nb 大于等于 a\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 31</span>\nc <span class=\"token operator\">+=</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 52</span>\nc <span class=\"token operator\">*=</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1092</span>\nc <span class=\"token operator\">/=</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 52.0</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nc <span class=\"token operator\">%=</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\nc <span class=\"token operator\">**=</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2097152</span>\nc <span class=\"token operator\">//=</span> a\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 99864</span>\n<span class=\"token triple-quoted-string string\">'''\nc 的值为： 31\nc 的值为： 52\nc 的值为： 1092\nc 的值为： 52.0\nc 的值为： 2\nc 的值为： 2097152\nc 的值为： 99864\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">60</span>  <span class=\"token comment\"># 60 = 0011 1100</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">13</span>  <span class=\"token comment\"># 13 = 0000 1101</span>\nc <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">&amp;</span> b  <span class=\"token comment\"># 12 = 0000 1100</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 12</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> b  <span class=\"token comment\"># 61 = 0011 1101</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 61</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">^</span> b  <span class=\"token comment\"># 49 = 0011 0001</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 49</span>\nc <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>a  <span class=\"token comment\"># -61 = 1100 0011</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># -61</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span>  <span class=\"token comment\"># 240 = 1111 0000</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 240</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">2</span>  <span class=\"token comment\"># 15 = 0000 1111</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c 的值为：\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 15</span>\n<span class=\"token triple-quoted-string string\">'''\nc 的值为： 12\nc 的值为： 61\nc 的值为： 49\nc 的值为： -61\nc 的值为： 240\nc 的值为： 15\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">and</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 有一个不为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 和 b 都为 true</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">or</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都为 true，或其中一个变量为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都不为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 和 b 都为 true，或其中一个变量为 true</span>\n<span class=\"token comment\"># 修改变量 a 的值</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">and</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 有一个不为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 和 b 有一个不为 true</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">or</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都为 true，或其中一个变量为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都不为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 和 b 都为 true，或其中一个变量为 true</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">and</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都为 false，或其中一个变量为 false\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 和 b 都为 true\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 和 b 都为 false，或其中一个变量为 false    </span>\n<span class=\"token triple-quoted-string string\">'''\n变量 a 和 b 都为 true\n变量 a 和 b 都为 true，或其中一个变量为 true\n变量 a 和 b 有一个不为 true\n变量 a 和 b 都为 true，或其中一个变量为 true\n变量 a 和 b 都为 false，或其中一个变量为 false\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"成员运算符\"><a href=\"#成员运算符\" class=\"headerlink\" title=\"成员运算符\"></a>成员运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n<span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 在给定的列表中 list 中\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 不在给定的列表中 list 中\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 不在给定的列表中 list 中</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 b 不在给定的列表中 list 中\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 b 在给定的列表中 list 中\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 b 不在给定的列表中 list 中</span>\n<span class=\"token comment\"># 修改变量 a 的值</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 在给定的列表中 list 中\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量 a 不在给定的列表中 list 中\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变量 a 在给定的列表中 list 中</span>\n<span class=\"token triple-quoted-string string\">'''\n变量 a 不在给定的列表中 list 中\n变量 b 不在给定的列表中 list 中\n变量 a 在给定的列表中 list 中\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"身份运算符\"><a href=\"#身份运算符\" class=\"headerlink\" title=\"身份运算符\"></a>身份运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 没有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 和 b 有相同的标识</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 没有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 和 b 有相同的标识</span>\n<span class=\"token comment\"># 修改变量 b 的值</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 没有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 和 b 没有相同的标识</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 没有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 和 b 有相同的标识\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a 和 b 没有相同的标识    </span>\n<span class=\"token triple-quoted-string string\">'''\na 和 b 有相同的标识\na 和 b 有相同的标识\na 和 b 没有相同的标识\na 和 b 没有相同的标识\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h3><table>\n<thead>\n<tr>\n<th align=\"left\">运算符</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">**</td>\n<td align=\"left\">指数 (最高优先级)</td>\n</tr>\n<tr>\n<td align=\"left\">~ + -</td>\n<td align=\"left\">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td>\n</tr>\n<tr>\n<td align=\"left\">* / % //</td>\n<td align=\"left\">乘，除，求余数和取整除</td>\n</tr>\n<tr>\n<td align=\"left\">+ -</td>\n<td align=\"left\">加法减法</td>\n</tr>\n<tr>\n<td align=\"left\">&gt;&gt; &lt;&lt;</td>\n<td align=\"left\">右移，左移运算符</td>\n</tr>\n<tr>\n<td align=\"left\">&amp;</td>\n<td align=\"left\">位 ‘AND’</td>\n</tr>\n<tr>\n<td align=\"left\">^ |</td>\n<td align=\"left\">位运算符</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;= &lt; &gt; &gt;=</td>\n<td align=\"left\">比较运算符</td>\n</tr>\n<tr>\n<td align=\"left\">== !=</td>\n<td align=\"left\">等于运算符</td>\n</tr>\n<tr>\n<td align=\"left\">= %= /= //= -= += *= **=</td>\n<td align=\"left\">赋值运算符</td>\n</tr>\n<tr>\n<td align=\"left\">is is not</td>\n<td align=\"left\">身份运算符</td>\n</tr>\n<tr>\n<td align=\"left\">in not in</td>\n<td align=\"left\">成员运算符</td>\n</tr>\n<tr>\n<td align=\"left\">not and or</td>\n<td align=\"left\">逻辑运算符</td>\n</tr>\n</tbody></table>\n<h2 id=\"数字-Number\"><a href=\"#数字-Number\" class=\"headerlink\" title=\"数字(Number)\"></a>数字(Number)</h2><p>直接创建，不用特别定义类型</p>\n<p>支持int、float、bool、complex（复数）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nvar1 <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1 test</span>\n<span class=\"token keyword\">del</span> var<span class=\"token punctuation\">,</span> var1 <span class=\"token comment\"># 删除对象</span>\n<span class=\"token comment\"># 8或者16进制表示数字</span>\nvar <span class=\"token operator\">=</span> <span class=\"token number\">0x99</span>\nvar1 <span class=\"token operator\">=</span> <span class=\"token number\">0o43</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 153 35</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">6.3</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 与浮点数运算结果为浮点数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 乘方</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">6.5</span> <span class=\"token operator\">//</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 向下取整</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>  <span class=\"token comment\"># 赋值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 取余</span>\n<span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 变量_是上一个表达式的值</span>\n\n<span class=\"token triple-quoted-string string\">'''\n4\n2\n6\n2.1\n9\n2.0\n1\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据类型转换函数\"><a href=\"#数据类型转换函数\" class=\"headerlink\" title=\"数据类型转换函数\"></a>数据类型转换函数</h3><h5 id=\"class-int-x-base-10-1\"><a href=\"#class-int-x-base-10-1\" class=\"headerlink\" title=\"class int(x, base=10)\"></a><code>class int(x, base=10)</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># x为数值型时,不写base,直接取整,x为str时,base为转换前的进制</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">11.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n3\n-11\n18\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-float-x-1\"><a href=\"#class-float-x-1\" class=\"headerlink\" title=\"class float([x])\"></a><code>class float([x])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 将整数和字符串转换成浮点数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">11.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n1.0\n-11.2\n12.0\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"class-complex-real-imag-1\"><a href=\"#class-complex-real-imag-1\" class=\"headerlink\" title=\"class complex([real[, imag]])\"></a><code>class complex([real[, imag]])</code></h5><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 创建一个复数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">2j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1+3j'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n(1+0j)\n(1+2j)\n(1+3j)\n(1+2j)\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数学函数\"><a href=\"#数学函数\" class=\"headerlink\" title=\"数学函数\"></a>数学函数</h3><table>\n<thead>\n<tr>\n<th><a href=\"https://www.runoob.com/python3/python3-func-number-abs.html\">abs(x)</a></th>\n<th>返回数字的绝对值，如abs(-10) 返回 10</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-ceil.html\">ceil(x)</a></td>\n<td>返回数字的上入整数，如math.ceil(4.1) 返回 5</td>\n</tr>\n<tr>\n<td>cmp(x, y)</td>\n<td>如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1。 <strong>Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换</strong>。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-exp.html\">exp(x)</a></td>\n<td>返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-fabs.html\">fabs(x)</a></td>\n<td>返回数字的绝对值，如math.fabs(-10) 返回10.0</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-floor.html\">floor(x)</a></td>\n<td>返回数字的下舍整数，如math.floor(4.9)返回 4</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-log.html\">log(x)</a></td>\n<td>如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-log10.html\">log10(x)</a></td>\n<td>返回以10为基数的x的对数，如math.log10(100)返回 2.0</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-max.html\">max(x1, x2,…)</a></td>\n<td>返回给定参数的最大值，参数可以为序列。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-min.html\">min(x1, x2,…)</a></td>\n<td>返回给定参数的最小值，参数可以为序列。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-modf.html\">modf(x)</a></td>\n<td>返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-pow.html\">pow(x, y)</a></td>\n<td>x**y 运算后的值。</td>\n</tr>\n<tr>\n<td>[round(x <a href=\"https://www.runoob.com/python3/python3-func-number-round.html\">,n])</a></td>\n<td>返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。<strong>其实准确的说是保留值将保留到离上一位更近的一端。</strong></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/python3/python3-func-number-sqrt.html\">sqrt(x)</a></td>\n<td>返回数字x的平方根。</td>\n</tr>\n</tbody></table>\n<h3 id=\"随机数函数\"><a href=\"#随机数函数\" class=\"headerlink\" title=\"随机数函数\"></a>随机数函数</h3><table>\n<thead>\n<tr>\n<th align=\"left\">函数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-choice.html\">choice(seq)</a></td>\n<td align=\"left\">从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。</td>\n</tr>\n<tr>\n<td align=\"left\">[randrange (<a href=\"https://www.runoob.com/python3/python3-func-number-randrange.html\">start,] stop [,step])</a></td>\n<td align=\"left\">从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-random.html\">random()</a></td>\n<td align=\"left\">随机生成下一个实数，它在[0,1)范围内。</td>\n</tr>\n<tr>\n<td align=\"left\">[seed(<a href=\"https://www.runoob.com/python3/python3-func-number-seed.html\">x])</a></td>\n<td align=\"left\">改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-shuffle.html\">shuffle(lst)</a></td>\n<td align=\"left\">将序列的所有元素随机排序</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-uniform.html\">uniform(x, y)</a></td>\n<td align=\"left\">随机生成下一个实数，它在[x,y]范围内。</td>\n</tr>\n</tbody></table>\n<h3 id=\"三角函数\"><a href=\"#三角函数\" class=\"headerlink\" title=\"三角函数\"></a>三角函数</h3><p>Python包括以下三角函数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">函数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-acos.html\">acos(x)</a></td>\n<td align=\"left\">返回x的反余弦弧度值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-asin.html\">asin(x)</a></td>\n<td align=\"left\">返回x的反正弦弧度值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-atan.html\">atan(x)</a></td>\n<td align=\"left\">返回x的反正切弧度值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-atan2.html\">atan2(y, x)</a></td>\n<td align=\"left\">返回给定的 X 及 Y 坐标值的反正切值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-cos.html\">cos(x)</a></td>\n<td align=\"left\">返回x的弧度的余弦值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-hypot.html\">hypot(x, y)</a></td>\n<td align=\"left\">返回欧几里德范数 sqrt(x<em>x + y</em>y)。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-sin.html\">sin(x)</a></td>\n<td align=\"left\">返回的x弧度的正弦值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-tan.html\">tan(x)</a></td>\n<td align=\"left\">返回x弧度的正切值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-degrees.html\">degrees(x)</a></td>\n<td align=\"left\">将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-func-number-radians.html\">radians(x)</a></td>\n<td align=\"left\">将角度转换为弧度</td>\n</tr>\n</tbody></table>\n<h3 id=\"数学常量\"><a href=\"#数学常量\" class=\"headerlink\" title=\"数学常量\"></a>数学常量</h3><table>\n<thead>\n<tr>\n<th align=\"left\">常量</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">pi</td>\n<td align=\"left\">数学常量 pi（圆周率，一般以π来表示）</td>\n</tr>\n<tr>\n<td align=\"left\">e</td>\n<td align=\"left\">数学常量 e，e即自然常数（自然常数）。</td>\n</tr>\n</tbody></table>\n<h3 id=\"函数示例\"><a href=\"#函数示例\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math  <span class=\"token comment\"># 导入 math 模块</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abs(-40) : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 内置</span>\n<span class=\"token comment\"># abs(-40) :  40</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.ceil(-45.17) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>ceil<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.ceil(-45.17) :  -45</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.exp(-45.17) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.exp(-45.17) :  2.4150062132629406e-20</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.fabs(-45.17) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>fabs<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.fabs(-45.17) :  45.17</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.floor(-45.17) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45.17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.floor(-45.17) :  -46</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.log(100.12) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span><span class=\"token number\">100.12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.log(100.12) :  4.6063694665635735</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.log10(100.12) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>log10<span class=\"token punctuation\">(</span><span class=\"token number\">100.12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.log10(100.12) :  2.0005208409361854</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max(80, 100, 1000) : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># max(80, 100, 1000) :  1000</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min(80, 100, 1000) : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># min(80, 100, 1000) :  80</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.modf(100.12) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>modf<span class=\"token punctuation\">(</span><span class=\"token number\">100.12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.modf(100.12) :  (0.12000000000000455, 100.0)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.pow(100, 2) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.pow(100, 2) :  10000.0</span>\n<span class=\"token comment\"># 使用内置，查看输出结果区别</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pow(100, 2) : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># pow(100, 2) :  10000</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"round(-100.000056, 3) : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">100.000056</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># round(-100.000056, 3) :  -100.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"math.sqrt(100) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># math.sqrt(100) :  10.0</span>\n\n\n<span class=\"token keyword\">import</span> random\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从 range(100) 返回一个随机数 : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 从 range(100) 返回一个随机数 :  67</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 :  5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从字符串中 'Runoob' 返回一个随机字符 : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 从 1-100 中选取一个奇数</span>\n<span class=\"token comment\">#从字符串中 'Runoob' 返回一个随机字符 :  n</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"randrange(1,100, 2) : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># randrange(1,100, 2) :  45</span>\n<span class=\"token comment\"># 从 0-99 选取一个随机数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"randrange(100) : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># randrange(100) :  11</span>\n<span class=\"token comment\"># 第一个随机数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"random() : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># random() :  0.7601111373084349</span>\n<span class=\"token comment\"># 第二个随机数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"random() : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># random() :  0.9598748666088929</span>\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nrandom<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"随机排序列表 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 随机排序列表 :  [10, 5, 20, 16]</span>\nrandom<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"随机排序列表 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n随机排序列表 <span class=\"token punctuation\">:</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uniform(5, 10) 的随机浮点数 : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>uniform<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># uniform(5, 10) 的随机浮点数 :  9.959955410049714</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uniform(7, 14) 的随机浮点数 : \"</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>uniform<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># uniform(7, 14) 的随机浮点数 :  11.843622946237328</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"acos(1) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>acos<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># acos(1) :  0.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"asin(1) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>asin<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># asin(1) :  1.5707963267948966</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"atan(1) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>atan<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># atan(1) :  0.7853981633974483</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"atan2(10,20) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>atan2<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># atan2(10,20) :  0.4636476090008061</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cos(2*math.pi) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># cos(2*math.pi) :  1.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hypot(0, 2) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>hypot<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># hypot(0, 2) :  2.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sin(math.pi/2) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># sin(math.pi/2) :  1.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tan(math.pi/4) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>tan<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># tan(math.pi/4) :  0.9999999999999999</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"degrees(math.pi/4) : \"</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>degrees<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># degrees(math.pi/4) :  45.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>radians<span class=\"token punctuation\">(</span><span class=\"token number\">180</span> <span class=\"token operator\">/</span> math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1.0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3.141592653589793</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2.718281828459045</span>\n<span class=\"token triple-quoted-string string\">'''\nabs(-40) :  40\nmath.ceil(-45.17) :  -45\n1\nmath.exp(-45.17) :  2.4150062132629406e-20\nmath.fabs(-45.17) :  45.17\nmath.floor(-45.17) :  -46\nmath.log(100.12) :  4.6063694665635735\nmath.log10(100.12) :  2.0005208409361854\nmax(80, 100, 1000) :  1000\nmin(80, 100, 1000) :  80\nmath.modf(100.12) :  (0.12000000000000455, 100.0)\nmath.pow(100, 2) :  10000.0\npow(100, 2) :  10000\nround(-100.000056, 3) :  -100.0\nmath.sqrt(100) :  10.0\n从 range(100) 返回一个随机数 :  22\n从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 :  2\n从字符串中 'Runoob' 返回一个随机字符 :  R\nrandrange(1,100, 2) :  83\nrandrange(100) :  92\nrandom() :  0.2392758950765237\nrandom() :  0.7016096413249141\n随机排序列表 :  [16, 5, 20, 10]\n随机排序列表 :  [20, 16, 10, 5]\nuniform(5, 10) 的随机浮点数 :  9.96850739092334\nuniform(7, 14) 的随机浮点数 :  9.03188249118426\nacos(1) :  0.0\nasin(1) :  1.5707963267948966\natan(1) :  0.7853981633974483\natan2(10,20) :  0.4636476090008061\ncos(2*math.pi) :  1.0\nhypot(0, 2) :  2.0\nsin(math.pi/2) :  1.0\ntan(math.pi/4) :  0.9999999999999999\ndegrees(math.pi/4) :  45.0\n1.0\n3.141592653589793\n2.718281828459045\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"字符串-String\"><a href=\"#字符串-String\" class=\"headerlink\" title=\"字符串(String)\"></a>字符串(String)</h2><h3 id=\"字符串截取格式-1\"><a href=\"#字符串截取格式-1\" class=\"headerlink\" title=\"字符串截取格式\"></a>字符串截取格式</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">变量名<span class=\"token punctuation\">[</span>头下标<span class=\"token punctuation\">:</span>尾下标<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>从前面索引  0 1 2 3 4 ……</p>\n<p>从后面索引  -1 -2 -3 -4 -5 ……</p>\n<p>从前面截取 :1 2 3 4:</p>\n<p>从后面截取 :-4 -3 -2 -1:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 创建字符串</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># t</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有字符</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第一个到倒数第二个</span>\n<span class=\"token comment\"># tes</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第三个到第四个</span>\n<span class=\"token comment\"># st</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># testtest</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span> <span class=\"token operator\">+</span> <span class=\"token string\">'re'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># testre</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># t t</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token string\">'restart'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># te restart</span>\n<span class=\"token comment\"># 截取再拼接</span>\n\n<span class=\"token triple-quoted-string string\">'''\ntest\nt\ntest\ntes\nst\ntesttest\ntestre\nt t\nte restart\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>python字符串不能改变，诸如<code>str[n]='?'</code>的赋值会报错</p>\n<h3 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 转义字符</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span> \\\n      <span class=\"token operator\">+</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># \\续行</span>\n<span class=\"token comment\"># testtest</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 反斜杠</span>\n<span class=\"token comment\"># \\</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\''</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 单引号</span>\n<span class=\"token comment\"># '</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\"'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 双引号</span>\n<span class=\"token comment\"># \"</span>\n<span class=\"token comment\"># print('\\a')  # 响铃</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test \\btest'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 退格</span>\n<span class=\"token comment\"># testtest</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\000'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空</span>\n<span class=\"token comment\"># </span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1\\n1'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 换行</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test\\vtest'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 纵向制表符</span>\n<span class=\"token comment\">#test\u000btest</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test\\ttest'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 横向制表符</span>\n<span class=\"token comment\"># test\ttest</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test eee\\r11  33'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># \\r后面替换前面</span>\n<span class=\"token comment\"># 11  33</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test\\ftest'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 换页</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\666'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 8进制</span>\n<span class=\"token comment\"># z</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\x33'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 16进制</span>\n<span class=\"token comment\"># 3</span>\n<span class=\"token triple-quoted-string string\">'''\ntesttest\n\\\n'\n\"\ntesttest\n \n1\n1\ntest\u000btest\ntest\ttest\n11  33\ntest\ftest\nƶ\n3\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"运算符-1\"><a href=\"#运算符-1\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 运算符</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'rr'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接符</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重复符</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 索引符</span>\n<span class=\"token comment\"># in not in 成员运算符</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">'hahah'</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'a'</span> <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'in'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not in\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># %格式控制符</span>\n    \n<span class=\"token triple-quoted-string string\">'''\n2rr\ntesttest\ne\nin\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"字符格式化\"><a href=\"#字符格式化\" class=\"headerlink\" title=\"字符格式化\"></a>字符格式化</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"我叫 %s 今年 %d 岁!\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'小明'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#我叫 小明 今年 10 岁!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">符  号</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">%c</td>\n<td align=\"left\">格式化字符及其ASCII码</td>\n</tr>\n<tr>\n<td align=\"left\">%s</td>\n<td align=\"left\">格式化字符串</td>\n</tr>\n<tr>\n<td align=\"left\">%d</td>\n<td align=\"left\">格式化整数</td>\n</tr>\n<tr>\n<td align=\"left\">%u</td>\n<td align=\"left\">格式化无符号整型</td>\n</tr>\n<tr>\n<td align=\"left\">%o</td>\n<td align=\"left\">格式化无符号八进制数</td>\n</tr>\n<tr>\n<td align=\"left\">%x</td>\n<td align=\"left\">格式化无符号十六进制数</td>\n</tr>\n<tr>\n<td align=\"left\">%X</td>\n<td align=\"left\">格式化无符号十六进制数（大写）</td>\n</tr>\n<tr>\n<td align=\"left\">%f</td>\n<td align=\"left\">格式化浮点数字，可指定小数点后的精度</td>\n</tr>\n<tr>\n<td align=\"left\">%e</td>\n<td align=\"left\">用科学计数法格式化浮点数</td>\n</tr>\n<tr>\n<td align=\"left\">%E</td>\n<td align=\"left\">作用同%e，用科学计数法格式化浮点数</td>\n</tr>\n<tr>\n<td align=\"left\">%g</td>\n<td align=\"left\">%f和%e的简写</td>\n</tr>\n<tr>\n<td align=\"left\">%G</td>\n<td align=\"left\">%f 和 %E 的简写</td>\n</tr>\n<tr>\n<td align=\"left\">%p</td>\n<td align=\"left\">用十六进制数格式化变量的地址</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"left\">符号</th>\n<th align=\"left\">功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">*</td>\n<td align=\"left\">定义宽度或者小数点精度</td>\n</tr>\n<tr>\n<td align=\"left\">-</td>\n<td align=\"left\">用做左对齐</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td align=\"left\">在正数前面显示加号( + )</td>\n</tr>\n<tr>\n<td align=\"left\"><sp></sp></td>\n<td align=\"left\">在正数前面显示空格</td>\n</tr>\n<tr>\n<td align=\"left\">#</td>\n<td align=\"left\">在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td>\n</tr>\n<tr>\n<td align=\"left\">0</td>\n<td align=\"left\">显示的数字前面填充’0’而不是默认的空格</td>\n</tr>\n<tr>\n<td align=\"left\">%</td>\n<td align=\"left\">‘%%’输出一个单一的’%’</td>\n</tr>\n<tr>\n<td align=\"left\">(var)</td>\n<td align=\"left\">映射变量(字典参数)</td>\n</tr>\n<tr>\n<td align=\"left\">m.n.</td>\n<td align=\"left\">m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)</td>\n</tr>\n</tbody></table>\n<h3 id=\"三引号\"><a href=\"#三引号\" class=\"headerlink\" title=\"三引号\"></a>三引号</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 三引号</span>\npara_str <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"这是一个多行字符串的实例\n多行字符串可以使用制表符\nTAB ( \\t )。\n也可以使用换行符 [ \\n ]。\n\"\"\"</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>para_str<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 跨多行</span>\n\n<span class=\"token triple-quoted-string string\">'''\n这是一个多行字符串的实例\n多行字符串可以使用制表符\nTAB ( \t )。\n也可以使用换行符 [ \n ]。\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"f-string\"><a href=\"#f-string\" class=\"headerlink\" title=\"f-string\"></a>f-string</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># f-string</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token string-interpolation\"><span class=\"token string\">f'Hello </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>  <span class=\"token comment\"># 替换变量</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 使用表达式</span>\nw <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'str'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>w<span class=\"token punctuation\">[</span><span class=\"token string\">\"str\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>w<span class=\"token punctuation\">[</span><span class=\"token string\">\"var\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n3\ntest: var\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">方法及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-capitalize.html\">capitalize()</a> 将字符串的第一个字符转换为大写</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-center.html\">center(width, fillchar)</a> 返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-count.html\">count(str, beg= 0,end=len(string))</a> 返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-decode.html\">bytes.decode(encoding=”utf-8”, errors=”strict”)</a> Python3 中没有 decode 方法，但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，这个 bytes 对象可以由 str.encode() 来编码返回。</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-encode.html\">encode(encoding=’UTF-8’,errors=’strict’)</a> 以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-endswith.html\">endswith(suffix, beg=0, end=len(string))</a> 检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False.</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-expandtabs.html\">expandtabs(tabsize=8)</a> 把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-find.html\">find(str, beg=0, end=len(string))</a> 检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-index.html\">index(str, beg=0, end=len(string))</a> 跟find()方法一样，只不过如果str不在字符串中会报一个异常。</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isalnum.html\">isalnum()</a> 如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isalpha.html\">isalpha()</a> 如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False</td>\n</tr>\n<tr>\n<td align=\"left\">12</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isdigit.html\">isdigit()</a> 如果字符串只包含数字则返回 True 否则返回 False..</td>\n</tr>\n<tr>\n<td align=\"left\">13</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-islower.html\">islower()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td align=\"left\">14</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isnumeric.html\">isnumeric()</a> 如果字符串中只包含数字字符，则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td align=\"left\">15</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isspace.html\">isspace()</a> 如果字符串中只包含空白，则返回 True，否则返回 False.</td>\n</tr>\n<tr>\n<td align=\"left\">16</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-istitle.html\">istitle()</a> 如果字符串是标题化的(见 title())则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td align=\"left\">17</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isupper.html\">isupper()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td align=\"left\">18</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-join.html\">join(seq)</a> 以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td>\n</tr>\n<tr>\n<td align=\"left\">19</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-len.html\">len(string)</a> 返回字符串长度</td>\n</tr>\n<tr>\n<td align=\"left\">20</td>\n<td align=\"left\">[ljust(width<a href=\"https://www.runoob.com/python3/python3-string-ljust.html\">, fillchar])</a> 返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</td>\n</tr>\n<tr>\n<td align=\"left\">21</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-lower.html\">lower()</a> 转换字符串中所有大写字符为小写.</td>\n</tr>\n<tr>\n<td align=\"left\">22</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-lstrip.html\">lstrip()</a> 截掉字符串左边的空格或指定字符。</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-maketrans.html\">maketrans()</a> 创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</td>\n</tr>\n<tr>\n<td align=\"left\">24</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-max.html\">max(str)</a> 返回字符串 str 中最大的字母。</td>\n</tr>\n<tr>\n<td align=\"left\">25</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-min.html\">min(str)</a> 返回字符串 str 中最小的字母。</td>\n</tr>\n<tr>\n<td align=\"left\">26</td>\n<td align=\"left\">[replace(old, new <a href=\"https://www.runoob.com/python3/python3-string-replace.html\">, max])</a> 把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。</td>\n</tr>\n<tr>\n<td align=\"left\">27</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-rfind.html\">rfind(str, beg=0,end=len(string))</a> 类似于 find()函数，不过是从右边开始查找.</td>\n</tr>\n<tr>\n<td align=\"left\">28</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-rindex.html\">rindex( str, beg=0, end=len(string))</a> 类似于 index()，不过是从右边开始.</td>\n</tr>\n<tr>\n<td align=\"left\">29</td>\n<td align=\"left\">[rjust(width,<a href=\"https://www.runoob.com/python3/python3-string-rjust.html\">, fillchar])</a> 返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串</td>\n</tr>\n<tr>\n<td align=\"left\">30</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-rstrip.html\">rstrip()</a> 删除字符串末尾的空格或指定字符。</td>\n</tr>\n<tr>\n<td align=\"left\">31</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-split.html\">split(str=””, num=string.count(str))</a> 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串</td>\n</tr>\n<tr>\n<td align=\"left\">32</td>\n<td align=\"left\">[splitlines(<a href=\"https://www.runoob.com/python3/python3-string-splitlines.html\">keepends])</a> 按照行(‘\\r’, ‘\\r\\n’, \\n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。</td>\n</tr>\n<tr>\n<td align=\"left\">33</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-startswith.html\">startswith(substr, beg=0,end=len(string))</a> 检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。</td>\n</tr>\n<tr>\n<td align=\"left\">34</td>\n<td align=\"left\">[strip(<a href=\"https://www.runoob.com/python3/python3-string-strip.html\">chars])</a> 在字符串上执行 lstrip()和 rstrip()</td>\n</tr>\n<tr>\n<td align=\"left\">35</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-swapcase.html\">swapcase()</a> 将字符串中大写转换为小写，小写转换为大写</td>\n</tr>\n<tr>\n<td align=\"left\">36</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-title.html\">title()</a> 返回”标题化”的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td>\n</tr>\n<tr>\n<td align=\"left\">37</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-translate.html\">translate(table, deletechars=””)</a> 根据 str 给出的表(包含 256 个字符)转换 string 的字符, 要过滤掉的字符放到 deletechars 参数中</td>\n</tr>\n<tr>\n<td align=\"left\">38</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-upper.html\">upper()</a> 转换字符串中的小写字母为大写</td>\n</tr>\n<tr>\n<td align=\"left\">39</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-zfill.html\">zfill (width)</a> 返回长度为 width 的字符串，原字符串右对齐，前面填充0</td>\n</tr>\n<tr>\n<td align=\"left\">40</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-string-isdecimal.html\">isdecimal()</a> 检查字符串是否只包含十进制字符，如果是返回 true，否则返回 false。</td>\n</tr>\n</tbody></table>\n<h3 id=\"函数示例-1\"><a href=\"#函数示例-1\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example from runoob....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.capitalize() : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>capitalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.capitalize() :  This is string example from runoob....wow!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"[runoob]\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.center(40, '*') : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.center(40, '*') :  ****************[runoob]****************</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"www.runoob.com\"</span>\nsub <span class=\"token operator\">=</span> <span class=\"token string\">'o'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.count('o') : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.count('o') :  3</span>\n\nsub <span class=\"token operator\">=</span> <span class=\"token string\">'run'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.count('run', 0, 10) : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.count('run', 0, 10) :  1</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"菜鸟教程\"</span>\nstr_utf8 <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span>\nstr_gbk <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"GBK\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 菜鸟教程</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8 编码：\"</span><span class=\"token punctuation\">,</span> str_utf8<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># UTF-8 编码： b'\\xe8\\x8f\\x9c\\xe9\\xb8\\x9f\\xe6\\x95\\x99\\xe7\\xa8\\x8b'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GBK 编码：\"</span><span class=\"token punctuation\">,</span> str_gbk<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># GBK 编码： b'\\xb2\\xcb\\xc4\\xf1\\xbd\\xcc\\xb3\\xcc'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8 解码：\"</span><span class=\"token punctuation\">,</span> str_utf8<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strict'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># UTF-8 解码： 菜鸟教程</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GBK 解码：\"</span><span class=\"token punctuation\">,</span> str_gbk<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'GBK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strict'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># GBK 解码： 菜鸟教程</span>\n\nStr <span class=\"token operator\">=</span> <span class=\"token string\">'Runoob example....wow!!!'</span>\nsuffix <span class=\"token operator\">=</span> <span class=\"token string\">'!!'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Str<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Str<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\nsuffix <span class=\"token operator\">=</span> <span class=\"token string\">'run'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Str<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Str<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob\\t12345\\tabc\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'原始字符串:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 原始字符串: runoob\t12345\tabc</span>\n\n<span class=\"token comment\"># 默认 8 个空格</span>\n<span class=\"token comment\"># runnob 有 6 个字符，后面的 \\t 填充 2 个空格</span>\n<span class=\"token comment\"># 12345 有 5 个字符，后面的 \\t 填充 3 个空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'替换 \\\\t 符号:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 替换 \\t 符号: runoob  12345   abc</span>\n\n<span class=\"token comment\"># 2 个空格</span>\n<span class=\"token comment\"># runnob 有 6 个字符，刚好是 2 的 3 倍，后面的 \\t 填充 2 个空格</span>\n<span class=\"token comment\"># 12345 有 5 个字符，不是 2 的倍数，后面的 \\t 填充 1 个空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用 2 个空格替换 \\\\t 符号:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用 2 个空格替换 \\t 符号: runoob  12345 abc</span>\n\n<span class=\"token comment\"># 3 个空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用 3 个空格:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用 3 个空格: runoob   12345 abc</span>\n\n<span class=\"token comment\"># 4 个空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用 4 个空格:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用 4 个空格: runoob  12345   abc</span>\n\n<span class=\"token comment\"># 5 个空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用 5 个空格:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用 5 个空格: runoob    12345     abc</span>\n\n<span class=\"token comment\"># 6 个空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'使用 6 个空格:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用 6 个空格: runoob      12345 abc</span>\n\nstr1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob example....wow!!!\"</span>\nstr2 <span class=\"token operator\">=</span> <span class=\"token string\">\"exam\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># -1</span>\n\nstr1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob example....wow!!!\"</span>\nstr2 <span class=\"token operator\">=</span> <span class=\"token string\">\"exam\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 7</span>\n<span class=\"token comment\"># print(str1.index(str2, 10))  # 异常</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob2016\"</span>  <span class=\"token comment\"># 字符串没有空格</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"www.runoob.com\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n\n<span class=\"token comment\"># 字母和中文文字</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob菜鸟教程\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Ture</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"RUNOOB example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob2016\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isnumeric<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"23443434\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isnumeric<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"       \"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isspace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isspace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"This Is String Example...Wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>istitle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"This is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>istitle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"THIS IS STRING EXAMPLE....WOW!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"THIS is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n\ns1 <span class=\"token operator\">=</span> <span class=\"token string\">\"-\"</span>\ns2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\nseq <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"o\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"o\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 字符串序列</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>seq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># r-u-n-o-o-b</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>seq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># runoob</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 字符串长度</span>\n<span class=\"token comment\"># 6</span>\nl <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 5</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Runoob example....wow!!!**************************</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Runoob EXAMPLE....WOW!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># runoob example....wow!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"     this is string example....wow!!!     \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># this is string example....wow!!!</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"88888888this is string example....wow!!!8888888\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this is string example....wow!!!8888888</span>\n\nintab <span class=\"token operator\">=</span> <span class=\"token string\">\"aeiou\"</span>\nouttab <span class=\"token operator\">=</span> <span class=\"token string\">\"12345\"</span>\ntrantab <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>intab<span class=\"token punctuation\">,</span> outtab<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span>trantab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># th3s 3s str3ng 2x1mpl2....w4w!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最大字符: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 最大字符: u</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最小字符: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 最小字符: b</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"www.w3cschool.cc\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"菜鸟教程旧地址：\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 菜鸟教程旧地址： www.w3cschool.cc</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"菜鸟教程新地址：\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"w3cschool.cc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 菜鸟教程新地址： www.runoob.com</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"is\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"was\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># thwas was string example....wow!!!</span>\n\nstr1 <span class=\"token operator\">=</span> <span class=\"token string\">\"this is really a string example....wow!!!\"</span>\nstr2 <span class=\"token operator\">=</span> <span class=\"token string\">\"is\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># -1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># -1</span>\n\nstr1 <span class=\"token operator\">=</span> <span class=\"token string\">\"this is really a string example....wow!!!\"</span>\nstr2 <span class=\"token operator\">=</span> <span class=\"token string\">\"is\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>rindex<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 5</span>\n<span class=\"token comment\"># print (str1.rindex(str2,10))</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ******************this is string example....wow!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"     this is string example....wow!!!     \"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#      this is string example....wow!!!</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"*****this is string example....wow!!!*****\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># *****this is string example....wow!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以空格为分隔符</span>\n<span class=\"token comment\"># ['this', 'is', 'string', 'example....wow!!!']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以 i 为分隔符</span>\n<span class=\"token comment\"># ['th', 's is string example....wow!!!']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 以 w 为分隔符</span>\n<span class=\"token comment\"># ['this is string example....', 'o', '!!!']</span>\n\ntxt <span class=\"token operator\">=</span> <span class=\"token string\">\"Google#Runoob#Taobao#Facebook\"</span>\n<span class=\"token comment\"># 第二个参数为 1，返回两个参数列表</span>\nx <span class=\"token operator\">=</span> txt<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['Google', 'Runoob#Taobao#Facebook']</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ab c\\n\\nde fg\\rkl\\r\\n'</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'ab c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'de fg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'kl'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ab c\\n\\nde fg\\rkl\\r\\n'</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['ab c\\n', '\\n', 'de fg\\r', 'kl\\r\\n']</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'this'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 字符串是否以 this 开头</span>\n<span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 从第九个字符开始的字符串是否以 string 开头</span>\n<span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'this'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 从第2个字符开始到第四个字符结束的字符串是否以 this 开头</span>\n<span class=\"token comment\"># False</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"123abcrunoob321\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 字符序列为 12</span>\n<span class=\"token comment\"># 3abcrunoob3</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>swapcase<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># THIS IS STRING EXAMPLE....WOW!!!</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"This Is String Example....WOW!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>swapcase<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># tHIS iS sTRING eXAMPLE....wow!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example from runoob....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># This Is String Example From Runoob....Wow!!!</span>\ntxt <span class=\"token operator\">=</span> <span class=\"token string\">\"hello b2b2b2 and 3g3g3g\"</span>\nx <span class=\"token operator\">=</span> txt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 非字母后的第一个字母将转换为大写字母</span>\n<span class=\"token comment\"># Hello B2B2B2 And 3G3G3G</span>\n\nintab <span class=\"token operator\">=</span> <span class=\"token string\">\"aeiou\"</span>\nouttab <span class=\"token operator\">=</span> <span class=\"token string\">\"12345\"</span>\ntrantab <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>intab<span class=\"token punctuation\">,</span> outtab<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 制作翻译表</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span>trantab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># th3s 3s str3ng 2x1mpl2....w4w!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example from runoob....wow!!!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.upper() : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.upper() :  THIS IS STRING EXAMPLE FROM RUNOOB....WOW!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"this is string example from runoob....wow!!!\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.zfill : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.zfill :  this is string example from runoob....wow!!!</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str.zfill : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># str.zfill :  000000this is string example from runoob....wow!!!</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"runoob2016\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isdecimal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"23443434\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>isdecimal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\n<span class=\"token triple-quoted-string string\">'''\nstr.capitalize() :  This is string example from runoob....wow!!!\nstr.center(40, '*') :  ****************[runoob]****************\nstr.count('o') :  3\nstr.count('run', 0, 10) :  1\n菜鸟教程\nUTF-8 编码： b'\\xe8\\x8f\\x9c\\xe9\\xb8\\x9f\\xe6\\x95\\x99\\xe7\\xa8\\x8b'\nGBK 编码： b'\\xb2\\xcb\\xc4\\xf1\\xbd\\xcc\\xb3\\xcc'\nUTF-8 解码： 菜鸟教程\nGBK 解码： 菜鸟教程\nTrue\nTrue\nFalse\nFalse\n原始字符串: runoob\t12345\tabc\n替换 \\t 符号: runoob  12345   abc\n使用 2 个空格替换 \\t 符号: runoob  12345 abc\n使用 3 个空格: runoob   12345 abc\n使用 4 个空格: runoob  12345   abc\n使用 5 个空格: runoob    12345     abc\n使用 6 个空格: runoob      12345 abc\n7\n7\n-1\n7\n7\nTrue\nFalse\nTrue\nTrue\nFalse\nTrue\nFalse\nFalse\nTrue\nFalse\nTrue\nTrue\nFalse\nTrue\nFalse\nTrue\nFalse\nr-u-n-o-o-b\nrunoob\n6\n5\nRunoob example....wow!!!**************************\nrunoob example....wow!!!\nthis is string example....wow!!!     \nthis is string example....wow!!!8888888\nth3s 3s str3ng 2x1mpl2....w4w!!!\n最大字符: u\n最小字符: b\n菜鸟教程旧地址： www.w3cschool.cc\n菜鸟教程新地址： www.runoob.com\nthwas was string example....wow!!!\n5\n5\n-1\n2\n2\n-1\n5\n******************this is string example....wow!!!\n     this is string example....wow!!!\n*****this is string example....wow!!!\n['this', 'is', 'string', 'example....wow!!!']\n['th', 's is string example....wow!!!']\n['this is string example....', 'o', '!!!']\n['Google', 'Runoob#Taobao#Facebook']\n['ab c', '', 'de fg', 'kl']\n['ab c\\n', '\\n', 'de fg\\r', 'kl\\r\\n']\nTrue\nTrue\nFalse\n3abcrunoob3\nTHIS IS STRING EXAMPLE....WOW!!!\ntHIS iS sTRING eXAMPLE....wow!!!\nThis Is String Example From Runoob....Wow!!!\nHello B2B2B2 And 3G3G3G\nth3s 3s str3ng 2x1mpl2....w4w!!!\nstr.upper() :  THIS IS STRING EXAMPLE FROM RUNOOB....WOW!!!\nstr.zfill :  this is string example from runoob....wow!!!\nstr.zfill :  000000this is string example from runoob....wow!!!\nFalse\nTrue\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><ol>\n<li>索引截取方式与元组相同</li>\n<li>截取后成为一个新列表</li>\n<li>元素在打方括号中，以逗号分隔</li>\n<li>列表的元素可改变</li>\n<li>元素可以是元组</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">]</span>\nlist2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出完整列表</span>\n<span class=\"token comment\"># ['test', 1, 1.2, 999]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出列表第一个元素</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 从第二个开始输出到第三个元素</span>\n<span class=\"token comment\"># [1, 1.2]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出从第三个元素开始的所有元素</span>\n<span class=\"token comment\"># [1.2, 999]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list2 <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出两次列表</span>\n<span class=\"token comment\"># [1, 'test', 1, 'test']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span> <span class=\"token operator\">+</span> list2<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接列表</span>\n<span class=\"token comment\"># ['test', 1, 1.2, 999, 1, 'test']</span>\nlist3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 3, 4, 5]</span>\nlist3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>  <span class=\"token comment\"># 修改第一元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['test', 2, 3, 4, 5]</span>\nlist3<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 修改第三个到第四元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['test', 2, 22, 33, 5]</span>\nlist4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 3, 4, 5]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 第一个-1表示从最后一个开始</span>\n<span class=\"token comment\"># 中间为空表示移动到列表末,最后一个-1为步长,-表示逆向</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [4, 3, 2]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list4<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [5]</span>\n<span class=\"token triple-quoted-string string\">'''\n['test', 1, 1.2, 999]\ntest\n[1, 1.2]\n[1.2, 999]\n[1, 'test', 1, 'test']\n['test', 1, 1.2, 999, 1, 'test']\n[1, 2, 3, 4, 5]\n['test', 2, 3, 4, 5]\n['test', 2, 22, 33, 5]\n[1, 2, 3, 4, 5]\n[5, 4, 3, 2, 1]\n[4, 3, 2]\n[5]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"更新和删除元素\"><a href=\"#更新和删除元素\" class=\"headerlink\" title=\"更新和删除元素\"></a>更新和删除元素</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">list5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list5<span class=\"token punctuation\">)</span>\nlist5<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'restart'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list5<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在末尾添加元素</span>\n<span class=\"token keyword\">del</span> list5<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 删除第三个元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list5<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[1, 3, 5, 'test']\n[1, 3, 5, 'test', 'restart']\n[1, 3, 'test', 'restart']\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"列表脚本操作符\"><a href=\"#列表脚本操作符\" class=\"headerlink\" title=\"列表脚本操作符\"></a>列表脚本操作符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">list6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list6<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 列表长度</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 组合</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重复</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 存在与否</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 迭代</span>\n    \n<span class=\"token triple-quoted-string string\">'''\n[1, 2, 3, 'test']\n4\n[1, 2, 3, 4, 5, 6]\n['test', 'test', 'test', 'test']\nTrue\n1 2 3 \n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"镶嵌列表\"><a href=\"#镶嵌列表\" class=\"headerlink\" title=\"镶嵌列表\"></a>镶嵌列表</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 镶嵌列表</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span>\nn <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[['a', 'b', 'c'], [1, 2, 3]]\n['a', 'b', 'c']\nb\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"函数-1\"><a href=\"#函数-1\" class=\"headerlink\" title=\"函数\"></a>函数</h3><table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">函数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-len.html\">len(list)</a> 列表元素个数</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-max.html\">max(list)</a> 返回列表元素最大值</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-min.html\">min(list)</a> 返回列表元素最小值</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-list.html\">list(seq)</a> 将元组转换为列表</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-append.html\">list.append(obj)</a> 在列表末尾添加新的对象</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-count.html\">list.count(obj)</a> 统计某个元素在列表中出现的次数</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-extend.html\">list.extend(seq)</a> 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-index.html\">list.index(obj)</a> 从列表中找出某个值第一个匹配项的索引位置</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-insert.html\">list.insert(index, obj)</a> 将对象插入列表</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\">[list.pop(<a href=\"https://www.runoob.com/python3/python3-att-list-pop.html\">index=-1])</a> 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-remove.html\">list.remove(obj)</a> 移除列表中某个值的第一个匹配项</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-reverse.html\">list.reverse()</a> 反向列表中元素</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-sort.html\">list.sort( key=None, reverse=False)</a> 对原列表进行排序</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-clear.html\">list.clear()</a> 清空列表</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-list-copy.html\">list.copy()</a> 复制列表</td>\n</tr>\n</tbody></table>\n<h3 id=\"函数示例-2\"><a href=\"#函数示例-2\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3</span>\nlist2 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建一个 0-4 的列表</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 5</span>\n\nlist1<span class=\"token punctuation\">,</span> list2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list1 最大元素值 : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># list1 最大元素值 :  Taobao</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list2 最大元素值 : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># list2 最大元素值 :  700</span>\n\nlist1<span class=\"token punctuation\">,</span> list2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list1 最小元素值 : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># list1 最小元素值 :  Google</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list2 最小元素值 : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># list2 最小元素值 :  200</span>\n\naTuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">)</span>\nlist1 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>aTuple<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表元素 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表元素 :  [123, 'Google', 'Runoob', 'Taobao']</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span>\nlist2 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表元素 : \"</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表元素 :  ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span>\nlist1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新后的列表 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 更新后的列表 :  ['Google', 'Runoob', 'Taobao', 'Baidu']</span>\n\naList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123 元素个数 : \"</span><span class=\"token punctuation\">,</span> aList<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 123 元素个数 :  2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Runoob 元素个数 : \"</span><span class=\"token punctuation\">,</span> aList<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Runoob 元素个数 :  1</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span>\nlist2 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建 0-4 的列表</span>\nlist1<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 扩展列表</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"扩展后的列表：\"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 扩展后的列表： ['Google', 'Runoob', 'Taobao', 0, 1, 2, 3, 4]</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Runoob 索引值为'</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Runoob 索引值为 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Taobao 索引值为'</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Taobao 索引值为 2</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span>\nlist1<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'列表插入元素后为 : '</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表插入元素后为 :  ['Google', 'Baidu', 'Runoob', 'Taobao']</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">]</span>\nlist1<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表现在为 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表现在为 :  ['Google', 'Runoob']</span>\nlist1<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表现在为 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表现在为 :  ['Google']</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">]</span>\nlist1<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表现在为 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表现在为 :  ['Google', 'Runoob', 'Baidu']</span>\nlist1<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表现在为 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表现在为 :  ['Google', 'Runoob']</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">]</span>\nlist1<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表反转后: \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表反转后:  ['Baidu', 'Taobao', 'Runoob', 'Google']</span>\n\naList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Facebook'</span><span class=\"token punctuation\">]</span>\naList<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"List : \"</span><span class=\"token punctuation\">,</span> aList<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># List :  ['Facebook', 'Google', 'Runoob', 'Taobao']</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">]</span>\nlist1<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"列表清空后 : \"</span><span class=\"token punctuation\">,</span> list1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 列表清空后 :  []</span>\n\nlist1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">]</span>\nlist2 <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list2 列表: \"</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># list2 列表:  ['Google', 'Runoob', 'Taobao', 'Baidu']</span>\n\n<span class=\"token triple-quoted-string string\">'''\n3\n5\nlist1 最大元素值 :  Taobao\nlist2 最大元素值 :  700\nlist1 最小元素值 :  Google\nlist2 最小元素值 :  200\n列表元素 :  [123, 'Google', 'Runoob', 'Taobao']\n列表元素 :  ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']\n更新后的列表 :  ['Google', 'Runoob', 'Taobao', 'Baidu']\n123 元素个数 :  2\nRunoob 元素个数 :  1\n扩展后的列表： ['Google', 'Runoob', 'Taobao', 0, 1, 2, 3, 4]\nRunoob 索引值为 1\nTaobao 索引值为 2\n列表插入元素后为 :  ['Google', 'Baidu', 'Runoob', 'Taobao']\n列表现在为 :  ['Google', 'Runoob']\n列表现在为 :  ['Google']\n列表现在为 :  ['Google', 'Runoob', 'Baidu']\n列表现在为 :  ['Google', 'Runoob']\n列表反转后:  ['Baidu', 'Taobao', 'Runoob', 'Google']\nList :  ['Facebook', 'Google', 'Runoob', 'Taobao']\n列表清空后 :  []\nlist2 列表:  ['Google', 'Runoob', 'Taobao', 'Baidu']\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"元组\"><a href=\"#元组\" class=\"headerlink\" title=\"元组\"></a>元组</h2><ol>\n<li>元组元素不能更改</li>\n<li>元组写在小括号内，以<code>,</code>分隔</li>\n<li>各元素类型可以不同</li>\n<li>元组的索引切片操作与string一样</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">tuple</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dou'</span><span class=\"token punctuation\">)</span>\ntuple2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test2'</span><span class=\"token punctuation\">)</span>\ntuple3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 单个元素后面加逗号</span>\ntuple4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 空元组</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuple4<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ()</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuple3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1,)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第一个元素</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第二个到第三个元素</span>\n<span class=\"token comment\"># (1.2, 'test')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有元素</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有元素</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出第三个及前面的所有</span>\n<span class=\"token comment\"># (1, 1.2, 'test')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou', 1, 1.2, 'test', 'dou')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span> <span class=\"token operator\">+</span> tuple2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># (1, 1.2, 'test', 'dou', 1, 'test2')</span>\n<span class=\"token triple-quoted-string string\">'''\n()\n(1, 1.2, 'test', 'dou')\n(1,)\n1\n(1.2, 'test')\n(1, 1.2, 'test', 'dou')\n(1, 1.2, 'test', 'dou')\n(1, 1.2, 'test')\n(1, 1.2, 'test', 'dou', 1, 1.2, 'test', 'dou')\n(1, 1.2, 'test', 'dou', 1, 'test2')\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"运算符-2\"><a href=\"#运算符-2\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">tuple6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuple6<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tuple6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 列表长度</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 组合</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重复</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 存在与否</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 迭代</span>\n\n<span class=\"token triple-quoted-string string\">'''\n(1, 2, 3, 'test')\n4\n(1, 2, 3, 4, 5, 6)\n('test', 'test', 'test', 'test')\nTrue\n1 2 3 \n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"函数-2\"><a href=\"#函数-2\" class=\"headerlink\" title=\"函数\"></a>函数</h3><table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">方法及描述</th>\n<th align=\"left\">实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">len(tuple) 计算元组元素个数。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; tuple1 = ('Google', 'Runoob', 'Taobao') </code><br><code>&gt;&gt;&gt; len(tuple1) 3 </code></td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">max(tuple) 返回元组中元素最大值。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; tuple2 = ('5', '4', '8') </code><br><code>&gt;&gt;&gt; max(tuple2) '8'</code></td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">min(tuple) 返回元组中元素最小值。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; tuple2 = ('5', '4', '8') </code><br><code>&gt;&gt;&gt; min(tuple2) '4' </code></td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\">tuple(iterable) 将可迭代系列转换为元组。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; list1= ['Google', 'Taobao', 'Runoob', 'Baidu'] </code><br><code>&gt;&gt;&gt; tuple1=tuple(list1) </code><br><code>&gt;&gt;&gt; tuple1 ('Google', 'Taobao', 'Runoob', 'Baidu')</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><ol>\n<li>字典是无序的，依靠键值对来存取</li>\n<li>字典用<code>{}</code>标识， <code>键(key) : 值(value)</code></li>\n<li><code>key</code>不可变，并且是唯一的</li>\n<li>使用<code>{}</code>创建空字典</li>\n<li>键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\"># 空字典</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {2: 'test', 'test': 1}</span>\ndict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'dddd'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'test': 1, 1: 'dddd'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出2,test的值</span>\n<span class=\"token comment\"># test 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有键名</span>\n<span class=\"token comment\"># dict_keys(['test', 1])</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有键值</span>\n<span class=\"token comment\"># dict_values([1, 'dddd'])</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'txt'</span>  <span class=\"token comment\"># 修改键值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {2: 'test', 'test': 'txt'}</span>\n<span class=\"token keyword\">del</span> dict2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 删除一个键</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'test': 1}</span>\ndict2<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 清空字典</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {}</span>\n<span class=\"token keyword\">del</span> dict2  <span class=\"token comment\"># 删除字典</span>\ndict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 重复时后者覆盖前者</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'1': 2, 'var': 'var', 'test': 'test'}</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{2: 'test', 'test': 1}\n{'test': 1, 1: 'dddd'}\ntest 1\ndict_keys(['test', 1])\ndict_values([1, 'dddd'])\n{2: 'test', 'test': 'txt'}\n{'test': 1}\n{}\n{'1': 2, 'var': 'var', 'test': 'test'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"函数-3\"><a href=\"#函数-3\" class=\"headerlink\" title=\"函数\"></a>函数</h3><table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">函数及描述</th>\n<th align=\"left\">实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">len(dict) 计算字典元素个数，即键的总数。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; dict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'} </code><br><code>&gt;&gt;&gt; len(dict) 3</code></td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">str(dict) 输出字典，可以打印的字符串表示。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; dict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}  </code><br><code>&gt;&gt;&gt; str(dict) </code><br><code>\"{'Name': 'Runoob', 'Class': 'First', 'Age': 7}\"</code></td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">type(variable) 返回输入的变量类型，如果变量是字典就返回字典类型。</td>\n<td align=\"left\"><code>&gt;&gt;&gt; dict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}  </code><br><code>&gt;&gt;&gt; type(dict) </code><br><code>&lt;class 'dict'&gt;</code></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">函数及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-clear.html\">radiansdict.clear()</a> 删除字典内所有元素</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-copy.html\">radiansdict.copy()</a> 返回一个字典的浅复制</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-fromkeys.html\">radiansdict.fromkeys()</a> 创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-get.html\">radiansdict.get(key, default=None)</a> 返回指定键的值，如果键不在字典中返回 default 设置的默认值</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-in.html\">key in dict</a> 如果键在字典dict里返回true，否则返回false</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-items.html\">radiansdict.items()</a> 以列表返回一个视图对象</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-keys.html\">radiansdict.keys()</a> 返回一个视图对象</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-setdefault.html\">radiansdict.setdefault(key, default=None)</a> 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-update.html\">radiansdict.update(dict2)</a> 把字典dict2的键/值对更新到dict里</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-values.html\">radiansdict.values()</a> 返回一个视图对象</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\">[pop(key<a href=\"https://www.runoob.com/python3/python3-att-dictionary-pop.html\">,default])</a> 删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</td>\n</tr>\n<tr>\n<td align=\"left\">12</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-att-dictionary-popitem.html\">popitem()</a> 随机返回并删除字典中的最后一对键和值。</td>\n</tr>\n</tbody></table>\n<h3 id=\"函数示例-3\"><a href=\"#函数示例-3\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Zara'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"字典长度 : %d\"</span> <span class=\"token operator\">%</span>  <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 字典长度 : 2</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"字典删除后长度 : %d\"</span> <span class=\"token operator\">%</span>  <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 字典删除后长度 : 0</span>\n\ndict1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Class'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'First'</span><span class=\"token punctuation\">}</span>\ndict2 <span class=\"token operator\">=</span> dict1<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新复制的字典为 : \"</span><span class=\"token punctuation\">,</span> dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 新复制的字典为 :  {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}</span>\n\nseq <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>fromkeys<span class=\"token punctuation\">(</span>seq<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新的字典为 : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 新的字典为 : {'name': None, 'age': None, 'sex': None}</span>\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>fromkeys<span class=\"token punctuation\">(</span>seq<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新的字典为 : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 新的字典为 : {'name': 10, 'age': 10, 'sex': 10}</span>\n\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">27</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Age 值为 : %s\"</span> <span class=\"token operator\">%</span>  <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Age 值为 : 27</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Sex 值为 : %s\"</span> <span class=\"token operator\">%</span>  <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'Sex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"NA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Sex 值为 : NA</span>\n\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 检测键 Age 是否存在</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'Age'</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键 Age 存在\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键 Age 不存在\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 键 Age 存在</span>\n<span class=\"token comment\"># 检测键 Sex 是否存在</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'Sex'</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键 Sex 存在\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键 Sex 不存在\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 键 Sex 不存在</span>\n<span class=\"token comment\"># not in</span>\n\n<span class=\"token comment\"># 检测键 Age 是否存在</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'Age'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键 Age 不存在\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"键 Age 存在\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 键 Age 存在</span>\n\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Value : dict_items([('Name', 'Runoob'), ('Age', 7)])</span>\n\ndishes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'eggs'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sausage'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bacon'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'spam'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">}</span>\nkeys <span class=\"token operator\">=</span> dishes<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nvalues <span class=\"token operator\">=</span> dishes<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 迭代</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> val <span class=\"token keyword\">in</span> values<span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">+=</span> val\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 504</span>\n\n<span class=\"token comment\"># keys 和 values 以相同顺序（插入顺序）进行迭代</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 使用 list() 转换为列表</span>\n<span class=\"token comment\"># ['eggs', 'sausage', 'bacon', 'spam']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [2, 1, 1, 500]</span>\n\n<span class=\"token comment\"># 视图对象是动态的，受字典变化的影响，以下删除了字典的 key，视图对象转为列表后也跟着变化</span>\n<span class=\"token keyword\">del</span> dishes<span class=\"token punctuation\">[</span><span class=\"token string\">'eggs'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">del</span> dishes<span class=\"token punctuation\">[</span><span class=\"token string\">'sausage'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['bacon', 'spam']</span>\n\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Age 键的值为 : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Age 键的值为 : 7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sex 键的值为 : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'Sex'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Sex 键的值为 : None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新字典为：\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 新字典为： {'Name': 'Runoob', 'Age': 7, 'Sex': None}</span>\n\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\ndict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">}</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新字典 dict : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 更新字典 dict :  {'Name': 'Runoob', 'Age': 7, 'Sex': 'female'}</span>\n\n\nsite<span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'菜鸟教程'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'alexa'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'www.runoob.com'</span><span class=\"token punctuation\">}</span>\npop_obj<span class=\"token operator\">=</span>site<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pop_obj<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 菜鸟教程</span>\n\n\nsite<span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'菜鸟教程'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'alexa'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'www.runoob.com'</span><span class=\"token punctuation\">}</span>\npop_obj<span class=\"token operator\">=</span>site<span class=\"token punctuation\">.</span>popitem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pop_obj<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ('url', 'www.runoob.com')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>site<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'name': '菜鸟教程', 'alexa': 10000}</span>\n\n<span class=\"token triple-quoted-string string\">'''\n字典长度 : 2\n字典删除后长度 : 0\n新复制的字典为 :  {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n新的字典为 : {'name': None, 'age': None, 'sex': None}\n新的字典为 : {'name': 10, 'age': 10, 'sex': 10}\nAge 值为 : 27\nSex 值为 : NA\n键 Age 存在\n键 Sex 不存在\n键 Age 存在\nValue : dict_items([('Name', 'Runoob'), ('Age', 7)])\n504\n['eggs', 'sausage', 'bacon', 'spam']\n[2, 1, 1, 500]\n['bacon', 'spam']\nAge 键的值为 : 7\nSex 键的值为 : None\n新字典为： {'Name': 'Runoob', 'Age': 7, 'Sex': None}\n更新字典 dict :  {'Name': 'Runoob', 'Age': 7, 'Sex': 'female'}\n菜鸟教程\n('url', 'www.runoob.com')\n{'name': '菜鸟教程', 'alexa': 10000}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><p>创建格式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">parame <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value1<span class=\"token punctuation\">,</span> value2<span class=\"token punctuation\">,</span> ……<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">or</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建一个空集合</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">sites <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sites<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出集合，重复的元素被自动去掉</span>\n<span class=\"token comment\"># {1, '123', 'test'}</span>\n<span class=\"token comment\"># 成员测试</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'test'</span> <span class=\"token keyword\">in</span> sites<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test 在集合中'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test 不在集合中'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># set可以进行集合运算</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abracadabra'</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alacazam'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 的差集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 的并集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 的交集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># a 和 b 中不同时存在的元素</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{1, '123', 'test'}\ntest 在集合中\n{'a', 'b', 'r', 'c', 'd'}\n{'b', 'd', 'r'}\n{'a', 'm', 'r', 'b', 'c', 'd', 'l', 'z'}\n{'c', 'a'}\n{'d', 'l', 'r', 'm', 'z', 'b'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>推导式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token string\">'abracadabra'</span> <span class=\"token keyword\">if</span> x <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># {'r', 'd'}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h3><h4 id=\"添加元素\"><a href=\"#添加元素\" class=\"headerlink\" title=\"添加元素\"></a>添加元素</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> x <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">thisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\nthisset<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'Taobao', 'Google', 'Runoob'}\n{'Taobao', 'test', 'Google', 'Runoob'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>s.update( x )参数可以是列表，元组，字典</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> x <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">thisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nthisset<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\nthisset<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{1, 3, 'Google', 'Taobao', 'Runoob'}\n{1, 3, 4, 'Google', 5, 6, 'Taobao', 'Runoob'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"移除元素\"><a href=\"#移除元素\" class=\"headerlink\" title=\"移除元素\"></a>移除元素</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span> x <span class=\"token punctuation\">)</span>\n\nthisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\nthisset<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'Google', 'Taobao', 'Runoob'}\n{'Google', 'Runoob'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>discard<span class=\"token punctuation\">(</span> x <span class=\"token punctuation\">)</span>\n\nthisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\nthisset<span class=\"token punctuation\">.</span>discard<span class=\"token punctuation\">(</span><span class=\"token string\">\"Facebook\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 不存在不会发生错误</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'Google', 'Taobao', 'Runoob'}\n{'Google', 'Taobao', 'Runoob'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>设置随机删除集合中的一个元素</p>\n<p>pop 方法会对集合进行无序的排列</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n\nthisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Facebook\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> thisset<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nFacebook\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"计算集合元素个数\"><a href=\"#计算集合元素个数\" class=\"headerlink\" title=\"计算集合元素个数\"></a>计算集合元素个数</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\nthisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"清空集合\"><a href=\"#清空集合\" class=\"headerlink\" title=\"清空集合\"></a>清空集合</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nthisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nthisset<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thisset<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># set()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"判断元素是否在集合中存在\"><a href=\"#判断元素是否在集合中存在\" class=\"headerlink\" title=\"判断元素是否在集合中存在\"></a>判断元素是否在集合中存在</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">x <span class=\"token keyword\">in</span> s\n\nthisset <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Runoob\"</span> <span class=\"token keyword\">in</span> thisset<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Facebook\"</span> <span class=\"token keyword\">in</span> thisset<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nTrue\nFalse\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>判断元素 x 是否在集合 s 中，存在返回 True，不存在返回 False</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-add.html\">add()</a></td>\n<td align=\"left\">为集合添加元素</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-clear.html\">clear()</a></td>\n<td align=\"left\">移除集合中的所有元素</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-copy.html\">copy()</a></td>\n<td align=\"left\">拷贝一个集合</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-difference.html\">difference()</a></td>\n<td align=\"left\">返回多个集合的差集</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-difference_update.html\">difference_update()</a></td>\n<td align=\"left\">移除集合中的元素，该元素在指定的集合也存在。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-discard.html\">discard()</a></td>\n<td align=\"left\">删除集合中指定的元素</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-intersection.html\">intersection()</a></td>\n<td align=\"left\">返回集合的交集</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-intersection_update.html\">intersection_update()</a></td>\n<td align=\"left\">返回集合的交集。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-isdisjoint.html\">isdisjoint()</a></td>\n<td align=\"left\">判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-issubset.html\">issubset()</a></td>\n<td align=\"left\">判断指定集合是否为该方法参数集合的子集。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-issuperset.html\">issuperset()</a></td>\n<td align=\"left\">判断该方法的参数集合是否为指定集合的子集</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-pop.html\">pop()</a></td>\n<td align=\"left\">随机移除元素</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-remove.html\">remove()</a></td>\n<td align=\"left\">移除指定元素</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-symmetric_difference.html\">symmetric_difference()</a></td>\n<td align=\"left\">返回两个集合中不重复的元素集合。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-symmetric_difference_update.html\">symmetric_difference_update()</a></td>\n<td align=\"left\">移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-union.html\">union()</a></td>\n<td align=\"left\">返回两个集合的并集</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/ref-set-update.html\">update()</a></td>\n<td align=\"left\">给集合添加元素</td>\n</tr>\n</tbody></table>\n<h3 id=\"函数示例-4\"><a href=\"#函数示例-4\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\nfruits<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple', 'cherry', 'banana', 'orange'}</span>\n\nfruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\nfruits<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># set()</span>\n\nfruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\nx <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple', 'cherry', 'banana'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"microsoft\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>difference<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'cherry', 'banana'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"microsoft\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nx<span class=\"token punctuation\">.</span>difference_update<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'cherry', 'banana'}</span>\n\nfruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\nfruits<span class=\"token punctuation\">.</span>discard<span class=\"token punctuation\">(</span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple', 'cherry'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\"># y 集合不包含 banana 和 cherry，被移除</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nx<span class=\"token punctuation\">.</span>intersection_update<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"facebook\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>isdisjoint<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>issubset<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>issuperset<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># True</span>\n\nfruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\nfruits<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'cherry', 'banana'}</span>\n\nfruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\nfruits<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple', 'cherry'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>symmetric_difference<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'cherry', 'runoob', 'banana', 'google'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nx<span class=\"token punctuation\">.</span>symmetric_difference_update<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'cherry', 'runoob', 'banana', 'google'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>union<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple', 'cherry', 'banana', 'google', 'runoob'}</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cherry\"</span><span class=\"token punctuation\">}</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">}</span>\nx<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'apple', 'cherry', 'banana', 'google', 'runoob'}</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'orange', 'apple', 'cherry', 'banana'}\nset()\n{'apple', 'cherry', 'banana'}\n{'cherry', 'banana'}\n{'cherry', 'banana'}\n{'apple', 'cherry'}\n{'apple'}\n{'apple'}\nTrue\nTrue\nTrue\n{'cherry', 'banana'}\n{'apple', 'cherry'}\n{'cherry', 'banana', 'runoob', 'google'}\n{'cherry', 'google', 'banana', 'runoob'}\n{'cherry', 'banana', 'google', 'apple', 'runoob'}\n{'cherry', 'banana', 'google', 'apple', 'runoob'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"条件控制\"><a href=\"#条件控制\" class=\"headerlink\" title=\"条件控制\"></a>条件控制</h2><h3 id=\"if语句\"><a href=\"#if语句\" class=\"headerlink\" title=\"if语句\"></a>if语句</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> condition_1<span class=\"token punctuation\">:</span>\n    statement_block_1\n<span class=\"token keyword\">elif</span> condition_2<span class=\"token punctuation\">:</span>\n    statement_block_2\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    statement_block_3\n    \n<span class=\"token triple-quoted-string string\">'''\n如果 \"condition_1\" 为 True 将执行 \"statement_block_1\" 块语句\n如果 \"condition_1\" 为False，将判断 \"condition_2\"\n如果\"condition_2\" 为 True 将执行 \"statement_block_2\" 块语句\n如果 \"condition_2\" 为False，将执行\"statement_block_3\"块语句\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>python每个条件后面都要使用冒号，接着是执行语句</li>\n<li>缩进相同的作为语句块，缩进为一个tab</li>\n<li>python中没有switch-case语句</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你家狗狗的年龄: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你是在逗我吧!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> age <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"相当于 14 岁的人。\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> age <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"相当于 22 岁的人。\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> age <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    human <span class=\"token operator\">=</span> <span class=\"token number\">22</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>age <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"对应人类年龄: \"</span><span class=\"token punctuation\">,</span> human<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 退出提示</span>\n<span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击 enter 键退出\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n请输入你家狗狗的年龄: 3\n\n对应人类年龄:  27\n点击 enter 键退出\n\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"if嵌套\"><a href=\"#if嵌套\" class=\"headerlink\" title=\"if嵌套\"></a>if嵌套</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> 表达式<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    语句\n    <span class=\"token keyword\">if</span> 表达式<span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        语句\n    <span class=\"token keyword\">elif</span> 表达式<span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        语句\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        语句\n<span class=\"token keyword\">elif</span> 表达式<span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n    语句\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    语句\n\nnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入一个数字：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你输入的数字可以整除 2 和 3\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你输入的数字可以整除 2，但不能整除 3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你输入的数字可以整除 3，但不能整除 2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你输入的数字不能整除 2 和 3\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token triple-quoted-string string\">'''\n输入一个数字：4\n你输入的数字可以整除 2，但不能整除 3\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><ol>\n<li>python中循环有for和while</li>\n<li>缩进和冒号和条件控制相似</li>\n</ol>\n<h3 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> 判断条件<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>：\n    执行语句<span class=\"token punctuation\">(</span>statements<span class=\"token punctuation\">)</span>……\n    \nn <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span> <span class=\"token operator\">+</span> i\n    i <span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n55\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"无限循环\"><a href=\"#无限循环\" class=\"headerlink\" title=\"无限循环\"></a>无限循环</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'随便输入，输入0退出'</span><span class=\"token punctuation\">)</span>\n    var <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> var <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># break</span>\n        \n        \n<span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"while-else\"><a href=\"#while-else\" class=\"headerlink\" title=\"while-else\"></a>while-else</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token operator\">&lt;</span>expr<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>additional_statement<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span>\n    \ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> count <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span> <span class=\"token string\">\" 小于 5\"</span><span class=\"token punctuation\">)</span>\n   count <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span> <span class=\"token string\">\" 大于或等于 5\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"for语句\"><a href=\"#for语句\" class=\"headerlink\" title=\"for语句\"></a>for语句</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> <span class=\"token operator\">&lt;</span>variable<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>sequence<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>statements<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>statements<span class=\"token operator\">&gt;</span>\n    \nsites <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Baidu\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Google\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Taobao\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> site <span class=\"token keyword\">in</span> sites<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> site <span class=\"token operator\">==</span> <span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"菜鸟教程!\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"循环数据 \"</span> <span class=\"token operator\">+</span> site<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有循环数据!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"完成循环!\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"range函数\"><a href=\"#range函数\" class=\"headerlink\" title=\"range函数\"></a>range函数</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Baidu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'QQ'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n0\n1\n2\n5\n1\n4\n7\n-10\n-50\n-90\n0 Google\n1 Baidu\n2 Runoob\n3 Taobao\n4 QQ\n[0, 1, 2, 3, 4]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"break和continue\"><a href=\"#break和continue\" class=\"headerlink\" title=\"break和continue\"></a>break和continue</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'循环结束。'</span><span class=\"token punctuation\">)</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'循环结束。'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n4\n3\n循环结束。\n4\n3\n1\n0\n循环结束。\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"for-else\"><a href=\"#for-else\" class=\"headerlink\" title=\"for-else\"></a>for-else</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">'等于'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">//</span>x<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>  <span class=\"token comment\"># 直接跳出第一个循环，不执行else</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 循环中没有找到元素</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">' 是质数'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n2  是质数\n3  是质数\n4 等于 2 * 2\n5  是质数\n6 等于 2 * 3\n7  是质数\n8 等于 2 * 4\n9 等于 3 * 3\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"pass语句\"><a href=\"#pass语句\" class=\"headerlink\" title=\"pass语句\"></a>pass语句</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> letter <span class=\"token keyword\">in</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> letter <span class=\"token operator\">==</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行 pass 块'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当前字母 :'</span><span class=\"token punctuation\">,</span> letter<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good bye!\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n当前字母 : R\n当前字母 : u\n当前字母 : n\n执行 pass 块\n当前字母 : o\n执行 pass 块\n当前字母 : o\n当前字母 : b\nGood bye!\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>pass 不做任何事情，一般用做占位语句</p>\n<h2 id=\"迭代器和生成器\"><a href=\"#迭代器和生成器\" class=\"headerlink\" title=\"迭代器和生成器\"></a>迭代器和生成器</h2><h3 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h3><p>迭代器两个基本函数<code>iter()</code> <code>next()</code></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nit <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建迭代器对象</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出迭代器的下一个元素</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\n\n<span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nit <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建迭代器对象</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> it<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1 2 3 4</span>\n    \n<span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nit <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建迭代器对象</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n1\n2\n3\n4\n'''</span>\n\n<span class=\"token triple-quoted-string string\">'''\n1\n2\n1 2 3 4 1\n2\n3\n4\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"创建一个迭代器\"><a href=\"#创建一个迭代器\" class=\"headerlink\" title=\"创建一个迭代器\"></a>创建一个迭代器</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyNumbers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> self\n \n  <span class=\"token keyword\">def</span> <span class=\"token function\">__next__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>a\n    self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> x\n \nmyclass <span class=\"token operator\">=</span> MyNumbers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyiter <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>myclass<span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>myiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>myiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>myiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>myiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>myiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token triple-quoted-string string\">'''\n1\n2\n3\n4\n5\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"StopIteration\"><a href=\"#StopIteration\" class=\"headerlink\" title=\"StopIteration\"></a>StopIteration</h3><p>StopIteration 异常用于标识迭代的完成，防止出现无限循环的情况</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyNumbers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> self\n \n  <span class=\"token keyword\">def</span> <span class=\"token function\">__next__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">:</span>\n      x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>a\n      self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">return</span> x\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">raise</span> StopIteration\n \nmyclass <span class=\"token operator\">=</span> MyNumbers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyiter <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>myclass<span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> myiter<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h3><p>使用<code>yield()</code>函数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 生成器函数 - 斐波那契</span>\n    a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>counter <span class=\"token operator\">&gt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n            <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">yield</span> a\n        a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> b\n        counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\nf <span class=\"token operator\">=</span> fibonacci<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># f 是一个迭代器，由生成器返回生成</span>\n \n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n<span class=\"token triple-quoted-string string\">'''\n0 1 1 2 3 5 8 13 21 34 55 \n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"函数-4\"><a href=\"#函数-4\" class=\"headerlink\" title=\"函数\"></a>函数</h2><ol>\n<li>函数代码块以def关键字开头，厚街函数标识符名称和圆括号()</li>\n<li>传入的参数和自变量放在圆括号内</li>\n<li>函数内容以冒号起始，并且缩进</li>\n<li>return [表达式] 结束函数并返回值</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 计算面积函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> width <span class=\"token operator\">*</span> height\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">print_welcome</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n \nprint_welcome<span class=\"token punctuation\">(</span><span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">)</span>\nw <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nh <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width =\"</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> <span class=\"token string\">\" height =\"</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> <span class=\"token string\">\" area =\"</span><span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print_welcome<span class=\"token punctuation\">(</span><span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">)</span>\narea<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span>\nexit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"参数传递\"><a href=\"#参数传递\" class=\"headerlink\" title=\"参数传递\"></a>参数传递</h3><h4 id=\"不可变类型\"><a href=\"#不可变类型\" class=\"headerlink\" title=\"不可变类型\"></a>不可变类型</h4><p>number，string，tuples</p>\n<ol>\n<li>先赋值<code>a = 2</code>，再赋值<code>a = 5</code>，后者覆盖前者，相当于新生成一个值，地址变了</li>\n<li>传递的参数值不会影响原值，函数内部重新赋值会生成一个的对象，不会影响函数外的值</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 指向的是同一个对象</span>\n    a<span class=\"token operator\">=</span><span class=\"token number\">10</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 一个新对象</span>\n \na<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nchange<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n140721657271968-\n140721657271968\n140721657272256\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"可变类型\"><a href=\"#可变类型\" class=\"headerlink\" title=\"可变类型\"></a>可变类型</h4><p>list，dictionary，set</p>\n<ol>\n<li>列表赋值，然后再修改元素，列表地址不会改变，还是原来那个列表</li>\n<li>传入函数的这类参数，在函数内修改会影响到函数外的值</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">changeme</span><span class=\"token punctuation\">(</span>mylist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"修改传入的列表\"\"\"</span>\n    mylist<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"函数内取值: \"</span><span class=\"token punctuation\">,</span> mylist<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n\n\n<span class=\"token comment\"># 调用changeme函数</span>\nmylist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>\nchangeme<span class=\"token punctuation\">(</span>mylist<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"函数外取值: \"</span><span class=\"token punctuation\">,</span> mylist<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n函数内取值:  [10, 20, 30, [1, 2, 3, 4]]\n函数外取值:  [10, 20, 30, [1, 2, 3, 4]]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h3><h4 id=\"必需参数\"><a href=\"#必需参数\" class=\"headerlink\" title=\"必需参数\"></a>必需参数</h4><p>必需参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printme</span><span class=\"token punctuation\">(</span> <span class=\"token builtin\">str</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"打印任何传入的字符串\"</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">return</span>\n \n<span class=\"token comment\"># 调用 printme 函数，不加参数会报错</span>\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\nprintme<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"关键字参数\"><a href=\"#关键字参数\" class=\"headerlink\" title=\"关键字参数\"></a>关键字参数</h4><p>关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值，使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printinfo</span><span class=\"token punctuation\">(</span> name<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"打印任何传入的字符串\"</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"名字: \"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"年龄: \"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">return</span>\n \n<span class=\"token comment\">#调用printinfo函数</span>\nprintinfo<span class=\"token punctuation\">(</span> age<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"runoob\"</span> <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"默认参数\"><a href=\"#默认参数\" class=\"headerlink\" title=\"默认参数\"></a>默认参数</h4><p>调用函数时，如果没有传递参数，则会使用默认参数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printinfo</span><span class=\"token punctuation\">(</span> name<span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token number\">35</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"打印任何传入的字符串\"</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"名字: \"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"年龄: \"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">return</span>\n \n<span class=\"token comment\">#调用printinfo函数</span>\nprintinfo<span class=\"token punctuation\">(</span> age<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"runoob\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------------\"</span><span class=\"token punctuation\">)</span>\nprintinfo<span class=\"token punctuation\">(</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"runoob\"</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n名字:  runoob\n年龄:  50\n------------------------\n名字:  runoob\n年龄:  35\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"不定长参数\"><a href=\"#不定长参数\" class=\"headerlink\" title=\"不定长参数\"></a>不定长参数</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">functionname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>formal_args<span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span>var_args_tuple <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"函数_文档字符串\"</span>\n   function_suite\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>expression<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">functionname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>formal_args<span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">**</span>var_args_dict <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"函数_文档字符串\"</span>\n   function_suite\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>expression<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>加了星号 ***** 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数</li>\n<li>在函数调用时没有指定参数，它就是一个空元组</li>\n<li>加了两个星号 *<strong>*</strong> 的参数会以字典的形式导入</li>\n<li>如果单独出现星号 ***** 后的参数必须用关键字传入</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printinfo</span><span class=\"token punctuation\">(</span> arg1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>vartuple <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"打印任何传入的参数\"</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"输出: \"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">for</span> var <span class=\"token keyword\">in</span> vartuple<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">return</span>\n \n<span class=\"token comment\"># 调用printinfo 函数</span>\nprintinfo<span class=\"token punctuation\">(</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span>\nprintinfo<span class=\"token punctuation\">(</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n输出: \n10\n输出: \n70\n60\n50\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printinfo</span><span class=\"token punctuation\">(</span> arg1<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>vardict <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token string\">\"打印任何传入的参数\"</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"输出: \"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>vardict<span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># 调用printinfo 函数</span>\nprintinfo<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>b<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n输出: \n1\n{'a': 2, 'b': 3}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h3><ol>\n<li>使用 lambda 来创建匿名函数</li>\n<li>lambda的主体是一个表达式，而不是一个代码块</li>\n<li>lambda 函数拥有自己的命名空间，且不能访问自己参数列表之外或全局命名空间里的参数</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">lambda</span> <span class=\"token punctuation\">[</span>arg1 <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>arg2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>argn<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>expression<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 可写函数说明</span>\n<span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">:</span> arg1 <span class=\"token operator\">+</span> arg2\n \n<span class=\"token comment\"># 调用sum函数</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"相加后的值为 : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"相加后的值为 : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n相加后的值为 :  30\n相加后的值为 :  40\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"return语句\"><a href=\"#return语句\" class=\"headerlink\" title=\"return语句\"></a>return语句</h3><p><strong>return [表达式]</strong> 语句用于退出函数，选择性地向调用方返回一个表达式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span> arg1<span class=\"token punctuation\">,</span> arg2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 返回2个参数的和.\"</span>\n   total <span class=\"token operator\">=</span> arg1 <span class=\"token operator\">+</span> arg2\n   <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"函数内 : \"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">return</span> total\n \n<span class=\"token comment\"># 调用sum函数</span>\ntotal <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"函数外 : \"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n函数内 :  30\n函数外 :  30\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"强制位置参数\"><a href=\"#强制位置参数\" class=\"headerlink\" title=\"强制位置参数\"></a>强制位置参数</h3><p>函数形参语法 / 用来指明函数形参必须使用指定位置参数，不能使用关键字参数的形式。</p>\n<p>形参 a 和 b 必须使用指定位置参数，c 或 d 可以是位置形参或关键字形参，而 e 和 f 要求为关键字形参</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> e<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> f<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n10 20 30 40 50 60\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><h3 id=\"列表-1\"><a href=\"#列表-1\" class=\"headerlink\" title=\"列表\"></a>列表</h3><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">list.append(x)</td>\n<td align=\"left\">把一个元素添加到列表的结尾，相当于 a[len(a):] = [x]。</td>\n</tr>\n<tr>\n<td align=\"left\">list.extend(L)</td>\n<td align=\"left\">通过添加指定列表的所有元素来扩充列表，相当于 a[len(a):] = L。</td>\n</tr>\n<tr>\n<td align=\"left\">list.insert(i, x)</td>\n<td align=\"left\">在指定位置插入一个元素。第一个参数是准备插入到其前面的那个元素的索引，例如 a.insert(0, x) 会插入到整个列表之前，而 a.insert(len(a), x) 相当于 a.append(x) 。</td>\n</tr>\n<tr>\n<td align=\"left\">list.remove(x)</td>\n<td align=\"left\">删除列表中值为 x 的第一个元素。如果没有这样的元素，就会返回一个错误。</td>\n</tr>\n<tr>\n<td align=\"left\">list.pop([i])</td>\n<td align=\"left\">从列表的指定位置移除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随即从列表中被移除。（方法中 i 两边的方括号表示这个参数是可选的，而不是要求你输入一对方括号，你会经常在 Python 库参考手册中遇到这样的标记。）</td>\n</tr>\n<tr>\n<td align=\"left\">list.clear()</td>\n<td align=\"left\">移除列表中的所有项，等于del a[:]。</td>\n</tr>\n<tr>\n<td align=\"left\">list.index(x)</td>\n<td align=\"left\">返回列表中第一个值为 x 的元素的索引。如果没有匹配的元素就会返回一个错误。</td>\n</tr>\n<tr>\n<td align=\"left\">list.count(x)</td>\n<td align=\"left\">返回 x 在列表中出现的次数。</td>\n</tr>\n<tr>\n<td align=\"left\">list.sort()</td>\n<td align=\"left\">对列表中的元素进行排序。</td>\n</tr>\n<tr>\n<td align=\"left\">list.reverse()</td>\n<td align=\"left\">倒排列表中的元素。</td>\n</tr>\n<tr>\n<td align=\"left\">list.copy()</td>\n<td align=\"left\">返回列表的浅复制，等于a[:]。</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 1, 5]</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 1, 5, 999]</span>\nlist2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">]</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 1, 5, 999, 44, 55]</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hhhh'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 'hhhh', 1, 5, 999, 44, 55]</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">'hhhh'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 2, 1, 5, 999, 44, 55]</span>\nvar <span class=\"token operator\">=</span> list2<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 55</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [44]</span>\nlist2<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># []</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [1, 1, 2, 5, 44, 55, 999]</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [999, 55, 44, 5, 2, 1, 1]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [999, 55, 44, 5, 2, 1, 1]</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[1, 2, 1, 5]\n[1, 2, 1, 5, 999]\n[1, 2, 1, 5, 999, 44, 55]\n[1, 2, 'hhhh', 1, 5, 999, 44, 55]\n[1, 2, 1, 5, 999, 44, 55]\n55\n[44]\n[]\n1\n2\n[1, 1, 2, 5, 44, 55, 999]\n[999, 55, 44, 5, 2, 1, 1]\n[999, 55, 44, 5, 2, 1, 1]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"将列表当做堆栈使用\"><a href=\"#将列表当做堆栈使用\" class=\"headerlink\" title=\"将列表当做堆栈使用\"></a>将列表当做堆栈使用</h4><p>最先进入的元素最后一个被释放（后进先出）。用 append() 方法可以把一个元素添加到堆栈顶。用不指定索引的 pop() 方法可以把一个元素从堆栈顶释放出来。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">44</span><span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[1, 3, 'test', '999']\n[1, 3, 'test', '999', 33, 44, 55]\n55\n44\n[1, 3, 'test', '999', 33]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"将列表当作队列使用\"><a href=\"#将列表当作队列使用\" class=\"headerlink\" title=\"将列表当作队列使用\"></a>将列表当作队列使用</h4><p>队列里第一加入的元素，第一个取出来</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\nqueue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'hhh'</span><span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[1, 3, 'test', '999', 33]\ndeque([1, 2, 'test', '999', 'hhh', 'aaaa'])\n1\n2\ndeque(['test', '999', 'hhh', 'aaaa'])\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"列表推导式\"><a href=\"#列表推导式\" class=\"headerlink\" title=\"列表推导式\"></a>列表推导式</h4><p>列表推导式提供了从序列创建列表的简单途径。应用程序将一些操作应用于某个序列的每个元素，用其获得的结果作为生成新列表的元素，或者根据确定的判定条件创建子序列。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\nvvar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> var<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>vvar<span class=\"token punctuation\">)</span>\nvvaar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> x<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> var<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>vvaar<span class=\"token punctuation\">)</span>\nvar1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">' dcc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'   ssss'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> var1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nvar2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nvar3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">*</span> y <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> var <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> var2<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var3<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> var2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">355</span><span class=\"token operator\">/</span><span class=\"token number\">113</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[1, 2, 4, 8]\n[2, 4, 8, 16]\n[[1, 2], [2, 4], [4, 8], [8, 16]]\n['dcc', 'ssss']\n[2, 3, 4, 4, 4, 6, 8, 8, 8, 12, 16, 16, 16, 24, 32, 32]\n[2, 6, 16, 32]\n['3.1', '3.14', '3.142', '3.1416', '3.14159']\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"嵌套列表解析\"><a href=\"#嵌套列表解析\" class=\"headerlink\" title=\"嵌套列表解析\"></a>嵌套列表解析</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> matrix<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3*4转为4*3</span>\nmatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\ntransposed <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    transposed<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> matrix<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>transposed<span class=\"token punctuation\">)</span>\nmatrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\ntransposed <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># the following 3 lines implement the nested listcomp</span>\n    transposed_row <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> matrix<span class=\"token punctuation\">:</span>\n        transposed_row<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ttransposed<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>transposed_row<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>transposed<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]\n[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]\n[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]\n[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"del语句\"><a href=\"#del语句\" class=\"headerlink\" title=\"del语句\"></a>del语句</h4><p>使用 del 语句可以从一个列表中依索引而不是值来删除一个元素。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">del</span> var<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">del</span> var<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">del</span> var<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">del</span> var\n\n<span class=\"token triple-quoted-string string\">'''\n[1, 23, 3, 6, 'test']\n[1, 23, 6, 'test']\n[23, 'test']\n[]\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"元组和序列\"><a href=\"#元组和序列\" class=\"headerlink\" title=\"元组和序列\"></a>元组和序列</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">tuple</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">)</span>\ntuple2 <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hhhh'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuple2<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n(1, 2, 3, 4, 5)\n((1, 2, 3, 4, 5), ('test', 'hhhh', 'aaaa'))\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"集合-1\"><a href=\"#集合-1\" class=\"headerlink\" title=\"集合\"></a>集合</h3><p>功能包括关系测试和消除重复元素</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">basket <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>basket<span class=\"token punctuation\">)</span>                      <span class=\"token comment\"># 删除重复的</span>\n<span class=\"token comment\"># {'banana', 'orange', 'apple', 'pear'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'orange'</span> <span class=\"token keyword\">in</span> basket<span class=\"token punctuation\">)</span>                 <span class=\"token comment\"># 检测成员</span>\n<span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crabgrass'</span> <span class=\"token keyword\">in</span> basket<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False</span>\n<span class=\"token comment\"># 以下演示了两个集合的操作</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abracadabra'</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alacazam'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>                      <span class=\"token comment\"># a 中唯一的字母</span>\n<span class=\"token comment\"># {'c', 'r', 'b', 'a', 'd'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span>                  <span class=\"token comment\"># 在 a 中的字母，但不在 b 中</span>\n<span class=\"token comment\"># {'r', 'b', 'd'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">)</span>                  <span class=\"token comment\"># 在 a 或 b 中的字母</span>\n<span class=\"token comment\"># {'c', 'r', 'l', 'm', 'z', 'b', 'a', 'd'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span>                  <span class=\"token comment\"># 在 a 和 b 中都有的字母</span>\n<span class=\"token comment\"># {'c', 'a'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">)</span>                  <span class=\"token comment\"># 在 a 或 b 中的字母，但不同时在 a 和 b 中</span>\n<span class=\"token comment\"># {'m', 'z', 'r', 'b', 'l', 'd'}</span>\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token string\">'abracadabra'</span> <span class=\"token keyword\">if</span> x <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'d', 'r'}</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'banana', 'orange', 'apple', 'pear'}\nTrue\nFalse\n{'c', 'r', 'b', 'a', 'd'}\n{'r', 'b', 'd'}\n{'c', 'r', 'l', 'm', 'z', 'b', 'a', 'd'}\n{'c', 'a'}\n{'m', 'z', 'r', 'b', 'l', 'd'}\n{'d', 'r'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"字典-1\"><a href=\"#字典-1\" class=\"headerlink\" title=\"字典\"></a>字典</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sape'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4139</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'guido'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'jack'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4098</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'sape': 4139, 'guido': 4127, 'jack': 4098}</span>\n<span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\"># 空字典</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {}</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {2: 'test', 'test': 1}</span>\ndict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'dddd'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'test': 1, 1: 'dddd'}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出2,test的值</span>\n<span class=\"token comment\"># test 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有键名</span>\n<span class=\"token comment\"># dict_keys(['test', 1])</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出所有键值</span>\n<span class=\"token comment\"># dict_values([1, 'dddd'])</span>\n<span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'txt'</span>  <span class=\"token comment\"># 修改键值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {2: 'test', 'test': 'txt'}</span>\n<span class=\"token keyword\">del</span> dict2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 删除一个键</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'test': 1}</span>\ndict2<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 清空字典</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {}</span>\n<span class=\"token keyword\">del</span> dict2  <span class=\"token comment\"># 删除字典</span>\ndict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># 重复时后者覆盖前者</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'1': 2, 'var': 'var', 'test': 'test'}</span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'sape': 4139, 'guido': 4127, 'jack': 4098}\n{}\n{2: 'test', 'test': 1}\n{'test': 1, 1: 'dddd'}\ntest 1\ndict_keys(['test', 1])\ndict_values([1, 'dddd'])\n{2: 'test', 'test': 'txt'}\n{'test': 1}\n{}\n{'1': 2, 'var': 'var', 'test': 'test'}\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果关键字只是简单的字符串，使用关键字参数指定键值</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>sape<span class=\"token operator\">=</span><span class=\"token number\">4139</span><span class=\"token punctuation\">,</span> guido<span class=\"token operator\">=</span><span class=\"token number\">4127</span><span class=\"token punctuation\">,</span> jack<span class=\"token operator\">=</span><span class=\"token number\">4098</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#{'sape': 4139, 'jack': 4098, 'guido': 4127}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>字典推导</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict3<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># {2: 4, 4: 16, 6: 36}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"遍历技巧\"><a href=\"#遍历技巧\" class=\"headerlink\" title=\"遍历技巧\"></a>遍历技巧</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 关键字和对应的值可以使用 items() 方法同时解读</span>\ndict4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'haha'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict4<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># {'123': 'test', '999': 'haha'}</span>\n<span class=\"token keyword\">for</span> y<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> dict4<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 123 test</span>\n<span class=\"token comment\"># 999 haha</span>\n\n<span class=\"token comment\"># 索引位置和对应值可以使用 enumerate() 函数同时得到</span>\nlist3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'111'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['111', 'test', '999']</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\n0 111\n1 test\n2 999\n'''</span>\n<span class=\"token comment\"># 同时遍历两个或更多的序列，可以使用 zip() 组合</span>\nquestions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'quest'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'favorite color'</span><span class=\"token punctuation\">]</span>\nanswers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'lancelot'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'the holy grail'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> q<span class=\"token punctuation\">,</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>questions<span class=\"token punctuation\">,</span> answers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'What is your {0}?  It is {1}.'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\nWhat is your name?  It is lancelot.\nWhat is your quest?  It is the holy grail.\nWhat is your favorite color?  It is blue.\n'''</span>\n\n<span class=\"token comment\"># 反向输出, 使用reversed()函数</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 9 7 5 3 1 </span>\n\n<span class=\"token comment\"># 顺序遍历一个序列，使用 sorted() 函数返回一个已排序的序列</span>\nbasket <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>basket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># apple banana orange pear </span>\n\n<span class=\"token triple-quoted-string string\">'''\n{'123': 'test', '999': 'haha'}\n123 test\n999 haha\n['111', 'test', '999']\n0 111\n1 test\n2 999\nWhat is your name?  It is lancelot.\nWhat is your quest?  It is the holy grail.\nWhat is your favorite color?  It is blue.\n9 7 5 3 1 \napple banana orange pear \n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><p>模块是一个包含所有你定义的函数和变量的文件，其后缀名是.py，意思是你能直接调用写好的函数或者变量来执行你的任务，这些写好的函数和变量被封装在一个文件包中</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'命令行参数如下:'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n\\nPython 路径为：'</span><span class=\"token punctuation\">,</span> sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>import sys 引入 python 标准库中的 sys.py 模块</li>\n<li>sys.argv 是一个包含命令行参数的列表</li>\n<li>sys.path 包含了一个 Python 解释器自动查找所需模块的路径的列表</li>\n</ol>\n<h3 id=\"import语句\"><a href=\"#import语句\" class=\"headerlink\" title=\"import语句\"></a>import语句</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> module1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> module2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> moduleN<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>import只会导入一次</li>\n<li>解释器收缩路径是在sys.path中确定</li>\n</ol>\n<p>在sys.path任一路径下创建文件fibo.py</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 斐波那契(fibonacci)数列模块</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 定义到 n 的斐波那契数列</span>\n    a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> b <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n        a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a<span class=\"token operator\">+</span>b\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">fib2</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 返回到 n 的斐波那契数列</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> b <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n        a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">,</span> a<span class=\"token operator\">+</span>b\n    <span class=\"token keyword\">return</span> result<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>引入模块使用</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">fibo<span class=\"token punctuation\">.</span>fib<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\nfibo<span class=\"token punctuation\">.</span>fib2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\nfib <span class=\"token operator\">=</span> fibo<span class=\"token punctuation\">.</span>fib <span class=\"token comment\"># 将函数赋给本地</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"from-…-import-语句\"><a href=\"#from-…-import-语句\" class=\"headerlink\" title=\"from … import 语句\"></a>from … import 语句</h3><p>Python 的 from 语句让你从模块中导入一个指定的部分到当前命名空间中</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> modname <span class=\"token keyword\">import</span> name1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> name2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> nameN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>要导入模块 fibo 的 fib 函数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fibo <span class=\"token keyword\">import</span> fib<span class=\"token punctuation\">,</span> fib2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个声明不会把整个fibo模块导入到当前的命名空间中，它只会将fibo里的fib函数引入进来</p>\n<h3 id=\"from-…-import-语句-1\"><a href=\"#from-…-import-语句-1\" class=\"headerlink\" title=\"from … import * 语句\"></a>from … import * 语句</h3><p>把一个模块的所有内容全都导入到当前的命名空间</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> modname <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"深入模式\"><a href=\"#深入模式\" class=\"headerlink\" title=\"深入模式\"></a>深入模式</h3><p>模块除了方法定义，还可以包括可执行的代码。这些代码一般用来初始化这个模块。这些代码只有在第一次被导入时才会被执行。每个模块有各自独立的符号表，在模块内部为所有的函数当作全局符号表来使用。</p>\n<p>导入模块的全局变量和本模块的全局变量是不影响的</p>\n<h3 id=\"name-属性\"><a href=\"#name-属性\" class=\"headerlink\" title=\"__name__属性\"></a>__name__属性</h3><ol>\n<li>用__name__属性来使该程序块仅在该模块自身运行时执行</li>\n<li>每个模块都有一个__name__属性，当其值是’<strong>main</strong>‘时，表明该模块自身在运行，否则是被引入</li>\n<li><strong><strong>name</strong></strong> 与 <strong><strong>main</strong></strong> 底下是双下划线， <strong>_ _</strong> 是这样去掉中间的那个空格</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'程序自身在运行'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我来自另一模块'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python using_name<span class=\"token punctuation\">.</span>py\n程序自身在运行\n\n<span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">import</span> using_name\n我来自另一模块<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"dir-函数\"><a href=\"#dir-函数\" class=\"headerlink\" title=\"dir()函数\"></a>dir()函数</h3><p>内置的函数 dir() 可以找到模块内定义的所有名称。以一个字符串列表的形式返回</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n['__breakpointhook__', '__displayhook__', '__doc__', '__excepthook__', '__interactivehook__', '__loader__', '__name__', '__package__', '__spec__', '__stderr__', '__stdin__', '__stdout__', '__unraisablehook__', '_base_executable', '_clear_type_cache', '_current_frames', '_debugmallocstats', '_enablelegacywindowsfsencoding', '_framework', '_getframe', '_git', '_home', '_xoptions', 'addaudithook', 'api_version', 'argv', 'audit', 'base_exec_prefix', 'base_prefix', 'breakpointhook', 'builtin_module_names', 'byteorder', 'call_tracing', 'callstats', 'copyright', 'displayhook', 'dllhandle', 'dont_write_bytecode', 'exc_info', 'excepthook', 'exec_prefix', 'executable', 'exit', 'flags', 'float_info', 'float_repr_style', 'get_asyncgen_hooks', 'get_coroutine_origin_tracking_depth', 'getallocatedblocks', 'getcheckinterval', 'getdefaultencoding', 'getfilesystemencodeerrors', 'getfilesystemencoding', 'getprofile', 'getrecursionlimit', 'getrefcount', 'getsizeof', 'getswitchinterval', 'gettrace', 'getwindowsversion', 'hash_info', 'hexversion', 'implementation', 'int_info', 'intern', 'is_finalizing', 'maxsize', 'maxunicode', 'meta_path', 'modules', 'path', 'path_hooks', 'path_importer_cache', 'platform', 'prefix', 'pycache_prefix', 'set_asyncgen_hooks', 'set_coroutine_origin_tracking_depth', 'setcheckinterval', 'setprofile', 'setrecursionlimit', 'setswitchinterval', 'settrace', 'stderr', 'stdin', 'stdout', 'thread_info', 'unraisablehook', 'version', 'version_info', 'warnoptions', 'winver']\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果没有给定参数，那么 dir() 函数会罗列出当前定义的所有名称</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n['__annotations__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'i', 'sys']\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"标准模块\"><a href=\"#标准模块\" class=\"headerlink\" title=\"标准模块\"></a>标准模块</h3><p>Python 本身带着一些标准的模块库，有些模块直接被构建在解析器里</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>ps1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>ps2<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"包\"><a href=\"#包\" class=\"headerlink\" title=\"包\"></a>包</h3><p>包是一种管理 Python 模块命名空间的形式，采用”点模块名称”，比如一个模块的名称是 A.B， 那么他表示一个包 A中的子模块 B，例如 </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sound/                          顶层包\n      __init__.py               初始化 sound 包\n      formats/                  文件格式转换子包\n              __init__.py\n              wavread.py\n              wavwrite.py\n              aiffread.py\n              aiffwrite.py\n              auread.py\n              auwrite.py\n              <span class=\"token punctuation\">..</span>.\n      effects/                  声音效果子包\n              __init__.py\n              echo.py\n              surround.py\n              reverse.py\n              <span class=\"token punctuation\">..</span>.\n      filters/                  filters 子包\n              __init__.py\n              equalizer.py\n              vocoder.py\n              karaoke.py\n              <span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>目录只有包含一个叫做 <strong>init</strong>.py 的文件才会被认作是一个包</li>\n<li>使用形如 <strong>import item.subitem.subsubitem</strong> 这种导入形式，除了最后一项，都必须是包，而最后一项则可以是模块或者是包，但是不可以是类，函数或者变量的名字。</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sound<span class=\"token punctuation\">.</span>effects<span class=\"token punctuation\">.</span>echo\n<span class=\"token comment\"># 导入包里的特定模块</span>\nsound<span class=\"token punctuation\">.</span>effects<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span>echofilter<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> atten<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> sound<span class=\"token punctuation\">.</span>effects <span class=\"token keyword\">import</span> echo\n<span class=\"token comment\"># 导入子模块的方法</span>\necho<span class=\"token punctuation\">.</span>echofilter<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> atten<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> sound<span class=\"token punctuation\">.</span>effects<span class=\"token punctuation\">.</span>echo <span class=\"token keyword\">import</span> echofilter\n<span class=\"token comment\"># 直接导入一个函数或者变量</span>\nechofilter<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> atten<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">from</span> package <span class=\"token keyword\">import</span> item\n<span class=\"token comment\">#import 语法会首先把 item 当作一个包定义的名称，如果没找到，再试图按照一个模块去导入。如果还没找到，抛出一个 :exc:ImportError 异常。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"从一个包中导入\"><a href=\"#从一个包中导入\" class=\"headerlink\" title=\"从一个包中导入*\"></a>从一个包中导入*</h3><ol>\n<li><p>如果包定义文件 <strong>_<em>init</em>_.py</strong> 存在一个叫做 <strong>_<em>all</em>_</strong> 的列表变量，那么在使用 <strong>from package import *</strong> 的时候就把这个列表中的所有名字作为包内容导入</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">__all__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"echo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"surround\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"reverse\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>如果 <strong><strong>all</strong></strong> 没有定义，那么使用**from sound.effects import ***这种语法的时候，就不会导入包 sound.effects 里的任何子模块</p>\n</li>\n<li><p>包还提供一个额外的属性__path__。这是一个目录列表，里面每一个包含的目录都有为这个包服务的__init__.py</p>\n</li>\n</ol>\n<h2 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h2><h3 id=\"输入格式美化\"><a href=\"#输入格式美化\" class=\"headerlink\" title=\"输入格式美化\"></a>输入格式美化</h3><ol>\n<li><code>print()</code></li>\n<li><code>write()</code></li>\n<li><code>sys.stdout</code>标准输出文件</li>\n<li><code>str.format()</code>多样化</li>\n<li><code>str()</code>用户易读</li>\n<li><code>repr</code>解释器易读</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token string\">'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># test</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 'test'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.14285714285714285</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.14285714285714285</span>\ns <span class=\"token operator\">=</span> <span class=\"token string\">'test\\nhaha'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\ntest\nhaha\n'''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\ntest\nhaha\n'''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># repr将转义字符当做字符执行</span>\n<span class=\"token comment\"># 'test\\nhaha'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 注意括号</span>\n<span class=\"token comment\"># ('test\\nhaha', [1, 2])</span>\n<span class=\"token comment\"># repr接收python所有类型</span>\n\n<span class=\"token comment\"># 输出平方与立方表</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 注意前一行 'end' 的使用</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">*</span>x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># rjust() 方法, 它可以将字符串靠右, 并在左边填充空格</span>\n<span class=\"token comment\"># zfill(), 它会在数字的左边填充 0</span>\n\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{0:2d} {1:3d} {2:4d}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">*</span>x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\ntest\n'test'\n0.14285714285714285\n0.14285714285714285\ntest\nhaha\ntest\nhaha\n'test\\nhaha'\n('test\\nhaha', [1, 2])\n 1   1    1\n 2   4    8\n 3   9   27\n 4  16   64\n 5  25  125\n 6  36  216\n 7  49  343\n 8  64  512\n 9  81  729\n10 100 1000\n 1   1    1\n 2   4    8\n 3   9   27\n 4  16   64\n 5  25  125\n 6  36  216\n 7  49  343\n 8  64  512\n 9  81  729\n10 100 1000\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"str-format-基本使用\"><a href=\"#str-format-基本使用\" class=\"headerlink\" title=\"str.format()基本使用\"></a>str.format()基本使用</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 常规输出</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{}-{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># one-two</span>\n\n<span class=\"token comment\"># 索引输入</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{1}-{0}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># two-one</span>\n\n<span class=\"token comment\"># 关键字参数输出</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{name}-{age}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">=</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'two'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># two-one</span>\n\n<span class=\"token comment\"># 结合</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{1}-{0}-{test}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> test<span class=\"token operator\">=</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2-1-3</span>\n\n<span class=\"token keyword\">import</span> math\n<span class=\"token comment\"># !a (使用 ascii()), !s (使用 str()) 和 !r (使用 repr())</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{!a}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3.141592653589793</span>\n\n<span class=\"token comment\"># :后面.加数字代表保留几位小数，和类型</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{0:.3f}。'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 3.142。</span>\n\n<span class=\"token comment\"># :后面加整数，表示证该域至少有这么多的宽度</span>\ntable <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> number <span class=\"token keyword\">in</span> table<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{0:10} ==&gt; {1:10d}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''\nGoogle     ==&gt;          1\nRunoob     ==&gt;          2\nTaobao     ==&gt;          3\n'''</span>\n\n<span class=\"token comment\"># 传入一个字典, 然后使用方括号 [] 来访问键值</span>\ntable <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Runoob: {0[Runoob]:d}; Google: {0[Google]:d}; Taobao: {0[Taobao]:d}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Runoob: 2; Google: 1; Taobao: 3</span>\n\n<span class=\"token comment\"># 通过在 table 变量前使用 ** 来实现相同的功能</span>\ntable <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Google'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Runoob'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Taobao'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Runoob: {Runoob:d}; Google: {Google:d}; Taobao: {Taobao:d}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Runoob: 2; Google: 1; Taobao: 3</span>\n\n<span class=\"token triple-quoted-string string\">'''\none-two\ntwo-one\ntwo-one\n2-1-3\n3.141592653589793\n3.142。\nGoogle     ==&gt;          1\nRunoob     ==&gt;          2\nTaobao     ==&gt;          3\nRunoob: 2; Google: 1; Taobao: 3\nRunoob: 2; Google: 1; Taobao: 3\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"旧式字符串格式化\"><a href=\"#旧式字符串格式化\" class=\"headerlink\" title=\"旧式字符串格式化\"></a>旧式字符串格式化</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%5.3f'</span> <span class=\"token operator\">%</span> math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3.142</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"读取键盘输入\"><a href=\"#读取键盘输入\" class=\"headerlink\" title=\"读取键盘输入\"></a>读取键盘输入</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">strstr <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入：\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你输入的内容是: \"</span><span class=\"token punctuation\">,</span> strstr<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>strstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 传入的值都为str</span>\n\n<span class=\"token comment\"># 输入三角形的三边长</span>\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入三角形三边的长：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 计算三角形的半周长p</span>\np <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n<span class=\"token comment\"># 计算三角形的面积s</span>\ns <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">0.5</span>\n<span class=\"token comment\"># 输出三角形的面积</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"三角形面积为：\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token string\">'.2f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n请输入：9\n你输入的内容是:  9\n&lt;class 'str'&gt;\n请输入三角形三边的长：8 7 9\n三角形面积为： 26.83\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"读和写文件\"><a href=\"#读和写文件\" class=\"headerlink\" title=\"读和写文件\"></a>读和写文件</h3><p>open() 返回一个 file 对象</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>filename：包含了你要访问的文件名称的字符串值</li>\n<li>mode：决定了打开文件的模式：只读，写入，追加等，默认文件访问模式为只读(r)</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">模式</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">r</td>\n<td align=\"left\">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>\n</tr>\n<tr>\n<td align=\"left\">rb</td>\n<td align=\"left\">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td align=\"left\">r+</td>\n<td align=\"left\">打开一个文件用于读写。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td align=\"left\">rb+</td>\n<td align=\"left\">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td align=\"left\">w</td>\n<td align=\"left\">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">wb</td>\n<td align=\"left\">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">w+</td>\n<td align=\"left\">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">wb+</td>\n<td align=\"left\">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">a</td>\n<td align=\"left\">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td align=\"left\">ab</td>\n<td align=\"left\">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td align=\"left\">a+</td>\n<td align=\"left\">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n<tr>\n<td align=\"left\">ab+</td>\n<td align=\"left\">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n</tbody></table>\n<h4 id=\"文件对象的方法\"><a href=\"#文件对象的方法\" class=\"headerlink\" title=\"文件对象的方法\"></a>文件对象的方法</h4><h5 id=\"f-read\"><a href=\"#f-read\" class=\"headerlink\" title=\"f.read()\"></a>f.read()</h5><p>f.read(size)将读取一定数目的数据, 然后作为字符串或字节对象返回，size 是一个可选的数字类型的参数，当 size 被忽略了或者为负, 那么该文件的所有内容都将被读取并且返回</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 打开一个文件</span>\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/foo.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭打开的文件</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"f-readline\"><a href=\"#f-readline\" class=\"headerlink\" title=\"f.readline()\"></a>f.readline()</h5><p>f.readline() 会从文件中读取单独的一行，换行符为 ‘\\n’，f.readline() 如果返回一个空字符串, 说明已经已经读取到最后一行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 打开一个文件</span>\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/foo.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭打开的文件</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"f-readlines\"><a href=\"#f-readlines\" class=\"headerlink\" title=\"f.readlines()\"></a>f.readlines()</h5><p>f.readlines() 将返回该文件中包含的所有行，如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 打开一个文件</span>\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/foo.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭打开的文件</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 打开一个文件</span>\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/foo.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭打开的文件</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"f-write\"><a href=\"#f-write\" class=\"headerlink\" title=\"f.write()\"></a>f.write()</h5><p>f.write(string) 将 string 写入到文件中, 然后返回写入的字符数</p>\n<p>不是字符串的需要先转换</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 打开一个文件</span>\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/foo.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n\nnum <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span> <span class=\"token string\">\"Python 是一个非常好的语言。\\n是的，的确非常好!!\\n\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 关闭打开的文件</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 29</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"f-tell\"><a href=\"#f-tell\" class=\"headerlink\" title=\"f.tell()\"></a>f.tell()</h5><p>f.tell() 返回文件对象当前所处的位置, 它是从文件开头开始算起的字节数</p>\n<h5 id=\"f-seek\"><a href=\"#f-seek\" class=\"headerlink\" title=\"f.seek()\"></a>f.seek()</h5><ol>\n<li>f.seek(offset, from_what) 函数改变文件当前的位置</li>\n<li>from_what 的值， 如果是 0 表示开头, 如果是 1 表示当前位置, 2 表示文件的结尾</li>\n<li>from_what 值为默认为0，即文件开头</li>\n</ol>\n<ul>\n<li>seek(x,0) ： 从起始位置即文件首行首字符开始移动 x 个字符</li>\n<li>seek(x,1) ： 表示从当前位置往后移动x个字符</li>\n<li>seek(-x,2)：表示从文件的结尾往前移动x个字符</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/foo.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb+'</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b'0123456789abcdef'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 16</span>\nf<span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 移动到文件的第六个字节</span>\n<span class=\"token comment\"># 5</span>\nf<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># b'5'</span>\nf<span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 移动到文件的倒数第三字节</span>\n<span class=\"token comment\"># 13</span>\nf<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># b'd'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"f-close\"><a href=\"#f-close\" class=\"headerlink\" title=\"f.close()\"></a>f.close()</h5><p>当你处理完一个文件后, 调用 f.close() 来关闭文件并释放系统的资源</p>\n<h4 id=\"pickle模块\"><a href=\"#pickle模块\" class=\"headerlink\" title=\"pickle模块\"></a>pickle模块</h4><p>python的pickle模块实现了基本的数据序列和反序列化</p>\n<p>基本接口：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>protocol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>有了 pickle 这个对象, 就能对 file 以读取的形式打开:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>示例</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pickle\n\n<span class=\"token comment\"># 使用pickle模块将数据对象保存到文件</span>\ndata1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">6j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">u'Unicode string'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span>\n\nselfref_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nselfref_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>selfref_list<span class=\"token punctuation\">)</span>\n\noutput <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data.pkl'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Pickle dictionary using protocol 0.</span>\npickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Pickle the list using the highest protocol available.</span>\npickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>selfref_list<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\noutput<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"File-文件-方法\"><a href=\"#File-文件-方法\" class=\"headerlink\" title=\"File(文件)方法\"></a>File(文件)方法</h2><h3 id=\"open-方法\"><a href=\"#open-方法\" class=\"headerlink\" title=\"open()方法\"></a>open()方法</h3><p>open() 函数常用形式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>完整的语法格式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> buffering<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> errors<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> closefd<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> opener<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>参数说明</p>\n<ul>\n<li>file: 必需，文件路径（相对或者绝对路径）</li>\n<li>mode: 可选，文件打开模式</li>\n<li>buffering: 设置缓冲</li>\n<li>encoding: 一般使用utf8</li>\n<li>errors: 报错级别</li>\n<li>newline: 区分换行符</li>\n<li>closefd: 传入的file参数类型</li>\n<li>opener: 设置自定义开启器，开启器的返回值必须是一个打开的文件描述符。</li>\n</ul>\n<p>mode 参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">模式</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">t</td>\n<td align=\"left\">文本模式 (默认)。</td>\n</tr>\n<tr>\n<td align=\"left\">x</td>\n<td align=\"left\">写模式，新建一个文件，如果该文件已存在则会报错。</td>\n</tr>\n<tr>\n<td align=\"left\">b</td>\n<td align=\"left\">二进制模式。</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td align=\"left\">打开一个文件进行更新(可读可写)。</td>\n</tr>\n<tr>\n<td align=\"left\">U</td>\n<td align=\"left\">通用换行模式（<strong>Python 3 不支持</strong>）。</td>\n</tr>\n<tr>\n<td align=\"left\">r</td>\n<td align=\"left\">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>\n</tr>\n<tr>\n<td align=\"left\">rb</td>\n<td align=\"left\">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td align=\"left\">r+</td>\n<td align=\"left\">打开一个文件用于读写。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td align=\"left\">rb+</td>\n<td align=\"left\">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td align=\"left\">w</td>\n<td align=\"left\">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">wb</td>\n<td align=\"left\">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td align=\"left\">w+</td>\n<td align=\"left\">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">wb+</td>\n<td align=\"left\">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td align=\"left\">a</td>\n<td align=\"left\">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td align=\"left\">ab</td>\n<td align=\"left\">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td align=\"left\">a+</td>\n<td align=\"left\">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n<tr>\n<td align=\"left\">ab+</td>\n<td align=\"left\">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n</tbody></table>\n<p>默认为文本模式，如果要以二进制模式打开，加上 <strong>b</strong> </p>\n<h3 id=\"file-对象\"><a href=\"#file-对象\" class=\"headerlink\" title=\"file 对象\"></a>file 对象</h3><p>file 对象使用 open 函数来创建</p>\n<p>file 对象常用的函数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">方法及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-close.html\">file.close()</a>关闭文件。关闭后文件不能再进行读写操作。</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-flush.html\">file.flush()</a>刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-fileno.html\">file.fileno()</a>返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-isatty.html\">file.isatty()</a>如果文件连接到一个终端设备返回 True，否则返回 False。</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-next.html\">file.next()</a><strong>Python 3 中的 File 对象不支持 next() 方法。</strong>返回文件下一行。</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\">[file.read(<a href=\"https://www.runoob.com/python3/python3-file-read.html\">size])</a>从文件读取指定的字节数，如果未给定或为负则读取所有。</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\">[file.readline(<a href=\"https://www.runoob.com/python3/python3-file-readline.html\">size])</a>读取整行，包括 “\\n” 字符。</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\">[file.readlines(<a href=\"https://www.runoob.com/python3/python3-file-readlines.html\">sizeint])</a>读取所有行并返回列表，若给定sizeint&gt;0，返回总和大约为sizeint字节的行, 实际读取值可能比 sizeint 较大, 因为需要填充缓冲区。</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\">[file.seek(offset<a href=\"https://www.runoob.com/python3/python3-file-seek.html\">, whence])</a>移动文件读取指针到指定位置</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-tell.html\">file.tell()</a>返回文件当前位置。</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\">[file.truncate(<a href=\"https://www.runoob.com/python3/python3-file-truncate.html\">size])</a>从文件的首行首字符开始截断，截断文件为 size 个字符，无 size 表示从当前位置截断；截断之后后面的所有字符被删除，其中 windows 系统下的换行代表2个字符大小。</td>\n</tr>\n<tr>\n<td align=\"left\">12</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-write.html\">file.write(str)</a>将字符串写入文件，返回的是写入的字符长度。</td>\n</tr>\n<tr>\n<td align=\"left\">13</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-file-writelines.html\">file.writelines(sequence)</a>向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。</td>\n</tr>\n</tbody></table>\n<h2 id=\"OS-文件-目录方法\"><a href=\"#OS-文件-目录方法\" class=\"headerlink\" title=\"OS 文件/目录方法\"></a>OS 文件/目录方法</h2><p>一部分函数只能在linux中使用</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">方法及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-access.html\">os.access(path, mode)</a> 检验权限模式</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-chdir.html\">os.chdir(path)</a> 改变当前工作目录</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-chflags.html\">os.chflags(path, flags)</a> 设置路径的标记为数字标记。</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-chmod.html\">os.chmod(path, mode)</a> 更改权限</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-chown.html\">os.chown(path, uid, gid)</a> 更改文件所有者</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-chroot.html\">os.chroot(path)</a> 改变当前进程的根目录</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-close.html\">os.close(fd)</a> 关闭文件描述符 fd</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-closerange.html\">os.closerange(fd_low, fd_high)</a> 关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-dup.html\">os.dup(fd)</a> 复制文件描述符 fd</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-dup2.html\">os.dup2(fd, fd2)</a> 将一个文件描述符 fd 复制到另一个 fd2</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fchdir.html\">os.fchdir(fd)</a> 通过文件描述符改变当前工作目录</td>\n</tr>\n<tr>\n<td align=\"left\">12</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fchmod.html\">os.fchmod(fd, mode)</a> 改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。</td>\n</tr>\n<tr>\n<td align=\"left\">13</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fchown.html\">os.fchown(fd, uid, gid)</a> 修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。</td>\n</tr>\n<tr>\n<td align=\"left\">14</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fdatasync.html\">os.fdatasync(fd)</a> 强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。</td>\n</tr>\n<tr>\n<td align=\"left\">15</td>\n<td align=\"left\">[os.fdopen(fd<a href=\"https://www.runoob.com/python3/python3-os-fdopen.html\">, mode[, bufsize]])</a> 通过文件描述符 fd 创建一个文件对象，并返回这个文件对象</td>\n</tr>\n<tr>\n<td align=\"left\">16</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fpathconf.html\">os.fpathconf(fd, name)</a> 返回一个打开的文件的系统配置信息。name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。</td>\n</tr>\n<tr>\n<td align=\"left\">17</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fstat.html\">os.fstat(fd)</a> 返回文件描述符fd的状态，像stat()。</td>\n</tr>\n<tr>\n<td align=\"left\">18</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fstatvfs.html\">os.fstatvfs(fd)</a> 返回包含文件描述符fd的文件的文件系统的信息，Python 3.3 相等于 statvfs()。</td>\n</tr>\n<tr>\n<td align=\"left\">19</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-fsync.html\">os.fsync(fd)</a> 强制将文件描述符为fd的文件写入硬盘。</td>\n</tr>\n<tr>\n<td align=\"left\">20</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-ftruncate.html\">os.ftruncate(fd, length)</a> 裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。</td>\n</tr>\n<tr>\n<td align=\"left\">21</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-getcwd.html\">os.getcwd()</a> 返回当前工作目录</td>\n</tr>\n<tr>\n<td align=\"left\">22</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-getcwdb.html\">os.getcwdb()</a> 返回一个当前工作目录的Unicode对象</td>\n</tr>\n<tr>\n<td align=\"left\">23</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-isatty.html\">os.isatty(fd)</a> 如果文件描述符fd是打开的，同时与tty(-like)设备相连，则返回true, 否则False。</td>\n</tr>\n<tr>\n<td align=\"left\">24</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-lchflags.html\">os.lchflags(path, flags)</a> 设置路径的标记为数字标记，类似 chflags()，但是没有软链接</td>\n</tr>\n<tr>\n<td align=\"left\">25</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-lchmod.html\">os.lchmod(path, mode)</a> 修改连接文件权限</td>\n</tr>\n<tr>\n<td align=\"left\">26</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-lchown.html\">os.lchown(path, uid, gid)</a> 更改文件所有者，类似 chown，但是不追踪链接。</td>\n</tr>\n<tr>\n<td align=\"left\">27</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-link.html\">os.link(src, dst)</a> 创建硬链接，名为参数 dst，指向参数 src</td>\n</tr>\n<tr>\n<td align=\"left\">28</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-listdir.html\">os.listdir(path)</a> 返回path指定的文件夹包含的文件或文件夹的名字的列表。</td>\n</tr>\n<tr>\n<td align=\"left\">29</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-lseek.html\">os.lseek(fd, pos, how)</a> 设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos; SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效</td>\n</tr>\n<tr>\n<td align=\"left\">30</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-lstat.html\">os.lstat(path)</a> 像stat(),但是没有软链接</td>\n</tr>\n<tr>\n<td align=\"left\">31</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-major.html\">os.major(device)</a> 从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。</td>\n</tr>\n<tr>\n<td align=\"left\">32</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-makedev.html\">os.makedev(major, minor)</a> 以major和minor设备号组成一个原始设备号</td>\n</tr>\n<tr>\n<td align=\"left\">33</td>\n<td align=\"left\">[os.makedirs(path<a href=\"https://www.runoob.com/python3/python3-os-makedirs.html\">, mode])</a> 递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。</td>\n</tr>\n<tr>\n<td align=\"left\">34</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-minor.html\">os.minor(device)</a> 从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。</td>\n</tr>\n<tr>\n<td align=\"left\">35</td>\n<td align=\"left\">[os.mkdir(path<a href=\"https://www.runoob.com/python3/python3-os-mkdir.html\">, mode])</a> 以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。</td>\n</tr>\n<tr>\n<td align=\"left\">36</td>\n<td align=\"left\">[os.mkfifo(path<a href=\"https://www.runoob.com/python3/python3-os-mkfifo.html\">, mode])</a> 创建命名管道，mode 为数字，默认为 0666 (八进制)</td>\n</tr>\n<tr>\n<td align=\"left\">37</td>\n<td align=\"left\">[os.mknod(filename<a href=\"https://www.runoob.com/python3/python3-os-mknod.html\">, mode=0600, device])</a> 创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。</td>\n</tr>\n<tr>\n<td align=\"left\">38</td>\n<td align=\"left\">[os.open(file, flags<a href=\"https://www.runoob.com/python3/python3-os-open.html\">, mode])</a> 打开一个文件，并且设置需要的打开选项，mode参数是可选的</td>\n</tr>\n<tr>\n<td align=\"left\">39</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-openpty.html\">os.openpty()</a> 打开一个新的伪终端对。返回 pty 和 tty的文件描述符。</td>\n</tr>\n<tr>\n<td align=\"left\">40</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-pathconf.html\">os.pathconf(path, name)</a> 返回相关文件的系统配置信息。</td>\n</tr>\n<tr>\n<td align=\"left\">41</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-pipe.html\">os.pipe()</a> 创建一个管道. 返回一对文件描述符(r, w) 分别为读和写</td>\n</tr>\n<tr>\n<td align=\"left\">42</td>\n<td align=\"left\">[os.popen(command<a href=\"https://www.runoob.com/python3/python3-os-popen.html\">, mode[, bufsize]])</a> 从一个 command 打开一个管道</td>\n</tr>\n<tr>\n<td align=\"left\">43</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-read.html\">os.read(fd, n)</a> 从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">44</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-readlink.html\">os.readlink(path)</a> 返回软链接所指向的文件</td>\n</tr>\n<tr>\n<td align=\"left\">45</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-remove.html\">os.remove(path)</a> 删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()删除一个 directory。</td>\n</tr>\n<tr>\n<td align=\"left\">46</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-removedirs.html\">os.removedirs(path)</a> 递归删除目录。</td>\n</tr>\n<tr>\n<td align=\"left\">47</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-rename.html\">os.rename(src, dst)</a> 重命名文件或目录，从 src 到 dst</td>\n</tr>\n<tr>\n<td align=\"left\">48</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-renames.html\">os.renames(old, new)</a> 递归地对目录进行更名，也可以对文件进行更名。</td>\n</tr>\n<tr>\n<td align=\"left\">49</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-rmdir.html\">os.rmdir(path)</a> 删除path指定的空目录，如果目录非空，则抛出一个OSError异常。</td>\n</tr>\n<tr>\n<td align=\"left\">50</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-stat.html\">os.stat(path)</a> 获取path指定的路径的信息，功能等同于C API中的stat()系统调用。</td>\n</tr>\n<tr>\n<td align=\"left\">51</td>\n<td align=\"left\">[os.stat_float_times(<a href=\"https://www.runoob.com/python3/python3-os-stat_float_times.html\">newvalue])</a> 决定stat_result是否以float对象显示时间戳</td>\n</tr>\n<tr>\n<td align=\"left\">52</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-statvfs.html\">os.statvfs(path)</a> 获取指定路径的文件系统统计信息</td>\n</tr>\n<tr>\n<td align=\"left\">53</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-symlink.html\">os.symlink(src, dst)</a> 创建一个软链接</td>\n</tr>\n<tr>\n<td align=\"left\">54</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-tcgetpgrp.html\">os.tcgetpgrp(fd)</a> 返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组</td>\n</tr>\n<tr>\n<td align=\"left\">55</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-tcsetpgrp.html\">os.tcsetpgrp(fd, pg)</a> 设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。</td>\n</tr>\n<tr>\n<td align=\"left\">56</td>\n<td align=\"left\">os.tempnam([dir[, prefix]]) <strong>Python3 中已删除。</strong>返回唯一的路径名用于创建临时文件。</td>\n</tr>\n<tr>\n<td align=\"left\">57</td>\n<td align=\"left\">os.tmpfile() <strong>Python3 中已删除。</strong>返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。</td>\n</tr>\n<tr>\n<td align=\"left\">58</td>\n<td align=\"left\">os.tmpnam() <strong>Python3 中已删除。</strong>为创建一个临时文件返回一个唯一的路径</td>\n</tr>\n<tr>\n<td align=\"left\">59</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-ttyname.html\">os.ttyname(fd)</a> 返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。</td>\n</tr>\n<tr>\n<td align=\"left\">60</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-unlink.html\">os.unlink(path)</a> 删除文件路径</td>\n</tr>\n<tr>\n<td align=\"left\">61</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-utime.html\">os.utime(path, times)</a> 返回指定的path文件的访问和修改的时间。</td>\n</tr>\n<tr>\n<td align=\"left\">62</td>\n<td align=\"left\">[os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])](<a href=\"https://www.runoob.com/python3/python3-os-walk.html\">https://www.runoob.com/python3/python3-os-walk.html</a>) 输出在文件夹中的文件名通过在树中游走，向上或者向下。</td>\n</tr>\n<tr>\n<td align=\"left\">63</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-write.html\">os.write(fd, str)</a> 写入字符串到文件描述符 fd中. 返回实际写入的字符串长度</td>\n</tr>\n<tr>\n<td align=\"left\">64</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-path.html\">os.path 模块</a> 获取文件的属性信息。</td>\n</tr>\n<tr>\n<td align=\"left\">65</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python3/python3-os-pardir.html\">os.pardir()</a> 获取当前目录的父目录，以字符串形式显示目录名。</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> stat\n\nret <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/test.txt\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>F_OK<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F_OK - 返回值 %s\"</span> <span class=\"token operator\">%</span> ret<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># F_OK - 返回值 True</span>\nret <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/test.txt\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>R_OK<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R_OK - 返回值 %s\"</span> <span class=\"token operator\">%</span> ret<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># R_OK - 返回值 True</span>\nret <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/test.txt\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>W_OK<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"W_OK - 返回值 %s\"</span> <span class=\"token operator\">%</span> ret<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># W_OK - 返回值 True</span>\nret <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/test.txt\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>X_OK<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X_OK - 返回值 %s\"</span> <span class=\"token operator\">%</span> ret<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># X_OK - 返回值 True</span>\n\npath <span class=\"token operator\">=</span> <span class=\"token string\">'D:/'</span>\n<span class=\"token comment\"># 查看当前工作目录</span>\nretval <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前工作目录为 %s\"</span> <span class=\"token operator\">%</span> retval<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前工作目录 : %s\"</span> <span class=\"token operator\">%</span> os<span class=\"token punctuation\">.</span>getcwdb<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 当前工作目录为 F:\\</span>\n\n<span class=\"token comment\"># 修改当前工作目录</span>\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 查看修改后的工作目录</span>\nretval <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"目录修改成功 %s\"</span> <span class=\"token operator\">%</span> retval<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 目录修改成功 D:\\</span>\n\n\n<span class=\"token comment\"># path = '/tmp/foo.txt'</span>\n<span class=\"token comment\"># # 为文件设置标记，使得它不能被重命名和删除</span>\n<span class=\"token comment\"># flags = stat.SF_NOUNLINK</span>\n<span class=\"token comment\"># retval = os.chflags(path, flags)</span>\n<span class=\"token comment\"># print(\"返回值: %s\" % retval)</span>\n\n\npath <span class=\"token operator\">=</span> <span class=\"token string\">'D:/test.txt'</span>\n<span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span> sys<span class=\"token punctuation\">,</span> stat\n\n<span class=\"token comment\"># 设置文件可以通过用户组执行</span>\nos<span class=\"token punctuation\">.</span>chmod<span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/test.txt\"</span><span class=\"token punctuation\">,</span> stat<span class=\"token punctuation\">.</span>S_IXGRP<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 设置文件可以被其他用户写入</span>\nos<span class=\"token punctuation\">.</span>chmod<span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/test.txt\"</span><span class=\"token punctuation\">,</span> stat<span class=\"token punctuation\">.</span>S_IWOTH<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改成功!!\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置所有者 ID 为 100</span>\n<span class=\"token comment\"># os.chown(\"/tmp/foo.txt\", 100, -1)</span>\n<span class=\"token comment\"># print(\"修改权限成功!!\")</span>\n\n\n<span class=\"token comment\"># 设置根目录为 /tmp</span>\n<span class=\"token comment\"># os.chroot(\"/tmp\")</span>\n<span class=\"token comment\"># print(\"修改根目录成功!!\")</span>\n\n\n<span class=\"token comment\"># 打开文件</span>\n<span class=\"token comment\"># fd = os.open(\"foo.txt\", os.O_RDWR | os.O_CREAT)</span>\n<span class=\"token comment\"># #  写入字符串</span>\n<span class=\"token comment\"># os.write(fd, \"This is test\")</span>\n<span class=\"token comment\"># d_fd = os.dup( fd )</span>\n<span class=\"token comment\"># # 关闭文件</span>\n<span class=\"token comment\"># os.close(fd)</span>\n<span class=\"token comment\"># print(\"关闭文件成功!!\")</span>\n\n\n<span class=\"token comment\"># 创建的目录</span>\n<span class=\"token comment\"># path = \"/tmp/home/monthly/daily/hourly\"</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># os.mkdir(path, 0o755)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># print(\"目录已创建\")</span>\n\n\n<span class=\"token comment\"># 创建的目录</span>\n<span class=\"token comment\"># path = \"/tmp/hourly\"</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># os.mkfifo(path, 0o644)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># print(\"路径被创建\")</span>\n\n\n<span class=\"token comment\"># # 列出目录</span>\n<span class=\"token comment\"># print(\"目录为: %s\" % os.listdir(os.getcwd()))</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 移除</span>\n<span class=\"token comment\"># os.remove(\"aa.txt\")</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 移除后列出目录</span>\n<span class=\"token comment\"># print(\"移除后 : %s\" % os.listdir(os.getcwd()))</span>\n\n\n<span class=\"token comment\"># os.renames(old, new)</span>\n\n\n<span class=\"token comment\"># # 列出目录</span>\n<span class=\"token comment\"># print(\"目录为: %s\"%os.listdir(os.getcwd()))</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 删除路径</span>\n<span class=\"token comment\"># os.rmdir(\"mydir\")</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 列出重命名后的目录</span>\n<span class=\"token comment\"># print(\"目录为: %s\" %os.listdir(os.getcwd())</span>\n\n\n<span class=\"token comment\"># # 显示文件 \"a2.py\" 信息</span>\n<span class=\"token comment\"># statinfo = os.stat('a2.py')</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># print(statinfo)</span>\n\n\n<span class=\"token comment\"># # 打开文件</span>\n<span class=\"token comment\"># fd = os.open(\"f1.txt\", os.O_RDWR | os.O_CREAT)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 写入字符串</span>\n<span class=\"token comment\"># str = \"This is runoob.com site\"</span>\n<span class=\"token comment\"># ret = os.write(fd, bytes(str, 'UTF-8'))</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 输入返回值</span>\n<span class=\"token comment\"># print(\"写入的位数为: \")</span>\n<span class=\"token comment\"># print(ret)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># print(\"写入成功\")</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># # 关闭文件</span>\n<span class=\"token comment\"># os.close(fd)</span>\n<span class=\"token comment\"># print(\"关闭文件成功!!\")</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"错误和异常\"><a href=\"#错误和异常\" class=\"headerlink\" title=\"错误和异常\"></a>错误和异常</h2><h3 id=\"语法错误\"><a href=\"#语法错误\" class=\"headerlink\" title=\"语法错误\"></a>语法错误</h3><p>一般为漏写符号，或者拼写错误报错</p>\n<p>语法分析器指出了出错的一行，并且在最先找到的错误的位置标记一个小小的箭头</p>\n<h3 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h3><p>即便 Python 程序的语法是正确的，在运行它的时候，也有可能发生错误。运行期检测到的错误被称为异常</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 除数不能为0报异常</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 类型不能相加，触发异常</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"python标准异常\"><a href=\"#python标准异常\" class=\"headerlink\" title=\"python标准异常\"></a>python标准异常</h3><table>\n<thead>\n<tr>\n<th align=\"left\">异常名称</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">BaseException</td>\n<td align=\"left\">所有异常的基类</td>\n</tr>\n<tr>\n<td align=\"left\">SystemExit</td>\n<td align=\"left\">解释器请求退出</td>\n</tr>\n<tr>\n<td align=\"left\">KeyboardInterrupt</td>\n<td align=\"left\">用户中断执行(通常是输入^C)</td>\n</tr>\n<tr>\n<td align=\"left\">Exception</td>\n<td align=\"left\">常规错误的基类</td>\n</tr>\n<tr>\n<td align=\"left\">StopIteration</td>\n<td align=\"left\">迭代器没有更多的值</td>\n</tr>\n<tr>\n<td align=\"left\">GeneratorExit</td>\n<td align=\"left\">生成器(generator)发生异常来通知退出</td>\n</tr>\n<tr>\n<td align=\"left\">StandardError</td>\n<td align=\"left\">所有的内建标准异常的基类</td>\n</tr>\n<tr>\n<td align=\"left\">ArithmeticError</td>\n<td align=\"left\">所有数值计算错误的基类</td>\n</tr>\n<tr>\n<td align=\"left\">FloatingPointError</td>\n<td align=\"left\">浮点计算错误</td>\n</tr>\n<tr>\n<td align=\"left\">OverflowError</td>\n<td align=\"left\">数值运算超出最大限制</td>\n</tr>\n<tr>\n<td align=\"left\">ZeroDivisionError</td>\n<td align=\"left\">除(或取模)零 (所有数据类型)</td>\n</tr>\n<tr>\n<td align=\"left\">AssertionError</td>\n<td align=\"left\">断言语句失败</td>\n</tr>\n<tr>\n<td align=\"left\">AttributeError</td>\n<td align=\"left\">对象没有这个属性</td>\n</tr>\n<tr>\n<td align=\"left\">EOFError</td>\n<td align=\"left\">没有内建输入,到达EOF 标记</td>\n</tr>\n<tr>\n<td align=\"left\">EnvironmentError</td>\n<td align=\"left\">操作系统错误的基类</td>\n</tr>\n<tr>\n<td align=\"left\">IOError</td>\n<td align=\"left\">输入/输出操作失败</td>\n</tr>\n<tr>\n<td align=\"left\">OSError</td>\n<td align=\"left\">操作系统错误</td>\n</tr>\n<tr>\n<td align=\"left\">WindowsError</td>\n<td align=\"left\">系统调用失败</td>\n</tr>\n<tr>\n<td align=\"left\">ImportError</td>\n<td align=\"left\">导入模块/对象失败</td>\n</tr>\n<tr>\n<td align=\"left\">LookupError</td>\n<td align=\"left\">无效数据查询的基类</td>\n</tr>\n<tr>\n<td align=\"left\">IndexError</td>\n<td align=\"left\">序列中没有此索引(index)</td>\n</tr>\n<tr>\n<td align=\"left\">KeyError</td>\n<td align=\"left\">映射中没有这个键</td>\n</tr>\n<tr>\n<td align=\"left\">MemoryError</td>\n<td align=\"left\">内存溢出错误(对于Python 解释器不是致命的)</td>\n</tr>\n<tr>\n<td align=\"left\">NameError</td>\n<td align=\"left\">未声明/初始化对象 (没有属性)</td>\n</tr>\n<tr>\n<td align=\"left\">UnboundLocalError</td>\n<td align=\"left\">访问未初始化的本地变量</td>\n</tr>\n<tr>\n<td align=\"left\">ReferenceError</td>\n<td align=\"left\">弱引用(Weak reference)试图访问已经垃圾回收了的对象</td>\n</tr>\n<tr>\n<td align=\"left\">RuntimeError</td>\n<td align=\"left\">一般的运行时错误</td>\n</tr>\n<tr>\n<td align=\"left\">NotImplementedError</td>\n<td align=\"left\">尚未实现的方法</td>\n</tr>\n<tr>\n<td align=\"left\">SyntaxError</td>\n<td align=\"left\">Python 语法错误</td>\n</tr>\n<tr>\n<td align=\"left\">IndentationError</td>\n<td align=\"left\">缩进错误</td>\n</tr>\n<tr>\n<td align=\"left\">TabError</td>\n<td align=\"left\">Tab 和空格混用</td>\n</tr>\n<tr>\n<td align=\"left\">SystemError</td>\n<td align=\"left\">一般的解释器系统错误</td>\n</tr>\n<tr>\n<td align=\"left\">TypeError</td>\n<td align=\"left\">对类型无效的操作</td>\n</tr>\n<tr>\n<td align=\"left\">ValueError</td>\n<td align=\"left\">传入无效的参数</td>\n</tr>\n<tr>\n<td align=\"left\">UnicodeError</td>\n<td align=\"left\">Unicode 相关的错误</td>\n</tr>\n<tr>\n<td align=\"left\">UnicodeDecodeError</td>\n<td align=\"left\">Unicode 解码时的错误</td>\n</tr>\n<tr>\n<td align=\"left\">UnicodeEncodeError</td>\n<td align=\"left\">Unicode 编码时错误</td>\n</tr>\n<tr>\n<td align=\"left\">UnicodeTranslateError</td>\n<td align=\"left\">Unicode 转换时错误</td>\n</tr>\n<tr>\n<td align=\"left\">Warning</td>\n<td align=\"left\">警告的基类</td>\n</tr>\n<tr>\n<td align=\"left\">DeprecationWarning</td>\n<td align=\"left\">关于被弃用的特征的警告</td>\n</tr>\n<tr>\n<td align=\"left\">FutureWarning</td>\n<td align=\"left\">关于构造将来语义会有改变的警告</td>\n</tr>\n<tr>\n<td align=\"left\">OverflowWarning</td>\n<td align=\"left\">旧的关于自动提升为长整型(long)的警告</td>\n</tr>\n<tr>\n<td align=\"left\">PendingDeprecationWarning</td>\n<td align=\"left\">关于特性将会被废弃的警告</td>\n</tr>\n<tr>\n<td align=\"left\">RuntimeWarning</td>\n<td align=\"left\">可疑的运行时行为(runtime behavior)的警告</td>\n</tr>\n<tr>\n<td align=\"left\">SyntaxWarning</td>\n<td align=\"left\">可疑的语法的警告</td>\n</tr>\n<tr>\n<td align=\"left\">UserWarning</td>\n<td align=\"left\">用户代码生成的警告</td>\n</tr>\n</tbody></table>\n<h3 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h3><h5 id=\"try-except\"><a href=\"#try-except\" class=\"headerlink\" title=\"try/except\"></a>try/except</h5><p>基本格式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    执行代码\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    异常时执行的代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的不是数字，请再次尝试输入！\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n请输入一个数字: qq\n您输入的不是数字，请再次尝试输入！\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>首先执行try字句</li>\n<li>没有异常忽略except，结束try</li>\n<li>如果有异常，忽略try语句发生异常后面的语句，执行与except中与try发生的异常相符的语句</li>\n<li>如果没有相符的，那么这个异常将会传递给上层的 try 中</li>\n</ol>\n<p>一个except语句同时处理多个异常，这些异常将被放在一个括号里成为一个元组</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>RuntimeError<span class=\"token punctuation\">,</span> TypeError<span class=\"token punctuation\">,</span> NameError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>一个 try 语句可能包含多个except子句，分别来处理不同的特定的异常。最多只有一个分支会被执行。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myfile.txt'</span><span class=\"token punctuation\">)</span>\n    s <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> OSError <span class=\"token keyword\">as</span> err<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OS error: {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Could not convert data to an integer.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unexpected error:\"</span><span class=\"token punctuation\">,</span> sys<span class=\"token punctuation\">.</span>exc_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">raise</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"try-except…else\"><a href=\"#try-except…else\" class=\"headerlink\" title=\"try/except…else\"></a>try/except…else</h5><p>基本格式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    执行代码\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    异常时执行的代码\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    没有异常执行的代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> arg <span class=\"token keyword\">in</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> IOError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cannot open'</span><span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">,</span> <span class=\"token string\">'has'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lines'</span><span class=\"token punctuation\">)</span>\n        f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"try-finally-语句\"><a href=\"#try-finally-语句\" class=\"headerlink\" title=\"try-finally 语句\"></a>try-finally 语句</h5><p>基本格式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    执行代码\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    异常时执行的代码\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    没有异常执行的代码\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    无论如何都要执行的代码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    runoob<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> AssertionError <span class=\"token keyword\">as</span> error<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'file.log'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n            read_data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> FileNotFoundError <span class=\"token keyword\">as</span> fnf_error<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fnf_error<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这句话，无论异常是否发生都会执行。'</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\n这句话，无论异常是否发生都会执行。\nTraceback (most recent call last):\n  File xxxx in &lt;module&gt;\n    runoob()\nNameError: name 'runoob' is not defined\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"抛出异常\"><a href=\"#抛出异常\" class=\"headerlink\" title=\"抛出异常\"></a>抛出异常</h3><p> 使用 raise 语句抛出一个指定的异常</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">raise</span> <span class=\"token punctuation\">[</span>Exception <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> traceback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">if</span> x <span class=\"token operator\">&gt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'x 不能大于 5。x 的值为: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\nTraceback (most recent call last):\n  File xxx in &lt;module&gt;\n    raise Exception('x 不能大于 5。x 的值为: {}'.format(x))\nException: x 不能大于 5。x 的值为: 10\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> NameError<span class=\"token punctuation\">(</span><span class=\"token string\">'HiThere'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> NameError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An exception flew by!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">raise</span>\n    \n<span class=\"token triple-quoted-string string\">'''\nTraceback (most recent call last):\n  File xxxx in &lt;module&gt;\n    raise NameError('HiThere')\nNameError: HiThere\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"用户自定义异常\"><a href=\"#用户自定义异常\" class=\"headerlink\" title=\"用户自定义异常\"></a>用户自定义异常</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyError</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> MyError<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> MyError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My exception occurred, value:'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">raise</span> MyError<span class=\"token punctuation\">(</span><span class=\"token string\">'oops!'</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\nTraceback (most recent call last):\n  File xxx in &lt;module&gt;\n    raise MyError('oops!')\n__main__.MyError: 'oops!'\nMy exception occurred, value: 4\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"定义清理行为\"><a href=\"#定义清理行为\" class=\"headerlink\" title=\"定义清理行为\"></a>定义清理行为</h3><p>不管 try 子句里面有没有发生异常，finally 子句都会执行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> KeyboardInterrupt\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Goodbye, world!'</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\nTraceback (most recent call last):\n  File xxx in &lt;module&gt;\n    raise KeyboardInterrupt\nKeyboardInterrupt\nGoodbye, world!\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"预定义的清理行为\"><a href=\"#预定义的清理行为\" class=\"headerlink\" title=\"预定义的清理行为\"></a>预定义的清理行为</h3><p>一些对象定义了标准的清理行为，无论系统是否成功的使用了它，一旦不需要它了，那么这个标准的清理行为就会执行</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>以上这段代码的问题是，当执行完毕后，文件会保持打开状态，并没有被关闭</p>\n<p>关键词 with 语句就可以保证诸如文件之类的对象在使用完之后一定会正确的执行他的清理方法</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myfile.txt\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>以上这段代码执行完毕后，就算在处理过程中出问题了，文件 f 总是会关闭</p>\n<h2 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li><strong>类(Class):</strong> 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。</li>\n<li><strong>方法：</strong>类中定义的函数。</li>\n<li><strong>类变量：</strong>类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。</li>\n<li><strong>数据成员：</strong>类变量或者实例变量用于处理类及其实例对象的相关的数据。</li>\n<li><strong>方法重写：</strong>如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。</li>\n<li><strong>局部变量：</strong>定义在方法中的变量，只作用于当前实例的类。</li>\n<li><strong>实例变量：</strong>在类的声明中，属性是用变量来表示的，这种变量就称为实例变量，实例变量就是一个用 self 修饰的变量。</li>\n<li><strong>继承：</strong>即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。</li>\n<li><strong>实例化：</strong>创建一个类的实例，类的具体对象。</li>\n<li><strong>对象：</strong>通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。</li>\n</ul>\n<h3 id=\"类定义\"><a href=\"#类定义\" class=\"headerlink\" title=\"类定义\"></a>类定义</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassName</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">-</span>N<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"类对象\"><a href=\"#类对象\" class=\"headerlink\" title=\"类对象\"></a>类对象</h3><ol>\n<li>类对象支持属性引用和实例化</li>\n<li>属性引用格式 obj.name</li>\n<li>类对象创建后，类命名空间中所有的命名都是有效属性名</li>\n<li>类有一个名为 _<em>init</em>_() 的特殊方法（<strong>构造方法</strong>），该方法在类实例化时会自动调用</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"一个简单的类实例\"\"\"</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">12345</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'hello world'</span>\n \n<span class=\"token comment\"># 实例化类</span>\nx <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># 访问类的属性和方法</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyClass 类的属性 i 为：\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyClass 类的方法 f 输出为：\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nMyClass 类的属性 i 为： 12345\nMyClass 类的方法 f 输出为： hello world\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Complex</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> realpart<span class=\"token punctuation\">,</span> imagpart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> realpart\n        self<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> imagpart\nx <span class=\"token operator\">=</span> Complex<span class=\"token punctuation\">(</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出结果：3.0 -4.5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>self代表类的实例，而非类</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">prt</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span>\n \nt <span class=\"token operator\">=</span> Test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span>prt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n&lt;__main__.Test object at 0x000001A9BBFF6A60&gt;\n&lt;class '__main__.Test'&gt;\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>self不是关键字，换成其他的也行</p>\n<h3 id=\"类的方法\"><a href=\"#类的方法\" class=\"headerlink\" title=\"类的方法\"></a>类的方法</h3><ol>\n<li>使用def关键字来定义一个方法</li>\n<li>必须包含参数self并且为第一个</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#类定义</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">people</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#定义基本属性</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    age <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#定义私有属性,私有属性在类外部无法直接进行访问</span>\n    __weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#定义构造方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> n\n        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>__weight <span class=\"token operator\">=</span> w\n    <span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s 说: 我 %d 岁。\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\"># 实例化类</span>\np <span class=\"token operator\">=</span> people<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>speak<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nrunoob 说: 我 10 岁。\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>子类（派生类 DerivedClassName）会继承父类（基类 BaseClassName）的属性和方法</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DerivedClassName</span><span class=\"token punctuation\">(</span>BaseClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">-</span>N<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>基类定义在另一个模块中时</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DerivedClassName</span><span class=\"token punctuation\">(</span>modname<span class=\"token punctuation\">.</span>BaseClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#类定义</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">people</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#定义基本属性</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    age <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#定义私有属性,私有属性在类外部无法直接进行访问</span>\n    __weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#定义构造方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> n\n        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>__weight <span class=\"token operator\">=</span> w\n    <span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s 说: 我 %d 岁。\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\">#单继承示例</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">student</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    grade <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#调用父类的构函</span>\n        people<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>grade <span class=\"token operator\">=</span> g\n    <span class=\"token comment\">#覆写父类的方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s 说: 我 %d 岁了，我在读 %d 年级\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n \n \ns <span class=\"token operator\">=</span> student<span class=\"token punctuation\">(</span><span class=\"token string\">'ken'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>speak<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\nken 说: 我 10 岁了，我在读 3 年级\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>继承时可以直接调用父类构造函数，再添加新的变量</li>\n<li>父类的方法也能直接调用或者重写</li>\n<li>子类不重写 **_<em>init</em><em>**，实例化子类时，会自动调用父类定义的 **_<em>init</em></em>**</li>\n</ol>\n<h3 id=\"多继承\"><a href=\"#多继承\" class=\"headerlink\" title=\"多继承\"></a>多继承</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DerivedClassName</span><span class=\"token punctuation\">(</span>Base1<span class=\"token punctuation\">,</span> Base2<span class=\"token punctuation\">,</span> Base3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">&lt;</span>statement<span class=\"token operator\">-</span>N<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>若是父类中有相同的方法名，而在子类使用时未指定，python从左至右搜索 即方法在子类中未找到时，从左到右查找父类中是否包含方法</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#类定义</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">people</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#定义基本属性</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    age <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#定义私有属性,私有属性在类外部无法直接进行访问</span>\n    __weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\">#定义构造方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> n\n        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>__weight <span class=\"token operator\">=</span> w\n    <span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s 说: 我 %d 岁。\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\">#单继承示例</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">student</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    grade <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#调用父类的构函</span>\n        people<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>grade <span class=\"token operator\">=</span> g\n    <span class=\"token comment\">#覆写父类的方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s 说: 我 %d 岁了，我在读 %d 年级\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\">#另一个类，多重继承之前的准备</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">speaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    topic <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> n\n        self<span class=\"token punctuation\">.</span>topic <span class=\"token operator\">=</span> t\n    <span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我叫 %s，我是一个演说家，我演讲的主题是 %s\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token comment\">#多重继承</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">sample</span><span class=\"token punctuation\">(</span>speaker<span class=\"token punctuation\">,</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span><span class=\"token string\">''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        student<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">)</span>\n        speaker<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span>\n \ntest <span class=\"token operator\">=</span> sample<span class=\"token punctuation\">(</span><span class=\"token string\">\"Tim\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">)</span>\ntest<span class=\"token punctuation\">.</span>speak<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#方法名同，默认调用的是在括号中排前地父类的方法</span>\n\n<span class=\"token triple-quoted-string string\">'''\n我叫 Tim，我是一个演说家，我演讲的主题是 Python\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"方法重写\"><a href=\"#方法重写\" class=\"headerlink\" title=\"方法重写\"></a>方法重写</h3><p>super() 函数是用于调用父类(超类)的一个方法</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span><span class=\"token punctuation\">:</span>        <span class=\"token comment\"># 定义父类</span>\n   <span class=\"token keyword\">def</span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'调用父类方法'</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span>Parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 定义子类</span>\n   <span class=\"token keyword\">def</span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'调用子类方法'</span><span class=\"token punctuation\">)</span>\n \nc <span class=\"token operator\">=</span> Child<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\"># 子类实例</span>\nc<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 子类调用重写方法</span>\n<span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Child<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#用子类对象调用父类已被覆盖的方法</span>\n\n<span class=\"token triple-quoted-string string\">'''\n调用子类方法\n调用父类方法\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"子类继承父类构造函数说明\"><a href=\"#子类继承父类构造函数说明\" class=\"headerlink\" title=\"子类继承父类构造函数说明\"></a>子类继承父类构造函数说明</h3><p>子类不重写 **_<em>init</em><em>**，实例化子类时，会自动调用父类定义的 **_<em>init</em></em>**</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name\n \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name\n \n<span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\nname: runoob\nSon runoob\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果重写了<strong>_<em>init</em>_</strong> 时，实例化子类，就不会调用父类已经定义的 <strong>_<em>init</em>_</strong></p>\n<p>如果重写了<strong>_<em>init</em>_</strong> 时，要继承父类的构造方法，可以使用 <strong>super</strong> 关键字</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>子类，self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>参数<span class=\"token number\">1</span>，参数<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>还有一种经典写法</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">父类名称<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>参数<span class=\"token number\">1</span>，参数<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name\n \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Son<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span>  name\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name\n \n<span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    \n<span class=\"token triple-quoted-string string\">'''\nname: runoob\nhi\nSon runoob\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"类属性与方法\"><a href=\"#类属性与方法\" class=\"headerlink\" title=\"类属性与方法\"></a>类属性与方法</h3><h4 id=\"类的私有属性\"><a href=\"#类的私有属性\" class=\"headerlink\" title=\"类的私有属性\"></a>类的私有属性</h4><p><strong>__private_attrs</strong>：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 <strong>self.__private_attrs</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">JustCounter</span><span class=\"token punctuation\">:</span>\n    __secretCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># 私有变量</span>\n    publicCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>    <span class=\"token comment\"># 公开变量</span>\n \n    <span class=\"token keyword\">def</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>__secretCount <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        self<span class=\"token punctuation\">.</span>publicCount <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>__secretCount<span class=\"token punctuation\">)</span>\n \ncounter <span class=\"token operator\">=</span> JustCounter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncounter<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncounter<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span>publicCount<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">.</span>__secretCount<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 报错，实例不能访问私有变量</span>\n\n<span class=\"token triple-quoted-string string\">'''\n1\n2\n2\nTraceback (most recent call last):\n  File \"test.py\", line 16, in &lt;module&gt;\n    print (counter.__secretCount)  # 报错，实例不能访问私有变量\nAttributeError: 'JustCounter' object has no attribute '__secretCount'\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"类的方法-1\"><a href=\"#类的方法-1\" class=\"headerlink\" title=\"类的方法\"></a>类的方法</h4><p>在类的内部，使用 def 关键字来定义一个方法，与一般函数定义不同，类方法必须包含参数 <strong>self</strong>，且为第一个参数，<strong>self</strong> 代表的是类的实例</p>\n<p><strong>self</strong> 的名字并不是规定死的，也可以使用 <strong>this</strong>，但是最好还是按照约定使用 <strong>self</strong></p>\n<h4 id=\"类的私有方法\"><a href=\"#类的私有方法\" class=\"headerlink\" title=\"类的私有方法\"></a>类的私有方法</h4><p><strong>__private_method</strong>：两个下划线开头，声明该方法为私有方法，只能在类的内部调用 ，不能在类的外部调用<strong>self.__private_methods</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Site</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name       <span class=\"token comment\"># public</span>\n        self<span class=\"token punctuation\">.</span>__url <span class=\"token operator\">=</span> url   <span class=\"token comment\"># private</span>\n \n    <span class=\"token keyword\">def</span> <span class=\"token function\">who</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name  : '</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url : '</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>__url<span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">def</span> <span class=\"token function\">__foo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>          <span class=\"token comment\"># 私有方法</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是私有方法'</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>            <span class=\"token comment\"># 公共方法</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是公共方法'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>__foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \nx <span class=\"token operator\">=</span> Site<span class=\"token punctuation\">(</span><span class=\"token string\">'菜鸟教程'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'www.runoob.com'</span><span class=\"token punctuation\">)</span>\nx<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># 正常输出</span>\nx<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># 正常输出</span>\nx<span class=\"token punctuation\">.</span>__foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># 报错</span>\n\n<span class=\"token triple-quoted-string string\">'''\nname  :  菜鸟教程\nurl :  www.runoob.com\n这是公共方法\n这是私有方法\nTraceback (most recent call last):\n  File xxxx in &lt;module&gt;\n    x.__foo()  # 报错\nAttributeError: 'Site' object has no attribute '__foo'\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"类的专有方法\"><a href=\"#类的专有方法\" class=\"headerlink\" title=\"类的专有方法\"></a>类的专有方法</h3><ul>\n<li><strong><strong>init</strong> :</strong> 构造函数，在生成对象时调用</li>\n<li><strong><strong>del</strong> :</strong> 析构函数，释放对象时使用</li>\n<li><strong><strong>repr</strong> :</strong> 打印，转换</li>\n<li><strong><strong>setitem</strong> :</strong> 按照索引赋值</li>\n<li><strong><strong>getitem</strong>:</strong> 按照索引获取值</li>\n<li><strong><strong>len</strong>:</strong> 获得长度</li>\n<li><strong><strong>cmp</strong>:</strong> 比较运算</li>\n<li><strong><strong>call</strong>:</strong> 函数调用</li>\n<li><strong><strong>add</strong>:</strong> 加运算</li>\n<li><strong><strong>sub</strong>:</strong> 减运算</li>\n<li><strong><strong>mul</strong>:</strong> 乘运算</li>\n<li><strong><strong>truediv</strong>:</strong> 除运算</li>\n<li><strong><strong>mod</strong>:</strong> 求余运算</li>\n<li><strong><strong>pow</strong>:</strong> 乘方</li>\n</ul>\n<h3 id=\"运算符重载\"><a href=\"#运算符重载\" class=\"headerlink\" title=\"运算符重载\"></a>运算符重载</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n      self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n \n   <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Vector (%d, %d)'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n   \n   <span class=\"token keyword\">def</span> <span class=\"token function\">__add__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> Vector<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">+</span> other<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">+</span> other<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n \nv1 <span class=\"token operator\">=</span> Vector<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nv2 <span class=\"token operator\">=</span> Vector<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Vector(7,8)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"命名空间和作用域\"><a href=\"#命名空间和作用域\" class=\"headerlink\" title=\"命名空间和作用域\"></a>命名空间和作用域</h2><h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><ol>\n<li>命名空间(Namespace)是从名称到对象的映射，大部分的命名空间都是通过 Python 字典来实现的</li>\n<li>各个命名空间是独立的，所以一个命名空间中不能有重名，不同的命名空间可以重名</li>\n<li>命名空间的生命周期取决于对象的作用域，如果对象执行完成，则该命名空间的生命周期就结束</li>\n<li>无法从外部命名空间访问内部命名空间的对象</li>\n</ol>\n<p>三种命名空间</p>\n<ul>\n<li><strong>内置名称（built-in names</strong>）， Python 语言内置的名称，比如函数名 abs、char 和异常名称 BaseException、Exception 等等</li>\n<li><strong>全局名称（global names）</strong>，模块中定义的名称，记录了模块的变量，包括函数、类、其它导入的模块、模块级的变量和常量</li>\n<li><strong>局部名称（local names）</strong>，函数中定义的名称，记录了函数的变量，包括函数的参数和局部定义的变量。（类中定义的也是）</li>\n</ul>\n<p>查找顺序为：<strong>局部的命名空间去 -&gt; 全局命名空间 -&gt; 内置命名空间</strong></p>\n<p>如果找不到变量，它将放弃查找并引发一个 NameError 异常</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># var1 是全局名称</span>\nvar1 <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n \n    <span class=\"token comment\"># var2 是局部名称</span>\n    var2 <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">some_inner_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n \n        <span class=\"token comment\"># var3 是内嵌的局部名称</span>\n        var3 <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h3><ol>\n<li>作用域就是一个 Python 程序可以直接访问命名空间的正文区域</li>\n<li>程序的变量并不是在哪个位置都可以访问的，访问权限决定于这个变量是在哪里赋值的</li>\n</ol>\n<p>四种作用域</p>\n<ul>\n<li><strong>L（Local）</strong>：最内层，包含局部变量，比如一个函数/方法内部</li>\n<li><strong>E（Enclosing）</strong>：包含了非局部(non-local)也非全局(non-global)的变量。比如两个嵌套函数，一个函数（或类） A 里面又包含了一个函数 B ，那么对于 B 中的名称来说 A 中的作用域就为 nonlocal</li>\n<li><strong>G（Global）</strong>：当前脚本的最外层，比如当前模块的全局变量。</li>\n<li><strong>B（Built-in）</strong>： 包含了内建的变量/关键字等，最后被搜索。</li>\n</ul>\n<p>规则顺序： <strong>L –&gt; E –&gt; G –&gt; B</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">g_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># 全局作用域</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    o_count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 闭包函数外的函数中</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        i_count <span class=\"token operator\">=</span> <span class=\"token number\">2</span>  <span class=\"token comment\"># 局部作用域</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>内置作用域通过一个名为 builtin 的标准模块来实现</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> builtins\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span>builtins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出预定义变量</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>Python 中只有模块（module），类（class）以及函数（def、lambda）才会引入新的作用域，其它的代码块（如 if/elif/else/、try/except、for/while等）是不会引入新的作用域的，也就是说这些语句内定义的变量，外部也可以访问</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    msg <span class=\"token operator\">=</span> <span class=\"token string\">'I am from Runoob'</span>  <span class=\"token comment\"># 外部可以访问</span>\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    msg_inner <span class=\"token operator\">=</span> <span class=\"token string\">'I am from Runoob'</span>  <span class=\"token comment\"># 外部不能访问</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"全局变量和局部变量\"><a href=\"#全局变量和局部变量\" class=\"headerlink\" title=\"全局变量和局部变量\"></a>全局变量和局部变量</h3><ol>\n<li>定义在函数内部的变量拥有一个局部作用域，定义在函数外的拥有全局作用域</li>\n<li>局部变量只能在其被声明的函数内部访问，而全局变量可以在整个程序范围内访问</li>\n<li>调用函数时，所有在函数内声明的变量名称都将被加入到作用域中</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">total <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 这是一个全局变量</span>\n<span class=\"token comment\"># 可写函数说明</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span> arg1<span class=\"token punctuation\">,</span> arg2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#返回2个参数的和.\"</span>\n    total <span class=\"token operator\">=</span> arg1 <span class=\"token operator\">+</span> arg2 <span class=\"token comment\"># total在这里是局部变量.</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"函数内是局部变量 : \"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> total\n \n<span class=\"token comment\">#调用sum函数</span>\n<span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"函数外是全局变量 : \"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token triple-quoted-string string\">'''\n函数内是局部变量 :  30\n函数外是全局变量 :  0\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"global-和-nonlocal关键字\"><a href=\"#global-和-nonlocal关键字\" class=\"headerlink\" title=\"global 和 nonlocal关键字\"></a>global 和 nonlocal关键字</h3><p>当内部作用域想修改外部作用域的变量时，用到 global 和 nonlocal 关键字</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 修改全局变量 num</span>\n\nnum <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> num  <span class=\"token comment\"># 需要使用 global 关键字声明</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> \n    num <span class=\"token operator\">=</span> <span class=\"token number\">123</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\nfun1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n1\n123\n123\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>nonlocal 修改嵌套作用域（enclosing 作用域，外层非全局作用域）中的变量</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    num <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">nonlocal</span> num   <span class=\"token comment\"># nonlocal关键字声明</span>\n        num <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    inner<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\nouter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n100\n100\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"标准库概览\"><a href=\"#标准库概览\" class=\"headerlink\" title=\"标准库概览\"></a>标准库概览</h2><h3 id=\"操作系统接口\"><a href=\"#操作系统接口\" class=\"headerlink\" title=\"操作系统接口\"></a>操作系统接口</h3><p>os模块提供了不少与操作系统相关联的函数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 返回当前的工作目录</span>\nos<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span><span class=\"token string\">'/server/accesslogs'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 修改当前的工作目录</span>\nos<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'mkdir today'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 执行系统命令 mkdir</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># returns a list of all module functions</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">help</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 帮助文档</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>针对日常的文件和目录管理任务，:mod:shutil 模块提供了一个易于使用的高级接口</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> shutil\nshutil<span class=\"token punctuation\">.</span>copyfile<span class=\"token punctuation\">(</span><span class=\"token string\">'data.db'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'archive.db'</span><span class=\"token punctuation\">)</span>\nshutil<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span><span class=\"token string\">'/build/executables'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'installdir'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"文件通配符\"><a href=\"#文件通配符\" class=\"headerlink\" title=\"文件通配符\"></a>文件通配符</h3><p>glob模块提供了一个函数用于从目录通配符搜索中生成文件列表</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> glob\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span><span class=\"token string\">'*.py'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['xxx.py', 'xxx.py', 'xxx.py']</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"命令行参数\"><a href=\"#命令行参数\" class=\"headerlink\" title=\"命令行参数\"></a>命令行参数</h3><p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。例如在命令行中执行 “python demo.py one two three” 后可以得到以下输出结果:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"错误输出重定向和程序终止\"><a href=\"#错误输出重定向和程序终止\" class=\"headerlink\" title=\"错误输出重定向和程序终止\"></a>错误输出重定向和程序终止</h3><p>sys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'Warning, log file not found starting a new one\\n'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>大多脚本的定向终止都使用 sys.exit()</p>\n<h3 id=\"字符串正则匹配\"><a href=\"#字符串正则匹配\" class=\"headerlink\" title=\"字符串正则匹配\"></a>字符串正则匹配</h3><p>re模块为高级字符串处理提供了正则表达式工具</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\bf[a-z]*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'which foot or hand fell fastest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ['foot', 'fell', 'fastest']</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">r'(\\b[a-z]+) \\1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'\\1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cat in the the hat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 'cat in the hat'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数学\"><a href=\"#数学\" class=\"headerlink\" title=\"数学\"></a>数学</h3><p>math模块为浮点运算提供了对底层C函数库的访问</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.70710678118654757</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 10.0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>random提供了生成随机数的工具</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 'apple'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># sampling without replacement</span>\n<span class=\"token comment\"># [30, 83, 16, 4, 8, 81, 41, 50, 18, 33]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># random float</span>\n<span class=\"token comment\"># 0.17970987693706186</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># random integer chosen from range(6)</span>\n<span class=\"token comment\"># 3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"访问互联网\"><a href=\"#访问互联网\" class=\"headerlink\" title=\"访问互联网\"></a>访问互联网</h3><p>有几个模块用于访问互联网以及处理网络通信协议，处理从 urls 接收的数据的 urllib.request 以及用于发送电子邮件的 smtplib</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> urlopen\n\n<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> urlopen<span class=\"token punctuation\">(</span><span class=\"token string\">'http://tycho.usno.navy.mil/cgi-bin/timer.pl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Decoding the binary data to text.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">'EST'</span> <span class=\"token keyword\">in</span> line <span class=\"token keyword\">or</span> <span class=\"token string\">'EDT'</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># look for Eastern Time</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># &lt;BR&gt;Nov. 25, 09:43:32 PM EST</span>\n\n<span class=\"token keyword\">import</span> smtplib\n\nserver <span class=\"token operator\">=</span> smtplib<span class=\"token punctuation\">.</span>SMTP<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">)</span>\nserver<span class=\"token punctuation\">.</span>sendmail<span class=\"token punctuation\">(</span><span class=\"token string\">'soothsayer@example.org'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jcaesar@example.org'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token triple-quoted-string string\">\"\"\"To: jcaesar@example.org\nFrom: soothsayer@example.org\n\nBeware the Ides of March.\n\"\"\"</span><span class=\"token punctuation\">)</span>\nserver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"日期和时间\"><a href=\"#日期和时间\" class=\"headerlink\" title=\"日期和时间\"></a>日期和时间</h3><p>datetime模块为日期和时间处理</p>\n<p>该模块还支持时区处理</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># dates are easily constructed and formatted</span>\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\nnow <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2021-09-26</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%m-%d-%y. %d %b %Y is a %A on the %d day of %B.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 09-26-21. 26 Sep 2021 is a Sunday on the 26 day of September.</span>\n\n<span class=\"token comment\"># dates support calendar arithmetic</span>\nbirthday <span class=\"token operator\">=</span> date<span class=\"token punctuation\">(</span><span class=\"token number\">1964</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span>\nage <span class=\"token operator\">=</span> now <span class=\"token operator\">-</span> birthday\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">.</span>days<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 20876</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据压缩\"><a href=\"#数据压缩\" class=\"headerlink\" title=\"数据压缩\"></a>数据压缩</h3><p>以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> zlib\ns <span class=\"token operator\">=</span> <span class=\"token string\">b'witch which has which witches wrist watch'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 41</span>\nt <span class=\"token operator\">=</span> zlib<span class=\"token punctuation\">.</span>compress<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 37</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>zlib<span class=\"token punctuation\">.</span>decompress<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># b'witch which has which witches wrist watch'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>zlib<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 226805979</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"性能度量\"><a href=\"#性能度量\" class=\"headerlink\" title=\"性能度量\"></a>性能度量</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> timeit <span class=\"token keyword\">import</span> Timer\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Timer<span class=\"token punctuation\">(</span><span class=\"token string\">'t=a; a=b; b=t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a=1; b=2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.032305799999999996</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Timer<span class=\"token punctuation\">(</span><span class=\"token string\">'a,b = b,a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a=1; b=2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.025154800000000005</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测试模块\"><a href=\"#测试模块\" class=\"headerlink\" title=\"测试模块\"></a>测试模块</h3><p>doctest模块提供了一个工具，扫描模块并根据程序中内嵌的文档字符串执行测试</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Computes the arithmetic mean of a list of numbers.\n\n    &gt;&gt;&gt; print(average([20, 30, 70]))\n    40.0\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> doctest\ndoctest<span class=\"token punctuation\">.</span>testmod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 自动验证嵌入测试</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>unittest模块不像 doctest模块那么容易使用，不过它可以在一个独立的文件里提供一个更全面的测试集</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> unittest\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestStatisticalFunctions</span><span class=\"token punctuation\">(</span>unittest<span class=\"token punctuation\">.</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_average</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span>average<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40.0</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>average<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.3</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertRaises<span class=\"token punctuation\">(</span>ZeroDivisionError<span class=\"token punctuation\">,</span> average<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertRaises<span class=\"token punctuation\">(</span>TypeError<span class=\"token punctuation\">,</span> average<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span>\n\nunittest<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># Calling from the command line invokes all tests</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"时间和日期\"><a href=\"#时间和日期\" class=\"headerlink\" title=\"时间和日期\"></a>时间和日期</h2><ol>\n<li>每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示</li>\n<li>时间间隔是以秒为单位的浮点小数</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time  <span class=\"token comment\"># 引入time模块</span>\n\nticks <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前时间戳为:\"</span><span class=\"token punctuation\">,</span> ticks<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 当前时间戳为: 1632676717.5455847</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"时间元组\"><a href=\"#时间元组\" class=\"headerlink\" title=\"时间元组\"></a>时间元组</h3><table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th>字段</th>\n<th align=\"left\">属性</th>\n<th align=\"left\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">0</td>\n<td>4位数年</td>\n<td align=\"left\">tm_year</td>\n<td align=\"left\">2008</td>\n</tr>\n<tr>\n<td align=\"left\">1</td>\n<td>月</td>\n<td align=\"left\">tm_mon</td>\n<td align=\"left\">1 到 12</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td>日</td>\n<td align=\"left\">tm_mday</td>\n<td align=\"left\">1 到 31</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td>小时</td>\n<td align=\"left\">tm_hour</td>\n<td align=\"left\">0 到 23</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td>分钟</td>\n<td align=\"left\">tm_min</td>\n<td align=\"left\">0 到 59</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td>秒</td>\n<td align=\"left\">tm_sec</td>\n<td align=\"left\">0 到 61 (60或61 是闰秒)</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td>一周的第几日</td>\n<td align=\"left\">tm_wday</td>\n<td align=\"left\">0到6 (0是周一)</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td>一年的第几日</td>\n<td align=\"left\">tm_yday</td>\n<td align=\"left\">1 到 366(儒略历)</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td>夏令时</td>\n<td align=\"left\">tm_isdst</td>\n<td align=\"left\">-1, 0, 1, -1是决定是否为夏令时的旗帜</td>\n</tr>\n</tbody></table>\n<h3 id=\"获取当前时间\"><a href=\"#获取当前时间\" class=\"headerlink\" title=\"获取当前时间\"></a>获取当前时间</h3><p>从返回浮点数的时间戳方式向时间元组转换，只要将浮点数传递给如localtime之类的函数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n\nlocaltime <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"本地时间为 :\"</span><span class=\"token punctuation\">,</span> localtime<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 本地时间为 : time.struct_time(tm_year=2021, tm_mon=9, tm_mday=27, tm_hour=1, tm_min=24, tm_sec=5, tm_wday=0, tm_yday=270, tm_isdst=0)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"获取格式化的时间\"><a href=\"#获取格式化的时间\" class=\"headerlink\" title=\"获取格式化的时间\"></a>获取格式化的时间</h3><p>获取可读的时间模式的函数是asctime()</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n\nlocaltime <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"本地时间为 :\"</span><span class=\"token punctuation\">,</span> localtime<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 本地时间为 : Mon Sep 27 01:25:32 2021</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"格式化日期\"><a href=\"#格式化日期\" class=\"headerlink\" title=\"格式化日期\"></a>格式化日期</h3><p>time 模块的 strftime 方法来格式化日期</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n\n<span class=\"token comment\"># 格式化成2016-03-20 11:45:39形式</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 格式化成Sat Mar 28 22:24:24 2016形式</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%a %b %d %H:%M:%S %Y\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 将格式字符串转换为时间戳</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">\"Sat Mar 28 22:24:24 2016\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%a %b %d %H:%M:%S %Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n2021-09-27 01:28:18\nMon Sep 27 01:28:18 2021\n1459175064.0\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>python中时间日期格式化符号</p>\n<ul>\n<li>%y 两位数的年份表示（00-99）</li>\n<li>%Y 四位数的年份表示（000-9999）</li>\n<li>%m 月份（01-12）</li>\n<li>%d 月内中的一天（0-31）</li>\n<li>%H 24小时制小时数（0-23）</li>\n<li>%I 12小时制小时数（01-12）</li>\n<li>%M 分钟数（00-59）</li>\n<li>%S 秒（00-59）</li>\n<li>%a 本地简化星期名称</li>\n<li>%A 本地完整星期名称</li>\n<li>%b 本地简化的月份名称</li>\n<li>%B 本地完整的月份名称</li>\n<li>%c 本地相应的日期表示和时间表示</li>\n<li>%j 年内的一天（001-366）</li>\n<li>%p 本地A.M.或P.M.的等价符</li>\n<li>%U 一年中的星期数（00-53）星期天为星期的开始</li>\n<li>%w 星期（0-6），星期天为星期的开始</li>\n<li>%W 一年中的星期数（00-53）星期一为星期的开始</li>\n<li>%x 本地相应的日期表示</li>\n<li>%X 本地相应的时间表示</li>\n<li>%Z 当前时区的名称</li>\n<li>%% %号本身</li>\n</ul>\n<h3 id=\"获取某月日历\"><a href=\"#获取某月日历\" class=\"headerlink\" title=\"获取某月日历\"></a>获取某月日历</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> calendar\n\ncal <span class=\"token operator\">=</span> calendar<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">(</span><span class=\"token number\">2016</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"以下输出2016年1月份的日历:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cal<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n以下输出2016年1月份的日历:\n    January 2016\nMo Tu We Th Fr Sa Su\n             1  2  3\n 4  5  6  7  8  9 10\n11 12 13 14 15 16 17\n18 19 20 21 22 23 24\n25 26 27 28 29 30 31\n'''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Time-模块\"><a href=\"#Time-模块\" class=\"headerlink\" title=\"Time 模块\"></a>Time 模块</h3><p>Time 模块包含了以下内置函数，既有时间处理的，也有转换时间格式的</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">函数及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-altzone.html\">time.altzone</a> 返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">[time.asctime(<a href=\"https://www.runoob.com/python/att-time-asctime.html\">tupletime])</a> 接受时间元组并返回一个可读的形式为”Tue Dec 11 18:07:14 2008”（2008年12月11日 周二18时07分14秒）的24个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-clock.html\">time.clock( )</a> 用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\">[time.ctime(<a href=\"https://www.runoob.com/python/att-time-ctime.html\">secs])</a> 作用相当于asctime(localtime(secs))，未给参数相当于asctime()</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\">[time.gmtime(<a href=\"https://www.runoob.com/python/att-time-gmtime.html\">secs])</a> 接收时间戳（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\">[time.localtime(<a href=\"https://www.runoob.com/python/att-time-localtime.html\">secs])</a> 接收时间戳（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-mktime.html\">time.mktime(tupletime)</a> 接受时间元组并返回时间戳（1970纪元后经过的浮点秒数）。</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-sleep.html\">time.sleep(secs)</a> 推迟调用线程的运行，secs指秒数。</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\">[time.strftime(fmt<a href=\"https://www.runoob.com/python/att-time-strftime.html\">,tupletime])</a> 接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-strptime.html\">time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)</a> 根据fmt的格式把一个时间字符串解析为时间元组。</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-time.html\">time.time( )</a> 返回当前时间的时间戳（1970纪元后经过的浮点秒数）。</td>\n</tr>\n<tr>\n<td align=\"left\">12</td>\n<td align=\"left\"><a href=\"https://www.runoob.com/python/att-time-tzset.html\">time.tzset()</a> 根据环境变量TZ重新初始化时间相关设置。</td>\n</tr>\n</tbody></table>\n<p>Time模块包含了以下2个非常重要的属性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">属性及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><strong>time.timezone</strong> 属性 time.timezone 是当地时区（未启动夏令时）距离格林威治的偏移秒数（&gt;0，美洲&lt;=0大部分欧洲，亚洲，非洲）。</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><strong>time.tzname</strong> 属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。</td>\n</tr>\n</tbody></table>\n<h3 id=\"日历（Calendar）模块\"><a href=\"#日历（Calendar）模块\" class=\"headerlink\" title=\"日历（Calendar）模块\"></a>日历（Calendar）模块</h3><p>此模块的函数都是日历相关的，例如打印某月的字符月历。</p>\n<p>星期一是默认的每周第一天，星期天是默认的最后一天。更改设置需调用calendar.setfirstweekday()函数。模块包含了以下内置函数</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">序号</th>\n<th align=\"left\">函数及描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\"><strong>calendar.calendar(year,w=2,l=1,c=6)</strong> 返回一个多行字符串格式的year年年历，3个月一行，间隔距离为c。 每日宽度间隔为w字符。每行长度为21* W+18+2* C。l是每星期行数。</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\"><strong>calendar.firstweekday( )</strong> 返回当前每周起始日期的设置。默认情况下，首次载入 calendar 模块时返回 0，即星期一。</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\"><strong>calendar.isleap(year)</strong> 是闰年返回 True，否则为 False。<code>&gt;&gt;&gt; import calendar &gt;&gt;&gt; print(calendar.isleap(2000)) True &gt;&gt;&gt; print(calendar.isleap(1900)) False</code></td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\"><strong>calendar.leapdays(y1,y2)</strong> 返回在Y1，Y2两年之间的闰年总数。</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\"><strong>calendar.month(year,month,w=2,l=1)</strong> 返回一个多行字符串格式的year年month月日历，两行标题，一周一行。每日宽度间隔为w字符。每行的长度为7* w+6。l是每星期的行数。</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\"><strong>calendar.monthcalendar(year,month)</strong> 返回一个整数的单层嵌套列表。每个子列表装载代表一个星期的整数。Year年month月外的日期都设为0;范围内的日子都由该月第几日表示，从1开始。</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\"><strong>calendar.monthrange(year,month)</strong> 返回两个整数。第一个是该月的星期几的日期码，第二个是该月的日期码。日从0（星期一）到6（星期日）;月从1到12。</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\"><strong>calendar.prcal(year,w=2,l=1,c=6)</strong> 相当于 **print calendar.calendar(year,w=2,l=1,c=6)**。</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\"><strong>calendar.prmonth(year,month,w=2,l=1)</strong> 相当于 <strong>print calendar.month(year,month,w=2,l=1)</strong> 。</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\"><strong>calendar.setfirstweekday(weekday)</strong> 设置每周的起始日期码。0（星期一）到6（星期日）。</td>\n</tr>\n<tr>\n<td align=\"left\">11</td>\n<td align=\"left\"><strong>calendar.timegm(tupletime)</strong> 和time.gmtime相反：接受一个时间元组形式，返回该时刻的时间戳（1970纪元后经过的浮点秒数）。</td>\n</tr>\n<tr>\n<td align=\"left\">12</td>\n<td align=\"left\"><strong>calendar.weekday(year,month,day)</strong> 返回给定日期的日期码。0（星期一）到6（星期日）。月份为 1（一月） 到 12（12月）。</td>\n</tr>\n</tbody></table>\n<p>待更新</p>\n",
            "tags": [
                "学习",
                "python"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/06/06/gailvlun/",
            "url": "https://0xdadream.github.io/2021/06/06/gailvlun/",
            "title": "概率论复习",
            "date_published": "2021-06-06T01:25:00.000Z",
            "content_html": "<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605145107900.png\" alt=\"image-20210605145107900\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605145032945.png\" alt=\"image-20210605145032945\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605145203400.png\" alt=\"image-20210605145203400\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605145230834.png\" alt=\"image-20210605145230834\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605145259602.png\" alt=\"image-20210605145259602\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605141421676.png\" alt=\"image-20210605141421676\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605141508158.png\" alt=\"image-20210605141508158\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605141659654.png\" alt=\"image-20210605141659654\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605141548849.png\" alt=\"image-20210605141548849\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605141754051.png\" alt=\"image-20210605141754051\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605141913183.png\" alt=\"image-20210605141913183\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605142008135.png\" alt=\"image-20210605142008135\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605142257167.png\" alt=\"image-20210605142257167\"></p>\n<p>  <img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605142345424.png\" alt=\"image-20210605142345424\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605142801766.png\" alt=\"image-20210605142801766\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605142840333.png\" alt=\"image-20210605142840333\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605142927152.png\" alt=\"image-20210605142927152\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605143103403.png\" alt=\"image-20210605143103403\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605143343113.png\" alt=\"image-20210605143343113\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605143513931.png\" alt=\"image-20210605143513931\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605143733628.png\" alt=\"image-20210605143733628\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605143904143.png\" alt=\"image-20210605143904143\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605144052735.png\" alt=\"image-20210605144052735\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605144233195.png\" alt=\"image-20210605144233195\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605144427071.png\" alt=\"image-20210605144427071\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605144620335.png\" alt=\"image-20210605144620335\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605144918602.png\" alt=\"image-20210605144918602\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605144939856.png\" alt=\"image-20210605144939856\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605151627463.png\" alt=\"image-20210605151627463\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605151711739.png\" alt=\"image-20210605151711739\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605151848511.png\" alt=\"image-20210605151848511\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605151957227.png\" alt=\"image-20210605151957227\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605152148901.png\" alt=\"image-20210605152148901\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605152658749.png\" alt=\"image-20210605152658749\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605152846514.png\" alt=\"image-20210605152846514\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605153248570.png\" alt=\"image-20210605153248570\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605153549745.png\" alt=\"image-20210605153549745\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605153723252.png\" alt=\"image-20210605153723252\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605153753434.png\" alt=\"image-20210605153753434\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605153948101.png\" alt=\"image-20210605153948101\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605154136376.png\" alt=\"image-20210605154136376\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605154454662.png\" alt=\"image-20210605154454662\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605154558264.png\" alt=\"image-20210605154558264\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605214436459.png\" alt=\"image-20210605214436459\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605214541503.png\" alt=\"image-20210605214541503\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605214749022.png\" alt=\"image-20210605214749022\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605214823914.png\" alt=\"image-20210605214823914\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605215147862.png\" alt=\"image-20210605215147862\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605215313664.png\" alt=\"image-20210605215313664\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605215410937.png\" alt=\"image-20210605215410937\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605215451785.png\" alt=\"image-20210605215451785\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605215637916.png\" alt=\"image-20210605215637916\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605215738708.png\" alt=\"image-20210605215738708\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220007242.png\" alt=\"image-20210605220007242\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220223548.png\" alt=\"image-20210605220223548\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220448263.png\" alt=\"image-20210605220448263\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220534601.png\" alt=\"image-20210605220534601\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220640151.png\" alt=\"image-20210605220640151\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220813441.png\" alt=\"image-20210605220813441\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605220956826.png\" alt=\"image-20210605220956826\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605232951954.png\" alt=\"image-20210605232951954\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605233155732.png\" alt=\"image-20210605233155732\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605233416112.png\" alt=\"image-20210605233416112\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605233647177.png\" alt=\"image-20210605233647177\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605233942148.png\" alt=\"image-20210605233942148\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605234037479.png\" alt=\"image-20210605234037479\"></p>\n<p> <img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605234307183.png\" alt=\"image-20210605234307183\"></p>\n<p><img src=\"/2021/06/06/gailvlun/gailvlun/image-20210605234418776.png\" alt=\"image-20210605234418776\"></p>\n",
            "tags": [
                "学习"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/05/27/phps-study/",
            "url": "https://0xdadream.github.io/2021/05/27/phps-study/",
            "title": "php复习",
            "date_published": "2021-05-27T01:25:00.000Z",
            "content_html": "<h1 id=\"php-study\"><a href=\"#php-study\" class=\"headerlink\" title=\"php_study\"></a>php_study</h1><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">//单行注释</span>\n<span class=\"token comment\">/*\n多行注释\n*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">/*\n变量以 $ 符号开始，后面跟着变量的名称\n变量名必须以字母或者下划线字符开始\n变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）\n变量名不能包含空格\n变量名是区分大小写的（$y 和 $Y 是两个不同的变量）\n*/</span>\n\n<span class=\"token comment\">//声明</span>\n<span class=\"token variable\">$var</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$var1</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-Type: text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 全局变量</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">myTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 局部变量</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p&gt;测试函数内变量:&lt;p&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"变量 x 为: <span class=\"token interpolation\"><span class=\"token variable\">$x</span></span>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"变量 y 为: <span class=\"token interpolation\"><span class=\"token variable\">$y</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">yourTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token variable\">$x</span><span class=\"token operator\">+</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">myTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$a</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//该变量会保留上次调用函数产生的值</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">testest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p&gt;测试函数外变量:&lt;p&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"变量 x 为: <span class=\"token interpolation\"><span class=\"token variable\">$x</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"变量 y 为: <span class=\"token interpolation\"><span class=\"token variable\">$y</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">yourTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p&gt;测试函数外变量:&lt;p&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"变量 x 为: <span class=\"token interpolation\"><span class=\"token variable\">$x</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"变量 y 为: <span class=\"token interpolation\"><span class=\"token variable\">$y</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n    \n/*\n测试函数内变量:\n\n变量 x 为:\n变量 y 为: 101\n\n测试函数外变量:\n\n变量 x 为: 5\n变量 y 为: 10\n\n测试函数外变量:\n\n变量 x 为: 5\n变量 y 为: 15\n*/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"echo-print\"><a href=\"#echo-print\" class=\"headerlink\" title=\"echo/print\"></a>echo/print</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">echo</span> <span class=\"token operator\">-</span> 可以输出一个或多个字符串\n<span class=\"token keyword\">print</span> <span class=\"token operator\">-</span> 只允许输出一个字符串，返回值总为 <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"PHP-EOF\"><a href=\"#PHP-EOF\" class=\"headerlink\" title=\"PHP_EOF\"></a>PHP_EOF</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token operator\">.</span><span class=\"token constant\">PHP_EOP</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"3\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"EOF\"><a href=\"#EOF\" class=\"headerlink\" title=\"EOF\"></a>EOF</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string heredoc-string\"><span class=\"token delimiter symbol\"><span class=\"token punctuation\">&lt;&lt;&lt;</span>EOF</span>\n        &lt;h1&gt;我的第一个标题&lt;/h1&gt;\n        &lt;p&gt;我的第一个段落。&lt;/p&gt;\n<span class=\"token delimiter symbol\">EOF<span class=\"token punctuation\">;</span></span></span>\n<span class=\"token comment\">// 结束需要独立一行且前后不能空格</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"hello world\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'djh $x'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$z</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"djh <span class=\"token interpolation\"><span class=\"token variable\">$x</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$z</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"aaa\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"bbbb\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'aa'</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'s'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'djh'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x8C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$d</span><span class=\"token operator\">=</span><span class=\"token number\">0x8C</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//16进制</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">047</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//8进制</span>\n<span class=\"token variable\">$e</span><span class=\"token operator\">=</span><span class=\"token number\">2.4e3</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$f</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$g</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token operator\">==</span><span class=\"token variable\">$g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Car</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$color</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"green\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">color</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">what_color</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">print_vars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token function\">get_object_vars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$prop</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\t<span class=\"token interpolation\"><span class=\"token variable\">$prop</span></span> = <span class=\"token interpolation\"><span class=\"token variable\">$val</span></span>\\n\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 实例一个对象</span>\n<span class=\"token variable\">$herbie</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"white\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 显示 herbie 属性</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\therbie: Properties\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">print_vars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$herbie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\nstring(11) \"hello world\" string(6) \"djh $x\" string(15) \"djh hello world\" string(7) \"aaabbbb\" aaa satestdjhint(140) int(140) int(39) float(2400) bool(false) NULL 10 herbie: Properties color = white\n*/</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"类型比较\"><a href=\"#类型比较\" class=\"headerlink\" title=\"类型比较\"></a>类型比较</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">//松散比较：使用两个等号 == 比较，只比较值，不比较类型。\n//严格比较：用三个等号 === 比较，除了比较值，也比较类型。\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'0 == false: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'0 === false: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'0 == null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'0 === null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'false == null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'false === null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">false</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"0\" == false: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0\"</span> <span class=\"token operator\">==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"0\" === false: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0\"</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"0\" == null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0\"</span> <span class=\"token operator\">==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"0\" === null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0\"</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"\" == false: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token operator\">==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"\" === false: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"\" == null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token operator\">==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'\"\" === null: '</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n//松散比较：使用两个等号 == 比较，只比较值，不比较类型。 //严格比较：用三个等号 === 比较，除了比较值，也比较类型。 0 == false: bool(true) 0 === false: bool(false) 0 == null: bool(true) 0 === null: bool(false) false == null: bool(true) false === null: bool(false) \"0\" == false: bool(true) \"0\" === false: bool(false) \"0\" == null: bool(false) \"0\" === null: bool(false) \"\" == false: bool(true) \"\" === false: bool(false) \"\" == null: bool(true) \"\" === null: bool(false)\n*/</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 不区分大小写的常量名</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"GREETING\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"欢迎访问 Runoob.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> greeting<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 输出 \"欢迎访问 Runoob.com\"</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" world!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出Hello world! </span>\n \n<span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$x</span> <span class=\"token operator\">.=</span> <span class=\"token string double-quoted-string\">\" world!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出Hello world! </span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n    \n//Hello world!Hello world!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$txt1</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Hello world!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$txt2</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"What a nice day!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$txt1</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$txt2</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"超级全局变量\"><a href=\"#超级全局变量\" class=\"headerlink\" title=\"超级全局变量\"></a>超级全局变量</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$GLOBALS</span>\n<span class=\"token variable\">$_SERVER</span>\n<span class=\"token variable\">$_REQUEST</span>\n<span class=\"token variable\">$_POST</span>\n<span class=\"token variable\">$_GET</span>\n<span class=\"token variable\">$_FILES</span>\n<span class=\"token variable\">$_ENV</span>\n<span class=\"token variable\">$_COOKIE</span>\n<span class=\"token variable\">$_SESSION</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ha\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"lo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Peter\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"35\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Ben\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"37\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"Joe\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"43\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ages</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Peter'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"35\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ages</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Ben'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"37\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ages</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Joe'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"43\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Peter is \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Peter'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" years old.\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$x</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$x_value</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Key=\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\", Value=\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$x_value</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">asort</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//键值升序</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$x</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$x_value</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Key=\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\", Value=\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$x_value</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">arsort</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//键值降序</span>\n<span class=\"token function\">ksort</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//键名升序</span>\n<span class=\"token function\">krsort</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//键名降序</span>\n<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">test</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"????\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"you arb bici\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'tt'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"魔术变量\"><a href=\"#魔术变量\" class=\"headerlink\" title=\"魔术变量\"></a>魔术变量</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'这是第 \" '</span>  <span class=\"token operator\">.</span> <span class=\"token constant\">__LINE__</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' \" 行'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'该文件位于 \" '</span>  <span class=\"token operator\">.</span> <span class=\"token constant\">__FILE__</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' \" '</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'该文件位于 \" '</span>  <span class=\"token operator\">.</span> <span class=\"token constant\">__DIR__</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' \" '</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span>  <span class=\"token string single-quoted-string\">'函数名为：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__FUNCTION__</span> <span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span>  <span class=\"token string single-quoted-string\">'函数名为：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__METHOD__</span> <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">_print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'类名为：'</span>  <span class=\"token operator\">.</span> <span class=\"token constant\">__CLASS__</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span>  <span class=\"token string single-quoted-string\">'函数名为：'</span> <span class=\"token operator\">.</span> <span class=\"token constant\">__FUNCTION__</span> <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$t</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">_print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Base</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Hello '</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">trait</span> <span class=\"token class-name-definition class-name\">SayWorld</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword static-context\">parent</span><span class=\"token operator\">::</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'World!'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MyHelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Base</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">SayWorld</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$o</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//namespace MyProject;</span>\n\n<span class=\"token comment\">//echo '命名空间为：\"', __NAMESPACE__, '\"'; // 输出 \"MyProject\"</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>  \n<span class=\"token keyword\">namespace</span> <span class=\"token package\">MyProject</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CONNECT_OK</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Connection</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span>  <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">AnotherProject</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CONNECT_OK</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Connection</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span>  <span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Site</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 成员变量 */</span>\n    <span class=\"token keyword\">var</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token variable\">$title</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$par1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$par2</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">title</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">print</span> <span class=\"token string double-quoted-string\">\"销毁 \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/* 成员函数 */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">url</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">title</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">title</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$runoob</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Site</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$taobao</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Site</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$google</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Site</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 调用成员函数，设置标题和URL</span>\n<span class=\"token variable\">$runoob</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span> <span class=\"token string double-quoted-string\">\"菜鸟教程\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$taobao</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span> <span class=\"token string double-quoted-string\">\"淘宝\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$google</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span> <span class=\"token string double-quoted-string\">\"Google 搜索\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$runoob</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'www.runoob.com'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$taobao</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'www.taobao.com'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$google</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'www.google.com'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 调用成员函数，获取标题和URL</span>\n<span class=\"token variable\">$runoob</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$taobao</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$google</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$runoob</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$taobao</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$google</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 子类扩展站点类别</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Child_Site</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Site</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> <span class=\"token variable\">$category</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setCate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">category</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getCate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">category</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 声明一个'iTemplate'接口</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name-definition class-name\">iTemplate</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setVariable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getHtml</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$template</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// 实现接口</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Template</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">iTemplate</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$vars</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setVariable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$var</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">vars</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$var</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getHtml</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$template</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">vars</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$template</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'{'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'}'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$template</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$template</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">constant</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'常量值'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//如果父类中的方法被声明为 final，则子类无法覆盖该方法。如果一个类被声明为 final，则不能被继承。</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">AbstractClass</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 强制要求子类定义这些方法</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">prefixValue</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$prefix</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 普通方法（非抽象方法）</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">printOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">print</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ConcreteClass1</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractClass</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ConcreteClass1\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">prefixValue</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$prefix</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$prefix</span><span class=\"token punctuation\">}</span></span>ConcreteClass1\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ConcreteClass2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractClass</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"ConcreteClass2\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">prefixValue</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$prefix</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$prefix</span><span class=\"token punctuation\">}</span></span>ConcreteClass2\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$class1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcreteClass1</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$class1</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">printOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$class1</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">prefixValue</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FOO_'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$class2</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcreteClass2</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$class2</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">printOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$class2</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">prefixValue</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FOO_'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"表单\"><a href=\"#表单\" class=\"headerlink\" title=\"表单\"></a>表单</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$q</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'q'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'q'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$q</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$q</span> <span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'RUNOOB'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'菜鸟教程&lt;br&gt;http://www.runoob.com'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$q</span> <span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'GOOGLE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Google 搜索&lt;br&gt;http://www.google.com'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$q</span> <span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'TAOBAO'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'淘宝&lt;br&gt;http://www.taobao.com'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>q<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>RUNOOB<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>Runoob\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>q<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GOOGLE<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>Google\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>q<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TAOBAO<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>Taobao\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"表单验证\"><a href=\"#表单验证\" class=\"headerlink\" title=\"表单验证\"></a>表单验证</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">HTML</span><span class=\"token punctuation\">&gt;</span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>菜鸟教程(runoob.com)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.error</span> <span class=\"token punctuation\">{</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FF0000<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span> \n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 定义变量并默认设置为空值</span>\n<span class=\"token variable\">$nameErr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$emailErr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$genderErr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$websiteErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$email</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$gender</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$comment</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$website</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REQUEST_METHOD\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"POST\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$nameErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"名字是必需的\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 检测名字是否只包含字母跟空格</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^[a-zA-Z ]*$/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$nameErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"只允许字母和空格\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"email\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$emailErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"邮箱是必需的\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$email</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"email\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 检测邮箱是否合法</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/([\\w\\-]+\\@[\\w\\-]+\\.[\\w\\-]+)/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$email</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$emailErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"非法邮箱格式\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"website\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$website</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$website</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"website\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 检测 URL 地址是否合法</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\b(?:(?:https?|ftp):\\/\\/|www\\.)[-a-z0-9+&amp;@#\\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\\/%=~_|]/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$website</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$websiteErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"非法的 URL 的地址\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"comment\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$comment</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$comment</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"comment\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"gender\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$genderErr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"性别是必需的\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$gender</span> <span class=\"token operator\">=</span> <span class=\"token function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"gender\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">test_input</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>PHP 表单验证实例<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>* 必需字段。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"PHP_SELF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> \n   名字: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>* <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$nameErr</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n   E-mail: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$email</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>* <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$emailErr</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n   网址: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>website<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$website</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$websiteErr</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n   备注: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>40<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$comment</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n   性别:\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$gender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$gender</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"female\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"checked\"</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span></span>  <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>female<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>女\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$gender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$gender</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"male\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"checked\"</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span></span>  <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>male<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>男\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>* <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token variable\">$genderErr</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;h2&gt;您输入的内容是:&lt;/h2&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$email</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$website</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$comment</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$gender</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"时间\"><a href=\"#时间\" class=\"headerlink\" title=\"时间\"></a>时间</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y/m/d\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y.m.d\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y-m-d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"文件包含\"><a href=\"#文件包含\" class=\"headerlink\" title=\"文件包含\"></a>文件包含</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//或者</span>\n\n<span class=\"token keyword\">require</span> <span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//检测文件是否到达末尾</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//逐行读</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//检测文件是否到达末尾</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//逐行读</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//执行一些代码</span>\n\n<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"utf-8\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>菜鸟教程<span class=\"token punctuation\">(</span>runoob<span class=\"token operator\">.</span>com<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"upload_file.php\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"post\"</span> enctype<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"multipart/form-data\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token operator\">&gt;</span>文件名：<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span> id<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"submit\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"提交\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"错误：\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"上传文件名: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件类型: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件大小: \"</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"size\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" kB&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件临时存储的位置: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 允许上传的图片后缀</span>\n<span class=\"token variable\">$allowedExts</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"gif\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$temp</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$extension</span> <span class=\"token operator\">=</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 获取文件后缀名</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"image/gif\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"image/jpeg\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"image/jpg\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"image/pjpeg\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"image/x-png\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"image/png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"size\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">204800</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 小于 200 kb</span>\n<span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$extension</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowedExts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"错误：: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"上传文件名: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件类型: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件大小: \"</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"size\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" kB&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"文件临时存储的位置: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"非法的文件格式\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">//cookie 常用于识别用户。cookie 是一种服务器留在用户计算机上的小文件。每当同一台计算机通过浏览器请求页面时，这台计算机将会发送 cookie。通过 PHP，您能够创建并取回 cookie 的值。\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$expire</span><span class=\"token operator\">=</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"runoob\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$expire</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 输出 cookie 值</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 查看所有 cookie</span>\n<span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 存储 session 数据</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>菜鸟教程(runoob.com)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 检索 session 数据</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"浏览量：\"</span><span class=\"token operator\">.</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"浏览量：\"</span><span class=\"token operator\">.</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'views'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//session_destroy();</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"xiaohui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"mail\"><a href=\"#mail\" class=\"headerlink\" title=\"mail\"></a>mail</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>菜鸟教程(runoob.com)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 如果接收到邮箱参数则发送邮件</span>\n    <span class=\"token comment\">// 发送邮件</span>\n    <span class=\"token variable\">$email</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'email'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$subject</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'subject'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'message'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>\n    <span class=\"token function\">mail</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"someone@example.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$subject</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"From:\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$email</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"邮件发送成功\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 如果没有邮箱参数则显示表单</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;form method='post' action='mailform.php'&gt;\n    Email: &lt;input name='email' type='text'&gt;&lt;br&gt;\n    Subject: &lt;input name='subject' type='text'&gt;&lt;br&gt;\n    Message:&lt;br&gt;\n    &lt;textarea name='message' rows='15' cols='40'&gt;\n    &lt;/textarea&gt;&lt;br&gt;\n    &lt;input type='submit'&gt;\n    &lt;/form&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Error\"><a href=\"#Error\" class=\"headerlink\" title=\"Error\"></a>Error</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// 错误处理函数</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">customError</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$errno</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errstr</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;b&gt;Error:&lt;/b&gt; [<span class=\"token interpolation\"><span class=\"token variable\">$errno</span></span>] <span class=\"token interpolation\"><span class=\"token variable\">$errstr</span></span>&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"脚本结束\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 设置错误处理函数</span>\n<span class=\"token function\">set_error_handler</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"customError\"</span><span class=\"token punctuation\">,</span><span class=\"token constant\">E_USER_WARNING</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 触发错误</span>\n<span class=\"token variable\">$test</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$test</span><span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"变量值必须小于等于 1\"</span><span class=\"token punctuation\">,</span><span class=\"token constant\">E_USER_WARNING</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token variable\">$arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'runoob'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'菜鸟教程'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'taobao'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'淘宝网'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 编码中文</span>\n   <span class=\"token keyword\">echo</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 换行符</span>\n   <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 不编码中文</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n   <span class=\"token variable\">$json</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'{\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5}'</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$json</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$json</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h3><p>查询模块示例</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$servername</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"localhost\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"username\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"password\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbname</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"myDB\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建连接</span>\n<span class=\"token variable\">$conn</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$servername</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Check connection</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"连接失败: \"</span> <span class=\"token operator\">.</span> <span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT id, firstname, lastname FROM MyGuests\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 输出数据</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"id: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"id\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" - Name: \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"firstname\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"lastname\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"0 结果\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>更多请看<a href=\"https://www.runoob.com/php/php-mysql-intro.html\">PHP MySQL 简介 | 菜鸟教程 (runoob.com)</a></p>\n<h3 id=\"Math函数\"><a href=\"#Math函数\" class=\"headerlink\" title=\"Math函数\"></a>Math函数</h3><p><a href=\"https://www.runoob.com/php/php-ref-math.html\">PHP 5 Math 函数 | 菜鸟教程 (runoob.com)</a></p>\n<h3 id=\"HTTP函数\"><a href=\"#HTTP函数\" class=\"headerlink\" title=\"HTTP函数\"></a>HTTP函数</h3><p><a href=\"https://www.runoob.com/php/php-ref-http.html\">PHP HTTP 函数 | 菜鸟教程 (runoob.com)</a></p>\n<h3 id=\"String函数\"><a href=\"#String函数\" class=\"headerlink\" title=\"String函数\"></a>String函数</h3><p><a href=\"https://www.runoob.com/php/php-ref-string.html\">PHP 5 String 函数 | 菜鸟教程 (runoob.com)</a></p>\n<h3 id=\"Array函数\"><a href=\"#Array函数\" class=\"headerlink\" title=\"Array函数\"></a>Array函数</h3><p><a href=\"https://www.runoob.com/php/php-ref-array.html\">PHP 5 Array 函数 | 菜鸟教程 (runoob.com)</a></p>\n<h3 id=\"PDO函数\"><a href=\"#PDO函数\" class=\"headerlink\" title=\"PDO函数\"></a>PDO函数</h3><p><a href=\"https://www.runoob.com/php/php-pdo.html\">PHP PDO | 菜鸟教程 (runoob.com)</a></p>\n",
            "tags": [
                "学习",
                "php"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/01/03/zhi-ling/",
            "url": "https://0xdadream.github.io/2021/01/03/zhi-ling/",
            "title": "32位汇编指令总结(代码示例)",
            "date_published": "2021-01-02T18:00:00.000Z",
            "content_html": "<h1 id=\"通用数据传送指令\"><a href=\"#通用数据传送指令\" class=\"headerlink\" title=\"通用数据传送指令\"></a>通用数据传送指令</h1><h3 id=\"MOV-传送字或字节\"><a href=\"#MOV-传送字或字节\" class=\"headerlink\" title=\"MOV 传送字或字节\"></a>MOV 传送字或字节</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,10h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"MOVSX-先符号扩展-再传送\"><a href=\"#MOVSX-先符号扩展-再传送\" class=\"headerlink\" title=\"MOVSX 先符号扩展,再传送\"></a>MOVSX 先符号扩展,再传送</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">movsx eax,ax;先进行全零扩展,前16位为F<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"MOVZX-先零扩展-再传送\"><a href=\"#MOVZX-先零扩展-再传送\" class=\"headerlink\" title=\"MOVZX 先零扩展,再传送\"></a>MOVZX 先零扩展,再传送</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">movzx eax,ax;先进行全零扩展,前16位为0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PUSH-把字压入堆栈\"><a href=\"#PUSH-把字压入堆栈\" class=\"headerlink\" title=\"PUSH 把字压入堆栈\"></a>PUSH 把字压入堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">push reg/nem16   32\npush imm32<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"POP-把字弹出堆栈\"><a href=\"#POP-把字弹出堆栈\" class=\"headerlink\" title=\"POP 把字弹出堆栈\"></a>POP 把字弹出堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">pop reg/nem16  32<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PUSHFD-把32EFLAGS寄存器内容压入堆栈\"><a href=\"#PUSHFD-把32EFLAGS寄存器内容压入堆栈\" class=\"headerlink\" title=\"PUSHFD 把32EFLAGS寄存器内容压入堆栈\"></a>PUSHFD 把32EFLAGS寄存器内容压入堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">pushfd;保存标志寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"POPFD-把32EFLAGS寄存器内容弹出堆栈\"><a href=\"#POPFD-把32EFLAGS寄存器内容弹出堆栈\" class=\"headerlink\" title=\"POPFD 把32EFLAGS寄存器内容弹出堆栈\"></a>POPFD 把32EFLAGS寄存器内容弹出堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">popfd;恢复标志寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PUSHA-把AX-CX-DX-BX-SP-BP-SI-DI依次压入堆栈\"><a href=\"#PUSHA-把AX-CX-DX-BX-SP-BP-SI-DI依次压入堆栈\" class=\"headerlink\" title=\"PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈\"></a>PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">pusha;保存16通用寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"POPA-把DI-SI-BP-SP-BX-DX-CX-AX依次弹出堆栈\"><a href=\"#POPA-把DI-SI-BP-SP-BX-DX-CX-AX依次弹出堆栈\" class=\"headerlink\" title=\"POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈\"></a>POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">popa;恢复16通用寄存器内存<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PUSHAD-把EAX-ECX-EDX-EBX-ESP-EBP-ESI-EDI依次压入堆栈\"><a href=\"#PUSHAD-把EAX-ECX-EDX-EBX-ESP-EBP-ESI-EDI依次压入堆栈\" class=\"headerlink\" title=\"PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈\"></a>PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">pushad;保存32通用寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"POPAD-把EDI-ESI-EBP-ESP-EBX-EDX-ECX-EAX依次弹出堆栈\"><a href=\"#POPAD-把EDI-ESI-EBP-ESP-EBX-EDX-ECX-EAX依次弹出堆栈\" class=\"headerlink\" title=\"POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈\"></a>POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">popad;恢复32通用寄存器内存<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"BSWAP-交换32位寄存器里字节的顺序\"><a href=\"#BSWAP-交换32位寄存器里字节的顺序\" class=\"headerlink\" title=\"BSWAP 交换32位寄存器里字节的顺序\"></a>BSWAP 交换32位寄存器里字节的顺序</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">;EAX=96688368H\nBSWAP EAX;EAX=68836896H<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"XCHG-交换字或字节-至少有一个操作数为寄存器-段寄存器不可作为操作数\"><a href=\"#XCHG-交换字或字节-至少有一个操作数为寄存器-段寄存器不可作为操作数\" class=\"headerlink\" title=\"XCHG 交换字或字节( 至少有一个操作数为寄存器,段寄存器不可作为操作数)\"></a>XCHG 交换字或字节( 至少有一个操作数为寄存器,段寄存器不可作为操作数)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">xchg ax,hx\nxchg ah,al\nxchg eax,ebx\nxchg var,ax;var16位<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CMPXCHG-比较并交换操作数-第二个操作数必须为累加器AL-AX-EAX\"><a href=\"#CMPXCHG-比较并交换操作数-第二个操作数必须为累加器AL-AX-EAX\" class=\"headerlink\" title=\"CMPXCHG 比较并交换操作数( 第二个操作数必须为累加器AL/AX/EAX )\"></a>CMPXCHG 比较并交换操作数( 第二个操作数必须为累加器AL/AX/EAX )</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">CMPXCHG CX,DX\n;如果指令执行前 (AX)=2300H,(CX)=2300H.(DX)=2400H\n;则指令执行后 因（CX）=(AX),故(CX)=2400H,ZF=1\n;如果指令执行前（AX）=2500H,(CX)=2300H,(DX)=2400H\n;则指令执行后因（CX）!=(AX)，故(AX)=2300H，ZF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"XADD-先交换再累加-结果在第一个操作数里\"><a href=\"#XADD-先交换再累加-结果在第一个操作数里\" class=\"headerlink\" title=\"XADD 先交换再累加( 结果在第一个操作数里 )\"></a>XADD 先交换再累加( 结果在第一个操作数里 )</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">xadd eax，ecx\n;相当于：\n\t先执行：\n\t\txchg eax,ecx\n\t然后执行：\n\t\tadd eax,ecx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"XLAT-字节查表转换\"><a href=\"#XLAT-字节查表转换\" class=\"headerlink\" title=\"XLAT 字节查表转换\"></a>XLAT 字节查表转换</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">X DW 1122h,3344h,5566h,7788h\nlea bx,X\nmov al,03h\nxlat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>BX 指向一张 256 字节的表的起点, AL 为表的索引值 (0-255,即 0-FFH); 返回 AL 为查表结果 ( [BX+AL]-&gt;AL )</p>\n<h1 id=\"输入输出端口传送指令\"><a href=\"#输入输出端口传送指令\" class=\"headerlink\" title=\"输入输出端口传送指令\"></a>输入输出端口传送指令</h1><h3 id=\"IN-I-O端口输入\"><a href=\"#IN-I-O端口输入\" class=\"headerlink\" title=\"IN I/O端口输入\"></a>IN I/O端口输入</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">语法: IN 累加器, {端口号│DX}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"OUT-I-O端口输出\"><a href=\"#OUT-I-O端口输出\" class=\"headerlink\" title=\"OUT I/O端口输出\"></a>OUT I/O端口输出</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">语法: OUT {端口号│DX},累加器<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"输入输出端口由立即方式指定时-其范围是-0-255-由寄存器-DX-指定时-其范围是-0-65535\"><a href=\"#输入输出端口由立即方式指定时-其范围是-0-255-由寄存器-DX-指定时-其范围是-0-65535\" class=\"headerlink\" title=\"输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535\"></a>输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535</h3><h1 id=\"目的地址传送指令\"><a href=\"#目的地址传送指令\" class=\"headerlink\" title=\"目的地址传送指令\"></a>目的地址传送指令</h1><h3 id=\"LEA-装入有效地址\"><a href=\"#LEA-装入有效地址\" class=\"headerlink\" title=\"LEA 装入有效地址\"></a>LEA 装入有效地址</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">LEA DX,string ;把偏移地址存到DX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LDS-传送目标指针-把指针内容装入DS\"><a href=\"#LDS-传送目标指针-把指针内容装入DS\" class=\"headerlink\" title=\"LDS 传送目标指针,把指针内容装入DS\"></a>LDS 传送目标指针,把指针内容装入DS</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">LDS SI,string ;把段地址:偏移地址存到DS:SI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LES-传送目标指针-把指针内容装入ES\"><a href=\"#LES-传送目标指针-把指针内容装入ES\" class=\"headerlink\" title=\"LES 传送目标指针,把指针内容装入ES\"></a>LES 传送目标指针,把指针内容装入ES</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">LES DI,string ;把段地址:偏移地址存到ESDI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LFS-传送目标指针-把指针内容装入FS\"><a href=\"#LFS-传送目标指针-把指针内容装入FS\" class=\"headerlink\" title=\"LFS 传送目标指针,把指针内容装入FS\"></a>LFS 传送目标指针,把指针内容装入FS</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">LFS DI,string ;把段地址:偏移地址存到FSD<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LGS-传送目标指针-把指针内容装入GS\"><a href=\"#LGS-传送目标指针-把指针内容装入GS\" class=\"headerlink\" title=\"LGS 传送目标指针,把指针内容装入GS\"></a>LGS 传送目标指针,把指针内容装入GS</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">LGS DI,string ;把段地址:偏移地址存到GSDI <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LSS-传送目标指针-把指针内容装入SS\"><a href=\"#LSS-传送目标指针-把指针内容装入SS\" class=\"headerlink\" title=\"LSS 传送目标指针,把指针内容装入SS\"></a>LSS 传送目标指针,把指针内容装入SS</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">LSS DI,string ;把段地址:偏移地址存到SSDI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"标志传送指令\"><a href=\"#标志传送指令\" class=\"headerlink\" title=\"标志传送指令\"></a>标志传送指令</h1><h3 id=\"LAHF-标志寄存器传送-把标志装入AH\"><a href=\"#LAHF-标志寄存器传送-把标志装入AH\" class=\"headerlink\" title=\"LAHF 标志寄存器传送,把标志装入AH\"></a>LAHF 标志寄存器传送,把标志装入AH</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">.data\n    saveflags byte ?\n.code\n    lahf\n    mov saveflags,ah<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SAHF-标志寄存器传送-把AH内容装入标志寄存器\"><a href=\"#SAHF-标志寄存器传送-把AH内容装入标志寄存器\" class=\"headerlink\" title=\"SAHF 标志寄存器传送,把AH内容装入标志寄存器\"></a>SAHF 标志寄存器传送,把AH内容装入标志寄存器</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ah,saveflags\n    sahf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"PUSHF-标志入栈\"><a href=\"#PUSHF-标志入栈\" class=\"headerlink\" title=\"PUSHF 标志入栈\"></a>PUSHF 标志入栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">pushf;保存标志寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"POPF-标志出栈\"><a href=\"#POPF-标志出栈\" class=\"headerlink\" title=\"POPF 标志出栈\"></a>POPF 标志出栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">popf;恢复标志寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PUSHD-32位标志入栈\"><a href=\"#PUSHD-32位标志入栈\" class=\"headerlink\" title=\"PUSHD 32位标志入栈\"></a>PUSHD 32位标志入栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">pushd;保存32通用寄存器内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"POPD-32位标志出栈\"><a href=\"#POPD-32位标志出栈\" class=\"headerlink\" title=\"POPD 32位标志出栈\"></a>POPD 32位标志出栈</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">popd;恢复32通用寄存器内存<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"算术运算指令\"><a href=\"#算术运算指令\" class=\"headerlink\" title=\"算术运算指令\"></a>算术运算指令</h1><h3 id=\"ADD-加法\"><a href=\"#ADD-加法\" class=\"headerlink\" title=\"ADD 加法\"></a>ADD 加法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov eax,1\nadd eax,12<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"ADC-带进位加法\"><a href=\"#ADC-带进位加法\" class=\"headerlink\" title=\"ADC 带进位加法\"></a>ADC 带进位加法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov dl,0\nmov al,0FFh\nadd al,0FFh;AL=FEh\nadc dl,0;DL/AL=01FEh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"INC-加-1\"><a href=\"#INC-加-1\" class=\"headerlink\" title=\"INC 加 1\"></a>INC 加 1</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,1\ninc ax<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"AAA-加法的ASCII码调整\"><a href=\"#AAA-加法的ASCII码调整\" class=\"headerlink\" title=\"AAA 加法的ASCII码调整\"></a>AAA 加法的ASCII码调整</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ah,0\nmov al,'8';AX=0038h\nadd al,'2';AX=006Ah\naaa;AX=0100h(结果进行ASCII转换)\nor ax,3030h;AX=3130h='10'(转换为ASCII码)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DAA-加法的十进制调整\"><a href=\"#DAA-加法的十进制调整\" class=\"headerlink\" title=\"DAA 加法的十进制调整\"></a>DAA 加法的十进制调整</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,35h\nadd al,48h;AL=7Dh\ndaa;AL=83h(调整后结果)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SUB-减法\"><a href=\"#SUB-减法\" class=\"headerlink\" title=\"SUB 减法\"></a>SUB 减法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,23\nsub al,3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"SBB-带借位减法\"><a href=\"#SBB-带借位减法\" class=\"headerlink\" title=\"SBB 带借位减法\"></a>SBB 带借位减法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov edx,7;高32位\nmov eax,1;低32位\nsub eax，2\nsbb edx，0;高32位减法<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DEC-减-1\"><a href=\"#DEC-减-1\" class=\"headerlink\" title=\"DEC 减 1\"></a>DEC 减 1</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">dec al<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"NEC-求反-以-0-减之\"><a href=\"#NEC-求反-以-0-减之\" class=\"headerlink\" title=\"NEC 求反(以 0 减之)\"></a>NEC 求反(以 0 减之)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">nec al<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"CMP-比较-两操作数作减法-仅修改标志位-不回送结果\"><a href=\"#CMP-比较-两操作数作减法-仅修改标志位-不回送结果\" class=\"headerlink\" title=\"CMP 比较.(两操作数作减法,仅修改标志位,不回送结果)\"></a>CMP 比较.(两操作数作减法,仅修改标志位,不回送结果)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,5\ncmp ax,10;ZF=0 and CF=1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"AAS-减法的ASCII码调整\"><a href=\"#AAS-减法的ASCII码调整\" class=\"headerlink\" title=\"AAS 减法的ASCII码调整\"></a>AAS 减法的ASCII码调整</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ah,0\nmov al,'8';AX=0038h\nsub al,'9';AX=00FFh\naas;AX=FF09h\npushf\nor al,30h;AX=FF39h\npopf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DAS-减法的十进制调整\"><a href=\"#DAS-减法的十进制调整\" class=\"headerlink\" title=\"DAS 减法的十进制调整\"></a>DAS 减法的十进制调整</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov bl,48h\nmov al,85h\nsub al,bl;AL=3Dh\ndas;AL=37h(调整后结果)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"MUL-无符号乘法\"><a href=\"#MUL-无符号乘法\" class=\"headerlink\" title=\"MUL 无符号乘法\"></a>MUL 无符号乘法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var word 0100h\nmov ax,2000h;AX=2000h;AX存储结果\nmul 0100h/var;DX:AX=00200000h,CF=1;32位EDX:EAX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"IMUL-整数乘法\"><a href=\"#IMUL-整数乘法\" class=\"headerlink\" title=\"IMUL 整数乘法\"></a>IMUL 整数乘法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,48\nmov bx,4\nimul bx;DX:AX=000000C0h,OF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"以上两条-结果回送AH和AL-字节运算-或DX和AX-字运算\"><a href=\"#以上两条-结果回送AH和AL-字节运算-或DX和AX-字运算\" class=\"headerlink\" title=\"以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算)\"></a>以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算)</h3><h3 id=\"AAM-乘法的ASCII码调整\"><a href=\"#AAM-乘法的ASCII码调整\" class=\"headerlink\" title=\"AAM 乘法的ASCII码调整\"></a>AAM 乘法的ASCII码调整</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var byte 05h,06h\nmov bl,var;第一个操作数\nmov bl,[var+1];第二个操作数\nmul bl;AX=001Eh\naam;AX=0300h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DIV-无符号除法\"><a href=\"#DIV-无符号除法\" class=\"headerlink\" title=\"DIV 无符号除法\"></a>DIV 无符号除法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,0083h;被除数\nmov bl,2;除数\ndiv bl;AL=41h,AH=01h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"IDIV-整数除法\"><a href=\"#IDIV-整数除法\" class=\"headerlink\" title=\"IDIV 整数除法\"></a>IDIV 整数除法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var sword -101;009Bh\nmov dx,0\nmov ax,var;DX:AX=0000009Bh(+155)\nmov bx,2;BX是除数\nidiv bx;DX:AX除以BX\n    \nvar sword -48\nmov al,var;被除数低字节\ncbw；AL扩展到AH\nmov bl,+5;除数\nidiv bl;AL=-9,AH=-3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"以上两条-结果回送\"><a href=\"#以上两条-结果回送\" class=\"headerlink\" title=\"以上两条,结果回送:\"></a>以上两条,结果回送:</h3><h3 id=\"商回送AL-余数回送AH-字节运算-或商回送AX-余数回送DX-字运算\"><a href=\"#商回送AL-余数回送AH-字节运算-或商回送AX-余数回送DX-字运算\" class=\"headerlink\" title=\"商回送AL,余数回送AH, (字节运算);或商回送AX,余数回送DX, (字运算)\"></a>商回送AL,余数回送AH, (字节运算);或商回送AX,余数回送DX, (字运算)</h3><h3 id=\"AAD-除法的ASCII码调整\"><a href=\"#AAD-除法的ASCII码调整\" class=\"headerlink\" title=\"AAD 除法的ASCII码调整\"></a>AAD 除法的ASCII码调整</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var byte ?\nvar2 byte ?\nmov ax,0307h;被除数\naad;AX=0025h\nmov bl,5;除数\ndiv bl;AX=0207h\nmov var,al\nmov var2,ah<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CBW-字节转换为字-把AL中字节的符号扩展到AH中去\"><a href=\"#CBW-字节转换为字-把AL中字节的符号扩展到AH中去\" class=\"headerlink\" title=\"CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)\"></a>CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var sword -101;9Bh\nmov al,var;AL=9Bh\ncbw;AL=FF9Bh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CWD-字转换为双字-把AX中的字的符号扩展到DX中去\"><a href=\"#CWD-字转换为双字-把AX中的字的符号扩展到DX中去\" class=\"headerlink\" title=\"CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)\"></a>CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var sword -101;FF9Bh\nmov ax,var;AX=FF9Bh\ncwd;DX:AX=FFFFFF9Bh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CWDE-字转换为双字-把AX中的字符号扩展到EAX中去\"><a href=\"#CWDE-字转换为双字-把AX中的字符号扩展到EAX中去\" class=\"headerlink\" title=\"CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)\"></a>CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"CDQ-双字扩展-把EAX中的字的符号扩展到EDX中去\"><a href=\"#CDQ-双字扩展-把EAX中的字的符号扩展到EDX中去\" class=\"headerlink\" title=\"CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)\"></a>CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)</h3><pre class=\"line-numbers language-C++\" data-language=\"C++\"><code class=\"language-C++\">var sword -101;FFFFFF9Bh\nmov eax,var;EDX:EAX=FFFFFFFFFFFFFF9Bh\ncdq<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"逻辑运算指令\"><a href=\"#逻辑运算指令\" class=\"headerlink\" title=\"逻辑运算指令\"></a>逻辑运算指令</h1><h3 id=\"AND-与运算\"><a href=\"#AND-与运算\" class=\"headerlink\" title=\"AND 与运算\"></a>AND 与运算</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,10101110b\nand al,11110110b;消除位0,3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"OR-或运算\"><a href=\"#OR-或运算\" class=\"headerlink\" title=\"OR 或运算\"></a>OR 或运算</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,11100011b\nor al,00000100b;位2置1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"XOR-异或运算\"><a href=\"#XOR-异或运算\" class=\"headerlink\" title=\"XOR 异或运算\"></a>XOR 异或运算</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,10110101b\nxor al,0;异或<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"NOT-取反\"><a href=\"#NOT-取反\" class=\"headerlink\" title=\"NOT 取反\"></a>NOT 取反</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,10101110b\nnot al;补集<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"TEST-测试-两操作数作与运算-仅修改标志位-不回送结果\"><a href=\"#TEST-测试-两操作数作与运算-仅修改标志位-不回送结果\" class=\"headerlink\" title=\"TEST 测试(两操作数作与运算,仅修改标志位,不回送结果)\"></a>TEST 测试(两操作数作与运算,仅修改标志位,不回送结果)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">test al,00001001b;测试0,3位<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"SHL-逻辑左移-位元乘法\"><a href=\"#SHL-逻辑左移-位元乘法\" class=\"headerlink\" title=\"SHL 逻辑左移,位元乘法\"></a>SHL 逻辑左移,位元乘法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov bl,8Fh;BL=10001111b\nshl bl,1;CF=1,BL=00011110b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"SAL-算术左移-SHL\"><a href=\"#SAL-算术左移-SHL\" class=\"headerlink\" title=\"SAL 算术左移(=SHL)\"></a>SAL 算术左移(=SHL)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">sal/shl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"SHR-逻辑右移，位元除法\"><a href=\"#SHR-逻辑右移，位元除法\" class=\"headerlink\" title=\"SHR 逻辑右移，位元除法\"></a>SHR 逻辑右移，位元除法</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,0D0h;AL=11010000b\nshr al,1;AL=01101000b,CF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"SAR-算术右移-SHR\"><a href=\"#SAR-算术右移-SHR\" class=\"headerlink\" title=\"SAR 算术右移(=SHR)\"></a>SAR 算术右移(=SHR)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">sar/shr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"ROL-循环左移\"><a href=\"#ROL-循环左移\" class=\"headerlink\" title=\"ROL 循环左移\"></a>ROL 循环左移</h3><pre class=\"line-numbers language-C++\" data-language=\"C++\"><code class=\"language-C++\">mov al,40h;AL=01000000b\nrol al,1;AL=10000000b\nrol al,3;AL=00000100b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"ROR-循环右移\"><a href=\"#ROR-循环右移\" class=\"headerlink\" title=\"ROR 循环右移\"></a>ROR 循环右移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,01h;AL=00000001b\nror al,1;AL=10000000b\nror al,3;AL=00010000b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"RCL-通过进位的循环左移\"><a href=\"#RCL-通过进位的循环左移\" class=\"headerlink\" title=\"RCL 通过进位的循环左移\"></a>RCL 通过进位的循环左移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">clc;CF=0\nmov bl,88h;CF,BL=0 10001000b\nrcl bl,1;CF,BL=1 00010000b\nrcl bl,1;CF,BL=0 00100010b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"RCR-通过进位的循环右移\"><a href=\"#RCR-通过进位的循环右移\" class=\"headerlink\" title=\"RCR 通过进位的循环右移\"></a>RCR 通过进位的循环右移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">stc ;CF=1\nmov ah,10h;AH,CF=00010000 1\nrcr ah,1;AH,CF=10001000 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>以上八种移位指令,其移位次数可达255次</p>\n<p>移位一次时, 可直接用操作码. 如 SHL AX,1</p>\n<p>移位&gt;1次时, 则由寄存器CL给出移位次数</p>\n<p>如 MOV CL,04 SHL AX,CL</p>\n<h3 id=\"SHLD-双精度左移\"><a href=\"#SHLD-双精度左移\" class=\"headerlink\" title=\"SHLD 双精度左移\"></a>SHLD 双精度左移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">wval word 9BA6h\nmov ax,0AC36h\nshld wval,ax,4;wval=BA6Ah,将wval左移4位，并把AX的高4位插入wval的低4位<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SHRD-双精度右移\"><a href=\"#SHRD-双精度右移\" class=\"headerlink\" title=\"SHRD 双精度右移\"></a>SHRD 双精度右移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,234Bh\nmov dx,7654h\nshrd ax,dx,4;AX右移4位，并把DX的低4位插入AX的高4位<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"串指令\"><a href=\"#串指令\" class=\"headerlink\" title=\"串指令\"></a>串指令</h1><h3 id=\"DS-SI-源串段寄存器-源串变址\"><a href=\"#DS-SI-源串段寄存器-源串变址\" class=\"headerlink\" title=\"DS:SI 源串段寄存器 :源串变址\"></a>DS:SI 源串段寄存器 :源串变址</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"ESI-目标串段寄存器-目标串变址\"><a href=\"#ESI-目标串段寄存器-目标串变址\" class=\"headerlink\" title=\"ESI 目标串段寄存器:目标串变址\"></a>ESI 目标串段寄存器:目标串变址</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"CX-重复次数计数器\"><a href=\"#CX-重复次数计数器\" class=\"headerlink\" title=\"CX 重复次数计数器\"></a>CX 重复次数计数器</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"AL-AX-扫描值\"><a href=\"#AL-AX-扫描值\" class=\"headerlink\" title=\"AL/AX 扫描值\"></a>AL/AX 扫描值</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"D标志-0表示重复操作中SI和DI应自动增量-1表示应自动减量\"><a href=\"#D标志-0表示重复操作中SI和DI应自动增量-1表示应自动减量\" class=\"headerlink\" title=\"D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量\"></a>D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Z标志-用来控制扫描或比较操作的结束\"><a href=\"#Z标志-用来控制扫描或比较操作的结束\" class=\"headerlink\" title=\"Z标志 用来控制扫描或比较操作的结束\"></a>Z标志 用来控制扫描或比较操作的结束</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"MOVS-串传送-MOVSB-传送字符-MOVSW-传送字-MOVSD-传送双字\"><a href=\"#MOVS-串传送-MOVSB-传送字符-MOVSW-传送字-MOVSD-传送双字\" class=\"headerlink\" title=\"MOVS 串传送   ( MOVSB 传送字符 MOVSW 传送字 MOVSD 传送双字 )\"></a>MOVS 串传送   ( MOVSB 传送字符 MOVSW 传送字 MOVSD 传送双字 )</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">;传送字符串数据：将ESI寻址的内存数据复制到EDI寻址的内存位置\n;复制双字数值\nsource dword 20 dup(0FFFFFFFh)\ntarget dword 20 dup(?)\n.code\ncld;方向为正\nmov ecx,lengthof source;设置REP计数器\nmov esi,offset source;ESI指向source\nmov edi,offset target;EDI指向target\nrep movsd;复制双字<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CMPS-串比较-CMPSB-比较字符-CMPSW-比较字\"><a href=\"#CMPS-串比较-CMPSB-比较字符-CMPSW-比较字\" class=\"headerlink\" title=\"CMPS 串比较   ( CMPSB 比较字符 CMPSW 比较字 )\"></a>CMPS 串比较   ( CMPSB 比较字符 CMPSW 比较字 )</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">;比较字符串：比较分别由ESI和EDI寻址的内存数据\n;比较双字\nmov esi OFFSET source\nmov edi ,OFFSET target\ncld;方向为正向\nmov ecx, LENGTHOF source;设置重复计数器\nrepe cmpsd;相等则重复<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SCAS-串扫描-把AL或AX的内容与目标串作比较-比较结果反映在标志位\"><a href=\"#SCAS-串扫描-把AL或AX的内容与目标串作比较-比较结果反映在标志位\" class=\"headerlink\" title=\"SCAS 串扫描    把AL或AX的内容与目标串作比较,比较结果反映在标志位\"></a>SCAS 串扫描    把AL或AX的内容与目标串作比较,比较结果反映在标志位</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">;扫描字符串：比较累加器（AL、AX和EAX）与EDI寻址的内存数据\n;扫描是否有匹配字符\nalpha BYTE \"ABCDEFGH\",0\n.code\nmov edi,OFFSET alpha;EDI指向字符串\nmov al,'F';检索字符F\nmov ecx,LENGTHOF alpha;设置检索计数器\ncld;方向为正向\nrepne scasb;不相等则重复\njnz quit;若未发现字符则退出\ndec edi;发现字符: EDI减1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"LODS-装入串-把源串中的元素-字或字节-逐一装入AL或AX中-LODSB-传送字符-LODSW-传送字-LODSD-传送双字\"><a href=\"#LODS-装入串-把源串中的元素-字或字节-逐一装入AL或AX中-LODSB-传送字符-LODSW-传送字-LODSD-传送双字\" class=\"headerlink\" title=\"LODS 装入串    把源串中的元素(字或字节)逐一装入AL或AX中( LODSB 传送字符 LODSW 传送字 LODSD 传送双字 )\"></a>LODS 装入串    把源串中的元素(字或字节)逐一装入AL或AX中( LODSB 传送字符 LODSW 传送字 LODSD 传送双字 )</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">;从字符串加载到累加器：将ESI寻址的内存数据加载到累加器\n;数组乘法\n:本程序将一个32位整数数组中的每个元素都乘以一个常数。\nINCLUDE Irvine32. inc\n.data\narray DWORD 1,2,3,4,5,6,7,8,9,10;测试数据\nmultiplier DWORD 10;测试数据\n.code\nmain PROC\n    cld;方向为正向\n    mov esi,OFFSET array;源数组索引\n    mov edi,esi;目标数组索引\n    mov ecx,LENGTHOF array;循环计数器\nLl: lodsd;将[ESI]加载到EAX\n    mul multiplier;与常数相乘\n    stosd;将EAX保存到[EDI]\n    loop Ll\n    exit\nmain ENDP\nEND main<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"STOS-保存串-是LODS的逆过程\"><a href=\"#STOS-保存串-是LODS的逆过程\" class=\"headerlink\" title=\"STOS 保存串   是LODS的逆过程\"></a>STOS 保存串   是LODS的逆过程</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">;保存字符串数据L：将累加器内容保存到EDI寻址的内存位置\n.data\nCount = 100\nstring1 BYTE Count DUP(?)\n.code\nmov al,OFFh;要保存的数值\nmov edi,OFFSET string1;EDI指向目标字符串\nmov ecx,Count;字符计数器\ncld;方向为正向\nrep stosb;用AL的内容实现填充<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"REP-当CX-ECX0时重复-单个指令处理整个字符串\"><a href=\"#REP-当CX-ECX0时重复-单个指令处理整个字符串\" class=\"headerlink\" title=\"REP 当CX/ECX<>0时重复(单个指令处理整个字符串)\"></a>REP 当CX/ECX&lt;&gt;0时重复(单个指令处理整个字符串)</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">rep movsb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"REPE-REPZ-当ZF-1或比较结果相等-且CX-ECX0时重复\"><a href=\"#REPE-REPZ-当ZF-1或比较结果相等-且CX-ECX0时重复\" class=\"headerlink\" title=\"REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX<>0时重复\"></a>REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&lt;&gt;0时重复</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">repe cmpsd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"REPNE-REPNZ-当ZF-0或比较结果不相等-且CX-ECX0时重复\"><a href=\"#REPNE-REPNZ-当ZF-0或比较结果不相等-且CX-ECX0时重复\" class=\"headerlink\" title=\"REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX<>0时重复\"></a>REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;&gt;0时重复</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">repne scasb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"REPC-当CF-1且CX-ECX0时重复\"><a href=\"#REPC-当CF-1且CX-ECX0时重复\" class=\"headerlink\" title=\"REPC 当CF=1且CX/ECX<>0时重复\"></a>REPC 当CF=1且CX/ECX&lt;&gt;0时重复</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">repc movsb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"REPNC-当CF-0且CX-ECX0时重复\"><a href=\"#REPNC-当CF-0且CX-ECX0时重复\" class=\"headerlink\" title=\"REPNC 当CF=0且CX/ECX<>0时重复\"></a>REPNC 当CF=0且CX/ECX&lt;&gt;0时重复</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">repnc movsb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"程序转移指令\"><a href=\"#程序转移指令\" class=\"headerlink\" title=\"程序转移指令\"></a>程序转移指令</h1><h2 id=\"简单的条件转移指令\"><a href=\"#简单的条件转移指令\" class=\"headerlink\" title=\"简单的条件转移指令\"></a>简单的条件转移指令</h2><h3 id=\"JZ-或jE-OPR—————结果为零转移-测试条件ZF-1；相等跳转\"><a href=\"#JZ-或jE-OPR—————结果为零转移-测试条件ZF-1；相等跳转\" class=\"headerlink\" title=\"JZ(或jE)  OPR—————结果为零转移, 测试条件ZF=1；相等跳转\"></a>JZ(或jE)  OPR—————结果为零转移, 测试条件ZF=1；相等跳转</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">cmp eax,0\njz/je L1;如果ZF=1则跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"JNZ-或jNE-OPR-————–结果不为零转移-测试条件ZF-0；不等跳转\"><a href=\"#JNZ-或jNE-OPR-————–结果不为零转移-测试条件ZF-0；不等跳转\" class=\"headerlink\" title=\"JNZ(或jNE) OPR ————–结果不为零转移,测试条件ZF=0；不等跳转\"></a>JNZ(或jNE) OPR ————–结果不为零转移,测试条件ZF=0；不等跳转</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">and dl,10110000b\njnz/jne L2;ZF=0跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"JS-OPR———————-结果为负转移-测试条件SF-1\"><a href=\"#JS-OPR———————-结果为负转移-测试条件SF-1\" class=\"headerlink\" title=\"JS OPR———————-结果为负转移, 测试条件SF=1\"></a>JS OPR———————-结果为负转移, 测试条件SF=1</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">SF=1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JNS-OPR———————结果为正转移-测试条件SF-0\"><a href=\"#JNS-OPR———————结果为正转移-测试条件SF-0\" class=\"headerlink\" title=\"JNS OPR———————结果为正转移, 测试条件SF=0\"></a>JNS OPR———————结果为正转移, 测试条件SF=0</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">SF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JO-OPR———————-溢出转移-测试条件OF-1\"><a href=\"#JO-OPR———————-溢出转移-测试条件OF-1\" class=\"headerlink\" title=\"JO OPR——————— 溢出转移,   测试条件OF=1\"></a>JO OPR——————— 溢出转移,   测试条件OF=1</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">OF=1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JNO-OPR-——————–不溢出转移-测试条件OF-0\"><a href=\"#JNO-OPR-——————–不溢出转移-测试条件OF-0\" class=\"headerlink\" title=\"JNO OPR ——————–不溢出转移 , 测试条件OF=0\"></a>JNO OPR ——————–不溢出转移 , 测试条件OF=0</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">OF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JP-OPR-———————结果为偶转移-测试条件PF-1\"><a href=\"#JP-OPR-———————结果为偶转移-测试条件PF-1\" class=\"headerlink\" title=\"JP OPR ———————结果为偶转移, 测试条件PF=1\"></a>JP OPR ———————结果为偶转移, 测试条件PF=1</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">PF=1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JNP-OPR-——————–结果为奇转移-测试条件PF-0\"><a href=\"#JNP-OPR-——————–结果为奇转移-测试条件PF-0\" class=\"headerlink\" title=\"JNP OPR ——————–结果为奇转移 , 测试条件PF=0\"></a>JNP OPR ——————–结果为奇转移 , 测试条件PF=0</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">PF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JC-OPR-——————–-有进位转移-测试条件CF-1\"><a href=\"#JC-OPR-——————–-有进位转移-测试条件CF-1\" class=\"headerlink\" title=\"JC OPR ——————– 有进位转移 , 测试条件CF=1\"></a>JC OPR ——————– 有进位转移 , 测试条件CF=1</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">CF=1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JNC-OPR-——————–无进位转移-测试条件CF-0\"><a href=\"#JNC-OPR-——————–无进位转移-测试条件CF-0\" class=\"headerlink\" title=\"JNC OPR ——————–无进位转移,  测试条件CF=0\"></a>JNC OPR ——————–无进位转移,  测试条件CF=0</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">CF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"无符号比较条件转移指令-以下指令经常是CMP-OPD-OPS后面的指令根据比较结果来实现转移\"><a href=\"#无符号比较条件转移指令-以下指令经常是CMP-OPD-OPS后面的指令根据比较结果来实现转移\" class=\"headerlink\" title=\"无符号比较条件转移指令(以下指令经常是CMP OPD,OPS后面的指令根据比较结果来实现转移)\"></a>无符号比较条件转移指令(以下指令经常是CMP OPD,OPS后面的指令根据比较结果来实现转移)</h3><h3 id=\"JB-或JNAE-opd-————–小于或者不大于等于则转移\"><a href=\"#JB-或JNAE-opd-————–小于或者不大于等于则转移\" class=\"headerlink\" title=\"JB(或JNAE) opd ————–小于或者不大于等于则转移\"></a>JB(或JNAE) opd ————–小于或者不大于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">小于跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JNB-或JAE-opd—————不小于或者大于等于则转移\"><a href=\"#JNB-或JAE-opd—————不小于或者大于等于则转移\" class=\"headerlink\" title=\"JNB(或JAE) opd—————不小于或者大于等于则转移\"></a>JNB(或JAE) opd—————不小于或者大于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">不小于跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JA-或NJBE-OPD—————大于或者不小于等于则转移\"><a href=\"#JA-或NJBE-OPD—————大于或者不小于等于则转移\" class=\"headerlink\" title=\"JA(或NJBE) OPD—————大于或者不小于等于则转移\"></a>JA(或NJBE) OPD—————大于或者不小于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,+127\ncmp al,-128\n    ja/njbe L1;不跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JNA-或JBE-OPD—————不大于或者小于等于则转移\"><a href=\"#JNA-或JBE-OPD—————不大于或者小于等于则转移\" class=\"headerlink\" title=\"JNA(或JBE) OPD—————不大于或者小于等于则转移\"></a>JNA(或JBE) OPD—————不大于或者小于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov al,+127\ncmp al,-128\n    jna/jbe L1;跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"带符号比较条件转移指令\"><a href=\"#带符号比较条件转移指令\" class=\"headerlink\" title=\"带符号比较条件转移指令\"></a>带符号比较条件转移指令</h3><h3 id=\"JL-或JNGE-————–小于或者不大于等于则转移\"><a href=\"#JL-或JNGE-————–小于或者不大于等于则转移\" class=\"headerlink\" title=\"JL(或JNGE) ————–小于或者不大于等于则转移\"></a>JL(或JNGE) ————–小于或者不大于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,5\nmov ax,6\n\tjl/jnge L1;跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JNL-或JGE-————–不小于或者大于等于则转移\"><a href=\"#JNL-或JGE-————–不小于或者大于等于则转移\" class=\"headerlink\" title=\"JNL(或JGE)————–不小于或者大于等于则转移\"></a>JNL(或JGE)————–不小于或者大于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov edx,-1\ncmp edx,0\n    jnl/jge L1;不跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JG-或NJLE-—————大于或者不小于等于则转移\"><a href=\"#JG-或NJLE-—————大于或者不小于等于则转移\" class=\"headerlink\" title=\"JG(或NJLE)—————大于或者不小于等于则转移\"></a>JG(或NJLE)—————大于或者不小于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ax,5\ncmp ax,4\n\tjp/njle L1;大于则跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JNG-或JLE-—————不大于或者小于等于则转移\"><a href=\"#JNG-或JLE-—————不大于或者小于等于则转移\" class=\"headerlink\" title=\"JNG(或JLE)—————不大于或者小于等于则转移\"></a>JNG(或JLE)—————不大于或者小于等于则转移</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov ecx,0\ncmp ecx,0\n    jng/jle;跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JCXZ\"><a href=\"#JCXZ\" class=\"headerlink\" title=\"JCXZ\"></a>JCXZ</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">CX=0跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JECXZ\"><a href=\"#JECXZ\" class=\"headerlink\" title=\"JECXZ\"></a>JECXZ</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">ECX=0跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"JRCXZ\"><a href=\"#JRCXZ\" class=\"headerlink\" title=\"JRCXZ\"></a>JRCXZ</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">RCX=0跳转<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"调用子程序与返回指令\"><a href=\"#调用子程序与返回指令\" class=\"headerlink\" title=\"调用子程序与返回指令\"></a>调用子程序与返回指令</h2><h3 id=\"CALL-子程序调用指令\"><a href=\"#CALL-子程序调用指令\" class=\"headerlink\" title=\"CALL  子程序调用指令\"></a>CALL  子程序调用指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">call SumOf;调用SumOf过程<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"RET-子程序返回指令\"><a href=\"#RET-子程序返回指令\" class=\"headerlink\" title=\"RET 子程序返回指令\"></a>RET 子程序返回指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">SumOf proc\n    .\n    .\n    ret\nSumOf endp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"条件循环指令\"><a href=\"#条件循环指令\" class=\"headerlink\" title=\"条件循环指令\"></a>条件循环指令</h2><h3 id=\"LOOP———-按ECX计算器循环\"><a href=\"#LOOP———-按ECX计算器循环\" class=\"headerlink\" title=\"LOOP———-按ECX计算器循环\"></a>LOOP———-按ECX计算器循环</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">    mov ax,0\n    mov ecx,5\nL1:\n    inc ax\n    loop L1;每次循环ax加一，循环5次<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"LOOPZ————为零跳转\"><a href=\"#LOOPZ————为零跳转\" class=\"headerlink\" title=\"LOOPZ————为零跳转\"></a>LOOPZ————为零跳转</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">loopz L1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LOOPNZ————–非零跳转\"><a href=\"#LOOPNZ————–非零跳转\" class=\"headerlink\" title=\"LOOPNZ————–非零跳转\"></a>LOOPNZ————–非零跳转</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">loopnz L1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LOOPE——————-相等跳转\"><a href=\"#LOOPE——————-相等跳转\" class=\"headerlink\" title=\"LOOPE——————-相等跳转\"></a>LOOPE——————-相等跳转</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">loope L1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"LOOPNE——————-不等跳转\"><a href=\"#LOOPNE——————-不等跳转\" class=\"headerlink\" title=\"LOOPNE——————-不等跳转\"></a>LOOPNE——————-不等跳转</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">loopne L1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"IF-ELSE-ELSEIF-ENDIF\"><a href=\"#IF-ELSE-ELSEIF-ENDIF\" class=\"headerlink\" title=\".IF .ELSE .ELSEIF .ENDIF\"></a>.IF .ELSE .ELSEIF .ENDIF</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">.IF conditionl\n    statements\n[.ELSELF condition2\n\tstatements]\n[ELSE \n\tstatements]\n.ENDIF<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"REPEAT-WHILE\"><a href=\"#REPEAT-WHILE\" class=\"headerlink\" title=\".REPEAT .WHILE\"></a>.REPEAT .WHILE</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">.REPEAT \n    statements\n.UNTIL condition\n    \n.WHILE condition\n    statements\n.ENDW<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"其它指令\"><a href=\"#其它指令\" class=\"headerlink\" title=\"其它指令\"></a>其它指令</h2><h3 id=\"OFFSET-——————–-返回偏移地址\"><a href=\"#OFFSET-——————–-返回偏移地址\" class=\"headerlink\" title=\"OFFSET ——————– 返回偏移地址\"></a>OFFSET ——————– 返回偏移地址</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov esi,offset var1;  esi=00404000h\nmov esi,offset var2;  esi=00404000h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"SEG-——————–-返回段地址\"><a href=\"#SEG-——————–-返回段地址\" class=\"headerlink\" title=\"SEG  ——————– 返回段地址\"></a>SEG  ——————– 返回段地址</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mov esi,seg var1\nmov esi,seg var2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"EQU-——————–-等值语句\"><a href=\"#EQU-——————–-等值语句\" class=\"headerlink\" title=\"EQU(=) ——————– 等值语句\"></a>EQU(=) ——————– 等值语句</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">name EQU expression\nname EQU symbol\nname EQU &lt;text&gt;\n    \npressKey EQU &lt;\"Press any key to continue...\", 0&gt;\nmatrix1 EQU 10 * 10\nmatrix2 EQU &lt;10 * 10&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PURGE-——————–-解除语句\"><a href=\"#PURGE-——————–-解除语句\" class=\"headerlink\" title=\"PURGE ——————– 解除语句\"></a>PURGE ——————– 解除语句</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">PURGE，标识符1，标识符2，...，标识符n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"DUP-——————–-操作数字段用复制操作符\"><a href=\"#DUP-——————–-操作数字段用复制操作符\" class=\"headerlink\" title=\"DUP  ——————– 操作数字段用复制操作符\"></a>DUP  ——————– 操作数字段用复制操作符</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">db x dup();x是重复的次数，（）里是要重复的数逗号分隔\nstr1 db 10 dup ('!@#') ;这就是十个！@#\n格式：db 重复的次数 dup (重复的内容)\nbuf1 db 100 dup(?);开辟100个字节的内存区<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SEGMENT-ENDS-——————–-段定义指令\"><a href=\"#SEGMENT-ENDS-——————–-段定义指令\" class=\"headerlink\" title=\"SEGMENT,ENDS ——————– 段定义指令\"></a>SEGMENT,ENDS ——————– 段定义指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">segment_name SEGMENT 【定位类型】 【组合类型】 【类别名】\n···;here is your code\nsegment ends<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"ASSUME-——————–-段地址分配指令\"><a href=\"#ASSUME-——————–-段地址分配指令\" class=\"headerlink\" title=\"ASSUME ——————– 段地址分配指令\"></a>ASSUME ——————– 段地址分配指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">.data\n　　........\n.code\n　　........\n　　assume cs:code,ds:data\nstart: .......\n　　mov ax,data\n　　mov ds,ax\n　　...\nends\nend start\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"ORG-——————–-起始偏移地址设置指令\"><a href=\"#ORG-——————–-起始偏移地址设置指令\" class=\"headerlink\" title=\"ORG  ——————– 起始偏移地址设置指令\"></a>ORG  ——————– 起始偏移地址设置指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">ORG 0000H\nAJMP MAIN\nORG 0030H<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"——————–地址计数器的当前值\"><a href=\"#——————–地址计数器的当前值\" class=\"headerlink\" title=\"$   ——————–地址计数器的当前值\"></a>$   ——————–地址计数器的当前值</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">例如JNE+6，能引用地址计数器的值，每次引用会使地址计数器的值发生改变，地址计数器即当前指令的偏移地址。该指令的转向地址即JNE指令的首地址加6。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PROC，ENDP-——————–-过程定义语句\"><a href=\"#PROC，ENDP-——————–-过程定义语句\" class=\"headerlink\" title=\"PROC，ENDP ——————– 过程定义语句\"></a>PROC，ENDP ——————– 过程定义语句</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">SumOf proc\n    .\n    .\n    .\n    ret\nSumOf endp;这是一个过程<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"NAME，TITLE，END-——————–-程序开始结束语句\"><a href=\"#NAME，TITLE，END-——————–-程序开始结束语句\" class=\"headerlink\" title=\"NAME，TITLE，END ——————– 程序开始结束语句\"></a>NAME，TITLE，END ——————– 程序开始结束语句</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">NULL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"MACRO，ENDM-——————–宏定义指令\"><a href=\"#MACRO，ENDM-——————–宏定义指令\" class=\"headerlink\" title=\"MACRO，ENDM  ——————–宏定义指令\"></a>MACRO，ENDM  ——————–宏定义指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">mPutchar MACRO char\n    push eax\n    mov al,char\n    call WriteChar\n    pop eax\n    ENDM<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"XLAT-（TRANSLATE）-——————–-换码指令—\"><a href=\"#XLAT-（TRANSLATE）-——————–-换码指令—\" class=\"headerlink\" title=\"XLAT  （TRANSLATE） ——————– 换码指令—-\"></a>XLAT  （TRANSLATE） ——————– 换码指令—-</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">X DW 1122h,3344h,5566h,7788h\nlea bx,X\nmov al,03h\nxlat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"ALIGN-———————伪指令\"><a href=\"#ALIGN-———————伪指令\" class=\"headerlink\" title=\"ALIGN ———————伪指令\"></a>ALIGN ———————伪指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var byte ?; 00404000h\nALIGN 2\nvar2 byte ?; 00404002<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PTR-———————-运算符\"><a href=\"#PTR-———————-运算符\" class=\"headerlink\" title=\"PTR ———————-运算符\"></a>PTR ———————-运算符</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var dword 12345678h\nmov ax,word ptr var; 将低16位(5678)送入ax<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"TYPE\"><a href=\"#TYPE\" class=\"headerlink\" title=\"TYPE\"></a>TYPE</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var word ?\nvar2 byte ?; word,byte都是type,分别代表2,1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"LENGTHOF-————–运算符\"><a href=\"#LENGTHOF-————–运算符\" class=\"headerlink\" title=\"LENGTHOF ————–运算符\"></a>LENGTHOF ————–运算符</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var1 byte 10,20,30;3\nvar2 word 30 DUP(?),0,0;32\nvar3 word 5 DUP(3 dup(?));3*5\nvar4 byte \"1234\",0;5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"SIZFEOF————-运算符\"><a href=\"#SIZFEOF————-运算符\" class=\"headerlink\" title=\"SIZFEOF————-运算符\"></a>SIZFEOF————-运算符</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var word 32 dup(0)\nmov eax,sizeof var;eax=32*2=64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"LABEL-—————伪指令\"><a href=\"#LABEL-—————伪指令\" class=\"headerlink\" title=\"LABEL —————伪指令\"></a>LABEL —————伪指令</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var1 label word\nvar2 dword 12345678h;公用一个内存位置，var2未分配空间\nmov ax,var1;5678h\nmov dx,[var+2];1234h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"TYPEDEF————–运算符\"><a href=\"#TYPEDEF————–运算符\" class=\"headerlink\" title=\"TYPEDEF————–运算符\"></a>TYPEDEF————–运算符</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">var typedef ptr byte;(指针)\n.data\n\tarray byte 10h,20h,30h\n    ptr1 var ?\n    ptr2 var array;指向一个数组<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"JMP-————无条件跳转到目标地址\"><a href=\"#JMP-————无条件跳转到目标地址\" class=\"headerlink\" title=\"JMP ————无条件跳转到目标地址\"></a>JMP ————无条件跳转到目标地址</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">top:\n.\n.\n    jmp top;不断循环<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"USES—————等于-push-pop\"><a href=\"#USES—————等于-push-pop\" class=\"headerlink\" title=\"USES—————等于 push+pop\"></a>USES—————等于 push+pop</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">ArraySum proc uses esi ecx\n    mov eax,0\nL1:\n\tadd eax,[esi]\n    add esi,type dword\n    loop L1\nArraySum endp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CLC\"><a href=\"#CLC\" class=\"headerlink\" title=\"CLC\"></a>CLC</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">clc;清除标识位<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"STC\"><a href=\"#STC\" class=\"headerlink\" title=\"STC\"></a>STC</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">进位标志置1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"ENTER——————-被调用过程自动创建堆栈帧\"><a href=\"#ENTER——————-被调用过程自动创建堆栈帧\" class=\"headerlink\" title=\"ENTER——————-被调用过程自动创建堆栈帧\"></a>ENTER——————-被调用过程自动创建堆栈帧</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">Mysub proc\n\tenter 8,0\n;等效于\nMysub proc\n\tpush ebp\n\tmov ebp,esp\n\tsub esp,8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"LEAVE——————指令结束一个过程的堆栈帧\"><a href=\"#LEAVE——————指令结束一个过程的堆栈帧\" class=\"headerlink\" title=\"LEAVE——————指令结束一个过程的堆栈帧\"></a>LEAVE——————指令结束一个过程的堆栈帧</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">Mysub proc\n\tenter 8,0\n\t.\n\t.\n\tleave\n\tret\nMysub endp\n;等效于\nMysub proc\n\tpush ebp\n\tmov ebp,esp\n\tsub esp,8\n\t.\n\t.\n\tmov esp,ebp\n\tpop ebp\n\tret\nMysub endp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"LOCAL—————局部变量\"><a href=\"#LOCAL—————局部变量\" class=\"headerlink\" title=\"LOCAL—————局部变量\"></a>LOCAL—————局部变量</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">Mysub proc\n\tlocal var:dword;这是一个局部变量<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"INVOKE—————–CALL替代品，一行调用多个参数\"><a href=\"#INVOKE—————–CALL替代品，一行调用多个参数\" class=\"headerlink\" title=\"INVOKE—————–CALL替代品，一行调用多个参数\"></a>INVOKE—————–CALL替代品，一行调用多个参数</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">invoke Dumparray,offset array,lengthof array,type array<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"ADDR——–只能和INVOKE一起\"><a href=\"#ADDR——–只能和INVOKE一起\" class=\"headerlink\" title=\"ADDR——–只能和INVOKE一起\"></a>ADDR——–只能和INVOKE一起</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">array dword 20 dup(?)\ninvoke swap\n\taddr array\n\taddr [array+4]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"条件标志\"><a href=\"#条件标志\" class=\"headerlink\" title=\"条件标志\"></a>条件标志</h2><h3 id=\"ZF-零标志\"><a href=\"#ZF-零标志\" class=\"headerlink\" title=\"ZF 零标志\"></a>ZF 零标志</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">当结果为负时,SF=1,否则,SF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"AF-辅助进位标志\"><a href=\"#AF-辅助进位标志\" class=\"headerlink\" title=\"AF 辅助进位标志\"></a>AF 辅助进位标志</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">运算过程中第三位有进位值,置AF=1,否则,AF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"PF-奇偶标志\"><a href=\"#PF-奇偶标志\" class=\"headerlink\" title=\"PF 奇偶标志\"></a>PF 奇偶标志</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">当结果操作数中偶数个\"1\",置PF=1,否则,PF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"SF-符号标志\"><a href=\"#SF-符号标志\" class=\"headerlink\" title=\"SF 符号标志\"></a>SF 符号标志</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">当结果为负时,SF=1;否则,SF=0.溢出时情形例外<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"CF-进位标志\"><a href=\"#CF-进位标志\" class=\"headerlink\" title=\"CF 进位标志\"></a>CF 进位标志</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">最高有效位产生进位值,例如,执行加法指令时,MSB有进位,置CF=1;否则,CF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"OF-溢出标志\"><a href=\"#OF-溢出标志\" class=\"headerlink\" title=\"OF 溢出标志\"></a>OF 溢出标志</h3><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">若操作数结果超出了机器能表示的范围,则产生溢出,置OF=1,否则,OF=0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n",
            "tags": [
                "学习",
                "汇编"
            ]
        },
        {
            "id": "https://0xdadream.github.io/2021/01/01/ji-cun-qi/",
            "url": "https://0xdadream.github.io/2021/01/01/ji-cun-qi/",
            "title": "寄存器",
            "date_published": "2020-12-31T22:37:00.000Z",
            "content_html": "<h2 id=\"32位CPU所含有的寄存器有：\"><a href=\"#32位CPU所含有的寄存器有：\" class=\"headerlink\" title=\"32位CPU所含有的寄存器有：\"></a>32位CPU所含有的寄存器有：</h2><ol>\n<li>4个数据寄存器(EAX、EBX、ECX和EDX) </li>\n<li>2个变址和指针寄存器(ESI和EDI) </li>\n<li>2个指针寄存器(ESP和EBP)  </li>\n<li>6个段寄存器(ES、CS、SS、DS、FS和GS) </li>\n<li>1个指令指针寄存器(EIP) 1个标志寄存器(EFlags)</li>\n</ol>\n<h1 id=\"1、数据寄存器\"><a href=\"#1、数据寄存器\" class=\"headerlink\" title=\"1、数据寄存器\"></a>1、数据寄存器</h1><p>数据寄存器主要用来保存操作数和运算结果等信息，从而节省读取操作数所需占用总线和访问存储器的时间。 </p>\n<ul>\n<li><p>32位CPU有4个32位的通用寄存器EAX、EBX、ECX和EDX。 </p>\n</li>\n<li><p>对低16位数据的存取，不会影响高16位的数据。 这些低16位寄存器分别命名为：AX、BX、CX和DX，它和先前的CPU中的寄存器相一致。 </p>\n</li>\n<li><p>4个16位寄存器又可分割成8个独立的8位寄存器(AX：AH-AL、BX：BH-BL、CX：CH-CL、DX：DH-DL)，每个寄存器都有自己的名称，可独立存取。 程序员可利用数据寄存器的这种“可分可合”的特性，灵活地处理字/字节的信息。  </p>\n</li>\n<li><p>寄存器EAX通常称为累加器(Accumulator)，用累加器进行的操作可能需要更少时间。可用于乘、 除、输入/输出等操作，使用频率很高；  </p>\n</li>\n<li><p>寄存器EBX称为基地址寄存器(Base Register)。它可作为存储器指针来使用；  </p>\n</li>\n<li><p>寄存器ECX称为计数寄存器(Count Register)。 在循环和字符串操作时，要用它来控制循环次数；在位操作中，当移多位时，要用CL来指明移位的位数；  </p>\n</li>\n<li><p>寄存器EDX称为数据寄存器(Data Register)。在进行乘、除运算时，它可作为默认的操作数参与运算，也可用于存放I/O的端口地址。</p>\n</li>\n</ul>\n<p>在16位CPU中，AX、BX、CX和DX不能作为基址和变址寄存器来存放存储单元的地址， </p>\n<p>在32位CPU中，其32位寄存器EAX、EBX、ECX和EDX不仅可传送数据、暂存数据保存算术逻辑运算结果， 而且也可作为指针寄存器，所以，这些32位寄存器更具有通用性。 </p>\n<h1 id=\"2、变址寄存器\"><a href=\"#2、变址寄存器\" class=\"headerlink\" title=\"2、变址寄存器\"></a>2、变址寄存器</h1><p>32位CPU有2个32位通用寄存器ESI和EDI。 </p>\n<p>其低16位对应先前CPU中的SI和DI，对低16位数据的存取，不影响高16位的数据。 </p>\n<p>寄存器ESI、EDI、SI和DI称为变址寄存器(Index Register)，它们主要用于存放存储单元在段内的偏移量， 用它们可实现多种存储器操作数的寻址方式，为以不同的地址形式访问存储单元提供方便。 </p>\n<p>变址寄存器不可分割成8位寄存器。作为通用寄存器，也可存储算术逻辑运算的操作数和运算结果。 </p>\n<p>它们可作一般的存储器指针使用。在字符串操作指令的执行过程中，对它们有特定的要求，而且还具有特殊的功能。 </p>\n<h1 id=\"3、指针寄存器\"><a href=\"#3、指针寄存器\" class=\"headerlink\" title=\"3、指针寄存器\"></a>3、指针寄存器</h1><p>其低16位对应先前CPU中的BP和SP，对低16位数据的存取，不影响高16位的数据。 </p>\n<p>32位CPU有2个32位通用寄存器EBP和ESP。 </p>\n<p>它们主要用于访问堆栈内的存储单元，并且规定： </p>\n<ul>\n<li>EBP为基指针(Base Pointer)寄存器，用它可直接存取堆栈中的数据；  </li>\n<li>ESP为堆栈指针(Stack Pointer)寄存器，用它只可访问栈顶。</li>\n</ul>\n<p>寄存器EBP、ESP、BP和SP称为指针寄存器(Pointer Register)，主要用于存放堆栈内存储单元的偏移量， 用它们可实现多种存储器操作数的寻址方式，为以不同的地址形式访问存储单元提供方便。 </p>\n<p>指针寄存器不可分割成8位寄存器。作为通用寄存器，也可存储算术逻辑运算的操作数和运算结果。 </p>\n<h1 id=\"4、段寄存器\"><a href=\"#4、段寄存器\" class=\"headerlink\" title=\"4、段寄存器\"></a>4、段寄存器</h1><p>段寄存器是根据内存分段的管理模式而设置的。内存单元的物理地址由段寄存器的值和一个偏移量组合而成的，这样可用两个较少位数的值组合成一个可访问较大物理空间的内存地址。 </p>\n<p>CPU内部的段寄存器： </p>\n<ol>\n<li>ECS——代码段寄存器(Code Segment Register)，其值为代码段的段值；  </li>\n<li>EDS——数据段寄存器(Data Segment Register)，其值为数据段的段值；  </li>\n<li>EES——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值；  </li>\n<li>ESS——堆栈段寄存器(Stack Segment Register)，其值为堆栈段的段值；  </li>\n<li>EFS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值；  </li>\n<li>EGS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值。  </li>\n<li></li>\n</ol>\n<ul>\n<li>在16位CPU系统中，它只有4个段寄存器，所以，程序在任何时刻至多有4个正在使用的段可直接访问；</li>\n<li>在32位微机系统中，它有6个段寄存器，所以，在此环境下开发的程序最多可同时访问6个段。</li>\n</ul>\n<p>32位CPU有两个不同的工作方式：实方式和保护方式。在每种方式下，段寄存器的作用是不同的。有关规定简 单描述如下： </p>\n<ul>\n<li><p>实方式： 前4个段寄存器CS、DS、ES和SS与先前CPU中的所对应的段寄存器的含义完全一致，内存单元的逻辑地址仍为“段值：偏移量”的形式。为访问某内存段内的数据，必须使用该段寄存器和存储单元的偏移量。  </p>\n</li>\n<li><p>保护方式： 在此方式下，情况要复杂得多，装入段寄存器的不再是段值，而是称为“选择子”(Selector)的某个值。</p>\n</li>\n</ul>\n<h1 id=\"5、指令指针寄存器\"><a href=\"#5、指令指针寄存器\" class=\"headerlink\" title=\"5、指令指针寄存器\"></a>5、指令指针寄存器</h1><p>32位CPU把指令指针扩展到32位，并记作EIP，EIP的低16位与先前CPU中的IP作用相同。 </p>\n<p>指令指针EIP、IP(Instruction Pointer)是存放下次将要执行的指令在代码段的偏移量。 </p>\n<p>在具有预取指令功能的系统中，下次要执行的指令通常已被预取到指令队列中，除非发生转移情况。 </p>\n<p>所以，在理解它们的功能时，不考虑存在指令队列的情况。 </p>\n<h1 id=\"6、标志寄存器\"><a href=\"#6、标志寄存器\" class=\"headerlink\" title=\"6、标志寄存器\"></a>6、标志寄存器</h1><h2 id=\"一、运算结果标志位\"><a href=\"#一、运算结果标志位\" class=\"headerlink\" title=\"一、运算结果标志位\"></a>一、运算结果标志位</h2><h3 id=\"1、进位标志CF-Carry-Flag\"><a href=\"#1、进位标志CF-Carry-Flag\" class=\"headerlink\" title=\"1、进位标志CF(Carry Flag)\"></a>1、进位标志CF(Carry Flag)</h3><p>进位标志CF主要用来反映运算是否产生进位或借位。如果运算结果的最高位产生了一个进位或借位，那么，其值为1，否则其值为0。 </p>\n<p>使用该标志位的情况有：多字(字节)数的加减运算，无符号数的大小比较运算，移位操作，字(字节)之间移位，专门改变CF值的指令等。 </p>\n<h3 id=\"2、奇偶标志PF-Parity-Flag\"><a href=\"#2、奇偶标志PF-Parity-Flag\" class=\"headerlink\" title=\"2、奇偶标志PF(Parity Flag)\"></a>2、奇偶标志PF(Parity Flag)</h3><p>奇偶标志PF用于反映运算结果中“1”的个数的奇偶性。如果“1”的个数为偶数，则PF的值为1，否则其值为0。 </p>\n<p>利用PF可进行奇偶校验检查，或产生奇偶校验位。在数据传送过程中，为了提供传送的可靠性，如果采用奇偶校验的方法，就可使用该标志位。 </p>\n<h3 id=\"3、辅助进位标志AF-Auxiliary-Carry-Flag\"><a href=\"#3、辅助进位标志AF-Auxiliary-Carry-Flag\" class=\"headerlink\" title=\"3、辅助进位标志AF(Auxiliary Carry Flag)\"></a>3、辅助进位标志AF(Auxiliary Carry Flag)</h3><p>在发生下列情况时，辅助进位标志AF的值被置为1，否则其值为0： </p>\n<ol>\n<li>在字操作时，发生低字节向高字节进位或借位时； </li>\n<li>在字节操作时，发生低4位向高4位进位或借位时。</li>\n</ol>\n<p>对以上6个运算结果标志位，在一般编程情况下，标志位CF、ZF、SF和OF的使用频率较高，而标志位PF和AF的使用频率较低。 </p>\n<h3 id=\"4、零标志ZF-Zero-Flag\"><a href=\"#4、零标志ZF-Zero-Flag\" class=\"headerlink\" title=\"4、零标志ZF(Zero Flag)\"></a>4、零标志ZF(Zero Flag)</h3><p>零标志ZF用来反映运算结果是否为0。如果运算结果为0，则其值为1，否则其值为0。在判断运算结果是否为0时，可使用此标志位。 </p>\n<h3 id=\"5、符号标志SF-Sign-Flag\"><a href=\"#5、符号标志SF-Sign-Flag\" class=\"headerlink\" title=\"5、符号标志SF(Sign Flag)\"></a>5、符号标志SF(Sign Flag)</h3><p>符号标志SF用来反映运算结果的符号位，它与运算结果的最高位相同。在微机系统中，有符号数采用码表示法，所以，SF也就反映运算结果的正负号。运算结果为正数时，SF的值为0，否则其值为1。 </p>\n<h3 id=\"6、溢出标志OF-Overflow-Flag\"><a href=\"#6、溢出标志OF-Overflow-Flag\" class=\"headerlink\" title=\"6、溢出标志OF(Overflow Flag)\"></a>6、溢出标志OF(Overflow Flag)</h3><p>溢出标志OF用于反映有符号数加减运算所得结果是否溢出。如果运算结果超过当前运算位数所能表示的范围，则称为溢出，OF的值被置为1，否则，OF的值被清为0。 “</p>\n<p>溢出”和“进位”是两个不同含义的概念，不要混淆。</p>\n<h2 id=\"二、状态控制标志位\"><a href=\"#二、状态控制标志位\" class=\"headerlink\" title=\"二、状态控制标志位\"></a>二、状态控制标志位</h2><p>状态控制标志位是用来控制CPU操作的，它们要通过专门的指令才能使之发生改变。 </p>\n<h2 id=\"1、追踪标志TF-Trap-Flag\"><a href=\"#1、追踪标志TF-Trap-Flag\" class=\"headerlink\" title=\"1、追踪标志TF(Trap Flag)\"></a>1、追踪标志TF(Trap Flag)</h2><p>当追踪标志TF被置为1时，CPU进入单步执行方式，即每执行一条指令，产生一个单步中断请求。这种方式主要用于程序的调试。 指令系统中没有专门的指令来改变标志位TF的值，但程序员可用其它办法来改变其值。 </p>\n<h3 id=\"2、中断允许标志IF-Interrupt-enable-Flag\"><a href=\"#2、中断允许标志IF-Interrupt-enable-Flag\" class=\"headerlink\" title=\"2、中断允许标志IF(Interrupt-enable Flag)\"></a>2、中断允许标志IF(Interrupt-enable Flag)</h3><p>中断允许标志IF是用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求。 但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。 具体规定如下： </p>\n<ol>\n<li>当IF=1时，CPU可以响应CPU外部的可屏蔽中断发出的中断请求； </li>\n<li>当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。 CPU的指令系统中也有专门的指令来改变标志位IF的值。</li>\n</ol>\n<h3 id=\"3、方向标志DF-Direction-Flag\"><a href=\"#3、方向标志DF-Direction-Flag\" class=\"headerlink\" title=\"3、方向标志DF(Direction Flag)\"></a>3、方向标志DF(Direction Flag)</h3><p>方向标志DF用来决定在串操作指令执行时有关指针寄存器发生调整的方向。 在微机的指令系统中，还提供了专门的指令来改变标志位DF的值。 </p>\n<h2 id=\"三、32位标志寄存器增加的标志位\"><a href=\"#三、32位标志寄存器增加的标志位\" class=\"headerlink\" title=\"三、32位标志寄存器增加的标志位\"></a>三、32位标志寄存器增加的标志位</h2><h3 id=\"1、I-O特权标志IOPL-I-O-Privilege-Level\"><a href=\"#1、I-O特权标志IOPL-I-O-Privilege-Level\" class=\"headerlink\" title=\"1、I/O特权标志IOPL(I/O Privilege Level)\"></a>1、I/O特权标志IOPL(I/O Privilege Level)</h3><p>I/O特权标志用两位二进制位来表示，也称为I/O特权级字段。该字段指定了要求执行I/O指令的特权级。 如果当前的特权级别在数值上小于等于IOPL的值，那么，该I/O指令可执行，否则将发生一个保护异常。 </p>\n<h3 id=\"2、嵌套任务标志NT-Nested-Task\"><a href=\"#2、嵌套任务标志NT-Nested-Task\" class=\"headerlink\" title=\"2、嵌套任务标志NT(Nested Task)\"></a>2、嵌套任务标志NT(Nested Task)</h3><p>嵌套任务标志NT用来控制中断返回指令IRET的执行。具体规定如下： </p>\n<ol>\n<li>当NT=0，用堆栈中保存的值恢复EFLAGS、CS和EIP，执行常规的中断返回操作； </li>\n<li>当NT=1，通过任务转换实现中断返回。</li>\n</ol>\n<h3 id=\"3、重启动标志RF-Restart-Flag\"><a href=\"#3、重启动标志RF-Restart-Flag\" class=\"headerlink\" title=\"3、重启动标志RF(Restart Flag)\"></a>3、重启动标志RF(Restart Flag)</h3><p>重启动标志RF用来控制是否接受调试故障。规定：RF=0时，表示“接受”调试故障，否则拒绝之。 在成功执行完一条指令后，处理机把RF置为0，当接受到一个非调试故障时，处理机就把它置为1。 </p>\n<h3 id=\"4、虚拟8086方式标志VM-Virtual-8086-Mode\"><a href=\"#4、虚拟8086方式标志VM-Virtual-8086-Mode\" class=\"headerlink\" title=\"4、虚拟8086方式标志VM(Virtual 8086 Mode)\"></a>4、虚拟8086方式标志VM(Virtual 8086 Mode)</h3><p>如果该标志的值为1，则表示处理机处于虚拟的8086方式下的工作状态，否则，处理机处于一般保护方式下的工作状态。 </p>\n",
            "tags": [
                "学习",
                "汇编"
            ]
        }
    ]
}