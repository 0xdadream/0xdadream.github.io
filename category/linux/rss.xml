<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>逐梦 • Posts by &#34;linux&#34; category</title>
        <link>https://0xdadream.github.io</link>
        <description>Welcome to my blog</description>
        <language>zh-CN</language>
        <pubDate>Mon, 02 Jun 2025 22:25:00 +0800</pubDate>
        <lastBuildDate>Mon, 02 Jun 2025 22:25:00 +0800</lastBuildDate>
        <category>tip</category>
        <category>intel</category>
        <category>cloudflare</category>
        <category>email</category>
        <category>安装</category>
        <category>AI</category>
        <category>tips</category>
        <category>re</category>
        <category>工具</category>
        <category>conda</category>
        <category>Java</category>
        <category>linux</category>
        <category>教程</category>
        <category>环境</category>
        <category>bug</category>
        <category>web</category>
        <category>wp</category>
        <category>攻防世界</category>
        <category>windows</category>
        <category>net</category>
        <category>BUUCTF</category>
        <category>server</category>
        <category>wall</category>
        <category>comfyui</category>
        <category>tools</category>
        <category>powershell</category>
        <category>sql</category>
        <category>代码审计</category>
        <category>漏洞复现</category>
        <category>emby</category>
        <category>python</category>
        <category>google</category>
        <category>git</category>
        <category>学习</category>
        <category>java</category>
        <category>命令</category>
        <category>远程</category>
        <category>php</category>
        <category>文件上传</category>
        <category>命令行</category>
        <category>下载</category>
        <category>区块链</category>
        <category>汇编</category>
        <category>密码学</category>
        <category>mcp</category>
        <category>i春秋</category>
        <category>证书</category>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/06/02/linux-chang-yong-ming-ling-xiang-xi-jiao-cheng/</guid>
            <title>Linux 常用命令详解教程</title>
            <link>https://0xdadream.github.io/2025/06/02/linux-chang-yong-ming-ling-xiang-xi-jiao-cheng/</link>
            <category>教程</category>
            <pubDate>Mon, 02 Jun 2025 22:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Linux-常用命令详解教程&#34;&gt;&lt;a href=&#34;#Linux-常用命令详解教程&#34; class=&#34;headerlink&#34; title=&#34;Linux 常用命令详解教程&#34;&gt;&lt;/a&gt;Linux 常用命令详解教程&lt;/h1&gt;&lt;p&gt;本教程旨在提供一份全面的 Linux 常用命令列表，涵盖文件管理、系统信息获取、高级系统监控、文本处理、用户与权限管理、网络配置与诊断以及端口和防火墙管理等多个方面。每个命令都将包含其用途、常用语法、重要选项及示例，力求内容完整且实用。&lt;/p&gt;
&lt;h2 id=&#34;一、文件和目录管理-File-and-Directory-Management&#34;&gt;&lt;a href=&#34;#一、文件和目录管理-File-and-Directory-Management&#34; class=&#34;headerlink&#34; title=&#34;一、文件和目录管理 (File and Directory Management)&#34;&gt;&lt;/a&gt;一、文件和目录管理 (File and Directory Management)&lt;/h2&gt;&lt;p&gt;文件和目录管理是 Linux 系统操作的基础。以下命令能帮助用户有效地在文件系统中进行导航、创建、删除、复制、移动和查找文件及目录。&lt;/p&gt;
&lt;h3 id=&#34;1-1-基本导航与列表-Basic-Navigation-and-Listing&#34;&gt;&lt;a href=&#34;#1-1-基本导航与列表-Basic-Navigation-and-Listing&#34; class=&#34;headerlink&#34; title=&#34;1.1 基本导航与列表 (Basic Navigation and Listing)&#34;&gt;&lt;/a&gt;1.1 基本导航与列表 (Basic Navigation and Listing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/strong&gt; (列出目录内容 List directory contents)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示目录中的文件和子目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ls [选项][目录名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 以长格式显示详细信息，包括权限、所有者、大小、修改日期等。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有文件，包括隐藏文件（以 &lt;code&gt;.&lt;/code&gt; 开头的文件）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示文件大小 (例如 1K, 234M, 2G)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;: 显示除 &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;..&lt;/code&gt; 之外的所有文件，包括隐藏文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 按文件大小降序排序。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 按修改时间排序，最新修改的在前。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归列出所有子目录的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -l /home/user&lt;/code&gt;: 以长格式列出 &lt;code&gt;/home/user&lt;/code&gt; 目录的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -ah&lt;/code&gt;: 以人类可读格式显示当前目录所有文件（包括隐藏文件）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/strong&gt; (更改目录 Change directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 切换当前工作目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cd [目录路径]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;特殊用法:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd..&lt;/code&gt;: 切换到上一级目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt; 或 &lt;code&gt;cd&lt;/code&gt;: 切换到当前用户的主目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd -&lt;/code&gt;: 切换到上一个工作目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd /var/log&lt;/code&gt;: 切换到 &lt;code&gt;/var/log&lt;/code&gt; 目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd../documents&lt;/code&gt;: 从当前目录切换到上一级的 &lt;code&gt;documents&lt;/code&gt; 子目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/strong&gt; (打印工作目录 Print working directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前所在的完整目录路径。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;pwd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-文件与目录操作-File-and-Directory-Operations&#34;&gt;&lt;a href=&#34;#1-2-文件与目录操作-File-and-Directory-Operations&#34; class=&#34;headerlink&#34; title=&#34;1.2 文件与目录操作 (File and Directory Operations)&#34;&gt;&lt;/a&gt;1.2 文件与目录操作 (File and Directory Operations)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;mkdir&lt;/code&gt;&lt;/strong&gt; (创建目录 Make directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 创建一个新的目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;mkdir [选项] 目录名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 递归创建目录，如果父目录不存在则一并创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mkdir new_project&lt;/code&gt;: 在当前目录下创建名为 &lt;code&gt;new_project&lt;/code&gt; 的目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir -p project/docs/images&lt;/code&gt;: 递归创建 &lt;code&gt;project&lt;/code&gt; 目录及其子目录 &lt;code&gt;docs&lt;/code&gt; 和 &lt;code&gt;images&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rmdir&lt;/code&gt;&lt;/strong&gt; (删除空目录 Remove empty directory)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 删除一个空的目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;rmdir [选项] 目录名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 递归删除目录，当子目录被删除后其父目录变为空时，也一同被删除。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ignore-fail-on-non-empty&lt;/code&gt;: 删除非空目录时忽略错误（通常不推荐，应使用 &lt;code&gt;rm -r&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;rmdir old_folder&lt;/code&gt; (如果 &lt;code&gt;old_folder&lt;/code&gt; 为空，则删除它)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/strong&gt; (复制文件和目录 Copy files and directories)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 复制文件或目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cp [选项] 源文件/目录 目标文件/目录&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt;: 递归复制目录及其内容。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 覆盖前提示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细的复制过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cp file1.txt file1_backup.txt&lt;/code&gt;: 将 &lt;code&gt;file1.txt&lt;/code&gt; 复制为 &lt;code&gt;file1_backup.txt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp -r project_a/ /backup/project_a_backup&lt;/code&gt;: 将 &lt;code&gt;project_a&lt;/code&gt; 目录及其所有内容复制到 &lt;code&gt;/backup/project_a_backup&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/strong&gt; (移动或重命名文件和目录 Move or rename files and directories)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 移动文件或目录，或者在同一目录下对文件或目录进行重命名。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;mv [选项] 源文件/目录 目标文件/目录&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 覆盖前提示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不覆盖已存在的目标文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 仅当源文件比目标文件新，或目标文件不存在时，才执行移动。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mv report.docx documents/&lt;/code&gt;: 将 &lt;code&gt;report.docx&lt;/code&gt; 移动到 &lt;code&gt;documents&lt;/code&gt; 目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv old_name.txt new_name.txt&lt;/code&gt;: 将 &lt;code&gt;old_name.txt&lt;/code&gt; 重命名为 &lt;code&gt;new_name.txt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv temp_folder /opt/archive/&lt;/code&gt;: 将 &lt;code&gt;temp_folder&lt;/code&gt; 目录移动到 &lt;code&gt;/opt/archive/&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rm&lt;/code&gt;&lt;/strong&gt; (删除文件或目录 Remove files or directories)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 删除文件或目录。这是一个非常强大的命令，使用时需格外小心。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;rm [选项] 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt;: 递归删除目录及其所有内容。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 强制删除，不进行提示，忽略不存在的文件和参数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 删除前逐一提示确认。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细的删除过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;警告:&lt;/strong&gt; &lt;code&gt;rm -rf&lt;/code&gt; 命令会无提示地递归删除指定目录下的所有内容，一旦执行无法轻易恢复，务必谨慎使用。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rm unwanted_file.txt&lt;/code&gt;: 删除 &lt;code&gt;unwanted_file.txt&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -rf old_project/&lt;/code&gt;: 强制递归删除 &lt;code&gt;old_project&lt;/code&gt; 目录及其所有内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;touch&lt;/code&gt;&lt;/strong&gt; (创建空文件或更新文件时间戳 Create empty file or update file timestamps)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 创建一个空文件，或者更新已有文件的时间戳（访问时间和修改时间）。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;touch [选项] 文件名...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;touch newfile.log&lt;/code&gt;: 创建一个名为 &lt;code&gt;newfile.log&lt;/code&gt; 的空文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch existing_file.txt&lt;/code&gt;: 更新 &lt;code&gt;existing_file.txt&lt;/code&gt; 的时间戳。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ln&lt;/code&gt;&lt;/strong&gt; (创建链接 Create links)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 在文件之间创建链接，分为硬链接和符号链接（软链接）。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ln [选项] 源文件 链接名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 创建符号链接（软链接）。如果不使用此选项，则创建硬链接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;硬链接与符号链接的区别:&lt;ul&gt;
&lt;li&gt;硬链接：与原文件共享相同的inode号和数据块，删除原文件不影响硬链接的访问，除非所有硬链接和原文件都被删除。不能对目录创建硬链接，不能跨文件系统创建硬链接。 &lt;/li&gt;
&lt;li&gt;符号链接：一个指向原文件路径的特殊文件，类似于快捷方式。删除原文件会导致符号链接失效。可以对目录创建符号链接，也可以跨文件系统创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ln target.txt hard_link.txt&lt;/code&gt;: 为 &lt;code&gt;target.txt&lt;/code&gt; 创建一个名为 &lt;code&gt;hard_link.txt&lt;/code&gt; 的硬链接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ln -s /opt/app/config.conf /etc/app_config.conf&lt;/code&gt;: 为 &lt;code&gt;/opt/app/config.conf&lt;/code&gt; 创建一个名为 &lt;code&gt;/etc/app_config.conf&lt;/code&gt; 的符号链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-3-文件查找与类型判断-File-Searching-and-Type-Identification&#34;&gt;&lt;a href=&#34;#1-3-文件查找与类型判断-File-Searching-and-Type-Identification&#34; class=&#34;headerlink&#34; title=&#34;1.3 文件查找与类型判断 (File Searching and Type Identification)&#34;&gt;&lt;/a&gt;1.3 文件查找与类型判断 (File Searching and Type Identification)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;find&lt;/code&gt;&lt;/strong&gt; (在目录层次结构中查找文件 Search for files in a directory hierarchy)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 根据指定的条件在目录树中搜索文件和目录。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;find [路径...][表达式选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用表达式选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-name &#34;模式&#34;&lt;/code&gt;: 按文件名模式查找 (支持通配符, 如 &lt;code&gt;*.txt&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type 类型&lt;/code&gt;: 按文件类型查找 (如 &lt;code&gt;f&lt;/code&gt; 普通文件, &lt;code&gt;d&lt;/code&gt; 目录, &lt;code&gt;l&lt;/code&gt; 符号链接)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-user 用户名&lt;/code&gt;: 按文件所有者查找。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-group 组名&lt;/code&gt;: 按文件所属组查找。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-size [+|-]大小[cwbkMG]&lt;/code&gt;: 按文件大小查找 (如 &lt;code&gt;+10M&lt;/code&gt; 大于10MB, &lt;code&gt;-1k&lt;/code&gt; 小于1KB)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime [-|+]天数&lt;/code&gt;: 按文件修改时间查找 (如 &lt;code&gt;-7&lt;/code&gt; 7天内修改, &lt;code&gt;+30&lt;/code&gt; 30天前修改)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-exec 命令 {} \;&lt;/code&gt;: 对找到的每个文件执行指定的命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-maxdepth 层数&lt;/code&gt;: 限制搜索深度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find /home/user -name &#34;*.log&#34; -mtime -7&lt;/code&gt;: 在 &lt;code&gt;/home/user&lt;/code&gt; 目录及其子目录下查找最近7天内修改过的所有 &lt;code&gt;.log&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find. -type f -size +100M -exec rm {} \;&lt;/code&gt;: 查找当前目录下大于100MB的普通文件并删除它们（删除前会提示）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;file&lt;/code&gt;&lt;/strong&gt; (判断文件类型 Determine file type)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 识别给定文件的类型。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;file [选项] 文件名...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; 或 &lt;code&gt;--brief&lt;/code&gt;: 简要模式，不输出文件名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 输出MIME类型字符串。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt;: 尝试查看压缩文件内部。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file document.pdf&lt;/code&gt;: 显示 &lt;code&gt;document.pdf&lt;/code&gt; 的文件类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file -bi image.jpg&lt;/code&gt;: 以MIME类型格式简要显示 &lt;code&gt;image.jpg&lt;/code&gt; 的类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二、系统信息与管理-System-Information-and-Management&#34;&gt;&lt;a href=&#34;#二、系统信息与管理-System-Information-and-Management&#34; class=&#34;headerlink&#34; title=&#34;二、系统信息与管理 (System Information and Management)&#34;&gt;&lt;/a&gt;二、系统信息与管理 (System Information and Management)&lt;/h2&gt;&lt;p&gt;了解系统的运行状态、硬件信息和基本配置是系统管理的重要组成部分。&lt;/p&gt;
&lt;h3 id=&#34;2-1-系统基本信息-Basic-System-Information&#34;&gt;&lt;a href=&#34;#2-1-系统基本信息-Basic-System-Information&#34; class=&#34;headerlink&#34; title=&#34;2.1 系统基本信息 (Basic System Information)&#34;&gt;&lt;/a&gt;2.1 系统基本信息 (Basic System Information)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;uname&lt;/code&gt;&lt;/strong&gt; (打印系统信息 Print system information)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前系统的内核名称、版本、主机名等信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;uname [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有可用信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示内核发行版本。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示内核名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 显示网络节点主机名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 显示机器硬件名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;uname -a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;hostname&lt;/code&gt;&lt;/strong&gt; (显示或设置系统的主机名 Show or set the system’s host name)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 查看或临时设置系统的主机名。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;hostname [选项][新主机名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--short&lt;/code&gt;: 显示短主机名 (第一个点之前的部分)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--fqdn&lt;/code&gt; 或 &lt;code&gt;--long&lt;/code&gt;: 显示完全限定域名 (FQDN)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 或 &lt;code&gt;--ip-address&lt;/code&gt;: 显示主机的IP地址 (如果可解析)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; 或 &lt;code&gt;--all-ip-addresses&lt;/code&gt;: 显示主机所有网络接口的IP地址。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; 或 &lt;code&gt;--domain&lt;/code&gt;: 显示DNS域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt;: 显示当前主机名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo hostname new-server-name&lt;/code&gt;: 临时将主机名设置为 &lt;code&gt;new-server-name&lt;/code&gt; (永久更改需修改配置文件，如 &lt;code&gt;/etc/hostname&lt;/code&gt; )。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;date&lt;/code&gt;&lt;/strong&gt; (打印或设置系统日期和时间 Print or set the system date and time)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示或设置系统的当前日期和时间。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;date [选项][+格式]YY][.ss]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项与格式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+%Y-%m-%d %H:%M:%S&lt;/code&gt;: 以 &lt;code&gt;年-月-日 时:分:秒&lt;/code&gt; 格式显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--set=&#34;字符串&#34;&lt;/code&gt;: 设置日期和时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt;: 显示当前日期和时间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date &#39;+%A, %B %d, %Y&#39;&lt;/code&gt;: 以 “星期几, 月份 日期, 年份” 格式显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo date --set=&#34;2024-07-30 10:30:00&#34;&lt;/code&gt;: 将日期和时间设置为2024年7月30日10点30分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;uptime&lt;/code&gt;&lt;/strong&gt; (告诉系统已运行多长时间 Tell how long the system has been running)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示系统自上次启动以来运行了多长时间、当前用户数量以及系统平均负载。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;uptime [选项]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 以易读格式显示运行时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;uptime&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;whoami&lt;/code&gt;&lt;/strong&gt; (打印有效用户ID Print effective user ID)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前正在操作的用户名。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;whoami&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;whoami&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2-磁盘与内存使用-Disk-and-Memory-Usage&#34;&gt;&lt;a href=&#34;#2-2-磁盘与内存使用-Disk-and-Memory-Usage&#34; class=&#34;headerlink&#34; title=&#34;2.2 磁盘与内存使用 (Disk and Memory Usage)&#34;&gt;&lt;/a&gt;2.2 磁盘与内存使用 (Disk and Memory Usage)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;df&lt;/code&gt;&lt;/strong&gt; (报告文件系统磁盘空间使用情况 Report file system disk space usage)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示文件系统的总空间、已用空间、可用空间和挂载点。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;df [选项][文件/目录]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示 (例如 GB, MB)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt;: 显示文件系统类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 显示inode信息而非块使用情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;df -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;du&lt;/code&gt;&lt;/strong&gt; (估算文件空间使用情况 Estimate file space usage)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示指定文件或目录占用的磁盘空间大小。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;du [选项][文件/目录]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 仅显示总计大小。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 显示总计大小，并在最后显示所有参数的总和。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-depth=N&lt;/code&gt;: 只显示指定深度的目录大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;du -sh /var/log&lt;/code&gt;: 显示 &lt;code&gt;/var/log&lt;/code&gt; 目录的总大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -h --max-depth=1 /home&lt;/code&gt;: 显示 &lt;code&gt;/home&lt;/code&gt; 目录下第一级子目录和文件的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;free&lt;/code&gt;&lt;/strong&gt; (显示系统中的可用和已用物理内存和交换内存量 Display amount of free and used memory in the system)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 查看系统内存和交换空间的使用情况。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;free [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 以人类可读的格式显示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 以MB为单位显示。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;: 以GB为单位显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s N&lt;/code&gt;: 每N秒刷新一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;free -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-3-系统控制-System-Control&#34;&gt;&lt;a href=&#34;#2-3-系统控制-System-Control&#34; class=&#34;headerlink&#34; title=&#34;2.3 系统控制 (System Control)&#34;&gt;&lt;/a&gt;2.3 系统控制 (System Control)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/strong&gt; (关闭系统 Schedule a system shutdown)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 安全地关闭或重启Linux系统，可以指定延迟时间或特定时间，并向登录用户发送警告信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo shutdown [选项] 时间 [警告信息]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 关闭系统后停止电源 (halt)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P&lt;/code&gt;: 关闭系统后切断电源 (power off)，通常是 &lt;code&gt;-h&lt;/code&gt; 的默认行为。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 重启系统。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 取消先前安排的关机。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 发送警告信息，但不实际关机。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;时间参数:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;now&lt;/code&gt;: 立刻执行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;+分钟数&lt;/code&gt;: 指定多少分钟后执行 (例如 &lt;code&gt;+10&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;hh:mm&lt;/code&gt;: 指定绝对时间执行 (例如 &lt;code&gt;23:00&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo shutdown -h now&lt;/code&gt;: 立刻关闭系统。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo shutdown -r +15 &#34;系统将在15分钟后重启以进行维护&#34;&lt;/code&gt;: 15分钟后重启系统并发送消息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo shutdown -c&lt;/code&gt;: 取消已计划的关机或重启。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;reboot&lt;/code&gt;&lt;/strong&gt; (重启系统 Reboot the system)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 重启Linux系统。通常是 &lt;code&gt;shutdown -r now&lt;/code&gt; 的一个快捷方式。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo reboot [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 强制重启，不调用 &lt;code&gt;shutdown&lt;/code&gt;。不推荐常规使用。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 关闭电源（如果系统支持）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo reboot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;history&lt;/code&gt;&lt;/strong&gt; (显示或操作历史列表 Display or manipulate the history list)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示用户在当前shell会话中执行过的命令历史。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;history [选项][数量]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 清空历史列表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 偏移量&lt;/code&gt;: 删除指定偏移量的历史条目。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特殊用法:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;!!&lt;/code&gt;: 执行上一条命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;!编号&lt;/code&gt;: 执行历史列表中指定编号的命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;!字符串&lt;/code&gt;: 执行最近一条以指定字符串开头的命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+R&lt;/code&gt;: 反向搜索历史命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;history&lt;/code&gt;: 显示所有命令历史。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;history 20&lt;/code&gt;: 显示最近20条命令历史。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!ls&lt;/code&gt;: 执行最近一条以 &lt;code&gt;ls&lt;/code&gt; 开头的命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;man&lt;/code&gt;&lt;/strong&gt; (系统参考手册的分页程序 an interface to the on-line reference manuals)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示命令、函数或配置文件的帮助手册页。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;man [选项][章节] 命令名/主题&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-k 关键字&lt;/code&gt;: 根据关键字搜索手册页标题和描述 (等同于 &lt;code&gt;apropos&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导航:&lt;/strong&gt; 在 &lt;code&gt;man&lt;/code&gt; 页面中，通常使用与 &lt;code&gt;less&lt;/code&gt; 相同的导航键（如空格翻页，&lt;code&gt;q&lt;/code&gt; 退出，&lt;code&gt;/&lt;/code&gt; 搜索）。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;man ls&lt;/code&gt;: 显示 &lt;code&gt;ls&lt;/code&gt; 命令的手册页。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man 5 passwd&lt;/code&gt;: 显示 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件格式的手册页 (第5章节通常是文件格式)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/strong&gt; (清屏 Clear the terminal screen)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 清除终端屏幕上的所有内容，将提示符移到屏幕顶部。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;clear&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;clear&lt;/code&gt; (快捷键通常是 &lt;code&gt;Ctrl+L&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;alias&lt;/code&gt;&lt;/strong&gt; (定义或显示别名 Define or display aliases)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 为长命令或常用命令序列创建简短的别名。 &lt;/li&gt;
&lt;li&gt;语法:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alias&lt;/code&gt;: 显示所有已定义的别名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;alias 名称=&#39;命令&#39;&lt;/code&gt; : 定义一个别名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;unalias 名称&lt;/code&gt;: 删除一个别名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久化:&lt;/strong&gt; 临时定义的别名只在当前shell会话有效。要使其永久生效，需将其添加到shell的配置文件中，如 &lt;code&gt;~/.bashrc&lt;/code&gt; 或 &lt;code&gt;~/.bash_aliases&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alias ll=&#39;ls -alF&#39;&lt;/code&gt;: 定义 &lt;code&gt;ll&lt;/code&gt; 作为 &lt;code&gt;ls -alF&lt;/code&gt; 的别名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alias update=&#39;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&#39;&lt;/code&gt;: 定义 &lt;code&gt;update&lt;/code&gt; 用于更新系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三、高级系统监控-Advanced-System-Monitoring&#34;&gt;&lt;a href=&#34;#三、高级系统监控-Advanced-System-Monitoring&#34; class=&#34;headerlink&#34; title=&#34;三、高级系统监控 (Advanced System Monitoring)&#34;&gt;&lt;/a&gt;三、高级系统监控 (Advanced System Monitoring)&lt;/h2&gt;&lt;p&gt;除了基本的系统信息查看，Linux还提供了一系列高级工具，用于深入监控系统性能的各个方面，如CPU、内存、I/O和网络活动。&lt;/p&gt;
&lt;h3 id=&#34;3-1-进程管理与监控-Process-Management-and-Monitoring&#34;&gt;&lt;a href=&#34;#3-1-进程管理与监控-Process-Management-and-Monitoring&#34; class=&#34;headerlink&#34; title=&#34;3.1 进程管理与监控 (Process Management and Monitoring)&#34;&gt;&lt;/a&gt;3.1 进程管理与监控 (Process Management and Monitoring)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ps&lt;/code&gt;&lt;/strong&gt; (报告当前进程的快照 Report a snapshot of the current processes)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前系统中正在运行的进程信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ps [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;aux&lt;/code&gt;: 显示所有用户的进程（System V风格，无 &lt;code&gt;-&lt;/code&gt;）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ef&lt;/code&gt;: 显示所有进程，以完整格式（BSD风格，有 &lt;code&gt;-&lt;/code&gt;）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 显示指定用户的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--forest&lt;/code&gt;: 以ASCII字符显示进程树。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--sort=关键字&lt;/code&gt;: 按指定关键字排序 (例如 &lt;code&gt;%cpu&lt;/code&gt;, &lt;code&gt;%mem&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ps aux&lt;/code&gt;: 显示系统中所有正在运行的进程的详细信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps -ef | grep sshd&lt;/code&gt;: 查找名为 &lt;code&gt;sshd&lt;/code&gt; 的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux --sort=-%mem | head -n 5&lt;/code&gt;: 显示内存使用率最高的5个进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt; (显示Linux进程 Display Linux processes)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 实时动态地显示系统中各个进程的资源占用状况，如CPU使用率、内存使用率等，默认按CPU使用率排序。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;top [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;交互命令 (在 &lt;code&gt;top&lt;/code&gt; 运行时):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt;: 按CPU使用百分比排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M&lt;/code&gt;: 按内存使用百分比排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: 按进程ID (PID) 排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;: 杀死一个进程 (需要输入PID和信号，默认为15 SIGTERM)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;: 重新设置一个进程的nice值 (优先级)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; 或 &lt;code&gt;?&lt;/code&gt;: 显示帮助。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;: 退出 &lt;code&gt;top&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;: 改变刷新延迟时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d 秒数&lt;/code&gt;: 设置屏幕刷新间隔。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n 次数&lt;/code&gt;: 刷新指定次数后退出。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 批处理模式，适合将输出重定向到文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o +列名&lt;/code&gt;: 按指定列排序 (如 &lt;code&gt;+%MEM&lt;/code&gt; 按内存排序)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;top&lt;/code&gt; (启动实时监控)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;htop&lt;/code&gt;&lt;/strong&gt; (交互式进程查看器 Interactive process viewer)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; &lt;code&gt;top&lt;/code&gt; 的增强版，提供更友好的交互界面、颜色显示、鼠标支持、水平/垂直滚动以及完整的命令行显示。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;htop [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d 延迟&lt;/code&gt;: 设置更新之间的延迟（单位为十分之一秒，例如 &lt;code&gt;-d 10&lt;/code&gt; 表示1秒）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 只显示指定用户的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 列名&lt;/code&gt;: 按指定列排序 (例如 &lt;code&gt;-s PERCENT_MEM&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 以树状视图显示进程层级关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交互命令 (在 &lt;code&gt;htop&lt;/code&gt; 运行时):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;F4&lt;/code&gt; (或 &lt;code&gt;\&lt;/code&gt;): 过滤进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F5&lt;/code&gt; (或 &lt;code&gt;t&lt;/code&gt;): 切换树状视图。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F6&lt;/code&gt; (或 &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt;): 选择排序字段。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F9&lt;/code&gt; (或 &lt;code&gt;k&lt;/code&gt;): 杀死选中的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;F10&lt;/code&gt; (或 &lt;code&gt;q&lt;/code&gt;): 退出 &lt;code&gt;htop&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;htop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/strong&gt; (向进程发送信号 Send a signal to a process)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 向指定的进程发送信号，常用于终止进程。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;kill [选项] PID...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用信号:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIGTERM&lt;/code&gt; (15): 默认信号，请求进程正常终止。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIGKILL&lt;/code&gt; (9): 强制终止进程，进程无法捕获此信号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIGHUP&lt;/code&gt; (1): 挂起进程，常用于让守护进程重新读取配置文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;SIGINT&lt;/code&gt; (2): 中断进程，等同于 &lt;code&gt;Ctrl+C&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 列出所有可用的信号名称。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-信号编号或名称&lt;/code&gt;: 指定要发送的信号 (例如 &lt;code&gt;-9&lt;/code&gt; 或 &lt;code&gt;-SIGKILL&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kill 12345&lt;/code&gt;: 向PID为12345的进程发送 &lt;code&gt;SIGTERM&lt;/code&gt; 信号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kill -9 54321&lt;/code&gt;: 强制杀死PID为54321的进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pkill&lt;/code&gt;&lt;/strong&gt; (根据名称和其他属性查找或发信号给进程 Signal processes based on name and other attributes)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 根据进程名或其他属性向进程发送信号，通常用于终止进程。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;pkill [选项] 模式&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-信号&lt;/code&gt;: 指定要发送的信号 (例如 &lt;code&gt;-9&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 匹配指定用户的进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 匹配完整命令行参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pkill firefox&lt;/code&gt;: 终止所有名为 &lt;code&gt;firefox&lt;/code&gt; 的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkill -9 -f &#34;stale_script.py&#34;&lt;/code&gt;: 强制杀死完整命令行包含 “stale_script.py” 的进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;jobs&lt;/code&gt;&lt;/strong&gt; (列出活动作业 List active jobs)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示在当前shell会话中放到后台运行或被挂起的作业。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;jobs [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 同时显示作业的进程ID (PID)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 只显示作业的进程ID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 只显示正在运行的作业。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 只显示已停止（挂起）的作业。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;jobs -l&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;bg&lt;/code&gt;&lt;/strong&gt; (将作业放到后台运行 Resume suspended jobs in the background)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 将一个已挂起（stopped）的作业转到后台继续运行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;bg&lt;/code&gt; 51 (作业ID可通过 &lt;code&gt;jobs&lt;/code&gt; 命令查看，通常以 &lt;code&gt;%&lt;/code&gt; 开头，如 &lt;code&gt;%1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;bg %1&lt;/code&gt; (将作业号为1的挂起作业转到后台运行)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;fg&lt;/code&gt;&lt;/strong&gt; (将作业放到前台运行 Resume jobs in the foreground)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 将一个在后台运行或已挂起的作业转到前台继续运行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;fg&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;fg %2&lt;/code&gt; (将作业号为2的作业转到前台运行)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-2-系统性能分析-System-Performance-Analysis&#34;&gt;&lt;a href=&#34;#3-2-系统性能分析-System-Performance-Analysis&#34; class=&#34;headerlink&#34; title=&#34;3.2 系统性能分析 (System Performance Analysis)&#34;&gt;&lt;/a&gt;3.2 系统性能分析 (System Performance Analysis)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;vmstat&lt;/code&gt;&lt;/strong&gt; (报告虚拟内存统计信息 Report virtual memory statistics)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示关于进程、内存、分页、块I/O、陷阱和CPU活动的即时信息。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;vmstat [选项][延迟 [次数]]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示活动/非活动内存。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示各种事件计数器和内存统计信息的表格。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 显示磁盘统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 分区&lt;/code&gt;: 显示指定分区的详细统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 在输出中添加时间戳。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;延迟 次数&lt;/code&gt;: 每隔“延迟”秒输出一次报告，共输出“次数”次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出字段解释:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;procs&lt;/code&gt;: &lt;code&gt;r&lt;/code&gt; (等待运行的进程数), &lt;code&gt;b&lt;/code&gt; (不可中断睡眠的进程数)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;memory&lt;/code&gt;: &lt;code&gt;swpd&lt;/code&gt; (使用的虚拟内存), &lt;code&gt;free&lt;/code&gt; (空闲物理内存), &lt;code&gt;buff&lt;/code&gt; (用作缓冲的内存), &lt;code&gt;cache&lt;/code&gt; (用作缓存的内存)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swap&lt;/code&gt;: &lt;code&gt;si&lt;/code&gt; (从磁盘换入的内存量/秒), &lt;code&gt;so&lt;/code&gt; (换出到磁盘的内存量/秒)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;io&lt;/code&gt;: &lt;code&gt;bi&lt;/code&gt; (从块设备接收到的块数/秒), &lt;code&gt;bo&lt;/code&gt; (发送到块设备的块数/秒)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;system&lt;/code&gt;: &lt;code&gt;in&lt;/code&gt; (每秒中断次数), &lt;code&gt;cs&lt;/code&gt; (每秒上下文切换次数)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpu&lt;/code&gt;: &lt;code&gt;us&lt;/code&gt; (用户CPU时间百分比), &lt;code&gt;sy&lt;/code&gt; (系统CPU时间百分比), &lt;code&gt;id&lt;/code&gt; (空闲CPU时间百分比), &lt;code&gt;wa&lt;/code&gt; (等待I/O的CPU时间百分比), &lt;code&gt;st&lt;/code&gt; (从虚拟机窃取的CPU时间百分比)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmstat 2 5&lt;/code&gt;: 每2秒显示一次系统状态，共显示5次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vmstat -s&lt;/code&gt;: 显示内存和事件计数器摘要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;iostat&lt;/code&gt;&lt;/strong&gt; (报告CPU统计信息和输入/输出统计信息 Report Central Processing Unit (CPU) statistics and input/output statistics for devices and partitions)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 监控系统输入/输出设备和CPU的活动情况，用于识别磁盘或CPU瓶颈。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;iostat [选项][间隔 [次数]]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 仅显示CPU利用率报告。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 仅显示设备利用率报告。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;: 显示扩展的I/O统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 以KB为单位显示统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 以MB为单位显示统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 打印每个报告的时间。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p [设备 | ALL]&lt;/code&gt;: 显示块设备及其所有分区的统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;间隔 次数&lt;/code&gt;: 每隔“间隔”秒输出一次报告，共输出“次数”次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出字段解释 (部分):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%user&lt;/code&gt;: 用户级别CPU利用率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%system&lt;/code&gt;: 系统级别CPU利用率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%iowait&lt;/code&gt;: CPU等待I/O操作完成的时间百分比。高 &lt;code&gt;%iowait&lt;/code&gt; 通常表示I/O瓶颈。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;%idle&lt;/code&gt;: CPU空闲时间百分比。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tps&lt;/code&gt;: 每秒传输次数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Blk_read/s&lt;/code&gt; (或 &lt;code&gt;kB_read/s&lt;/code&gt;, &lt;code&gt;MB_read/s&lt;/code&gt;): 每秒读取的块/KB/MB数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Blk_wrtn/s&lt;/code&gt; (或 &lt;code&gt;kB_wrtn/s&lt;/code&gt;, &lt;code&gt;MB_wrtn/s&lt;/code&gt;): 每秒写入的块/KB/MB数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%util&lt;/code&gt;: 存储设备繁忙的时间百分比。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iostat -dx 2 5&lt;/code&gt;: 每2秒显示一次扩展的磁盘I/O统计信息，共显示5次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iostat -c 1&lt;/code&gt;: 每1秒显示一次CPU利用率。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;sar&lt;/code&gt;&lt;/strong&gt; (收集、报告或保存系统活动信息 Collect, report, or save system activity information)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; System Activity Reporter，一个强大的系统性能分析工具，可以收集和报告CPU、内存、I/O、网络等多种系统活动的统计数据，支持历史数据分析。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装:&lt;/strong&gt; &lt;code&gt;sar&lt;/code&gt; 通常包含在 &lt;code&gt;sysstat&lt;/code&gt; 包中，可能需要手动安装: &lt;code&gt;sudo apt-get install sysstat&lt;/code&gt; 或 &lt;code&gt;sudo yum install sysstat&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sar [选项][间隔 [次数]]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示CPU利用率。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示内存利用率。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 显示I/O和传输速率统计。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 显示块设备（磁盘）活动。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n DEV | EDEV |...&lt;/code&gt;: 显示网络统计信息 (&lt;code&gt;DEV&lt;/code&gt; 为网络接口，&lt;code&gt;EDEV&lt;/code&gt; 为网络错误)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt;: 显示运行队列长度和平均负载。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P ALL | CPU号&lt;/code&gt;: 报告每个处理器的统计信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 文件名&lt;/code&gt;: 将数据保存到二进制文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 文件名&lt;/code&gt;: 从指定文件读取数据。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;间隔 次数&lt;/code&gt;: 每隔“间隔”秒输出一次报告，共输出“次数”次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sar -u 2 5&lt;/code&gt;: 每2秒显示一次CPU利用率，共显示5次。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sar -r 1 3&lt;/code&gt;: 每1秒显示一次内存利用率，共显示3次。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sar -n DEV 1&lt;/code&gt;: 每1秒显示一次网络接口统计。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sar -f /var/log/sa/saDD&lt;/code&gt; (其中DD为日期): 查看历史系统活动报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;lsof&lt;/code&gt;&lt;/strong&gt; (列出打开的文件 List open files)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示系统中所有进程打开的文件列表。在Linux中，“一切皆文件”，因此 &lt;code&gt;lsof&lt;/code&gt; 可以显示打开的普通文件、目录、网络套接字、设备等。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;lsof [选项][文件名]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-i [条件]&lt;/code&gt;: 显示符合条件的网络连接。例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i TCP:22&lt;/code&gt;: 显示监听或连接到TCP端口22的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i :80&lt;/code&gt;: 显示监听或连接到端口80的进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i @主机名/IP&lt;/code&gt;: 显示与指定主机相关的连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 显示指定用户打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-p PID&lt;/code&gt;: 显示指定进程ID打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-c 命令名&lt;/code&gt;: 显示由指定命令名开头的进程打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;+D 目录&lt;/code&gt;: 递归显示目录下被打开的文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-t&lt;/code&gt;: 只输出进程ID (PID)，常用于与其他命令结合。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -i :80&lt;/code&gt;: 查看哪些进程正在使用80端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -u apache&lt;/code&gt;: 查看用户 &lt;code&gt;apache&lt;/code&gt; 打开了哪些文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof /var/log/syslog&lt;/code&gt;: 查看哪个进程打开了 &lt;code&gt;/var/log/syslog&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -p 1234&lt;/code&gt;: 查看PID为1234的进程打开了哪些文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;四、文本处理-Text-Processing&#34;&gt;&lt;a href=&#34;#四、文本处理-Text-Processing&#34; class=&#34;headerlink&#34; title=&#34;四、文本处理 (Text Processing)&#34;&gt;&lt;/a&gt;四、文本处理 (Text Processing)&lt;/h2&gt;&lt;p&gt;Linux 提供了大量强大的文本处理工具，用于查看、搜索、编辑和分析文本文件。&lt;/p&gt;
&lt;h3 id=&#34;4-1-文件内容查看-Viewing-File-Contents&#34;&gt;&lt;a href=&#34;#4-1-文件内容查看-Viewing-File-Contents&#34; class=&#34;headerlink&#34; title=&#34;4.1 文件内容查看 (Viewing File Contents)&#34;&gt;&lt;/a&gt;4.1 文件内容查看 (Viewing File Contents)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;cat&lt;/code&gt;&lt;/strong&gt; (连接文件并打印到标准输出 Concatenate files and print on the standard output)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示一个或多个文件的全部内容，也可用于创建或合并文件。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cat [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 显示行号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt;: 在每行末尾显示 &lt;code&gt;$&lt;/code&gt; 符号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat myfile.txt&lt;/code&gt;: 显示 &lt;code&gt;myfile.txt&lt;/code&gt; 的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat file1.txt file2.txt &amp;gt; combined.txt&lt;/code&gt;: 合并 &lt;code&gt;file1.txt&lt;/code&gt; 和 &lt;code&gt;file2.txt&lt;/code&gt; 的内容到 &lt;code&gt;combined.txt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat -n script.sh&lt;/code&gt;: 显示 &lt;code&gt;script.sh&lt;/code&gt; 的内容并带行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;less&lt;/code&gt;&lt;/strong&gt; (与 &lt;code&gt;more&lt;/code&gt; 功能相反，但功能更强大 Opposite of more, but with more features)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 分页查看文件内容，允许向前和向后滚动，支持搜索。比 &lt;code&gt;cat&lt;/code&gt; 更适合查看大文件。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;less [选项] 文件名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-N&lt;/code&gt;: 显示行号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 禁止长行自动换行 (内容超出屏幕宽度时可水平滚动)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 搜索时忽略大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt;: 如果内容能在一屏内显示完则自动退出。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt;: 退出 &lt;code&gt;less&lt;/code&gt; 后不清屏。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交互命令 (在 &lt;code&gt;less&lt;/code&gt; 运行时):&lt;ul&gt;
&lt;li&gt;空格键 或 &lt;code&gt;f&lt;/code&gt;: 向下翻一页。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: 向上翻一页。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt; 或 向下箭头: 向下滚动一行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt; 或 向上箭头: 向上滚动一行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;G&lt;/code&gt;: 跳转到文件末尾。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;: 跳转到文件开头。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;/模式&lt;/code&gt;: 向下搜索指定模式。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;?模式&lt;/code&gt;: 向上搜索指定模式。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;: 重复上一次搜索 (同方向)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: 重复上一次搜索 (反方向)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;: 退出 &lt;code&gt;less&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;: 显示帮助。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;less large_log_file.log&lt;/code&gt;: 查看 &lt;code&gt;large_log_file.log&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dmesg | less -N&lt;/code&gt;: 分页显示内核环形缓冲区消息并带行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;head&lt;/code&gt;&lt;/strong&gt; (输出文件的第一部分 Output the first part of files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示文件的开头部分，默认显示前10行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;head [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n 数字&lt;/code&gt; 或 &lt;code&gt;-数字&lt;/code&gt;: 指定显示的行数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c 字节数&lt;/code&gt;: 指定显示的字节数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head access.log&lt;/code&gt;: 显示 &lt;code&gt;access.log&lt;/code&gt; 的前10行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head -n 20 error.log&lt;/code&gt;: 显示 &lt;code&gt;error.log&lt;/code&gt; 的前20行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tail&lt;/code&gt;&lt;/strong&gt; (输出文件的最后一部分 Output the last part of files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示文件的末尾部分，默认显示最后10行。常用于监控实时更新的日志文件。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;tail [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n 数字&lt;/code&gt; 或 &lt;code&gt;-数字&lt;/code&gt;: 指定显示的行数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c 字节数&lt;/code&gt;: 指定显示的字节数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 持续显示文件末尾追加的内容，直到按 &lt;code&gt;Ctrl+C&lt;/code&gt; 终止。非常适用于实时日志监控。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n +数字&lt;/code&gt;: 从第几行开始显示到文件末尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tail messages.log&lt;/code&gt;: 显示 &lt;code&gt;messages.log&lt;/code&gt; 的最后10行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -n 50 system.log&lt;/code&gt;: 显示 &lt;code&gt;system.log&lt;/code&gt; 的最后50行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -f /var/log/syslog&lt;/code&gt;: 实时监控 &lt;code&gt;/var/log/syslog&lt;/code&gt; 文件的新增内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-2-文本搜索与模式匹配-Text-Searching-and-Pattern-Matching&#34;&gt;&lt;a href=&#34;#4-2-文本搜索与模式匹配-Text-Searching-and-Pattern-Matching&#34; class=&#34;headerlink&#34; title=&#34;4.2 文本搜索与模式匹配 (Text Searching and Pattern Matching)&#34;&gt;&lt;/a&gt;4.2 文本搜索与模式匹配 (Text Searching and Pattern Matching)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (打印匹配模式的行 Print lines matching a pattern)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 在文件中搜索包含指定模式（字符串或正则表达式）的行，并打印这些行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;grep [选项] 模式 [文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 忽略模式和输入数据的大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 反向匹配，打印不包含模式的行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt;: 递归搜索目录下的所有文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 显示匹配行的行号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 只打印匹配行的计数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 只打印包含匹配模式的文件名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: 整词匹配。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt;: 使用扩展正则表达式 (ERE)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A 数字&lt;/code&gt;: 打印匹配行及其后N行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B 数字&lt;/code&gt;: 打印匹配行及其前N行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C 数字&lt;/code&gt;: 打印匹配行及其前后各N行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e 模式&lt;/code&gt;: 指定多个搜索模式。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 只显示匹配模式的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep &#34;error&#34; application.log&lt;/code&gt;: 在 &lt;code&gt;application.log&lt;/code&gt; 中搜索包含 “error” 的行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -i &#34;warning&#34; /var/log/messages&lt;/code&gt;: 在 &lt;code&gt;/var/log/messages&lt;/code&gt; 中不区分大小写地搜索 “warning”。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -r &#34;config_value&#34; /etc/myapp/&lt;/code&gt;: 递归搜索 &lt;code&gt;/etc/myapp/&lt;/code&gt; 目录中包含 “config_value” 的文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ps aux | grep -v &#34;grep&#34;&lt;/code&gt;: 显示进程列表，但不显示 &lt;code&gt;grep&lt;/code&gt; 命令本身。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-3-文本编辑与转换-Text-Editing-and-Transformation&#34;&gt;&lt;a href=&#34;#4-3-文本编辑与转换-Text-Editing-and-Transformation&#34; class=&#34;headerlink&#34; title=&#34;4.3 文本编辑与转换 (Text Editing and Transformation)&#34;&gt;&lt;/a&gt;4.3 文本编辑与转换 (Text Editing and Transformation)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/strong&gt; (流编辑器，用于对输入流执行基本文本转换 Stream editor for performing basic text transformations on an input stream)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 一个强大的流编辑器，用于对文件或输入流进行非交互式的文本替换、删除、插入、转换等操作。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sed [选项] &#39;脚本&#39; [输入文件...]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i[后缀]&lt;/code&gt;: 直接修改文件内容 (如果提供后缀，则创建备份)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 禁止自动打印模式空间的内容，通常与 &lt;code&gt;p&lt;/code&gt; 命令配合使用。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e 脚本&lt;/code&gt;: 添加要执行的脚本。允许多个 &lt;code&gt;-e&lt;/code&gt; 来执行多个命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 脚本文件&lt;/code&gt;: 从脚本文件中读取 &lt;code&gt;sed&lt;/code&gt; 命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-E&lt;/code&gt;: 使用扩展正则表达式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用命令 (在脚本中):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;s/旧模式/新模式/[标志]&lt;/code&gt;: 替换 (substitute)。标志可以是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;: 全局替换行内所有匹配。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: 替换第N个匹配项。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt; 或 &lt;code&gt;i&lt;/code&gt;: 忽略大小写。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;d&lt;/code&gt;: 删除匹配的行。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;p&lt;/code&gt;: 打印模式空间的内容 (通常与 &lt;code&gt;-n&lt;/code&gt; 选项一起使用)。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;a\文本&lt;/code&gt;: 在匹配行之后追加文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;i\文本&lt;/code&gt;: 在匹配行之前插入文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;c\文本&lt;/code&gt;: 用文本替换匹配的行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;地址 (指定命令作用的行):&lt;/strong&gt; 可以是行号、正则表达式、或行号范围 (如 &lt;code&gt;1,5&lt;/code&gt; 表示第1到5行；&lt;code&gt;/pattern/&lt;/code&gt; 表示匹配模式的行)。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sed &#39;s/apple/orange/g&#39; fruit.txt&lt;/code&gt;: 将 &lt;code&gt;fruit.txt&lt;/code&gt; 中所有的 “apple” 替换为 “orange” 并输出到标准输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed -i &#39;s/old_domain.com/new_domain.com/g&#39; config.file&lt;/code&gt;: 直接修改 &lt;code&gt;config.file&lt;/code&gt;，将其中的 “old_domain.com” 全部替换为 “new_domain.com”。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed -n &#39;/error/p&#39; server.log&lt;/code&gt;: 只打印 &lt;code&gt;server.log&lt;/code&gt; 中包含 “error” 的行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed &#39;1,5d&#39; data.txt&lt;/code&gt;: 删除 &lt;code&gt;data.txt&lt;/code&gt; 文件的前5行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sed &#39;/^#/d&#39; config.conf&lt;/code&gt;: 删除 &lt;code&gt;config.conf&lt;/code&gt; 中所有以 &lt;code&gt;#&lt;/code&gt; 开头的注释行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;awk&lt;/code&gt;&lt;/strong&gt; (模式扫描和处理语言 Pattern scanning and processing language)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 一种强大的文本处理编程语言，非常适合处理结构化数据（如按列分隔的数据）、生成报告和执行复杂的文本操作。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;awk &#39;[选项] &#39;模式 {动作}&#39; [输入文件...]&#39;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;核心概念:&lt;ul&gt;
&lt;li&gt;记录 (Record): &lt;code&gt;awk&lt;/code&gt; 逐行处理输入，每行被视为一个记录，默认记录分隔符是换行符。&lt;/li&gt;
&lt;li&gt;字段 (Field): 每个记录被进一步分解为字段，默认字段分隔符是空格或制表符。字段可以用 &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,… &lt;code&gt;$NF&lt;/code&gt; (最后一个字段) 表示，&lt;code&gt;$0&lt;/code&gt; 表示整个记录。 &lt;/li&gt;
&lt;li&gt;模式 (Pattern): 在执行动作之前检查的条件。可以是正则表达式、比较表达式等。如果省略模式，则对每一行都执行动作。 &lt;/li&gt;
&lt;li&gt;动作 (Action): 由花括号 &lt;code&gt;{}&lt;/code&gt; 包围的一系列命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;BEGIN&lt;/code&gt; 块: 在处理任何输入行之前执行一次。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;END&lt;/code&gt; 块: 在处理完所有输入行之后执行一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-F 分隔符&lt;/code&gt;: 指定输入字段分隔符。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v 变量=值&lt;/code&gt;: 定义 &lt;code&gt;awk&lt;/code&gt; 脚本中可以使用的变量。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 程序文件&lt;/code&gt;: 从文件中读取 &lt;code&gt;awk&lt;/code&gt; 程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内置变量:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FS&lt;/code&gt;: 输入字段分隔符 (同 &lt;code&gt;-F&lt;/code&gt; 选项)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OFS&lt;/code&gt;: 输出字段分隔符 (默认为空格)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;RS&lt;/code&gt;: 输入记录分隔符 (默认为换行符)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ORS&lt;/code&gt;: 输出记录分隔符 (默认为换行符)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NR&lt;/code&gt;: 当前已处理的记录数（行号）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;NF&lt;/code&gt;: 当前记录中的字段数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awk&lt;/code&gt; 不仅仅是一个简单的文本过滤器，它实际上是一种编程语言，拥有变量、条件语句（如 &lt;code&gt;if&lt;/code&gt;）、循环（如 &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;）等编程结构 。这使其能够处理比 &lt;code&gt;grep&lt;/code&gt; 或 &lt;code&gt;sed&lt;/code&gt; 更复杂的文本处理任务，例如对数据进行计算、格式化输出复杂的报告等。&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;awk -F&#39;:&#39; &#39;{print $1, $3}&#39; /etc/passwd&lt;/code&gt;: 打印 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中以冒号分隔的第一和第三个字段（用户名和UID）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awk &#39;/error/ {count++; print &#34;Error on line &#34; NR &#34;: &#34; $0} END {print &#34;Total errors found: &#34; count}&#39; system.log&lt;/code&gt;: 搜索 &lt;code&gt;system.log&lt;/code&gt; 中包含 “error” 的行，打印行号和内容，并在最后打印错误总数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -l | awk &#39;{if ($5 &amp;gt; 1024) print $9, &#34;is larger than 1KB&#34;}&#39;&lt;/code&gt;: 列出当前目录中大于1KB的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/strong&gt; (转换或删除字符 Translate or delete characters)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于字符级别的转换（如大小写转换）或删除。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;tr [选项] SET1&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 删除 &lt;code&gt;SET1&lt;/code&gt; 中指定的所有字符。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 压缩 &lt;code&gt;SET1&lt;/code&gt; (或 &lt;code&gt;SET2&lt;/code&gt; 如果提供了 &lt;code&gt;SET2&lt;/code&gt;) 中连续重复的字符为一个。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 使用 &lt;code&gt;SET1&lt;/code&gt; 的补集。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字符集 (SET):&lt;/strong&gt; 可以是单个字符、字符范围 (如 &lt;code&gt;a-z&lt;/code&gt;, &lt;code&gt;0-9&lt;/code&gt;) 或特殊字符类 (如 &lt;code&gt;[:lower:]&lt;/code&gt;, &lt;code&gt;[:upper:]&lt;/code&gt;, &lt;code&gt;[:digit:]&lt;/code&gt;, &lt;code&gt;[:space:]&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo &#34;Hello World&#34; | tr &#39;A-Z&#39; &#39;a-z&#39;&lt;/code&gt;: 将标准输入中的大写字母转换为小写，输出 “hello world”。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat myfile.txt | tr -d &#39;\r&#39;&lt;/code&gt;: 删除 &lt;code&gt;myfile.txt&lt;/code&gt; 中的回车符 (Windows换行符转Unix换行符)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo &#34;This has too many spaces&#34; | tr -s &#39; &#39;&lt;/code&gt;: 将多个连续空格压缩为单个空格，输出 “This has too many spaces”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;cut&lt;/code&gt;&lt;/strong&gt; (从每行中删除文本区域 Remove sections from each line of files)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从文件的每一行中提取（剪切）指定的列或字符。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;cut [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d 分隔符&lt;/code&gt;: 指定字段分隔符 (默认是制表符 TAB)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 字段列表&lt;/code&gt;: 指定要提取的字段编号，可以用逗号分隔多个字段 (如 &lt;code&gt;1,3&lt;/code&gt;) 或用连字符表示范围 (如 &lt;code&gt;2-5&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c 字符列表&lt;/code&gt;: 指定要提取的字符位置，格式同 &lt;code&gt;-f&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b 字节列表&lt;/code&gt;: 指定要提取的字节位置，格式同 &lt;code&gt;-f&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--complement&lt;/code&gt;: 提取指定字段/字符/字节之外的部分。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--output-delimiter=字符串&lt;/code&gt;: 指定输出字段的分隔符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cut -d&#39;:&#39; -f1,7 /etc/passwd&lt;/code&gt;: 提取 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件中以冒号分隔的第一和第七个字段（用户名和shell）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;date | cut -c12-19&lt;/code&gt;: 显示当前时间的 时:分:秒 部分。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who | cut -c1-8&lt;/code&gt;: 提取 &lt;code&gt;who&lt;/code&gt; 命令输出中每行的前8个字符（通常是用户名）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-4-文本比较与统计-Text-Comparison-and-Statistics&#34;&gt;&lt;a href=&#34;#4-4-文本比较与统计-Text-Comparison-and-Statistics&#34; class=&#34;headerlink&#34; title=&#34;4.4 文本比较与统计 (Text Comparison and Statistics)&#34;&gt;&lt;/a&gt;4.4 文本比较与统计 (Text Comparison and Statistics)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/strong&gt; (对文本文件的行进行排序 Sort lines of text files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 对文件内容按行进行排序，支持多种排序规则。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sort [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 反向排序（降序）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 按数值大小进行排序。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k 字段号[,结束字段号][选项]&lt;/code&gt;: 按指定的字段进行排序。字段号从1开始。可以附加排序选项，如 &lt;code&gt;n&lt;/code&gt; (数值), &lt;code&gt;r&lt;/code&gt; (反向)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t 分隔符&lt;/code&gt;: 指定字段分隔符。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 输出唯一的行（去除重复行，等同于 &lt;code&gt;sort file | uniq&lt;/code&gt;）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 忽略大小写进行排序。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-M&lt;/code&gt;: 按月份名称排序 (Jan, Feb,…)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;: 人类可读数字排序 (例如 2K, 1G)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 输出文件&lt;/code&gt;: 将排序结果写入指定文件，而不是标准输出。可以用于原地排序，例如 &lt;code&gt;sort -o file.txt file.txt&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sort names.txt&lt;/code&gt;: 按字母顺序对 &lt;code&gt;names.txt&lt;/code&gt; 的行进行排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort -rn data.log | head -n 5&lt;/code&gt;: 对 &lt;code&gt;data.log&lt;/code&gt; 中的数字进行反向（从大到小）排序，并显示前5行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort -t&#39;:&#39; -k3n /etc/passwd&lt;/code&gt;: 以冒号为分隔符，按第三个字段（UID）的数值大小对 &lt;code&gt;/etc/passwd&lt;/code&gt; 文件进行排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;uniq&lt;/code&gt;&lt;/strong&gt; (报告或省略重复行 Report or omit repeated lines)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从已排序的输入中删除或报告重复的相邻行。因此，&lt;code&gt;uniq&lt;/code&gt; 通常与 &lt;code&gt;sort&lt;/code&gt; 命令配合使用。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;uniq [选项][输入文件 [输出文件]]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 在每行前输出该行重复出现的次数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 仅显示重复出现的行（每组重复行只显示一次）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt;: 显示所有重复的行（而不是每组只显示一次）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 仅显示不重复的行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 比较时忽略大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f N&lt;/code&gt; 或 &lt;code&gt;--skip-fields=N&lt;/code&gt;: 跳过比较每行的前N个字段。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s N&lt;/code&gt; 或 &lt;code&gt;--skip-chars=N&lt;/code&gt;: 跳过比较每行的前N个字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sort access.log | uniq -c&lt;/code&gt;: 统计 &lt;code&gt;access.log&lt;/code&gt; 中每种唯一请求的次数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sort data.txt | uniq -d&lt;/code&gt;: 显示 &lt;code&gt;data.txt&lt;/code&gt; 中所有重复的行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;wc&lt;/code&gt;&lt;/strong&gt; (打印换行符、字和字节计数 Print newline, word, and byte counts for each file)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 统计指定文件或标准输入的行数、单词数、字符数或字节数。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;wc [选项][文件...]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 只统计行数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: 只统计单词数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 只统计字节数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 只统计字符数 (考虑多字节字符)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: 打印最长行的长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wc report.txt&lt;/code&gt;: 显示 &lt;code&gt;report.txt&lt;/code&gt; 的行数、单词数和字节数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -1 | wc -l&lt;/code&gt;: 统计当前目录下的文件和目录数量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep &#34;error&#34; logfile | wc -l&lt;/code&gt;: 统计 &lt;code&gt;logfile&lt;/code&gt; 中包含 “error” 的行数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;diff&lt;/code&gt;&lt;/strong&gt; (逐行比较文件 Compare files line by line)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 比较两个文件的内容，并显示它们之间的差异。常用于比较代码文件、配置文件等。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;diff [选项] 文件1 文件2&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;-U 数字&lt;/code&gt;: 以统一格式 (unified format) 输出差异，通常更易读，并被 &lt;code&gt;patch&lt;/code&gt; 命令使用。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 以上下文格式 (context format) 输出差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 比较时忽略大小写。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: 忽略所有空格导致的差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B&lt;/code&gt;: 忽略因空行导致的差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归比较目录。如果比较的是目录，&lt;code&gt;diff&lt;/code&gt; 会比较两个目录中同名的文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--brief&lt;/code&gt;: 仅报告文件是否不同，不显示具体差异。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 当文件相同时报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输出格式解释:&lt;ul&gt;
&lt;li&gt;默认格式：&lt;code&gt;&amp;lt;&lt;/code&gt; 表示第一个文件中的行，&lt;code&gt;&amp;gt;&lt;/code&gt; 表示第二个文件中的行，行号和操作符（&lt;code&gt;a&lt;/code&gt; 添加, &lt;code&gt;d&lt;/code&gt; 删除, &lt;code&gt;c&lt;/code&gt; 更改）指示如何从文件1转换到文件2。 &lt;/li&gt;
&lt;li&gt;统一格式 (&lt;code&gt;-u&lt;/code&gt;): 以 &lt;code&gt;--- file1&lt;/code&gt; 和 &lt;code&gt;+++ file2&lt;/code&gt; 开头，差异部分用 &lt;code&gt;-&lt;/code&gt; (来自文件1) 和 &lt;code&gt;+&lt;/code&gt; (来自文件2) 标记。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;diff config_v1.conf config_v2.conf&lt;/code&gt;: 比较两个配置文件的差异。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diff -u old_script.sh new_script.sh &amp;gt; script.patch&lt;/code&gt;: 以统一格式生成补丁文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;diff -r project_v1/ project_v2/&lt;/code&gt;: 递归比较两个项目目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;五、用户、用户组与权限管理-User-Group-and-Permission-Management&#34;&gt;&lt;a href=&#34;#五、用户、用户组与权限管理-User-Group-and-Permission-Management&#34; class=&#34;headerlink&#34; title=&#34;五、用户、用户组与权限管理 (User, Group, and Permission Management)&#34;&gt;&lt;/a&gt;五、用户、用户组与权限管理 (User, Group, and Permission Management)&lt;/h2&gt;&lt;p&gt;管理用户账户、用户组以及文件和目录的访问权限是 Linux 系统安全与管理的核心。&lt;/p&gt;
&lt;h3 id=&#34;5-1-用户信息查看-Viewing-User-Information&#34;&gt;&lt;a href=&#34;#5-1-用户信息查看-Viewing-User-Information&#34; class=&#34;headerlink&#34; title=&#34;5.1 用户信息查看 (Viewing User Information)&#34;&gt;&lt;/a&gt;5.1 用户信息查看 (Viewing User Information)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;who&lt;/code&gt;&lt;/strong&gt; (显示当前已登录的用户 Show who is logged on)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示当前登录到系统的用户信息，包括用户名、终端、登录时间、来源IP等。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;who [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; 或 &lt;code&gt;--all&lt;/code&gt;: 显示所有信息，包括空闲时间、进程ID等。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; 或 &lt;code&gt;--boot&lt;/code&gt;: 显示上次系统启动时间。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H&lt;/code&gt; 或 &lt;code&gt;--heading&lt;/code&gt;: 显示列标题。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 或 &lt;code&gt;--users&lt;/code&gt;: 列出已登录用户，并显示空闲时间和PID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; 或 &lt;code&gt;--count&lt;/code&gt;: 只显示登录用户名和数量。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;am i&lt;/code&gt; (或 &lt;code&gt;am I&lt;/code&gt;): 显示运行 &lt;code&gt;who&lt;/code&gt; 命令的当前用户信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;who&lt;/code&gt;: 显示当前登录用户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who -H&lt;/code&gt;: 显示当前登录用户并带列标题。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who am i&lt;/code&gt;: 显示当前终端会话的用户信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;id&lt;/code&gt;&lt;/strong&gt; (打印真实和有效的用户和组ID Print real and effective user and group IDs)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示指定用户（默认为当前用户）的UID（用户ID）、GID（组ID）以及所属的用户组信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;id [选项][用户名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 只显示有效用户ID (UID)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;: 只显示有效组ID (GID)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G&lt;/code&gt;: 显示所有组ID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 与 &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-G&lt;/code&gt; 配合使用，显示名称而非数字ID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 与 &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-G&lt;/code&gt; 配合使用，显示真实ID而非有效ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;: 显示当前用户的ID信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id john&lt;/code&gt;: 显示用户 &lt;code&gt;john&lt;/code&gt; 的ID信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id -Gn jane&lt;/code&gt;: 显示用户 &lt;code&gt;jane&lt;/code&gt; 所属的所有组的名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-2-用户切换与提权-Switching-Users-and-Elevating-Privileges&#34;&gt;&lt;a href=&#34;#5-2-用户切换与提权-Switching-Users-and-Elevating-Privileges&#34; class=&#34;headerlink&#34; title=&#34;5.2 用户切换与提权 (Switching Users and Elevating Privileges)&#34;&gt;&lt;/a&gt;5.2 用户切换与提权 (Switching Users and Elevating Privileges)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;su&lt;/code&gt;&lt;/strong&gt; (切换用户或成为超级用户 Switch user or become superuser)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 允许用户在当前终端会话中切换到另一个用户账户，如果未指定用户名，则默认切换到超级用户 (root)。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;su [选项][用户名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;-l&lt;/code&gt; 或 &lt;code&gt;--login&lt;/code&gt;: 模拟一次完整的登录过程，加载目标用户的环境变量、主目录和shell配置。这是推荐的切换用户方式，以避免环境混乱。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c &#34;命令&#34;&lt;/code&gt;: 以目标用户身份执行单个命令后退出。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s shell路径&lt;/code&gt;: 指定切换后使用的shell。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; 或 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--preserve-environment&lt;/code&gt;: 保留当前用户的环境变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;su - john&lt;/code&gt;: 切换到用户 &lt;code&gt;john&lt;/code&gt;，并加载其完整的登录环境。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;su -&lt;/code&gt;: 切换到 &lt;code&gt;root&lt;/code&gt; 用户，并加载其完整的登录环境 (需要输入root密码)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;su -c &#34;ls /root&#34; someuser&lt;/code&gt;: 以 &lt;code&gt;someuser&lt;/code&gt; 的身份执行 &lt;code&gt;ls /root&lt;/code&gt; 命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sudo&lt;/code&gt;&lt;/strong&gt; (以其他用户身份执行命令，通常是root Execute a command as another user, typically root)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 允许授权用户以超级用户 (root) 或其他指定用户的身份执行命令，而无需知道目标用户的密码（通常需要输入当前用户的密码进行验证）。这是比直接使用 &lt;code&gt;root&lt;/code&gt; 账户更安全的权限提升方式。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo [选项] 命令&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u 用户名&lt;/code&gt;: 以指定用户的身份执行命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 模拟一次 &lt;code&gt;root&lt;/code&gt; 用户的登录shell，加载 &lt;code&gt;root&lt;/code&gt; 的环境。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 执行由 &lt;code&gt;SHELL&lt;/code&gt; 环境变量指定的shell，通常是 &lt;code&gt;root&lt;/code&gt; 的shell。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 列出当前用户可以通过 &lt;code&gt;sudo&lt;/code&gt; 执行的命令以及禁止执行的命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 延长 &lt;code&gt;sudo&lt;/code&gt; 的密码凭证时效，而不执行命令。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 使当前的 &lt;code&gt;sudo&lt;/code&gt; 密码凭证失效，下次使用 &lt;code&gt;sudo&lt;/code&gt; 时需要重新输入密码。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 在后台运行命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置文件:&lt;/strong&gt; &lt;code&gt;sudo&lt;/code&gt; 的权限配置存储在 &lt;code&gt;/etc/sudoers&lt;/code&gt; 文件中，应使用 &lt;code&gt;visudo&lt;/code&gt; 命令进行编辑，以确保语法正确并防止配置错误导致系统无法使用 &lt;code&gt;sudo&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt update&lt;/code&gt;: 以 &lt;code&gt;root&lt;/code&gt; 权限更新软件包列表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo -u www-data crontab -l&lt;/code&gt;: 以 &lt;code&gt;www-data&lt;/code&gt; 用户身份列出其 &lt;code&gt;cron&lt;/code&gt; 作业。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo -i&lt;/code&gt;: 切换到 &lt;code&gt;root&lt;/code&gt; 用户的交互式shell。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-3-用户账户管理-User-Account-Management&#34;&gt;&lt;a href=&#34;#5-3-用户账户管理-User-Account-Management&#34; class=&#34;headerlink&#34; title=&#34;5.3 用户账户管理 (User Account Management)&#34;&gt;&lt;/a&gt;5.3 用户账户管理 (User Account Management)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;useradd&lt;/code&gt;&lt;/strong&gt; (创建新用户 Create a new user or update default new user information)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于在Linux系统中添加新的用户账户。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;useradd [选项] 用户名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 创建用户的主目录（如果不存在）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 家目录路径&lt;/code&gt;: 指定用户的主目录路径。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s shell路径&lt;/code&gt;: 指定用户的默认登录shell (例如 &lt;code&gt;/bin/bash&lt;/code&gt;, &lt;code&gt;/sbin/nologin&lt;/code&gt;)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g 初始组名或GID&lt;/code&gt;: 指定用户的主组。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G 附加组列表&lt;/code&gt;: 指定用户所属的附加组（逗号分隔）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c &#34;注释&#34;&lt;/code&gt;: 为用户账户添加注释信息（例如全名）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e YYYY-MM-DD&lt;/code&gt;: 设置账户的过期日期。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; &lt;code&gt;useradd&lt;/code&gt; 是一个底层工具，而 &lt;code&gt;adduser&lt;/code&gt; 是一个更用户友好的脚本，通常在Debian/Ubuntu系统中使用，它会进行更多交互式设置。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo useradd -m -s /bin/bash -c &#34;John Doe&#34; johnd&lt;/code&gt;: 创建一个名为 &lt;code&gt;johnd&lt;/code&gt; 的用户，创建其主目录，设置shell为bash，并添加注释。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo useradd -m -G developers,testers jane&lt;/code&gt;: 创建用户 &lt;code&gt;jane&lt;/code&gt;，创建其主目录，并将其加入 &lt;code&gt;developers&lt;/code&gt; 和 &lt;code&gt;testers&lt;/code&gt; 组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;userdel&lt;/code&gt;&lt;/strong&gt; (删除用户账户 Delete a user account and related files)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于从系统中删除用户账户。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;userdel [选项] 用户名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 删除用户的主目录及其中的文件，以及用户的邮件池。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: 强制删除用户账户，即使该用户当前已登录或其文件仍被使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo userdel olduser&lt;/code&gt;: 删除用户 &lt;code&gt;olduser&lt;/code&gt; (不删除其主目录)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo userdel -r former_employee&lt;/code&gt;: 删除用户 &lt;code&gt;former_employee&lt;/code&gt; 并移除其主目录和邮件池。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;usermod&lt;/code&gt;&lt;/strong&gt; (修改用户账户 Modify a user account)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于修改现有用户账户的各种属性。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;usermod [选项] 用户名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l 新登录名&lt;/code&gt;: 更改用户的登录名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 新家目录路径 [-m]&lt;/code&gt;: 更改用户的主目录。&lt;code&gt;-m&lt;/code&gt; 选项会将旧主目录的内容移动到新主目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 新shell路径&lt;/code&gt;: 更改用户的默认登录shell。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g 新主组名或GID&lt;/code&gt;: 更改用户的主组。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G 新附加组列表&lt;/code&gt;: 更改用户所属的附加组列表（会覆盖原有的附加组）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-aG 附加组&lt;/code&gt;: 将用户追加到指定的附加组，而不影响其他已有的附加组 ( &lt;code&gt;-a&lt;/code&gt; 必须与 &lt;code&gt;-G&lt;/code&gt; 一起使用)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: 锁定用户账户，使其无法登录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-U&lt;/code&gt;: 解锁用户账户。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e YYYY-MM-DD&lt;/code&gt;: 设置账户的过期日期。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c &#34;新注释&#34;&lt;/code&gt;: 修改用户的注释信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo usermod -s /usr/sbin/nologin restricted_user&lt;/code&gt;: 将用户 &lt;code&gt;restricted_user&lt;/code&gt; 的shell设置为 &lt;code&gt;/usr/sbin/nologin&lt;/code&gt;，使其无法登录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo usermod -aG docker current_user&lt;/code&gt;: 将用户 &lt;code&gt;current_user&lt;/code&gt; 添加到 &lt;code&gt;docker&lt;/code&gt; 组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo usermod -L problematic_user&lt;/code&gt;: 锁定用户 &lt;code&gt;problematic_user&lt;/code&gt; 的账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;passwd&lt;/code&gt;&lt;/strong&gt; (更改用户密码 Change user password)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于设置或更改用户账户的密码。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;passwd [选项][用户名]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;行为:&lt;ul&gt;
&lt;li&gt;如果未指定用户名，则更改当前用户的密码 (需要输入当前密码)。 &lt;/li&gt;
&lt;li&gt;如果由 &lt;code&gt;root&lt;/code&gt; 用户执行并指定了用户名，则可以直接更改该用户的密码，无需知道其旧密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 删除指定用户的密码，使其可以无密码登录 (非常不安全，慎用)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 锁定指定用户的密码，使其无法通过密码登录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 解锁指定用户的密码。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--expire&lt;/code&gt;: 强制用户在下次登录时更改密码。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 显示密码状态信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n 天数&lt;/code&gt;: 设置密码最短有效天数。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x 天数&lt;/code&gt;: 设置密码最长有效天数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 天数&lt;/code&gt;: 设置密码过期前多少天开始警告。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 天数&lt;/code&gt;: 密码过期后账户停用前的天数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;passwd&lt;/code&gt;: 更改当前用户的密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo passwd john&lt;/code&gt;: 更改用户 &lt;code&gt;john&lt;/code&gt; 的密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo passwd -l jane&lt;/code&gt;: 锁定用户 &lt;code&gt;jane&lt;/code&gt; 的密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-4-用户组管理-Group-Management&#34;&gt;&lt;a href=&#34;#5-4-用户组管理-Group-Management&#34; class=&#34;headerlink&#34; title=&#34;5.4 用户组管理 (Group Management)&#34;&gt;&lt;/a&gt;5.4 用户组管理 (Group Management)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groupadd&lt;/code&gt;&lt;/strong&gt; (创建新用户组 Create a new group)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于在系统中创建一个新的用户组。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groupadd [选项] 组名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-g GID&lt;/code&gt;: 指定新用户组的GID (组ID)。如果省略，系统会自动分配一个。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 创建一个系统组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo groupadd developers&lt;/code&gt;: 创建一个名为 &lt;code&gt;developers&lt;/code&gt; 的用户组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groupdel&lt;/code&gt;&lt;/strong&gt; (删除用户组 Delete a group)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于从系统中删除一个已存在的用户组。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groupdel [选项] 组名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--force&lt;/code&gt;: 强制删除组，即使该组是某个用户的主组（通常不推荐这样做，除非明确知道后果）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; 不能删除作为任何用户主组的组，除非先更改该用户的主组。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo groupdel old_project_team&lt;/code&gt;: 删除名为 &lt;code&gt;old_project_team&lt;/code&gt; 的用户组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groupmod&lt;/code&gt;&lt;/strong&gt; (修改用户组 Modify a group definition on the system)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于修改现有用户组的属性，如组名或GID。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groupmod [选项] 组名&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n 新组名&lt;/code&gt;: 更改用户组的名称。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g 新GID&lt;/code&gt;: 更改用户组的GID。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 与 &lt;code&gt;-g&lt;/code&gt; 配合使用，允许GID不唯一（通常不推荐）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo groupmod -n web_developers developers&lt;/code&gt;: 将用户组 &lt;code&gt;developers&lt;/code&gt; 重命名为 &lt;code&gt;web_developers&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo groupmod -g 1005 new_team&lt;/code&gt;: 将用户组 &lt;code&gt;new_team&lt;/code&gt; 的GID修改为1005。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;groups&lt;/code&gt;&lt;/strong&gt; (打印用户所属的组 Print the groups a user is in)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示指定用户（默认为当前用户）所属的所有组的列表。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;groups [用户名]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;groups&lt;/code&gt;: 显示当前用户所属的组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;groups john&lt;/code&gt;: 显示用户 &lt;code&gt;john&lt;/code&gt; 所属的组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-5-文件权限与归属管理-File-Permission-and-Ownership-Management&#34;&gt;&lt;a href=&#34;#5-5-文件权限与归属管理-File-Permission-and-Ownership-Management&#34; class=&#34;headerlink&#34; title=&#34;5.5 文件权限与归属管理 (File Permission and Ownership Management)&#34;&gt;&lt;/a&gt;5.5 文件权限与归属管理 (File Permission and Ownership Management)&lt;/h3&gt;&lt;p&gt;Linux 文件权限基于“用户-组-其他” (UGO) 模型，对每个文件或目录定义了读(r)、写(w)、执行(x)三种基本权限。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (更改文件模式位/权限 Change file mode bits)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 修改文件或目录的访问权限。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;chmod [选项] 模式 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;模式 (Mode):&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;符号模式 (Symbolic Mode):&lt;/strong&gt; 使用 &lt;code&gt;u&lt;/code&gt; (所有者/用户), &lt;code&gt;g&lt;/code&gt; (组), &lt;code&gt;o&lt;/code&gt; (其他), &lt;code&gt;a&lt;/code&gt; (所有) 结合 &lt;code&gt;+&lt;/code&gt; (添加权限), &lt;code&gt;-&lt;/code&gt; (移除权限), &lt;code&gt;=&lt;/code&gt; (设置精确权限) 以及 &lt;code&gt;r&lt;/code&gt; (读), &lt;code&gt;w&lt;/code&gt; (写), &lt;code&gt;x&lt;/code&gt; (执行)。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字模式 (Octal Mode):&lt;/strong&gt; 使用三位八进制数表示权限，每位分别对应所有者、组和其他人。每位数字是r(4), w(2), x(1)权限值的和。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归地修改目录及其内容的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表格5.1: &lt;code&gt;chmod&lt;/code&gt; 数字模式权限含义&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;数字&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;r (读)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;w (写)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;x (执行)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;无权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;写入权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;写入和执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;读取权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;读取和执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;读取和写入权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;读取、写入和执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;**示例:**
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+x script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 为文件 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 的所有者添加执行权限。 
 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt; private_key.pem&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 设置 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;private_key.pem&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 文件的权限为所有者可读写，组和其他人无任何权限 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rw-------&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;。
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; public_script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 设置 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;public_script.sh&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 权限为所有者可读写执行，组和其他人可读可执行 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rwxr-xr-x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;。 
&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;750&lt;/span&gt; /var/www/my_app&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;:&lt;/span&gt; 递归地设置 &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;/var/www/my_app&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; 目录及其内容的权限为所有者读写执行，所属组读执行，其他人无权限。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;chown&lt;/code&gt;&lt;/strong&gt; (更改文件所有者和组 Change file owner and group)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 更改文件或目录的用户所有者和/或组所有者。通常需要超级用户权限。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;chown [选项][新所有者][:新组] 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归地更改目录及其内容的所有权。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo chown john myfile.txt&lt;/code&gt;: 将 &lt;code&gt;myfile.txt&lt;/code&gt; 的所有者更改为用户 &lt;code&gt;john&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chown jane:developers report.doc&lt;/code&gt;: 将 &lt;code&gt;report.doc&lt;/code&gt; 的所有者更改为 &lt;code&gt;jane&lt;/code&gt;，所属组更改为 &lt;code&gt;developers&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chown -R www-data:www-data /var/www/html&lt;/code&gt;: 递归地将 &lt;code&gt;/var/www/html&lt;/code&gt; 目录及其所有内容的所有者和所属组更改为 &lt;code&gt;www-data&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;chgrp&lt;/code&gt;&lt;/strong&gt; (更改文件组所有权 Change file group ownership)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 单独更改文件或目录的组所有者。通常需要超级用户权限。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;chgrp [选项] 新组 文件/目录...&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;: 递归地更改目录及其内容的组所有权。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo chgrp editors draft.txt&lt;/code&gt;: 将 &lt;code&gt;draft.txt&lt;/code&gt; 的所属组更改为 &lt;code&gt;editors&lt;/code&gt;。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo chgrp -R web_content /srv/my_website/assets&lt;/code&gt;: 递归地将 &lt;code&gt;/srv/my_website/assets&lt;/code&gt; 目录及其所有内容的所属组更改为 &lt;code&gt;web_content&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;六、网络命令-Networking-Commands&#34;&gt;&lt;a href=&#34;#六、网络命令-Networking-Commands&#34; class=&#34;headerlink&#34; title=&#34;六、网络命令 (Networking Commands)&#34;&gt;&lt;/a&gt;六、网络命令 (Networking Commands)&lt;/h2&gt;&lt;p&gt;Linux 提供了丰富的网络命令，用于测试连接、配置接口、查看状态、进行远程操作和DNS查询。&lt;/p&gt;
&lt;h3 id=&#34;6-1-网络连接测试-Network-Connectivity-Testing&#34;&gt;&lt;a href=&#34;#6-1-网络连接测试-Network-Connectivity-Testing&#34; class=&#34;headerlink&#34; title=&#34;6.1 网络连接测试 (Network Connectivity Testing)&#34;&gt;&lt;/a&gt;6.1 网络连接测试 (Network Connectivity Testing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ping&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (向网络主机发送ICMP ECHO_REQUEST数据包 Send ICMP ECHO_REQUEST to network hosts)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 测试与目标主机之间的网络连通性，通过发送ICMP回显请求并等待回显应答。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ping [选项] 主机名或IP地址&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c 次数&lt;/code&gt;: 发送指定数量的回显请求包后停止。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 间隔&lt;/code&gt;: 设置发送每个包之间的间隔秒数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 包大小&lt;/code&gt;: 设置发送包的大小（字节）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-W 超时&lt;/code&gt;: 设置等待响应的超时时间（秒）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ping google.com&lt;/code&gt;: 持续向 &lt;code&gt;google.com&lt;/code&gt; 发送ping包，直到手动停止 (&lt;code&gt;Ctrl+C&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ping -c 5 192.168.1.1&lt;/code&gt;: 向 IP 地址 &lt;code&gt;192.168.1.1&lt;/code&gt; 发送5个ping包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-2-网络接口配置与查看-Network-Interface-Configuration-and-Viewing&#34;&gt;&lt;a href=&#34;#6-2-网络接口配置与查看-Network-Interface-Configuration-and-Viewing&#34; class=&#34;headerlink&#34; title=&#34;6.2 网络接口配置与查看 (Network Interface Configuration and Viewing)&#34;&gt;&lt;/a&gt;6.2 网络接口配置与查看 (Network Interface Configuration and Viewing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/strong&gt; (显示/操作路由、网络设备、接口和隧道 Show / manipulate routing, network devices, interfaces and tunnels)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 这是Linux系统中用于网络配置的核心工具，功能强大，已取代旧的 &lt;code&gt;ifconfig&lt;/code&gt; 和 &lt;code&gt;route&lt;/code&gt; 等命令。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子命令:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;addr&lt;/code&gt;(或 a): 管理网络接口的IP地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ip addr show [dev 接口名]&lt;/code&gt;: 显示指定接口（或所有接口）的IP地址信息。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ip addr add IP地址/掩码 dev 接口名&lt;/code&gt;: 为接口添加IP地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip addr del IP地址/掩码 dev 接口名&lt;/code&gt;: 从接口删除IP地址。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;link&lt;/code&gt;(或 l): 管理网络设备（接口）本身。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip link show [dev 接口名]&lt;/code&gt;: 显示接口的状态和属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip link set 接口名 up/down&lt;/code&gt;: 启用或禁用指定的网络接口。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip link set 接口名 mtu 数值&lt;/code&gt;: 设置接口的最大传输单元 (MTU)。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;route&lt;/code&gt;(或 r): 管理路由表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip route show&lt;/code&gt; 或 &lt;code&gt;ip route list&lt;/code&gt;: 显示内核路由表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ip route add 目标网络/掩码 via 网关地址 [dev 接口名]&lt;/code&gt;: 添加一条静态路由。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ip route del 目标网络/掩码&lt;/code&gt;: 删除一条路由。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;neigh&lt;/code&gt;(或 n): 管理ARP或NDP缓存（邻居表）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip neigh show&lt;/code&gt;: 显示邻居表。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ip&lt;/code&gt; 命令是 &lt;code&gt;ifconfig&lt;/code&gt; 的现代替代品，功能更强大，语法更一致。&lt;code&gt;ifconfig&lt;/code&gt; 在许多新发行版中已不再默认安装。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip addr show eth0&lt;/code&gt;: 显示 &lt;code&gt;eth0&lt;/code&gt; 接口的IP地址信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ip link set wlan0 down&lt;/code&gt;: 禁用 &lt;code&gt;wlan0&lt;/code&gt; 无线接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip route add default via 192.168.1.254 dev eth0&lt;/code&gt;: 添加默认网关。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/strong&gt; (配置网络接口 - 旧版 Configure a network interface - deprecated)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 在较旧的Linux系统中用于配置和显示网络接口信息。 &lt;/li&gt;
&lt;li&gt;内容:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt;: 显示所有活动接口的信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifconfig 接口名&lt;/code&gt;: 显示指定接口的信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ifconfig 接口名 IP地址 netmask 子网掩码 up&lt;/code&gt;: 配置接口IP并启用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; 此命令已逐渐被 &lt;code&gt;ip&lt;/code&gt; 命令取代，在新系统中可能未预装。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;ifconfig eth0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-3-网络状态与套接字查看-Network-Status-and-Socket-Viewing&#34;&gt;&lt;a href=&#34;#6-3-网络状态与套接字查看-Network-Status-and-Socket-Viewing&#34; class=&#34;headerlink&#34; title=&#34;6.3 网络状态与套接字查看 (Network Status and Socket Viewing)&#34;&gt;&lt;/a&gt;6.3 网络状态与套接字查看 (Network Status and Socket Viewing)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ss&lt;/code&gt;&lt;/strong&gt; (另一个调查套接字的实用程序 Another utility to investigate sockets)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于显示活动的套接字连接信息，是 &lt;code&gt;netstat&lt;/code&gt; 的现代替代品，通常更快且提供更多信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ss [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;: 显示Unix域套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听状态的套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示使用套接字的进程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不解析服务名称，直接显示数字地址和端口号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有状态的套接字（监听和非监听）。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 显示详细的套接字信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 显示计时器信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示套接字摘要统计。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;state 状态&lt;/code&gt;: 过滤特定状态的连接 (如 &lt;code&gt;established&lt;/code&gt;, &lt;code&gt;listen&lt;/code&gt;, &lt;code&gt;time-wait&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss&lt;/code&gt; 命令比 &lt;code&gt;netstat&lt;/code&gt; 更快、提供更多信息，并且是 &lt;code&gt;netstat&lt;/code&gt; 的推荐替代品。 &lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ss -tulnp&lt;/code&gt;: 显示所有TCP和UDP的监听端口及其对应的进程，并以数字形式显示地址和端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tan state established&lt;/code&gt;: 显示所有已建立的TCP连接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tlp sport = :22&lt;/code&gt;: 显示监听在SSH端口（22）的TCP连接及进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;netstat&lt;/code&gt;&lt;/strong&gt; (打印网络连接、路由表、接口统计等 - 旧版 Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships - deprecated)&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示网络连接、路由表、接口统计等信息。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;netstat [选项]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP连接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP连接。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听套接字。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示与套接字关联的进程ID和名称。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 以数字形式显示地址和端口号。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有活动的连接和监听端口。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示内核路由表。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 显示网络接口统计信息。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: 显示各协议的统计摘要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意:&lt;/strong&gt; &lt;code&gt;netstat&lt;/code&gt; 已被 &lt;code&gt;ss&lt;/code&gt; 命令取代，在新系统中可能未预装或不被推荐使用。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo netstat -tulnp&lt;/code&gt;: 显示所有TCP和UDP的监听端口、对应的进程，并以数字形式显示地址和端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-4-远程连接与文件传输-Remote-Connection-and-File-Transfer&#34;&gt;&lt;a href=&#34;#6-4-远程连接与文件传输-Remote-Connection-and-File-Transfer&#34; class=&#34;headerlink&#34; title=&#34;6.4 远程连接与文件传输 (Remote Connection and File Transfer)&#34;&gt;&lt;/a&gt;6.4 远程连接与文件传输 (Remote Connection and File Transfer)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ssh&lt;/code&gt;&lt;/strong&gt; (安全Shell客户端 OpenSSH SSH client (remote login program))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; Secure Shell，用于安全地远程登录到另一台Linux/Unix服务器，并执行命令。所有通信都会被加密。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ssh [选项] 用户名@主机名或IP地址 [命令]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p 端口号&lt;/code&gt;: 指定连接的远程SSH服务器端口 (默认为22)。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 身份文件路径&lt;/code&gt;: 指定用于公钥认证的私钥文件路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt;: 启用X11转发，允许在本地显示远程GUI应用的界面。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L 本地端口:目标主机:目标端口&lt;/code&gt;: 设置本地端口转发。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R 远程端口:目标主机:目标端口&lt;/code&gt;: 设置远程端口转发。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C&lt;/code&gt;: 启用压缩，可以加快慢速网络下的传输速度。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 详细模式，显示连接过程的调试信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh user@example.com&lt;/code&gt;: 以用户 &lt;code&gt;user&lt;/code&gt; 的身份登录到 &lt;code&gt;example.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -p 2222 admin@192.168.1.100 &#34;df -h&#34;&lt;/code&gt;: 通过2222端口以 &lt;code&gt;admin&lt;/code&gt; 用户身份连接到 &lt;code&gt;192.168.1.100&lt;/code&gt; 并执行 &lt;code&gt;df -h&lt;/code&gt; 命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -L 8080:localhost:80 user@remote_server&lt;/code&gt;: 将本地的8080端口转发到远程服务器的80端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;scp&lt;/code&gt;&lt;/strong&gt; (安全复制文件 Secure copy (remote file copy program))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; Secure Copy Protocol，用于在本地主机和远程主机之间，或者两台远程主机之间安全地复制文件和目录。它使用SSH进行数据传输和认证。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;scp [选项][[用户名@]源主机:]源文件路径 [[用户名@]目标主机:]目标文件路径&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-P 端口号&lt;/code&gt; (注意是大写P): 指定远程主机的SSH端口。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归复制整个目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 身份文件路径&lt;/code&gt;: 指定用于认证的私钥文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C&lt;/code&gt;: 启用压缩。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细的传输过程。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l 带宽限制&lt;/code&gt;: 限制传输带宽 (Kbit/s)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scp local_document.pdf user@remote.server.com:/home/user/documents/&lt;/code&gt;: 将本地文件 &lt;code&gt;local_document.pdf&lt;/code&gt; 复制到远程服务器的指定目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;scp -r user@source.server.com:/var/www/html/ /backup/website/&lt;/code&gt;: 将远程服务器上的 &lt;code&gt;html&lt;/code&gt; 目录递归复制到本地的 &lt;code&gt;/backup/website/&lt;/code&gt; 目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scp -P 2200 file.zip user@another.host:~/backups/&lt;/code&gt;: 通过2200端口将 &lt;code&gt;file.zip&lt;/code&gt; 复制到另一台远程主机的 &lt;code&gt;backups&lt;/code&gt; 目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;sftp&lt;/code&gt;&lt;/strong&gt; (安全文件传输程序 Secure File Transfer Program)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 提供一个交互式的安全文件传输会话，类似于传统的FTP客户端，但所有操作都通过SSH加密通道进行。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sftp [选项][用户名@]主机名或IP地址&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-P 端口号&lt;/code&gt; (大写P): 指定远程SSH端口。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b 批处理文件&lt;/code&gt;: 从批处理文件中读取命令执行。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-B 缓冲区大小&lt;/code&gt;: 指定传输缓冲区大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互模式常用命令:&lt;/p&gt;
&lt;p&gt; (在 sftp&amp;gt;提示符下使用) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get 远程文件 [本地路径]&lt;/code&gt;: 下载文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;put 本地文件 [远程路径]&lt;/code&gt;: 上传文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls [远程路径]&lt;/code&gt;: 列出远程目录内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd 远程路径&lt;/code&gt;: 更改远程当前目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lcd 本地路径&lt;/code&gt;: 更改本地当前目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;: 显示远程当前工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lpwd&lt;/code&gt;: 显示本地当前工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm 远程文件&lt;/code&gt;: 删除远程文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir 远程目录名&lt;/code&gt;: 创建远程目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rmdir 远程目录名&lt;/code&gt;: 删除远程目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt; 或 &lt;code&gt;?&lt;/code&gt;: 显示帮助信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exit&lt;/code&gt; 或 &lt;code&gt;quit&lt;/code&gt; 或 &lt;code&gt;bye&lt;/code&gt;: 断开连接并退出SFTP。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sftp user@fileserver.example.com&lt;/code&gt;: 连接到SFTP服务器。&lt;/li&gt;
&lt;li&gt;(在 &lt;code&gt;sftp&amp;gt;&lt;/code&gt; 提示符下) &lt;code&gt;get important_data.zip /local/backups/&lt;/code&gt;: 从远程服务器下载文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;ftp&lt;/code&gt;&lt;/strong&gt; (文件传输协议客户端 - 旧版，不安全 File Transfer Protocol client - deprecated, insecure)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于通过文件传输协议 (FTP) 在网络上的计算机之间传输文件。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内容:&lt;/strong&gt; FTP传输数据和凭证（用户名、密码）时通常不加密，存在安全风险。推荐使用SFTP或SCP作为更安全的选择。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ftp [主机名或IP地址]&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互模式常用命令:&lt;/p&gt;
&lt;p&gt; (在 ftp&amp;gt; 提示符下使用) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user 用户名 [密码]&lt;/code&gt;: 登录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get 远程文件 [本地文件名]&lt;/code&gt;: 下载文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;put 本地文件 [远程文件名]&lt;/code&gt;: 上传文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mget 远程文件模式&lt;/code&gt;: 下载多个文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mput 本地文件模式&lt;/code&gt;: 上传多个文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;: 列出远程目录内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd 远程目录&lt;/code&gt;: 更改远程当前目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;: 显示远程当前工作目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete 远程文件&lt;/code&gt;: 删除远程文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir 远程目录名&lt;/code&gt;: 创建远程目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;binary&lt;/code&gt;: 设置二进制传输模式 (传输非文本文件时必须)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ascii&lt;/code&gt;: 设置ASCII传输模式 (传输文本文件时)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bye&lt;/code&gt; 或 &lt;code&gt;quit&lt;/code&gt;: 断开连接并退出FTP。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ftp ftp.example.com&lt;/code&gt;: 连接到FTP服务器 &lt;code&gt;ftp.example.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;(在 &lt;code&gt;ftp&amp;gt;&lt;/code&gt; 提示符下) &lt;code&gt;get report.pdf&lt;/code&gt;: 下载 &lt;code&gt;report.pdf&lt;/code&gt; 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/strong&gt; (非交互式网络下载器 The non-interactive network downloader)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从Web服务器下载文件，支持HTTP, HTTPS, FTP协议。它是一个非交互式工具，可以在后台运行。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;wget [选项]......&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;常用选项:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-O 文件名&lt;/code&gt;: 将下载内容保存为指定的文件名。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P 目录&lt;/code&gt;: 指定下载文件的保存目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 断点续传，继续下载未完成的文件。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归下载整个网站或目录。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l 深度&lt;/code&gt;: 递归下载时指定最大深度。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-np&lt;/code&gt;: 递归下载时不进入父目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 转换链接，使下载的HTML文件可以在本地查看。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 下载所有显示HTML页面所需的文件，如图片等。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 后台下载。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 文件&lt;/code&gt;: 从文件中读取URL列表进行下载。 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;--limit-rate=速度&lt;/code&gt;: 限制下载速度 (例如 &lt;code&gt;100k&lt;/code&gt;,&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;wget-非交互式网络下载器-The-non-interactive-network-downloader&#34;&gt;&lt;a href=&#34;#wget-非交互式网络下载器-The-non-interactive-network-downloader&#34; class=&#34;headerlink&#34; title=&#34;wget (非交互式网络下载器 The non-interactive network downloader)&#34;&gt;&lt;/a&gt;&lt;code&gt;wget&lt;/code&gt; (非交互式网络下载器 The non-interactive network downloader)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 从Web服务器下载文件，支持HTTP, HTTPS, FTP协议。它是一个非交互式工具，可以在后台运行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;wget [选项]...... [URL...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-O 文件名&lt;/code&gt;: 将下载内容保存为指定的文件名。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -O latest.tar.gz https://example.com/latest-version.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P 目录&lt;/code&gt;: 指定下载文件的保存目录。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -P /opt/downloads https://example.com/archive.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 断点续传，继续下载未完成的文件。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -c https://large.example.com/bigfile.iso&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 递归下载整个网站或目录。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r http://example.com/docs/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l 深度&lt;/code&gt;: 递归下载时指定最大深度。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -l 2 http://example.com/&lt;/code&gt; (下载当前页和下一层链接)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-np&lt;/code&gt;: 递归下载时不进入父目录。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -np http://example.com/parent/child/&lt;/code&gt; (不会下载 &lt;code&gt;http://example.com/parent/&lt;/code&gt; 的其他内容)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt;: 转换链接，使下载的HTML文件可以在本地查看。通常与 &lt;code&gt;-r&lt;/code&gt;一起使用。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -k http://example.com/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 下载所有显示HTML页面所需的文件，如图片、CSS等。通常与 &lt;code&gt;-r&lt;/code&gt;一起使用。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -r -p http://example.com/page.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 后台下载。日志默认输出到 &lt;code&gt;wget-log&lt;/code&gt;。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -b https://large.example.com/bigfile.iso&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 文件&lt;/code&gt;: 从文件中读取URL列表进行下载，每行一个URL。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget -i urls.txt&lt;/code&gt; (其中 &lt;code&gt;urls.txt&lt;/code&gt; 包含多个下载链接)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--limit-rate=速度&lt;/code&gt;: 限制下载速度 (例如 100k, 1m)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --limit-rate=200k https://example.com/file.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--tries=数字&lt;/code&gt;: 设置重试次数 (0 表示无限)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --tries=5 https://example.com/file.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--user-agent=&#34;字符串&#34;&lt;/code&gt;: 设置自定义 User-Agent。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --user-agent=&#34;MyCustomBrowser/1.0&#34; https://example.com/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-check-certificate&lt;/code&gt;: 不检查服务器的SSL证书 (不安全，慎用)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --no-check-certificate https://self-signed.example.com/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--user=用户名 --password=密码&lt;/code&gt;: FTP或HTTP认证。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;wget --user=myuser --password=mypass ftp://ftp.example.com/file.dat&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;curl-Client-URL-请求库&#34;&gt;&lt;a href=&#34;#curl-Client-URL-请求库&#34; class=&#34;headerlink&#34; title=&#34;curl (Client URL 请求库)&#34;&gt;&lt;/a&gt;&lt;code&gt;curl&lt;/code&gt; (Client URL 请求库)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于传输数据的命令行工具，支持多种协议，包括 HTTP, HTTPS, FTP, FTPS, SCP, SFTP, LDAP, SMTP 等。非常灵活，常用于API测试和自动化脚本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;curl [选项] [URL...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-O&lt;/code&gt;: 将输出写入与远程文件名相同的文件。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -O https://example.com/archive.zip&lt;/code&gt; (保存为 &lt;code&gt;archive.zip&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 文件名&lt;/code&gt;: 将输出写入指定的文件名。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -o new_archive.zip https://example.com/archive.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;: 跟随HTTP重定向。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -L http://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; 或 &lt;code&gt;--head&lt;/code&gt;: 仅获取HTTP头信息。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -I https://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H &#34;头部信息&#34;&lt;/code&gt;: 添加自定义HTTP头部。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -H &#34;Authorization: Bearer mytoken&#34; https://api.example.com/data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X 请求方法&lt;/code&gt;: 指定HTTP请求方法 (GET, POST, PUT, DELETE 等)。&lt;ul&gt;
&lt;li&gt;示例 (POST): &lt;code&gt;curl -X POST -H &#34;Content-Type: application/json&#34; -d &#39;{&#34;key&#34;:&#34;value&#34;}&#39; https://api.example.com/submit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d &#34;数据&#34;&lt;/code&gt; 或 &lt;code&gt;--data &#34;数据&#34;&lt;/code&gt;: 发送HTTP POST请求的数据。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -d &#34;param1=value1&amp;amp;param2=value2&#34; https://example.com/form&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F &#34;表单数据&#34;&lt;/code&gt; 或 &lt;code&gt;--form &#34;表单数据&#34;&lt;/code&gt;: 模拟multipart/form-data提交，常用于文件上传。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -F &#34;file=@/path/to/localfile.txt&#34; -F &#34;name=myfile&#34; https://example.com/upload&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u 用户名:密码&lt;/code&gt;: 进行服务器认证。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -u myuser:mypassword https://api.example.com/protected&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--silent&lt;/code&gt;: 静默模式，不显示进度条或错误信息。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;STATUS=$(curl -s -o /dev/null -w &#34;%{http_code}&#34; https://example.com)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; 或 &lt;code&gt;--verbose&lt;/code&gt;: 显示详细的通信信息，包括请求和响应头。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -v https://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; 或 &lt;code&gt;--insecure&lt;/code&gt;: 允许连接到没有有效SSL证书的HTTPS站点 (不安全，慎用)。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl -k https://self-signed.example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--connect-timeout 秒数&lt;/code&gt;: 设置最大连接时间。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl --connect-timeout 5 https://example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-time 秒数&lt;/code&gt;: 设置允许操作完成的最大总时间。&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;curl --max-time 30 https://example.com/largefile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;nslookup-Name-Server-Lookup-🌐&#34;&gt;&lt;a href=&#34;#nslookup-Name-Server-Lookup-🌐&#34; class=&#34;headerlink&#34; title=&#34;nslookup (Name Server Lookup) 🌐&#34;&gt;&lt;/a&gt;&lt;code&gt;nslookup&lt;/code&gt; (Name Server Lookup) 🌐&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 查询DNS域名服务器，获取域名对应的IP地址或其他DNS记录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非交互模式: &lt;code&gt;nslookup [选项] [域名] [DNS服务器]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;交互模式: &lt;code&gt;nslookup&lt;/code&gt; (进入提示符后输入域名或选项)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用选项/查询类型:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认查询A记录 (IP地址)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=mx&lt;/code&gt;: 查询MX记录 (邮件交换服务器)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=ns&lt;/code&gt;: 查询NS记录 (域名服务器)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=soa&lt;/code&gt;: 查询SOA记录 (起始授权机构记录)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=txt&lt;/code&gt;: 查询TXT记录 (文本记录)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set type=ptr&lt;/code&gt;: 查询PTR记录 (反向DNS查找)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server &amp;lt;DNS服务器IP&amp;gt;&lt;/code&gt;: 在交互模式下指定查询使用的DNS服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup example.com&lt;/code&gt; (&lt;a href=&#34;https://www.google.com/search?q=%E6%9F%A5%E8%AF%A2example.com%E7%9A%84A%E8%AE%B0%E5%BD%95&#34;&gt;https://www.google.com/search?q=%E6%9F%A5%E8%AF%A2example.com的A记录&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup example.com 8.8.8.8&lt;/code&gt; (使用Google &lt;a href=&#34;https://www.google.com/search?q=DNS%E6%9F%A5%E8%AF%A2example.com&#34;&gt;https://www.google.com/search?q=DNS%E6%9F%A5%E8%AF%A2example.com&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互模式:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-Bash&#34; data-language=&#34;Bash&#34;&gt;&lt;code class=&#34;language-Bash&#34;&gt;nslookup
&amp;gt; server 8.8.8.8
&amp;gt; set type=mx
&amp;gt; google.com
&amp;gt; exit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup -type=mx google.com&lt;/code&gt; (非交互式查询MX记录)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nslookup 8.8.4.4&lt;/code&gt; (反向查询IP地址对应的主机名)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;dig-Domain-Information-Groper-⛏️&#34;&gt;&lt;a href=&#34;#dig-Domain-Information-Groper-⛏️&#34; class=&#34;headerlink&#34; title=&#34;dig (Domain Information Groper) ⛏️&#34;&gt;&lt;/a&gt;&lt;code&gt;dig&lt;/code&gt; (Domain Information Groper) ⛏️&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 更强大和灵活的DNS查询工具，常用于DNS故障排除。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;dig [@服务器] [域名] [查询类型] [选项]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项/查询类型:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认查询A记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MX&lt;/code&gt;: 查询邮件交换记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NS&lt;/code&gt;: 查询域名服务器记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SOA&lt;/code&gt;: 查询起始授权机构记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TXT&lt;/code&gt;: 查询文本记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ANY&lt;/code&gt;: 查询所有类型的记录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x &amp;lt;IP地址&amp;gt;&lt;/code&gt;: 进行反向DNS查询。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+short&lt;/code&gt;: 只显示简短的答案。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+trace&lt;/code&gt;: 显示从根域名服务器开始的完整解析路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+noall +answer&lt;/code&gt;: 只显示答案部分。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@&amp;lt;DNS服务器IP&amp;gt;&lt;/code&gt;: 指定查询使用的DNS服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dig example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com MX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig @8.8.8.8 example.com NS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig -x 8.8.4.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com +short&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com +trace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dig example.com ANY +noall +answer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;traceroute-追踪路由路径-🗺️&#34;&gt;&lt;a href=&#34;#traceroute-追踪路由路径-🗺️&#34; class=&#34;headerlink&#34; title=&#34;traceroute (追踪路由路径) 🗺️&#34;&gt;&lt;/a&gt;&lt;code&gt;traceroute&lt;/code&gt; (追踪路由路径) 🗺️&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 显示数据包从本地主机到目标主机所经过的路由路径，以及每一跳的延迟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;traceroute [选项] 主机名或IP地址&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不将IP地址解析为主机名，加快显示速度。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt;: 使用ICMP ECHO请求代替UDP数据报 (类似Windows的tracert)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt;: 使用TCP SYN请求代替UDP数据报。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 端口号&lt;/code&gt;: 指定UDP或TCP的目标端口号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m 最大跳数&lt;/code&gt;: 设置最大跳数 (默认为30)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q 查询次数&lt;/code&gt;: 设置对每一跳发送的探测包数量 (默认为3)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 等待时间&lt;/code&gt;: 设置等待探测包回复的超时时间 (秒)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;traceroute google.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute -n 8.8.8.8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute -I example.com&lt;/code&gt; (使用ICMP)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute -T -p 80 example.com&lt;/code&gt; (&lt;a href=&#34;https://www.google.com/search?q=%E8%BF%BD%E8%B8%AA%E5%88%B0example.com%E7%9A%84TCP&#34;&gt;https://www.google.com/search?q=%E8%BF%BD%E8%B8%AA%E5%88%B0example.com的TCP&lt;/a&gt; 80端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;route-显示-操作IP路由表-传统&#34;&gt;&lt;a href=&#34;#route-显示-操作IP路由表-传统&#34; class=&#34;headerlink&#34; title=&#34;route (显示/操作IP路由表 - 传统)&#34;&gt;&lt;/a&gt;&lt;code&gt;route&lt;/code&gt; (显示/操作IP路由表 - 传统)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; (传统工具，推荐使用 &lt;code&gt;ip route&lt;/code&gt;) 显示和管理内核的IP路由表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;route&lt;/code&gt; 或 &lt;code&gt;route -n&lt;/code&gt; (显示路由表，-n以数字形式显示IP和端口)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route add [-net|-host] 目标 [netmask Nm] [gw Gw] [metric M] [[dev] If]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route del [-net|-host] 目标 [netmask Nm] [gw Gw] [metric M] [[dev] If]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用选项/参数:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 以数字形式显示地址，不解析主机名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add&lt;/code&gt;: 添加一条路由。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;del&lt;/code&gt;: 删除一条路由。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-net 目标网络&lt;/code&gt;: 指定目标是一个网络。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-host 目标主机&lt;/code&gt;: 指定目标是一个主机。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netmask Nm&lt;/code&gt;: 指定网络的子网掩码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gw Gw&lt;/code&gt;: 指定网关地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dev If&lt;/code&gt;: 指定路由通过哪个网络接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metric M&lt;/code&gt;: 设置路由的度量值 (成本)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;route -n&lt;/code&gt; (显示当前路由表)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route add default gw 192.168.1.1&lt;/code&gt; (添加默认网关)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route del default gw 192.168.1.1&lt;/code&gt; (删除默认网关)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route add -net 10.0.0.0 netmask 255.0.0.0 gw 192.168.0.1&lt;/code&gt; (添加一个到10.0.0.0/8网络的静态路由)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route del -net 10.0.0.0 netmask 255.0.0.0&lt;/code&gt; (删除上述静态路由)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、端口查看与防火墙管理&#34;&gt;&lt;a href=&#34;#七、端口查看与防火墙管理&#34; class=&#34;headerlink&#34; title=&#34;七、端口查看与防火墙管理&#34;&gt;&lt;/a&gt;七、端口查看与防火墙管理&lt;/h2&gt;&lt;h3 id=&#34;ss-Socket-Statistics-SOCKET&#34;&gt;&lt;a href=&#34;#ss-Socket-Statistics-SOCKET&#34; class=&#34;headerlink&#34; title=&#34;ss (Socket Statistics)  SOCKET&#34;&gt;&lt;/a&gt;&lt;code&gt;ss&lt;/code&gt; (Socket Statistics)  SOCKET&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 用于转储套接字统计信息，可以显示比 &lt;code&gt;netstat&lt;/code&gt; 更多的TCP和状态信息。它是 &lt;code&gt;netstat&lt;/code&gt; 的现代替代品。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;ss [选项]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听状态的套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示使用套接字的进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 不解析服务名称，直接显示端口号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有套接字 (监听和非监听)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 显示详细的套接字信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 显示计时器信息。&lt;/li&gt;
&lt;li&gt;state &amp;lt;状态&amp;gt;: 过滤特定状态的连接，如 &lt;code&gt;established, listen, time-wait&lt;/code&gt;。&lt;ul&gt;
&lt;li&gt;例如: &lt;code&gt;ss state established&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ss -tulnp&lt;/code&gt; (最常用组合：显示所有TCP和UDP监听端口及其进程，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tan&lt;/code&gt; (显示所有TCP连接，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -s&lt;/code&gt; (显示套接字使用摘要)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -t -a dst :22&lt;/code&gt; (显示所有到22端口的TCP连接)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -t -a src 192.168.1.100:http&lt;/code&gt; (显示源自192.168.1.100的HTTP TCP连接)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;netstat-Network-Statistics-传统&#34;&gt;&lt;a href=&#34;#netstat-Network-Statistics-传统&#34; class=&#34;headerlink&#34; title=&#34;netstat (Network Statistics - 传统)&#34;&gt;&lt;/a&gt;&lt;code&gt;netstat&lt;/code&gt; (Network Statistics - 传统)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; (传统工具，推荐使用 &lt;code&gt;ss&lt;/code&gt;) 显示网络连接、路由表、接口统计等信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;netstat [选项]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 显示TCP连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 显示UDP连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 显示监听状态的套接字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 显示使用套接字的进程PID和名称 (通常需要root权限)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 以数字形式显示地址和端口号，不解析名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 显示所有活动的连接和监听端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 显示路由表 (类似 &lt;code&gt;route -n&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 显示网络接口统计信息 (类似 &lt;code&gt;ifconfig&lt;/code&gt; 或 &lt;code&gt;ip -s link&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 持续显示信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;: 显示扩展信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;netstat -tulnp&lt;/code&gt; (最常用组合：显示所有TCP和UDP监听端口及其进程，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -an&lt;/code&gt; (显示所有活动的连接和监听端口，不解析名称)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -rn&lt;/code&gt; (显示路由表)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -i&lt;/code&gt; (显示网络接口)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -antp | grep ESTABLISHED&lt;/code&gt; (显示所有已建立的TCP连接及其进程)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;iptables-IPv4-Packet-Filtering-and-NAT-🔥🧱&#34;&gt;&lt;a href=&#34;#iptables-IPv4-Packet-Filtering-and-NAT-🔥🧱&#34; class=&#34;headerlink&#34; title=&#34;iptables (IPv4 Packet Filtering and NAT) 🔥🧱&#34;&gt;&lt;/a&gt;&lt;code&gt;iptables&lt;/code&gt; (IPv4 Packet Filtering and NAT) 🔥🧱&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; Linux内核防火墙 &lt;code&gt;netfilter&lt;/code&gt; 的用户空间命令行工具，用于配置IPv4数据包过滤规则、NAT和包处理。功能强大但语法复杂。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本概念:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tables (表):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt;: 默认表，用于数据包过滤 (INPUT, OUTPUT, FORWARD 链)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nat&lt;/code&gt;: 用于网络地址转换 (PREROUTING, POSTROUTING, OUTPUT 链)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mangle&lt;/code&gt;: 用于修改IP头字段 (所有链)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;raw&lt;/code&gt;: 用于配置豁免，使数据包不经过连接跟踪。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chains (链):&lt;/p&gt;
&lt;p&gt; 规则的有序列表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INPUT&lt;/code&gt;: 处理发往本机的入站数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OUTPUT&lt;/code&gt;: 处理本机发出的出站数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FORWARD&lt;/code&gt;: 处理流经本机的转发数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PREROUTING&lt;/code&gt;: 在路由决策之前处理数据包 (常用于DNAT)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POSTROUTING&lt;/code&gt;: 在路由决策之后，数据包即将发出时处理 (常用于SNAT)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Targets (目标):&lt;/p&gt;
&lt;p&gt; 规则匹配后执行的动作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ACCEPT&lt;/code&gt;: 接受数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DROP&lt;/code&gt;: 丢弃数据包 (不响应)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REJECT&lt;/code&gt;: 拒绝数据包 (通常会返回错误信息)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOG&lt;/code&gt;: 记录数据包信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SNAT&lt;/code&gt;: 源地址转换。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DNAT&lt;/code&gt;: 目标地址转换。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MASQUERADE&lt;/code&gt;: 动态源地址转换 (常用于共享上网)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;语法 (通用):&lt;/strong&gt; &lt;code&gt;iptables [-t 表名] 命令 链名 匹配条件 -j 目标&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用命令:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-L [链名]&lt;/code&gt;: 列出规则。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示详细信息 (包和字节计数器)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: 数字格式显示IP和端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--line-numbers&lt;/code&gt;: 显示规则编号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A 链名&lt;/code&gt;: 追加新规则到链尾。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I 链名 [规则编号]&lt;/code&gt;: 插入新规则到指定位置 (默认链首)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D 链名 规则编号或规则定义&lt;/code&gt;: 删除规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R 链名 规则编号 规则定义&lt;/code&gt;: 替换规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-F [链名]&lt;/code&gt;: 清空链中的所有规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Z [链名]&lt;/code&gt;: 清零链中所有规则的包和字节计数器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P 链名 目标&lt;/code&gt;: 设置链的默认策略 (ACCEPT, DROP)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N 链名&lt;/code&gt;: 创建用户自定义链。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X [链名]&lt;/code&gt;: 删除用户自定义空链。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E 旧链名 新链名&lt;/code&gt;: 重命名用户自定义链。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用匹配条件:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p 协议&lt;/code&gt;: 指定协议 (tcp, udp, icmp, all)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 源地址/掩码&lt;/code&gt;: 指定源IP地址或网络。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d 目标地址/掩码&lt;/code&gt;: 指定目标IP地址或网络。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i 输入接口&lt;/code&gt;: 指定数据包进入的网络接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o 输出接口&lt;/code&gt;: 指定数据包流出的网络接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--sport 源端口&lt;/code&gt;: 指定源端口 (需与 &lt;code&gt;-p tcp&lt;/code&gt; 或 &lt;code&gt;-p udp&lt;/code&gt; 配合)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dport 目标端口&lt;/code&gt;: 指定目标端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m 模块名 --模块选项&lt;/code&gt;: 使用扩展模块 (如 &lt;code&gt;state, conntrack, multiport, tcp, udp&lt;/code&gt;)。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m state --state NEW,ESTABLISHED,RELATED&lt;/code&gt;: 匹配连接状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m multiport --dports 22,80,443&lt;/code&gt;: 匹配多个目标端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;查看规则:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -L -n -v&lt;/code&gt; (查看filter表所有链的规则)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -L -n -v --line-numbers&lt;/code&gt; (查看nat表规则并显示行号)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置默认策略:&lt;/strong&gt; (通常先允许所有传出，拒绝所有传入和转发)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -P INPUT DROP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -P FORWARD DROP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -P OUTPUT ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;允许特定端口/服务:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT&lt;/code&gt; (允许SSH)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT&lt;/code&gt; (允许HTTP)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT&lt;/code&gt; (允许HTTPS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -i lo -j ACCEPT&lt;/code&gt; (允许来自本地回环接口的所有流量)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT&lt;/code&gt; (允许已建立和相关的连接)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;允许特定IP:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -s 192.168.1.100 -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻止特定IP:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -s 1.2.3.4 -j DROP&lt;/code&gt; (阻止单个IP)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A INPUT -s 1.2.3.0/24 -j REJECT&lt;/code&gt; (拒绝整个子网)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除规则:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -D INPUT 3&lt;/code&gt; (删除INPUT链中编号为3的规则)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -D INPUT -s 1.2.3.4 -j DROP&lt;/code&gt; (按规则定义删除)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;清空规则:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -F INPUT&lt;/code&gt; (清空INPUT链)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -F&lt;/code&gt; (清空filter表所有链)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -F&lt;/code&gt; (清空nat表所有链)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAT示例 (SNAT/MASQUERADE - 共享上网):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;假设 &lt;code&gt;eth0&lt;/code&gt; 是外网接口，&lt;code&gt;eth1&lt;/code&gt; 是内网接口 (内网IP段 &lt;code&gt;192.168.1.0/24&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo sysctl -w net.ipv4.ip_forward=1&lt;/code&gt; (开启IP转发)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A FORWARD -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAT示例 (DNAT - 端口转发):&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;将外网接口 &lt;code&gt;eth0&lt;/code&gt; 的TCP 8080端口转发到内网服务器 &lt;code&gt;192.168.1.100&lt;/code&gt; 的80端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -j DNAT --to-destination 192.168.1.100:80&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo iptables -A FORWARD -p tcp -d 192.168.1.100 --dport 80 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;保存和恢复规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规则默认在重启后丢失。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保存:&lt;/strong&gt; &lt;code&gt;sudo iptables-save &amp;gt; /etc/iptables/rules.v4&lt;/code&gt; (Debian/Ubuntu，需安装 &lt;code&gt;iptables-persistent&lt;/code&gt;) &lt;code&gt;sudo ip6tables-save &amp;gt; /etc/iptables/rules.v6&lt;/code&gt; 在RHEL/CentOS系统上，通常使用 &lt;code&gt;systemctl enable iptables&lt;/code&gt; 和 &lt;code&gt;systemctl start iptables&lt;/code&gt; (需要 &lt;code&gt;iptables-services&lt;/code&gt; 包)，规则保存在 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恢复:&lt;/strong&gt; &lt;code&gt;sudo iptables-restore &amp;lt; /etc/iptables/rules.v4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iptables-persistent&lt;/code&gt; (Debian/Ubuntu):&lt;ul&gt;
&lt;li&gt;安装: &lt;code&gt;sudo apt install iptables-persistent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;保存当前规则: &lt;code&gt;sudo netfilter-persistent save&lt;/code&gt; (或 &lt;code&gt;sudo /etc/init.d/netfilter-persistent save&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;系统启动时会自动加载。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ufw-Uncomplicated-Firewall-🛡️&#34;&gt;&lt;a href=&#34;#ufw-Uncomplicated-Firewall-🛡️&#34; class=&#34;headerlink&#34; title=&#34;ufw (Uncomplicated Firewall) 🛡️&#34;&gt;&lt;/a&gt;&lt;code&gt;ufw&lt;/code&gt; (Uncomplicated Firewall) 🛡️&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; 一个用户友好的 &lt;code&gt;iptables&lt;/code&gt; 前端，旨在简化防火墙配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo ufw [选项] 命令&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用命令与选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;状态管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;: 启用防火墙 (并设置开机自启)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw disable&lt;/code&gt;: 禁用防火墙。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status&lt;/code&gt;: 查看防火墙状态和规则。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status numbered&lt;/code&gt;: 查看规则并显示编号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status verbose&lt;/code&gt;: 查看详细状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw reload&lt;/code&gt;: 重载防火墙规则 (不中断现有连接)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw reset&lt;/code&gt;: 重置防火墙到默认状态 (会禁用防火墙)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;默认策略:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;: 拒绝所有入站连接 (推荐)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default allow outgoing&lt;/code&gt;: 允许所有出站连接 (推荐)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny outgoing&lt;/code&gt;: 拒绝所有出站连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny routed&lt;/code&gt;: 拒绝所有转发的包。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;规则管理 (allow/deny/reject/limit):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw allow &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow 22/tcp&lt;/code&gt; (允许TCP 22端口)&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow 53&lt;/code&gt; (允许TCP和UDP 53端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw allow &amp;lt;服务名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (服务名在 &lt;code&gt;/etc/services&lt;/code&gt;中定义)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow http&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow https&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw deny &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw deny 3306&lt;/code&gt; (拒绝访问MySQL端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw reject &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt; (拒绝并返回消息)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw limit &amp;lt;端口号&amp;gt;[/协议]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (限制连接频率，如SSH，防止暴力破解：如果在30秒内尝试连接6次以上，则拒绝连接)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw limit ssh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于源/目标IP的规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow from &amp;lt;IP地址&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow from 192.168.1.100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow from &amp;lt;IP地址&amp;gt; to any port &amp;lt;端口号&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow from 192.168.1.100 to any port 22 proto tcp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw deny from &amp;lt;IP地址&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw deny from 1.2.3.4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基于网络接口的规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow in on &amp;lt;接口名&amp;gt; to any port &amp;lt;端口号&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow in on eth1 to any port 80&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;删除规则:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw delete &amp;lt;规则定义&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw delete allow 80&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw delete allow from 1.2.3.4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw delete &amp;lt;规则编号&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; (通过 &lt;code&gt;sudo ufw status numbered&lt;/code&gt; 获取编号)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw delete 3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;应用程序配置文件:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ufw&lt;/code&gt; 可以使用应用程序配置文件 (位于 &lt;code&gt;/etc/ufw/applications.d&lt;/code&gt;)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw app list&lt;/code&gt;: 列出可用的应用程序配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw app info &amp;lt;应用名&amp;gt;&lt;/code&gt;: 显示应用程序配置文件的详细信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo ufw allow &amp;lt;应用名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;: 允许应用程序配置文件中定义的所有规则。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo ufw allow &#39;Nginx Full&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;日志:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo ufw logging on [low|medium|high|full]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw logging off&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;日志通常记录在 &lt;code&gt;/var/log/ufw.log&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例流程:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default deny incoming&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw default allow outgoing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow ssh&lt;/code&gt; (或 &lt;code&gt;sudo ufw allow 22/tcp&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow http&lt;/code&gt; (或 &lt;code&gt;sudo ufw allow 80/tcp&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw allow https&lt;/code&gt; (或 &lt;code&gt;sudo ufw allow 443/tcp&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw enable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ufw status&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;firewall-cmd-Firewalld-Command-Line-Client-🔥-Zones&#34;&gt;&lt;a href=&#34;#firewall-cmd-Firewalld-Command-Line-Client-🔥-Zones&#34; class=&#34;headerlink&#34; title=&#34;firewall-cmd (Firewalld Command Line Client) 🔥 Zones&#34;&gt;&lt;/a&gt;&lt;code&gt;firewall-cmd&lt;/code&gt; (Firewalld Command Line Client) 🔥 Zones&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用途:&lt;/strong&gt; &lt;code&gt;firewalld&lt;/code&gt; 服务的命令行客户端，是 RHEL/CentOS 7+ 和 Fedora 等发行版的默认防火墙管理工具。它使用 “区域 (zones)” 和 “服务 (services)” 的概念。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本概念:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Zones (区域):&lt;/strong&gt; 网络连接可以被分配到不同的区域，每个区域有自己独立的防火墙规则集。预定义区域如 &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;home&lt;/code&gt;, &lt;code&gt;work&lt;/code&gt;, &lt;code&gt;dmz&lt;/code&gt;, &lt;code&gt;internal&lt;/code&gt;, &lt;code&gt;external&lt;/code&gt;, &lt;code&gt;block&lt;/code&gt;, &lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;trusted&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Services (服务):&lt;/strong&gt; 预定义的 XML 文件，描述了服务所需的端口和协议 (如 &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;)。&lt;/li&gt;
&lt;li&gt;Permanent vs Runtime Configuration:&lt;ul&gt;
&lt;li&gt;默认情况下，&lt;code&gt;firewall-cmd&lt;/code&gt; 修改的是运行时配置，重启后失效。&lt;/li&gt;
&lt;li&gt;添加 &lt;code&gt;--permanent&lt;/code&gt; 选项可以修改永久配置，但需要 &lt;code&gt;firewall-cmd --reload&lt;/code&gt; 或重启 &lt;code&gt;firewalld&lt;/code&gt; 服务才能生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;语法:&lt;/strong&gt; &lt;code&gt;sudo firewall-cmd [选项] [操作]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用命令与选项:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;状态与管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl status firewalld&lt;/code&gt;: 查看 &lt;code&gt;firewalld&lt;/code&gt; 服务状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start firewalld&lt;/code&gt;: 启动服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl stop firewalld&lt;/code&gt;: 停止服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable firewalld&lt;/code&gt;: 设置开机自启。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl disable firewalld&lt;/code&gt;: 禁止开机自启。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --state&lt;/code&gt;: 查看防火墙运行状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --reload&lt;/code&gt;: 重载防火墙规则 (不中断现有连接，使永久配置生效)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --complete-reload&lt;/code&gt;: 完全重载 (中断现有连接)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;区域管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-default-zone&lt;/code&gt;: 获取默认区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --set-default-zone=&amp;lt;区域名&amp;gt;&lt;/code&gt;: 设置默认区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-active-zones&lt;/code&gt;: 获取当前活动的区域及其绑定的接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-zones&lt;/code&gt;: 列出所有可用区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --list-all&lt;/code&gt;: 列出指定区域的所有配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-interface=&amp;lt;接口名&amp;gt;&lt;/code&gt;: 将接口添加到指定区域 (运行时)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-interface=&amp;lt;接口名&amp;gt; --permanent&lt;/code&gt;: 永久添加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --change-interface=&amp;lt;接口名&amp;gt;&lt;/code&gt;: 修改接口所属区域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-interface=&amp;lt;接口名&amp;gt;&lt;/code&gt;: 从区域移除接口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-source=&amp;lt;IP或子网&amp;gt;&lt;/code&gt;: 将源IP/子网添加到区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --get-services&lt;/code&gt;: 列出所有预定义的服务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-service=&amp;lt;服务名&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-service=&amp;lt;服务名&amp;gt; --permanent&lt;/code&gt; (永久)&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=http&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-service=&amp;lt;服务名&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-service=&amp;lt;服务名&amp;gt; --permanent&lt;/code&gt; (永久)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --list-services&lt;/code&gt;: 列出区域中允许的服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;端口管理:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --add-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt; --permanent&lt;/code&gt;(永久)&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-port=8080/tcp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt;&lt;/code&gt; (运行时)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --remove-port=&amp;lt;端口号&amp;gt;/&amp;lt;协议&amp;gt; --permanent&lt;/code&gt; (永久)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=&amp;lt;区域名&amp;gt; --list-ports&lt;/code&gt;: 列出区域中允许的端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Panic Mode:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --panic-on&lt;/code&gt;: 紧急模式，丢弃所有入站和出站数据包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --panic-off&lt;/code&gt;: 关闭紧急模式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --query-panic&lt;/code&gt;: 查询紧急模式状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Direct Rules (直接规则 - 类似iptables语法，不推荐常规使用):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --direct --add-rule ipv4 filter INPUT 0 -p tcp --dport 22 -j ACCEPT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rich Rules (富规则 - 更灵活的规则定义):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#39;rule family=&#34;ipv4&#34; source address=&#34;192.168.1.0/24&#34; service name=&#34;ssh&#34; accept&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#39;rule family=&#34;ipv4&#34; source address=&#34;1.2.3.4&#34; reject&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例流程 (public区域):&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start firewalld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable firewalld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --set-default-zone=public&lt;/code&gt; (通常public是默认)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=http&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-service=https&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-port=8080-8090/tcp&lt;/code&gt; (允许一个端口范围)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --reload&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo firewall-cmd --zone=public --list-all&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、常用配置文件与文本编辑器&#34;&gt;&lt;a href=&#34;#八、常用配置文件与文本编辑器&#34; class=&#34;headerlink&#34; title=&#34;八、常用配置文件与文本编辑器&#34;&gt;&lt;/a&gt;八、常用配置文件与文本编辑器&lt;/h2&gt;&lt;h3 id=&#34;常见重要配置文件-⚙️&#34;&gt;&lt;a href=&#34;#常见重要配置文件-⚙️&#34; class=&#34;headerlink&#34; title=&#34;常见重要配置文件 ⚙️&#34;&gt;&lt;/a&gt;常见重要配置文件 ⚙️&lt;/h3&gt;&lt;p&gt;以下是一些Linux系统中常见的配置文件及其典型路径和用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/passwd&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储用户账户信息（如用户名、用户ID (UID)、组ID (GID)、用户描述、家目录路径、默认shell）。密码字段通常是一个&lt;code&gt;x&lt;/code&gt;，表示加密后的密码存储在&lt;code&gt;/etc/shadow&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式&lt;/strong&gt;: &lt;code&gt;username:password_placeholder:UID:GID:comment:home_directory:login_shell&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/shadow&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 安全地存储用户加密后的密码和密码老化信息。此文件通常只有root用户可读。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;username:encrypted_password:last_password_change_date:min_password_age:max_password_age:warning_period:inactivity_period:expiration_date:reserved_field&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encrypted_password&lt;/code&gt;: &lt;code&gt;!&lt;/code&gt; 或 &lt;code&gt;*&lt;/code&gt; 表示账户被锁定或没有密码。&lt;/li&gt;
&lt;li&gt;日期字段通常是从1970年1月1日开始的天数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/group&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 存储用户组信息（组名、组ID (GID)、组成员列表）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式&lt;/strong&gt;: &lt;code&gt;group_name:password_placeholder:GID:user_list_comma_separated&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/fstab&lt;/strong&gt; (Filesystem Table):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 定义磁盘分区、各种块设备或远程文件系统如何在系统启动时挂载到文件系统中，或者在需要时由 &lt;code&gt;mount -a&lt;/code&gt; 命令挂载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;device_spec mount_point fstype options dump pass_num&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;device_spec&lt;/code&gt;: 设备（如&lt;code&gt;/dev/sda1&lt;/code&gt;）或UUID（如&lt;code&gt;UUID=xxxxxxxx-xxxx...&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mount_point&lt;/code&gt;: 挂载点（如&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;/home&lt;/code&gt;、&lt;code&gt;/var&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fstype&lt;/code&gt;: 文件系统类型（如&lt;code&gt;ext4&lt;/code&gt;、&lt;code&gt;xfs&lt;/code&gt;、&lt;code&gt;ntfs&lt;/code&gt;、&lt;code&gt;nfs&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options&lt;/code&gt;: 挂载选项（如&lt;code&gt;defaults&lt;/code&gt;、&lt;code&gt;rw&lt;/code&gt;、&lt;code&gt;ro&lt;/code&gt;、&lt;code&gt;noatime&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dump&lt;/code&gt;: &lt;code&gt;dump&lt;/code&gt;工具是否备份（0或1）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pass_num&lt;/code&gt;: &lt;code&gt;fsck&lt;/code&gt;检查文件系统的顺序（0表示不检查，1表示根文件系统，2表示其他）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/hosts&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;: 提供静态的IP地址到主机名的映射。在DNS解析之前，系统会检查此文件。常用于本地测试或强制解析特定域名到特定IP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式: &lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;IP_address canonical_hostname &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;aliases&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;示例: &lt;code&gt;127.0.0.1 localhost loopback&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;192.168.1.100 myserver myapp.local&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/resolv.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 配置DNS解析器，指定域名服务器（nameserver）的IP地址以及搜索域（search domain）。在许多现代发行版中，此文件可能由网络管理服务（如NetworkManager或systemd-resolved）动态生成和管理，不建议手动编辑。&lt;/li&gt;
&lt;li&gt;格式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nameserver IP_address_of_DNS_server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;search domain1.com domain2.net&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;options timeout:1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;~/.bashrc&lt;/strong&gt; (用户特定):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: Bash shell的用户特定配置文件。当用户启动一个新的交互式非登录shell时（如打开一个新的终端窗口），此文件中的命令会被执行。常用于设置别名、环境变量、自定义提示符等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置&lt;/strong&gt;: 用户家目录下 (&lt;code&gt;~&lt;/code&gt; 表示家目录，如 &lt;code&gt;/home/username/.bashrc&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/profile&lt;/strong&gt; (系统全局):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: Bash (及其他Bourne兼容shell) 的系统全局配置文件。当任何用户登录系统时（登录shell），此文件中的命令会被执行。它通常会调用 &lt;code&gt;/etc/profile.d/&lt;/code&gt; 目录下的脚本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt;: 修改此文件会影响系统所有用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/profile.d/*.sh&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: &lt;code&gt;/etc/profile&lt;/code&gt; 通常会执行此目录下的所有 &lt;code&gt;.sh&lt;/code&gt; 脚本，用于模块化地配置系统范围的环境变量和启动程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/bash.bashrc&lt;/strong&gt; (系统全局，某些发行版):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 系统全局的bashrc文件，为所有用户的交互式非登录shell执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/var/log/syslog&lt;/strong&gt; (Debian/Ubuntu) 或 &lt;strong&gt;/var/log/messages&lt;/strong&gt; (RHEL/CentOS):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 系统主要的日志文件，记录了内核消息、系统服务消息、以及各种应用程序的日志。是故障排除的重要来源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;管理&lt;/strong&gt;: 通常由 &lt;code&gt;rsyslogd&lt;/code&gt; 或 &lt;code&gt;syslog-ng&lt;/code&gt; 服务管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/ssh/sshd_config&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: OpenSSH服务器 (sshd) 的配置文件。控制SSH服务的行为，如监听端口、是否允许root登录、认证方法等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;: 用于在系统启动时配置内核参数。&lt;code&gt;sysctl -p&lt;/code&gt; 可以加载此文件中的设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;常用文本编辑器-📝&#34;&gt;&lt;a href=&#34;#常用文本编辑器-📝&#34; class=&#34;headerlink&#34; title=&#34;常用文本编辑器 📝&#34;&gt;&lt;/a&gt;常用文本编辑器 📝&lt;/h3&gt;&lt;p&gt;在Linux命令行下，最常用的文本编辑器是 &lt;code&gt;vi&lt;/code&gt; (或其增强版 &lt;code&gt;vim&lt;/code&gt;) 和 &lt;code&gt;nano&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;nano&#34;&gt;&lt;a href=&#34;#nano&#34; class=&#34;headerlink&#34; title=&#34;nano&#34;&gt;&lt;/a&gt;&lt;code&gt;nano&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;nano&lt;/code&gt; 是一个简单易用的命令行文本编辑器，适合初学者。屏幕底部会显示常用快捷键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;启动:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nano 文件名&lt;/code&gt; (如果文件不存在，则创建新文件)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nano&lt;/code&gt; (不带文件名，之后可保存为新文件)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用快捷键 (Ctrl 代表 Control 键):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + G&lt;/code&gt;: 获取帮助 (显示所有快捷键)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + O&lt;/code&gt;: 保存文件 (Write Out)。会提示输入文件名，回车确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + X&lt;/code&gt;: 退出 &lt;code&gt;nano&lt;/code&gt;。如果文件已修改但未保存，会提示是否保存。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + W&lt;/code&gt;: 搜索文本 (Where is)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + \&lt;/code&gt;: 替换文本 (Replace)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + K&lt;/code&gt;:剪切当前行 (Cut Text)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + U&lt;/code&gt;: 粘贴剪切的文本 (Uncut Text)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + C&lt;/code&gt;: 显示当前光标位置 (行号、列号)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + J&lt;/code&gt;: 对齐当前段落 (Justify)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + T&lt;/code&gt;: 检查拼写 (需要安装 &lt;code&gt;spell&lt;/code&gt; 包)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + U&lt;/code&gt;: 撤销上一次操作。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + E&lt;/code&gt;: 重做上一次撤销的操作。&lt;/li&gt;
&lt;li&gt;方向键: 移动光标。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PageUp / PageDown&lt;/code&gt;: 上下翻页。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Home / End&lt;/code&gt;: 移动到行首/行尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo nano /etc/hosts&lt;/code&gt; (编辑hosts文件，需要sudo权限)&lt;/p&gt;
&lt;h4 id=&#34;vi-vim-Vi-IMproved&#34;&gt;&lt;a href=&#34;#vi-vim-Vi-IMproved&#34; class=&#34;headerlink&#34; title=&#34;vi / vim (Vi IMproved)&#34;&gt;&lt;/a&gt;&lt;code&gt;vi&lt;/code&gt; / &lt;code&gt;vim&lt;/code&gt; (Vi IMproved)&lt;/h4&gt;&lt;p&gt;&lt;code&gt;vi&lt;/code&gt; 是一个功能强大的模态编辑器，学习曲线较陡峭，但熟练后效率极高。&lt;code&gt;vim&lt;/code&gt; 是 &lt;code&gt;vi&lt;/code&gt; 的增强版，提供了更多功能（如语法高亮、多级撤销等）。大多数现代系统实际上的 &lt;code&gt;vi&lt;/code&gt; 命令是指向 &lt;code&gt;vim&lt;/code&gt; 的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模式:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;命令模式 (Command Mode):&lt;/strong&gt; 默认模式。用于移动光标、删除文本、复制粘贴等操作。按键不会直接输入文本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入模式 (Insert Mode):&lt;/strong&gt; 用于输入文本。从命令模式按 &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt; 等键进入。按 &lt;code&gt;Esc&lt;/code&gt; 键返回命令模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;末行模式 (Last Line Mode / Ex Mode):&lt;/strong&gt; 在命令模式下按 &lt;code&gt;:&lt;/code&gt; 进入。用于执行保存、退出、搜索替换等命令。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;启动:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vi 文件名&lt;/code&gt; 或 &lt;code&gt;vim 文件名&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;基本操作 (命令模式下):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移动光标:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;: 左&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;: 下&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;: 上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;: 右&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;: 移动到下一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;: 移动到上一个单词的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; (零): 移动到当前行行首&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;: 移动到当前行第一个非空白字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;: 移动到当前行行尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gg&lt;/code&gt;: 移动到文件第一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;G&lt;/code&gt;: 移动到文件最后一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;行号G&lt;/code&gt;: 移动到指定行号 (例如 &lt;code&gt;10G&lt;/code&gt; 到第10行)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进入插入模式:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;: 在当前光标前插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;: 在当前行首插入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt;: 在当前光标后追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt;: 在当前行尾追加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o&lt;/code&gt;: 在当前行下方插入一个新行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;O&lt;/code&gt;: 在当前行上方插入一个新行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;删除文本:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: 删除当前光标处的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dw&lt;/code&gt;: 删除一个单词 (从光标处到词尾)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dd&lt;/code&gt;: 删除当前行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数字dd&lt;/code&gt;: 删除从当前行开始的指定数量的行 (例如 &lt;code&gt;3dd&lt;/code&gt; 删除3行)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt;: 删除从光标到行尾的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;复制 (Yank) 与粘贴 (Put):&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yw&lt;/code&gt;: 复制一个单词&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yy&lt;/code&gt;: 复制当前行 (y 代表 yank)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数字yy&lt;/code&gt;: 复制多行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;: 在光标后粘贴 (小写p)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt;: 在光标前粘贴 (大写P)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;撤销与重做:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;: 撤销上一次操作 (undo)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + r&lt;/code&gt;: 重做上一次撤销的操作 (redo)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;搜索:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/模式&lt;/code&gt;: 向下搜索 “模式” (按 &lt;code&gt;n&lt;/code&gt; 查找下一个, &lt;code&gt;N&lt;/code&gt; 查找上一个)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?模式&lt;/code&gt;: 向上搜索 “模式”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;末行模式命令 (按 &lt;code&gt;:&lt;/code&gt; 后输入):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:w&lt;/code&gt;: 保存文件 (write)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:w 文件名&lt;/code&gt;:另存为指定文件名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:q&lt;/code&gt;: 退出 (quit)。如果文件已修改但未保存，会阻止退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:q!&lt;/code&gt;: 强制退出，不保存修改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:wq&lt;/code&gt; 或 &lt;code&gt;:x&lt;/code&gt;: 保存并退出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:e 文件名&lt;/code&gt;: 编辑另一个文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:set number&lt;/code&gt; 或 &lt;code&gt;:set nu&lt;/code&gt;: 显示行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:set nonumber&lt;/code&gt; 或 &lt;code&gt;:set nonu&lt;/code&gt;: 关闭行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:%s/旧字符串/新字符串/g&lt;/code&gt;: 全局替换 (g代表global)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:%s/旧字符串/新字符串/gc&lt;/code&gt;: 全局替换，每次替换前确认 (c代表confirm)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:!外部命令&lt;/code&gt;: 执行外部shell命令 (例如 &lt;code&gt;:!ls -l&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt; &lt;code&gt;sudo vim /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习 &lt;code&gt;vim&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在终端中运行 &lt;code&gt;vimtutor&lt;/code&gt; 命令，这是一个交互式的 &lt;code&gt;vim&lt;/code&gt; 教程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这只是 &lt;code&gt;vim&lt;/code&gt; 功能的冰山一角，但足以应付日常的配置文件编辑。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2025/05/25/sha-si-ju-ti-jin-cheng/</guid>
            <title>杀死具体进程</title>
            <link>https://0xdadream.github.io/2025/05/25/sha-si-ju-ti-jin-cheng/</link>
            <category>命令</category>
            <pubDate>Sun, 25 May 2025 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;杀死具体进程&#34;&gt;&lt;a href=&#34;#杀死具体进程&#34; class=&#34;headerlink&#34; title=&#34;杀死具体进程&#34;&gt;&lt;/a&gt;杀死具体进程&lt;/h1&gt;&lt;p&gt;执行了 &lt;code&gt;systemctl stop httpd&lt;/code&gt; 来关闭 &lt;code&gt;httpd&lt;/code&gt;（Apache）服务，但仍然看到类似：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;httpd &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pid &lt;span class=&#34;token number&#34;&gt;1785910&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; already running&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;表示进程还在运行，说明 &lt;strong&gt;&lt;code&gt;httpd&lt;/code&gt; 没有被完全停止&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;✅-解决步骤如下：&#34;&gt;&lt;a href=&#34;#✅-解决步骤如下：&#34; class=&#34;headerlink&#34; title=&#34;✅ 解决步骤如下：&#34;&gt;&lt;/a&gt;✅ 解决步骤如下：&lt;/h2&gt;&lt;h3 id=&#34;🔍-第一步：确认并查找-httpd-是否仍有残留进程&#34;&gt;&lt;a href=&#34;#🔍-第一步：确认并查找-httpd-是否仍有残留进程&#34; class=&#34;headerlink&#34; title=&#34;🔍 第一步：确认并查找 httpd 是否仍有残留进程&#34;&gt;&lt;/a&gt;🔍 第一步：确认并查找 &lt;code&gt;httpd&lt;/code&gt; 是否仍有残留进程&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; aux &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; httpd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例输出：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;root     &lt;span class=&#34;token number&#34;&gt;1785910&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0.2&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;123456&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;7890&lt;/span&gt; ?        Ss   &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:34   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;:00 /usr/sbin/httpd &lt;span class=&#34;token parameter variable&#34;&gt;-DFOREGROUND&lt;/span&gt;
apache   &lt;span class=&#34;token number&#34;&gt;1785911&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;0.1&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;123456&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;4567&lt;/span&gt; ?        S    &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:34   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;:00 /usr/sbin/httpd &lt;span class=&#34;token parameter variable&#34;&gt;-DFOREGROUND&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;🧨-第二步：强制杀死所有-httpd-相关进程&#34;&gt;&lt;a href=&#34;#🧨-第二步：强制杀死所有-httpd-相关进程&#34; class=&#34;headerlink&#34; title=&#34;🧨 第二步：强制杀死所有 httpd 相关进程&#34;&gt;&lt;/a&gt;🧨 第二步：强制杀死所有 httpd 相关进程&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pkill&lt;/span&gt; httpd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者使用 &lt;code&gt;killall&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;killall&lt;/span&gt; httpd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果仍然存在僵尸进程，可以手动 kill：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-9&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1785910&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1785911&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;🔁-第三步：再次确认是否彻底关闭&#34;&gt;&lt;a href=&#34;#🔁-第三步：再次确认是否彻底关闭&#34; class=&#34;headerlink&#34; title=&#34;🔁 第三步：再次确认是否彻底关闭&#34;&gt;&lt;/a&gt;🔁 第三步：再次确认是否彻底关闭&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; aux &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; httpd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没有输出（或只有 grep 本身），说明服务已完全停止。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;🧪-第四步：确认端口是否仍被占用（例如-80-端口）&#34;&gt;&lt;a href=&#34;#🧪-第四步：确认端口是否仍被占用（例如-80-端口）&#34; class=&#34;headerlink&#34; title=&#34;🧪 第四步：确认端口是否仍被占用（例如 80 端口）&#34;&gt;&lt;/a&gt;🧪 第四步：确认端口是否仍被占用（例如 80 端口）&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;lsof&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; :80&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果发现仍有服务监听 80 端口，你可以确认是哪个程序占用了：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;netstat&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-tulnp&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; :80&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ss &lt;span class=&#34;token parameter variable&#34;&gt;-tulnp&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; :80&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;p&gt;如你希望彻底禁用 &lt;code&gt;httpd&lt;/code&gt;，可以执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl disable httpd
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl mask httpd&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;mask&lt;/code&gt; 会阻止任何方式启动它，包括依赖项。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/24/dong-tai-lian-jie-ku/</guid>
            <title>动态链接库</title>
            <link>https://0xdadream.github.io/2024/11/24/dong-tai-lian-jie-ku/</link>
            <category>命令</category>
            <pubDate>Sun, 24 Nov 2024 23:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;动态链接库&#34;&gt;&lt;a href=&#34;#动态链接库&#34; class=&#34;headerlink&#34; title=&#34;动态链接库&#34;&gt;&lt;/a&gt;动态链接库&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&#34;一、-etc-ld-so-conf-d-的作用&#34;&gt;&lt;a href=&#34;#一、-etc-ld-so-conf-d-的作用&#34; class=&#34;headerlink&#34; title=&#34;一、/etc/ld.so.conf.d 的作用&#34;&gt;&lt;/a&gt;&lt;strong&gt;一、&lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt; 的作用&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;动态库路径管理&lt;/strong&gt;：系统会读取该目录下的 &lt;code&gt;.conf&lt;/code&gt; 文件，这些文件指定了动态链接库的额外搜索路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置动态库缓存&lt;/strong&gt;：在运行程序时，动态链接器会从这些路径中查找所需的库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;默认加载的路径&lt;/strong&gt;（视系统配置而定）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;/lib&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/lib&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/lib&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过 &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;，可以扩展默认路径。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;二、动态库的加载顺序&#34;&gt;&lt;a href=&#34;#二、动态库的加载顺序&#34; class=&#34;headerlink&#34; title=&#34;二、动态库的加载顺序&#34;&gt;&lt;/a&gt;&lt;strong&gt;二、动态库的加载顺序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;动态链接器按照以下顺序查找动态库：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;环境变量&lt;/strong&gt;：&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缓存文件&lt;/strong&gt;：&lt;code&gt;/etc/ld.so.cache&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;默认路径&lt;/strong&gt;：如 &lt;code&gt;/lib&lt;/code&gt; 和 &lt;code&gt;/usr/lib&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：为了提高效率，系统不会直接读取所有路径，而是从 &lt;code&gt;/etc/ld.so.cache&lt;/code&gt; 中加载已经缓存的路径信息。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;三、-etc-ld-so-conf-d-的文件结构&#34;&gt;&lt;a href=&#34;#三、-etc-ld-so-conf-d-的文件结构&#34; class=&#34;headerlink&#34; title=&#34;三、/etc/ld.so.conf.d 的文件结构&#34;&gt;&lt;/a&gt;&lt;strong&gt;三、&lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt; 的文件结构&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;该目录包含多个 &lt;code&gt;.conf&lt;/code&gt; 文件，每个文件可以指定一组路径。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看 /etc/ld.so.conf.d 内容&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /etc/ld.so.conf.d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-lua&#34; data-language=&#34;lua&#34;&gt;&lt;code class=&#34;language-lua&#34;&gt;glibc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf
x86_64&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;linux&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;gnu&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf
&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;文件示例&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/etc/ld.so.conf.d/local.conf：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-vbnet&#34; data-language=&#34;vbnet&#34;&gt;&lt;code class=&#34;language-vbnet&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;lib&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;opt&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;lib&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些路径会被动态链接器添加到库搜索路径中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;四、如何配置动态库路径&#34;&gt;&lt;a href=&#34;#四、如何配置动态库路径&#34; class=&#34;headerlink&#34; title=&#34;四、如何配置动态库路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;四、如何配置动态库路径&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-添加自定义路径&#34;&gt;&lt;a href=&#34;#1-添加自定义路径&#34; class=&#34;headerlink&#34; title=&#34;1. 添加自定义路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 添加自定义路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;假设有一个自定义动态库路径 &lt;code&gt;/home/user/mylibs&lt;/code&gt;，以下是配置步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;创建配置文件&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; /etc/ld.so.conf.d/mylibs.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加如下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/home/user/mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;更新动态库缓存&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证是否生效&lt;/strong&gt;： 查看是否包含新路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldconfig &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-临时配置路径&#34;&gt;&lt;a href=&#34;#2-临时配置路径&#34; class=&#34;headerlink&#34; title=&#34;2. 临时配置路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 临时配置路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果只是临时测试动态库路径，可以使用 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 环境变量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/home/user/mylibs:&lt;span class=&#34;token variable&#34;&gt;$LD_LIBRARY_PATH&lt;/span&gt;
./myprogram&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这种方法仅对当前终端会话有效。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;五、ldconfig-的作用&#34;&gt;&lt;a href=&#34;#五、ldconfig-的作用&#34; class=&#34;headerlink&#34; title=&#34;五、ldconfig 的作用&#34;&gt;&lt;/a&gt;&lt;strong&gt;五、&lt;code&gt;ldconfig&lt;/code&gt; 的作用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ldconfig&lt;/code&gt; 是管理动态库缓存的工具，其作用包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;扫描路径&lt;/strong&gt;：根据 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; 和 &lt;code&gt;/etc/ld.so.conf.d/&lt;/code&gt; 下的配置文件，扫描动态库路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新缓存&lt;/strong&gt;：生成 &lt;code&gt;/etc/ld.so.cache&lt;/code&gt; 文件，加速库的加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;常用命令&#34;&gt;&lt;a href=&#34;#常用命令&#34; class=&#34;headerlink&#34; title=&#34;常用命令&#34;&gt;&lt;/a&gt;&lt;strong&gt;常用命令&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;更新缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指定路径更新缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig /home/user/mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看当前缓存的库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldconfig &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;六、动态库配置实例&#34;&gt;&lt;a href=&#34;#六、动态库配置实例&#34; class=&#34;headerlink&#34; title=&#34;六、动态库配置实例&#34;&gt;&lt;/a&gt;&lt;strong&gt;六、动态库配置实例&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-动态库开发&#34;&gt;&lt;a href=&#34;#1-动态库开发&#34; class=&#34;headerlink&#34; title=&#34;1. 动态库开发&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 动态库开发&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;创建一个简单动态库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// hello.c&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Hello, from dynamic library!\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译成动态库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;gcc -fPIC -shared -o libhello.so hello.c&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将动态库移动到 &lt;code&gt;/opt/mylibs&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; /opt/mylibs
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; libhello.so /opt/mylibs/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-配置加载路径&#34;&gt;&lt;a href=&#34;#2-配置加载路径&#34; class=&#34;headerlink&#34; title=&#34;2. 配置加载路径&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 配置加载路径&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;创建 &lt;code&gt;/etc/ld.so.conf.d/mylibs.conf&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; /etc/ld.so.conf.d/mylibs.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/opt/mylibs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新缓存：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-使用动态库&#34;&gt;&lt;a href=&#34;#3-使用动态库&#34; class=&#34;headerlink&#34; title=&#34;3. 使用动态库&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 使用动态库&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;编写一个测试程序：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// main.c&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译并运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; main main.c &lt;span class=&#34;token parameter variable&#34;&gt;-lhello&lt;/span&gt;
./main&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Hello, from dynamic library&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;七、排错方法&#34;&gt;&lt;a href=&#34;#七、排错方法&#34; class=&#34;headerlink&#34; title=&#34;七、排错方法&#34;&gt;&lt;/a&gt;&lt;strong&gt;七、排错方法&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;检查动态库是否存在&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldconfig &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; libhello&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证动态库路径是否正确&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ldd ./main&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;动态库无法加载时&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查是否添加了正确的路径到 &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;检查是否运行了 &lt;code&gt;ldconfig&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/24/linux-wen-jian-cao-zuo-ming-ling/</guid>
            <title>linux文件操作命令</title>
            <link>https://0xdadream.github.io/2024/11/24/linux-wen-jian-cao-zuo-ming-ling/</link>
            <category>命令</category>
            <pubDate>Sun, 24 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux文件操作命令&#34;&gt;&lt;a href=&#34;#linux文件操作命令&#34; class=&#34;headerlink&#34; title=&#34;linux文件操作命令&#34;&gt;&lt;/a&gt;linux文件操作命令&lt;/h1&gt;&lt;p&gt;以下是 Linux 系统中与文件操作相关的命令，附带常用参数的详细解释。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-查看文件和目录&#34;&gt;&lt;a href=&#34;#1-查看文件和目录&#34; class=&#34;headerlink&#34; title=&#34;1. 查看文件和目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 查看文件和目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;列出目录内容-ls&#34;&gt;&lt;a href=&#34;#列出目录内容-ls&#34; class=&#34;headerlink&#34; title=&#34;列出目录内容 (ls)&#34;&gt;&lt;/a&gt;&lt;strong&gt;列出目录内容 (&lt;code&gt;ls&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;路径&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：以详细列表形式显示，包括权限、所有者、文件大小、修改时间等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;：显示所有文件，包括以 &lt;code&gt;.&lt;/code&gt; 开头的隐藏文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;：配合 &lt;code&gt;-l&lt;/code&gt;，以人类可读的文件大小显示（如 &lt;code&gt;1K&lt;/code&gt;, &lt;code&gt;1M&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：逆序排列。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;：按时间排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-lah&lt;/span&gt; /home/user&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查看当前路径-pwd&#34;&gt;&lt;a href=&#34;#查看当前路径-pwd&#34; class=&#34;headerlink&#34; title=&#34;查看当前路径 (pwd)&#34;&gt;&lt;/a&gt;&lt;strong&gt;查看当前路径 (&lt;code&gt;pwd&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;pwd&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;输出当前工作目录的完整路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-创建文件和目录&#34;&gt;&lt;a href=&#34;#2-创建文件和目录&#34; class=&#34;headerlink&#34; title=&#34;2. 创建文件和目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 创建文件和目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;创建文件-touch&#34;&gt;&lt;a href=&#34;#创建文件-touch&#34; class=&#34;headerlink&#34; title=&#34;创建文件 (touch)&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建文件 (&lt;code&gt;touch&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;功能：创建一个空文件或更新已有文件的时间戳。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建目录-mkdir&#34;&gt;&lt;a href=&#34;#创建目录-mkdir&#34; class=&#34;headerlink&#34; title=&#34;创建目录 (mkdir)&#34;&gt;&lt;/a&gt;&lt;strong&gt;创建目录 (&lt;code&gt;mkdir&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 目录名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：递归创建目录。如果父目录不存在，会自动创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; /home/user/project/logs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-查看文件内容&#34;&gt;&lt;a href=&#34;#3-查看文件内容&#34; class=&#34;headerlink&#34; title=&#34;3. 查看文件内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 查看文件内容&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;显示文件内容-cat&#34;&gt;&lt;a href=&#34;#显示文件内容-cat&#34; class=&#34;headerlink&#34; title=&#34;显示文件内容 (cat)&#34;&gt;&lt;/a&gt;&lt;strong&gt;显示文件内容 (&lt;code&gt;cat&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：显示行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;：显示所有字符，包括不可见字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分页查看-less-和-more&#34;&gt;&lt;a href=&#34;#分页查看-less-和-more&#34; class=&#34;headerlink&#34; title=&#34;分页查看 (less 和 more)&#34;&gt;&lt;/a&gt;&lt;strong&gt;分页查看 (&lt;code&gt;less&lt;/code&gt; 和 &lt;code&gt;more&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;less：分页查看，支持向前滚动。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;less&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;more：逐页查看，按空格翻页。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-编辑文件&#34;&gt;&lt;a href=&#34;#4-编辑文件&#34; class=&#34;headerlink&#34; title=&#34;4. 编辑文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 编辑文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;简单编辑器-nano&#34;&gt;&lt;a href=&#34;#简单编辑器-nano&#34; class=&#34;headerlink&#34; title=&#34;简单编辑器 (nano)&#34;&gt;&lt;/a&gt;&lt;strong&gt;简单编辑器 (&lt;code&gt;nano&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;使用快捷键（如 &lt;code&gt;Ctrl+O&lt;/code&gt; 保存，&lt;code&gt;Ctrl+X&lt;/code&gt; 退出）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;高级编辑器-vim&#34;&gt;&lt;a href=&#34;#高级编辑器-vim&#34; class=&#34;headerlink&#34; title=&#34;高级编辑器 (vim)&#34;&gt;&lt;/a&gt;&lt;strong&gt;高级编辑器 (&lt;code&gt;vim&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;基本模式：&lt;ul&gt;
&lt;li&gt;按 &lt;code&gt;i&lt;/code&gt; 进入插入模式。&lt;/li&gt;
&lt;li&gt;编辑完成后按 &lt;code&gt;Esc&lt;/code&gt;，输入 &lt;code&gt;:wq&lt;/code&gt; 保存并退出。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-复制、移动和重命名文件&#34;&gt;&lt;a href=&#34;#5-复制、移动和重命名文件&#34; class=&#34;headerlink&#34; title=&#34;5. 复制、移动和重命名文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 复制、移动和重命名文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;复制文件和目录-cp&#34;&gt;&lt;a href=&#34;#复制文件和目录-cp&#34; class=&#34;headerlink&#34; title=&#34;复制文件和目录 (cp)&#34;&gt;&lt;/a&gt;&lt;strong&gt;复制文件和目录 (&lt;code&gt;cp&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 源文件 目标文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：递归复制目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;：保留文件属性（权限、时间戳等）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：覆盖前提示确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：显示详细过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rp&lt;/span&gt; source_dir/ target_dir/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;移动和重命名-mv&#34;&gt;&lt;a href=&#34;#移动和重命名-mv&#34; class=&#34;headerlink&#34; title=&#34;移动和重命名 (mv)&#34;&gt;&lt;/a&gt;&lt;strong&gt;移动和重命名 (&lt;code&gt;mv&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 源文件 目标文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：覆盖前提示确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：显示详细过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; file1.txt file2.txt  &lt;span class=&#34;token comment&#34;&gt;# 重命名&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; file.txt /path/to/dir/  &lt;span class=&#34;token comment&#34;&gt;# 移动文件&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-删除文件和目录&#34;&gt;&lt;a href=&#34;#6-删除文件和目录&#34; class=&#34;headerlink&#34; title=&#34;6. 删除文件和目录&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 删除文件和目录&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;删除文件和目录-rm&#34;&gt;&lt;a href=&#34;#删除文件和目录-rm&#34; class=&#34;headerlink&#34; title=&#34;删除文件和目录 (rm)&#34;&gt;&lt;/a&gt;&lt;strong&gt;删除文件和目录 (&lt;code&gt;rm&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件/目录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：递归删除目录及其内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;：强制删除，无需确认。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：删除前提示确认。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /tmp/test&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-搜索文件和内容&#34;&gt;&lt;a href=&#34;#7-搜索文件和内容&#34; class=&#34;headerlink&#34; title=&#34;7. 搜索文件和内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 搜索文件和内容&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;查找文件-find&#34;&gt;&lt;a href=&#34;#查找文件-find&#34; class=&#34;headerlink&#34; title=&#34;查找文件 (find)&#34;&gt;&lt;/a&gt;&lt;strong&gt;查找文件 (&lt;code&gt;find&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;路径&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;条件&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;操作&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-name&lt;/code&gt;：按文件名查找（支持通配符）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-type&lt;/code&gt;：按类型查找，如 &lt;code&gt;f&lt;/code&gt;（文件），&lt;code&gt;d&lt;/code&gt;（目录）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-size&lt;/code&gt;：按文件大小查找，如 &lt;code&gt;+1M&lt;/code&gt;（大于1MB）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-mtime&lt;/code&gt;：按修改时间查找，如 &lt;code&gt;-7&lt;/code&gt;（7天内修改的文件）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /home &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*.txt&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;搜索文件内容-grep&#34;&gt;&lt;a href=&#34;#搜索文件内容-grep&#34; class=&#34;headerlink&#34; title=&#34;搜索文件内容 (grep)&#34;&gt;&lt;/a&gt;&lt;strong&gt;搜索文件内容 (&lt;code&gt;grep&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;关键字&#34;&lt;/span&gt; 文件名&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;：忽略大小写。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;：递归搜索目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：显示行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rn&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;error&#34;&lt;/span&gt; /var/log/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-修改文件权限&#34;&gt;&lt;a href=&#34;#8-修改文件权限&#34; class=&#34;headerlink&#34; title=&#34;8. 修改文件权限&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. 修改文件权限&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;修改权限-chmod&#34;&gt;&lt;a href=&#34;#修改权限-chmod&#34; class=&#34;headerlink&#34; title=&#34;修改权限 (chmod)&#34;&gt;&lt;/a&gt;&lt;strong&gt;修改权限 (&lt;code&gt;chmod&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;模式&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;权限格式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;：用户，&lt;code&gt;g&lt;/code&gt;：组，&lt;code&gt;o&lt;/code&gt;：其他，&lt;code&gt;a&lt;/code&gt;：全部。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;：添加权限，&lt;code&gt;-&lt;/code&gt;：删除权限，&lt;code&gt;=&lt;/code&gt;：设置权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+x script.sh    &lt;span class=&#34;token comment&#34;&gt;# 给用户添加执行权限&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; file.txt     &lt;span class=&#34;token comment&#34;&gt;# 设置读写执行权限&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修改所有者-chown&#34;&gt;&lt;a href=&#34;#修改所有者-chown&#34; class=&#34;headerlink&#34; title=&#34;修改所有者 (chown)&#34;&gt;&lt;/a&gt;&lt;strong&gt;修改所有者 (&lt;code&gt;chown&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 用户:组 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; user:group file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;9-压缩和解压文件&#34;&gt;&lt;a href=&#34;#9-压缩和解压文件&#34; class=&#34;headerlink&#34; title=&#34;9. 压缩和解压文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;9. 压缩和解压文件&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;压缩文件&#34;&gt;&lt;a href=&#34;#压缩文件&#34; class=&#34;headerlink&#34; title=&#34;压缩文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;压缩文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tar：创建归档文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-czvf&lt;/span&gt; archive.tar.gz 文件/目录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;zip：压缩为 ZIP 格式。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;zip&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; archive.zip 文件/目录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解压文件&#34;&gt;&lt;a href=&#34;#解压文件&#34; class=&#34;headerlink&#34; title=&#34;解压文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;解压文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;tar：解压 .tar.gz文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xzvf&lt;/span&gt; archive.tar.gz&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unzip：解压 ZIP 文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;unzip&lt;/span&gt; archive.zip&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;10-其他常用操作&#34;&gt;&lt;a href=&#34;#10-其他常用操作&#34; class=&#34;headerlink&#34; title=&#34;10. 其他常用操作&#34;&gt;&lt;/a&gt;&lt;strong&gt;10. 其他常用操作&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;统计文件行、词、字符数-wc&#34;&gt;&lt;a href=&#34;#统计文件行、词、字符数-wc&#34; class=&#34;headerlink&#34; title=&#34;统计文件行、词、字符数 (wc)&#34;&gt;&lt;/a&gt;&lt;strong&gt;统计文件行、词、字符数 (&lt;code&gt;wc&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;常用选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;：统计行数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;：统计单词数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;：统计字节数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;监视文件内容-tail-和-head&#34;&gt;&lt;a href=&#34;#监视文件内容-tail-和-head&#34; class=&#34;headerlink&#34; title=&#34;监视文件内容 (tail 和 head)&#34;&gt;&lt;/a&gt;&lt;strong&gt;监视文件内容 (&lt;code&gt;tail&lt;/code&gt; 和 &lt;code&gt;head&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;显示文件头部：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;动态监视文件末尾：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;在 Linux 中，&lt;strong&gt;管道符 (&lt;code&gt;|&lt;/code&gt;)&lt;/strong&gt; 是一种强大的工具，用于将一个命令的输出传递给另一个命令作为输入。以下是管道符的详细介绍和常见使用场景。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;管道符语法&#34;&gt;&lt;a href=&#34;#管道符语法&#34; class=&#34;headerlink&#34; title=&#34;管道符语法&#34;&gt;&lt;/a&gt;&lt;strong&gt;管道符语法&lt;/strong&gt;&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;command1 &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; command2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;command1&lt;/code&gt;：第一个命令，生成输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt;：管道符，将第一个命令的输出传递给第二个命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;command2&lt;/code&gt;：第二个命令，将接收的输入进行处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;常见场景和示例&#34;&gt;&lt;a href=&#34;#常见场景和示例&#34; class=&#34;headerlink&#34; title=&#34;常见场景和示例&#34;&gt;&lt;/a&gt;&lt;strong&gt;常见场景和示例&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-结合-grep-搜索内容&#34;&gt;&lt;a href=&#34;#1-结合-grep-搜索内容&#34; class=&#34;headerlink&#34; title=&#34;1. 结合 grep 搜索内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 结合 &lt;code&gt;grep&lt;/code&gt; 搜索内容&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查找某目录中包含特定关键词的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;filename&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：列出当前目录下包含 “log” 的文件名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;log&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-结合-sort-排序&#34;&gt;&lt;a href=&#34;#2-结合-sort-排序&#34; class=&#34;headerlink&#34; title=&#34;2. 结合 sort 排序&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 结合 &lt;code&gt;sort&lt;/code&gt; 排序&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;按文件大小排序（结合 ls -l）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-k&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-k 5&lt;/code&gt;：按第 5 列（文件大小）排序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;：按数值排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-结合-wc-统计&#34;&gt;&lt;a href=&#34;#3-结合-wc-统计&#34; class=&#34;headerlink&#34; title=&#34;3. 结合 wc 统计&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 结合 &lt;code&gt;wc&lt;/code&gt; 统计&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;统计当前目录下的文件数量：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;统计文件中的行数、单词数和字符数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-结合-head-和-tail-查看内容&#34;&gt;&lt;a href=&#34;#4-结合-head-和-tail-查看内容&#34; class=&#34;headerlink&#34; title=&#34;4. 结合 head 和 tail 查看内容&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 结合 &lt;code&gt;head&lt;/code&gt; 和 &lt;code&gt;tail&lt;/code&gt; 查看内容&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看文件的前 10 行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看文件的最后 10 行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-结合-cut-提取字段&#34;&gt;&lt;a href=&#34;#5-结合-cut-提取字段&#34; class=&#34;headerlink&#34; title=&#34;5. 结合 cut 提取字段&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 结合 &lt;code&gt;cut&lt;/code&gt; 提取字段&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;从 ls -l中提取文件权限：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cut&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d &#39; &#39;&lt;/code&gt;：以空格为分隔符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f 1&lt;/code&gt;：提取第 1 列。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-结合-awk-进行格式化&#34;&gt;&lt;a href=&#34;#6-结合-awk-进行格式化&#34; class=&#34;headerlink&#34; title=&#34;6. 结合 awk 进行格式化&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 结合 &lt;code&gt;awk&lt;/code&gt; 进行格式化&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;提取文件名和大小：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;awk&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;{print $5, $9}&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$5&lt;/code&gt;：表示文件大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$9&lt;/code&gt;：表示文件名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-结合-uniq-去重&#34;&gt;&lt;a href=&#34;#7-结合-uniq-去重&#34; class=&#34;headerlink&#34; title=&#34;7. 结合 uniq 去重&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 结合 &lt;code&gt;uniq&lt;/code&gt; 去重&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;统计文件中的唯一单词（结合 sort 和 uniq）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uniq&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-结合-tee-保存和显示&#34;&gt;&lt;a href=&#34;#8-结合-tee-保存和显示&#34; class=&#34;headerlink&#34; title=&#34;8. 结合 tee 保存和显示&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. 结合 &lt;code&gt;tee&lt;/code&gt; 保存和显示&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将命令输出保存到文件，同时在终端显示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-结合-xargs-执行批量命令&#34;&gt;&lt;a href=&#34;#9-结合-xargs-执行批量命令&#34; class=&#34;headerlink&#34; title=&#34;9. 结合 xargs 执行批量命令&#34;&gt;&lt;/a&gt;&lt;strong&gt;9. 结合 &lt;code&gt;xargs&lt;/code&gt; 执行批量命令&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除包含特定关键词的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;temp&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xargs&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将文本文件中的内容逐行作为命令行参数：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; files.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xargs&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-I&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; /backup/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-动态监控日志文件&#34;&gt;&lt;a href=&#34;#10-动态监控日志文件&#34; class=&#34;headerlink&#34; title=&#34;10. 动态监控日志文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;10. 动态监控日志文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;监控日志文件中包含错误的行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; /var/log/syslog &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;管道符结合其他符号&#34;&gt;&lt;a href=&#34;#管道符结合其他符号&#34; class=&#34;headerlink&#34; title=&#34;管道符结合其他符号&#34;&gt;&lt;/a&gt;&lt;strong&gt;管道符结合其他符号&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;与重定向符号一起使用&#34;&gt;&lt;a href=&#34;#与重定向符号一起使用&#34; class=&#34;headerlink&#34; title=&#34;与重定向符号一起使用&#34;&gt;&lt;/a&gt;&lt;strong&gt;与重定向符号一起使用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;将管道符的输出保存到文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;txt&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; result.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;多重管道&#34;&gt;&lt;a href=&#34;#多重管道&#34; class=&#34;headerlink&#34; title=&#34;多重管道&#34;&gt;&lt;/a&gt;&lt;strong&gt;多重管道&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;将多个命令串联：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; file.txt &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;keyword&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uniq&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-nr&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;功能：&lt;ol&gt;
&lt;li&gt;搜索文件中的 &lt;code&gt;keyword&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;排序结果。&lt;/li&gt;
&lt;li&gt;去重并统计出现次数。&lt;/li&gt;
&lt;li&gt;按出现次数逆序排序。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;在 Linux 中，&lt;strong&gt;重定向&lt;/strong&gt; 是将命令的输出或输入重定向到文件或其他设备的操作。它通常用于保存输出、将错误输出单独处理或读取文件作为输入。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-输出重定向&#34;&gt;&lt;a href=&#34;#1-输出重定向&#34; class=&#34;headerlink&#34; title=&#34;1. 输出重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 输出重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;标准输出&#34;&gt;&lt;a href=&#34;#标准输出&#34; class=&#34;headerlink&#34; title=&#34;标准输出 (&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;标准输出 (&lt;code&gt;&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将命令的标准输出（正常输出）重定向到文件。&lt;/li&gt;
&lt;li&gt;如果文件已存在，会&lt;strong&gt;覆盖&lt;/strong&gt;原文件内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 ls 命令的输出保存到 output.txt文件中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;追加输出&#34;&gt;&lt;a href=&#34;#追加输出&#34; class=&#34;headerlink&#34; title=&#34;追加输出 (&gt;&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;追加输出 (&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将命令的标准输出&lt;strong&gt;追加&lt;/strong&gt;到文件末尾，而不是覆盖。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;New line&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将字符串 “New line” 添加到 output.txt 的末尾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-错误重定向&#34;&gt;&lt;a href=&#34;#2-错误重定向&#34; class=&#34;headerlink&#34; title=&#34;2. 错误重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 错误重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;标准错误输出-2&#34;&gt;&lt;a href=&#34;#标准错误输出-2&#34; class=&#34;headerlink&#34; title=&#34;标准错误输出 (2&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;标准错误输出 (&lt;code&gt;2&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将命令的错误输出（标准错误）重定向到文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将错误消息保存到 error.txt。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;追加错误输出-2&#34;&gt;&lt;a href=&#34;#追加错误输出-2&#34; class=&#34;headerlink&#34; title=&#34;追加错误输出 (2&gt;&gt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;追加错误输出 (&lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将错误输出&lt;strong&gt;追加&lt;/strong&gt;到文件末尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;3-合并标准输出和错误输出&#34;&gt;&lt;a href=&#34;#3-合并标准输出和错误输出&#34; class=&#34;headerlink&#34; title=&#34;3. 合并标准输出和错误输出&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 合并标准输出和错误输出&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;将标准输出和标准错误合并到同一文件&#34;&gt;&lt;a href=&#34;#将标准输出和标准错误合并到同一文件&#34; class=&#34;headerlink&#34; title=&#34;将标准输出和标准错误合并到同一文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;将标准输出和标准错误合并到同一文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; 将正常输出和错误输出都保存到一个文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; existing_file nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&lt;/span&gt; all_output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;追加合并输出&#34;&gt;&lt;a href=&#34;#追加合并输出&#34; class=&#34;headerlink&#34; title=&#34;追加合并输出&#34;&gt;&lt;/a&gt;&lt;strong&gt;追加合并输出&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/code&gt; 将正常输出和错误输出都追加到一个文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;4-输入重定向&#34;&gt;&lt;a href=&#34;#4-输入重定向&#34; class=&#34;headerlink&#34; title=&#34;4. 输入重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 输入重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;将文件作为命令的输入&#34;&gt;&lt;a href=&#34;#将文件作为命令的输入&#34; class=&#34;headerlink&#34; title=&#34;将文件作为命令的输入 (&lt;)&#34;&gt;&lt;/a&gt;&lt;strong&gt;将文件作为命令的输入 (&lt;code&gt;&amp;lt;&lt;/code&gt;)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 将文件内容作为命令的输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; input.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;统计 input.txt 的行数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-同时处理输出和错误&#34;&gt;&lt;a href=&#34;#5-同时处理输出和错误&#34; class=&#34;headerlink&#34; title=&#34;5. 同时处理输出和错误&#34;&gt;&lt;/a&gt;&lt;strong&gt;5. 同时处理输出和错误&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;将标准输出和错误分别保存到不同文件&#34;&gt;&lt;a href=&#34;#将标准输出和错误分别保存到不同文件&#34; class=&#34;headerlink&#34; title=&#34;将标准输出和错误分别保存到不同文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;将标准输出和错误分别保存到不同文件&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;&amp;gt; file&lt;/code&gt; 和 &lt;code&gt;2&amp;gt; error_file&lt;/code&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; output.txt &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; error.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; existing_file nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; stdout.txt &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; stderr.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-特殊重定向&#34;&gt;&lt;a href=&#34;#6-特殊重定向&#34; class=&#34;headerlink&#34; title=&#34;6. 特殊重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;6. 特殊重定向&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&#34;丢弃输出到-dev-null&#34;&gt;&lt;a href=&#34;#丢弃输出到-dev-null&#34; class=&#34;headerlink&#34; title=&#34;丢弃输出到 /dev/null&#34;&gt;&lt;/a&gt;&lt;strong&gt;丢弃输出到 &lt;code&gt;/dev/null&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/dev/null&lt;/code&gt; 是一个特殊设备文件，重定向到它的内容会被丢弃。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;丢弃标准输出：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; /dev/null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;丢弃标准错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; /dev/null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时丢弃标准输出和错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;gt;&lt;/span&gt; /dev/null&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-使用-tee-同时输出到文件和终端&#34;&gt;&lt;a href=&#34;#7-使用-tee-同时输出到文件和终端&#34; class=&#34;headerlink&#34; title=&#34;7. 使用 tee 同时输出到文件和终端&#34;&gt;&lt;/a&gt;&lt;strong&gt;7. 使用 &lt;code&gt;tee&lt;/code&gt; 同时输出到文件和终端&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tee&lt;/code&gt; 命令可以将输入同时保存到文件和终端。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;ls&lt;/code&gt; 的输出显示在终端的同时保存到 &lt;code&gt;output.txt&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;追加模式：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;8-重定向符号总结&#34;&gt;&lt;a href=&#34;#8-重定向符号总结&#34; class=&#34;headerlink&#34; title=&#34;8. 重定向符号总结&#34;&gt;&lt;/a&gt;&lt;strong&gt;8. 重定向符号总结&lt;/strong&gt;&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出重定向到文件，覆盖文件内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出追加到文件末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将错误输出重定向到文件，覆盖文件内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将错误输出追加到文件末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出和错误输出重定向到同一文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将标准输出和错误输出追加到同一文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将文件内容作为命令的标准输入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/dev/null&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;丢弃所有输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;td&gt;tee`&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例：组合重定向&#34;&gt;&lt;a href=&#34;#示例：组合重定向&#34; class=&#34;headerlink&#34; title=&#34;示例：组合重定向&#34;&gt;&lt;/a&gt;&lt;strong&gt;示例：组合重定向&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;同时保存输出和错误到不同文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; existing_file nonexistent_file &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; stdout.txt &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; stderr.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同时显示输出在终端，并保存到文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; output.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;统计某文件夹的文件数量，但丢弃错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /path/to/dir &lt;span class=&#34;token operator&#34;&gt;&lt;span class=&#34;token file-descriptor important&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;/span&gt; /dev/null &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/23/bian-yi-shi-yong/</guid>
            <title>编译教程</title>
            <link>https://0xdadream.github.io/2024/11/23/bian-yi-shi-yong/</link>
            <category>命令</category>
            <pubDate>Sat, 23 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;编译教程&#34;&gt;&lt;a href=&#34;#编译教程&#34; class=&#34;headerlink&#34; title=&#34;编译教程&#34;&gt;&lt;/a&gt;编译教程&lt;/h1&gt;&lt;p&gt;下面是一个&lt;strong&gt;完整的从源码编译安装软件的教程&lt;/strong&gt;，涵盖了从环境准备到配置、编译、安装的所有可能会用到的步骤和细节，适用于各种类型的软件包。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、环境准备&#34;&gt;&lt;a href=&#34;#一、环境准备&#34; class=&#34;headerlink&#34; title=&#34;一、环境准备&#34;&gt;&lt;/a&gt;一、环境准备&lt;/h2&gt;&lt;p&gt;在开始编译源码之前，确保系统满足以下条件：&lt;/p&gt;
&lt;h3 id=&#34;1-安装必要工具&#34;&gt;&lt;a href=&#34;#1-安装必要工具&#34; class=&#34;headerlink&#34; title=&#34;1. 安装必要工具&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;安装必要工具&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 Linux 环境下，通常需要以下工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编译器&lt;/strong&gt;: &lt;code&gt;gcc&lt;/code&gt; 或 &lt;code&gt;clang&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建工具&lt;/strong&gt;: &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他依赖&lt;/strong&gt;: &lt;code&gt;autoconf&lt;/code&gt;, &lt;code&gt;automake&lt;/code&gt;, &lt;code&gt;libtool&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于基于 Debian 的系统（如 Ubuntu）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; build-essential autoconf automake libtool pkg-config&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对于基于 RHEL 的系统（如 CentOS）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum groupinstall &lt;span class=&#34;token string&#34;&gt;&#34;Development Tools&#34;&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; autoconf automake libtool pkgconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-下载源码&#34;&gt;&lt;a href=&#34;#2-下载源码&#34; class=&#34;headerlink&#34; title=&#34;2. 下载源码&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;下载源码&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;源码通常以 &lt;code&gt;.tar.gz&lt;/code&gt; 或 &lt;code&gt;.tar.bz2&lt;/code&gt; 的形式提供：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://example.com/software-1.0.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xzvf&lt;/span&gt; software-1.0.tar.gz
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; software-1.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;二、运行-configure&#34;&gt;&lt;a href=&#34;#二、运行-configure&#34; class=&#34;headerlink&#34; title=&#34;二、运行 ./configure&#34;&gt;&lt;/a&gt;二、运行 &lt;code&gt;./configure&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;./configure&lt;/code&gt; 是自动生成的配置脚本，用于检查系统环境，生成适合当前系统的编译配置。以下是配置过程的所有选项说明。&lt;/p&gt;
&lt;h3 id=&#34;1-路径相关选项&#34;&gt;&lt;a href=&#34;#1-路径相关选项&#34; class=&#34;headerlink&#34; title=&#34;1. 路径相关选项&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;路径相关选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--prefix=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;软件安装的根目录&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/usr/local&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--prefix=/opt/myapp&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--exec-prefix=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;架构相关文件的安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$prefix&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--exec-prefix=/usr&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--bindir=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可执行文件安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$exec_prefix/bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--bindir=/usr/bin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--libdir=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;库文件安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$exec_prefix/lib&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--libdir=/opt/myapp/lib&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--includedir=DIR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;头文件安装路径&lt;/td&gt;
&lt;td&gt;&lt;code&gt;$prefix/include&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--includedir=/opt/include&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp &lt;span class=&#34;token parameter variable&#34;&gt;--bindir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp/bin &lt;span class=&#34;token parameter variable&#34;&gt;--libdir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp/lib&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;prefix-的用途&#34;&gt;&lt;a href=&#34;#prefix-的用途&#34; class=&#34;headerlink&#34; title=&#34;prefix 的用途&#34;&gt;&lt;/a&gt;&lt;code&gt;prefix&lt;/code&gt; 的用途&lt;/h4&gt;&lt;p&gt;&lt;code&gt;prefix&lt;/code&gt; 是通过 &lt;code&gt;./configure --prefix=DIR&lt;/code&gt; 选项指定的路径。其主要作用是告诉构建系统，安装的文件应该放在哪个目录下。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$prefix&lt;/code&gt; 的默认值通常是：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/usr/local&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你运行以下命令：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那么，安装路径会变成以下结构：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/opt/myapp/bin       # 可执行文件
/opt/myapp/lib       # 库文件
/opt/myapp/include   # 头文件
/opt/myapp/share     # 共享资源（如文档、手册）&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;如何修改-prefix&#34;&gt;&lt;a href=&#34;#如何修改-prefix&#34; class=&#34;headerlink&#34; title=&#34;如何修改 $prefix&#34;&gt;&lt;/a&gt;如何修改 &lt;code&gt;$prefix&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在配置阶段指定通过 &lt;code&gt;./configure&lt;/code&gt; 的 &lt;code&gt;--prefix&lt;/code&gt; 参数直接指定：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/custom/path&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果不指定，系统会默认安装到 &lt;code&gt;/usr/local&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;# 文件安装到 /usr/local/...&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;prefix-的实际应用&#34;&gt;&lt;a href=&#34;#prefix-的实际应用&#34; class=&#34;headerlink&#34; title=&#34;$prefix 的实际应用&#34;&gt;&lt;/a&gt;&lt;code&gt;$prefix&lt;/code&gt; 的实际应用&lt;/h4&gt;&lt;p&gt;假设我们正在安装一个名为 &lt;code&gt;myapp&lt;/code&gt; 的软件：&lt;/p&gt;
&lt;p&gt;示例 1: 默认安装到 &lt;code&gt;/usr/local&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，文件路径如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/usr/local/bin/myapp        # 可执行文件
/usr/local/lib/libmyapp.so  # 动态库
/usr/local/include/myapp.h  # 头文件
/usr/local/share/myapp      # 共享数据&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例 2: 自定义安装路径&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，文件路径如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;/opt/myapp/bin/myapp        # 可执行文件
/opt/myapp/lib/libmyapp.so  # 动态库
/opt/myapp/include/myapp.h  # 头文件
/opt/myapp/share/myapp      # 共享数据&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;为什么-prefix-很重要&#34;&gt;&lt;a href=&#34;#为什么-prefix-很重要&#34; class=&#34;headerlink&#34; title=&#34;为什么 $prefix 很重要&#34;&gt;&lt;/a&gt;为什么 &lt;code&gt;$prefix&lt;/code&gt; 很重要&lt;/h4&gt;&lt;h5 id=&#34;1-避免覆盖系统文件&#34;&gt;&lt;a href=&#34;#1-避免覆盖系统文件&#34; class=&#34;headerlink&#34; title=&#34;1. 避免覆盖系统文件&#34;&gt;&lt;/a&gt;1. 避免覆盖系统文件&lt;/h5&gt;&lt;p&gt;默认路径 &lt;code&gt;/usr/local&lt;/code&gt; 不会影响系统自带的软件，安全且独立。&lt;/p&gt;
&lt;h5 id=&#34;2-方便不同版本共存&#34;&gt;&lt;a href=&#34;#2-方便不同版本共存&#34; class=&#34;headerlink&#34; title=&#34;2. 方便不同版本共存&#34;&gt;&lt;/a&gt;2. 方便不同版本共存&lt;/h5&gt;&lt;p&gt;通过为不同版本指定不同的 &lt;code&gt;--prefix&lt;/code&gt;，可以在同一台机器上运行多版本的软件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp-1.0
./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp-2.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-灵活管理软件&#34;&gt;&lt;a href=&#34;#3-灵活管理软件&#34; class=&#34;headerlink&#34; title=&#34;3. 灵活管理软件&#34;&gt;&lt;/a&gt;3. 灵活管理软件&lt;/h5&gt;&lt;p&gt;如果安装路径是自定义的，例如 &lt;code&gt;/opt/myapp&lt;/code&gt;，删除整个软件只需移除该目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-rf&lt;/span&gt; /opt/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h4 id=&#34;如何查看-prefix-的值&#34;&gt;&lt;a href=&#34;#如何查看-prefix-的值&#34; class=&#34;headerlink&#34; title=&#34;如何查看 $prefix 的值&#34;&gt;&lt;/a&gt;如何查看 &lt;code&gt;$prefix&lt;/code&gt; 的值&lt;/h4&gt;&lt;p&gt;配置完成后，&lt;code&gt;$prefix&lt;/code&gt; 的值通常会被记录在 &lt;code&gt;Makefile&lt;/code&gt; 中，你可以通过以下方法查看：&lt;/p&gt;
&lt;h5 id=&#34;1-直接查看-Makefile&#34;&gt;&lt;a href=&#34;#1-直接查看-Makefile&#34; class=&#34;headerlink&#34; title=&#34;1. 直接查看 Makefile&#34;&gt;&lt;/a&gt;1. 直接查看 &lt;code&gt;Makefile&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;打开 &lt;code&gt;Makefile&lt;/code&gt;，找到 &lt;code&gt;prefix&lt;/code&gt; 的定义：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;^prefix&#34;&lt;/span&gt; Makefile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-使用-config-log&#34;&gt;&lt;a href=&#34;#2-使用-config-log&#34; class=&#34;headerlink&#34; title=&#34;2. 使用 config.log&#34;&gt;&lt;/a&gt;2. 使用 &lt;code&gt;config.log&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;查看配置过程生成的日志文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;prefix&#34;&lt;/span&gt; config.log&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-功能启用-禁用选项&#34;&gt;&lt;a href=&#34;#2-功能启用-禁用选项&#34; class=&#34;headerlink&#34; title=&#34;2. 功能启用/禁用选项&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;功能启用/禁用选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--enable-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启用某个功能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--enable-ssl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--disable-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;禁用某个功能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--disable-debug&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--with-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启用功能，并指定路径或配置&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--with-ssl=/opt/openssl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--without-FEATURE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;禁用功能&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--without-zlib&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure --enable-optimizations --disable-debug --with-ssl&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/openssl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-编译器相关选项&#34;&gt;&lt;a href=&#34;#3-编译器相关选项&#34; class=&#34;headerlink&#34; title=&#34;3. 编译器相关选项&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;编译器相关选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CC=COMPILER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定 C 编译器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CC=gcc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CXX=COMPILER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定 C++ 编译器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CXX=g++&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 C 编译器设置标志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CFLAGS=&#34;-O2 -Wall&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CXXFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为 C++ 编译器设置标志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CXXFLAGS=&#34;-O2 -Wall&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LDFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置链接器标志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LDFLAGS=&#34;-L/usr/lib&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CPPFLAGS=FLAGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置预处理器标志（头文件路径等）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CPPFLAGS=&#34;-I/usr/include&#34;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token assign-left variable&#34;&gt;CC&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;gcc &lt;span class=&#34;token assign-left variable&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-O2 -Wall&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-L/usr/local/lib&#34;&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;CPPFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-I/usr/local/include&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-调试与日志选项&#34;&gt;&lt;a href=&#34;#4-调试与日志选项&#34; class=&#34;headerlink&#34; title=&#34;4. 调试与日志选项&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;调试与日志选项&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--enable-debug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启用调试模式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--enable-debug&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--disable-debug&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;禁用调试模式&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--disable-debug&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--quiet&lt;/code&gt; 或 &lt;code&gt;--silent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;减少输出&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--quiet&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;显示详细输出&lt;/td&gt;
&lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;5-查看所有参数&#34;&gt;&lt;a href=&#34;#5-查看所有参数&#34; class=&#34;headerlink&#34; title=&#34;5.查看所有参数&#34;&gt;&lt;/a&gt;5.查看所有参数&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例如得到&lt;code&gt;./configure --python=路径&lt;/code&gt;，可以指定安装到指定python版本库中&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、编译源码&#34;&gt;&lt;a href=&#34;#三、编译源码&#34; class=&#34;headerlink&#34; title=&#34;三、编译源码&#34;&gt;&lt;/a&gt;三、编译源码&lt;/h2&gt;&lt;p&gt;运行 &lt;code&gt;make&lt;/code&gt; 命令开始编译：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;加速编译&lt;/strong&gt;&lt;br&gt;利用多核 CPU：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; -j&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;nproc&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;常见问题&lt;/strong&gt;&lt;br&gt;如果出现依赖问题，请根据报错信息安装缺失的库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、测试编译结果&#34;&gt;&lt;a href=&#34;#四、测试编译结果&#34; class=&#34;headerlink&#34; title=&#34;四、测试编译结果&#34;&gt;&lt;/a&gt;四、测试编译结果&lt;/h2&gt;&lt;p&gt;在安装前，可以运行测试（如果源码支持）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; check&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;五、安装编译结果&#34;&gt;&lt;a href=&#34;#五、安装编译结果&#34; class=&#34;headerlink&#34; title=&#34;五、安装编译结果&#34;&gt;&lt;/a&gt;五、安装编译结果&lt;/h2&gt;&lt;p&gt;运行 &lt;code&gt;make install&lt;/code&gt; 安装编译完成的文件到目标路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成后，检查安装路径下是否有生成的文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /opt/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;六、卸载（可选）&#34;&gt;&lt;a href=&#34;#六、卸载（可选）&#34; class=&#34;headerlink&#34; title=&#34;六、卸载（可选）&#34;&gt;&lt;/a&gt;六、卸载（可选）&lt;/h2&gt;&lt;p&gt;如果需要卸载，使用 &lt;code&gt;make uninstall&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; uninstall&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;七、完整操作示例&#34;&gt;&lt;a href=&#34;#七、完整操作示例&#34; class=&#34;headerlink&#34; title=&#34;七、完整操作示例&#34;&gt;&lt;/a&gt;七、完整操作示例&lt;/h2&gt;&lt;p&gt;以下是完整的从下载到安装的操作流程示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载源码&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://example.com/software-1.0.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-xzvf&lt;/span&gt; software-1.0.tar.gz
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; software-1.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行配置脚本&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &lt;span class=&#34;token parameter variable&#34;&gt;--prefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp --enable-optimizations --with-ssl&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/openssl &lt;span class=&#34;token assign-left variable&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-O2 -Wall&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译源码&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; -j&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;nproc&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行测试&lt;/strong&gt;（可选）:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;test&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装程序&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;验证安装&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/opt/myapp/bin/software &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、常见问题及解决方案&#34;&gt;&lt;a href=&#34;#八、常见问题及解决方案&#34; class=&#34;headerlink&#34; title=&#34;八、常见问题及解决方案&#34;&gt;&lt;/a&gt;八、常见问题及解决方案&lt;/h2&gt;&lt;h3 id=&#34;1-缺少依赖库&#34;&gt;&lt;a href=&#34;#1-缺少依赖库&#34; class=&#34;headerlink&#34; title=&#34;1. 缺少依赖库&#34;&gt;&lt;/a&gt;1. 缺少依赖库&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;错误信息&lt;/strong&gt;: &lt;code&gt;configure: error: Missing library xyz&lt;/code&gt;&lt;br&gt;&lt;strong&gt;解决方法&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libxyz-dev  &lt;span class=&#34;token comment&#34;&gt;# Debian/Ubuntu&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; xyz-devel   &lt;span class=&#34;token comment&#34;&gt;# CentOS/RHEL&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-权限不足&#34;&gt;&lt;a href=&#34;#2-权限不足&#34; class=&#34;headerlink&#34; title=&#34;2. 权限不足&#34;&gt;&lt;/a&gt;2. 权限不足&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;错误信息&lt;/strong&gt;: &lt;code&gt;Permission denied&lt;/code&gt;&lt;br&gt;&lt;strong&gt;解决方法&lt;/strong&gt;:&lt;br&gt;在需要权限的命令前加 &lt;code&gt;sudo&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-环境变量问题&#34;&gt;&lt;a href=&#34;#3-环境变量问题&#34; class=&#34;headerlink&#34; title=&#34;3. 环境变量问题&#34;&gt;&lt;/a&gt;3. 环境变量问题&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题描述&lt;/strong&gt;: 安装后无法找到可执行文件。&lt;br&gt;&lt;strong&gt;解决方法&lt;/strong&gt;: 将安装路径添加到 &lt;code&gt;PATH&lt;/code&gt; 中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/opt/myapp/bin:&lt;span class=&#34;token environment constant&#34;&gt;$PATH&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;p&gt;以下是 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 的完整使用教程，包括它们的基本概念、工作原理和实际使用步骤。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、autoconf-和-automake-的简介&#34;&gt;&lt;a href=&#34;#一、autoconf-和-automake-的简介&#34; class=&#34;headerlink&#34; title=&#34;一、autoconf 和 automake 的简介&#34;&gt;&lt;/a&gt;一、&lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 的简介&lt;/h2&gt;&lt;h3 id=&#34;1-什么是-autoconf&#34;&gt;&lt;a href=&#34;#1-什么是-autoconf&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是 autoconf&#34;&gt;&lt;/a&gt;1. 什么是 &lt;code&gt;autoconf&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;autoconf&lt;/code&gt; 是一种自动生成 &lt;code&gt;configure&lt;/code&gt; 脚本的工具，主要用来检测构建系统的环境是否满足软件的依赖需求，并生成相应的配置文件（如 &lt;code&gt;Makefile&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供跨平台兼容性。&lt;/li&gt;
&lt;li&gt;检查依赖工具和库的存在。&lt;/li&gt;
&lt;li&gt;自动生成编译脚本。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-什么是-automake&#34;&gt;&lt;a href=&#34;#2-什么是-automake&#34; class=&#34;headerlink&#34; title=&#34;2. 什么是 automake&#34;&gt;&lt;/a&gt;2. 什么是 &lt;code&gt;automake&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;automake&lt;/code&gt; 是一种自动生成 &lt;code&gt;Makefile.in&lt;/code&gt; 文件的工具，它依赖于更高层次的构建规则定义文件 &lt;code&gt;Makefile.am&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简化 &lt;code&gt;Makefile&lt;/code&gt; 编写。&lt;/li&gt;
&lt;li&gt;与 &lt;code&gt;autoconf&lt;/code&gt; 配合，生成完整的构建系统。&lt;/li&gt;
&lt;li&gt;提供模块化和扩展支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、工作原理&#34;&gt;&lt;a href=&#34;#二、工作原理&#34; class=&#34;headerlink&#34; title=&#34;二、工作原理&#34;&gt;&lt;/a&gt;二、工作原理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;autoconf&lt;/code&gt; 从 &lt;code&gt;configure.ac&lt;/code&gt; 或 &lt;code&gt;configure.in&lt;/code&gt; 文件生成 &lt;code&gt;configure&lt;/code&gt; 脚本。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;automake&lt;/code&gt; 从 &lt;code&gt;Makefile.am&lt;/code&gt; 文件生成 &lt;code&gt;Makefile.in&lt;/code&gt; 文件，最终结合 &lt;code&gt;autoconf&lt;/code&gt; 的输出生成 &lt;code&gt;Makefile&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;工具链流程&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;configure.ac --&amp;gt; autoconf --&amp;gt; configure
Makefile.am  --&amp;gt; automake --&amp;gt; Makefile.in
configure + Makefile.in --&amp;gt; ./configure --&amp;gt; Makefile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;三、安装和准备环境&#34;&gt;&lt;a href=&#34;#三、安装和准备环境&#34; class=&#34;headerlink&#34; title=&#34;三、安装和准备环境&#34;&gt;&lt;/a&gt;三、安装和准备环境&lt;/h2&gt;&lt;h3 id=&#34;1-安装工具&#34;&gt;&lt;a href=&#34;#1-安装工具&#34; class=&#34;headerlink&#34; title=&#34;1. 安装工具&#34;&gt;&lt;/a&gt;1. 安装工具&lt;/h3&gt;&lt;p&gt;在 Linux 环境中安装 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; autoconf automake  &lt;span class=&#34;token comment&#34;&gt;# Debian/Ubuntu&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; autoconf automake     &lt;span class=&#34;token comment&#34;&gt;# CentOS&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;2-项目准备&#34;&gt;&lt;a href=&#34;#2-项目准备&#34; class=&#34;headerlink&#34; title=&#34;2. 项目准备&#34;&gt;&lt;/a&gt;2. 项目准备&lt;/h3&gt;&lt;p&gt;创建一个简单的 C 项目目录：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; myproject
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; myproject
&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; src
&lt;span class=&#34;token function&#34;&gt;touch&lt;/span&gt; configure.ac Makefile.am src/Makefile.am&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;四、autoconf-和-automake-使用流程&#34;&gt;&lt;a href=&#34;#四、autoconf-和-automake-使用流程&#34; class=&#34;headerlink&#34; title=&#34;四、autoconf 和 automake 使用流程&#34;&gt;&lt;/a&gt;四、&lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 使用流程&lt;/h2&gt;&lt;h3 id=&#34;1-创建-configure-ac-文件&#34;&gt;&lt;a href=&#34;#1-创建-configure-ac-文件&#34; class=&#34;headerlink&#34; title=&#34;1. 创建 configure.ac 文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 创建 &lt;code&gt;configure.ac&lt;/code&gt; 文件&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;configure.ac&lt;/code&gt; 是 &lt;code&gt;autoconf&lt;/code&gt; 的核心文件，定义了项目名称、版本、依赖工具等。&lt;/p&gt;
&lt;p&gt;以下是一个简单示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [user@example.com])  # 项目名称、版本和维护者
AM_INIT_AUTOMAKE                                  # 初始化 automake
AC_PROG_CC                                       # 检测 C 编译器
AC_CONFIG_FILES([Makefile src/Makefile])         # 配置 Makefile 文件
AC_OUTPUT                                        # 输出配置文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;2-创建-Makefile-am-文件&#34;&gt;&lt;a href=&#34;#2-创建-Makefile-am-文件&#34; class=&#34;headerlink&#34; title=&#34;2. 创建 Makefile.am 文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 创建 &lt;code&gt;Makefile.am&lt;/code&gt; 文件&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;顶层目录的-Makefile-am&#34;&gt;&lt;a href=&#34;#顶层目录的-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;顶层目录的 Makefile.am&#34;&gt;&lt;/a&gt;顶层目录的 &lt;code&gt;Makefile.am&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;SUBDIRS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; src&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;src-Makefile-am&#34;&gt;&lt;a href=&#34;#src-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;src/Makefile.am&#34;&gt;&lt;/a&gt;&lt;code&gt;src/Makefile.am&lt;/code&gt;&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;bin_PROGRAMS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; myapp
myapp_SOURCES &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; main.c utils.c utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;3-生成构建脚本和文件&#34;&gt;&lt;a href=&#34;#3-生成构建脚本和文件&#34; class=&#34;headerlink&#34; title=&#34;3. 生成构建脚本和文件&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 生成构建脚本和文件&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;aclocal.m4&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;configure&lt;/code&gt; 脚本&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;Makefile.in&lt;/code&gt; 文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;automake --add-missing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;生成 &lt;code&gt;Makefile&lt;/code&gt; 文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-编译和安装&#34;&gt;&lt;a href=&#34;#4-编译和安装&#34; class=&#34;headerlink&#34; title=&#34;4. 编译和安装&#34;&gt;&lt;/a&gt;&lt;strong&gt;4. 编译和安装&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;运行程序&lt;/strong&gt;&lt;br&gt;如果你的程序是一个可执行文件，例如 &lt;code&gt;myapp&lt;/code&gt;，可以直接运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./src/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五、完整示例&#34;&gt;&lt;a href=&#34;#五、完整示例&#34; class=&#34;headerlink&#34; title=&#34;五、完整示例&#34;&gt;&lt;/a&gt;五、完整示例&lt;/h2&gt;&lt;p&gt;假设你有以下项目结构：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;myproject/
├── configure.ac
├── Makefile.am
├── src/
│   ├── Makefile.am
│   ├── main.c
│   ├── utils.c
│   └── utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下是各个文件的内容：&lt;/p&gt;
&lt;h3 id=&#34;1-configure-ac&#34;&gt;&lt;a href=&#34;#1-configure-ac&#34; class=&#34;headerlink&#34; title=&#34;1. configure.ac&#34;&gt;&lt;/a&gt;1. &lt;code&gt;configure.ac&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [user@example.com])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-顶层-Makefile-am&#34;&gt;&lt;a href=&#34;#2-顶层-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;2. 顶层 Makefile.am&#34;&gt;&lt;/a&gt;2. 顶层 &lt;code&gt;Makefile.am&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;SUBDIRS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; src&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-src-Makefile-am&#34;&gt;&lt;a href=&#34;#3-src-Makefile-am&#34; class=&#34;headerlink&#34; title=&#34;3. src/Makefile.am&#34;&gt;&lt;/a&gt;3. &lt;code&gt;src/Makefile.am&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-makefile&#34; data-language=&#34;makefile&#34;&gt;&lt;code class=&#34;language-makefile&#34;&gt;bin_PROGRAMS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; myapp
myapp_SOURCES &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; main.c utils.c utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-src-main-c&#34;&gt;&lt;a href=&#34;#4-src-main-c&#34; class=&#34;headerlink&#34; title=&#34;4. src/main.c&#34;&gt;&lt;/a&gt;4. &lt;code&gt;src/main.c&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;utils.h&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sum: %d\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-src-utils-c&#34;&gt;&lt;a href=&#34;#5-src-utils-c&#34; class=&#34;headerlink&#34; title=&#34;5. src/utils.c&#34;&gt;&lt;/a&gt;5. &lt;code&gt;src/utils.c&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;utils.h&#34;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-src-utils-h&#34;&gt;&lt;a href=&#34;#6-src-utils-h&#34; class=&#34;headerlink&#34; title=&#34;6. src/utils.h&#34;&gt;&lt;/a&gt;6. &lt;code&gt;src/utils.h&lt;/code&gt;&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-c&#34; data-language=&#34;c&#34;&gt;&lt;code class=&#34;language-c&#34;&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;ifndef&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;UTILS_H&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;UTILS_H&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;构建和运行&#34;&gt;&lt;a href=&#34;#构建和运行&#34; class=&#34;headerlink&#34; title=&#34;构建和运行&#34;&gt;&lt;/a&gt;构建和运行&lt;/h3&gt;&lt;h4 id=&#34;1-生成文件&#34;&gt;&lt;a href=&#34;#1-生成文件&#34; class=&#34;headerlink&#34; title=&#34;1. 生成文件&#34;&gt;&lt;/a&gt;1. 生成文件&lt;/h4&gt;&lt;p&gt;运行以下命令生成必要的构建文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal
autoconf
automake --add-missing
./configure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-编译&#34;&gt;&lt;a href=&#34;#2-编译&#34; class=&#34;headerlink&#34; title=&#34;2. 编译&#34;&gt;&lt;/a&gt;2. 编译&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-安装&#34;&gt;&lt;a href=&#34;#3-安装&#34; class=&#34;headerlink&#34; title=&#34;3. 安装&#34;&gt;&lt;/a&gt;3. 安装&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-运行程序&#34;&gt;&lt;a href=&#34;#4-运行程序&#34; class=&#34;headerlink&#34; title=&#34;4. 运行程序&#34;&gt;&lt;/a&gt;4. 运行程序&lt;/h4&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./src/myapp&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;六、常见问题及解决方法&#34;&gt;&lt;a href=&#34;#六、常见问题及解决方法&#34; class=&#34;headerlink&#34; title=&#34;六、常见问题及解决方法&#34;&gt;&lt;/a&gt;六、常见问题及解决方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;aclocal: command not found&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;: 未安装 &lt;code&gt;automake&lt;/code&gt;。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;: 安装 &lt;code&gt;automake&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;configure.ac: no proper invocation of AM_INIT_AUTOMAKE&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;: &lt;code&gt;configure.ac&lt;/code&gt; 中缺少 &lt;code&gt;AM_INIT_AUTOMAKE&lt;/code&gt;。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;: 添加 &lt;code&gt;AM_INIT_AUTOMAKE&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Makefile.am: required file &#39;INSTALL&#39; not found&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;原因&lt;/strong&gt;: 缺少默认的 &lt;code&gt;INSTALL&lt;/code&gt; 文件。&lt;br&gt;&lt;strong&gt;解决&lt;/strong&gt;: 使用 &lt;code&gt;automake --add-missing&lt;/code&gt; 自动生成。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、autoscan&#34;&gt;&lt;a href=&#34;#一、autoscan&#34; class=&#34;headerlink&#34; title=&#34;一、autoscan&#34;&gt;&lt;/a&gt;一、&lt;code&gt;autoscan&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-什么是-autoscan&#34;&gt;&lt;a href=&#34;#1-什么是-autoscan&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是 autoscan&#34;&gt;&lt;/a&gt;1. 什么是 &lt;code&gt;autoscan&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;autoscan&lt;/code&gt; 是 &lt;code&gt;autoconf&lt;/code&gt; 的一个辅助工具，用于自动生成初始的 &lt;code&gt;configure.ac&lt;/code&gt; 文件（或者早期的 &lt;code&gt;configure.in&lt;/code&gt; 文件）。它会扫描项目目录中的文件，推测需要哪些检查，并生成一个名为 &lt;code&gt;configure.scan&lt;/code&gt; 的模板文件供开发者参考。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-autoscan-的功能&#34;&gt;&lt;a href=&#34;#2-autoscan-的功能&#34; class=&#34;headerlink&#34; title=&#34;2. autoscan 的功能&#34;&gt;&lt;/a&gt;2. &lt;code&gt;autoscan&lt;/code&gt; 的功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;自动检测源码中的依赖，例如头文件、库文件。&lt;/li&gt;
&lt;li&gt;提供一个初步的 &lt;code&gt;configure.ac&lt;/code&gt; 文件模板。&lt;/li&gt;
&lt;li&gt;简化了手动编写配置文件的过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-使用方法&#34;&gt;&lt;a href=&#34;#3-使用方法&#34; class=&#34;headerlink&#34; title=&#34;3. 使用方法&#34;&gt;&lt;/a&gt;3. 使用方法&lt;/h3&gt;&lt;h4 id=&#34;1-初始化项目&#34;&gt;&lt;a href=&#34;#1-初始化项目&#34; class=&#34;headerlink&#34; title=&#34;(1) 初始化项目&#34;&gt;&lt;/a&gt;(1) 初始化项目&lt;/h4&gt;&lt;p&gt;确保项目目录结构已经创建，并包含至少一个源文件（如 &lt;code&gt;main.c&lt;/code&gt;）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; myproject
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; myproject
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#include &amp;lt;stdio.h&amp;gt;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; main.c
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;int main() { return 0; }&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; main.c&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-运行-autoscan&#34;&gt;&lt;a href=&#34;#2-运行-autoscan&#34; class=&#34;headerlink&#34; title=&#34;(2) 运行 autoscan&#34;&gt;&lt;/a&gt;(2) 运行 &lt;code&gt;autoscan&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在项目目录中运行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoscan&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行完成后，生成一个 &lt;code&gt;configure.scan&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h4 id=&#34;3-修改-configure-scan&#34;&gt;&lt;a href=&#34;#3-修改-configure-scan&#34; class=&#34;headerlink&#34; title=&#34;(3) 修改 configure.scan&#34;&gt;&lt;/a&gt;(3) 修改 &lt;code&gt;configure.scan&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;将 &lt;code&gt;configure.scan&lt;/code&gt; 重命名为 &lt;code&gt;configure.ac&lt;/code&gt;，并根据实际需求修改内容。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; configure.scan configure.ac&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;示例生成的 &lt;code&gt;configure.scan&lt;/code&gt; 文件可能包含以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([UNKNOWN], [1.0], [bug-report@example.com])
AC_CONFIG_SRCDIR([main.c])
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改后，可添加更多具体的检查内容，例如库依赖、路径配置等。&lt;/p&gt;
&lt;h4 id=&#34;4-继续构建&#34;&gt;&lt;a href=&#34;#4-继续构建&#34; class=&#34;headerlink&#34; title=&#34;(4) 继续构建&#34;&gt;&lt;/a&gt;(4) 继续构建&lt;/h4&gt;&lt;p&gt;生成 &lt;code&gt;configure&lt;/code&gt; 脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;4-autoscan-的注意事项&#34;&gt;&lt;a href=&#34;#4-autoscan-的注意事项&#34; class=&#34;headerlink&#34; title=&#34;4. autoscan 的注意事项&#34;&gt;&lt;/a&gt;4. &lt;code&gt;autoscan&lt;/code&gt; 的注意事项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;它只能作为生成初始配置的工具，输出的 &lt;code&gt;configure.scan&lt;/code&gt; 文件需要手动完善。&lt;/li&gt;
&lt;li&gt;如果项目目录中没有 &lt;code&gt;.c&lt;/code&gt; 文件或标准构建文件，&lt;code&gt;autoscan&lt;/code&gt; 可能无法推断正确的配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、aclocal&#34;&gt;&lt;a href=&#34;#二、aclocal&#34; class=&#34;headerlink&#34; title=&#34;二、aclocal&#34;&gt;&lt;/a&gt;二、&lt;code&gt;aclocal&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&#34;1-什么是-aclocal&#34;&gt;&lt;a href=&#34;#1-什么是-aclocal&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是 aclocal&#34;&gt;&lt;/a&gt;1. 什么是 &lt;code&gt;aclocal&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;aclocal&lt;/code&gt; 是 &lt;code&gt;automake&lt;/code&gt; 的辅助工具，专门用于生成 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件。&lt;code&gt;aclocal.m4&lt;/code&gt; 是一个包含各种宏定义的文件，用于支持 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 的功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aclocal&lt;/code&gt; 会扫描项目目录中的 &lt;code&gt;configure.ac&lt;/code&gt; 文件，以及系统中可用的宏定义，生成一个与项目兼容的宏文件。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-aclocal-的功能&#34;&gt;&lt;a href=&#34;#2-aclocal-的功能&#34; class=&#34;headerlink&#34; title=&#34;2. aclocal 的功能&#34;&gt;&lt;/a&gt;2. &lt;code&gt;aclocal&lt;/code&gt; 的功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;根据 &lt;code&gt;configure.ac&lt;/code&gt; 的内容，生成或更新 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件。&lt;/li&gt;
&lt;li&gt;提供对额外宏库的支持，例如 GNU 库的宏。&lt;/li&gt;
&lt;li&gt;管理自定义宏，以便 &lt;code&gt;autoconf&lt;/code&gt; 和 &lt;code&gt;automake&lt;/code&gt; 可以正确工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-使用方法-1&#34;&gt;&lt;a href=&#34;#3-使用方法-1&#34; class=&#34;headerlink&#34; title=&#34;3. 使用方法&#34;&gt;&lt;/a&gt;3. 使用方法&lt;/h3&gt;&lt;h4 id=&#34;1-编写-configure-ac&#34;&gt;&lt;a href=&#34;#1-编写-configure-ac&#34; class=&#34;headerlink&#34; title=&#34;(1) 编写 configure.ac&#34;&gt;&lt;/a&gt;(1) 编写 &lt;code&gt;configure.ac&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;假设我们有以下简单的 &lt;code&gt;configure.ac&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [bug-report@example.com])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-运行-aclocal&#34;&gt;&lt;a href=&#34;#2-运行-aclocal&#34; class=&#34;headerlink&#34; title=&#34;(2) 运行 aclocal&#34;&gt;&lt;/a&gt;(2) 运行 &lt;code&gt;aclocal&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;运行以下命令生成或更新 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成的 &lt;code&gt;aclocal.m4&lt;/code&gt; 文件可能包含标准宏，例如对编译器检查、头文件检查等的支持。&lt;/p&gt;
&lt;h4 id=&#34;3-后续步骤&#34;&gt;&lt;a href=&#34;#3-后续步骤&#34; class=&#34;headerlink&#34; title=&#34;(3) 后续步骤&#34;&gt;&lt;/a&gt;(3) 后续步骤&lt;/h4&gt;&lt;p&gt;生成 &lt;code&gt;configure&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h3 id=&#34;4-自定义宏支持&#34;&gt;&lt;a href=&#34;#4-自定义宏支持&#34; class=&#34;headerlink&#34; title=&#34;4. 自定义宏支持&#34;&gt;&lt;/a&gt;4. 自定义宏支持&lt;/h3&gt;&lt;p&gt;如果你需要自定义宏，可以创建一个名为 &lt;code&gt;m4/&lt;/code&gt; 的目录，并将宏文件放入其中。例如：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; m4
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;AC_DEFUN([MY_MACRO], [echo &#34;This is my custom macro&#34;])&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; m4/my_macro.m4&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在 &lt;code&gt;configure.ac&lt;/code&gt; 中引用：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [bug-report@example.com])
AC_CONFIG_MACRO_DIR([m4])  # 指定宏目录
AM_INIT_AUTOMAKE
MY_MACRO
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行以下命令，&lt;code&gt;aclocal&lt;/code&gt; 会自动包含自定义宏：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
&lt;h2 id=&#34;三、完整实践示例&#34;&gt;&lt;a href=&#34;#三、完整实践示例&#34; class=&#34;headerlink&#34; title=&#34;三、完整实践示例&#34;&gt;&lt;/a&gt;三、完整实践示例&lt;/h2&gt;&lt;p&gt;假设我们有一个简单的项目：&lt;br&gt;目录结构如下：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;myproject/
├── configure.ac
├── Makefile.am
├── src/
│   ├── main.c
│   ├── utils.c
│   └── utils.h&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下是构建流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成初始文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoscan
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; configure.scan configure.ac&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;完善 &lt;code&gt;configure.ac&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-m4&#34; data-language=&#34;m4&#34;&gt;&lt;code class=&#34;language-m4&#34;&gt;AC_INIT([myproject], [1.0], [bug-report@example.com])
AC_CONFIG_SRCDIR([src/main.c])
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_OUTPUT&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成宏文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;aclocal&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;生成 &lt;code&gt;configure&lt;/code&gt; 脚本&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;autoconf
automake --add-missing&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;运行 &lt;code&gt;configure&lt;/code&gt; 和编译&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;hr&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/11/20/linux-bian-yi-charm-ku/</guid>
            <title>linux编译charm库</title>
            <link>https://0xdadream.github.io/2024/11/20/linux-bian-yi-charm-ku/</link>
            <category>linux</category>
            <category>bug</category>
            <pubDate>Wed, 20 Nov 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux编译charm库&#34;&gt;&lt;a href=&#34;#linux编译charm库&#34; class=&#34;headerlink&#34; title=&#34;linux编译charm库&#34;&gt;&lt;/a&gt;linux编译charm库&lt;/h1&gt;&lt;p&gt;在 Windows 的 Linux 子系统 (WSL) 中使用 Ubuntu 编译安装 Charm 库的步骤如下：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;基于-WSL-的-Charm-库安装教程&#34;&gt;&lt;a href=&#34;#基于-WSL-的-Charm-库安装教程&#34; class=&#34;headerlink&#34; title=&#34;基于 WSL 的 Charm 库安装教程&#34;&gt;&lt;/a&gt;&lt;strong&gt;基于 WSL 的 Charm 库安装教程&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&#34;1-更新系统并安装依赖&#34;&gt;&lt;a href=&#34;#1-更新系统并安装依赖&#34; class=&#34;headerlink&#34; title=&#34;1. 更新系统并安装依赖&#34;&gt;&lt;/a&gt;&lt;strong&gt;1. 更新系统并安装依赖&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;应用商店下载linux后执行&lt;code&gt;wsl --update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 WSL Ubuntu 中，运行以下命令安装必要的编译工具和库：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; upgrade &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; build-essential python3 python3-dev python3-pip python3-setuptools &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;
                     libgmp-dev libssl-dev swig libpbc-dev &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; gcc &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; m4 flex bison&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里的库可以一个一个单独安装，没有就去找源码安装，下面报安装错也能再安装，这里ubuntu版本最好不要太高，openssl我的是3.0.2没问题，gmp最高，openssl，python一般会自带，python我的是python3.10&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;2-安装-PBC-库&#34;&gt;&lt;a href=&#34;#2-安装-PBC-库&#34; class=&#34;headerlink&#34; title=&#34;2. 安装 PBC 库&#34;&gt;&lt;/a&gt;&lt;strong&gt;2. 安装 PBC 库&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;PBC 是 Charm 的核心依赖之一，需要手动编译安装。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载源码：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://crypto.stanford.edu/pbc/download.html&#34;&gt;PBC Library - Pairing-Based Cryptography - Downloads&lt;/a&gt;下载第一个&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz
&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-zxvf&lt;/span&gt; pbc-0.5.14.tar.gz&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译和安装：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入解压的目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/usr/local/lib&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tee&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; /etc/ld.so.conf.d/libpbc.conf
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; ldconfig&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;3-下载并安装-Charm-库&#34;&gt;&lt;a href=&#34;#3-下载并安装-Charm-库&#34; class=&#34;headerlink&#34; title=&#34;3. 下载并安装 Charm 库&#34;&gt;&lt;/a&gt;&lt;strong&gt;3. 下载并安装 Charm 库&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;下载源码：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/JHUISI/charm.git
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; charm&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;配置安装路径：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;configure.sh&lt;/code&gt; 脚本，指定 GMP 和 PBC 的安装路径：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure.sh

&lt;span class=&#34;token comment&#34;&gt;#执行成功&lt;/span&gt;
Install prefix    /usr/local
data directory    /usr/local/share/charm
binary directory  /usr/local/bin
library directory /usr/local/lib
config directory  /usr/local/etc
Source path       /home/hero/charm
CFLAGS            &lt;span class=&#34;token parameter variable&#34;&gt;-O2&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt;
CHARM_CFLAGS       &lt;span class=&#34;token parameter variable&#34;&gt;-m64&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-Wall&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-Wundef&lt;/span&gt; -Wwrite-strings -Wmissing-prototypes  -fstack-protector-all -Wendif-labels -Wmissing-include-dirs -Wempty-body -Wnested-externs -Wformat-security -Wformat-y2k -Winit-self -Wignored-qualifiers -Wold-style-declaration -Wold-style-definition -Wtype-limits
LDFLAGS           &lt;span class=&#34;token parameter variable&#34;&gt;-m64&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;              &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;
python            /usr/bin/python3
python-config     /usr/bin/python3-config
build_ext options build_ext
&lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;           &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;host&lt;/span&gt; CPU          x86_64
&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt;              /usr/bin/wget
gprof enabled     no
profiler          no
static build      no
&lt;span class=&#34;token parameter variable&#34;&gt;-Werror&lt;/span&gt; enabled   no
integer module    &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
ecc module        &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
pairing module    &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
disable benchmark no
libm found        &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
libgmp found      &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
libpbc found      &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
libcrypto found   &lt;span class=&#34;token function&#34;&gt;yes&lt;/span&gt;
Documentation     no&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;编译和安装：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#执行成功&lt;/span&gt;
copying build/lib.linux-x86_64-3.8/charm/core/math/pairing.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/math
copying build/lib.linux-x86_64-3.8/charm/core/math/integer.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/math
copying build/lib.linux-x86_64-3.8/charm/core/math/elliptic_curve.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/math
copying build/lib.linux-x86_64-3.8/charm/core/benchmark.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core
copying build/lib.linux-x86_64-3.8/charm/core/crypto/cryptobase.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/crypto
copying build/lib.linux-x86_64-3.8/charm/core/crypto/AES.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/crypto
copying build/lib.linux-x86_64-3.8/charm/core/crypto/DES.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/crypto
copying build/lib.linux-x86_64-3.8/charm/core/crypto/DES3.cpython-38-x86_64-linux-gnu.so -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; charm/core/crypto
Complete


&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#执行成功&lt;/span&gt;
Installed /usr/local/lib/python3.8/dist-packages/attrs-25.3.0-py3.8.egg
Searching &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;setuptools&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45.2&lt;/span&gt;.0
Best match: setuptools &lt;span class=&#34;token number&#34;&gt;45.2&lt;/span&gt;.0
Adding setuptools &lt;span class=&#34;token number&#34;&gt;45.2&lt;/span&gt;.0 to easy-install.pth &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;
Installing easy_install script to /usr/local/bin

Using /usr/lib/python3/dist-packages
Finished processing dependencies &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; Charm-Crypto&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.50&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;import charm&lt;/code&gt;判断安装是否成功&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;PS：conda环境下会使用conda自带的环境，可能会编译出错，需要禁用，执行命令&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; /root/miniconda3/compiler_compat /root/miniconda3/compiler_compat.bak&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;后面直接改回就行了&lt;/p&gt;
&lt;p&gt;报错就看报错信息，可以参考官方&lt;a href=&#34;https://jhuisi.github.io/charm/install_source.html&#34;&gt;Platform Install Manual — Charm-Crypto 0.50 documentation&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/</guid>
            <title>软链接和硬链接</title>
            <link>https://0xdadream.github.io/2024/08/10/ruan-lian-jie-he-ying-lian-jie/</link>
            <category>命令</category>
            <pubDate>Sat, 10 Aug 2024 10:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;软链接和硬链接&#34;&gt;&lt;a href=&#34;#软链接和硬链接&#34; class=&#34;headerlink&#34; title=&#34;软链接和硬链接&#34;&gt;&lt;/a&gt;软链接和硬链接&lt;/h1&gt;&lt;p&gt;在Linux和Unix系统中，&lt;strong&gt;软链接&lt;/strong&gt;（符号链接，symbolic link，简称&lt;code&gt;symlink&lt;/code&gt;）和&lt;strong&gt;硬链接&lt;/strong&gt;（hard link）是两种用于指向文件或目录的方式。它们有不同的用途和行为。&lt;/p&gt;
&lt;h2 id=&#34;1-软链接（Symbolic-Link）&#34;&gt;&lt;a href=&#34;#1-软链接（Symbolic-Link）&#34; class=&#34;headerlink&#34; title=&#34;1. 软链接（Symbolic Link）&#34;&gt;&lt;/a&gt;1. 软链接（Symbolic Link）&lt;/h2&gt;&lt;p&gt;软链接类似于Windows中的快捷方式，它是一个指向另一个文件或目录的指针。创建软链接后，这个链接文件本身并不包含目标文件的数据，而是包含目标文件的路径。&lt;/p&gt;
&lt;h4 id=&#34;特性：&#34;&gt;&lt;a href=&#34;#特性：&#34; class=&#34;headerlink&#34; title=&#34;特性：&#34;&gt;&lt;/a&gt;特性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指向目标文件的路径&lt;/strong&gt;：软链接文件仅存储目标文件的路径，而不是文件内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨文件系统&lt;/strong&gt;：软链接可以指向不同文件系统中的文件或目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;链断裂问题&lt;/strong&gt;：如果目标文件被删除或移动，软链接将失效，成为“断链”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件大小&lt;/strong&gt;：软链接的大小是指向目标文件路径的长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建软链接&#34;&gt;&lt;a href=&#34;#创建软链接&#34; class=&#34;headerlink&#34; title=&#34;创建软链接&#34;&gt;&lt;/a&gt;创建软链接&lt;/h4&gt;&lt;p&gt;要创建一个软链接，你可以使用&lt;code&gt;ln -s&lt;/code&gt;命令。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /path/to/target /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /home/user/original_file.txt /home/user/shortcut_to_file.txt &lt;span class=&#34;token comment&#34;&gt;# 也可以是目录&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为&lt;code&gt;shortcut_to_file.txt&lt;/code&gt;的软链接，指向&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;查看软链接&#34;&gt;&lt;a href=&#34;#查看软链接&#34; class=&#34;headerlink&#34; title=&#34;查看软链接&#34;&gt;&lt;/a&gt;查看软链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;ls -l&lt;/code&gt;命令可以查看软链接的详细信息。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; /home/user/shortcut_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;lrwxrwxrwx &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/shortcut_to_file.txt -&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; /home/user/original_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;l&lt;/code&gt;表示这是一个软链接，箭头&lt;code&gt;-&amp;gt;&lt;/code&gt;后面是目标路径。&lt;/p&gt;
&lt;h4 id=&#34;删除软链接&#34;&gt;&lt;a href=&#34;#删除软链接&#34; class=&#34;headerlink&#34; title=&#34;删除软链接&#34;&gt;&lt;/a&gt;删除软链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;rm&lt;/code&gt;命令删除软链接。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /path/to/symlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /home/user/shortcut_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除软链接，但不会影响目标文件。&lt;/p&gt;
&lt;h2 id=&#34;2-硬链接（Hard-Link）&#34;&gt;&lt;a href=&#34;#2-硬链接（Hard-Link）&#34; class=&#34;headerlink&#34; title=&#34;2. 硬链接（Hard Link）&#34;&gt;&lt;/a&gt;2. 硬链接（Hard Link）&lt;/h2&gt;&lt;p&gt;硬链接是文件系统中的一个目录条目，它指向文件的实际数据块。与软链接不同，硬链接不是指向路径，而是指向数据块。因此，硬链接和原始文件共享相同的数据块。&lt;/p&gt;
&lt;h4 id=&#34;特性：-1&#34;&gt;&lt;a href=&#34;#特性：-1&#34; class=&#34;headerlink&#34; title=&#34;特性：&#34;&gt;&lt;/a&gt;特性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指向数据块&lt;/strong&gt;：硬链接指向文件的实际数据块，而不是路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享文件数据&lt;/strong&gt;：硬链接和原始文件共享相同的数据块，因此它们内容完全相同，且修改一个文件内容会同时更新硬链接的内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不可跨文件系统&lt;/strong&gt;：硬链接必须在同一文件系统内。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除影响&lt;/strong&gt;：删除一个硬链接不会影响文件的实际数据，只有当所有指向数据块的硬链接都删除后，文件的数据才会被删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;创建硬链接&#34;&gt;&lt;a href=&#34;#创建硬链接&#34; class=&#34;headerlink&#34; title=&#34;创建硬链接&#34;&gt;&lt;/a&gt;创建硬链接&lt;/h4&gt;&lt;p&gt;要创建一个硬链接，你可以使用&lt;code&gt;ln&lt;/code&gt;命令（不带&lt;code&gt;-s&lt;/code&gt;选项）。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; /path/to/target /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; /home/user/original_file.txt /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将创建一个名为&lt;code&gt;hardlink_to_file.txt&lt;/code&gt;的硬链接，指向&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;的数据块。&lt;/p&gt;
&lt;h4 id=&#34;查看硬链接&#34;&gt;&lt;a href=&#34;#查看硬链接&#34; class=&#34;headerlink&#34; title=&#34;查看硬链接&#34;&gt;&lt;/a&gt;查看硬链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;ls -li&lt;/code&gt;命令可以查看文件的inode号，硬链接共享相同的inode号。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-li&lt;/span&gt; /path/to/target /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-li&lt;/span&gt; /home/user/original_file.txt /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出示例：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1234567&lt;/span&gt; -rw-r--r-- &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/original_file.txt
&lt;span class=&#34;token number&#34;&gt;1234567&lt;/span&gt; -rw-r--r-- &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; user user &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt; Aug &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;:00 /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;两个文件共享相同的inode号（&lt;code&gt;1234567&lt;/code&gt;），说明它们是硬链接。&lt;/p&gt;
&lt;h4 id=&#34;删除硬链接&#34;&gt;&lt;a href=&#34;#删除硬链接&#34; class=&#34;headerlink&#34; title=&#34;删除硬链接&#34;&gt;&lt;/a&gt;删除硬链接&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;rm&lt;/code&gt;命令删除硬链接。删除硬链接不会删除文件数据，只有当所有硬链接都被删除后，文件数据才会被删除。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /path/to/hardlink&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /home/user/hardlink_to_file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这将删除硬链接，但&lt;code&gt;/home/user/original_file.txt&lt;/code&gt;仍然存在，文件数据依然可用。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;软链接&lt;/strong&gt;：适合用作快捷方式和指向目录。使用软链接时，请确保目标文件存在，或会造成“断链”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬链接&lt;/strong&gt;：适用于同一文件系统内共享文件数据，不能链接到目录（通常情况下）。硬链接不可跨文件系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;进阶操作&#34;&gt;&lt;a href=&#34;#进阶操作&#34; class=&#34;headerlink&#34; title=&#34;进阶操作&#34;&gt;&lt;/a&gt;进阶操作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;查看所有链接&lt;/strong&gt;：使用&lt;code&gt;find&lt;/code&gt;命令查找所有指向某个目标的软链接或硬链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /path/to/directory &lt;span class=&#34;token parameter variable&#34;&gt;-type&lt;/span&gt; l &lt;span class=&#34;token parameter variable&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;link_name&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个命令会查找所有名为&lt;code&gt;link_name&lt;/code&gt;的软链接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/08/03/shell/</guid>
            <title>shell</title>
            <link>https://0xdadream.github.io/2024/08/03/shell/</link>
            <category>命令</category>
            <pubDate>Sat, 03 Aug 2024 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;shell&#34;&gt;&lt;a href=&#34;#shell&#34; class=&#34;headerlink&#34; title=&#34;shell&#34;&gt;&lt;/a&gt;shell&lt;/h1&gt;&lt;p&gt;Shell 是一种用于与操作系统进行交互的命令行界面。常见的 Shell 有 Bash（Bourne Again Shell）、Zsh、Ksh、以及 Windows 上的 PowerShell。Shell 不仅可以用于执行单个命令，还可以编写脚本来自动化任务。以下是一些基本的 Shell 命令和脚本编写的示例。&lt;/p&gt;
&lt;h2 id=&#34;基本-Shell-命令&#34;&gt;&lt;a href=&#34;#基本-Shell-命令&#34; class=&#34;headerlink&#34; title=&#34;基本 Shell 命令&#34;&gt;&lt;/a&gt;基本 Shell 命令&lt;/h2&gt;&lt;h3 id=&#34;文件和目录操作&#34;&gt;&lt;a href=&#34;#文件和目录操作&#34; class=&#34;headerlink&#34; title=&#34;文件和目录操作&#34;&gt;&lt;/a&gt;文件和目录操作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ls&lt;/strong&gt;：列出目录内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 显示详细信息&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 显示所有文件，包括隐藏文件&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cd&lt;/strong&gt;：更改目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /path/to/directory
&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 返回上一级目录&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;pwd&lt;/strong&gt;：显示当前工作目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;pwd&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mkdir&lt;/strong&gt;：创建目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; new_directory&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;rm&lt;/strong&gt;：删除文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; directory  &lt;span class=&#34;token comment&#34;&gt;# 删除目录及其内容&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cp&lt;/strong&gt;：复制文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; source_file destination
&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; source_directory destination  &lt;span class=&#34;token comment&#34;&gt;# 复制目录及其内容&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mv&lt;/strong&gt;：移动或重命名文件或目录&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; old_name new_name
&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; /path/to/destination&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件查看和编辑&#34;&gt;&lt;a href=&#34;#文件查看和编辑&#34; class=&#34;headerlink&#34; title=&#34;文件查看和编辑&#34;&gt;&lt;/a&gt;文件查看和编辑&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cat&lt;/strong&gt;：查看文件内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;less&lt;/strong&gt;：分页查看文件内容&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;less&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;head&lt;/strong&gt;：查看文件开头部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;head&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; filename  &lt;span class=&#34;token comment&#34;&gt;# 查看前 10 行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;tail&lt;/strong&gt;：查看文件末尾部分&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;tail&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-n&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; filename  &lt;span class=&#34;token comment&#34;&gt;# 查看后 10 行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;nano&lt;/strong&gt;、&lt;strong&gt;vi&lt;/strong&gt;、&lt;strong&gt;vim&lt;/strong&gt;：文本编辑器&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;系统信息和管理&#34;&gt;&lt;a href=&#34;#系统信息和管理&#34; class=&#34;headerlink&#34; title=&#34;系统信息和管理&#34;&gt;&lt;/a&gt;系统信息和管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;echo&lt;/strong&gt;：打印消息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;whoami&lt;/strong&gt;：显示当前用户&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;whoami&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;top&lt;/strong&gt;：实时显示系统性能信息&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;top&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ps&lt;/strong&gt;：显示当前进程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; aux  &lt;span class=&#34;token comment&#34;&gt;# 显示所有进程&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;kill&lt;/strong&gt;：终止进程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; PID
&lt;span class=&#34;token function&#34;&gt;kill&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-9&lt;/span&gt; PID  &lt;span class=&#34;token comment&#34;&gt;# 强制终止进程&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chmod&lt;/strong&gt;：更改文件权限&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; filename
&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x filename  &lt;span class=&#34;token comment&#34;&gt;# 使文件可执行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chown&lt;/strong&gt;：更改文件所有者&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chown&lt;/span&gt; user:group filename&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络相关&#34;&gt;&lt;a href=&#34;#网络相关&#34; class=&#34;headerlink&#34; title=&#34;网络相关&#34;&gt;&lt;/a&gt;网络相关&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ping&lt;/strong&gt;：测试网络连通性&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ping&lt;/span&gt; example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;curl&lt;/strong&gt;：发送网络请求&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;wget&lt;/strong&gt;：下载文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; http://example.com/file&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;管道和重定向&#34;&gt;&lt;a href=&#34;#管道和重定向&#34; class=&#34;headerlink&#34; title=&#34;管道和重定向&#34;&gt;&lt;/a&gt;管道和重定向&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;**|**：管道，将一个命令的输出作为另一个命令的输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pattern&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;gt;**：重定向输出到文件（覆盖）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;gt;&amp;gt;**：重定向输出到文件（追加）&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**&amp;lt;**：重定向输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; inputfile&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设置变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;MY_VAR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Hello, World!&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用变量&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$MY_VAR&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Shell-脚本&#34;&gt;&lt;a href=&#34;#Shell-脚本&#34; class=&#34;headerlink&#34; title=&#34;Shell 脚本&#34;&gt;&lt;/a&gt;Shell 脚本&lt;/h2&gt;&lt;p&gt;Shell 脚本是一组 Shell 命令的集合，通常用于自动化任务。以下是一个简单的 Shell 脚本示例：&lt;/p&gt;
&lt;h3 id=&#34;创建脚本文件&#34;&gt;&lt;a href=&#34;#创建脚本文件&#34; class=&#34;headerlink&#34; title=&#34;创建脚本文件&#34;&gt;&lt;/a&gt;创建脚本文件&lt;/h3&gt;&lt;p&gt;使用你喜欢的文本编辑器创建一个脚本文件，例如 &lt;code&gt;myscript.sh&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;nano&lt;/span&gt; myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;编写脚本&#34;&gt;&lt;a href=&#34;#编写脚本&#34; class=&#34;headerlink&#34; title=&#34;编写脚本&#34;&gt;&lt;/a&gt;编写脚本&lt;/h3&gt;&lt;p&gt;在脚本文件中编写以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 打印消息&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is a simple shell script.&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 设置变量&lt;/span&gt;
&lt;span class=&#34;token assign-left variable&#34;&gt;NAME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Alice&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 使用变量&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello, &lt;span class=&#34;token variable&#34;&gt;$NAME&lt;/span&gt;!&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 条件语句&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$NAME&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Alice&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Welcome, Alice!&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;You are not Alice.&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 循环&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token for-or-select variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Number: &lt;span class=&#34;token variable&#34;&gt;$i&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;done&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 函数&lt;/span&gt;
&lt;span class=&#34;token function-name function&#34;&gt;my_function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;This is a function.&#34;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 调用函数&lt;/span&gt;
my_function&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;运行脚本&#34;&gt;&lt;a href=&#34;#运行脚本&#34; class=&#34;headerlink&#34; title=&#34;运行脚本&#34;&gt;&lt;/a&gt;运行脚本&lt;/h3&gt;&lt;p&gt;首先使脚本可执行：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; +x myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后运行脚本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;./myscript.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2024/07/20/linux-mei-hua-ming-ling-xing/</guid>
            <title>linux美化命令行</title>
            <link>https://0xdadream.github.io/2024/07/20/linux-mei-hua-ming-ling-xing/</link>
            <category>tip</category>
            <pubDate>Sat, 20 Jul 2024 06:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux美化命令行&#34;&gt;&lt;a href=&#34;#linux美化命令行&#34; class=&#34;headerlink&#34; title=&#34;linux美化命令行&#34;&gt;&lt;/a&gt;linux美化命令行&lt;/h1&gt;&lt;h2 id=&#34;centos8&#34;&gt;&lt;a href=&#34;#centos8&#34; class=&#34;headerlink&#34; title=&#34;centos8&#34;&gt;&lt;/a&gt;centos8&lt;/h2&gt;&lt;h3 id=&#34;安装和配置-Zsh&#34;&gt;&lt;a href=&#34;#安装和配置-Zsh&#34; class=&#34;headerlink&#34; title=&#34;安装和配置 Zsh&#34;&gt;&lt;/a&gt;安装和配置 Zsh&lt;/h3&gt;&lt;p&gt;首先，安装 Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将默认 shell 更改为 Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;chsh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新登录以使更改生效，或者使用以下命令启动 Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装和配置-Oh-My-Zsh&#34;&gt;&lt;a href=&#34;#安装和配置-Oh-My-Zsh&#34; class=&#34;headerlink&#34; title=&#34;安装和配置 Oh My Zsh&#34;&gt;&lt;/a&gt;安装和配置 Oh My Zsh&lt;/h3&gt;&lt;p&gt;下载并安装 Oh My Zsh：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装并启用-Powerline&#34;&gt;&lt;a href=&#34;#安装并启用-Powerline&#34; class=&#34;headerlink&#34; title=&#34;安装并启用 Powerline&#34;&gt;&lt;/a&gt;安装并启用 Powerline&lt;/h3&gt;&lt;p&gt;安装 Powerline 及其字体支持：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; epel-release
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; powerline powerline-fonts&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件以启用 Powerline：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在文件末尾添加以下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; /usr/share/powerline/zsh/powerline.zsh &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /usr/share/powerline/zsh/powerline.zsh
&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出，然后重新加载 &lt;code&gt;~/.zshrc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装并配置插件&#34;&gt;&lt;a href=&#34;#安装并配置插件&#34; class=&#34;headerlink&#34; title=&#34;安装并配置插件&#34;&gt;&lt;/a&gt;安装并配置插件&lt;/h3&gt;&lt;h4 id=&#34;安装-zsh-syntax-highlighting-插件&#34;&gt;&lt;a href=&#34;#安装-zsh-syntax-highlighting-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 zsh-syntax-highlighting 插件&#34;&gt;&lt;/a&gt;安装 zsh-syntax-highlighting 插件&lt;/h4&gt;&lt;p&gt;该插件提供命令语法高亮：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;安装-zsh-autosuggestions-插件&#34;&gt;&lt;a href=&#34;#安装-zsh-autosuggestions-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 zsh-autosuggestions 插件&#34;&gt;&lt;/a&gt;安装 zsh-autosuggestions 插件&lt;/h4&gt;&lt;p&gt;该插件提供命令自动建议：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;安装-fzf-插件&#34;&gt;&lt;a href=&#34;#安装-fzf-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 fzf 插件&#34;&gt;&lt;/a&gt;安装 fzf 插件&lt;/h4&gt;&lt;p&gt;该插件提供模糊搜索功能：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ctrl+R开启搜索&lt;/p&gt;
&lt;h4 id=&#34;安装-zsh-history-substring-search-插件&#34;&gt;&lt;a href=&#34;#安装-zsh-history-substring-search-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 zsh-history-substring-search 插件&#34;&gt;&lt;/a&gt;安装 zsh-history-substring-search 插件&lt;/h4&gt;&lt;p&gt;该插件提供历史记录子字符串搜索：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-history-substring-search ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;上箭头键（↑）&lt;/strong&gt;：在历史记录中查找当前输入的子字符串的上一条记录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下箭头键（↓）&lt;/strong&gt;：在历史记录中查找当前输入的子字符串的下一条记录&lt;/p&gt;
&lt;h3 id=&#34;安装-z-插件&#34;&gt;&lt;a href=&#34;#安装-z-插件&#34; class=&#34;headerlink&#34; title=&#34;安装 z 插件&#34;&gt;&lt;/a&gt;安装 &lt;code&gt;z&lt;/code&gt; 插件&lt;/h3&gt;&lt;p&gt;克隆 &lt;code&gt;z&lt;/code&gt; 插件仓库，用于目录跳转的非常方便的工具：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/rupa/z.git /var/local/z&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里不能放在&lt;code&gt;~&lt;/code&gt;目录，有报错，没有目录自己创建&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z &amp;lt;部分目录名&amp;gt;&lt;/code&gt;：跳转到包含指定部分目录名的路径中访问频率最高的目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z -l &amp;lt;部分目录名&amp;gt;&lt;/code&gt;：列出包含指定部分目录名的所有目录，并按访问频率排序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z -c &amp;lt;部分目录名&amp;gt;&lt;/code&gt;：列出包含指定部分目录名的所有目录，并按访问时间排序&lt;/p&gt;
&lt;h4 id=&#34;配置插件&#34;&gt;&lt;a href=&#34;#配置插件&#34; class=&#34;headerlink&#34; title=&#34;配置插件&#34;&gt;&lt;/a&gt;配置插件&lt;/h4&gt;&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件，添加并启用插件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到 &lt;code&gt;plugins&lt;/code&gt; 这一行，并将其修改为如下内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt;
    zsh-syntax-highlighting
    zsh-autosuggestions
    zsh-history-substring-search
    z
&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在文件末尾添加以下内容以启用 &lt;code&gt;zsh-history-substring-search&lt;/code&gt; 和 &lt;code&gt;fzf&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

&lt;span class=&#34;token comment&#34;&gt;# z 插件配置&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; /var/local/z/z.sh

&lt;span class=&#34;token comment&#34;&gt;# zsh-history-substring-search configuration&lt;/span&gt;
bindkey &lt;span class=&#34;token string&#34;&gt;&#39;^[[A&#39;&lt;/span&gt; history-substring-search-up
bindkey &lt;span class=&#34;token string&#34;&gt;&#39;^[[B&#39;&lt;/span&gt; history-substring-search-down

&lt;span class=&#34;token comment&#34;&gt;# fzf configuration&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-f&lt;/span&gt; ~/.fzf.zsh &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.fzf.zsh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出，然后重新加载 &lt;code&gt;~/.zshrc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装并配置-Powerlevel10k-主题&#34;&gt;&lt;a href=&#34;#安装并配置-Powerlevel10k-主题&#34; class=&#34;headerlink&#34; title=&#34;安装并配置 Powerlevel10k 主题&#34;&gt;&lt;/a&gt;安装并配置 Powerlevel10k 主题&lt;/h3&gt;&lt;p&gt;Powerlevel10k 是一个高性能的 Zsh 主题，提供了丰富的美化选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/romkatv/powerlevel10k.git &lt;span class=&#34;token variable&#34;&gt;${ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom}&lt;/span&gt;/themes/powerlevel10k&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件，设置 Powerlevel10k 主题：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;ZSH_THEME&lt;/code&gt; 行修改为：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;ZSH_THEME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;powerlevel10k/powerlevel10k&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出，然后重新加载 &lt;code&gt;~/.zshrc&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一次启动时，Powerlevel10k 会引导你完成配置，选择你喜欢的配置选项即可&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;p10k configure &lt;span class=&#34;token comment&#34;&gt;# 重新配置主题&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;Zsh-别名&#34;&gt;&lt;a href=&#34;#Zsh-别名&#34; class=&#34;headerlink&#34; title=&#34;Zsh 别名&#34;&gt;&lt;/a&gt;Zsh 别名&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;添加常用别名&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;ll&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ls -la&#39;&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;git status&#39;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;保存并应用更改&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;一键脚本&#34;&gt;&lt;a href=&#34;#一键脚本&#34; class=&#34;headerlink&#34; title=&#34;一键脚本&#34;&gt;&lt;/a&gt;一键脚本&lt;/h3&gt;&lt;p&gt;创建文件zsh-setup.sh&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim zsh-setup.sh&lt;/code&gt;，将下面代码粘贴进来&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 更新系统并安装 Zsh&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum update &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 将默认 shell 更改为 Zsh&lt;/span&gt;
chsh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 Oh My Zsh&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class=&#34;token variable&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&#34;&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 Powerline 和字体支持&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; epel-release
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; powerline powerline-fonts

&lt;span class=&#34;token comment&#34;&gt;# 配置 Powerline&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EOF&#39;
if [ -f /usr/share/powerline/zsh/powerline.zsh ]; then
    source /usr/share/powerline/zsh/powerline.zsh
fi
EOF&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 zsh-syntax-highlighting 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

&lt;span class=&#34;token comment&#34;&gt;# 安装 zsh-autosuggestions 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

&lt;span class=&#34;token comment&#34;&gt;# 安装 fzf 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install &lt;span class=&#34;token parameter variable&#34;&gt;--all&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 zsh-history-substring-search 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/zsh-users/zsh-history-substring-search ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search

&lt;span class=&#34;token comment&#34;&gt;# 安装 z 插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/rupa/z.git /var/local/z

&lt;span class=&#34;token comment&#34;&gt;# 配置插件&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;EOF&#39;
plugins=(
    git
    zsh-syntax-highlighting
    zsh-autosuggestions
    zsh-history-substring-search
    z
)

source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# z 插件配置
source /var/local/z/z.sh

# zsh-history-substring-search configuration
bindkey &#39;^[[A&#39; history-substring-search-up
bindkey &#39;^[[B&#39; history-substring-search-down

# fzf configuration
[ -f ~/.fzf.zsh ] &amp;amp;&amp;amp; source ~/.fzf.zsh
EOF&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;# 安装 Powerlevel10k 主题&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone &lt;span class=&#34;token parameter variable&#34;&gt;--depth&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; https://github.com/romkatv/powerlevel10k.git &lt;span class=&#34;token variable&#34;&gt;${ZSH_CUSTOM&lt;span class=&#34;token operator&#34;&gt;:-&lt;/span&gt;~&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;.oh-my-zsh&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;custom}&lt;/span&gt;/themes/powerlevel10k

&lt;span class=&#34;token comment&#34;&gt;# 配置 Powerlevel10k 主题&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;sed&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;s/ZSH_THEME=&#34;.*&#34;/ZSH_THEME=&#34;powerlevel10k\/powerlevel10k&#34;/&#39;&lt;/span&gt; ~/.zshrc

&lt;span class=&#34;token comment&#34;&gt;# 重新加载 Zsh 配置&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;source&lt;/span&gt; ~/.zshrc

&lt;span class=&#34;token comment&#34;&gt;# 提示用户重新登录以使更改生效&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Please log out and log back in to apply the changes.&#34;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;chmod +x zsh-setup.sh&lt;/code&gt;赋予执行权限&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./zsh-setup.sh&lt;/code&gt;执行两次脚本，再执行&lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;恢复为bash&#34;&gt;&lt;a href=&#34;#恢复为bash&#34; class=&#34;headerlink&#34; title=&#34;恢复为bash&#34;&gt;&lt;/a&gt;恢复为bash&lt;/h3&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token environment constant&#34;&gt;$SHELL&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#查看当前命令行&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bash&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查看bash所在目录&lt;/span&gt;
chsh &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /bin/bash  &lt;span class=&#34;token comment&#34;&gt;# 后面目录为你上述命令执行结果，切换命令行&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ubuntu&#34;&gt;&lt;a href=&#34;#ubuntu&#34; class=&#34;headerlink&#34; title=&#34;ubuntu&#34;&gt;&lt;/a&gt;ubuntu&lt;/h2&gt;&lt;p&gt;和centos基本一致，将yum换成apt安装命令即可&lt;/p&gt;
&lt;p&gt;一键脚本也是将yum换成apt&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2023/03/08/linux-dao-shou-shi-xu-yao-an-zhuang/</guid>
            <title>linux到手时需要安装</title>
            <link>https://0xdadream.github.io/2023/03/08/linux-dao-shou-shi-xu-yao-an-zhuang/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Wed, 08 Mar 2023 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux到手时需要安装&#34;&gt;&lt;a href=&#34;#linux到手时需要安装&#34; class=&#34;headerlink&#34; title=&#34;linux到手时需要安装&#34;&gt;&lt;/a&gt;linux到手时需要安装&lt;/h1&gt;&lt;h2 id=&#34;安装的依赖&#34;&gt;&lt;a href=&#34;#安装的依赖&#34; class=&#34;headerlink&#34; title=&#34;安装的依赖&#34;&gt;&lt;/a&gt;安装的依赖&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/24/linux-zhong-echo-xie-ru-wen-jian/</guid>
            <title>linux中echo写入文件</title>
            <link>https://0xdadream.github.io/2022/05/24/linux-zhong-echo-xie-ru-wen-jian/</link>
            <category>linux</category>
            <category>命令</category>
            <pubDate>Tue, 24 May 2022 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux中echo写入文件&#34;&gt;&lt;a href=&#34;#linux中echo写入文件&#34; class=&#34;headerlink&#34; title=&#34;linux中echo写入文件&#34;&gt;&lt;/a&gt;linux中echo写入文件&lt;/h1&gt;&lt;h2 id=&#34;覆盖文件内容&#34;&gt;&lt;a href=&#34;#覆盖文件内容&#34; class=&#34;headerlink&#34; title=&#34;覆盖文件内容&#34;&gt;&lt;/a&gt;覆盖文件内容&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; test.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;追加文件内容&#34;&gt;&lt;a href=&#34;#追加文件内容&#34; class=&#34;headerlink&#34; title=&#34;追加文件内容&#34;&gt;&lt;/a&gt;追加文件内容&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; test.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;后面会自动加/n&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/17/archlinux-she-zhi-zhong-wen/</guid>
            <title>archlinux设置中文</title>
            <link>https://0xdadream.github.io/2022/05/17/archlinux-she-zhi-zhong-wen/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Tue, 17 May 2022 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;archlinux设置中文&#34;&gt;&lt;a href=&#34;#archlinux设置中文&#34; class=&#34;headerlink&#34; title=&#34;archlinux设置中文&#34;&gt;&lt;/a&gt;archlinux设置中文&lt;/h1&gt;&lt;p&gt;执行&lt;code&gt;vim /etc/locale.gen&lt;/code&gt;将下面字符前的#去掉&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;zh_CN.GB18030 GB18030
zh_CN.UTF-8 UTF-8&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;locale -a&lt;/code&gt;查看当前可用locale&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/locale.conf&lt;/code&gt;添加&lt;code&gt;LANG=zh_CN.UTF-8&lt;/code&gt;，这不是必须的，会导致乱码&lt;/p&gt;
&lt;p&gt;这样做会好些&lt;/p&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;LANG&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zh_CN.UTF-8
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;LANGUAGE&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zh_CN:en_US&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到下面3个文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;.bashrc：每次使用终端时会应用此处的设置
.xinitrc：每次使用 startx 或 SLiM 来启动 X 窗口系统时会应用此处的设置
.xprofile：每次使用 GDM 等显示管理器时会应用此处的设置&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装字体&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman &lt;span class=&#34;token parameter variable&#34;&gt;-S&lt;/span&gt; wqy-zenhei&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后添加如下到上述三个文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;LANG&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zh_CN.UTF8
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;LANGUAGE&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zh_CN:en_US
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;XMODIFIERS&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;@im&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;WQY
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;wqy&#34;&lt;/span&gt;
&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;QT_IM_MODULE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;wqy&#34;&lt;/span&gt;
wqy &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/17/linux-she-zhi-root-mi-ma/</guid>
            <title>linux设置root密码</title>
            <link>https://0xdadream.github.io/2022/05/17/linux-she-zhi-root-mi-ma/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Tue, 17 May 2022 04:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux设置root密码&#34;&gt;&lt;a href=&#34;#linux设置root密码&#34; class=&#34;headerlink&#34; title=&#34;linux设置root密码&#34;&gt;&lt;/a&gt;linux设置root密码&lt;/h1&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#输入你的密码&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/17/linux-kai-qi-ssh/</guid>
            <title>linux开启ssh</title>
            <link>https://0xdadream.github.io/2022/05/17/linux-kai-qi-ssh/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Tue, 17 May 2022 03:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux开启ssh&#34;&gt;&lt;a href=&#34;#linux开启ssh&#34; class=&#34;headerlink&#34; title=&#34;linux开启ssh&#34;&gt;&lt;/a&gt;linux开启ssh&lt;/h1&gt;&lt;h2 id=&#34;kali&#34;&gt;&lt;a href=&#34;#kali&#34; class=&#34;headerlink&#34; title=&#34;kali&#34;&gt;&lt;/a&gt;kali&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; /etc/ssh/sshd_config

&lt;span class=&#34;token comment&#34;&gt;#修改&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#PermitRootLogin prohibit-password   改为 PermitRootLogin yes&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;#PasswordAuthentication yes  改为   PasswordAuthentication yes&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#Esc-&amp;gt;:-&amp;gt;wq保存&lt;/span&gt;

&lt;span class=&#34;token comment&#34;&gt;#启动&lt;/span&gt;
/etc/init.d/ssh start 
or
&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;service&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt; start

&lt;span class=&#34;token comment&#34;&gt;#开机启动&lt;/span&gt;
update-rc.d &lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ubuntu&#34;&gt;&lt;a href=&#34;#ubuntu&#34; class=&#34;headerlink&#34; title=&#34;ubuntu&#34;&gt;&lt;/a&gt;ubuntu&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; openssh-server

&lt;span class=&#34;token comment&#34;&gt;#启动&lt;/span&gt;
/etc/init.d/ssh start&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/17/ubuntu22.04lts-bu-neng-yun-xing-appimage/</guid>
            <title>ubuntu22.04LTS不能运行Appimage</title>
            <link>https://0xdadream.github.io/2022/05/17/ubuntu22.04lts-bu-neng-yun-xing-appimage/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Tue, 17 May 2022 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ubuntu22-04LTS不能运行Appimage&#34;&gt;&lt;a href=&#34;#ubuntu22-04LTS不能运行Appimage&#34; class=&#34;headerlink&#34; title=&#34;ubuntu22.04LTS不能运行Appimage&#34;&gt;&lt;/a&gt;ubuntu22.04LTS不能运行Appimage&lt;/h1&gt;&lt;h2 id=&#34;先换个源&#34;&gt;&lt;a href=&#34;#先换个源&#34; class=&#34;headerlink&#34; title=&#34;先换个源&#34;&gt;&lt;/a&gt;先换个源&lt;/h2&gt;&lt;p&gt;执行&lt;code&gt;vim /etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将下面内容任选一个加入&lt;/p&gt;
&lt;p&gt;阿里&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;中科大&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;网易&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;deb http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ jammy main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ jammy-security main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ jammy-updates main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ jammy-proposed main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ jammy-backports main restricted universe multiverse&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;先切换到root，也可以直接像下面使用sudo&#34;&gt;&lt;a href=&#34;#先切换到root，也可以直接像下面使用sudo&#34; class=&#34;headerlink&#34; title=&#34;先切换到root，也可以直接像下面使用sudo&#34;&gt;&lt;/a&gt;先切换到root，也可以直接像下面使用sudo&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-i&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装libfuse库&#34;&gt;&lt;a href=&#34;#安装libfuse库&#34; class=&#34;headerlink&#34; title=&#34;安装libfuse库&#34;&gt;&lt;/a&gt;安装libfuse库&lt;/h2&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libfuse2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/12/ubuntu-xu-ni-ji-jin-ru-initramfs-mo-shi/</guid>
            <title>ubuntu虚拟机进入initramfs模式</title>
            <link>https://0xdadream.github.io/2022/05/12/ubuntu-xu-ni-ji-jin-ru-initramfs-mo-shi/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Thu, 12 May 2022 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;ubuntu虚拟机进入initramfs模式&#34;&gt;&lt;a href=&#34;#ubuntu虚拟机进入initramfs模式&#34; class=&#34;headerlink&#34; title=&#34;ubuntu虚拟机进入initramfs模式&#34;&gt;&lt;/a&gt;ubuntu虚拟机进入initramfs模式&lt;/h1&gt;&lt;p&gt;可能是某个分区的出现了问题&lt;/p&gt;
&lt;p&gt;查看你的命令行，查看是否有如&lt;code&gt;/dev/sda5分区&lt;/code&gt;信息&lt;/p&gt;
&lt;p&gt;如果有，执行&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;fsck&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; /dev/sda5&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后重启，其他分区也相同&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2022/05/06/neither-flex-nor-lex-was-found/</guid>
            <title>Neither flex nor lex was found</title>
            <link>https://0xdadream.github.io/2022/05/06/neither-flex-nor-lex-was-found/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Fri, 06 May 2022 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Neither-flex-nor-lex-was-found&#34;&gt;&lt;a href=&#34;#Neither-flex-nor-lex-was-found&#34; class=&#34;headerlink&#34; title=&#34;Neither flex nor lex was found&#34;&gt;&lt;/a&gt;Neither flex nor lex was found&lt;/h1&gt;&lt;p&gt;编译&lt;code&gt;./configure&lt;/code&gt;libpcap时报错Neither flex nor lex was found&lt;/p&gt;
&lt;p&gt;安装flex，bison就能解决&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; flex
&lt;span class=&#34;token function&#34;&gt;apt-get&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; bison&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;报错：&lt;code&gt;libpcap.so.1: cannot open shared object file: No such file or directory&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行，添加一个链接&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /usr/local/lib/libpcap.so.1 /usr/lib/libpcap.so.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/09/08/linux-ming-ling/</guid>
            <title>linux命令</title>
            <link>https://0xdadream.github.io/2021/09/08/linux-ming-ling/</link>
            <category>linux</category>
            <category>学习</category>
            <pubDate>Wed, 08 Sep 2021 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux命令&#34;&gt;&lt;a href=&#34;#linux命令&#34; class=&#34;headerlink&#34; title=&#34;linux命令&#34;&gt;&lt;/a&gt;linux命令&lt;/h1&gt;&lt;h2 id=&#34;netstat-查看Linux中网络系统状态信息&#34;&gt;&lt;a href=&#34;#netstat-查看Linux中网络系统状态信息&#34; class=&#34;headerlink&#34; title=&#34;netstat-查看Linux中网络系统状态信息&#34;&gt;&lt;/a&gt;netstat-查看Linux中网络系统状态信息&lt;/h2&gt;&lt;p&gt;选项&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;-a或--all：显示所有连线中的Socket；
-A&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;网络类型&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;或--&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;网络类型&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;：列出该网络类型连线中的相关地址；
-c或--continuous：持续列出网络状态；
-C或--cache：显示路由器配置的快取信息；
-e或--extend：显示网络其他相关信息；
-F或--fib：显示FIB；
-g或--groups：显示多重广播功能群组组员名单；
-h或--help：在线帮助；
-i或--interfaces：显示网络界面信息表单；
-l或--listening：显示监控中的服务器的Socket；
-M或--masquerade：显示伪装的网络连线；
-n或--numeric：直接使用ip地址，而不通过域名服务器；
-N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称；
-o或--timers：显示计时器；
-p或--programs：显示正在使用Socket的程序识别码和程序名称；
-r或--route：显示Routing Table；
-s或--statistice：显示网络工作信息统计表；
-t或--tcp：显示TCP传输协议的连线状况；
-u或--udp：显示UDP传输协议的连线状况；
-v或--verbose：显示指令执行过程；
-V或--version：显示版本信息；
-w或--raw：显示RAW传输协议的连线状况；
-x或--unix：此参数的效果和指定&lt;span class=&#34;token string&#34;&gt;&#34;-A unix&#34;&lt;/span&gt;参数相同；
--ip或--inet：此参数的效果和指定&lt;span class=&#34;token string&#34;&gt;&#34;-A inet&#34;&lt;/span&gt;参数相同。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;chmod&#34;&gt;&lt;a href=&#34;#chmod&#34; class=&#34;headerlink&#34; title=&#34;chmod&#34;&gt;&lt;/a&gt;chmod&lt;/h2&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt; 命令在 Unix 和类 Unix 操作系统中用于更改文件和目录的权限。&lt;/p&gt;
&lt;h3 id=&#34;基本用法&#34;&gt;&lt;a href=&#34;#基本用法&#34; class=&#34;headerlink&#34; title=&#34;基本用法&#34;&gt;&lt;/a&gt;基本用法&lt;/h3&gt;&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt; 命令的一般语法是：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;选项&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; 模式 文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模式&lt;/strong&gt;：指定要设置的权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件&lt;/strong&gt;：指定要更改权限的文件或目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;权限表示&#34;&gt;&lt;a href=&#34;#权限表示&#34; class=&#34;headerlink&#34; title=&#34;权限表示&#34;&gt;&lt;/a&gt;权限表示&lt;/h3&gt;&lt;p&gt;权限可以用符号或数字来表示。&lt;/p&gt;
&lt;h3 id=&#34;符号表示&#34;&gt;&lt;a href=&#34;#符号表示&#34; class=&#34;headerlink&#34; title=&#34;符号表示&#34;&gt;&lt;/a&gt;符号表示&lt;/h3&gt;&lt;p&gt;权限由三组三个字符表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一组字符是文件所有者（用户）的权限。&lt;/li&gt;
&lt;li&gt;第二组字符是文件所有者所属组的权限。&lt;/li&gt;
&lt;li&gt;第三组字符是其他用户的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每组可以有以下字符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;（读）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;（写）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;（执行）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rwxr-xr--&lt;/code&gt; 表示文件所有者有读、写、执行权限；组有读、执行权限；其他用户只有读权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数字表示&#34;&gt;&lt;a href=&#34;#数字表示&#34; class=&#34;headerlink&#34; title=&#34;数字表示&#34;&gt;&lt;/a&gt;数字表示&lt;/h3&gt;&lt;p&gt;权限也可以用八进制（base-8）数字表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读由 &lt;code&gt;4&lt;/code&gt; 表示。&lt;/li&gt;
&lt;li&gt;写由 &lt;code&gt;2&lt;/code&gt; 表示。&lt;/li&gt;
&lt;li&gt;执行由 &lt;code&gt;1&lt;/code&gt; 表示。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;权限的总和表示最终权限：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;7&lt;/code&gt;（读 + 写 + 执行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;6&lt;/code&gt;（读 + 写）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5&lt;/code&gt;（读 + 执行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt;（只有读）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;（没有权限）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;755&lt;/code&gt; 表示文件所有者有 &lt;code&gt;7&lt;/code&gt;（读、写、执行），组有 &lt;code&gt;5&lt;/code&gt;（读、执行），其他用户有 &lt;code&gt;5&lt;/code&gt;（读、执行）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例&#34;&gt;&lt;a href=&#34;#示例&#34; class=&#34;headerlink&#34; title=&#34;示例&#34;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;符号表示更改权限：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; u+x file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;给 &lt;code&gt;file.txt&lt;/code&gt; 的所有者添加执行权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数字表示更改权限：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;644&lt;/span&gt; file.txt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置 &lt;code&gt;file.txt&lt;/code&gt; 的所有者有读和写权限，组和其他用户只有读权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;递归更改权限：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-R&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;755&lt;/span&gt; /path/to/directory&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置 &lt;code&gt;/path/to/directory&lt;/code&gt; 内所有文件和目录的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;选项&#34;&gt;&lt;a href=&#34;#选项&#34; class=&#34;headerlink&#34; title=&#34;选项&#34;&gt;&lt;/a&gt;选项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;：递归更改文件和目录的权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;：详细模式。对每个处理的文件输出诊断信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;：类似详细模式，但仅在更改时报告。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;curl&#34;&gt;&lt;a href=&#34;#curl&#34; class=&#34;headerlink&#34; title=&#34;curl&#34;&gt;&lt;/a&gt;curl&lt;/h2&gt;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt; 是一个非常强大的命令行工具，用于从命令行传输数据。它支持多种协议，如 HTTP, HTTPS, FTP, 和 SMTP。你可以用它来发送 GET 请求、POST 请求、下载文件，甚至与 API 交互。以下是 &lt;code&gt;curl&lt;/code&gt; 的一些基本用法示例。&lt;/p&gt;
&lt;h3 id=&#34;1-基本用法&#34;&gt;&lt;a href=&#34;#1-基本用法&#34; class=&#34;headerlink&#34; title=&#34;1. 基本用法&#34;&gt;&lt;/a&gt;1. 基本用法&lt;/h3&gt;&lt;p&gt;最简单的 &lt;code&gt;curl&lt;/code&gt; 用法就是发送一个 GET 请求并输出响应内容：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会在终端中显示 &lt;code&gt;http://example.com&lt;/code&gt; 的网页内容。&lt;/p&gt;
&lt;h3 id=&#34;2-保存响应到文件&#34;&gt;&lt;a href=&#34;#2-保存响应到文件&#34; class=&#34;headerlink&#34; title=&#34;2. 保存响应到文件&#34;&gt;&lt;/a&gt;2. 保存响应到文件&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;-o&lt;/code&gt; 选项可以将响应保存到文件中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-o&lt;/span&gt; example.html http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将 &lt;code&gt;example.com&lt;/code&gt; 的内容保存到 &lt;code&gt;example.html&lt;/code&gt; 文件中。&lt;/p&gt;
&lt;h3 id=&#34;3-发送-POST-请求&#34;&gt;&lt;a href=&#34;#3-发送-POST-请求&#34; class=&#34;headerlink&#34; title=&#34;3. 发送 POST 请求&#34;&gt;&lt;/a&gt;3. 发送 POST 请求&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;-d&lt;/code&gt; 选项发送 POST 请求。以下是一个发送表单数据的例子：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name=John&amp;amp;age=30&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; POST http://example.com/post&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-X&lt;/code&gt; 选项用于指定请求方法。在这里，我们明确指定为 POST 请求。&lt;/p&gt;
&lt;h3 id=&#34;4-使用自定义请求头&#34;&gt;&lt;a href=&#34;#4-使用自定义请求头&#34; class=&#34;headerlink&#34; title=&#34;4. 使用自定义请求头&#34;&gt;&lt;/a&gt;4. 使用自定义请求头&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;-H&lt;/code&gt; 选项添加自定义请求头：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-H&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Authorization: Bearer your_token_here&#34;&lt;/span&gt; http://example.com/secure&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这在访问需要认证的 API 时非常有用。&lt;/p&gt;
&lt;h3 id=&#34;5-下载文件&#34;&gt;&lt;a href=&#34;#5-下载文件&#34; class=&#34;headerlink&#34; title=&#34;5. 下载文件&#34;&gt;&lt;/a&gt;5. 下载文件&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;-O&lt;/code&gt; 选项可以直接下载文件，并保留文件的原始名称：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-O&lt;/span&gt; http://example.com/file.zip&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将 &lt;code&gt;file.zip&lt;/code&gt; 下载到当前目录。&lt;/p&gt;
&lt;h3 id=&#34;6-处理重定向&#34;&gt;&lt;a href=&#34;#6-处理重定向&#34; class=&#34;headerlink&#34; title=&#34;6. 处理重定向&#34;&gt;&lt;/a&gt;6. 处理重定向&lt;/h3&gt;&lt;p&gt;默认情况下，&lt;code&gt;curl&lt;/code&gt; 不会跟随重定向。你可以使用 &lt;code&gt;-L&lt;/code&gt; 选项让它跟随重定向：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-L&lt;/span&gt; http://short.url&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会跟随重定向到最终的 URL 并获取内容。&lt;/p&gt;
&lt;h3 id=&#34;7-显示详细信息&#34;&gt;&lt;a href=&#34;#7-显示详细信息&#34; class=&#34;headerlink&#34; title=&#34;7. 显示详细信息&#34;&gt;&lt;/a&gt;7. 显示详细信息&lt;/h3&gt;&lt;p&gt;如果你想查看请求和响应的详细信息，可以使用 &lt;code&gt;-v&lt;/code&gt; 选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会显示所有请求头、响应头以及其它调试信息。&lt;/p&gt;
&lt;h3 id=&#34;8-使用代理&#34;&gt;&lt;a href=&#34;#8-使用代理&#34; class=&#34;headerlink&#34; title=&#34;8. 使用代理&#34;&gt;&lt;/a&gt;8. 使用代理&lt;/h3&gt;&lt;p&gt;如果你需要通过代理访问网络资源，可以使用 &lt;code&gt;-x&lt;/code&gt; 选项：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-x&lt;/span&gt; http://proxy.example.com:8080 http://example.com&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-上传文件&#34;&gt;&lt;a href=&#34;#9-上传文件&#34; class=&#34;headerlink&#34; title=&#34;9. 上传文件&#34;&gt;&lt;/a&gt;9. 上传文件&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;-F&lt;/code&gt; 选项上传文件：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-F&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;file=@/path/to/file&#34;&lt;/span&gt; http://example.com/upload&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这会将指定的文件上传到服务器。&lt;/p&gt;
&lt;h3 id=&#34;10-指定请求方法&#34;&gt;&lt;a href=&#34;#10-指定请求方法&#34; class=&#34;headerlink&#34; title=&#34;10. 指定请求方法&#34;&gt;&lt;/a&gt;10. 指定请求方法&lt;/h3&gt;&lt;p&gt;尽管 &lt;code&gt;curl&lt;/code&gt; 默认发送的是 GET 请求，你也可以使用 &lt;code&gt;-X&lt;/code&gt; 选项指定其他方法，如 PUT, DELETE 等：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-X&lt;/span&gt; DELETE http://example.com/resource/123&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;进阶用法&#34;&gt;&lt;a href=&#34;#进阶用法&#34; class=&#34;headerlink&#34; title=&#34;进阶用法&#34;&gt;&lt;/a&gt;进阶用法&lt;/h3&gt;&lt;p&gt;&lt;code&gt;curl&lt;/code&gt; 还支持更多复杂的用法，如通过 &lt;code&gt;--data-binary&lt;/code&gt; 发送原始二进制数据、使用 &lt;code&gt;--header&lt;/code&gt; 添加多个请求头、通过 &lt;code&gt;-u&lt;/code&gt; 进行 HTTP 基本认证等。&lt;/p&gt;
&lt;p&gt;如果你想查看 &lt;code&gt;curl&lt;/code&gt; 的所有功能和选项，可以通过以下命令查看手册：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;man&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者查看帮助文档：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token function&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--help&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/09/08/linux-xi-tong-mu-lu-gong-neng/</guid>
            <title>linux系统目录功能</title>
            <link>https://0xdadream.github.io/2021/09/08/linux-xi-tong-mu-lu-gong-neng/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Wed, 08 Sep 2021 02:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;linux系统目录功能&#34;&gt;&lt;a href=&#34;#linux系统目录功能&#34; class=&#34;headerlink&#34; title=&#34;linux系统目录功能&#34;&gt;&lt;/a&gt;linux系统目录功能&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://www.runoob.com/wp-content/uploads/2014/06/d0c50-linux2bfile2bsystem2bhierarchy.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录名称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;主目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/bin&lt;/td&gt;
&lt;td&gt;存放二进制文件（可执行文件）（普通用户系统命令）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/sbin&lt;/td&gt;
&lt;td&gt;存放管理员使用的系统命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/boot&lt;/td&gt;
&lt;td&gt;存放启动系统的的一些核心文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev&lt;/td&gt;
&lt;td&gt;linux的外部设备，以文件方式访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc&lt;/td&gt;
&lt;td&gt;存放所有的系统管理所需要的配置文件和子目录（全局配置文件）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;td&gt;用户主目录，以用户名命名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lib&lt;/td&gt;
&lt;td&gt;存放着32位系统最基本的动态连接共享库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lib64&lt;/td&gt;
&lt;td&gt;存放着64位系统最基本的动态连接共享库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lost+found&lt;/td&gt;
&lt;td&gt;系统非法关机后会存放一些文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/root&lt;/td&gt;
&lt;td&gt;超级用户的家目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/run&lt;/td&gt;
&lt;td&gt;临时文件系统，存储系统启动以来的信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/media&lt;/td&gt;
&lt;td&gt;类windows的其他设备，例如U盘、光驱等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/mnt&lt;/td&gt;
&lt;td&gt;系统提供该目录是为了让用户临时挂载别的文件系统，例如外部硬盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/opt&lt;/td&gt;
&lt;td&gt;给主机额外安装软件所摆放的目录（第三方软件）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc&lt;/td&gt;
&lt;td&gt;存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息，这个目录的内容不在硬盘上而是在内存里&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/srv&lt;/td&gt;
&lt;td&gt;存放一些服务启动之后需要提取的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/sys&lt;/td&gt;
&lt;td&gt;用于输出当前系统硬件设备相关信息虚拟文件系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/tmp&lt;/td&gt;
&lt;td&gt;存放一些临时文件的，可以随便操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/selinux&lt;/td&gt;
&lt;td&gt;类似于 windows 的防火墙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr&lt;/td&gt;
&lt;td&gt;用于存储系统软件资源，类似于 windows 下的 program files 目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/bin&lt;/td&gt;
&lt;td&gt;系统用户使用的应用程序，与系统启动无关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/sbin&lt;/td&gt;
&lt;td&gt;超级用户使用的应用程序，与系统启动无关&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/src&lt;/td&gt;
&lt;td&gt;内核源代码默认的放置目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/lib&lt;/td&gt;
&lt;td&gt;库文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/local/&lt;/td&gt;
&lt;td&gt;手工安装的软件保存位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/share/&lt;/td&gt;
&lt;td&gt;应用程序的资源文件保存位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/include&lt;/td&gt;
&lt;td&gt;C/C++ 等编程语言头文件的放置目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var&lt;/td&gt;
&lt;td&gt;经常被修改的目录放在这个目录，例如日志，动态的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/lib&lt;/td&gt;
&lt;td&gt;程序运行中需要调用或改变的数据保存位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/log/&lt;/td&gt;
&lt;td&gt;登陆文件放置的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/run/&lt;/td&gt;
&lt;td&gt;一些服务和程序运行后，PID（进程 ID）保存位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/sysconfig/network-scripts/ifcfg-eth0&lt;/td&gt;
&lt;td&gt;配置网址及GW，使得网卡生效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/sysconfig/network&lt;/td&gt;
&lt;td&gt;修改机器名及网卡启动，网关等配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/resolv.conf&lt;/td&gt;
&lt;td&gt;设置本机的客户端DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/hosts&lt;/td&gt;
&lt;td&gt;设定用户IP与名字的对应表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/fstab&lt;/td&gt;
&lt;td&gt;记录开机要mount的文件记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/inittab&lt;/td&gt;
&lt;td&gt;定启动时init进程把系统设置成怎样的runlevel，以及加载相关的启动文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/exports&lt;/td&gt;
&lt;td&gt;设定NFS网络文件系统的配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/init.d&lt;/td&gt;
&lt;td&gt;存放系统或者服务器以systemV模式启动的脚本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/xinit.d&lt;/td&gt;
&lt;td&gt;如果服务器是通过xinetd模式运行的，他的脚本要放在这个目录下&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/profile&lt;/td&gt;
&lt;td&gt;系统全局环境变量配置路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/profile.d&lt;/td&gt;
&lt;td&gt;加载登录程序的一个目录命令或文件独立存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/issue&lt;/td&gt;
&lt;td&gt;记录用户登录前的显示信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/motd&lt;/td&gt;
&lt;td&gt;登录提醒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/redhat-release&lt;/td&gt;
&lt;td&gt;版本号和名称信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/group&lt;/td&gt;
&lt;td&gt;设定用户的组名与相关信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/passwd&lt;/td&gt;
&lt;td&gt;账号信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/shadow&lt;/td&gt;
&lt;td&gt;密码信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/sudoers&lt;/td&gt;
&lt;td&gt;可以用sudo命令配置的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/securetty&lt;/td&gt;
&lt;td&gt;设定哪些终端可以让root登录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/rsyslof.conf&lt;/td&gt;
&lt;td&gt;日志设置文件，在6.4 chkconfig –list rsyslog&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr/local&lt;/td&gt;
&lt;td&gt;用来存放用户自编译安装软件目录，通过源码包安装的软件，未指定安装路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/log/message&lt;/td&gt;
&lt;td&gt;系统默认日志文件，/var/log各种日志存放地&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/log/secure&lt;/td&gt;
&lt;td&gt;记录登录系统存取信息的文件，系统日志的安全信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/log/wtmp&lt;/td&gt;
&lt;td&gt;记录登录者的信息文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/spool/cron/root&lt;/td&gt;
&lt;td&gt;定时任务crontab默认目录，按用户名命名的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/spool/mail&lt;/td&gt;
&lt;td&gt;系统用户邮件存放目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var/spool/clientmqueuesendmail&lt;/td&gt;
&lt;td&gt;邮件临时存放目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/login.defs&lt;/td&gt;
&lt;td&gt;所有用户登录时的缺省配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/modprobe.conf&lt;/td&gt;
&lt;td&gt;内核模块额外参数设定量被尽，无法写入文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc&lt;/td&gt;
&lt;td&gt;虚拟目录是内存的映射&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/sysctl.conf&lt;/td&gt;
&lt;td&gt;放在其下面永久生效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc/cpuinfo&lt;/td&gt;
&lt;td&gt;关于处理器的信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc/meminfo&lt;/td&gt;
&lt;td&gt;系统内存信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc/interrupts&lt;/td&gt;
&lt;td&gt;正在使用的中断，和曾经有过多少个中断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc/loadavg&lt;/td&gt;
&lt;td&gt;系统负载信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/DIR_COLORS&lt;/td&gt;
&lt;td&gt;设定颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/host.conf&lt;/td&gt;
&lt;td&gt;文件说明用户的系统如何查询节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/hosts.allow&lt;/td&gt;
&lt;td&gt;通过它可以允许某个ip或者ip段的客户访问linux的某项服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/hosts.deny&lt;/td&gt;
&lt;td&gt;通过它可以拒绝某个ip或者ip段的客户访问linux的某项服务&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://0xdadream.github.io/2021/08/13/jie-jue-kali-zi-ti-tai-xiao/</guid>
            <title>解决kali字体太小</title>
            <link>https://0xdadream.github.io/2021/08/13/jie-jue-kali-zi-ti-tai-xiao/</link>
            <category>tip</category>
            <category>linux</category>
            <pubDate>Fri, 13 Aug 2021 09:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;解决kali字体太小&#34;&gt;&lt;a href=&#34;#解决kali字体太小&#34; class=&#34;headerlink&#34; title=&#34;解决kali字体太小&#34;&gt;&lt;/a&gt;解决kali字体太小&lt;/h1&gt;&lt;p&gt;桌面右键-&amp;gt;应用程序-&amp;gt;设置-&amp;gt;外观-&amp;gt;设置-&amp;gt; 窗口缩放x2&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;GDK_SCALE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.xsessionrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;强制光标变大&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;XCURSOR_SIZE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.xsessionrc&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;桌面右键-&amp;gt;应用程序-&amp;gt;设置-&amp;gt;外观-&amp;gt;字体-&amp;gt;DPI=180   调字体大小&lt;/p&gt;
&lt;p&gt;以上如果不成功&lt;/p&gt;
&lt;p&gt;左上角搜索&lt;code&gt;Kali HiDPI Mode&lt;/code&gt;点击一下即可切换缩放&lt;/p&gt;
&lt;p&gt;多尝试，结合不同的点调试&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
